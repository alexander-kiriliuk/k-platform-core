var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AbstractAuthGuard.html",[0,3.465,1,3.669]],["body/guards/AbstractAuthGuard.html",[1,5.236,2,6.317,3,0.113,4,0.092,5,0.023,6,8.231,7,4.542,8,0.171,9,2.598,10,0.134,11,6.83,12,3.753,13,1.372,14,7.651,15,0.294,16,0.693,17,5.574,18,2.695,19,4.147,20,6.089,21,3.419,22,4.263,23,1.372,24,2.792,25,2.389,26,6.83,27,6.83,28,6.089,29,6.309,30,0.608,31,5.095,32,6.83,33,2.906,34,3.441,35,3.048,36,7.337,37,7.337,38,2.718,39,6.83,40,4.151,41,2.671,42,5.555,43,1.125,44,0.007,45,0.406,46,0.15,47,0.94,48,5.958,49,5.6,50,0.999,51,2.459,52,1.372,53,2.238,54,6.83,55,5.095,56,6.83,57,5.906,58,1.182,59,4.944,60,6.309,61,4.119,62,6.83,63,0.432,64,5.095,65,4.151,66,3.538,67,6.83,68,4.006,69,3.538,70,4.944,71,2.572,72,6.83,73,4.313,74,0.209,75,4.178,76,1.023,77,4.178,78,4.178,79,4.178,80,5.095,81,0.99,82,4.178,83,3.906,84,3.906,85,3.689,86,0.099,87,1.465,88,1.29,89,2.743,90,4.542,91,5.095,92,6.83,93,2.28,94,5.095,95,5.095,96,4.542,97,3.753,98,1.878,99,6.83,100,5.095,101,5.095,102,5.095,103,2.091,104,4.542,105,5.095,106,5.095,107,5.095,108,5.095,109,5.095,110,5.095,111,5.095,112,5.095,113,5.095,114,5.095,115,0.004,116,0.004]],["title/classes/AbstractProcess.html",[10,0.083,117,3.925]],["body/classes/AbstractProcess.html",[3,0.086,4,0.07,5,0.018,8,0.152,9,2.543,10,0.141,15,0.224,16,0.768,17,5.868,18,2.471,21,3.365,23,1.133,24,3.06,25,2.361,30,0.724,34,3.68,43,0.971,44,0.007,45,0.351,46,0.157,47,0.947,49,4.627,50,1.003,51,2.031,63,0.373,74,0.207,76,0.779,86,0.075,88,1.299,89,1.752,93,3.163,98,1.829,103,1.574,115,0.004,116,0.004,117,4.627,118,1.163,119,9.251,120,3.879,121,1.292,122,4.215,123,3.101,124,3.101,125,3.31,126,5.455,127,4.816,128,5.99,129,6.512,130,5.031,131,6.512,132,6.512,133,5.031,134,3.911,135,5.619,136,5.93,137,2.349,138,5.643,139,3.879,140,4.377,141,3.879,142,4.201,143,3.879,144,0.945,145,3.879,146,4.326,147,4.55,148,5.031,149,4.457,150,3.879,151,6.695,152,4.451,153,7.221,154,5.031,155,7.221,156,7.221,157,7.221,158,5.031,159,5.031,160,3.879,161,5.031,162,3.879,163,5.6,164,5.031,165,3.879,166,3.885,167,2.451,168,3.879,169,4.326,170,2.113,171,3.879,172,2.508,173,3.458,174,1.656,175,3.607,176,3.879,177,5.031,178,5.637,179,4.326,180,2.698,181,3.898,182,1.994,183,0.846,184,1.611,185,3.201,186,6.92,187,2.67,188,2.808,189,3.18,190,2.973,191,3.879,192,3.879,193,3.879,194,2.67,195,3.18,196,3.18,197,3.458,198,3.879,199,3.879,200,3.879,201,3.879,202,3.18,203,1.183,204,8.36,205,3.458,206,3.18,207,3.458,208,7.762,209,3.879,210,3.879,211,3.879,212,2.357,213,3.879,214,5.643,215,3.879,216,5.031,217,3.879,218,2.704,219,2.449,220,4.085,221,3.879,222,3.879,223,3.458,224,5.643,225,3.879,226,3.879,227,3.879,228,3.879,229,3.879,230,7.762,231,3.879,232,6.92,233,3.879,234,3.879,235,3.879,236,3.879,237,3.879,238,3.879,239,3.879,240,1.335,241,8.1,242,3.458,243,5.643,244,5.643,245,3.879,246,3.879,247,2.275,248,3.458,249,3.879,250,3.879,251,3.879,252,3.879,253,3.879,254,3.458,255,3.879,256,6.652,257,6.652,258,4.816,259,3.879,260,3.879]],["title/classes/AbstractUserSubscriber.html",[10,0.083,261,3.925]],["body/classes/AbstractUserSubscriber.html",[3,0.118,4,0.096,5,0.024,8,0.174,9,2.502,10,0.137,15,0.307,16,0.957,17,5.834,18,2.402,23,1.412,24,2.962,30,0.661,43,1.15,44,0.007,45,0.415,46,0.184,47,0.96,50,0.947,51,1.916,63,0.519,65,4.274,70,5.09,71,2.836,74,0.212,76,1.069,86,0.103,88,1.318,89,2.445,93,2.907,97,2.925,98,1.464,103,1.664,115,0.005,116,0.005,118,1.595,203,0.777,261,5.766,262,8.708,263,4.745,264,0.807,265,5.766,266,4.627,267,1.389,268,5.766,269,7.031,270,7.031,271,7.031,272,5.323,273,7.031,274,5.323,275,7.466,276,4.305,277,4.274,278,7.466,279,3.864,280,7.031,281,7.031,282,7.466,283,7.466,284,5.323,285,3.988,286,6.675,287,5.766,288,3.864,289,7.031,290,5.323,291,4.214,292,3.134,293,6.456,294,4.745,295,1.324,296,1.515,297,3.503,298,4.081,299,4.365,300,4.365,301,5.323,302,4.745,303,4.745,304,5.323,305,5.323,306,5.323,307,5.323,308,5.323,309,5.323,310,5.323,311,4.365,312,3.503,313,8.945,314,0.861,315,5.323,316,5.323,317,3.019,318,7.031,319,1.745,320,5.323,321,4.365,322,5.323,323,7.031,324,7.031,325,5.323,326,3.665]],["title/interfaces/AudioFileMetadata.html",[327,0.552,328,2.807]],["body/interfaces/AudioFileMetadata.html",[3,0.048,4,0.039,5,0.044,8,0.074,10,0.11,15,0.205,16,0.72,25,1.229,33,1.868,38,0.853,40,1.303,41,0.61,44,0.007,45,0.383,46,0.174,50,0.598,52,0.43,53,2.972,58,0.615,63,0.56,69,2.355,74,0.125,81,0.417,86,0.145,87,0.46,88,1.058,115,0.002,116,0.002,121,1.889,122,1.975,123,1.178,134,1.08,144,1.172,147,1.025,152,3.472,167,0.931,170,0.802,174,1.637,175,2.15,183,0.991,203,1.278,240,1.584,264,0.466,267,0.702,279,1.952,292,2.664,296,0.61,314,1.574,327,0.993,328,2.667,329,0.631,330,1.303,331,5.156,332,2.524,333,3.841,334,3.841,335,4.107,336,4.391,337,3.215,338,3.084,339,3.971,340,3.841,341,3.841,342,3.215,343,3.215,344,3.707,345,3.841,346,3.841,347,4.727,348,2.243,349,2.243,350,2.243,351,2.871,352,3.215,353,3.584,354,3.707,355,3.469,356,3.102,357,2.243,358,3.895,359,1.357,360,2.159,361,2.243,362,2.871,363,2.499,364,3.709,365,3.37,366,3.084,367,2.083,368,2.243,369,2.243,370,2.243,371,2.243,372,2.243,373,1.185,374,1.578,375,2.243,376,2.243,377,2.871,378,2.021,379,2.243,380,1.383,381,2.243,382,2.243,383,1.191,384,0.871,385,1.84,386,1.84,387,1.178,388,1.765,389,0.928,390,0.931,391,1.702,392,0.403,393,1.672,394,1.542,395,1.303,396,3.702,397,2.195,398,1.832,399,0.952,400,1.385,401,2.083,402,0.999,403,1.931,404,2.565,405,0.702,406,2.159,407,1.353,408,1.616,409,0.871,410,0.89,411,1.353,412,1.353,413,1.303,414,4.678,415,1.353,416,5.282,417,1.353,418,1.385,419,1.208,420,2.083,421,3.584,422,2.243,423,0.836,424,2.764,425,2.764,426,1.353,427,2.083,428,3.371,429,2.667,430,2.871,431,3.572,432,0.91,433,3.99,434,1.616,435,2.083,436,3.707,437,1.353,438,1.303,439,1.303,440,1.353,441,4.727,442,2.871,443,2.243,444,3.471,445,1.025,446,2.083,447,2.243,448,2.159,449,1.353,450,1.353,451,1.303,452,2.569,453,3.111,454,2.569,455,2.243,456,1.303,457,2.159,458,1.353,459,3.472,460,2.159,461,2.159,462,1.303,463,1.353,464,1.353,465,1.303,466,3.563,467,1.303,468,1.542,469,1.353,470,1.303,471,0.89,472,1.353,473,1.143,474,2.808,475,1.353,476,1.353,477,1.353,478,2.424,479,1.303,480,1.482,481,2.243,482,1.414,483,1.303,484,2.12,485,2.764,486,1.303,487,1.303,488,1.303,489,1.257,490,3.34,491,1.353,492,1.303,493,1.303,494,1.303,495,1.353,496,1.353,497,1.353,498,1.303,499,1.257,500,1.353,501,1.437,502,1.303,503,1.303,504,2.871,505,1.303,506,1.303,507,2.764,508,2.243,509,3.34,510,2.014,511,2.243,512,1.303,513,1.303,514,1.353,515,1.303,516,1.353,517,1.303,518,0.56,519,1.303,520,1.353,521,1.303,522,1.303,523,1.257,524,2.871,525,1.353,526,1.952,527,2.243,528,1.353,529,2.243,530,1.353,531,1.353,532,1.353,533,1.143,534,1.353,535,1.353,536,1.353,537,1.353,538,2.243,539,1.353,540,2.243,541,1.353,542,2.159,543,2.243,544,1.303,545,1.353,546,1.353,547,2.871,548,1.353,549,3.34,550,2.871,551,2.871,552,2.871,553,1.353,554,4.421,555,1.353,556,3.102,557,4.226,558,1.353,559,1.353,560,1.353,561,2.243,562,2.243,563,1.353,564,1.353,565,1.353,566,1.353,567,1.353,568,1.353,569,1.353,570,1.353,571,2.243,572,1.353,573,1.353,574,0.91,575,1.353,576,2.243,577,2.159,578,1.353,579,1.353,580,1.353,581,1.353,582,1.11,583,2.243,584,3.99,585,1.353,586,1.353,587,2.871,588,1.353,589,1.353,590,1.353,591,2.159,592,1.353,593,1.353,594,1.353,595,1.353,596,2.871,597,2.243,598,1.353,599,1.353,600,2.243,601,1.353,602,2.243,603,1.353,604,1.025,605,1.353,606,3.702,607,1.353,608,1.353,609,1.353,610,1.08,611,1.353,612,1.051,613,3.34,614,3.215,615,1.353,616,1.353,617,2.243,618,2.243,619,2.243,620,2.243,621,1.353,622,1.353,623,1.353,624,1.353,625,1.303,626,0.999,627,1.303,628,1.353,629,1.353,630,1.353,631,2.159,632,1.303,633,1.353,634,1.353,635,0.952,636,2.871,637,2.159,638,1.353,639,1.353,640,1.353,641,1.353,642,1.353,643,2.243,644,0.56,645,1.303,646,1.303,647,1.353,648,1.303,649,1.303,650,0.952,651,1.353,652,1.353,653,1.353,654,1.353,655,1.303,656,1.353,657,1.353,658,1.353,659,1.303,660,0.677,661,0.62,662,0.679,663,1.257,664,0.91,665,0.772,666,1.353,667,1.353,668,0.931,669,1.952,670,0.772,671,1.231,672,0.772,673,1.303,674,0.89,675,1.028,676,0.931,677,0.819,678,0.836,679,0.91,680,1.737,681,0.931,682,1.303,683,1.303,684,0.642,685,1.046,686,1.303,687,0.467,688,0.589,689,1.11,690,1.257]],["title/entities/AudioFileMetadataEntity.html",[264,0.49,691,3.669]],["body/entities/AudioFileMetadataEntity.html",[3,0.111,4,0.09,5,0.044,8,0.104,10,0.087,13,1.001,15,0.56,16,0.915,30,0.762,44,0.007,45,0.463,46,0.188,61,2.323,63,0.548,74,0.159,86,0.097,87,2.144,115,0.004,116,0.004,182,2.016,203,1.112,218,2.025,264,0.78,295,1.239,314,1.538,326,4.631,328,3.946,331,3.696,332,2.089,333,4.629,334,4.629,335,4.467,336,4.467,337,4.629,338,3.234,339,4.32,340,4.629,341,4.629,342,4.629,343,4.629,344,4.467,345,4.629,346,4.629,393,2.126,691,5.157,692,1.442,693,9.7,694,3.43,695,2.612,696,5.081,697,3.968,698,4.085,699,4.441,700,5.15,701,3.819,702,3.819,703,6.727,704,4.085,705,3.819,706,4.085,707,5.516,708,5.516,709,5.516,710,4.441,711,4.982,712,2.58,713,3.606,714,4.982,715,6.727,716,3.819,717,6.727,718,3.606,719,4.441,720,3.819,721,4.441,722,1.603,723,3.389,724,2.737,725,4.982,726,2.58,727,4.109,728,4.626,729,4.085]],["title/controllers/AuthController.html",[662,0.915,730,3.925]],["body/controllers/AuthController.html",[3,0.11,4,0.089,5,0.03,10,0.086,13,0.991,15,0.285,18,2.312,19,3.819,23,1.343,24,2.917,25,2.05,30,0.598,35,3.018,42,4.816,43,1.107,44,0.007,45,0.4,46,0.147,47,0.925,50,0.857,57,5.811,63,0.425,74,0.221,75,4.047,76,0.991,81,1.299,86,0.096,87,2.019,89,2.718,93,2.834,97,2.712,98,1.357,103,1.794,115,0.004,116,0.004,137,1.743,144,1.465,174,1.519,203,0.721,267,0.975,291,3.449,380,1.29,388,3.267,480,1.248,518,1.29,644,1.748,662,0.944,677,3.343,695,2.05,730,5.482,731,2.193,732,4.936,733,2.144,734,4.4,735,5.219,736,5.488,737,4.4,738,5.593,739,4.936,740,4.936,741,4.608,742,4.4,743,5.346,744,4.936,745,4.936,746,3.573,747,4.936,748,4.936,749,1.479,750,1.454,751,1.454,752,1.479,753,2.272,754,1.454,755,2.591,756,1.935,757,1.357,758,1.479,759,1.479,760,1.479,761,1.479,762,1.479,763,1.479,764,1.381,765,1.479,766,1.479,767,1.479,768,1.429,769,1.479,770,1.454,771,1.479,772,1.479,773,1.479,774,1.479,775,1.479,776,1.357,777,1.479,778,1.454,779,1.479,780,3.449,781,3.117,782,3.117,783,4.047,784,3.248,785,4.047,786,4.787,787,3.398,788,3.248,789,4.608,790,4.936,791,4.4,792,4.4,793,4.4,794,4.047,795,4.936,796,4.047,797,4.221,798,4.936,799,4.936,800,4.602,801,3.248,802,4.047,803,4.936,804,6.685,805,4.936,806,7.58,807,5.482,808,4.047,809,4.047,810,4.936,811,4.936,812,4.936,813,4.936,814,2.359,815,6.685,816,4.936,817,4.936,818,6.685,819,6.685,820,8.125,821,8.125,822,8.125,823,6.685,824,6.685,825,6.685,826,6.685,827,4.936,828,4.936,829,3.279,830,4.936,831,4.936,832,4.936,833,4.936,834,4.936,835,4.936,836,4.936]],["title/injectables/AuthGuard.html",[837,1.569,838,2.909]],["body/injectables/AuthGuard.html",[0,5.958,1,7.194,3,0.152,4,0.123,5,0.031,8,0.142,9,1.91,10,0.119,12,5.039,17,5.369,18,2.695,19,4.858,21,4.006,22,4.995,30,0.539,43,0.997,44,0.006,45,0.36,46,0.133,47,0.833,71,2.467,74,0.222,76,1.372,82,5.599,83,5.235,86,0.133,115,0.005,116,0.005,137,2.906,355,3.021,423,3.208,796,5.599,837,2.697,838,5.002,839,3.183,840,6.828,841,4.384,842,6.748,843,7.336,844,3.873,845,6.828,846,2.965,847,6.087,848,3.641,849,4.15]],["title/modules/AuthModule.html",[850,1.114,851,3.925]],["body/modules/AuthModule.html",[3,0.129,4,0.104,5,0.034,8,0.121,10,0.101,19,4.131,23,1.163,24,1.83,30,0.457,43,0.845,44,0.007,45,0.305,46,0.112,47,0.706,50,0.654,74,0.231,76,1.163,81,1.125,86,0.112,93,2.479,103,1.757,115,0.005,116,0.005,122,3.225,182,1.735,183,1.262,267,1.144,380,1.513,480,1.464,518,1.513,644,1.941,662,1.42,687,1.619,730,6.723,731,2.572,734,6.62,749,1.735,750,1.705,751,1.705,752,1.735,753,2.457,754,1.705,755,2.694,756,2.15,757,1.592,758,1.735,759,1.735,760,1.735,761,1.735,762,1.735,763,1.735,764,1.619,765,1.735,766,1.735,767,1.735,768,1.676,769,1.735,770,1.705,771,1.735,772,1.735,773,1.735,774,1.735,775,1.735,776,1.592,777,1.735,778,1.705,779,1.735,784,3.809,786,5.177,787,3.985,788,3.809,802,4.747,846,2.514,850,2.082,851,6.723,852,2.514,853,5.789,854,6.089,855,3.741,856,4.689,857,3.809,858,5.954,859,5.789,860,1.646,861,8.199,862,4.809,863,5.789,864,5.16,865,7.426,866,5.16,867,5.789,868,4.371,869,3.518,870,3.462,871,3.518,872,2.634,873,3.809,874,5.789,875,5.789,876,5.789,877,4.437,878,5.789,879,3.985,880,3.55,881,5.789,882,3.809,883,5.789,884,3.809,885,5.789,886,4.747,887,5.789,888,5.789,889,4.747,890,5.789,891,5.789,892,2.699,893,2.916,894,3.395,895,4.191,896,2.699]],["title/classes/AuthService.html",[10,0.083,786,3.022]],["body/classes/AuthService.html",[3,0.104,4,0.084,5,0.021,8,0.165,9,2.628,10,0.128,12,3.53,15,0.269,23,1.593,30,0.58,41,2.724,42,5.55,43,1.074,44,0.007,45,0.388,46,0.143,47,0.897,50,1.043,51,2.313,58,1.112,63,0.522,71,2.493,74,0.11,77,3.819,78,3.819,79,3.819,86,0.182,87,1.378,88,1.503,89,2.893,98,2.181,103,1.52,115,0.004,116,0.004,118,1.396,144,1.544,149,4.228,174,1.15,180,3.071,181,2.995,291,4.198,299,5.268,428,3.237,671,2.002,733,3.443,735,5.459,741,3.644,743,5.66,786,4.057,797,5.431,801,4.84,802,3.819,860,1.757,897,4.152,898,4.925,899,3.237,900,6.425,901,5.727,902,7.929,903,6.425,904,6.425,905,6.425,906,4.657,907,3.608,908,3.091,909,6.469,910,5.459,911,6.425,912,4.657,913,5.459,914,4.423,915,6.425,916,4.657,917,7.929,918,4.651,919,6.425,920,4.057,921,4.925,922,7.227,923,4.152,924,4.152,925,4.152,926,4.152,927,5.064,928,4.152,929,4.152,930,4.228,931,6.183,932,5.74,933,4.152,934,4.152,935,4.152,936,5.638,937,4.84,938,3.57,939,4.152,940,4.152,941,4.82,942,4.293,943,5.459,944,4.152,945,4.152,946,4.152,947,4.152,948,5.268,949,5.268,950,2.831,951,4.152,952,4.152,953,4.423,954,4.423,955,4.152,956,4.152]],["title/classes/BadRequestMsException.html",[10,0.083,957,4.267]],["body/classes/BadRequestMsException.html",[3,0.159,4,0.129,5,0.032,8,0.149,10,0.125,30,0.566,35,2.85,43,1.046,44,0.006,45,0.378,46,0.139,47,0.874,63,0.506,74,0.2,76,1.439,86,0.139,115,0.005,116,0.005,118,2.148,137,2.531,181,3.949,184,2.977,604,4.049,841,4.049,957,7.551,958,8.47,959,4.934,960,5.349,961,4.968,962,8.038,963,5.831,964,5.574,965,5.393,966,5.831,967,4.934,968,4.716,969,4.934,970,7.166]],["title/interfaces/BasicAuthController.html",[327,0.552,800,3.295]],["body/interfaces/BasicAuthController.html",[3,0.091,4,0.074,5,0.019,8,0.156,10,0.154,12,4.358,15,0.236,23,1.179,30,0.541,35,3.029,41,2.587,42,5.436,43,1.001,44,0.007,45,0.362,46,0.165,47,1.06,50,0.933,53,1.923,58,1.665,63,0.51,71,2.725,74,0.201,76,0.822,81,0.796,86,0.154,88,1.455,98,2.434,115,0.004,116,0.004,121,1.344,144,1.537,167,3.775,170,2.197,174,1.607,203,0.598,240,1.773,258,4.249,276,3.409,291,4.137,327,0.791,329,1.206,365,2.518,388,3.277,423,2.288,428,2.957,582,3.04,610,2.957,660,1.855,661,1.699,662,1.311,671,1.921,678,3.639,687,0.893,688,1.126,735,5.158,736,5.423,737,3.651,738,5.158,741,5.157,742,3.651,743,4.93,746,4.249,764,1.145,786,2.586,787,2.819,797,2.586,800,4.04,801,3.862,814,3.581,829,2.879,850,0.953,858,2.819,860,1.52,907,3.409,908,3.217,909,6.323,910,6.323,913,2.819,914,4.04,918,4.249,920,3.706,927,2.819,930,5.824,953,2.819,954,2.819,971,2.964,972,4.095,973,4.499,974,7.041,975,5.743,976,5.743,977,3.182,978,4.095,979,4.499,980,5.743,981,3.706,982,3.706,983,4.095,984,3.442,985,3.04,986,4.499,987,4.499,988,4.499,989,4.499,990,4.514,991,6.079,992,5.43,993,2.402,994,3.112,995,2.695,996,1.392,997,3.657,998,1.957,999,3.139,1000,3.139,1001,3.553,1002,4.514,1003,2.695,1004,3.139,1005,3.139,1006,3.139,1007,3.139,1008,3.139,1009,2.964,1010,4.331,1011,3.139,1012,4.499,1013,3.139,1014,3.139,1015,1.957]],["title/interfaces/BasicCaptchaController.html",[327,0.552,1016,3.295]],["body/interfaces/BasicCaptchaController.html",[3,0.122,4,0.098,5,0.025,8,0.149,9,2.367,10,0.16,15,0.315,23,1.437,30,0.565,33,2.816,35,2.674,43,0.798,44,0.007,45,0.288,46,0.183,47,0.666,50,1.019,52,1.097,53,2.344,58,1.381,63,0.474,65,4.847,68,4.196,70,5.179,73,3.45,74,0.169,86,0.171,87,1.172,88,1.197,115,0.005,116,0.005,121,1.938,144,1.629,174,1.701,203,1.044,296,1.555,319,2.344,327,0.919,329,1.609,373,1.824,388,2.932,389,1.87,391,2.678,418,2.13,431,2.678,526,3.003,660,2.261,661,2.071,662,1.525,671,2.097,687,1.191,688,1.503,741,4.058,789,3.321,814,4.801,829,2.68,850,1.272,860,1.585,907,3.255,941,4.847,977,2.046,981,3.45,990,5.248,992,4.707,993,3.205,1016,4.925,1017,4.189,1018,6.486,1019,5.179,1020,5.464,1021,5.484,1022,5.929,1023,5.464,1024,5.866,1025,5.866,1026,6.046,1027,5.179,1028,3.604,1029,4.48,1030,3.205,1031,3.956,1032,3.956,1033,3.003,1034,3.596,1035,4.348,1036,3.956]],["title/interfaces/BasicExplorerController.html",[327,0.552,1037,2.715]],["body/interfaces/BasicExplorerController.html",[3,0.075,4,0.061,5,0.015,8,0.142,9,2.398,10,0.134,15,0.194,23,1.02,30,0.63,38,1.338,41,2.081,43,1.328,44,0.007,45,0.487,46,0.184,47,0.974,50,1.019,51,1.211,52,1.892,58,1.545,63,0.556,66,1.742,71,2.92,74,0.195,86,0.173,88,1.534,115,0.004,116,0.003,121,1.994,144,1.639,172,1.494,174,1.505,180,2.427,203,1.303,240,0.796,264,0.998,285,1.907,295,0.836,296,0.957,314,1.428,319,2.693,327,1.048,329,0.99,383,1.144,384,1.367,389,0.879,392,0.955,398,1.759,400,1.311,402,1.568,423,1.311,432,1.428,434,2.31,445,1.607,484,1.568,574,1.428,626,1.568,662,0.643,665,1.211,671,1.858,672,1.828,675,1.972,684,1.008,685,1.495,687,0.733,688,0.925,692,0.973,722,1.968,733,1.46,780,2.783,850,0.783,860,1.125,908,1.979,998,1.607,1015,1.607,1028,1.694,1037,2.88,1038,1.972,1039,4.526,1040,3.587,1041,3.587,1042,4.29,1043,3.587,1044,4.526,1045,4.526,1046,2.978,1047,3.363,1048,4.577,1049,2.998,1050,3.816,1051,3.874,1052,3.363,1053,2.998,1054,3.684,1055,3.363,1056,3.363,1057,2.978,1058,3.363,1059,2.978,1060,3.363,1061,2.978,1062,4.71,1063,3.363,1064,1.793,1065,2.809,1066,1.211,1067,3.168,1068,1.972,1069,1.848,1070,4.114,1071,1.848,1072,2.558,1073,1.848,1074,1.907,1075,1.793,1076,2.978,1077,1.972,1078,1.848,1079,3.865,1080,1.742,1081,2.79,1082,1.972,1083,1.972,1084,1.972,1085,1.972,1086,1.907,1087,1.907,1088,1.972,1089,1.972,1090,1.972,1091,1.972,1092,1.972,1093,1.972,1094,1.972,1095,1.972,1096,1.972,1097,1.972,1098,1.972,1099,3.469,1100,1.972,1101,2.79,1102,2.88,1103,2.707,1104,2.044,1105,2.88,1106,1.793,1107,2.88,1108,1.494,1109,2.044,1110,1.793,1111,2.978,1112,4.94,1113,1.972,1114,1.972,1115,1.972,1116,1.972,1117,1.972,1118,1.972,1119,1.907,1120,1.972,1121,1.793,1122,2.044,1123,1.972,1124,1.972,1125,1.46,1126,2.044,1127,1.907,1128,1.972,1129,1.694,1130,1.848,1131,1.907,1132,1.607,1133,1.694,1134,1.848,1135,1.972,1136,1.907,1137,2.044,1138,2.044,1139,2.79,1140,3.261,1141,1.972,1142,1.972,1143,5.028,1144,4.683,1145,4.445,1146,2.044,1147,1.972,1148,1.972,1149,2.31,1150,2.044,1151,3.717,1152,1.972,1153,1.972,1154,1.793,1155,3.086,1156,2.044,1157,2.044,1158,2.044,1159,2.044,1160,1.397,1161,1.907,1162,1.793,1163,1.972,1164,1.259,1165,1.494,1166,2.044,1167,2.044]],["title/interfaces/BasicFileController.html",[327,0.552,663,2.807]],["body/interfaces/BasicFileController.html",[3,0.049,4,0.04,5,0.045,8,0.133,10,0.111,15,0.209,16,0.492,23,0.727,25,1.605,30,0.423,33,2.096,38,0.873,40,1.333,41,0.624,43,0.783,44,0.007,45,0.408,46,0.159,47,0.654,50,0.799,52,0.441,53,2.938,58,0.8,63,0.558,69,2.394,74,0.127,81,0.426,86,0.147,87,0.776,88,1.07,115,0.002,116,0.002,121,1.9,122,1.572,123,1.205,134,1.105,144,1.406,147,1.048,152,3.512,167,0.952,170,1.355,174,1.621,175,2.181,183,1.008,203,1.334,240,1.6,264,0.655,267,0.433,279,1.989,292,2.544,296,0.624,314,1.56,327,0.998,328,2.123,329,0.646,330,1.333,331,4.797,332,2.454,333,2.2,334,2.2,335,3.146,336,3.482,337,1.333,338,2.521,339,3.043,340,2.2,341,2.2,342,1.333,343,1.333,344,2.123,345,2.2,346,2.2,347,3.749,348,1.385,349,1.385,350,1.385,351,2.286,352,2.809,353,3.043,354,3.146,355,3.462,356,2.123,357,1.385,358,3.868,359,0.838,360,1.333,361,1.385,362,2.286,363,1.989,364,3.702,365,3.368,366,3.001,367,1.286,368,1.385,369,1.385,370,1.385,371,1.385,372,1.385,373,0.732,374,0.975,375,1.385,376,1.385,377,2.286,378,1.609,379,1.385,380,1.208,381,1.385,382,1.385,383,1.208,384,0.892,385,1.875,386,1.875,387,1.205,388,2.359,389,0.946,390,0.952,391,1.73,392,0.412,393,1.696,394,1.572,395,1.333,396,3.749,397,2.646,398,1.859,399,0.975,400,1.411,401,2.123,402,1.023,403,1.962,404,2.587,405,0.719,406,2.2,407,1.385,408,1.647,409,0.892,410,0.911,411,1.385,412,1.385,413,1.333,414,4.706,415,1.385,416,5.306,417,1.385,418,1.411,419,1.572,420,2.123,421,3.625,422,2.286,423,0.855,424,2.809,425,2.809,426,1.385,427,2.123,428,3.406,429,2.711,430,2.918,431,3.581,432,0.931,433,4.036,434,1.647,435,2.123,436,3.749,437,1.385,438,1.333,439,1.333,440,1.385,441,4.765,442,2.918,443,2.286,444,3.488,445,1.048,446,2.123,447,2.286,448,2.2,449,1.385,450,1.385,451,1.333,452,2.598,453,3.141,454,2.598,455,2.286,456,1.333,457,2.2,458,1.385,459,3.512,460,2.2,461,2.2,462,1.333,463,1.385,464,1.385,465,1.333,466,3.608,467,1.333,468,1.572,469,1.385,470,1.333,471,0.911,472,1.385,473,1.169,474,2.84,475,1.385,476,1.385,477,1.385,478,2.464,479,1.333,480,1.501,481,2.286,482,1.441,483,1.333,484,2.155,485,2.809,486,1.333,487,1.333,488,1.333,489,1.286,490,3.387,491,1.385,492,1.333,493,1.333,494,1.333,495,1.385,496,1.385,497,1.385,498,1.333,499,1.286,500,1.385,501,1.876,502,1.333,503,1.333,504,2.918,505,1.333,506,1.333,507,2.809,508,2.286,509,3.387,510,2.053,511,2.286,512,1.333,513,1.333,514,1.385,515,1.333,516,1.385,517,1.333,518,0.573,519,1.333,520,1.385,521,1.333,522,1.333,523,1.286,524,2.918,525,1.385,526,1.989,527,2.286,528,1.385,529,2.286,530,1.385,531,1.385,532,1.385,533,1.169,534,1.385,535,1.385,536,1.385,537,1.385,538,2.286,539,1.385,540,2.286,541,1.385,542,2.2,543,2.286,544,1.333,545,1.385,546,1.385,547,2.918,548,1.385,549,3.387,550,2.918,551,2.918,552,2.918,553,1.385,554,4.463,555,1.385,556,3.146,557,4.269,558,1.385,559,1.385,560,1.385,561,2.286,562,2.286,563,1.385,564,1.385,565,1.385,566,1.385,567,1.385,568,1.385,569,1.385,570,1.385,571,2.286,572,1.385,573,1.385,574,0.931,575,1.385,576,2.286,577,2.2,578,1.385,579,1.385,580,1.385,581,1.385,582,1.136,583,2.286,584,4.036,585,1.385,586,1.385,587,2.918,588,1.385,589,1.385,590,1.385,591,2.2,592,1.385,593,1.385,594,1.385,595,1.385,596,2.918,597,2.286,598,1.385,599,1.385,600,2.286,601,1.385,602,2.286,603,1.385,604,1.048,605,1.385,606,3.749,607,1.385,608,1.385,609,1.385,610,1.105,611,1.385,612,1.076,613,3.387,614,3.26,615,1.385,616,1.385,617,2.286,618,2.286,619,2.286,620,2.286,621,1.385,622,1.385,623,1.385,624,1.385,625,1.333,626,1.023,627,1.333,628,1.385,629,1.385,630,1.385,631,2.2,632,1.333,633,1.385,634,1.385,635,0.975,636,2.918,637,2.2,638,1.385,639,1.385,640,1.385,641,1.385,642,1.385,643,2.286,644,0.573,645,1.333,646,1.333,647,1.385,648,1.333,649,1.333,650,0.975,651,1.385,652,1.385,653,1.385,654,1.385,655,1.333,656,1.385,657,1.385,658,1.385,659,1.333,660,1.144,661,1.048,662,0.884,663,2.123,664,1.537,665,1.303,666,2.286,667,2.286,668,1.572,669,2.948,670,1.303,671,1.645,672,1.303,673,2.2,674,1.92,675,1.553,676,1.572,677,1.383,678,1.411,679,1.537,680,2.441,681,1.572,682,2.2,683,2.2,684,1.085,685,1.58,686,2.2,687,0.478,688,0.603,689,1.136,690,1.286,1168,3.227,1169,3.227,1170,3.227,1171,3.227,1172,2.193,1173,2.193,1174,2.193,1175,2.193]],["title/interfaces/BasicMediaController.html",[327,0.552,1176,2.479]],["body/interfaces/BasicMediaController.html",[3,0.069,4,0.056,5,0.044,8,0.155,9,2.349,10,0.146,13,1.315,15,0.18,23,0.961,25,1.91,30,0.558,33,1.69,35,0.983,41,0.885,43,1.031,44,0.007,45,0.484,46,0.187,47,1.003,50,0.95,52,1.716,53,1.568,58,1.388,63,0.543,74,0.167,81,0.605,86,0.171,88,1.406,115,0.003,116,0.003,121,1.923,144,1.6,170,1.791,174,1.264,175,1.265,183,0.678,203,1.42,240,1.38,264,0.86,267,0.945,292,3.671,296,0.885,314,1.571,327,1.033,329,0.916,332,1.486,338,1.321,355,1.756,359,1.188,364,3.723,365,3.259,366,1.321,374,2.126,378,1.383,383,2.263,388,2.677,389,2.151,390,3.068,391,2.909,392,1.67,397,2.183,398,2.02,399,1.383,403,2.475,404,1.099,405,1.568,409,1.945,410,1.987,418,1.213,419,1.982,431,1.791,444,1.945,452,3.033,453,2.908,454,3.033,468,1.351,471,1.987,474,1.383,482,1.238,501,2.069,635,1.383,650,2.591,660,1.512,661,1.385,662,1.115,664,2.032,665,1.722,668,2.842,671,1.955,672,1.722,674,2.422,675,1.895,676,2.078,677,2.227,678,1.865,679,2.032,680,2.849,681,2.078,684,1.434,685,1.928,687,0.678,688,0.856,860,1.06,899,2.937,977,2.45,994,3.947,996,1.058,1065,2.315,1066,1.12,1125,2.078,1160,1.292,1164,1.165,1176,2.478,1177,1.659,1178,3.108,1179,4.265,1180,3.108,1181,4.265,1182,4.265,1183,2.773,1184,3.111,1185,3.596,1186,2.551,1187,2.551,1188,3.111,1189,2.773,1190,4.025,1191,3.111,1192,2.551,1193,2.629,1194,2.629,1195,2.551,1196,2.629,1197,2.551,1198,2.551,1199,3.111,1200,2.629,1201,2.629,1202,3.596,1203,2.551,1204,3.111,1205,2.177,1206,1.71,1207,1.611,1208,1.71,1209,1.71,1210,3.39,1211,2.551,1212,1.611,1213,1.71,1214,1.791,1215,3.39,1216,1.659,1217,1.611,1218,2.551,1219,1.659,1220,1.71,1221,3.39,1222,1.71,1223,3.02,1224,1.659,1225,2.86,1226,3.659,1227,1.71,1228,1.659,1229,2.177,1230,1.71,1231,1.71,1232,2.551,1233,3.767,1234,1.659,1235,2.551,1236,1.567,1237,1.567,1238,1.71,1239,1.71,1240,1.567,1241,1.567,1242,1.567,1243,1.71,1244,1.71,1245,1.567,1246,1.71,1247,1.71,1248,1.487,1249,1.611]],["title/interfaces/BasicUserController.html",[327,0.552,1250,2.909]],["body/interfaces/BasicUserController.html",[3,0.096,4,0.078,5,0.02,8,0.169,9,2.414,10,0.153,13,1.224,15,0.249,22,2.237,23,1.224,30,0.606,34,4.672,35,1.365,43,1.12,44,0.007,45,0.443,46,0.171,47,0.936,50,1.027,52,1.224,58,1.223,63,0.555,71,3.04,74,0.182,86,0.171,88,1.445,98,2.31,115,0.004,116,0.004,121,1.923,144,1.625,172,3.41,174,1.503,203,1.432,240,1.816,264,0.903,276,2.774,288,2.373,291,2.774,296,1.229,327,1.033,329,1.272,358,4.637,383,1.591,384,1.756,392,1.146,404,2.153,405,2.515,419,2.073,501,2.426,660,1.927,661,1.765,662,1.351,671,2.052,675,1.765,680,2.931,684,1.827,685,2.26,687,0.942,688,1.188,860,1.351,872,1.965,907,4.011,950,4.664,977,2.282,994,3.852,996,1.469,997,2.303,1030,3.575,1065,2.315,1066,1.555,1149,3.822,1205,3.492,1250,3.705,1251,2.727,1252,5.434,1253,5.434,1254,5.434,1255,5.434,1256,3.849,1257,4.319,1258,3.157,1259,3.849,1260,4.319,1261,5.05,1262,3.849,1263,4.319,1264,3.849,1265,4.319,1266,3.705,1267,3.849,1268,3.849,1269,3.705,1270,3.849,1271,3.705,1272,2.709,1273,4.144,1274,3.35,1275,4.461,1276,2.727,1277,2.727,1278,2.727,1279,2.727,1280,2.727,1281,2.727,1282,2.625]],["title/injectables/BasicUserService.html",[837,1.569,1283,3.925]],["body/injectables/BasicUserService.html",[3,0.106,4,0.086,5,0.022,8,0.18,10,0.083,15,0.274,16,0.886,18,1.45,22,4.674,23,1.606,24,3.091,25,1.285,30,0.683,43,1.263,44,0.007,45,0.457,46,0.168,47,1.055,50,1.047,58,1.384,59,6.705,63,0.541,71,3.021,74,0.205,76,0.954,86,0.092,87,1.019,88,1.449,89,2.023,93,2.958,97,2.611,98,2.044,103,1.983,115,0.004,116,0.004,137,2.3,144,1.607,180,2.272,203,1.438,218,3.251,288,3.58,291,4.032,295,1.182,297,4.891,298,3.643,299,3.897,317,2.695,321,3.897,404,2.3,482,3.444,685,1.919,837,2.135,839,2.215,841,3.114,849,2.888,860,1.444,950,5.485,1110,4.264,1140,3.473,1149,3.639,1271,2.888,1277,4.113,1278,4.113,1279,4.113,1280,4.113,1281,4.113,1283,5.342,1284,6.514,1285,4.752,1286,3.473,1287,6.514,1288,5.958,1289,5.807,1290,5.807,1291,5.807,1292,5.807,1293,4.752,1294,4.752,1295,6.514,1296,5.768,1297,4.752,1298,4.752,1299,4.752,1300,4.752,1301,4.287,1302,4.752,1303,4.716,1304,3.44,1305,3.44,1306,2.534,1307,6.626,1308,4.752,1309,4.752,1310,6.514,1311,6.514,1312,4.752,1313,6.514,1314,4.752,1315,4.752,1316,4.752,1317,4.752,1318,4.752]],["title/modules/CacheModule.html",[850,1.114,868,2.552]],["body/modules/CacheModule.html",[3,0.134,4,0.109,5,0.034,8,0.125,10,0.105,19,4.786,21,3.76,44,0.007,74,0.222,76,1.21,81,1.171,86,0.117,103,1.425,115,0.005,116,0.005,267,1.19,276,2.741,277,4.629,380,1.575,480,1.523,518,1.575,612,3.736,644,1.991,661,2.205,749,1.805,750,1.774,751,1.774,752,1.805,753,2.503,754,1.774,755,2.718,756,2.205,757,1.656,758,1.805,759,1.805,760,1.805,761,1.805,762,1.805,763,1.805,764,1.685,765,1.805,766,1.805,767,1.805,768,1.744,769,1.805,770,1.774,771,1.805,772,1.805,773,1.805,774,1.805,775,1.805,776,1.656,777,1.805,778,1.774,779,1.805,846,2.616,850,2.107,852,2.616,868,5.112,870,4.378,880,3.992,884,3.963,892,3.551,893,3.034,894,3.533,896,3.894,982,3.803,985,3.12,1286,4.06,1319,3.416,1320,3.803,1321,3.803,1322,3.803,1323,5.369,1324,5.369,1325,5.369,1326,5.957,1327,3.803,1328,6.023,1329,7.616,1330,4.899,1331,6.023,1332,4.36,1333,3.803,1334,4.36,1335,4.36,1336,5.369,1337,6.245,1338,6.023,1339,4.939,1340,4.146,1341,3.963,1342,4.146,1343,4.939,1344,4.36,1345,4.939,1346,4.36,1347,4.939,1348,4.939,1349,4.939]],["title/classes/CacheService.html",[10,0.083,19,2.411]],["body/classes/CacheService.html",[3,0.132,4,0.107,5,0.027,8,0.124,9,2.816,10,0.131,15,0.343,19,3.804,23,1.667,30,0.748,43,1.383,44,0.006,45,0.5,46,0.184,47,1.156,50,1.071,63,0.565,86,0.115,115,0.005,116,0.005,118,1.781,144,1.656,167,3.605,183,1.809,184,2.468,314,1.548,889,6.806,931,3.911,932,4.302,942,4.475,1010,5.241,1350,5.943,1351,4.556,1352,4.873,1353,6.732,1354,6.732,1355,6.732,1356,6.732,1357,6.732,1358,6.732,1359,6.732,1360,5.943,1361,6.732,1362,5.943,1363,6.732,1364,5.943,1365,6.732,1366,5.943,1367,6.732,1368,5.943,1369,4.302,1370,6.732,1371,5.943,1372,6.732,1373,5.943,1374,5.298,1375,5.943]],["title/controllers/CaptchaController.html",[662,0.915,1376,3.925]],["body/controllers/CaptchaController.html",[3,0.138,4,0.112,5,0.035,10,0.108,13,1.248,15,0.359,18,1.895,23,1.56,24,2.945,30,0.613,43,0.907,44,0.007,45,0.328,46,0.151,47,0.758,50,0.878,74,0.184,76,1.248,81,1.207,86,0.121,87,1.332,89,2.411,93,2.592,103,2.005,115,0.005,116,0.005,144,1.486,203,0.907,267,1.227,380,1.624,431,2.325,480,1.57,518,1.624,644,2.03,662,1.188,670,2.236,695,2.099,731,2.76,733,2.697,741,4.404,749,1.862,750,1.83,751,1.83,752,1.862,753,2.539,754,1.83,755,2.737,756,2.248,757,1.708,758,1.862,759,1.862,760,1.862,761,1.862,762,1.862,763,1.862,764,1.737,765,1.862,766,1.862,767,1.862,768,1.798,769,1.862,770,1.83,771,1.862,772,1.862,773,1.862,774,1.862,775,1.862,776,1.708,777,1.862,778,1.83,779,1.862,780,3.533,781,3.922,789,5.149,814,4.049,829,3.809,1016,5.346,1018,6.803,1019,6.132,1021,4.761,1022,5.84,1034,5.11,1035,4.72,1376,6.367,1377,6.211,1378,6.211,1379,6.211,1380,6.211,1381,4.761,1382,6.211,1383,3.413,1384,6.211,1385,6.211,1386,6.211,1387,6.211,1388,6.211,1389,5.537]],["title/modules/CaptchaModule.html",[850,1.114,877,3.669]],["body/modules/CaptchaModule.html",[3,0.128,4,0.104,5,0.033,8,0.12,10,0.142,23,1.154,30,0.583,43,1.079,44,0.007,45,0.39,46,0.173,47,0.901,50,0.836,74,0.22,76,1.154,81,1.117,86,0.112,89,1.784,103,1.749,115,0.005,116,0.005,144,0.962,182,1.722,183,1.252,267,1.135,296,1.635,380,1.502,480,1.453,518,1.502,644,1.932,662,1.706,687,1.88,731,3.284,749,1.722,750,1.692,751,1.692,752,1.722,753,2.449,754,1.692,755,2.689,756,2.139,757,1.58,758,1.722,759,1.722,760,1.722,761,1.722,762,1.722,763,1.722,764,1.607,765,1.722,766,1.722,767,1.722,768,1.663,769,1.722,770,1.692,771,1.722,772,1.722,773,1.722,774,1.722,775,1.722,776,1.58,777,1.722,778,1.692,779,1.722,789,5.551,814,3.533,846,3.548,850,2.126,852,2.495,855,4.345,856,4.666,857,3.781,860,1.638,862,5.234,868,3.94,869,3.492,870,3.445,871,3.492,877,6.611,879,3.955,880,4.265,884,5.376,892,3.445,893,3.723,894,3.37,895,4.159,896,3.445,1016,3.955,1036,6.244,1376,7.072,1381,4.404,1390,5.745,1391,5.665,1392,5.745,1393,6.699,1394,5.122,1395,6.588,1396,5.088,1397,5.745,1398,5.122,1399,5.745,1400,5.745,1401,5.122]],["title/classes/CaptchaRequest.html",[10,0.083,1022,3.15]],["body/classes/CaptchaRequest.html",[3,0.125,4,0.101,5,0.025,8,0.117,9,2.389,10,0.161,15,0.323,16,0.989,30,0.574,33,2.567,35,2.7,44,0.007,46,0.185,50,0.966,52,1.125,53,1.836,58,1.397,63,0.496,65,4.419,68,3.285,70,5.843,73,3.537,74,0.172,86,0.172,87,1.201,88,1.217,115,0.005,116,0.005,118,1.679,121,1.848,144,1.598,174,1.739,203,1.247,296,1.594,319,2.645,327,0.838,373,1.87,388,2.694,389,2.11,391,3.022,418,2.834,431,2.722,526,3.078,660,1.77,661,1.621,662,1.39,671,1.988,687,1.221,688,1.54,695,1.966,741,3.177,789,3.404,814,4.793,829,2.747,850,1.304,860,1.611,907,2.549,941,4.419,977,2.722,981,3.537,990,5.621,992,4.784,993,3.285,1016,3.856,1017,4.294,1018,4.294,1021,4.294,1022,5.825,1024,4.593,1025,4.593,1026,5.557,1027,4.055,1028,3.663,1029,4.593,1030,3.285,1031,4.055,1032,4.055,1033,3.078,1034,3.686,1035,4.419,1036,4.055,1402,5.601,1403,4.993,1404,5.601]],["title/classes/CaptchaService.html",[10,0.083,789,2.909]],["body/classes/CaptchaService.html",[3,0.122,4,0.099,5,0.025,8,0.149,9,2.636,10,0.162,15,0.317,23,1.441,30,0.566,33,2.533,35,2.679,43,0.801,44,0.007,45,0.289,46,0.183,47,0.669,50,1.02,52,1.102,53,1.798,58,1.242,63,0.475,65,4.857,68,3.218,70,5.785,73,4.529,74,0.17,86,0.171,87,1.538,88,1.201,115,0.005,116,0.005,118,1.644,121,1.941,144,1.63,174,1.715,203,1.047,296,1.561,319,2.351,327,0.827,373,1.831,388,2.667,389,1.875,391,2.685,418,2.139,431,2.685,526,3.015,660,1.734,661,1.588,662,1.371,671,2.1,687,1.196,688,1.509,741,3.112,789,4.36,814,4.803,829,3.518,850,1.277,860,1.771,907,2.496,941,4.857,977,2.054,981,3.464,990,5.258,992,4.72,993,3.218,1016,3.777,1017,4.206,1018,4.206,1019,5.192,1021,4.206,1022,5.936,1024,4.499,1025,4.499,1026,5.834,1027,3.972,1028,3.614,1029,4.499,1030,3.218,1031,6.135,1032,5.192,1033,3.015,1034,3.61,1035,4.36,1036,3.972,1405,5.487,1406,5.487]],["title/entities/CategoryEntity.html",[264,0.49,1407,3.465]],["body/entities/CategoryEntity.html",[3,0.121,4,0.098,5,0.032,8,0.113,10,0.095,15,0.488,16,0.971,30,0.743,44,0.007,45,0.42,46,0.183,58,1.236,61,2.54,63,0.474,74,0.2,81,1.059,86,0.106,87,2.066,115,0.005,116,0.005,167,2.366,182,2.533,203,1.163,218,2.215,264,0.816,267,1.076,295,1.355,314,1.368,319,2.34,380,1.424,389,1.424,392,1.498,393,2.257,400,3.105,480,1.377,518,1.424,644,1.866,692,1.577,695,2.545,697,3.583,700,3.44,712,2.822,722,1.753,723,3.597,726,2.822,727,3.173,728,3.09,749,1.633,750,1.605,751,1.605,752,1.633,753,2.387,754,1.605,755,2.656,756,2.067,757,1.498,758,1.633,759,1.633,760,1.633,761,1.633,762,1.633,763,1.633,764,1.524,765,1.633,766,1.633,767,1.633,768,1.577,769,1.633,770,1.605,771,1.633,772,1.633,773,1.633,774,1.633,775,1.633,776,1.498,777,1.633,778,1.605,779,1.633,996,2.428,1050,3.807,1103,4.246,1407,6.517,1408,5.447,1409,5.473,1410,7.139,1411,7.099,1412,7.963,1413,7.963,1414,7.963,1415,5.447,1416,2.672,1417,3.195,1418,5.447,1419,4.957,1420,2.822,1421,4.508,1422,5.447,1423,5.447,1424,4.377,1425,3.311,1426,3.923,1427,3.311,1428,5.447,1429,3.944,1430,4.508,1431,5.482,1432,5.447,1433,7.963,1434,5.447,1435,4.049,1436,5.473,1437,5.447,1438,4.176,1439,5.447,1440,3.806,1441,3.806,1442,3.698,1443,4.856,1444,5.447,1445,2.993,1446,5.447,1447,3.944,1448,4.467,1449,5.447,1450,5.447,1451,3.944]],["title/modules/CategoryModule.html",[850,1.114,1452,3.669]],["body/modules/CategoryModule.html",[3,0.141,4,0.115,5,0.036,8,0.132,10,0.111,44,0.007,74,0.218,76,1.277,81,1.236,86,0.123,115,0.005,116,0.005,267,1.256,380,1.662,480,1.608,518,1.662,612,3.865,644,2.06,749,1.906,750,1.873,751,1.873,752,1.906,753,2.566,754,1.873,755,2.751,756,2.281,757,1.749,758,1.906,759,1.906,760,1.906,761,1.906,762,1.906,763,1.906,764,1.779,765,1.906,766,1.906,767,1.906,768,1.841,769,1.906,770,1.873,771,1.906,772,1.906,773,1.906,774,1.906,775,1.906,776,1.749,777,1.906,778,1.873,779,1.906,850,2.141,852,2.761,870,4.37,880,3.766,892,3.991,896,3.991,985,3.294,1286,4.201,1306,3.39,1319,3.607,1320,4.015,1321,4.015,1322,4.015,1327,4.015,1332,4.603,1407,4.603,1452,7.419,1453,5.669,1454,5.669,1455,5.669,1456,6.359,1457,7.542,1458,6.359,1459,6.04,1460,6.46,1461,6.46,1462,6.46,1463,6.359,1464,4.184,1465,5.669,1466,6.359]],["title/entities/CategoryRestrictionEntity.html",[264,0.49,1467,4.267]],["body/entities/CategoryRestrictionEntity.html",[3,0.135,4,0.11,5,0.035,8,0.127,10,0.106,15,0.484,16,1.042,30,0.695,41,2.179,44,0.007,46,0.171,63,0.429,71,2.296,74,0.199,81,1.181,86,0.118,87,1.947,115,0.005,116,0.005,203,1.224,264,0.859,267,1.201,295,1.511,314,1.24,319,2.51,359,2.926,380,1.589,389,1.589,392,1.577,393,2.421,480,1.537,518,1.589,644,2.002,692,1.759,695,2.381,697,3.049,712,3.148,722,1.956,723,3.859,726,3.148,727,2.701,749,1.822,750,1.79,751,1.79,752,1.822,753,2.514,754,1.79,755,2.724,756,2.217,757,1.671,758,1.822,759,1.822,760,1.822,761,1.822,762,1.822,763,1.822,764,1.7,765,1.822,766,1.822,767,1.822,768,1.759,769,1.822,770,1.79,771,1.822,772,1.822,773,1.822,774,1.822,775,1.822,776,1.671,777,1.822,778,1.79,779,1.822,1067,4.561,1069,3.34,1272,3.404,1407,6.374,1409,6.429,1416,2.981,1417,3.565,1420,3.148,1440,4.084,1441,4.084,1442,3.967,1462,6.28,1467,6.828,1468,9.077,1469,6.077,1470,7.659,1471,8.387,1472,4.659,1473,6.077,1474,5.04,1475,6.077,1476,6.077,1477,6.077,1478,6.077,1479,6.077,1480,6.077]],["title/injectables/CategoryService.html",[837,1.569,1457,3.669]],["body/injectables/CategoryService.html",[3,0.128,4,0.103,5,0.026,8,0.17,10,0.1,15,0.331,18,2.253,21,3.908,23,1.483,24,2.581,25,2.412,30,0.644,43,1.192,44,0.007,45,0.431,46,0.159,47,1.088,50,0.923,51,2.066,61,2.676,63,0.458,74,0.22,76,1.153,86,0.111,88,1.367,89,2.293,93,2.465,103,1.932,115,0.005,116,0.005,137,2.608,144,1.236,184,2.384,190,4.399,264,0.756,295,1.427,314,1.322,392,1.747,434,4.226,574,3.136,670,2.066,671,1.719,677,3.119,837,2.42,839,2.676,846,2.492,848,3.06,860,1.636,1103,4.353,1140,3.937,1305,4.155,1306,3.06,1333,3.624,1407,6.241,1409,7.347,1411,7.685,1443,7.685,1457,5.661,1461,6.055,1462,6.055,1465,5.116,1481,5.739,1482,7.385,1483,5.661,1484,5.739,1485,8.621,1486,5.739,1487,7.385,1488,7.385,1489,5.739,1490,8.621,1491,5.084,1492,7.385,1493,7.385,1494,5.739,1495,7.385,1496,8.621,1497,7.385,1498,7.385,1499,7.385,1500,3.366,1501,7.279,1502,5.739,1503,4.706,1504,5.739,1505,5.739,1506,5.739,1507,5.739,1508,5.739,1509,5.739,1510,5.739,1511,5.739]],["title/controllers/ConfigController.html",[662,0.915,1512,3.925]],["body/controllers/ConfigController.html",[3,0.131,4,0.106,5,0.034,10,0.103,15,0.34,18,1.797,23,1.508,24,3.019,30,0.652,43,1.207,44,0.007,45,0.436,46,0.161,47,1.008,50,0.935,63,0.463,74,0.221,76,1.183,81,1.145,86,0.114,93,2.759,103,1.956,115,0.005,116,0.005,144,1.539,267,1.164,317,4.259,380,1.54,480,1.489,518,1.54,644,1.963,662,1.126,695,2.235,731,2.618,733,2.558,749,1.766,750,1.735,751,1.735,752,1.766,753,2.478,754,1.735,755,2.705,756,2.174,757,1.62,758,1.766,759,1.766,760,1.766,761,1.766,762,1.766,763,1.766,764,1.648,765,1.766,766,1.766,767,1.766,768,1.705,769,1.766,770,1.735,771,1.766,772,1.766,773,1.766,774,1.766,775,1.766,776,1.62,777,1.766,778,1.735,779,1.766,780,3.761,781,4.742,782,3.72,838,3.58,942,3.589,1050,3.589,1051,4.386,1072,2.968,1073,3.237,1160,3.434,1272,2.618,1341,3.876,1383,3.237,1512,6.157,1513,5.89,1514,6.694,1515,6.694,1516,5.89,1517,5.89,1518,5.89,1519,5.251,1520,5.89,1521,5.89,1522,5.89,1523,6.673,1524,5.89,1525,5.89,1526,5.17,1527,3.876,1528,5.984,1529,5.251,1530,4.055,1531,4.264,1532,4.055,1533,4.055,1534,5.251,1535,5.89,1536,5.728,1537,5.984,1538,5.89,1539,5.89,1540,5.89,1541,5.89,1542,5.89]],["title/interfaces/ConfigItem.html",[327,0.552,1523,3.669]],["body/interfaces/ConfigItem.html",[3,0.158,4,0.128,5,0.032,8,0.147,15,0.409,16,1.144,44,0.006,46,0.163,63,0.539,86,0.138,115,0.005,116,0.005,183,2.147,327,0.816,329,2.086,373,3.304,391,3.149,418,3.279,610,4.237,942,4.708,1162,5.126,1523,6.447,1543,7.081,1544,4.304,1545,6.312,1546,7.081,1547,6.312,1548,5.806]],["title/modules/ConfigModule.html",[850,1.114,1549,3.669]],["body/modules/ConfigModule.html",[3,0.14,4,0.114,5,0.035,8,0.131,10,0.11,23,1.265,30,0.618,44,0.007,50,0.886,74,0.221,76,1.265,81,1.224,86,0.122,103,1.854,115,0.005,116,0.005,267,1.245,373,2.615,380,1.647,480,1.593,501,2.476,518,1.647,644,2.048,731,2.799,749,1.888,750,1.855,751,1.855,752,1.888,753,2.555,754,1.855,755,2.745,756,2.268,757,1.732,758,1.888,759,1.888,760,1.888,761,1.888,762,1.888,763,1.888,764,1.762,765,1.888,766,1.888,767,1.888,768,1.823,769,1.888,770,1.855,771,1.888,772,1.888,773,1.888,774,1.888,775,1.888,776,1.732,777,1.888,778,1.855,779,1.888,850,2.177,852,2.735,855,4.493,856,5.383,862,5.381,868,4.545,869,3.829,870,3.974,871,3.829,872,2.866,873,4.145,880,3.744,882,4.145,892,3.652,896,3.652,1391,6.004,1512,6.423,1528,6.641,1529,5.615,1549,6.837,1550,6.299,1551,7.6,1552,6.299,1553,6.299,1554,6.299]],["title/injectables/ConfigService.html",[837,1.569,1528,3.465]],["body/injectables/ConfigService.html",[3,0.053,4,0.07,5,0.041,8,0.162,10,0.042,15,0.138,16,1.289,18,2.23,19,3.535,21,2.914,23,1.135,24,2.874,25,2.536,30,0.669,33,1.995,38,2.65,43,1.237,44,0.007,45,0.435,46,0.17,47,0.969,50,0.988,51,0.861,52,1.135,53,1.852,58,1.153,59,1.731,61,3.271,63,0.544,65,2.361,69,2.012,74,0.173,76,0.48,86,0.095,87,1.333,88,1.4,89,3.018,93,3.019,97,1.314,98,1.068,103,1.881,115,0.002,116,0.002,124,2.135,134,1.957,137,1.372,144,1.357,166,2.674,167,1.687,174,1.308,180,2.701,182,1.471,183,1.887,184,0.993,212,1.453,219,1.51,220,1.731,232,2.131,247,2.878,254,3.463,302,3.463,303,2.131,352,4.443,373,3.002,393,1.228,394,3.047,408,4.115,470,2.361,473,2.071,533,2.071,582,2.926,670,0.861,671,1.55,675,1.125,684,1.164,733,1.687,757,1.068,788,1.573,837,1.273,839,1.115,844,1.356,846,1.038,848,1.275,860,1.475,907,1.768,908,2.596,931,2.556,941,3.434,942,4.05,943,4.278,981,2.453,1002,3.718,1015,3.713,1027,4.09,1050,2.701,1051,2.846,1072,1.205,1073,1.314,1142,3.905,1162,2.071,1186,2.071,1214,3.421,1286,2.071,1301,3.718,1341,4.089,1396,3.89,1435,2.783,1460,3.185,1483,2.978,1514,3.463,1515,3.463,1519,3.463,1523,4.764,1528,4.09,1534,2.131,1555,2.391,1556,2.812,1557,3.463,1558,2.978,1559,3.463,1560,3.885,1561,4.907,1562,4.907,1563,4.907,1564,3.885,1565,5.65,1566,4.907,1567,4.907,1568,3.885,1569,4.907,1570,3.885,1571,4.907,1572,4.907,1573,3.885,1574,3.885,1575,2.391,1576,3.185,1577,5.697,1578,5.65,1579,2.391,1580,2.391,1581,7.016,1582,2.391,1583,5.793,1584,3.185,1585,6.658,1586,3.185,1587,2.391,1588,2.391,1589,3.525,1590,3.885,1591,3.185,1592,3.885,1593,2.391,1594,2.978,1595,3.885,1596,3.885,1597,3.463,1598,2.391,1599,5.65,1600,2.391,1601,3.885,1602,4.09,1603,4.633,1604,4.907,1605,3.885,1606,3.885,1607,2.391,1608,2.978,1609,3.463,1610,2.978,1611,2.391,1612,6.658,1613,2.391,1614,3.434,1615,4.204,1616,2.391,1617,2.391,1618,7.767,1619,2.391,1620,3.885,1621,3.185,1622,3.463,1623,3.885,1624,2.391,1625,2.391,1626,2.391,1627,2.978,1628,2.131,1629,2.131,1630,5.54,1631,4.374,1632,3.463,1633,5.037,1634,5.54,1635,2.391,1636,1.573,1637,3.885,1638,2.391,1639,1.833,1640,2.391,1641,3.885,1642,2.391,1643,2.391,1644,2.131,1645,2.391,1646,2.391,1647,2.391,1648,2.391,1649,2.391,1650,2.391,1651,2.391,1652,2.391,1653,4.331,1654,3.761,1655,2.391,1656,2.391,1657,2.391,1658,2.391,1659,2.391,1660,2.131,1661,2.391,1662,2.391,1663,2.391,1664,2.391,1665,1.833,1666,2.391,1667,2.391,1668,2.391,1669,3.185,1670,2.391,1671,3.463,1672,2.391,1673,2.391,1674,2.391,1675,2.391,1676,2.391,1677,2.131,1678,2.391,1679,2.391,1680,3.885,1681,2.391,1682,2.391,1683,2.391,1684,2.391,1685,2.391,1686,3.885,1687,4.907,1688,2.978,1689,3.885,1690,6.214,1691,2.391,1692,4.907,1693,2.391,1694,5.65,1695,3.463,1696,3.885,1697,5.65,1698,3.885,1699,4.907,1700,6.214,1701,3.885,1702,2.391,1703,2.391,1704,7.311,1705,2.391,1706,2.391,1707,2.391,1708,2.391,1709,3.463,1710,2.391,1711,4.374,1712,2.391,1713,2.391,1714,4.633,1715,2.391,1716,4.907,1717,2.391,1718,2.391,1719,4.907,1720,2.391,1721,2.391,1722,2.391,1723,2.391,1724,2.391,1725,2.391,1726,2.391,1727,2.391,1728,2.391,1729,3.885,1730,2.391,1731,3.885,1732,2.391,1733,2.391,1734,2.391,1735,2.391,1736,7.767,1737,2.391,1738,2.391,1739,2.391,1740,2.391,1741,5.65,1742,2.391,1743,2.391,1744,2.391,1745,2.391,1746,3.885,1747,2.391,1748,2.391,1749,1.833,1750,2.391,1751,2.391,1752,2.391,1753,2.391,1754,3.885,1755,2.391,1756,2.391,1757,2.391,1758,3.885,1759,2.391,1760,2.131,1761,2.391,1762,2.391,1763,2.391,1764,3.885,1765,3.885,1766,2.391,1767,3.885,1768,2.391,1769,2.391,1770,2.391,1771,2.391,1772,3.885,1773,2.391,1774,2.391,1775,1.833,1776,2.391,1777,2.391,1778,3.885,1779,2.391,1780,3.885,1781,2.391,1782,2.391,1783,2.391,1784,2.391,1785,2.391,1786,2.391,1787,2.391]],["title/classes/DbExceptionFilter.html",[10,0.083,1788,4.267]],["body/classes/DbExceptionFilter.html",[3,0.15,4,0.122,5,0.031,8,0.14,10,0.117,13,1.64,15,0.389,23,1.64,30,0.532,43,0.984,44,0.006,45,0.356,46,0.131,47,0.822,50,0.993,74,0.208,76,1.354,86,0.131,89,2.094,115,0.005,116,0.005,118,2.021,149,4.354,181,4.096,219,5.548,266,5.374,295,2.185,388,2.933,473,4.868,678,3.184,921,7,961,5.486,962,7.281,995,5.374,1132,3.904,1342,6.048,1500,3.955,1788,8.14,1789,8.167,1790,6.743,1791,8.167,1792,8.167,1793,8.167,1794,8.167,1795,8.167,1796,9.131,1797,9.131,1798,6.743,1799,6.743,1800,6.743,1801,6.743,1802,6.743,1803,6.743,1804,6.743]],["title/interfaces/DirectoryStructure.html",[327,0.552,1805,4.267]],["body/interfaces/DirectoryStructure.html",[3,0.113,4,0.091,5,0.043,8,0.105,24,2.707,30,0.399,44,0.007,46,0.171,47,0.617,50,0.968,58,1.329,61,3.17,63,0.52,74,0.213,86,0.171,87,1.086,88,1.476,89,2.843,93,3.097,103,2.027,115,0.004,116,0.004,121,1.557,144,1.374,146,3.88,149,2.699,212,3.077,218,2.764,219,3.196,279,4.219,312,3.331,327,0.885,329,1.491,356,2.969,394,3.912,429,4.815,482,2.015,671,1.178,687,1.103,829,3.335,850,1.993,932,4.922,941,3.077,942,3.25,1148,3.988,1165,3.022,1214,2.875,1229,3.735,1258,2.622,1557,6.061,1558,5.212,1577,5.802,1583,3.88,1615,3.196,1627,5.212,1760,6.061,1775,3.88,1805,8.031,1806,4.512,1807,6.296,1808,6.731,1809,6.799,1810,5.062,1811,5.062,1812,6.799,1813,6.799,1814,5.062,1815,6.799,1816,5.062,1817,4.15,1818,5.575,1819,4.512,1820,6.845,1821,4.512,1822,4.512,1823,5.062,1824,5.062,1825,5.476,1826,5.062,1827,5.062,1828,6.799,1829,6.799,1830,5.062,1831,5.062,1832,5.062,1833,3.88,1834,4.512,1835,5.062,1836,6.799,1837,6.799,1838,5.062,1839,5.062,1840,5.062,1841,5.062,1842,5.062,1843,5.062,1844,5.062,1845,5.062,1846,5.062,1847,5.062,1848,5.062,1849,5.062,1850,5.286,1851,5.575,1852,4.512,1853,5.062,1854,4.15,1855,5.062,1856,5.062,1857,4.512,1858,5.062,1859,5.062,1860,5.062,1861,5.062,1862,5.062,1863,5.062,1864,5.062,1865,4.512,1866,5.062,1867,6.799,1868,5.062,1869,5.062,1870,5.062,1871,5.062,1872,8.209,1873,5.062,1874,5.062,1875,5.062]],["title/injectables/DtoInterceptor.html",[837,1.569,1876,4.267]],["body/injectables/DtoInterceptor.html",[3,0.15,4,0.122,5,0.031,8,0.141,10,0.163,13,1.358,15,0.39,18,2.062,23,1.643,29,7.006,30,0.645,43,1.194,44,0.006,45,0.432,46,0.131,47,0.998,48,4.894,50,0.764,74,0.208,76,1.358,86,0.131,98,1.859,103,1.6,115,0.005,116,0.005,137,2.387,174,1.21,180,3.91,266,4.448,319,2.681,757,1.859,837,2.681,839,3.151,995,5.382,996,2.299,1028,3.405,1165,3.635,1383,3.714,1876,7.292,1877,6.76,1878,8.179,1879,8.179,1880,6.707,1881,6.707,1882,7.212,1883,8.179,1884,6.76,1885,6.76,1886,8.179,1887,8.179,1888,7.006,1889,9.139,1890,6.76,1891,8.179,1892,5.543,1893,4.894,1894,6.76,1895,6.026,1896,6.76,1897,6.76]],["title/interfaces/EntitySaveHandler.html",[327,0.552,1127,2.715]],["body/interfaces/EntitySaveHandler.html",[3,0.081,4,0.065,5,0.016,8,0.157,9,2.443,10,0.138,15,0.209,23,1.079,30,0.286,38,1.444,41,2.149,43,1.253,44,0.007,45,0.473,46,0.178,47,0.655,50,0.95,51,1.306,52,1.911,58,1.534,63,0.552,66,1.879,71,2.762,74,0.199,86,0.176,88,1.553,115,0.004,116,0.003,121,2.054,144,1.629,172,1.612,174,1.586,180,2.568,203,1.253,240,0.858,264,1.007,266,3.535,285,2.057,295,0.902,296,1.032,314,1.451,319,2.755,327,1.069,329,1.068,383,1.21,384,1.474,389,0.948,392,1.01,398,1.861,400,1.414,402,1.691,423,1.414,432,2.281,434,2.444,445,2.568,484,1.691,574,1.54,626,1.691,662,0.693,665,1.934,671,1.905,672,1.934,675,2.048,684,1.087,685,1.582,687,0.791,688,0.997,692,1.05,722,2.059,733,1.575,780,1.65,850,0.844,860,1.19,908,2.094,998,1.734,1015,1.734,1028,1.827,1037,2.057,1038,2.127,1040,2.127,1041,2.127,1042,3.151,1043,2.127,1046,2.127,1048,4.57,1050,3.61,1051,3.564,1054,3.223,1057,2.127,1059,2.127,1061,2.127,1062,4.619,1064,1.934,1065,2.862,1066,1.306,1067,3.314,1068,2.127,1069,1.993,1070,4.181,1071,1.993,1072,2.706,1073,1.993,1074,2.057,1075,1.934,1076,3.151,1077,2.127,1078,1.993,1079,4.012,1080,1.879,1081,2.952,1082,2.127,1083,2.127,1084,2.127,1085,2.127,1086,2.057,1087,2.057,1088,2.127,1089,2.127,1090,2.127,1091,2.127,1092,2.127,1093,2.127,1094,2.127,1095,2.127,1096,2.127,1097,2.127,1098,2.127,1099,3.629,1100,2.127,1101,2.952,1102,3.047,1103,2.864,1104,2.204,1105,3.047,1106,1.934,1107,3.047,1108,1.612,1109,2.204,1110,1.934,1111,3.151,1112,5.026,1113,2.127,1114,2.127,1115,2.127,1116,2.127,1117,2.127,1118,2.127,1119,2.057,1120,2.127,1121,2.864,1122,3.265,1123,3.151,1124,3.151,1125,1.575,1126,2.204,1127,3.047,1128,3.151,1129,3.223,1130,1.993,1131,2.057,1132,1.734,1133,1.827,1134,1.993,1135,2.127,1136,2.057,1137,2.204,1138,2.204,1139,2.952,1140,3.411,1141,2.127,1142,2.127,1143,5.123,1144,4.801,1145,4.59,1146,2.204,1147,2.127,1148,2.127,1149,2.444,1150,2.204,1151,3.889,1152,2.127,1153,2.127,1154,1.934,1155,3.265,1156,2.204,1157,2.204,1158,2.204,1159,2.204,1160,1.506,1161,2.057,1162,1.934,1163,2.127,1164,1.358,1165,1.612,1166,2.204,1167,2.204,1898,3.627]],["title/classes/ExchangeTokenPayload.html",[10,0.083,738,3.295]],["body/classes/ExchangeTokenPayload.html",[3,0.103,4,0.084,5,0.021,8,0.097,10,0.159,12,4.352,15,0.268,16,0.873,30,0.367,35,2.88,41,2.506,42,5.533,44,0.007,46,0.161,47,0.966,50,0.83,53,1.522,58,1.638,63,0.517,71,2.731,74,0.208,76,0.933,81,0.903,86,0.161,88,1.502,98,2.363,115,0.004,116,0.004,118,1.392,121,1.064,144,1.439,167,3.44,170,1.739,174,1.606,203,0.678,240,1.874,258,3.363,276,3.342,291,4.008,327,0.739,365,2.907,388,3.158,423,1.811,428,3.231,582,2.406,610,2.34,660,1.468,661,1.345,662,1.226,671,1.71,678,3.434,687,1.013,688,1.277,695,1.256,735,5.057,736,3.363,738,5.057,741,5.167,743,4.22,746,3.363,764,1.299,786,2.933,787,3.198,797,2.933,800,3.198,801,4.833,814,3.511,829,2.278,850,1.081,858,3.198,860,1.628,907,2.918,908,2.863,909,6.272,910,6.064,913,3.198,914,3.198,918,3.363,920,2.933,927,3.198,930,5.469,953,3.198,954,3.198,971,3.363,973,3.561,974,6.588,975,6.371,976,4.916,977,3.217,979,3.561,980,4.916,981,2.933,982,2.933,984,2.725,985,2.406,986,3.561,987,3.561,988,3.561,989,4.916,990,4.833,991,6.371,992,5.655,993,2.725,994,3.29,995,3.057,996,1.58,997,3.916,998,2.22,999,3.561,1000,3.561,1001,3.804,1002,4.833,1003,3.057,1004,3.561,1005,3.561,1006,3.561,1007,3.561,1008,4.916,1009,3.363,1010,4.638,1011,3.561,1012,4.916,1013,3.561,1014,3.561,1015,2.22,1899,4.141,1900,4.645]],["title/interfaces/ExplorerAction.html",[327,0.552,1081,2.63]],["body/interfaces/ExplorerAction.html",[3,0.08,4,0.065,5,0.016,8,0.175,9,2.438,10,0.137,15,0.208,16,0.726,38,1.431,41,2.141,43,1.224,44,0.007,45,0.482,46,0.185,47,0.438,50,0.923,51,1.294,52,1.909,58,1.566,63,0.552,66,1.862,71,2.711,74,0.198,86,0.176,88,1.551,115,0.004,116,0.003,121,2.05,144,1.628,172,1.598,174,1.533,180,2.551,203,1.25,240,0.851,264,1.005,285,2.039,295,0.894,296,1.023,314,1.477,319,2.466,327,1.068,329,1.059,383,1.202,384,1.461,389,0.94,392,1.415,398,1.849,400,1.402,402,1.676,423,1.402,432,1.527,434,2.429,445,1.719,484,1.676,574,1.527,626,1.676,662,0.687,665,1.294,671,1.9,672,1.921,675,2.039,684,1.078,685,1.572,687,0.784,688,0.989,692,1.041,722,2.048,733,1.561,780,1.636,850,0.837,860,1.183,908,2.081,998,1.719,1015,1.719,1028,1.811,1037,2.039,1038,2.109,1040,2.109,1041,2.109,1042,3.13,1043,2.109,1046,2.109,1048,4.567,1050,4.008,1051,3.549,1054,3.207,1057,2.109,1059,2.109,1061,2.109,1062,4.607,1064,1.917,1065,2.992,1066,1.294,1067,3.297,1068,2.109,1069,1.976,1070,4.217,1071,1.976,1072,2.689,1073,1.976,1074,2.039,1075,1.917,1076,3.13,1077,2.109,1078,1.976,1079,3.995,1080,1.862,1081,3.498,1082,2.109,1083,2.109,1084,2.109,1085,2.109,1086,2.039,1087,2.039,1088,2.109,1089,2.109,1090,2.109,1091,2.109,1092,2.109,1093,2.109,1094,2.109,1095,2.109,1096,2.109,1097,2.109,1098,2.109,1099,3.61,1100,2.109,1101,2.933,1102,3.027,1103,4.012,1104,2.185,1105,3.995,1106,2.845,1107,3.027,1108,1.598,1109,2.185,1110,1.917,1111,3.13,1112,5.016,1113,2.109,1114,2.109,1115,2.109,1116,2.109,1117,2.109,1118,2.109,1119,2.039,1120,2.109,1121,1.917,1122,2.185,1123,2.109,1124,2.109,1125,1.561,1126,2.185,1127,2.039,1128,2.109,1129,1.811,1130,1.976,1131,2.039,1132,1.719,1133,1.811,1134,1.976,1135,2.109,1136,2.039,1137,2.185,1138,2.185,1139,2.933,1140,3.394,1141,2.109,1142,2.109,1143,5.112,1144,4.787,1145,4.574,1146,2.185,1147,2.109,1148,2.109,1149,2.429,1150,2.185,1151,3.869,1152,2.109,1153,2.109,1154,1.917,1155,3.244,1156,2.185,1157,2.185,1158,2.185,1159,2.185,1160,1.493,1161,2.039,1162,1.917,1163,2.109,1164,1.346,1165,1.598,1166,2.185,1167,2.185]],["title/entities/ExplorerActionEntity.html",[264,0.49,1901,3.925]],["body/entities/ExplorerActionEntity.html",[3,0.124,4,0.1,5,0.033,8,0.177,10,0.097,13,1.116,15,0.492,16,0.984,30,0.714,44,0.007,45,0.424,46,0.185,58,1.392,61,3.371,63,0.405,74,0.209,81,1.08,86,0.108,87,2.004,115,0.005,116,0.005,182,2.713,218,3.268,264,0.823,267,1.098,295,1.381,314,1.17,380,1.452,392,1.512,393,2.285,480,1.404,501,2.285,518,1.452,644,1.89,692,2.327,695,2.447,697,3.389,700,3.508,722,2.327,728,3.151,749,1.665,750,1.636,751,1.636,752,1.665,753,2.41,754,1.636,755,2.668,756,2.093,757,1.528,758,1.665,759,1.665,760,1.665,761,1.665,762,1.665,763,1.665,764,1.554,765,1.665,766,1.665,767,1.665,768,1.608,769,1.665,770,1.636,771,1.665,772,1.665,773,1.665,774,1.665,775,1.665,776,1.528,777,1.665,778,1.636,779,1.665,996,2.459,1050,3.843,1054,2.798,1070,2.59,1071,3.052,1080,3.745,1081,3.973,1103,4.286,1105,4.101,1108,2.469,1424,4.774,1425,4.395,1426,4.679,1427,4.395,1429,4.021,1430,4.566,1431,5.534,1435,4.101,1436,5.543,1440,4.286,1441,4.286,1445,3.052,1447,4.021,1451,4.021,1547,6.446,1901,5.929,1902,6.672,1903,5.555,1904,4.978,1905,5.543,1906,5.543,1907,6.446,1908,5.929,1909,4.258,1910,5.555,1911,5.555,1912,5.555,1913,5.555,1914,5.555,1915,4.555,1916,5.862,1917,5.555,1918,3.508,1919,3.508,1920,4.258,1921,5.555,1922,3.151]],["title/interfaces/ExplorerColumn.html",[327,0.552,1079,2.715]],["body/interfaces/ExplorerColumn.html",[3,0.074,4,0.06,5,0.015,8,0.171,9,2.393,10,0.133,15,0.193,16,0.686,38,1.328,41,2.074,43,1.197,44,0.007,45,0.475,46,0.191,47,0.407,50,0.9,51,1.201,52,1.973,58,1.505,63,0.554,66,1.728,71,2.671,74,0.194,86,0.173,88,1.532,115,0.004,116,0.003,121,2.017,144,1.616,172,1.482,174,1.502,180,2.412,203,1.286,240,0.789,264,0.999,285,1.892,295,0.829,296,0.949,314,1.481,319,2.388,327,1.055,329,0.982,383,1.137,384,1.356,389,1.774,392,0.949,398,1.748,400,1.3,402,1.555,423,1.3,432,1.416,434,2.296,445,1.594,484,3.163,574,1.416,626,3.163,662,0.638,665,1.201,671,1.853,672,1.816,675,1.964,684,1,685,1.486,687,0.727,688,0.917,692,0.966,722,2.184,733,1.449,780,1.518,850,0.776,860,1.118,908,1.967,998,1.594,1015,3.243,1028,1.68,1037,1.892,1038,1.956,1040,1.956,1041,1.956,1042,2.96,1043,1.956,1046,1.956,1048,4.561,1050,3.484,1051,3.418,1054,3.066,1057,1.956,1059,1.956,1061,1.956,1062,4.701,1064,1.778,1065,2.95,1066,1.201,1067,3.152,1068,1.956,1069,1.833,1070,4.155,1071,1.833,1072,2.542,1073,1.833,1074,1.892,1075,1.778,1076,3.98,1077,1.956,1078,1.833,1079,4.134,1080,1.728,1081,2.773,1082,1.956,1083,1.956,1084,1.956,1085,1.956,1086,1.892,1087,1.892,1088,3.98,1089,3.98,1090,3.98,1091,3.98,1092,3.98,1093,3.98,1094,3.98,1095,3.98,1096,3.98,1097,3.98,1098,3.98,1099,4.516,1100,3.98,1101,4.005,1102,3.849,1103,2.69,1104,2.027,1105,2.862,1106,1.778,1107,2.862,1108,1.482,1109,2.027,1110,1.778,1111,2.96,1112,4.93,1113,1.956,1114,1.956,1115,1.956,1116,1.956,1117,1.956,1118,1.956,1119,1.892,1120,1.956,1121,1.778,1122,2.027,1123,1.956,1124,1.956,1125,1.449,1126,2.027,1127,1.892,1128,1.956,1129,1.68,1130,1.833,1131,1.892,1132,1.594,1133,1.68,1134,1.833,1135,1.956,1136,1.892,1137,2.027,1138,2.027,1139,2.773,1140,3.245,1141,1.956,1142,1.956,1143,5.018,1144,4.67,1145,4.429,1146,2.027,1147,1.956,1148,1.956,1149,2.296,1150,2.027,1151,3.699,1152,1.956,1153,1.956,1154,1.778,1155,3.067,1156,2.027,1157,2.027,1158,2.027,1159,2.027,1160,1.386,1161,1.892,1162,1.778,1163,1.956,1164,1.249,1165,1.482,1166,2.027,1167,2.027]],["title/entities/ExplorerColumnEntity.html",[264,0.49,1923,3.669]],["body/entities/ExplorerColumnEntity.html",[3,0.084,4,0.068,5,0.025,8,0.15,10,0.066,13,0.761,15,0.548,16,0.755,30,0.762,44,0.007,45,0.508,46,0.189,52,1.897,58,1.25,61,2.586,63,0.495,74,0.196,81,0.736,86,0.074,87,2.065,115,0.004,116,0.004,182,2.91,203,0.958,218,2.255,264,0.672,267,0.748,295,0.942,314,1.169,319,2.789,332,1.722,364,2.304,373,1.852,380,0.99,389,1.889,393,2.283,478,2.957,480,0.958,484,3.06,518,0.99,626,3.06,644,1.45,670,3.317,692,1.097,695,2.611,696,3.606,697,3.601,700,3.503,722,1.785,727,2.916,728,3.146,749,1.135,750,1.116,751,1.116,752,1.135,753,1.967,754,1.116,755,2.403,756,1.606,757,1.042,758,1.135,759,1.135,760,1.135,761,1.135,762,1.135,763,1.135,764,1.06,765,1.135,766,1.135,767,1.135,768,1.097,769,1.135,770,1.116,771,1.135,772,1.135,773,1.135,774,1.135,775,1.135,776,1.042,777,1.135,778,1.116,779,1.135,996,2.456,1015,3.137,1048,3.06,1070,3.06,1078,3.048,1079,3.146,1088,3.849,1089,3.849,1090,3.849,1091,3.849,1092,3.849,1093,3.849,1094,3.849,1095,3.849,1096,3.849,1097,3.849,1098,3.849,1100,3.849,1101,3.606,1108,1.683,1132,2.652,1141,3.254,1416,1.858,1420,2.873,1421,4.562,1424,4.299,1425,3.372,1426,3.97,1427,3.372,1429,4.016,1430,4.562,1431,5.293,1435,4.098,1436,5.538,1440,3.499,1441,3.499,1442,3.983,1445,2.082,1447,2.742,1451,4.016,1474,3.65,1902,7.01,1905,4.252,1906,4.252,1908,4.548,1918,2.392,1919,2.392,1920,2.904,1922,2.149,1923,4.252,1924,3.788,1925,6.563,1926,6.563,1927,3.788,1928,2.493,1929,3.788,1930,6.656,1931,3.788,1932,3.788,1933,3.788,1934,5.547,1935,3.788,1936,5.547,1937,3.788,1938,6.805,1939,5.547,1940,3.788,1941,5.547,1942,3.788,1943,5.547,1944,3.788,1945,3.788,1946,3.788,1947,5.547,1948,3.788,1949,5.547,1950,3.788,1951,5.547,1952,3.788,1953,5.547,1954,3.788,1955,3.788,1956,5.547,1957,3.788,1958,5.547,1959,3.788,1960,5.923,1961,3.788,1962,5.23,1963,4.945,1964,3.788,1965,3.106,1966,3.788,1967,3.788,1968,3.788,1969,3.106,1970,3.788,1971,3.788,1972,3.788,1973,3.106,1974,5.977]],["title/interfaces/ExplorerColumnRenderer.html",[327,0.552,1099,2.715]],["body/interfaces/ExplorerColumnRenderer.html",[3,0.08,4,0.065,5,0.016,8,0.175,9,2.441,10,0.138,15,0.209,16,0.729,38,1.439,41,2.146,43,1.226,44,0.007,45,0.482,46,0.185,47,0.441,50,0.924,51,1.301,52,1.91,58,1.568,63,0.552,66,1.872,71,2.714,74,0.199,86,0.176,88,1.552,115,0.004,116,0.003,121,2.052,144,1.629,172,1.606,174,1.535,180,2.561,203,1.252,240,0.855,264,1.004,285,2.05,295,0.899,296,1.028,314,1.45,319,2.472,327,1.069,329,1.065,383,1.207,384,1.469,389,0.945,392,1.418,398,1.857,400,1.409,402,1.685,423,1.409,432,1.535,434,2.438,445,1.728,484,1.685,574,1.535,626,1.685,662,0.691,665,1.301,671,1.903,672,1.929,675,2.044,684,1.083,685,1.578,687,0.788,688,0.994,692,1.046,722,2.273,733,1.57,780,1.645,850,0.841,860,1.187,908,2.089,998,1.728,1015,1.728,1028,1.821,1037,2.05,1038,2.12,1040,2.12,1041,2.12,1042,3.143,1043,2.12,1046,2.12,1048,4.561,1050,4.014,1051,3.558,1054,3.217,1057,2.12,1059,2.12,1061,2.12,1062,4.614,1064,1.927,1065,2.995,1066,1.301,1067,3.307,1068,2.12,1069,1.986,1070,4.222,1071,1.986,1072,2.7,1073,1.986,1074,2.05,1075,1.927,1076,3.143,1077,2.12,1078,1.986,1079,4.006,1080,1.872,1081,2.944,1082,2.12,1083,2.12,1084,2.12,1085,2.12,1086,2.05,1087,2.05,1088,2.12,1089,2.12,1090,2.12,1091,2.12,1092,2.12,1093,2.12,1094,2.12,1095,2.12,1096,2.12,1097,2.12,1098,2.12,1099,4.006,1100,2.12,1101,2.944,1102,3.039,1103,2.857,1104,3.257,1105,4.006,1106,1.927,1107,3.039,1108,1.606,1109,2.197,1110,1.927,1111,3.143,1112,5.022,1113,2.12,1114,2.12,1115,2.12,1116,2.12,1117,2.12,1118,2.12,1119,2.05,1120,2.12,1121,1.927,1122,2.197,1123,2.12,1124,2.12,1125,1.57,1126,2.197,1127,2.05,1128,2.12,1129,1.821,1130,1.986,1131,2.05,1132,1.728,1133,1.821,1134,1.986,1135,2.12,1136,2.05,1137,2.197,1138,2.197,1139,2.944,1140,3.404,1141,2.12,1142,2.12,1143,5.119,1144,4.796,1145,4.584,1146,2.197,1147,2.12,1148,2.12,1149,2.438,1150,2.197,1151,3.881,1152,2.12,1153,2.12,1154,1.927,1155,3.257,1156,2.197,1157,2.197,1158,2.197,1159,2.197,1160,1.501,1161,2.05,1162,1.927,1163,2.12,1164,1.353,1165,1.606,1166,2.197,1167,2.197]],["title/entities/ExplorerColumnRendererEntity.html",[264,0.49,1938,3.925]],["body/entities/ExplorerColumnRendererEntity.html",[3,0.126,4,0.102,5,0.033,8,0.179,10,0.099,13,1.141,15,0.469,16,0.998,30,0.702,43,1.071,44,0.007,45,0.429,46,0.184,58,1.406,61,3.419,63,0.411,74,0.21,81,1.104,86,0.11,87,1.953,115,0.005,116,0.005,182,2.574,218,3.303,264,0.911,267,1.757,295,1.412,327,0.845,380,1.484,392,1.528,393,2.318,480,1.436,507,4.458,518,1.484,644,1.917,692,1.644,695,2.404,697,3.418,722,3.079,749,1.702,750,1.673,751,1.673,752,1.702,753,2.435,754,1.673,755,2.682,756,2.123,757,1.562,758,1.702,759,1.702,760,1.702,761,1.702,762,1.702,763,1.702,764,1.588,765,1.702,766,1.702,767,1.702,768,1.644,769,1.702,770,1.673,771,1.702,772,1.702,773,1.702,774,1.702,775,1.702,776,1.562,777,1.702,778,1.673,779,1.702,996,2.494,1050,3.884,1054,2.861,1070,2.647,1071,3.12,1099,4.16,1105,4.16,1108,2.523,1424,4.799,1425,4.458,1426,4.718,1427,4.458,1429,4.111,1430,4.631,1431,5.593,1440,4.331,1441,4.331,1445,3.12,1447,4.111,1451,4.111,1902,6.591,1909,4.353,1915,4.656,1916,5.911,1918,3.586,1919,3.586,1920,4.353,1922,3.221,1938,6.014,1975,5.678,1976,7.334,1977,5.678,1978,5.678,1979,5.678,1980,5.678,1981,5.678,1982,5.678]],["title/controllers/ExplorerController.html",[662,0.915,1983,3.925]],["body/controllers/ExplorerController.html",[3,0.096,4,0.078,5,0.028,10,0.076,13,0.871,15,0.25,18,1.323,23,1.228,24,3.07,30,0.682,43,1.262,44,0.007,45,0.444,46,0.18,47,1.026,50,0.977,58,1.403,63,0.545,71,2.988,74,0.215,76,0.871,81,0.843,86,0.084,87,1.803,88,0.726,89,2.683,93,2.884,97,3.359,98,1.681,103,2.045,115,0.004,116,0.004,144,1.577,203,1.288,218,1.763,267,0.857,295,1.078,317,2.46,319,2.519,380,1.134,480,1.097,518,1.134,644,1.598,662,0.829,677,3.212,695,2.336,731,1.927,733,1.883,749,1.3,750,1.277,751,1.277,752,1.3,753,2.122,754,1.277,755,2.502,756,1.77,757,1.193,758,1.3,759,1.3,760,1.3,761,1.3,762,1.3,763,1.3,764,1.213,765,1.3,766,1.3,767,1.3,768,1.255,769,1.3,770,1.277,771,1.3,772,1.3,773,1.3,774,1.3,775,1.3,776,1.193,777,1.3,778,1.277,779,1.3,780,3.827,781,2.738,782,2.738,838,2.636,998,2.073,1037,3.468,1039,6.311,1040,4.153,1041,4.153,1042,4.509,1043,4.153,1044,6.311,1045,5.45,1046,2.544,1048,4.419,1049,3.866,1050,3.675,1051,3.873,1053,3.866,1054,4.083,1057,2.544,1059,2.544,1061,2.544,1062,4.224,1064,2.312,1070,2.022,1072,2.185,1073,2.383,1107,2.46,1112,4.77,1113,2.544,1114,4.153,1115,3.586,1116,4.754,1129,4.237,1130,3.89,1143,5.333,1160,1.801,1272,1.927,1303,5.125,1383,2.383,1526,4.209,1527,2.854,1530,2.986,1531,3.14,1532,2.986,1533,2.986,1536,2.854,1537,4.426,1918,2.738,1983,5.013,1984,4.337,1985,4.337,1986,4.337,1987,4.337,1988,4.337,1989,4.337,1990,4.337,1991,4.337,1992,4.337,1993,4.337,1994,4.337,1995,4.337,1996,4.337,1997,4.337,1998,4.337,1999,4.337,2000,4.686,2001,3.866,2002,3.556,2003,3.556,2004,4.337,2005,4.337,2006,4.337,2007,4.337,2008,4.337,2009,4.337,2010,4.337,2011,8.105,2012,4.337,2013,4.337,2014,4.337,2015,5.45,2016,4.337,2017,4.337,2018,4.337,2019,4.337,2020,4.337,2021,4.337,2022,4.337]],["title/modules/ExplorerModule.html",[850,1.114,2023,3.669]],["body/modules/ExplorerModule.html",[3,0.122,4,0.099,5,0.033,8,0.115,10,0.096,13,1.104,18,1.677,23,1.104,24,2.27,30,0.567,43,0.803,44,0.007,45,0.29,46,0.155,47,0.671,50,0.812,74,0.229,76,1.104,81,1.069,86,0.107,89,2.23,93,1.835,103,1.301,115,0.005,116,0.005,182,1.648,183,1.198,267,1.086,296,1.564,380,1.437,480,1.39,518,1.437,644,1.878,660,1.738,662,1.373,687,1.566,731,2.443,749,1.648,750,1.619,751,1.619,752,1.648,753,2.398,754,1.619,755,2.662,756,2.079,757,1.512,758,1.648,759,1.648,760,1.648,761,1.648,762,1.648,763,1.648,764,1.538,765,1.648,766,1.648,767,1.648,768,1.592,769,1.648,770,1.619,771,1.648,772,1.648,773,1.648,774,1.648,775,1.648,776,1.512,777,1.648,778,1.619,779,1.648,850,2.14,852,2.388,855,3.618,856,4.535,857,3.618,860,1.773,862,4.692,868,3.829,869,3.342,870,3.348,871,3.342,872,2.502,873,3.618,879,5.507,880,2.628,882,3.618,892,3.729,893,2.77,894,3.225,895,5.791,896,2.563,914,5.507,1070,2.563,1071,3.021,1119,3.118,1120,4.213,1130,4.661,1131,4.074,1132,4.054,1133,3.618,1134,3.947,1306,2.931,1383,3.021,1464,3.618,1594,5.506,1918,3.472,1923,5.506,1962,3.98,1969,4.508,1983,6.954,2023,6.132,2024,5.498,2025,7.182,2026,7.182,2027,5.498,2028,8.481,2029,8.8,2030,5.498,2031,5.498,2032,7.182,2033,4.901,2034,5.498,2035,7.182,2036,5.498,2037,5.498,2038,5.498,2039,5.498,2040,5.498,2041,5.498,2042,5.498,2043,5.498,2044,5.498,2045,5.498]],["title/classes/ExplorerService.html",[10,0.083,1130,2.63]],["body/classes/ExplorerService.html",[3,0.067,4,0.054,5,0.014,8,0.176,9,2.654,10,0.133,15,0.173,23,0.933,30,0.625,38,1.848,41,2.365,43,1.353,44,0.007,45,0.493,46,0.179,47,0.966,50,1.006,51,1.077,52,1.862,58,1.554,63,0.552,66,2.405,71,2.61,74,0.187,86,0.169,88,1.502,115,0.004,116,0.003,118,0.897,121,1.968,144,1.642,172,2.064,174,1.592,180,3.065,184,3.183,203,1.286,240,0.708,264,1.017,285,2.634,295,0.744,296,0.852,314,1.474,319,2.595,327,1.025,383,1.046,384,1.217,389,0.782,392,0.873,398,1.609,400,1.167,402,1.395,423,1.81,432,1.271,434,2.917,445,1.431,484,1.395,574,1.972,626,1.395,662,0.572,665,1.077,671,2.05,672,2.308,675,2.293,684,1.392,685,1.889,687,0.652,688,0.823,692,1.344,722,1.831,733,1.3,780,1.362,850,0.697,860,1.261,908,2.5,998,1.431,1015,1.431,1028,1.508,1037,1.698,1038,1.755,1040,1.755,1041,1.755,1042,4.071,1043,3.337,1046,1.755,1048,4.597,1050,3.663,1051,3.7,1054,2.866,1057,2.724,1059,1.755,1061,1.755,1062,4.65,1064,1.596,1065,2.724,1066,1.077,1067,2.947,1068,1.755,1069,1.645,1070,4.106,1071,1.645,1072,2.866,1073,1.645,1074,1.698,1075,1.596,1076,2.724,1077,1.755,1078,1.645,1079,3.637,1080,1.55,1081,2.552,1082,1.755,1083,1.755,1084,1.755,1085,1.755,1086,1.698,1087,1.698,1088,1.755,1089,1.755,1090,1.755,1091,1.755,1092,1.755,1093,1.755,1094,1.755,1095,1.755,1096,1.755,1097,1.755,1098,1.755,1099,3.227,1100,1.755,1101,2.552,1102,2.634,1103,2.476,1104,1.819,1105,2.634,1106,1.596,1107,3.227,1108,1.33,1109,1.819,1110,1.596,1111,3.337,1112,5.257,1113,1.755,1114,1.755,1115,1.755,1116,1.755,1117,1.755,1118,1.755,1119,1.698,1120,1.755,1121,1.596,1122,1.819,1123,1.755,1124,1.755,1125,1.3,1126,1.819,1127,1.698,1128,1.755,1129,1.508,1130,2.552,1131,2.634,1132,2.22,1133,2.339,1134,2.552,1135,2.724,1136,2.634,1137,2.822,1138,3.897,1139,3.523,1140,3.915,1141,2.724,1142,2.724,1143,5.408,1144,5.166,1145,5.051,1146,3.458,1147,2.724,1148,2.724,1149,2.917,1150,3.458,1151,4.464,1152,2.724,1153,2.724,1154,2.476,1155,3.897,1156,2.822,1157,2.822,1158,3.458,1159,3.458,1160,1.929,1161,2.634,1162,2.476,1163,2.724,1164,1.739,1165,2.064,1166,2.822,1167,2.822,2046,4.644,2047,2.993,2048,2.993,2049,2.993,2050,2.993,2051,2.993,2052,2.993,2053,2.993,2054,2.993,2055,2.993,2056,2.993,2057,2.993,2058,2.993]],["title/interfaces/ExplorerTab.html",[327,0.552,1102,2.715]],["body/interfaces/ExplorerTab.html",[3,0.08,4,0.065,5,0.016,8,0.157,9,2.441,10,0.138,15,0.209,16,0.729,38,1.438,41,2.145,43,1.226,44,0.007,45,0.482,46,0.182,47,0.441,50,0.924,51,1.3,52,1.91,58,1.567,63,0.552,66,1.871,71,2.714,74,0.199,86,0.176,88,1.552,115,0.004,116,0.003,121,2.052,144,1.628,172,1.605,174,1.535,180,2.56,203,1.308,240,0.855,264,1.005,285,2.049,295,0.898,296,1.028,314,1.479,319,2.471,327,1.069,329,1.064,383,1.206,384,1.468,389,0.944,392,1.007,398,2.612,400,1.408,402,1.684,423,1.408,432,1.534,434,2.437,445,1.727,484,1.684,574,1.534,626,1.684,662,0.691,665,1.3,671,1.903,672,1.928,675,2.044,684,1.083,685,1.578,687,0.787,688,0.993,692,1.046,722,2.054,733,1.569,780,1.644,850,0.841,860,1.187,908,2.088,998,1.727,1015,1.727,1028,1.82,1037,2.049,1038,2.119,1040,2.119,1041,2.119,1042,3.141,1043,2.119,1046,2.119,1048,4.589,1050,3.604,1051,3.557,1054,3.216,1057,2.119,1059,2.119,1061,2.119,1062,4.795,1064,1.926,1065,2.937,1066,1.3,1067,3.306,1068,2.119,1069,1.985,1070,4.221,1071,1.985,1072,2.698,1073,1.985,1074,2.049,1075,1.926,1076,3.141,1077,2.119,1078,1.985,1079,4.004,1080,1.871,1081,2.943,1082,2.119,1083,2.119,1084,2.119,1085,2.119,1086,2.049,1087,2.049,1088,2.119,1089,2.119,1090,2.119,1091,2.119,1092,2.119,1093,2.119,1094,2.119,1095,2.119,1096,2.119,1097,2.119,1098,2.119,1099,3.621,1100,2.119,1101,3.507,1102,3.621,1103,4.02,1104,2.195,1105,3.038,1106,1.926,1107,3.038,1108,1.605,1109,2.195,1110,1.926,1111,3.141,1112,5.021,1113,2.119,1114,2.119,1115,2.119,1116,2.119,1117,2.119,1118,2.119,1119,2.049,1120,2.119,1121,1.926,1122,2.195,1123,2.119,1124,2.119,1125,1.569,1126,2.195,1127,2.049,1128,2.119,1129,1.82,1130,1.985,1131,2.049,1132,1.727,1133,1.82,1134,1.985,1135,2.119,1136,2.049,1137,2.195,1138,2.195,1139,2.943,1140,3.403,1141,2.119,1142,2.119,1143,5.118,1144,4.795,1145,4.583,1146,2.195,1147,2.119,1148,2.119,1149,2.437,1150,2.195,1151,3.88,1152,2.119,1153,2.119,1154,1.926,1155,3.255,1156,2.195,1157,2.195,1158,2.195,1159,2.195,1160,1.5,1161,2.049,1162,1.926,1163,2.119,1164,1.352,1165,1.605,1166,2.195,1167,2.195]],["title/entities/ExplorerTabEntity.html",[264,0.49,1960,3.925]],["body/entities/ExplorerTabEntity.html",[3,0.128,4,0.104,5,0.033,8,0.12,10,0.1,13,1.154,15,0.498,16,1.005,30,0.704,43,1.079,44,0.007,45,0.431,46,0.173,58,1.279,61,2.678,63,0.414,74,0.211,81,1.117,86,0.112,87,1.959,115,0.005,116,0.005,182,2.585,203,1.193,218,2.336,264,0.914,267,1.135,295,1.429,314,1.196,319,2.422,327,0.852,380,1.502,389,1.502,393,2.336,398,2.831,478,3.94,480,1.453,518,1.502,644,1.932,692,1.663,695,2.412,697,2.941,700,3.628,722,1.849,728,3.259,749,1.722,750,1.692,751,1.692,752,1.722,753,2.449,754,1.692,755,2.689,756,2.139,757,1.58,758,1.722,759,1.722,760,1.722,761,1.722,762,1.722,763,1.722,764,1.607,765,1.722,766,1.722,767,1.722,768,1.663,769,1.722,770,1.692,771,1.722,772,1.722,773,1.722,774,1.722,775,1.722,776,1.58,777,1.722,778,1.692,779,1.722,996,2.513,1048,3.809,1070,2.678,1102,4.192,1103,4.356,1108,2.553,1416,2.818,1420,2.976,1424,4.467,1425,3.492,1426,4.061,1427,3.492,1429,4.159,1430,4.666,1431,5.624,1435,4.192,1436,5.665,1440,3.94,1441,3.94,1442,3.828,1445,3.157,1447,4.159,1451,4.159,1902,6.612,1907,6.588,1918,3.628,1919,3.628,1920,4.404,1922,3.259,1928,3.781,1960,6.06,1962,6.244,1963,6.588,1969,4.711,2059,5.745,2060,7.39,2061,5.745,2062,5.745,2063,5.745,2064,5.745,2065,5.745,2066,5.745]],["title/interfaces/ExplorerTarget.html",[327,0.552,1062,2.63]],["body/interfaces/ExplorerTarget.html",[3,0.077,4,0.062,5,0.016,8,0.173,9,2.416,10,0.135,15,0.2,16,0.706,38,1.378,41,2.107,43,1.211,44,0.007,45,0.478,46,0.187,47,0.759,50,0.912,51,1.247,52,1.946,58,1.518,63,0.552,66,1.794,71,2.691,74,0.196,86,0.174,88,1.542,115,0.004,116,0.003,121,2.034,144,1.622,172,1.539,174,1.517,180,2.481,203,1.238,240,0.819,264,1.002,285,1.964,295,0.861,296,0.985,314,1.467,319,2.427,327,1.061,329,1.02,383,1.557,384,1.408,389,0.905,392,0.976,398,2.566,400,2.695,402,1.614,423,1.35,432,1.47,434,2.361,445,1.655,484,1.614,574,1.47,626,1.614,662,0.662,665,1.247,671,1.877,672,1.868,675,2.002,684,1.038,685,1.529,687,0.755,688,0.952,692,1.002,722,2.003,733,1.504,780,1.576,850,0.806,860,1.15,908,2.023,998,1.655,1015,1.655,1028,1.745,1037,1.964,1038,2.031,1040,2.031,1041,2.031,1042,3.044,1043,2.031,1046,2.031,1048,4.574,1050,3.54,1051,3.483,1054,3.136,1057,2.031,1059,2.031,1061,2.031,1062,4.659,1064,1.846,1065,2.971,1066,1.247,1067,4.176,1068,2.031,1069,1.903,1070,4.186,1071,1.903,1072,2.615,1073,1.903,1074,1.964,1075,1.846,1076,3.044,1077,4.055,1078,3.799,1079,4.41,1080,3.581,1081,3.799,1082,4.055,1083,4.055,1084,4.055,1085,4.055,1086,3.922,1087,3.922,1088,2.031,1089,2.031,1090,2.031,1091,2.031,1092,2.031,1093,2.031,1094,2.031,1095,2.031,1096,2.031,1097,2.031,1098,2.031,1099,3.531,1100,2.031,1101,2.852,1102,2.944,1103,2.767,1104,2.105,1105,2.944,1106,1.846,1107,2.944,1108,1.539,1109,2.105,1110,1.846,1111,3.044,1112,4.973,1113,2.031,1114,2.031,1115,2.031,1116,2.031,1117,2.031,1118,2.031,1119,1.964,1120,2.031,1121,1.846,1122,2.105,1123,2.031,1124,2.031,1125,1.504,1126,2.105,1127,1.964,1128,2.031,1129,1.745,1130,1.903,1131,1.964,1132,1.655,1133,1.745,1134,1.903,1135,2.031,1136,1.964,1137,2.105,1138,2.105,1139,2.852,1140,3.319,1141,2.031,1142,2.031,1143,5.065,1144,4.729,1145,4.502,1146,2.105,1147,2.031,1148,2.031,1149,2.361,1150,2.105,1151,3.784,1152,2.031,1153,2.031,1154,1.846,1155,3.154,1156,2.105,1157,2.105,1158,2.105,1159,2.105,1160,1.438,1161,1.964,1162,1.846,1163,2.031,1164,1.296,1165,1.539,1166,2.105,1167,2.105]],["title/entities/ExplorerTargetEntity.html",[264,0.49,1962,3.465]],["body/entities/ExplorerTargetEntity.html",[3,0.101,4,0.082,5,0.029,8,0.178,10,0.079,13,0.916,15,0.516,16,0.862,30,0.749,44,0.007,45,0.498,46,0.184,52,1.795,58,1.096,63,0.479,74,0.207,81,0.887,86,0.089,87,2.109,115,0.004,116,0.004,182,2.678,264,0.846,267,0.901,295,1.134,319,2.076,332,1.966,373,2.114,380,1.193,389,1.656,393,2.484,400,2.836,478,3.377,480,1.153,518,1.193,644,1.656,670,2.28,692,1.321,695,2.567,697,3.727,722,1.468,727,2.815,749,1.367,750,1.344,751,1.344,752,1.367,753,2.181,754,1.344,755,2.537,756,1.833,757,1.255,758,1.367,759,1.367,760,1.367,761,1.367,762,1.367,763,1.367,764,1.276,765,1.367,766,1.367,767,1.367,768,1.321,769,1.367,770,1.344,771,1.367,772,1.367,773,1.367,774,1.367,775,1.367,776,1.255,777,1.367,778,1.344,779,1.367,1048,3.392,1062,3.48,1067,4.54,1068,2.676,1069,2.507,1070,2.953,1077,4.267,1078,3.998,1080,3.768,1081,3.998,1082,4.267,1083,4.267,1084,4.267,1085,4.267,1086,4.127,1087,4.127,1108,2.027,1132,3.027,1136,3.592,1416,3.107,1417,3.715,1419,4.61,1420,2.363,1421,3.999,1424,4.54,1425,3.85,1426,4.696,1427,3.85,1440,4.556,1441,4.556,1442,3.281,1445,2.507,1472,5.577,1901,5.193,1902,6.911,1905,4.855,1906,6.025,1908,5.193,1909,3.497,1918,2.881,1919,2.881,1922,2.588,1923,6.025,1930,6.025,1962,4.585,1974,5.411,2033,4.067,2067,4.562,2068,5.646,2069,7.275,2070,4.562,2071,4.562,2072,4.562,2073,4.562,2074,3.741,2075,5.193,2076,6.333,2077,4.562,2078,6.333,2079,4.562,2080,6.333,2081,4.562,2082,6.333,2083,4.562,2084,6.333,2085,4.562,2086,4.562,2087,4.562,2088,4.562,2089,6.333,2090,4.562,2091,4.562,2092,5.193,2093,3.741,2094,4.562,2095,4.562]],["title/interfaces/File.html",[5,0.022,327,0.552]],["body/interfaces/File.html",[3,0.049,4,0.04,5,0.044,8,0.076,10,0.112,15,0.211,16,0.735,25,1.46,33,1.907,38,0.883,40,1.348,41,1.039,44,0.007,45,0.41,46,0.171,50,0.611,52,0.936,53,2.927,58,0.632,63,0.559,69,2.413,74,0.128,81,0.431,86,0.147,87,0.476,88,1.076,115,0.002,116,0.002,121,1.905,122,1.586,123,1.219,134,1.117,144,1.188,147,1.06,152,3.531,167,0.963,170,0.83,174,1.624,175,2.196,183,1.015,203,1.287,240,1.793,264,0.477,267,0.438,279,2.007,292,2.557,296,0.631,314,1.559,327,1,328,2.143,329,0.653,330,1.348,331,4.808,332,2.583,333,2.22,334,2.22,335,3.168,336,3.503,337,1.348,338,2.728,339,3.063,340,2.22,341,2.22,342,1.348,343,1.348,344,2.143,345,2.22,346,2.22,347,3.771,348,1.4,349,1.4,350,1.4,351,2.307,352,2.831,353,3.063,354,3.168,355,3.458,356,2.143,357,1.4,358,3.879,359,0.847,360,1.348,361,1.4,362,2.307,363,2.007,364,3.871,365,3.431,366,3.123,367,1.301,368,1.4,369,1.4,370,1.4,371,1.4,372,1.4,373,0.74,374,0.986,375,1.4,376,1.4,377,2.307,378,1.623,379,1.4,380,1.218,381,1.4,382,1.4,383,1.657,384,0.902,385,1.892,386,1.892,387,1.219,388,1.803,389,1.218,390,1.586,391,2.022,392,1.016,393,2.244,394,2.79,395,2.22,396,4.057,397,2.754,398,2.46,399,1.623,400,2.505,401,3.769,402,1.703,403,2.728,404,2.675,405,1.77,406,2.22,407,1.4,408,1.662,409,0.902,410,0.921,411,1.4,412,1.4,413,1.348,414,4.719,415,1.4,416,5.318,417,1.4,418,1.424,419,1.242,420,2.143,421,3.645,422,2.307,423,0.865,424,2.831,425,2.831,426,1.4,427,2.143,428,3.423,429,2.732,430,2.941,431,3.584,432,0.942,433,4.057,434,1.662,435,2.143,436,3.769,437,1.4,438,1.348,439,1.348,440,1.4,441,4.783,442,2.941,443,2.307,444,3.497,445,1.06,446,2.143,447,2.307,448,2.22,449,1.4,450,1.4,451,1.348,452,2.612,453,3.155,454,2.612,455,2.307,456,1.348,457,2.22,458,1.4,459,3.531,460,2.22,461,2.22,462,1.348,463,1.4,464,1.4,465,1.348,466,3.63,467,1.348,468,1.586,469,1.4,470,1.348,471,0.921,472,1.4,473,1.182,474,2.855,475,1.4,476,1.4,477,1.4,478,2.483,479,1.348,480,1.51,481,2.307,482,1.454,483,1.348,484,2.172,485,2.831,486,1.348,487,1.348,488,1.348,489,1.301,490,3.41,491,1.4,492,1.348,493,1.348,494,1.348,495,1.4,496,1.4,497,1.4,498,1.348,499,1.301,500,1.4,501,1.472,502,1.348,503,1.348,504,2.941,505,1.348,506,1.348,507,2.831,508,2.307,509,3.41,510,2.072,511,2.307,512,1.348,513,1.348,514,1.4,515,1.348,516,1.4,517,1.348,518,0.58,519,1.348,520,1.4,521,1.348,522,1.348,523,1.301,524,2.941,525,1.4,526,2.007,527,2.307,528,1.4,529,2.307,530,1.4,531,1.4,532,1.4,533,1.182,534,1.4,535,1.4,536,1.4,537,1.4,538,2.307,539,1.4,540,2.307,541,1.4,542,2.22,543,2.307,544,1.348,545,1.4,546,1.4,547,2.941,548,1.4,549,3.41,550,2.941,551,2.941,552,2.941,553,1.4,554,4.482,555,1.4,556,3.168,557,4.29,558,1.4,559,1.4,560,1.4,561,2.307,562,2.307,563,1.4,564,1.4,565,1.4,566,1.4,567,1.4,568,1.4,569,1.4,570,1.4,571,2.307,572,1.4,573,1.4,574,0.942,575,1.4,576,2.307,577,2.22,578,1.4,579,1.4,580,1.4,581,1.4,582,1.149,583,2.307,584,4.057,585,1.4,586,1.4,587,2.941,588,1.4,589,1.4,590,1.4,591,2.22,592,1.4,593,1.4,594,1.4,595,1.4,596,2.941,597,2.307,598,1.4,599,1.4,600,2.307,601,1.4,602,2.307,603,1.4,604,1.06,605,1.4,606,3.771,607,1.4,608,1.4,609,1.4,610,1.117,611,1.4,612,1.088,613,3.41,614,3.283,615,1.4,616,1.4,617,2.307,618,2.307,619,2.307,620,2.307,621,1.4,622,1.4,623,1.4,624,1.4,625,1.348,626,1.034,627,1.348,628,1.4,629,1.4,630,1.4,631,2.22,632,1.348,633,1.4,634,1.4,635,0.986,636,2.941,637,2.22,638,1.4,639,1.4,640,1.4,641,1.4,642,1.4,643,2.307,644,0.58,645,1.348,646,1.348,647,1.4,648,1.348,649,1.348,650,0.986,651,1.4,652,1.4,653,1.4,654,1.4,655,1.348,656,1.4,657,1.4,658,1.4,659,1.348,660,0.701,661,0.642,662,0.698,663,1.301,664,0.942,665,0.798,666,1.4,667,1.4,668,0.963,669,2.007,670,0.798,671,1.257,672,0.798,673,1.348,674,0.921,675,1.058,676,0.963,677,0.847,678,0.865,679,0.942,680,1.779,681,0.963,682,1.348,683,1.348,684,0.665,685,1.076,686,1.348,687,0.483,688,0.61,689,1.149,690,1.301]],["title/controllers/FileController.html",[662,0.915,2096,3.925]],["body/controllers/FileController.html",[3,0.121,4,0.098,5,0.042,10,0.095,13,1.096,15,0.315,18,1.665,23,1.436,24,3.045,30,0.667,43,1.235,44,0.007,45,0.446,46,0.164,47,1.032,50,0.956,63,0.401,74,0.217,76,1.096,81,1.549,86,0.106,87,1.709,88,0.914,89,2.22,93,2.823,98,1.501,103,1.886,115,0.005,116,0.005,144,1.559,182,1.636,183,1.19,203,1.34,218,2.906,267,1.079,314,1.524,317,3.096,380,1.427,385,3.703,387,3,388,2.823,480,1.38,518,1.427,644,1.869,662,1.044,663,4.193,669,4.648,673,3.318,674,3.311,677,3.231,682,3.318,683,3.318,686,3.318,695,2.287,724,3,731,2.426,733,2.371,749,1.636,750,1.608,751,1.608,752,1.636,753,2.389,754,1.608,755,2.657,756,2.069,757,1.501,758,1.636,759,1.636,760,1.636,761,1.636,762,1.636,763,1.636,764,1.527,765,1.636,766,1.636,767,1.636,768,1.58,769,1.636,770,1.608,771,1.636,772,1.636,773,1.636,774,1.636,775,1.636,776,1.501,777,1.636,778,1.608,779,1.636,781,3.447,782,3.447,838,3.318,1168,7.106,1169,6.373,1170,7.106,1171,6.373,1383,3,1526,3.758,1527,3.592,1536,3.592,1615,3.447,2096,5.862,2097,5.459,2098,5.459,2099,5.459,2100,4.866,2101,5.459,2102,4.866,2103,5.459,2104,4.866,2105,5.459,2106,4.476,2107,4.476,2108,4.476,2109,4.476,2110,3.952,2111,4.476,2112,4.476,2113,5.459,2114,4.184,2115,5.459,2116,4.476,2117,4.476,2118,4.476,2119,5.459,2120,5.459,2121,4.866,2122,5.459,2123,5.459,2124,4.866,2125,4.476,2126,5.459,2127,5.459,2128,5.459,2129,4.476,2130,5.459,2131,5.459,2132,4.476,2133,5.459,2134,5.459]],["title/entities/FileEntity.html",[264,0.49,2135,3.295]],["body/entities/FileEntity.html",[3,0.124,4,0.1,5,0.039,8,0.116,10,0.126,13,1.118,15,0.492,16,0.985,30,0.752,44,0.007,45,0.466,46,0.189,52,1.454,63,0.508,74,0.202,86,0.108,87,2.092,115,0.005,116,0.005,174,1.296,182,2.17,203,1.175,240,1.713,264,0.824,295,1.384,314,1.379,319,2.968,332,2.499,389,1.455,392,1.513,393,2.289,394,3.495,397,3.013,398,2.788,400,3.137,401,4.72,405,2.637,668,3.144,670,2.606,692,1.611,695,2.578,697,3.762,712,2.883,722,2.33,723,3.648,724,3.059,726,2.883,727,3.576,728,3.157,1214,2.711,1416,2.73,1417,3.265,1419,5.409,1420,3.75,1421,5.381,1426,4.422,1438,5.55,1442,4.168,1474,4.764,1974,3.832,2093,4.564,2135,4.985,2136,5.566,2137,5.566,2138,5.566,2139,5.566,2140,5.608,2141,4.564,2142,5.937,2143,4.564,2144,5.566,2145,5.566,2146,5.566,2147,5.566,2148,4.962,2149,5.566,2150,4.564,2151,5.566,2152,3.832,2153,4.985,2154,4.985,2155,5.566,2156,4.985,2157,5.937,2158,5.937,2159,5.937,2160,3.832,2161,5.566,2162,4.564]],["title/classes/FileManager.html",[10,0.083,385,2.479]],["body/classes/FileManager.html",[3,0.127,4,0.103,5,0.044,8,0.119,9,2.812,10,0.155,15,0.33,23,1.479,30,0.732,43,1.355,44,0.006,45,0.505,46,0.18,47,1.132,50,1.049,52,1.637,63,0.546,74,0.193,86,0.143,115,0.005,116,0.005,118,1.713,121,1.866,144,1.644,184,3.385,203,1.257,314,1.59,332,1.774,385,3.815,386,2.96,392,1.619,409,3.313,419,2.504,669,4.478,724,3.14,860,1.806,1229,3.917,1237,3.71,1240,3.71,1241,3.71,1242,3.71,1245,4.105,1301,4.846,1615,3.608,2135,3.934,2140,3.76,2160,3.934,2163,5.094,2164,6.682,2165,6.039,2166,6.565,2167,6.039,2168,6.039,2169,6.565,2170,5.094,2171,5.715,2172,5.715,2173,6.039,2174,5.715,2175,5.715,2176,5.715,2177,6.039,2178,5.715,2179,5.715,2180,4.381,2181,4.686,2182,4.686,2183,4.686]],["title/classes/FileMd.html",[10,0.083,386,2.479]],["body/classes/FileMd.html",[3,0.147,4,0.119,5,0.043,8,0.137,9,2.791,10,0.162,15,0.381,23,1.619,30,0.521,43,0.964,44,0.006,45,0.425,46,0.128,47,0.805,50,0.746,52,1.326,63,0.537,74,0.206,86,0.157,115,0.005,116,0.005,118,1.979,121,1.993,144,1.63,184,2.742,314,1.505,332,2.503,385,3.419,386,4.176,392,1.242,409,2.684,419,2.245,669,3.628,724,3.628,860,1.929,1229,4.125,1237,3.326,1240,3.326,1241,3.326,1242,3.326,1245,3.326,1615,5.497,2135,4.545,2140,4.344,2160,4.545,2163,5.885,2164,5.413,2173,5.413,2177,5.413,2180,5.06,2181,5.413,2182,7.138,2183,6.611,2184,5.885,2185,6.601]],["title/interfaces/FileMetadata.html",[327,0.552,403,2.032]],["body/interfaces/FileMetadata.html",[3,0.048,4,0.039,5,0.044,8,0.075,10,0.111,15,0.208,16,0.867,25,1.244,33,1.887,38,0.868,40,1.325,41,0.62,44,0.007,45,0.356,46,0.171,50,0.604,52,0.438,53,2.951,58,0.623,63,0.558,69,3.3,74,0.126,81,0.424,86,0.146,87,0.467,88,1.067,115,0.002,116,0.002,121,1.897,122,1.564,123,1.198,134,1.098,144,1.18,147,1.042,152,3.501,167,0.947,170,0.816,174,1.641,175,2.173,183,1.003,203,1.283,240,1.596,264,0.471,267,0.431,279,3.501,292,2.909,296,0.62,314,1.552,327,0.997,328,3.135,329,0.642,330,1.325,331,4.921,332,2.536,333,2.189,334,2.189,335,3.135,336,3.47,337,1.325,338,2.512,339,3.031,340,2.189,341,2.189,342,1.325,343,1.325,344,2.112,345,2.189,346,2.189,347,3.736,348,1.376,349,1.376,350,1.376,351,2.274,352,2.797,353,3.031,354,3.135,355,3.489,356,2.112,357,1.376,358,3.911,359,0.833,360,1.325,361,1.376,362,2.274,363,1.979,364,3.776,365,3.378,366,3.198,367,1.279,368,1.376,369,1.376,370,1.376,371,1.376,372,1.376,373,0.728,374,0.969,375,1.376,376,1.376,377,2.274,378,1.6,379,1.376,380,1.203,381,1.376,382,1.376,383,1.204,384,0.886,385,1.865,386,1.865,387,1.198,388,1.784,389,0.942,390,0.947,391,1.723,392,0.41,393,1.689,394,1.564,395,1.325,396,3.736,397,2.215,398,2.05,399,0.969,400,1.404,401,2.112,402,1.016,403,2.269,404,2.727,405,0.714,406,3.873,407,2.274,408,2.432,409,1.464,410,2.22,411,2.274,412,2.274,413,2.189,414,4.905,415,2.274,416,5.411,417,2.274,418,2.083,419,1.565,420,3.135,421,4.271,422,2.906,423,1.404,424,3.248,425,3.248,426,2.274,427,3.135,428,3.794,429,3.737,430,3.736,431,3.616,432,1.529,433,4.257,434,2.094,435,3.135,436,4.417,437,2.274,438,2.189,439,2.189,440,2.274,441,4.876,442,3.375,443,3.375,444,3.596,445,1.722,446,3.135,447,2.274,448,2.189,449,1.376,450,1.376,451,1.325,452,2.59,453,3.133,454,2.59,455,2.274,456,1.325,457,2.189,458,1.376,459,3.501,460,2.189,461,2.189,462,1.325,463,1.376,464,1.376,465,1.325,466,3.596,467,1.325,468,1.564,469,1.376,470,1.325,471,0.905,472,1.376,473,1.162,474,2.832,475,1.376,476,1.376,477,1.376,478,2.454,479,1.325,480,1.496,481,2.274,482,1.433,483,1.325,484,2.145,485,2.797,486,1.325,487,1.325,488,1.325,489,1.279,490,3.375,491,1.376,492,1.325,493,1.325,494,1.325,495,1.376,496,1.376,497,1.376,498,1.325,499,1.279,500,1.376,501,1.455,502,1.325,503,1.325,504,2.906,505,1.325,506,1.325,507,2.797,508,2.274,509,3.375,510,2.043,511,2.274,512,1.325,513,1.325,514,1.376,515,1.325,516,1.376,517,1.325,518,0.57,519,1.325,520,1.376,521,1.325,522,1.325,523,1.279,524,2.906,525,1.376,526,1.979,527,2.274,528,1.376,529,2.274,530,1.376,531,1.376,532,1.376,533,1.162,534,1.376,535,1.376,536,1.376,537,1.376,538,2.274,539,1.376,540,2.274,541,1.376,542,2.189,543,2.274,544,1.325,545,1.376,546,1.376,547,2.906,548,1.376,549,3.375,550,2.906,551,2.906,552,2.906,553,1.376,554,4.452,555,1.376,556,3.135,557,4.257,558,1.376,559,1.376,560,1.376,561,2.274,562,2.274,563,1.376,564,1.376,565,1.376,566,1.376,567,1.376,568,1.376,569,1.376,570,1.376,571,2.274,572,1.376,573,1.376,574,0.926,575,1.376,576,2.274,577,2.189,578,1.376,579,1.376,580,1.376,581,1.376,582,1.129,583,2.274,584,4.024,585,1.376,586,1.376,587,2.906,588,1.376,589,1.376,590,1.376,591,2.189,592,1.376,593,1.376,594,1.376,595,1.376,596,2.906,597,2.274,598,1.376,599,1.376,600,2.274,601,1.376,602,2.274,603,1.376,604,1.042,605,1.376,606,3.736,607,1.376,608,1.376,609,1.376,610,1.098,611,1.376,612,1.069,613,3.375,614,3.248,615,1.376,616,1.376,617,2.274,618,2.274,619,2.274,620,2.274,621,1.376,622,1.376,623,1.376,624,1.376,625,1.325,626,1.016,627,1.325,628,1.376,629,1.376,630,1.376,631,2.189,632,1.325,633,1.376,634,1.376,635,0.969,636,2.906,637,2.189,638,1.376,639,1.376,640,1.376,641,1.376,642,1.376,643,2.274,644,0.57,645,1.325,646,1.325,647,1.376,648,1.325,649,1.325,650,0.969,651,1.376,652,1.376,653,1.376,654,1.376,655,1.325,656,1.376,657,1.376,658,1.376,659,1.325,660,0.689,661,0.631,662,0.689,663,1.279,664,0.926,665,0.785,666,1.376,667,1.376,668,0.947,669,1.979,670,0.785,671,1.244,672,0.785,673,1.325,674,0.905,675,1.043,676,0.947,677,0.833,678,0.85,679,0.926,680,1.758,681,0.947,682,1.325,683,1.325,684,0.653,685,1.061,686,1.325,687,0.475,688,0.599,689,1.129,690,1.279]],["title/entities/FileMetadataEntity.html",[264,0.49,2140,3.15]],["body/entities/FileMetadataEntity.html",[3,0.114,4,0.093,5,0.042,8,0.107,10,0.089,13,1.032,15,0.297,16,0.935,30,0.742,44,0.007,46,0.183,63,0.497,74,0.217,86,0.1,87,2.113,115,0.004,116,0.004,203,1.13,264,0.793,279,4.252,295,1.278,314,1.112,319,3.129,331,4.538,332,2.133,393,2.171,403,2.917,406,4.703,410,3.214,414,4.685,421,4.685,431,3.092,436,4.844,444,3.358,660,2.171,691,6.331,692,1.488,694,3.538,695,2.542,697,3.525,698,4.214,712,2.662,718,3.721,720,3.94,722,1.654,723,3.461,724,2.824,726,2.662,727,3.438,1426,5.386,1438,5.931,1474,6.282,2140,4.52,2141,7.262,2142,7.828,2143,7.262,2157,7.415,2158,7.415,2160,6.097,2186,9.48,2187,4.582,2188,7.363,2189,4.582,2190,6.331,2191,5.139,2192,5.139,2193,6.331,2194,5.139,2195,6.331,2196,5.139,2197,6.331,2198,5.139,2199,5.139]],["title/injectables/FileMetadataService.html",[837,1.569,2200,3.925]],["body/injectables/FileMetadataService.html",[3,0.106,4,0.056,5,0.043,8,0.155,10,0.054,15,0.178,16,0.886,23,0.954,24,2.593,25,2.339,30,0.555,43,1.085,44,0.007,45,0.371,46,0.144,47,0.944,50,0.875,51,1.109,58,1.34,63,0.434,66,4.141,74,0.214,76,0.619,86,0.06,87,1.018,88,1.373,89,2.601,93,2.348,98,2.256,103,1.941,115,0.003,116,0.003,124,2.609,144,0.795,166,5.115,167,3.227,174,1.33,183,1.263,184,1.28,212,1.872,218,1.93,219,1.945,220,2.23,240,0.729,247,1.807,300,3.894,312,3.125,319,2.745,331,3.865,332,2.823,353,1.747,358,2.214,367,1.807,386,3.373,387,1.693,394,3.562,404,1.677,423,1.851,431,2.438,444,2.859,466,1.872,542,3.522,610,2.392,671,1.105,691,4.442,829,2.329,837,1.556,839,1.436,841,2.27,855,1.552,860,1.052,908,2.897,942,1.473,1229,4.235,1258,2.46,1296,2.121,1435,2.693,1500,1.807,1558,3.64,1615,5.289,1833,2.362,1834,2.746,2140,6.266,2160,5.33,2181,2.526,2182,3.894,2183,7.094,2184,4.233,2188,4.233,2190,3.64,2193,3.64,2195,3.64,2197,3.64,2200,3.894,2201,7.033,2202,3.081,2203,4.233,2204,4.748,2205,4.748,2206,4.748,2207,4.748,2208,3.081,2209,4.748,2210,3.081,2211,7.995,2212,4.748,2213,3.081,2214,4.748,2215,3.081,2216,4.748,2217,3.081,2218,4.748,2219,3.894,2220,4.233,2221,6.555,2222,4.748,2223,4.748,2224,3.081,2225,4.233,2226,5.165,2227,3.081,2228,2.526,2229,3.081,2230,3.081,2231,3.081,2232,3.081,2233,3.081,2234,3.081,2235,3.081,2236,3.081,2237,3.081,2238,4.748,2239,3.081,2240,3.081,2241,3.081,2242,3.081,2243,3.081,2244,3.081,2245,3.081,2246,3.081,2247,3.081,2248,3.081,2249,3.081,2250,3.081,2251,3.081,2252,3.081,2253,4.748,2254,3.081,2255,3.081,2256,3.081,2257,2.526,2258,3.081,2259,3.081,2260,3.081,2261,4.748,2262,3.081,2263,3.081,2264,4.748,2265,4.748,2266,4.748,2267,4.748,2268,4.748,2269,3.081,2270,4.748,2271,3.081,2272,4.748,2273,3.081,2274,4.748,2275,3.081,2276,4.748,2277,3.081,2278,4.748,2279,3.081,2280,3.081,2281,3.081,2282,3.081,2283,3.081,2284,3.081,2285,3.081,2286,3.081,2287,3.081,2288,3.081,2289,3.081,2290,3.081,2291,3.081,2292,3.081,2293,3.081,2294,3.081,2295,3.081,2296,3.081,2297,3.081,2298,3.081,2299,3.081,2300,3.081,2301,3.081,2302,3.081,2303,3.081,2304,4.748,2305,3.081,2306,3.081,2307,3.081,2308,3.081,2309,3.081,2310,3.081,2311,3.081,2312,3.081,2313,3.081,2314,3.081,2315,3.081,2316,3.081,2317,3.081,2318,3.081,2319,3.081,2320,3.081,2321,3.081,2322,3.081,2323,3.081,2324,3.081,2325,3.081,2326,3.081,2327,3.081,2328,3.081,2329,4.748,2330,3.081,2331,3.081,2332,3.081,2333,3.081,2334,3.081,2335,3.081,2336,3.081,2337,4.748,2338,4.748,2339,4.748,2340,4.748,2341,4.748,2342,3.081,2343,3.081,2344,3.081,2345,3.081,2346,3.081,2347,3.081,2348,4.748,2349,3.081,2350,3.081,2351,3.081,2352,3.081,2353,3.081,2354,3.081,2355,3.081,2356,3.081,2357,3.081,2358,3.081,2359,3.081,2360,3.081,2361,3.081,2362,3.081,2363,3.081,2364,3.081,2365,3.081,2366,3.081,2367,3.081,2368,3.081,2369,3.081,2370,3.081,2371,3.081,2372,4.748,2373,3.081,2374,3.081,2375,4.748,2376,3.081,2377,3.081,2378,3.081,2379,3.081,2380,3.081,2381,3.081,2382,4.748,2383,3.081,2384,4.748,2385,6.511,2386,3.081,2387,3.081,2388,3.081,2389,3.081,2390,3.081,2391,3.081,2392,3.081,2393,4.748,2394,3.081,2395,3.081,2396,3.081,2397,3.081,2398,4.748,2399,3.081,2400,3.081,2401,3.081,2402,3.081,2403,3.081,2404,3.081,2405,3.081,2406,3.081,2407,3.081,2408,3.081,2409,3.081,2410,3.081,2411,3.081,2412,3.081,2413,3.081,2414,3.081,2415,3.081,2416,3.081,2417,3.081,2418,3.081,2419,3.081,2420,3.081,2421,3.081,2422,3.081,2423,3.081,2424,3.081,2425,3.081,2426,3.081,2427,3.081,2428,5.794,2429,3.081,2430,3.081,2431,3.081,2432,3.081,2433,3.081,2434,3.081,2435,3.081,2436,3.081,2437,3.081,2438,3.081,2439,3.081,2440,3.081,2441,3.081,2442,3.081,2443,3.081,2444,3.081,2445,3.081,2446,3.081,2447,3.081,2448,3.081,2449,3.081,2450,3.081,2451,3.081,2452,3.081,2453,3.081,2454,3.081,2455,3.081,2456,3.081,2457,3.081,2458,3.081,2459,3.081,2460,3.081,2461,3.081,2462,3.081,2463,3.081,2464,3.081,2465,3.081,2466,3.081,2467,3.081,2468,3.081,2469,3.081,2470,3.081,2471,3.081,2472,3.081,2473,3.081,2474,3.081,2475,3.081,2476,3.081,2477,3.081,2478,3.081,2479,3.081,2480,3.081,2481,3.081,2482,3.081,2483,3.081,2484,3.081,2485,3.081,2486,3.081,2487,3.081,2488,3.081,2489,3.081,2490,3.081,2491,3.081,2492,3.081,2493,3.081,2494,3.081,2495,3.081,2496,3.081,2497,3.081,2498,3.081,2499,3.081,2500,3.081,2501,3.081,2502,3.081]],["title/modules/FileModule.html",[689,2.479,850,1.114]],["body/modules/FileModule.html",[3,0.133,4,0.108,5,0.038,8,0.124,10,0.104,23,1.199,30,0.471,43,0.871,44,0.007,45,0.315,46,0.116,47,0.728,50,0.675,74,0.23,76,1.199,81,1.16,86,0.116,103,1.413,115,0.005,116,0.005,124,4.161,182,1.789,183,1.301,267,1.179,380,1.561,385,4.676,386,4.676,387,3.28,480,1.509,518,1.561,644,1.98,662,1.448,687,1.651,689,4.308,690,5.131,724,3.28,731,2.653,749,1.789,750,1.758,751,1.758,752,1.789,753,2.493,754,1.758,755,2.713,756,2.192,757,1.642,758,1.789,759,1.789,760,1.789,761,1.789,762,1.789,763,1.789,764,1.67,765,1.789,766,1.789,767,1.789,768,1.728,769,1.789,770,1.758,771,1.789,772,1.789,773,1.789,774,1.789,775,1.789,776,1.642,777,1.789,778,1.758,779,1.789,850,2.102,852,2.592,855,3.815,856,4.782,857,3.928,862,4.879,868,4.037,869,3.628,870,3.53,871,3.628,872,2.716,873,3.928,879,4.109,880,2.853,882,3.928,892,2.783,893,3.815,894,4.442,896,2.783,1214,2.835,1306,3.182,1464,3.928,2096,6.82,2114,6.376,2135,4.109,2180,4.576,2200,6.82,2503,5.969,2504,5.969,2505,5.969,2506,5.969,2507,5.969,2508,5.969,2509,5.969,2510,5.969]],["title/injectables/FileService.html",[837,1.569,2114,3.669]],["body/injectables/FileService.html",[3,0.057,4,0.046,5,0.045,8,0.165,10,0.044,15,0.147,17,1.548,18,1.788,19,3.628,21,2.991,23,0.821,24,2.995,25,2.609,30,0.661,38,1.627,43,1.157,44,0.007,45,0.477,46,0.154,47,0.967,50,1.038,51,2.11,52,1.762,53,2.453,58,1.015,59,5.591,63,0.496,66,2.117,74,0.203,76,0.511,86,0.049,87,1.844,88,1.455,89,2.561,93,3.126,97,3.221,98,1.98,103,1.952,115,0.003,116,0.003,124,2.246,125,2.398,137,1.443,144,1.582,147,3.276,152,4.113,180,3.276,182,1.225,183,0.891,184,2.127,203,1.399,218,2.383,264,0.945,267,0.808,293,3.352,295,0.633,314,1.391,317,2.319,332,1.993,366,1.736,373,1.957,385,4.105,386,3.036,387,1.399,392,1.617,394,3.774,397,3.253,400,0.993,401,1.494,404,2.543,409,3.14,423,1.594,482,2.727,664,1.736,669,4.899,670,2.695,671,2.06,672,1.471,675,1.697,684,1.225,685,1.508,692,1.183,724,1.399,757,1.124,784,1.676,788,1.676,837,1.34,839,1.187,841,1.954,842,4.806,844,1.444,846,1.106,848,1.358,849,1.548,860,0.906,908,1.594,920,2.581,937,2.69,1110,3.991,1132,1.954,1147,3.438,1149,1.159,1214,3.088,1229,2.92,1237,2.059,1240,2.059,1241,2.059,1242,2.059,1245,3.771,1258,2.117,1288,4.035,1296,4.957,1301,3.857,1303,1.843,1305,1.843,1306,1.358,1526,4.035,1576,3.352,1577,6.095,1615,2.581,1627,3.133,1636,1.676,1688,3.133,1695,4.565,1749,5.738,1775,3.133,1833,1.952,1854,6.138,2114,3.133,2135,6.22,2164,4.199,2165,3.352,2166,3.644,2167,3.352,2168,3.352,2169,3.644,2170,2.27,2173,3.352,2177,3.352,2180,1.952,2219,3.352,2228,2.088,2511,2.546,2512,6.852,2513,5.861,2514,5.121,2515,4.088,2516,5.861,2517,5.861,2518,5.121,2519,5.121,2520,2.546,2521,2.546,2522,7.485,2523,5.861,2524,2.546,2525,6.418,2526,2.546,2527,6.852,2528,4.088,2529,2.546,2530,2.546,2531,4.088,2532,5.861,2533,4.565,2534,2.546,2535,6.852,2536,2.546,2537,2.546,2538,2.546,2539,2.546,2540,3.644,2541,2.546,2542,3.857,2543,5.225,2544,2.546,2545,2.546,2546,4.088,2547,4.565,2548,2.546,2549,2.546,2550,2.546,2551,2.546,2552,2.546,2553,2.546,2554,2.546,2555,2.546,2556,2.546,2557,4.088,2558,4.088,2559,2.546,2560,2.088,2561,5.121,2562,5.861,2563,5.121,2564,5.121,2565,4.088,2566,4.088,2567,4.088,2568,4.088,2569,2.69,2570,2.546,2571,2.546,2572,2.546,2573,4.088,2574,2.546,2575,2.546,2576,2.546,2577,2.546,2578,2.546,2579,2.546,2580,2.546,2581,2.546,2582,2.546,2583,2.546,2584,2.546,2585,2.546,2586,2.546,2587,2.546,2588,2.546,2589,2.546,2590,2.546,2591,2.546,2592,2.546,2593,2.546,2594,5.121,2595,4.088,2596,2.546,2597,2.546,2598,2.546,2599,2.546,2600,2.546,2601,2.546,2602,2.546,2603,2.546,2604,2.546,2605,2.546,2606,2.546,2607,2.546,2608,2.546,2609,2.546,2610,2.546,2611,2.546,2612,2.546,2613,2.546,2614,2.546,2615,2.546,2616,2.546,2617,2.546,2618,2.546,2619,2.546,2620,2.546,2621,2.546,2622,2.546,2623,2.546,2624,2.546,2625,2.546,2626,2.546,2627,2.546,2628,2.546,2629,2.546,2630,2.546,2631,2.546,2632,2.546,2633,2.546,2634,2.546,2635,2.546,2636,2.546,2637,2.546,2638,2.546,2639,2.546,2640,2.546,2641,2.546,2642,2.546,2643,2.546,2644,2.546,2645,2.546,2646,2.546,2647,2.546,2648,2.546,2649,2.546,2650,3.644,2651,2.546]],["title/classes/ForbiddenMsException.html",[10,0.083,2652,4.267]],["body/classes/ForbiddenMsException.html",[3,0.16,4,0.13,5,0.033,8,0.15,10,0.125,30,0.568,43,1.05,44,0.006,45,0.38,46,0.14,47,0.878,63,0.506,74,0.201,76,1.445,86,0.14,115,0.005,116,0.005,118,2.157,137,2.541,181,3.958,184,2.989,604,4.059,841,4.059,959,4.953,960,5.361,961,4.98,963,5.845,964,5.587,965,5.399,966,5.845,967,4.953,968,4.735,969,4.953,2652,7.569,2653,8.49,2654,9.032,2655,7.195]],["title/classes/GoogleCaptchaService.html",[10,0.083,2656,4.267]],["body/classes/GoogleCaptchaService.html",[3,0.121,4,0.098,5,0.025,8,0.149,10,0.153,15,0.315,18,2.43,19,4.623,21,3.812,23,1.435,24,2.846,25,2.154,30,0.693,33,2.523,35,2.846,43,1.043,44,0.007,45,0.377,46,0.17,47,0.871,50,0.956,52,1.435,53,2.341,58,1.237,65,4.342,68,4.19,73,4.511,74,0.217,76,1.095,86,0.106,88,0.913,89,2.725,93,2.93,98,1.965,103,1.885,104,4.861,115,0.005,116,0.005,118,1.634,137,2.523,144,1.59,203,1.234,218,2.217,373,2.385,388,2.385,397,2.675,413,4.342,675,2.068,678,3.106,783,4.471,784,3.588,785,4.471,788,3.588,789,5.577,807,5.858,808,4.471,809,4.471,814,4.45,841,4.041,844,3.093,846,2.368,848,2.907,849,3.314,860,1.583,907,3.251,908,2.785,941,4.342,942,3.415,1019,5.172,1022,5.775,1026,4.918,1031,6.121,1032,5.172,1034,5.243,1296,4.918,1381,4.18,1636,3.588,1893,3.948,2656,7.537,2657,7.144,2658,4.861,2659,6.368,2660,7.524,2661,7.384,2662,6.368,2663,5.476,2664,7.144,2665,8.455,2666,5.453,2667,5.453,2668,6.933,2669,5.453,2670,7.144,2671,6.368,2672,4.861,2673,5.453,2674,5.453,2675,5.453,2676,5.453,2677,5.453,2678,5.453,2679,5.453,2680,5.453]],["title/interfaces/GpsFileMetadata.html",[327,0.552,427,2.807]],["body/interfaces/GpsFileMetadata.html",[3,0.051,4,0.041,5,0.044,8,0.078,10,0.114,15,0.216,16,0.748,25,1.286,33,1.942,38,0.91,40,1.389,41,0.65,44,0.007,45,0.363,46,0.161,50,0.622,52,0.459,53,2.942,58,0.823,63,0.558,69,2.464,74,0.13,81,0.444,86,0.149,87,0.49,88,1.091,115,0.002,116,0.002,121,2,122,1.626,123,1.256,134,1.152,144,1.203,147,1.093,152,3.582,167,0.993,170,0.856,174,1.639,175,2.236,183,1.037,203,1.294,240,1.629,264,0.487,267,0.452,279,2.058,292,2.595,296,0.65,314,1.569,327,1.006,328,2.197,329,0.673,330,1.389,331,4.836,332,2.528,333,2.276,334,2.276,335,3.226,336,3.56,337,1.389,338,2.577,339,3.12,340,2.276,341,2.276,342,1.389,343,1.389,344,2.197,345,2.276,346,2.276,347,3.833,348,1.443,349,1.443,350,1.443,351,2.365,352,2.891,353,3.12,354,3.226,355,3.47,356,2.197,357,1.443,358,3.908,359,0.873,360,1.389,361,1.443,362,2.365,363,2.058,364,3.729,365,3.388,366,3.051,367,1.341,368,1.443,369,1.443,370,1.443,371,1.443,372,1.443,373,0.763,374,1.016,375,1.443,376,1.443,377,2.365,378,1.664,379,1.443,380,1.244,381,1.443,382,1.443,383,1.239,384,0.929,385,1.94,386,1.94,387,1.256,388,1.836,389,0.979,390,0.993,391,2.059,392,0.43,393,1.739,394,1.626,395,1.389,396,3.833,397,2.272,398,1.906,399,1.016,400,1.46,401,2.197,402,1.066,403,2.02,404,2.626,405,0.749,406,2.276,407,1.443,408,1.704,409,0.929,410,0.949,411,1.443,412,1.443,413,1.389,414,4.754,415,1.443,416,5.349,417,1.443,418,1.46,419,1.273,420,2.197,421,4.341,422,2.365,423,0.891,424,4.184,425,4.184,426,1.443,427,2.79,428,3.468,429,2.79,430,3.004,431,3.595,432,0.971,433,4.116,434,1.704,435,2.197,436,3.824,437,1.443,438,1.389,439,1.389,440,1.443,441,4.832,442,3.004,443,2.365,444,3.519,445,1.093,446,2.197,447,2.365,448,2.276,449,1.443,450,1.443,451,1.389,452,2.65,453,3.193,454,2.65,455,2.365,456,1.389,457,2.276,458,1.443,459,3.582,460,2.276,461,2.276,462,1.389,463,1.443,464,1.443,465,1.389,466,3.689,467,1.389,468,1.626,469,1.443,470,1.389,471,0.949,472,1.443,473,1.219,474,2.897,475,1.443,476,1.443,477,1.443,478,2.536,479,1.389,480,1.535,481,2.365,482,1.491,483,1.389,484,2.218,485,2.891,486,1.389,487,1.389,488,1.389,489,1.341,490,3.473,491,1.443,492,1.389,493,1.389,494,1.389,495,1.443,496,1.443,497,1.443,498,1.389,499,1.341,500,1.443,501,1.504,502,1.389,503,1.389,504,3.004,505,1.389,506,1.389,507,2.891,508,2.365,509,3.473,510,2.124,511,2.365,512,1.389,513,1.389,514,1.443,515,1.389,516,1.443,517,1.389,518,0.598,519,1.389,520,1.443,521,1.389,522,1.389,523,1.341,524,3.004,525,1.443,526,2.058,527,2.365,528,1.443,529,2.365,530,1.443,531,1.443,532,1.443,533,1.219,534,1.443,535,1.443,536,1.443,537,1.443,538,2.365,539,1.443,540,2.365,541,1.443,542,2.276,543,2.365,544,1.389,545,1.443,546,1.443,547,3.004,548,1.443,549,3.473,550,3.004,551,3.004,552,3.004,553,1.443,554,4.537,555,1.443,556,3.226,557,4.346,558,1.443,559,1.443,560,1.443,561,2.365,562,2.365,563,1.443,564,1.443,565,1.443,566,1.443,567,1.443,568,1.443,569,1.443,570,1.443,571,2.365,572,1.443,573,1.443,574,0.971,575,1.443,576,2.365,577,2.276,578,1.443,579,1.443,580,1.443,581,1.443,582,1.184,583,2.365,584,4.116,585,1.443,586,1.443,587,3.004,588,1.443,589,1.443,590,1.443,591,2.276,592,1.443,593,1.443,594,1.443,595,1.443,596,3.004,597,2.365,598,1.443,599,1.443,600,2.365,601,1.443,602,2.365,603,1.443,604,1.093,605,1.443,606,3.833,607,1.443,608,1.443,609,1.443,610,1.152,611,1.443,612,1.121,613,3.473,614,3.343,615,1.443,616,1.443,617,2.365,618,2.365,619,2.365,620,2.365,621,1.443,622,1.443,623,1.443,624,1.443,625,1.389,626,1.066,627,1.389,628,1.443,629,1.443,630,1.443,631,2.276,632,1.389,633,1.443,634,1.443,635,1.664,636,4.116,637,3.962,638,1.443,639,1.443,640,1.443,641,1.443,642,1.443,643,2.365,644,0.598,645,1.389,646,1.389,647,1.443,648,1.389,649,1.389,650,1.016,651,1.443,652,1.443,653,1.443,654,1.443,655,1.389,656,1.443,657,1.443,658,1.443,659,1.389,660,0.723,661,0.662,662,0.716,663,1.341,664,0.971,665,0.823,666,1.443,667,1.443,668,0.993,669,2.058,670,0.823,671,1.28,672,0.823,673,1.389,674,0.949,675,1.084,676,0.993,677,0.873,678,0.891,679,0.971,680,1.817,681,0.993,682,1.389,683,1.389,684,0.685,685,1.103,686,1.389,687,0.498,688,0.629,689,1.184,690,1.341]],["title/entities/GpsFileMetadataEntity.html",[264,0.49,2190,3.669]],["body/entities/GpsFileMetadataEntity.html",[3,0.141,4,0.114,5,0.043,8,0.132,10,0.11,13,1.273,15,0.531,16,1.07,30,0.705,44,0.006,46,0.174,61,3.985,74,0.186,86,0.123,87,2.057,115,0.005,116,0.005,182,2.807,203,1.248,218,3.475,264,0.876,295,1.576,314,1.553,326,6.447,332,2.441,393,2.485,421,4.459,424,5.195,425,5.195,427,4.611,637,5.195,692,1.834,694,4.362,695,2.416,697,3.727,706,7.009,707,7.679,708,7.679,709,7.679,712,3.282,713,4.587,722,2.039,723,3.961,724,3.482,726,3.282,729,7.009,2189,5.648,2190,6.026,2681,9.189,2682,6.336,2683,6.336,2684,6.336]],["title/classes/GraphicCaptchaService.html",[10,0.083,1393,3.925]],["body/classes/GraphicCaptchaService.html",[3,0.091,4,0.073,5,0.018,8,0.156,10,0.138,15,0.235,18,1.782,19,4.574,21,3.772,23,1.174,24,3.014,25,2.553,30,0.73,33,2.063,35,2.603,43,0.998,44,0.007,45,0.361,46,0.145,47,0.834,50,1.037,51,2.689,52,1.174,53,1.915,58,1.011,63,0.462,65,3.552,68,3.427,73,3.69,74,0.219,76,0.817,86,0.079,87,0.873,88,1.251,89,2.848,93,2.994,96,3.628,98,1.607,103,2.054,115,0.004,116,0.004,118,1.22,125,4.382,137,2.063,144,1.615,182,1.22,183,1.629,203,1.267,218,1.655,373,2.641,393,1.847,394,3.576,416,3.552,431,3.358,459,3.756,670,2.103,675,2.29,783,3.337,784,2.678,785,3.337,788,2.678,789,5.156,807,4.791,808,3.337,809,3.337,814,4.65,841,3.571,844,2.309,846,1.768,848,2.17,849,2.474,907,3.399,908,2.278,931,3.845,941,4.809,942,1.946,1010,4.317,1019,4.23,1022,5.206,1026,4.023,1031,5.408,1032,4.23,1034,2.678,1296,4.023,1381,3.12,1393,6.126,1398,5.209,1435,3.314,1636,2.678,1677,3.628,1688,3.12,1749,3.12,2543,5.209,2650,3.628,2658,3.628,2659,5.209,2662,5.209,2663,4.479,2668,7.522,2671,5.209,2685,8.483,2686,6.126,2687,7.471,2688,6.836,2689,7.471,2690,7.471,2691,7.471,2692,5.843,2693,4.07,2694,4.07,2695,5.843,2696,4.07,2697,4.07,2698,5.843,2699,4.07,2700,4.07,2701,7.737,2702,7.053,2703,4.07,2704,5.843,2705,5.843,2706,4.07,2707,7.341,2708,5.843,2709,5.843,2710,5.843,2711,4.07,2712,5.843,2713,4.07,2714,5.843,2715,3.628,2716,4.07,2717,4.07,2718,5.209,2719,3.628,2720,4.07,2721,4.07,2722,4.07,2723,4.07,2724,4.07,2725,4.07,2726,4.07,2727,4.07,2728,4.07,2729,7.341,2730,4.07,2731,3.628,2732,4.07,2733,5.843,2734,4.07,2735,4.07,2736,4.07,2737,4.07,2738,4.07,2739,4.07,2740,5.843,2741,4.07,2742,4.07,2743,4.07,2744,3.628,2745,3.337,2746,4.07,2747,6.836,2748,4.07,2749,4.07,2750,4.07,2751,4.07,2752,4.07,2753,4.07,2754,4.07,2755,4.07,2756,4.07,2757,4.07,2758,4.07,2759,4.07,2760,4.07,2761,4.07,2762,4.07,2763,4.07]],["title/interfaces/IccFileMetadata.html",[327,0.552,420,2.807]],["body/interfaces/IccFileMetadata.html",[3,0.047,4,0.038,5,0.044,8,0.094,10,0.122,15,0.204,16,0.717,25,1.224,33,1.861,38,0.848,40,2.148,41,0.606,44,0.007,45,0.394,46,0.177,50,0.596,52,0.428,53,2.955,58,0.612,63,0.562,69,2.345,74,0.125,81,0.414,86,0.145,87,0.457,88,1.055,115,0.002,116,0.002,121,1.91,122,1.535,123,1.171,134,1.073,144,1.169,147,1.018,152,3.462,167,0.925,170,0.798,174,1.613,175,2.142,183,0.987,203,1.277,240,1.768,264,0.464,267,0.421,279,1.942,292,2.508,296,0.606,314,1.551,327,0.992,328,2.073,329,0.628,330,1.295,331,4.769,332,2.479,333,2.148,334,2.148,335,3.091,336,3.427,337,1.295,338,2.481,339,2.989,340,2.148,341,2.148,342,1.295,343,1.295,344,2.073,345,2.148,346,2.148,347,3.69,348,1.345,349,1.345,350,1.345,351,2.231,352,2.752,353,2.989,354,3.091,355,3.481,356,2.073,357,1.345,358,4.242,359,0.814,360,1.295,361,1.345,362,2.231,363,1.942,364,3.705,365,3.367,366,3.077,367,1.25,368,1.345,369,1.345,370,1.345,371,1.345,372,1.345,373,0.711,374,0.947,375,1.345,376,1.345,377,2.231,378,1.57,379,1.345,380,1.184,381,1.345,382,1.345,383,1.187,384,0.866,385,1.83,386,1.83,387,1.171,388,1.759,389,1.184,390,0.925,391,1.973,392,0.401,393,1.666,394,1.535,395,1.295,396,3.979,397,2.188,398,1.826,399,0.947,400,1.378,401,2.073,402,0.993,403,1.923,404,2.819,405,0.698,406,2.148,407,1.345,408,1.608,409,0.866,410,0.885,411,1.345,412,1.345,413,1.295,414,5.162,415,1.345,416,5.452,417,1.345,418,1.378,419,1.202,420,2.656,421,3.574,422,2.231,423,0.831,424,2.752,425,2.752,426,1.345,427,2.073,428,3.519,429,2.656,430,3.327,431,3.57,432,0.905,433,3.979,434,1.608,435,2.073,436,3.696,437,1.345,438,1.295,439,1.295,440,1.345,441,4.717,442,3.69,443,2.231,444,3.466,445,1.018,446,2.073,447,2.231,448,2.148,449,1.345,450,1.345,451,1.295,452,2.561,453,3.104,454,2.561,455,2.231,456,1.295,457,2.148,458,1.345,459,3.667,460,2.752,461,2.752,462,1.295,463,1.345,464,1.345,465,1.295,466,3.83,467,1.295,468,1.535,469,1.345,470,1.295,471,0.885,472,1.345,473,1.136,474,2.966,475,1.345,476,1.345,477,1.345,478,2.414,479,1.295,480,1.687,481,2.859,482,1.802,483,3.203,484,2.937,485,3.83,486,3.203,487,2.148,488,3.203,489,2.073,490,3.979,491,2.231,492,2.148,493,3.203,494,3.203,495,2.231,496,2.231,497,2.231,498,3.203,499,2.073,500,2.231,501,1.666,502,2.148,503,3.203,504,3.327,505,3.203,506,3.203,507,3.552,508,3.327,509,3.979,510,2.989,511,3.327,512,3.203,513,3.203,514,2.231,515,3.203,516,2.231,517,3.203,518,0.924,519,2.148,520,2.231,521,2.148,522,3.203,523,1.25,524,2.859,525,1.345,526,1.942,527,2.231,528,1.345,529,2.231,530,1.345,531,1.345,532,1.345,533,1.136,534,1.345,535,1.345,536,1.345,537,1.345,538,2.231,539,1.345,540,2.231,541,1.345,542,2.148,543,2.231,544,1.295,545,1.345,546,1.345,547,2.859,548,1.345,549,3.327,550,2.859,551,2.859,552,2.859,553,1.345,554,4.41,555,1.345,556,3.091,557,4.214,558,1.345,559,1.345,560,1.345,561,2.231,562,2.231,563,1.345,564,1.345,565,1.345,566,1.345,567,1.345,568,1.345,569,1.345,570,1.345,571,2.231,572,1.345,573,1.345,574,0.905,575,1.345,576,2.231,577,2.148,578,1.345,579,1.345,580,1.345,581,1.345,582,1.104,583,2.231,584,3.979,585,1.345,586,1.345,587,2.859,588,1.345,589,1.345,590,1.345,591,2.148,592,1.345,593,1.345,594,1.345,595,1.345,596,2.859,597,2.231,598,1.345,599,1.345,600,2.231,601,1.345,602,2.231,603,1.345,604,1.018,605,1.345,606,3.69,607,1.345,608,1.345,609,1.345,610,1.073,611,1.345,612,1.045,613,3.327,614,3.203,615,1.345,616,1.345,617,2.231,618,2.231,619,2.231,620,2.231,621,1.345,622,1.345,623,1.345,624,1.345,625,1.295,626,0.993,627,1.295,628,1.345,629,1.345,630,1.345,631,2.148,632,1.295,633,1.345,634,1.345,635,0.947,636,2.859,637,2.148,638,1.345,639,1.345,640,1.345,641,1.345,642,1.345,643,2.231,644,0.557,645,1.295,646,1.295,647,1.345,648,1.295,649,1.295,650,0.947,651,1.345,652,1.345,653,1.345,654,1.345,655,1.295,656,1.345,657,1.345,658,1.345,659,1.295,660,0.673,661,0.617,662,0.676,663,1.25,664,0.905,665,0.767,666,1.345,667,1.345,668,0.925,669,1.942,670,0.767,671,1.227,672,0.767,673,1.295,674,0.885,675,1.023,676,0.925,677,0.814,678,0.831,679,0.905,680,1.73,681,0.925,682,1.295,683,1.295,684,0.639,685,1.041,686,1.295,687,0.464,688,0.586,689,1.104,690,1.25]],["title/entities/IccFileMetadataEntity.html",[264,0.49,2193,3.669]],["body/entities/IccFileMetadataEntity.html",[3,0.108,4,0.087,5,0.044,8,0.101,10,0.084,13,0.972,15,0.558,16,0.897,30,0.759,44,0.007,45,0.525,46,0.187,63,0.556,74,0.156,86,0.094,87,2.139,115,0.004,116,0.004,203,1.095,240,1.561,264,0.769,295,1.203,314,1.067,332,2.048,393,2.084,414,3.741,420,3.868,483,4.56,486,4.56,488,4.56,493,4.56,494,4.56,498,4.56,503,4.56,505,4.56,506,4.56,512,4.56,513,4.56,515,4.56,517,4.56,522,4.56,692,1.4,694,3.331,695,2.602,696,5.196,697,3.96,700,3.055,701,3.709,702,3.709,704,3.967,705,3.709,712,2.506,713,3.502,716,3.709,718,3.502,720,3.709,722,1.557,723,3.322,724,2.658,726,2.506,727,4.202,728,2.744,2187,4.313,2193,5.055,2764,9.666,2765,6.595,2766,6.595,2767,4.313,2768,6.595,2769,4.313,2770,6.595,2771,6.595,2772,4.838,2773,4.313,2774,6.595,2775,6.595,2776,6.595,2777,6.595,2778,6.595,2779,6.595,2780,4.838,2781,6.595,2782,6.595,2783,4.313,2784,6.595,2785,4.313,2786,4.838,2787,4.313]],["title/interfaces/ImageFileMetadata.html",[327,0.552,435,2.807]],["body/interfaces/ImageFileMetadata.html",[3,0.048,4,0.039,5,0.044,8,0.075,10,0.111,15,0.208,16,0.726,25,1.243,33,2.088,38,0.866,40,1.323,41,0.619,44,0.007,45,0.355,46,0.173,50,0.604,52,0.437,53,2.965,58,0.623,63,0.559,69,2.381,74,0.126,81,0.423,86,0.146,87,0.467,88,1.066,115,0.002,116,0.002,121,1.896,122,1.996,123,1.196,134,1.096,144,1.179,147,1.04,152,4.014,167,0.945,170,0.815,174,1.627,175,2.17,183,1.002,203,1.282,240,1.781,264,0.471,267,0.43,279,1.976,292,2.534,296,0.619,314,1.577,327,0.996,328,2.11,329,0.641,330,1.323,331,4.79,332,2.494,333,2.186,334,2.186,335,3.131,336,3.467,337,1.323,338,2.51,339,3.028,340,2.186,341,2.186,342,1.323,343,1.323,344,2.11,345,2.186,346,2.186,347,3.733,348,1.374,349,1.374,350,1.374,351,2.271,352,2.794,353,3.028,354,3.131,355,3.508,356,2.11,357,1.374,358,3.86,359,0.831,360,1.323,361,1.374,362,2.271,363,1.976,364,3.719,365,3.39,366,3.102,367,1.277,368,1.374,369,1.374,370,1.374,371,1.374,372,1.374,373,0.726,374,0.967,375,1.374,376,1.374,377,2.271,378,1.598,379,1.374,380,1.202,381,1.374,382,1.374,383,1.203,384,0.885,385,1.863,386,1.863,387,1.196,388,1.782,389,0.94,390,0.945,391,1.721,392,0.409,393,1.688,394,1.562,395,1.323,396,4.02,397,2.213,398,2.048,399,0.967,400,1.402,401,2.11,402,1.015,403,1.952,404,2.658,405,0.713,406,2.186,407,1.374,408,1.637,409,0.885,410,0.904,411,1.374,412,1.374,413,1.323,414,4.697,415,1.374,416,5.525,417,1.374,418,1.402,419,1.223,420,2.11,421,3.611,422,2.271,423,0.848,424,2.794,425,2.794,426,1.374,427,2.11,428,3.549,429,2.696,430,2.903,431,3.637,432,0.924,433,4.02,434,2.092,435,2.696,436,3.734,437,1.374,438,1.323,439,1.323,440,1.374,441,4.752,442,2.903,443,2.271,444,3.482,445,1.04,446,2.11,447,3.371,448,3.245,449,2.271,450,2.271,451,3.245,452,3.06,453,3.345,454,3.06,455,2.903,456,3.245,457,3.87,458,2.271,459,3.702,460,2.794,461,2.794,462,3.245,463,2.271,464,2.271,465,3.245,466,3.87,467,3.245,468,2.765,469,2.271,470,2.186,471,1.494,472,2.271,473,2.846,474,2.994,475,2.271,476,2.271,477,2.271,478,2.846,479,3.245,480,1.495,481,2.271,482,1.432,483,1.323,484,2.143,485,2.794,486,1.323,487,1.323,488,1.323,489,1.277,490,3.371,491,1.374,492,1.323,493,1.323,494,1.323,495,1.374,496,1.374,497,1.374,498,1.323,499,1.277,500,1.374,501,1.453,502,1.323,503,1.323,504,2.903,505,1.323,506,1.323,507,2.794,508,2.271,509,3.371,510,2.04,511,2.271,512,1.323,513,1.323,514,1.374,515,1.323,516,1.374,517,1.323,518,0.569,519,1.323,520,1.374,521,1.323,522,1.323,523,1.277,524,2.903,525,1.374,526,1.976,527,2.271,528,1.374,529,2.271,530,1.374,531,1.374,532,1.374,533,1.16,534,1.374,535,1.374,536,1.374,537,1.374,538,2.271,539,1.374,540,2.271,541,1.374,542,2.186,543,2.271,544,1.323,545,1.374,546,1.374,547,2.903,548,1.374,549,3.371,550,2.903,551,2.903,552,2.903,553,1.374,554,4.449,555,1.374,556,3.131,557,4.254,558,1.374,559,1.374,560,1.374,561,2.271,562,2.271,563,1.374,564,1.374,565,1.374,566,1.374,567,1.374,568,1.374,569,1.374,570,1.374,571,2.271,572,1.374,573,1.374,574,0.924,575,1.374,576,2.271,577,2.186,578,1.374,579,1.374,580,1.374,581,1.374,582,1.127,583,2.271,584,4.02,585,1.374,586,1.374,587,2.903,588,1.374,589,1.374,590,1.374,591,2.186,592,1.374,593,1.374,594,1.374,595,1.374,596,2.903,597,2.271,598,1.374,599,1.374,600,2.271,601,1.374,602,2.271,603,1.374,604,1.04,605,1.374,606,3.733,607,1.374,608,1.374,609,1.374,610,1.096,611,1.374,612,1.068,613,3.371,614,3.245,615,1.374,616,1.374,617,2.271,618,2.271,619,2.271,620,2.271,621,1.374,622,1.374,623,1.374,624,1.374,625,1.323,626,1.015,627,1.323,628,1.374,629,1.374,630,1.374,631,2.186,632,1.323,633,1.374,634,1.374,635,0.967,636,2.903,637,2.186,638,1.374,639,1.374,640,1.374,641,1.374,642,1.374,643,2.271,644,0.569,645,1.323,646,1.323,647,1.374,648,1.323,649,1.323,650,0.967,651,1.374,652,1.374,653,1.374,654,1.374,655,1.323,656,1.374,657,1.374,658,1.374,659,1.323,660,0.688,661,0.63,662,0.688,663,1.277,664,0.924,665,0.783,666,1.374,667,1.374,668,0.945,669,1.976,670,0.783,671,1.243,672,0.783,673,1.323,674,0.904,675,1.041,676,0.945,677,0.831,678,0.848,679,0.924,680,1.756,681,0.945,682,1.323,683,1.323,684,0.652,685,1.059,686,1.323,687,0.474,688,0.598,689,1.127,690,1.277]],["title/entities/ImageFileMetadataEntity.html",[264,0.49,2195,3.669]],["body/entities/ImageFileMetadataEntity.html",[3,0.118,4,0.096,5,0.044,8,0.111,10,0.092,13,1.066,15,0.557,16,0.955,30,0.757,44,0.007,45,0.441,46,0.186,61,3.9,63,0.53,74,0.166,86,0.103,87,2.136,115,0.004,116,0.004,182,2.774,203,1.148,218,3.401,240,1.661,264,0.805,295,1.32,314,1.553,332,2.179,393,2.218,431,2.627,435,4.116,451,4.779,452,3.196,454,3.196,456,4.779,457,4.779,462,4.779,465,4.779,467,4.779,468,3.414,473,4.192,479,4.779,692,1.536,694,3.654,695,2.594,696,4.911,697,3.951,700,5.282,701,4.068,702,4.068,704,4.352,705,4.068,712,2.749,713,3.842,716,4.068,718,3.842,720,4.068,722,1.708,723,3.535,724,2.916,726,2.749,727,3.972,728,4.745,2195,5.379,2767,4.731,2769,4.731,2773,4.731,2783,4.731,2785,4.731,2787,4.731,2788,9.649,2789,7.018,2790,7.018,2791,5.307]],["title/classes/InvalidTokenMsException.html",[10,0.083,2792,4.267]],["body/classes/InvalidTokenMsException.html",[3,0.159,4,0.129,5,0.032,8,0.149,10,0.125,30,0.566,42,5.393,43,1.046,44,0.006,45,0.378,46,0.139,47,0.874,63,0.506,74,0.2,76,1.439,86,0.139,115,0.005,116,0.005,118,2.148,137,2.531,181,3.949,184,2.977,300,7.394,604,4.049,841,4.049,959,4.934,960,5.349,961,4.968,964,5.574,965,5.393,966,5.831,967,4.934,968,4.716,969,4.934,2792,7.551,2793,8.47,2794,6.388]],["title/classes/JwtDto.html",[10,0.083,801,3.15]],["body/classes/JwtDto.html",[3,0.099,4,0.08,5,0.02,8,0.092,10,0.157,12,4.269,15,0.256,16,0.846,30,0.645,35,2.851,41,2.6,42,5.469,44,0.007,46,0.175,47,0.947,50,0.811,53,1.455,58,1.637,63,0.518,71,2.815,74,0.206,76,0.892,81,0.863,86,0.159,88,1.486,98,2.249,115,0.004,116,0.004,118,1.331,121,1.017,144,1.418,167,3.374,170,1.663,174,1.614,203,0.648,240,2.101,258,3.215,276,3.263,291,3.958,327,0.716,365,2.851,388,3.135,423,1.731,428,3.613,582,2.3,610,2.237,660,1.404,661,1.286,662,1.188,671,1.669,678,3.392,687,0.968,688,1.221,695,2.211,735,4.279,736,3.215,738,4.279,741,5.035,743,4.09,746,3.215,764,1.242,786,2.804,787,3.057,797,4.528,800,3.057,801,4.719,814,3.428,829,2.178,850,1.034,858,3.057,860,1.589,907,2.828,908,2.796,909,6.359,910,6.21,913,4.937,914,3.057,918,3.215,920,2.804,927,3.057,930,5.576,953,3.057,954,3.057,971,3.215,973,3.404,974,6.496,975,5.497,976,4.765,977,3.173,979,3.404,980,4.765,981,2.804,982,2.804,984,2.605,985,2.3,986,3.404,987,3.404,988,3.404,989,4.765,990,4.719,991,6.268,992,5.576,993,2.605,994,3.52,995,2.922,996,1.51,997,4.142,998,2.123,999,3.404,1000,3.404,1001,3.715,1002,4.719,1003,2.922,1004,3.404,1005,3.404,1006,3.404,1007,3.404,1008,3.404,1009,4.5,1010,5.351,1011,4.765,1012,5.955,1013,5.497,1014,5.497,1015,2.123,2795,4.441,2796,4.441,2797,4.441,2798,4.441,2799,3.215,2800,4.441]],["title/interfaces/Language.html",[327,0.552,776,1.316]],["body/interfaces/Language.html",[3,0.153,4,0.124,5,0.031,8,0.143,15,0.397,16,1.125,44,0.006,45,0.485,46,0.172,63,0.553,74,0.163,86,0.172,115,0.005,116,0.005,183,1.802,203,1.394,264,0.942,314,1.338,327,1.113,329,2.027,383,2.151,392,1.555,400,3.584,776,2.626,1065,2.255,1544,5.588,2801,5.642,2802,5.642,2803,5.985,2804,5.985,2805,4.981]],["title/entities/LanguageEntity.html",[264,0.49,2806,3.295]],["body/entities/LanguageEntity.html",[3,0.137,4,0.111,5,0.035,8,0.128,10,0.107,13,1.233,15,0.526,16,1.049,30,0.697,44,0.007,45,0.445,46,0.172,63,0.521,74,0.199,81,1.193,86,0.119,87,1.895,115,0.005,116,0.005,203,1.23,264,0.863,267,1.213,295,1.527,319,2.526,380,1.605,389,2.015,392,1.585,393,2.437,400,3.285,480,1.552,501,2.437,518,1.605,644,2.015,670,2.775,692,1.777,695,2.39,696,3.374,697,3.518,722,1.976,727,3.426,749,1.84,750,1.809,751,1.809,752,1.84,753,2.526,754,1.809,755,2.73,756,2.232,757,1.689,758,1.84,759,1.84,760,1.84,761,1.84,762,1.84,763,1.84,764,1.718,765,1.84,766,1.84,767,1.84,768,1.777,769,1.84,770,1.809,771,1.84,772,1.84,773,1.84,774,1.84,775,1.84,776,2.317,777,1.84,778,1.809,779,1.84,1108,2.729,1207,3.993,1416,3.781,1417,3.601,1419,5.184,1420,3.18,1421,4.868,1442,3.993,1448,5.035,1922,3.483,1928,4.04,2806,5.307,2807,6.14,2808,6.14,2809,6.14,2810,6.14,2811,6.14,2812,5.035,2813,6.14]],["title/injectables/LiteAuthGuard.html",[794,3.925,837,1.569]],["body/injectables/LiteAuthGuard.html",[0,5.868,1,7.144,3,0.148,4,0.12,5,0.03,7,5.936,8,0.139,9,1.863,10,0.116,12,4.997,15,0.384,16,1.103,17,5.761,18,2.665,19,4.833,20,7.79,21,3.985,22,4.969,30,0.64,43,0.972,44,0.006,45,0.351,46,0.129,47,0.812,71,2.429,74,0.221,76,1.337,82,5.46,83,5.104,86,0.129,115,0.005,116,0.005,137,2.862,182,1.996,183,1.452,355,2.975,670,2.918,770,2.387,794,6.646,796,5.46,837,2.656,839,3.104,841,4.346,843,7.226,844,3.777,846,2.892,847,5.936,848,3.55,849,4.047,2814,8.738,2815,8.105,2816,8.105]],["title/modules/LocaleModule.html",[850,1.114,2817,3.669]],["body/modules/LocaleModule.html",[3,0.141,4,0.114,5,0.036,8,0.132,10,0.11,44,0.007,74,0.222,76,1.273,81,1.232,86,0.123,115,0.005,116,0.005,267,1.252,380,1.656,480,1.602,518,1.656,612,3.856,644,2.055,749,1.899,750,1.866,751,1.866,752,1.899,753,2.562,754,1.866,755,2.748,756,2.276,757,1.742,758,1.899,759,1.899,760,1.899,761,1.899,762,1.899,763,1.899,764,1.772,765,1.899,766,1.899,767,1.899,768,1.834,769,1.899,770,1.866,771,1.899,772,1.899,773,1.899,774,1.899,775,1.899,776,1.742,777,1.899,778,1.866,779,1.899,850,2.139,852,2.752,880,3.029,892,3.985,896,3.985,985,3.282,1286,4.191,1306,3.378,1319,3.594,1320,4.001,1321,4.001,1322,4.001,1327,4.001,1424,4.072,1445,3.482,1459,6.026,1460,6.446,1464,4.169,2806,5.412,2817,7.278,2818,5.648,2819,5.648,2820,5.648,2821,7.539,2822,6.336,2823,5.691,2824,7.008,2825,5.648,2826,7.008,2827,5.691,2828,4.857,2829,6.336,2830,5.648]],["title/injectables/LocaleService.html",[837,1.569,2821,3.669]],["body/injectables/LocaleService.html",[3,0.132,4,0.107,5,0.027,8,0.157,10,0.103,15,0.342,18,2.528,23,1.514,24,2.62,25,2.241,30,0.595,43,1.1,44,0.007,45,0.398,46,0.146,47,1.064,50,0.852,63,0.516,74,0.218,76,1.19,86,0.115,88,1.261,89,2.796,93,2.766,98,1.629,103,1.402,115,0.005,116,0.005,137,2.661,144,1.46,183,2.007,184,2.46,295,1.473,355,2.766,392,1.781,671,1.754,677,2.878,776,2.072,837,2.47,839,2.761,860,1.67,1164,2.821,1165,3.349,1207,4.518,1258,3.903,1288,6.632,1305,4.288,1306,3.158,1352,6.179,1424,4.665,1445,3.255,1548,7.152,1904,5.188,2803,6.665,2806,4.078,2821,5.777,2823,5.455,2824,6.718,2825,5.28,2826,6.718,2827,4.288,2828,4.54,2831,5.923,2832,8.288,2833,5.923,2834,8.288,2835,8.288,2836,5.923,2837,7.535,2838,5.923,2839,5.923,2840,5.923,2841,5.923,2842,5.923,2843,5.923,2844,5.923,2845,5.923,2846,5.923,2847,7.535,2848,5.923,2849,5.923,2850,5.923,2851,5.923,2852,5.923,2853,5.923,2854,5.923]],["title/injectables/LocaleSubscriber.html",[837,1.569,2855,4.267]],["body/injectables/LocaleSubscriber.html",[3,0.105,4,0.085,5,0.021,8,0.155,10,0.129,13,0.952,15,0.274,17,2.881,18,1.984,21,3.845,23,1.306,24,2.346,25,1.281,30,0.513,41,1.85,43,0.949,44,0.007,45,0.343,46,0.126,47,0.793,50,0.735,74,0.205,76,0.952,86,0.092,87,1.395,88,1.243,89,2.841,93,2.171,98,2.197,103,1.757,115,0.004,116,0.004,125,5.29,137,2.296,144,1.337,203,1.262,263,4.225,264,0.948,265,5.332,268,5.332,286,6.124,295,1.179,355,2.932,418,2.535,428,3.276,432,2.761,489,3.814,671,1.514,685,2.776,692,2.313,837,2.131,839,2.21,844,2.688,846,2.058,848,2.527,908,2.535,920,5.695,1001,3.368,1123,3.814,1134,4.39,1269,3.952,1301,5.257,1306,2.527,1333,2.993,1424,5.089,1426,3.573,1435,4.531,1440,3.467,1441,3.467,1445,2.604,1881,7.591,2219,6.55,2257,5.332,2540,5.797,2803,4.707,2827,6.702,2828,3.633,2855,8.253,2856,7.423,2857,6.503,2858,6.503,2859,7.988,2860,8.647,2861,6.503,2862,6.503,2863,7.988,2864,9.258,2865,4.739,2866,4.985,2867,4.477,2868,6.503,2869,8.647,2870,4.739,2871,6.503,2872,5.797,2873,5.797,2874,6.503,2875,4.739,2876,4.739,2877,6.503,2878,6.503,2879,6.503,2880,6.503,2881,6.503,2882,4.739,2883,8.647,2884,6.503,2885,6.503,2886,7.988,2887,6.503,2888,7.988,2889,6.503,2890,6.503,2891,4.739]],["title/interfaces/LocalizedMedia.html",[327,0.552,2805,3.465]],["body/interfaces/LocalizedMedia.html",[3,0.152,4,0.123,5,0.031,8,0.142,15,0.393,16,1.118,44,0.006,45,0.359,46,0.178,63,0.545,74,0.161,86,0.171,115,0.005,116,0.005,183,2.045,203,1.391,264,0.939,314,1.483,327,1.111,329,2.006,383,2.171,392,1.764,400,2.655,776,2.62,1065,2.232,1544,5.569,2801,5.585,2802,5.585,2803,6.388,2804,6.79,2805,5.949]],["title/entities/LocalizedMediaEntity.html",[264,0.49,2827,3.465]],["body/entities/LocalizedMediaEntity.html",[3,0.135,4,0.109,5,0.035,8,0.126,10,0.105,13,1.217,15,0.483,16,1.04,30,0.694,44,0.007,46,0.171,63,0.429,74,0.208,81,1.177,86,0.118,87,1.796,115,0.005,116,0.005,183,1.825,203,1.223,264,0.858,267,1.197,295,1.506,314,1.237,319,2.882,380,1.583,383,1.722,389,1.583,392,1.575,393,2.416,480,1.531,518,1.583,644,1.998,670,2.751,692,1.753,695,2.378,697,3.042,712,3.137,722,1.949,723,3.851,726,3.137,727,2.692,749,1.815,750,1.784,751,1.784,752,1.815,753,2.51,754,1.784,755,2.722,756,2.213,757,1.666,758,1.815,759,1.815,760,1.815,761,1.815,762,1.815,763,1.815,764,1.694,765,1.815,766,1.815,767,1.815,768,1.753,769,1.815,770,1.784,771,1.815,772,1.815,773,1.815,774,1.815,775,1.815,776,1.666,777,1.815,778,1.784,779,1.815,1165,3.396,1416,2.971,1417,3.553,1419,5.158,1420,3.959,1421,4.826,1442,4.337,1448,4.966,1474,5.029,2804,6.062,2805,5.533,2806,6.054,2812,4.966,2827,5.533,2892,8.083,2893,6.057,2894,7.643,2895,6.057,2896,6.057,2897,6.057,2898,6.057,2899,5.399,2900,6.057]],["title/interfaces/LocalizedString.html",[327,0.552,1065,1.569]],["body/interfaces/LocalizedString.html",[3,0.152,4,0.123,5,0.031,8,0.142,15,0.393,16,1.118,44,0.006,45,0.359,46,0.178,63,0.554,74,0.161,86,0.171,115,0.005,116,0.005,183,2.045,203,1.391,264,0.939,314,1.483,327,1.111,329,2.006,383,2.064,392,1.764,400,2.655,776,2.62,1065,2.693,1544,5.569,2801,5.585,2802,5.585,2803,6.388,2804,6.79,2805,4.931]],["title/entities/LocalizedStringEntity.html",[264,0.49,1424,2.479]],["body/entities/LocalizedStringEntity.html",[3,0.136,4,0.11,5,0.035,8,0.127,10,0.107,13,1.229,15,0.486,16,1.047,30,0.697,44,0.007,46,0.171,63,0.495,74,0.199,81,1.189,86,0.119,87,2.021,115,0.005,116,0.005,183,1.834,203,1.228,264,0.862,267,1.209,295,1.522,314,1.245,319,2.521,380,1.6,389,1.6,392,1.582,393,2.431,480,1.547,518,1.6,644,2.011,692,1.771,695,2.387,697,3.513,712,3.17,722,1.969,723,3.875,726,3.17,727,2.719,749,1.834,750,1.802,751,1.802,752,1.834,753,2.522,754,1.802,755,2.728,756,2.227,757,1.683,758,1.834,759,1.834,760,1.834,761,1.834,762,1.834,763,1.834,764,1.712,765,1.834,766,1.834,767,1.834,768,1.771,769,1.834,770,1.802,771,1.834,772,1.834,773,1.834,774,1.834,775,1.834,776,1.683,777,1.834,778,1.802,779,1.834,1065,2.521,1416,3.002,1417,3.589,1420,3.17,1424,3.984,1442,3.984,1474,5.062,1965,5.017,1973,5.017,2804,6.091,2806,6.077,2812,5.017,2892,8.108,2899,5.455,2901,6.119,2902,7.692,2903,6.857,2904,6.119,2905,6.119,2906,6.119,2907,6.119,2908,6.119]],["title/modules/LogModule.html",[850,1.114,870,2.231]],["body/modules/LogModule.html",[3,0.163,4,0.132,5,0.033,8,0.152,10,0.127,21,3.777,44,0.006,74,0.215,76,1.469,86,0.142,115,0.005,116,0.005,277,5.21,661,2.481,850,2.183,852,3.176,870,3.996,892,3.409,893,3.684,894,4.289,896,3.409,1286,4.57,2866,6.571,2909,7.313,2910,7.19,2911,7.313,2912,7.313]],["title/classes/LogService.html",[10,0.083,2910,3.669]],["body/classes/LogService.html",[3,0.087,4,0.071,5,0.035,8,0.179,10,0.068,15,0.226,21,3.237,23,1.141,25,2.367,30,0.678,43,1.33,44,0.007,45,0.475,46,0.18,47,1.068,48,6.592,50,1.018,51,2.408,58,1.27,63,0.547,74,0.158,76,0.786,86,0.076,88,1.539,89,2.797,98,1.077,103,1.736,115,0.004,116,0.004,118,1.174,121,1.301,149,4.333,152,4.032,174,1.774,175,2.31,178,6.408,181,4.637,184,2.36,185,5.256,190,3.002,195,3.211,196,3.211,218,1.592,242,3.491,247,2.297,248,3.491,314,1.188,319,3.136,394,3.384,478,3.029,625,3.454,661,1.645,675,1.645,841,3.508,854,4.659,860,1.259,908,2.215,984,5.216,1396,3.912,1500,4.57,1503,3.211,1602,5.312,1615,4.92,1709,3.491,1711,7.245,2745,6.875,2867,3.912,2910,4.356,2913,3.915,2914,5.066,2915,5.682,2916,7.245,2917,7.338,2918,5.682,2919,5.682,2920,7.245,2921,5.066,2922,5.682,2923,3.915,2924,5.682,2925,8.892,2926,3.915,2927,6.946,2928,3.915,2929,8.755,2930,7.792,2931,7.792,2932,5.682,2933,3.915,2934,5.682,2935,3.915,2936,5.682,2937,5.682,2938,5.682,2939,3.915,2940,5.682,2941,5.682,2942,5.682,2943,3.915,2944,5.682,2945,3.915,2946,7.338,2947,7.792,2948,3.915,2949,3.915,2950,3.915,2951,7.338,2952,3.915,2953,3.915,2954,3.915,2955,7.338,2956,3.915,2957,3.915,2958,3.915,2959,7.338,2960,5.682,2961,5.682,2962,3.915,2963,3.915,2964,5.682,2965,3.915,2966,3.915,2967,3.211,2968,3.915,2969,3.915,2970,3.491,2971,5.682,2972,3.915,2973,3.915,2974,3.002,2975,3.915,2976,3.915,2977,3.915,2978,3.915,2979,3.915]],["title/classes/LoginPayload.html",[10,0.083,743,3.15]],["body/classes/LoginPayload.html",[3,0.098,4,0.08,5,0.02,8,0.092,10,0.157,12,4.485,15,0.255,16,0.843,30,0.644,35,2.848,41,2.472,42,5.359,44,0.007,46,0.175,47,1.125,50,0.809,53,1.448,58,1.625,63,0.53,71,2.813,74,0.206,76,0.888,81,0.859,86,0.159,88,1.484,98,2.244,115,0.004,116,0.004,118,1.325,121,1.012,144,1.416,167,3.366,170,1.654,174,1.587,203,0.904,240,1.834,258,3.199,276,3.85,291,4.237,327,0.714,365,2.845,388,3.133,423,1.723,428,3.603,582,2.289,610,2.226,660,1.397,661,1.279,662,1.184,671,1.665,678,3.387,687,0.963,688,1.215,695,2.207,735,4.265,736,3.199,738,4.265,741,5.178,743,4.706,746,3.199,764,1.733,786,2.79,787,3.042,797,2.79,800,3.042,801,4.076,814,3.901,829,2.168,850,1.029,858,3.042,860,1.585,907,2.819,908,2.788,909,6.104,910,5.981,913,3.042,914,3.042,918,3.199,920,2.79,927,4.265,930,5.371,953,4.265,954,4.924,971,3.199,973,3.388,974,6.486,975,5.483,976,4.748,977,3.168,979,3.388,980,4.748,981,2.79,982,2.79,984,2.592,985,2.289,986,3.388,987,3.388,988,3.388,989,4.748,990,4.706,991,6.257,992,5.567,993,2.592,994,3.22,995,2.908,996,1.503,997,3.813,998,2.112,999,3.388,1000,3.388,1001,4.382,1002,4.706,1003,4.076,1004,4.748,1005,4.748,1006,5.483,1007,5.483,1008,3.388,1009,3.199,1010,4.516,1011,3.388,1012,4.748,1013,3.388,1014,3.388,1015,2.112,1403,5.522,1899,5.522,2980,4.419,2981,4.419,2982,4.419,2983,4.419,2984,4.419,2985,4.419]],["title/interfaces/Media.html",[327,0.552,383,1.078]],["body/interfaces/Media.html",[3,0.075,4,0.06,5,0.044,8,0.07,9,2.396,10,0.149,13,1.367,15,0.194,16,0.689,25,1.84,33,1.185,35,1.06,41,0.954,44,0.007,45,0.487,46,0.189,47,0.618,50,0.826,52,1.649,53,1.099,58,1.422,63,0.545,74,0.173,81,0.652,86,0.173,88,1.434,115,0.003,116,0.003,121,1.962,144,1.553,170,1.256,174,1.375,175,1.364,183,0.731,203,1.386,240,1.818,264,0.748,267,0.663,292,3.587,296,0.954,314,1.56,327,1.048,329,0.988,332,2.268,338,2.152,355,1.231,359,1.936,364,3.928,365,3.471,366,2.152,374,1.491,378,1.491,383,2.25,388,2.271,389,2.275,390,3.336,391,3.075,392,1.734,397,1.897,398,2.116,399,1.491,403,3.102,404,1.789,405,2.394,409,2.06,410,2.105,418,1.308,419,1.723,431,1.256,444,1.364,452,3.123,453,3.024,454,3.123,468,1.457,471,1.393,474,1.491,482,1.335,501,1.602,635,2.252,650,2.714,660,1.06,661,0.971,662,0.969,664,1.424,665,1.208,668,2.201,671,1.701,672,1.208,674,1.393,675,1.467,676,1.457,677,1.936,678,1.308,679,1.424,680,2.333,681,1.457,684,1.005,685,1.493,687,0.731,688,0.922,860,1.123,899,3.076,977,2.548,994,3.981,996,1.141,1065,2.614,1066,1.208,1125,1.457,1160,2.105,1164,1.256,1176,1.737,1177,1.788,1178,1.788,1180,1.788,1185,2.784,1186,1.788,1187,1.788,1190,3.524,1192,1.788,1193,1.843,1194,1.843,1195,1.788,1196,1.843,1197,1.788,1198,1.788,1200,1.843,1201,1.843,1202,2.784,1203,1.788,1205,2.306,1206,1.843,1207,2.625,1208,2.784,1209,2.784,1210,3.979,1211,3.628,1212,2.625,1213,2.784,1214,2.735,1215,3.979,1216,1.788,1217,1.737,1218,2.702,1219,1.788,1220,1.843,1221,3.524,1222,1.843,1223,3.163,1224,1.788,1225,2.995,1226,3.784,1227,1.843,1228,1.788,1229,2.306,1230,1.843,1231,1.843,1232,2.702,1233,3.895,1234,1.788,1235,2.702,1236,1.69,1237,1.69,1238,1.843,1239,1.843,1240,1.69,1241,1.69,1242,1.69,1243,1.843,1244,1.843,1245,1.69,1246,1.843,1247,1.843,1248,1.603,1249,1.737]],["title/controllers/MediaController.html",[662,0.915,2986,3.925]],["body/controllers/MediaController.html",[3,0.115,4,0.093,5,0.037,10,0.09,13,1.037,15,0.298,18,1.575,23,1.384,24,3.067,30,0.68,43,1.259,44,0.007,45,0.455,46,0.181,47,1.051,50,0.975,52,1.558,63,0.435,74,0.218,76,1.037,81,1.507,86,0.1,88,0.864,89,2.14,93,2.96,98,1.42,103,1.958,115,0.004,116,0.004,144,1.575,182,1.548,183,1.126,203,1.403,218,2.099,267,1.02,292,3.294,314,1.571,317,2.929,380,1.35,383,1.747,388,2.762,394,2.993,480,1.306,518,1.35,644,1.802,662,0.987,674,3.222,677,3.161,695,2.331,731,2.295,733,2.243,749,1.548,750,1.521,751,1.521,752,1.548,753,2.325,754,1.521,755,2.621,756,1.995,757,1.42,758,1.548,759,1.548,760,1.548,761,1.548,762,1.548,763,1.548,764,1.444,765,1.548,766,1.548,767,1.548,768,1.495,769,1.548,770,1.521,771,1.548,772,1.548,773,1.548,774,1.548,775,1.548,776,1.42,777,1.548,778,1.521,779,1.548,781,3.261,782,3.261,838,3.139,1176,3.569,1178,4.135,1179,6.143,1180,4.135,1181,6.143,1182,6.143,1183,4.604,1187,2.753,1189,4.604,1190,4.286,1198,2.753,1203,2.753,1236,3.472,1383,2.838,1526,3.555,1527,3.398,1536,3.398,2015,4.604,2100,4.604,2102,4.604,2104,4.604,2106,4.234,2107,4.234,2108,4.234,2109,4.234,2110,3.738,2111,4.234,2112,4.234,2116,4.234,2117,4.234,2118,4.234,2121,4.604,2124,4.604,2125,4.234,2129,4.234,2132,4.234,2986,5.651,2987,5.164,2988,5.164,2989,5.164,2990,6.914,2991,5.164,2992,5.164,2993,5.164,2994,5.164,2995,5.164,2996,3.398,2997,5.164,2998,5.164,2999,4.604,3000,5.164,3001,5.164,3002,5.164,3003,5.164,3004,5.164,3005,5.164,3006,6.891,3007,5.164,3008,5.164,3009,5.164,3010,5.164,3011,5.164,3012,5.164,3013,5.164,3014,5.164,3015,5.164]],["title/classes/MediaDto.html",[10,0.083,1234,2.552]],["body/classes/MediaDto.html",[3,0.075,4,0.061,5,0.044,8,0.071,9,2.403,10,0.15,13,1.475,15,0.196,16,0.695,25,1.85,30,0.632,33,1.198,35,1.072,41,0.965,44,0.007,45,0.481,46,0.189,47,0.623,50,0.83,52,1.655,53,1.112,58,1.426,63,0.544,74,0.174,81,0.659,86,0.174,88,1.438,115,0.003,116,0.003,118,1.017,121,1.931,144,1.556,170,1.27,174,1.381,175,1.379,183,0.74,203,1.383,240,1.62,264,0.752,267,0.67,292,3.594,296,0.965,314,1.553,327,1.041,332,2.125,338,1.441,355,1.245,359,1.296,364,3.783,365,3.315,366,1.441,374,1.508,378,1.508,383,2.251,388,2.284,389,2.204,390,3.188,391,2.998,392,1.726,397,1.913,398,2.13,399,1.508,403,2.906,404,1.198,405,2.243,409,2.078,410,2.123,418,1.323,419,1.738,431,1.27,444,1.379,452,3.137,453,3.041,454,3.137,468,1.473,471,1.409,474,1.508,482,1.35,501,1.615,635,1.508,650,2.732,660,1.072,661,0.982,662,0.977,664,1.441,665,1.221,668,2.219,671,1.709,672,1.221,674,1.409,675,1.479,676,1.473,677,1.952,678,1.323,679,1.441,680,2.349,681,1.473,684,1.017,685,1.505,687,0.74,688,0.933,695,2.165,860,1.133,899,3.098,977,2.749,994,4.034,996,1.154,1065,2.529,1066,1.221,1125,1.473,1160,1.409,1164,1.27,1176,1.757,1177,1.809,1178,1.809,1180,1.809,1185,2.808,1186,1.809,1187,1.809,1190,3.545,1192,1.809,1193,1.864,1194,1.864,1195,1.809,1196,1.864,1197,1.809,1198,1.809,1200,1.864,1201,1.864,1202,2.808,1203,1.809,1205,2.325,1206,1.864,1207,1.757,1208,1.864,1209,1.864,1210,3.803,1211,2.725,1212,1.757,1213,1.864,1214,2.562,1215,3.803,1216,1.809,1217,1.757,1218,2.725,1219,1.809,1220,1.864,1221,3.545,1222,1.864,1223,3.185,1224,1.809,1225,3.016,1226,3.803,1227,1.864,1228,1.809,1229,2.325,1230,1.864,1231,1.864,1232,2.725,1233,3.914,1234,2.725,1235,2.725,1236,1.709,1237,1.709,1238,1.864,1239,1.864,1240,1.709,1241,1.709,1242,1.709,1243,1.864,1244,1.864,1245,1.709,1246,1.864,1247,1.864,1248,1.622,1249,1.757,2799,3.7,3016,3.393,3017,3.393,3018,3.393,3019,3.393,3020,3.393,3021,3.393,3022,3.393]],["title/entities/MediaEntity.html",[264,0.49,1419,2.807]],["body/entities/MediaEntity.html",[3,0.128,4,0.104,5,0.026,8,0.12,10,0.129,13,1.156,15,0.498,16,1.007,30,0.733,44,0.007,45,0.471,46,0.191,63,0.415,74,0.216,86,0.112,87,2.07,115,0.005,116,0.005,203,1.194,240,1.751,264,0.838,295,1.432,314,1.198,319,2.425,332,2.539,383,2.059,389,1.505,392,1.538,393,2.339,405,2.68,692,1.667,695,2.513,697,3.255,712,2.982,722,2.382,723,3.728,726,2.982,727,2.559,1165,3.289,1214,3.062,1416,2.824,1417,3.377,1419,4.341,1420,2.982,1424,4.471,1425,3.5,1426,5.107,1427,3.5,1440,3.945,1441,3.945,1442,3.833,1445,3.164,1474,4.87,1919,3.636,2074,4.721,2092,6.068,2140,5.68,2141,4.721,2142,6.068,2143,4.721,2152,3.964,2153,5.095,2154,5.095,2156,5.095,2157,6.068,2158,6.068,2159,6.068,2160,3.964,2162,4.721,2903,6.597,2996,3.789,3023,5.758,3024,5.758,3025,6.617,3026,7.4,3027,7.4,3028,5.758,3029,5.758,3030,5.758,3031,5.758,3032,5.758,3033,6.617,3034,6.597,3035,5.758,3036,5.133,3037,5.133,3038,5.758,3039,5.758]],["title/interfaces/MediaExt.html",[327,0.552,1223,2.479]],["body/interfaces/MediaExt.html",[3,0.078,4,0.063,5,0.044,8,0.073,9,2.422,10,0.151,13,1.396,15,0.202,16,0.712,25,1.879,33,1.236,35,1.106,41,0.996,44,0.007,45,0.487,46,0.186,47,0.638,50,0.841,52,1.671,53,1.147,58,1.4,63,0.549,74,0.176,81,0.68,86,0.175,88,1.449,115,0.003,116,0.003,121,1.983,144,1.563,170,1.31,174,1.331,175,1.422,183,0.763,203,1.377,240,1.482,264,0.762,267,0.691,292,3.615,296,0.996,314,1.554,327,1.056,329,1.031,332,1.624,338,1.486,355,1.284,359,1.337,364,3.832,365,3.362,366,1.486,374,1.555,378,1.555,383,2.255,388,2.32,389,2.298,390,3.39,391,3.184,392,1.756,397,1.958,398,2.17,399,1.555,403,2.66,404,1.236,405,1.714,409,2.546,410,2.173,418,1.364,419,1.779,431,1.31,444,1.422,452,3.173,453,3.089,454,3.173,468,1.519,471,1.453,474,1.555,482,1.393,501,1.653,635,1.555,650,2.784,660,1.106,661,1.013,662,1,664,1.486,665,1.26,668,2.271,671,1.732,672,1.26,674,1.453,675,1.514,676,1.519,677,1.998,678,1.364,679,1.486,680,2.393,681,1.519,684,1.049,685,1.541,687,0.763,688,0.962,860,1.159,899,3.156,977,2.602,994,4,996,1.19,1065,2.438,1066,1.26,1125,1.519,1160,1.453,1164,1.31,1176,1.812,1177,1.865,1178,1.865,1180,1.865,1185,2.874,1186,1.865,1187,1.865,1190,3.6,1192,1.865,1193,1.923,1194,1.923,1195,1.865,1196,1.923,1197,1.865,1198,1.865,1200,1.923,1201,1.923,1202,2.874,1203,1.865,1205,2.38,1206,1.923,1207,1.812,1208,1.923,1209,1.923,1210,3.6,1211,2.789,1212,1.812,1213,1.923,1214,1.958,1215,3.6,1216,1.865,1217,1.812,1218,2.789,1219,1.865,1220,1.923,1221,3.6,1222,1.923,1223,3.6,1224,1.865,1225,3.072,1226,3.853,1227,1.923,1228,1.865,1229,2.38,1230,1.923,1231,1.923,1232,2.789,1233,3.966,1234,1.865,1235,2.789,1236,1.763,1237,1.763,1238,1.923,1239,1.923,1240,1.763,1241,1.763,1242,1.763,1243,1.923,1244,1.923,1245,1.763,1246,1.923,1247,1.923,1248,1.673,1249,1.812]],["title/entities/MediaExtEntity.html",[264,0.49,3040,3.925]],["body/entities/MediaExtEntity.html",[3,0.156,4,0.126,5,0.032,8,0.146,10,0.122,13,1.409,15,0.534,16,1.138,30,0.66,44,0.006,45,0.471,46,0.162,63,0.519,74,0.198,86,0.136,87,1.505,115,0.005,116,0.005,264,0.915,295,1.745,383,1.884,389,1.834,392,1.681,393,2.644,670,3.011,692,2.031,695,2.262,696,3.855,697,3.329,722,2.258,727,3.118,1108,3.118,1165,3.717,1223,4.333,1416,3.442,1922,3.98,1928,4.617,2996,4.617,3040,6.859,3041,6.851,3042,7.016,3043,7.457,3044,7.016,3045,7.016,3046,7.016]],["title/interfaces/MediaFile.html",[327,0.552,1215,2.479]],["body/interfaces/MediaFile.html",[3,0.075,4,0.06,5,0.045,8,0.07,9,2.397,10,0.149,13,1.367,15,0.194,16,0.69,25,1.84,33,1.185,35,1.061,41,0.955,44,0.007,45,0.487,46,0.188,47,0.618,50,0.826,52,1.65,53,1.1,58,1.381,63,0.547,74,0.173,81,0.652,86,0.173,88,1.434,115,0.003,116,0.003,121,1.962,144,1.553,170,1.257,174,1.308,175,1.364,183,0.732,203,1.386,240,1.446,264,0.749,267,0.663,292,3.693,296,0.955,314,1.576,327,1.048,329,0.989,332,1.574,338,1.425,355,1.232,359,1.282,364,3.831,365,3.363,366,1.425,374,1.492,378,1.492,383,2.262,388,2.272,389,2.276,390,3.337,391,3.147,392,1.745,397,1.898,398,2.764,399,2.253,403,2.594,404,1.185,405,1.661,409,2.061,410,2.106,418,1.309,419,1.724,431,1.257,444,1.364,452,3.483,453,3.415,454,3.483,468,1.458,471,1.394,474,1.492,482,1.336,501,1.602,635,1.492,650,3.025,660,1.061,661,0.972,662,0.969,664,1.425,665,1.208,668,2.202,671,1.701,672,1.208,674,1.394,675,1.468,676,1.458,677,1.936,678,1.309,679,1.425,680,2.333,681,1.458,684,1.006,685,1.493,687,0.732,688,0.923,860,1.123,899,3.078,977,2.548,994,3.982,996,1.141,1065,2.395,1066,1.208,1125,1.458,1160,1.394,1164,1.257,1176,1.739,1177,1.79,1178,1.79,1180,1.79,1185,2.786,1186,1.79,1187,1.79,1190,3.526,1192,1.79,1193,1.844,1194,1.844,1195,1.79,1196,1.844,1197,1.79,1198,1.79,1200,1.844,1201,1.844,1202,2.786,1203,1.79,1205,2.307,1206,1.844,1207,1.739,1208,1.844,1209,1.844,1210,3.526,1211,2.703,1212,1.739,1213,1.844,1214,1.898,1215,3.785,1216,1.79,1217,1.739,1218,2.703,1219,1.79,1220,1.844,1221,3.526,1222,1.844,1223,3.164,1224,1.79,1225,2.997,1226,4.254,1227,1.844,1228,1.79,1229,2.307,1230,1.844,1231,1.844,1232,2.703,1233,3.896,1234,1.79,1235,2.703,1236,1.691,1237,1.691,1238,1.844,1239,1.844,1240,1.691,1241,1.691,1242,1.691,1243,1.844,1244,1.844,1245,1.691,1246,1.844,1247,1.844,1248,1.604,1249,1.739]],["title/classes/MediaFileDto.html",[10,0.083,1235,2.552]],["body/classes/MediaFileDto.html",[3,0.075,4,0.061,5,0.044,8,0.07,9,2.399,10,0.149,13,1.47,15,0.195,16,0.692,25,1.844,30,0.649,33,1.19,35,1.065,41,0.959,44,0.007,45,0.48,46,0.188,47,0.62,50,0.828,52,1.652,53,1.104,58,1.423,63,0.545,74,0.173,81,0.655,86,0.173,88,1.436,115,0.003,116,0.003,118,1.01,121,1.927,144,1.554,170,1.261,174,1.377,175,1.37,183,0.734,203,1.382,240,1.449,264,0.75,267,0.666,292,3.649,296,0.959,314,1.564,327,1.039,332,1.579,338,1.431,355,1.237,359,1.287,364,3.779,365,3.31,366,1.431,374,1.497,378,1.497,383,2.253,388,2.276,389,2.2,390,3.179,391,2.991,392,1.724,397,1.903,398,2.536,399,1.497,403,2.6,404,1.19,405,1.666,409,2.067,410,2.112,418,1.313,419,1.729,431,1.261,444,1.37,452,3.343,453,3.031,454,3.343,468,1.463,471,1.399,474,1.497,482,1.341,501,1.607,635,1.497,650,2.721,660,1.065,661,0.975,662,0.972,664,1.431,665,1.213,668,2.208,671,1.704,672,1.213,674,1.399,675,1.472,676,1.463,677,1.942,678,1.313,679,1.431,680,2.339,681,1.463,684,1.01,685,1.497,687,0.734,688,0.926,695,2.223,860,1.127,899,3.085,977,2.74,994,4.039,996,1.146,1065,2.399,1066,1.213,1125,1.463,1160,1.399,1164,1.261,1176,1.745,1177,1.796,1178,1.796,1180,1.796,1185,2.794,1186,1.796,1187,1.796,1190,3.532,1192,1.796,1193,1.851,1194,1.851,1195,1.796,1196,1.851,1197,1.796,1198,1.796,1200,1.851,1201,1.851,1202,2.794,1203,1.796,1205,2.786,1206,1.851,1207,1.745,1208,1.851,1209,1.851,1210,3.532,1211,2.711,1212,1.745,1213,1.851,1214,1.903,1215,3.791,1216,1.796,1217,1.745,1218,2.711,1219,1.796,1220,1.851,1221,3.532,1222,1.851,1223,3.171,1224,1.796,1225,3.003,1226,3.791,1227,1.851,1228,1.796,1229,2.313,1230,1.851,1231,1.851,1232,2.711,1233,4.103,1234,1.796,1235,3.264,1236,1.697,1237,1.697,1238,1.851,1239,1.851,1240,1.697,1241,1.697,1242,1.697,1243,1.851,1244,1.851,1245,1.697,1246,1.851,1247,1.851,1248,1.61,1249,1.745,2799,2.439,3047,3.369,3048,3.369,3049,3.369,3050,3.369,3051,3.369,3052,3.369,3053,3.369,3054,3.369]],["title/entities/MediaFileEntity.html",[264,0.49,3025,3.669]],["body/entities/MediaFileEntity.html",[3,0.132,4,0.107,5,0.027,8,0.124,10,0.104,13,1.196,15,0.505,16,1.029,30,0.748,44,0.007,45,0.438,46,0.187,58,1.309,63,0.49,74,0.207,86,0.116,87,2.101,115,0.005,116,0.005,203,1.213,264,0.851,292,3.307,295,1.481,314,1.534,383,2.077,389,1.557,392,1.563,393,2.39,398,2.879,452,3.378,454,3.378,692,1.724,695,2.563,696,3.273,697,3.838,712,3.085,722,1.917,723,3.81,726,3.085,727,3.361,728,3.378,1214,2.831,1215,3.917,1416,2.921,1417,3.493,1419,5.127,1420,3.917,1442,4.304,2150,4.884,2828,4.566,2996,3.919,3025,5.797,3034,6.741,3041,7.335,3055,5.956,3056,7.562,3057,5.956,3058,6.328,3059,5.956,3060,6.741,3061,5.956,3062,5.956,3063,5.956,3064,5.956,3065,5.956,3066,5.956,3067,4.884,3068,5.956,3069,6.741]],["title/interfaces/MediaFormat.html",[327,0.552,1226,2.479]],["body/interfaces/MediaFormat.html",[3,0.077,4,0.062,5,0.044,8,0.072,9,2.412,10,0.15,13,1.384,15,0.199,16,0.703,25,1.863,33,1.215,35,1.087,41,0.979,44,0.007,45,0.489,46,0.187,47,0.63,50,0.835,52,1.662,53,1.128,58,1.393,63,0.553,74,0.175,81,0.669,86,0.174,88,1.443,115,0.003,116,0.003,121,1.974,144,1.559,170,1.288,174,1.322,175,1.399,183,0.75,203,1.374,240,1.467,264,0.757,267,0.68,292,3.661,296,0.979,314,1.551,327,1.052,329,1.013,332,1.604,338,1.461,355,1.263,359,1.314,364,3.846,365,3.377,366,1.461,374,1.529,378,1.529,383,2.256,388,2.301,389,2.254,390,3.368,391,3.098,392,1.741,397,1.934,398,2.148,399,1.529,403,2.633,404,1.215,405,1.693,409,2.1,410,2.145,418,1.341,419,1.756,431,1.288,444,1.399,452,3.505,453,3.447,454,3.505,468,1.494,471,1.429,474,1.529,482,1.369,501,1.633,635,1.529,650,3.282,660,1.087,661,0.996,662,0.987,664,1.461,665,1.239,668,2.243,671,1.719,672,1.239,674,1.429,675,1.495,676,1.494,677,1.973,678,1.341,679,1.461,680,2.369,681,1.494,684,1.031,685,1.521,687,0.75,688,0.946,860,1.145,899,3.124,977,2.58,994,3.992,996,1.17,1065,2.421,1066,1.239,1125,1.494,1160,1.429,1164,1.288,1176,1.782,1177,1.834,1178,1.834,1180,1.834,1185,2.838,1186,1.834,1187,1.834,1190,3.57,1192,1.834,1193,1.891,1194,1.891,1195,1.834,1196,1.891,1197,1.834,1198,1.834,1200,1.891,1201,1.891,1202,2.838,1203,1.834,1205,2.35,1206,1.891,1207,1.782,1208,1.891,1209,1.891,1210,3.57,1211,2.754,1212,1.782,1213,1.891,1214,1.934,1215,3.57,1216,1.834,1217,1.782,1218,2.754,1219,1.834,1220,1.891,1221,3.57,1222,1.891,1223,3.212,1224,1.834,1225,3.042,1226,4.018,1227,1.891,1228,1.834,1229,2.35,1230,1.891,1231,1.891,1232,2.754,1233,3.938,1234,1.834,1235,2.754,1236,1.733,1237,1.733,1238,1.891,1239,1.891,1240,1.733,1241,1.733,1242,1.733,1243,1.891,1244,1.891,1245,1.733,1246,1.891,1247,1.891,1248,1.645,1249,1.782]],["title/classes/MediaFormatDto.html",[10,0.083,1233,2.552]],["body/classes/MediaFormatDto.html",[3,0.077,4,0.062,5,0.044,8,0.072,9,2.414,10,0.15,13,1.486,15,0.2,16,0.705,25,1.868,30,0.545,33,1.22,35,1.092,41,0.983,44,0.007,45,0.482,46,0.187,47,0.632,50,0.837,52,1.664,53,1.133,58,1.434,63,0.548,74,0.175,81,0.672,86,0.174,88,1.445,115,0.003,116,0.003,118,1.036,121,1.941,144,1.56,170,1.294,174,1.39,175,1.405,183,0.753,203,1.375,240,1.471,264,0.758,267,0.683,292,3.637,296,0.983,314,1.552,327,1.044,332,1.609,338,1.467,355,1.269,359,1.32,364,3.796,365,3.326,366,1.467,374,1.536,378,1.536,383,2.252,388,2.306,389,2.216,390,3.214,391,3.016,392,1.731,397,1.94,398,2.154,399,1.536,403,2.64,404,1.22,405,1.698,409,2.107,410,2.153,418,1.347,419,1.762,431,1.294,444,1.405,452,3.369,453,3.07,454,3.369,468,1.501,471,1.436,474,1.536,482,1.376,501,1.638,635,1.536,650,2.763,660,1.092,661,1,662,0.991,664,1.467,665,1.244,668,2.251,671,1.723,672,1.244,674,1.436,675,1.5,676,1.501,677,1.98,678,1.347,679,1.467,680,2.375,681,1.501,684,1.036,685,1.526,687,0.753,688,0.95,695,1.868,860,1.148,899,3.132,977,2.771,994,4.033,996,1.175,1065,2.425,1066,1.244,1125,1.501,1160,1.436,1164,1.294,1176,1.79,1177,1.843,1178,1.843,1180,1.843,1185,2.848,1186,1.843,1187,1.843,1190,3.578,1192,1.843,1193,1.899,1194,1.899,1195,1.843,1196,1.899,1197,1.843,1198,1.843,1200,1.899,1201,1.899,1202,2.848,1203,1.843,1205,2.358,1206,1.899,1207,1.79,1208,1.899,1209,1.899,1210,3.578,1211,2.763,1212,1.79,1213,1.899,1214,1.94,1215,3.578,1216,1.843,1217,1.79,1218,2.763,1219,1.843,1220,1.899,1221,3.578,1222,1.899,1223,3.22,1224,1.843,1225,3.05,1226,4.024,1227,1.899,1228,1.843,1229,2.358,1230,1.899,1231,1.899,1232,2.763,1233,4.142,1234,1.843,1235,2.763,1236,1.741,1237,1.741,1238,1.899,1239,1.899,1240,1.741,1241,1.741,1242,1.741,1243,1.899,1244,1.899,1245,1.741,1246,1.899,1247,1.899,1248,1.652,1249,1.79,3070,3.456,3071,3.456,3072,3.456,3073,3.456]],["title/entities/MediaFormatEntity.html",[264,0.49,3058,3.465]],["body/entities/MediaFormatEntity.html",[3,0.148,4,0.12,5,0.03,8,0.139,10,0.116,13,1.339,15,0.525,16,1.104,30,0.718,44,0.006,45,0.461,46,0.177,63,0.543,74,0.192,86,0.129,87,1.999,115,0.005,116,0.005,264,0.896,295,1.658,383,1.827,389,1.743,392,1.644,393,2.564,452,3.554,454,3.554,670,2.92,692,1.93,695,2.46,696,3.664,697,3.773,722,2.146,727,2.963,1108,2.963,1165,3.605,1225,3.979,1226,4.201,1416,3.27,1922,3.782,1928,4.387,2996,4.387,3041,7.147,3058,5.872,3060,7.231,3069,7.231,3074,6.667,3075,6.667,3076,6.667,3077,6.667,3078,6.667,3079,6.667]],["title/classes/MediaManager.html",[10,0.083,1236,2.411]],["body/classes/MediaManager.html",[3,0.071,4,0.057,5,0.044,8,0.066,9,2.673,10,0.15,13,1.329,15,0.183,23,0.976,25,1.789,30,0.637,33,1.121,35,1.004,41,0.904,43,1.179,44,0.007,45,0.497,46,0.188,47,1.03,50,0.997,52,1.75,53,1.041,58,1.355,63,0.548,74,0.169,81,0.617,86,0.171,88,1.414,115,0.003,116,0.003,118,0.952,121,1.934,144,1.595,170,1.189,174,1.276,175,1.291,183,0.692,184,3.124,203,1.386,240,1.397,264,0.73,267,0.627,292,3.611,296,0.904,314,1.579,327,1.027,332,1.509,338,1.348,355,1.166,359,1.213,364,3.738,365,3.272,366,1.348,374,1.411,378,1.411,383,2.246,388,2.208,389,2.163,390,3.097,391,2.93,392,1.719,397,1.82,398,2.046,399,1.411,403,2.507,404,1.121,405,1.593,409,1.976,410,2.019,418,1.238,419,2.008,431,1.189,444,1.291,452,3.057,453,2.94,454,3.057,468,1.379,471,1.319,474,1.411,482,1.264,501,1.536,635,1.411,650,2.624,660,1.004,661,0.919,662,0.929,664,1.348,665,1.143,668,2.111,671,1.66,672,1.143,674,1.319,675,1.407,676,1.379,677,1.857,678,1.238,679,1.348,680,2.256,681,1.379,684,0.952,685,1.432,687,0.692,688,0.873,860,1.308,899,2.975,977,2.477,994,3.957,996,1.08,1065,2.565,1066,1.143,1125,1.379,1160,1.319,1164,1.189,1176,1.645,1177,1.693,1178,1.693,1180,1.693,1185,2.671,1186,1.693,1187,1.693,1190,3.427,1192,1.693,1193,1.745,1194,1.745,1195,1.693,1196,1.745,1197,1.693,1198,1.693,1200,1.745,1201,1.745,1202,2.671,1203,1.693,1205,2.212,1206,1.745,1207,1.645,1208,1.745,1209,1.745,1210,3.427,1211,2.591,1212,1.645,1213,1.745,1214,1.82,1215,3.427,1216,1.693,1217,1.645,1218,2.591,1219,1.693,1220,1.745,1221,3.427,1222,1.745,1223,3.058,1224,1.693,1225,2.896,1226,3.693,1227,1.745,1228,1.693,1229,3.01,1230,1.745,1231,1.745,1232,2.591,1233,3.802,1234,1.693,1235,2.591,1236,2.449,1237,2.449,1238,2.671,1239,3.245,1240,2.449,1241,2.449,1242,2.449,1243,2.671,1244,3.245,1245,2.975,1246,3.245,1247,3.245,1248,1.518,1249,1.645,1301,3.198,2165,3.985,2167,3.985,2168,3.985,3080,4.86,3081,4.86,3082,3.176,3083,3.176,3084,3.176,3085,3.176,3086,3.176,3087,3.176,3088,3.176,3089,3.176,3090,3.176,3091,3.176]],["title/modules/MediaModule.html",[850,1.114,1248,2.288]],["body/modules/MediaModule.html",[3,0.131,4,0.107,5,0.034,8,0.123,10,0.103,23,1.187,30,0.466,43,0.863,44,0.007,45,0.312,46,0.115,47,0.721,50,0.668,74,0.232,76,1.187,81,1.149,86,0.115,103,1.399,115,0.005,116,0.005,182,1.771,183,1.288,267,1.168,380,1.545,383,1.695,419,2.559,480,1.494,501,2.378,518,1.545,644,1.967,662,1.439,687,1.64,689,3.061,731,2.626,749,1.771,750,1.741,751,1.741,752,1.771,753,2.481,754,1.741,755,2.707,756,2.178,757,1.625,758,1.771,759,1.771,760,1.771,761,1.771,762,1.771,763,1.771,764,1.653,765,1.771,766,1.771,767,1.771,768,1.711,769,1.771,770,1.741,771,1.771,772,1.771,773,1.771,774,1.771,775,1.771,776,1.625,777,1.771,778,1.741,779,1.771,850,2.095,852,2.567,855,3.791,856,4.752,857,3.889,860,1.668,862,4.856,868,4.012,869,3.592,870,3.508,871,3.592,872,2.689,873,3.889,879,4.069,880,2.825,882,3.889,892,2.755,893,2.977,894,3.466,895,4.278,896,2.755,1236,4.171,1248,3.957,1249,4.514,1306,3.151,1419,4.414,1464,3.889,2830,5.269,2986,6.789,2996,3.889,2999,7.38,3025,5.768,3033,5.768,3036,5.269,3037,5.269,3058,5.448,3067,4.846,3092,5.91,3093,5.91,3094,5.91,3095,5.91,3096,8.279,3097,5.269,3098,5.91,3099,5.269]],["title/interfaces/MediaType.html",[327,0.552,1210,2.479]],["body/interfaces/MediaType.html",[3,0.074,4,0.06,5,0.044,8,0.069,9,2.392,10,0.149,13,1.362,15,0.192,16,0.686,25,2.216,33,1.177,35,1.054,41,1.435,44,0.007,45,0.483,46,0.189,47,0.615,50,0.824,52,1.769,53,1.092,58,1.378,63,0.547,74,0.172,81,0.648,86,0.173,88,1.432,115,0.003,116,0.003,121,1.99,144,1.552,170,1.248,174,1.304,175,2.05,183,1.099,203,1.368,240,1.44,264,0.746,267,0.659,292,3.642,296,0.949,314,1.555,327,1.046,329,0.982,332,1.566,338,1.415,355,1.224,359,1.273,364,3.85,365,3.333,366,1.415,374,1.481,378,2.241,383,2.255,388,2.264,389,2.272,390,3.328,391,3.069,392,1.743,397,2.278,398,2.108,399,1.481,403,2.583,404,1.177,405,1.653,409,2.473,410,3.026,418,1.966,419,1.715,431,1.248,444,1.355,452,3.116,453,3.014,454,3.116,468,2.19,471,1.385,474,2.241,482,2.007,501,1.594,635,1.481,650,2.703,660,1.054,661,0.965,662,0.964,664,1.415,665,1.2,668,2.19,671,1.696,672,1.2,674,1.385,675,1.46,676,1.448,677,1.926,678,1.3,679,1.415,680,2.324,681,1.448,684,0.999,685,1.486,687,0.727,688,0.917,860,1.118,899,3.861,977,2.539,994,3.979,996,1.134,1065,2.388,1066,1.2,1125,1.448,1160,1.385,1164,1.888,1176,1.727,1177,1.777,1178,1.777,1180,1.777,1185,2.771,1186,1.777,1187,1.777,1190,3.774,1192,1.777,1193,1.832,1194,1.832,1195,1.777,1196,1.832,1197,1.777,1198,1.777,1200,1.832,1201,1.832,1202,2.771,1203,1.777,1205,2.295,1206,1.832,1207,1.727,1208,1.832,1209,1.832,1210,3.774,1211,2.689,1212,1.727,1213,1.832,1214,1.888,1215,3.513,1216,2.689,1217,2.612,1218,3.884,1219,2.689,1220,2.771,1221,4.346,1222,2.771,1223,3.774,1224,2.689,1225,3.904,1226,4.123,1227,1.832,1228,1.777,1229,2.295,1230,1.832,1231,1.832,1232,2.689,1233,3.884,1234,1.777,1235,2.689,1236,1.679,1237,1.679,1238,1.832,1239,1.832,1240,1.679,1241,1.679,1242,1.679,1243,1.832,1244,1.832,1245,1.679,1246,1.832,1247,1.832,1248,1.593,1249,1.727]],["title/classes/MediaTypeDto.html",[10,0.083,1232,2.552]],["body/classes/MediaTypeDto.html",[3,0.075,4,0.061,5,0.044,8,0.071,9,2.403,10,0.15,13,1.474,15,0.196,16,0.695,25,2.086,30,0.632,33,1.197,35,1.072,41,0.965,44,0.007,45,0.48,46,0.188,47,0.623,50,0.83,52,1.725,53,1.111,58,1.426,63,0.546,74,0.174,81,0.659,86,0.174,88,1.438,115,0.003,116,0.003,118,1.016,121,1.93,144,1.556,170,1.269,174,1.38,175,1.378,183,0.739,203,1.371,240,1.454,264,0.752,267,0.67,292,3.594,296,0.965,314,1.553,327,1.041,332,1.586,338,1.44,355,1.245,359,1.295,364,3.783,365,3.314,366,1.44,374,1.507,378,1.507,383,2.25,388,2.284,389,2.204,390,3.187,391,2.997,392,1.726,397,1.912,398,2.13,399,1.507,403,2.61,404,1.197,405,1.674,409,2.077,410,2.842,418,1.322,419,1.737,431,1.269,444,1.378,452,3.136,453,3.04,454,3.136,468,1.472,471,1.408,474,1.507,482,1.349,501,1.615,635,1.507,650,2.731,660,1.072,661,0.981,662,0.977,664,1.44,665,1.22,668,2.218,671,1.708,672,1.22,674,1.408,675,1.479,676,1.472,677,1.951,678,1.322,679,1.44,680,2.348,681,1.472,684,1.016,685,1.505,687,0.739,688,0.932,695,2.164,860,1.132,899,3.096,977,2.748,994,4.042,996,1.153,1065,2.405,1066,1.22,1125,1.472,1160,1.408,1164,1.269,1176,1.756,1177,1.808,1178,1.808,1180,1.808,1185,2.807,1186,1.808,1187,1.808,1190,3.544,1192,1.808,1193,1.863,1194,1.863,1195,1.808,1196,1.863,1197,1.808,1198,1.808,1200,1.863,1201,1.863,1202,2.807,1203,1.808,1205,2.324,1206,1.863,1207,1.756,1208,1.863,1209,1.863,1210,3.802,1211,2.723,1212,1.756,1213,1.863,1214,1.912,1215,3.544,1216,1.808,1217,1.756,1218,3.647,1219,1.808,1220,1.863,1221,3.995,1222,1.863,1223,3.544,1224,1.808,1225,3.6,1226,3.802,1227,1.863,1228,1.808,1229,2.324,1230,1.863,1231,1.863,1232,3.277,1233,4.113,1234,1.808,1235,2.723,1236,1.708,1237,1.708,1238,1.863,1239,1.863,1240,1.708,1241,1.708,1242,1.708,1243,1.863,1244,1.863,1245,1.708,1246,1.863,1247,1.863,1248,1.621,1249,1.756,2799,2.454,3100,3.39,3101,3.39,3102,3.39,3103,3.39,3104,3.39,3105,3.39,3106,3.39]],["title/entities/MediaTypeEntity.html",[264,0.49,3033,3.669]],["body/entities/MediaTypeEntity.html",[3,0.136,4,0.11,5,0.028,8,0.127,10,0.106,13,1.226,15,0.509,16,1.045,25,2.272,30,0.743,44,0.007,45,0.443,46,0.183,52,1.771,63,0.494,74,0.209,86,0.119,87,1.802,115,0.005,116,0.005,182,2.644,220,5.561,264,0.861,295,1.518,314,1.243,383,1.987,389,1.596,392,1.581,393,2.428,410,3.491,670,3.34,692,1.767,695,2.546,696,3.355,697,3.51,722,1.965,727,2.713,728,3.463,1075,4.095,1108,2.713,1165,3.414,1210,3.979,1218,4.481,1221,4.353,1225,4.123,1416,2.995,1420,3.162,1440,4.095,1441,4.095,1442,3.979,1472,4.68,1922,3.463,1928,4.017,1974,5.288,2148,6.848,2150,5.006,2996,4.017,3033,5.888,3040,7.232,3041,7.302,3058,6.385,3067,5.006,3107,6.105,3108,6.105,3109,7.681,3110,6.105,3111,6.105,3112,6.105,3113,6.105,3114,6.105,3115,6.105,3116,6.105,3117,6.105]],["title/interfaces/MessageBus.html",[327,0.552,3118,3.925]],["body/interfaces/MessageBus.html",[3,0.141,4,0.114,5,0.029,8,0.132,15,0.365,23,1.578,30,0.674,43,1.367,44,0.006,45,0.451,46,0.186,47,1.042,50,0.966,74,0.15,86,0.153,115,0.005,116,0.005,144,1.315,174,1.731,181,3.662,184,3.889,314,1.024,327,0.985,329,1.864,679,3.627,687,1.38,1033,3.478,1351,6.022,1369,6.777,1851,7.93,1893,4.582,3118,6.442,3119,6.467,3120,6.467,3121,5.642,3122,6.442,3123,7.003,3124,7.616,3125,6.549,3126,5.642,3127,8.766,3128,7.983,3129,6.329,3130,7.616,3131,5.642,3132,6.329,3133,8.189,3134,5.642,3135,6.329,3136,5.189,3137,4.357,3138,5.189]],["title/interfaces/MessagesBroker.html",[327,0.552,3139,3.669]],["body/interfaces/MessagesBroker.html",[3,0.138,4,0.112,5,0.028,8,0.185,15,0.359,23,1.56,30,0.668,43,1.334,44,0.006,45,0.447,46,0.177,47,1.033,50,0.958,63,0.54,86,0.121,88,1.529,115,0.005,116,0.005,144,1.3,174,1.737,181,4.259,266,5.11,267,1.841,319,3.098,327,0.895,329,1.83,1121,5.096,1351,4.761,1500,4.554,1825,5.553,3122,5.093,3125,7.143,3139,5.952,3140,6.803,3141,5.84,3142,6.211,3143,5.093,3144,7.911,3145,7.911,3146,6.922,3147,6.211,3148,6.367,3149,8.744,3150,8.307,3151,6.922,3152,6.211,3153,6.922,3154,6.922,3155,6.211,3156,6.922]],["title/modules/MessagesBrokerModule.html",[850,1.114,3157,3.465]],["body/modules/MessagesBrokerModule.html",[3,0.136,4,0.11,5,0.035,8,0.127,10,0.106,21,3.775,44,0.007,74,0.223,76,1.226,81,1.187,86,0.119,103,1.445,115,0.005,116,0.005,181,3.581,267,1.206,276,2.778,277,4.669,380,1.596,480,1.544,518,1.596,612,3.768,644,2.008,661,2.224,749,1.83,750,1.798,751,1.798,752,1.83,753,2.519,754,1.798,755,2.726,756,2.224,757,1.679,758,1.83,759,1.83,760,1.83,761,1.83,762,1.83,763,1.83,764,1.708,765,1.83,766,1.83,767,1.83,768,1.767,769,1.83,770,1.798,771,1.83,772,1.83,773,1.83,774,1.83,775,1.83,776,1.679,777,1.83,778,1.798,779,1.83,846,2.651,850,2.116,852,2.651,870,3.581,880,4.017,884,4.017,892,3.581,893,3.076,894,3.581,896,3.581,982,3.855,985,3.162,1286,4.095,1319,3.463,1320,3.855,1321,3.855,1322,3.855,1326,5.981,1327,3.855,1330,4.505,1332,4.42,1333,3.855,1334,4.42,1335,4.42,1339,5.006,1340,4.203,1341,4.017,1342,4.203,1343,5.006,1344,4.42,1345,5.006,1346,4.42,1347,5.006,1348,5.006,1349,5.006,2867,5.288,3140,4.68,3141,4.017,3143,6.298,3157,6.717,3158,5.443,3159,6.105,3160,6.105,3161,6.443,3162,5.006,3163,5.443,3164,5.561,3165,5.443]],["title/injectables/MessagesBrokerService.html",[837,1.569,3164,3.465]],["body/injectables/MessagesBrokerService.html",[3,0.105,4,0.085,5,0.021,8,0.18,10,0.082,13,1.49,15,0.273,16,0.884,18,2.7,23,1.304,24,2.344,25,2.565,30,0.711,43,1.335,44,0.007,45,0.456,46,0.181,47,1.054,50,1.001,58,1.382,63,0.548,74,0.189,76,0.95,86,0.092,88,1.482,89,1.469,93,1.579,98,1.786,103,1.98,115,0.004,116,0.004,137,1.671,149,3.463,174,1.749,181,4.029,182,1.418,183,1.031,212,3.948,219,4.101,265,6.081,266,4.274,267,1.708,277,3.948,319,3.062,327,0.749,837,2.128,839,2.206,846,2.055,860,1.439,1121,4.876,1330,5.288,1430,5.692,1500,4.907,1825,5.085,1892,6.545,2867,3.257,3125,6.625,3139,6.119,3140,7.011,3141,6.019,3143,5.325,3144,7.116,3145,7.116,3146,5.79,3148,5.325,3149,8.399,3150,7.891,3151,5.79,3153,5.79,3154,5.79,3156,5.79,3164,4.702,3166,4.731,3167,7.416,3168,6.495,3169,6.495,3170,4.731,3171,4.731,3172,6.495,3173,4.731,3174,6.495,3175,4.731,3176,7.982,3177,6.495,3178,6.495,3179,6.495,3180,6.495,3181,4.731,3182,6.495,3183,6.495,3184,6.495,3185,4.731,3186,4.731,3187,4.731,3188,4.731,3189,3.425,3190,4.218,3191,3.425,3192,4.218,3193,4.731,3194,4.731,3195,4.731,3196,4.731,3197,4.731,3198,4.731,3199,4.731,3200,4.731,3201,4.731,3202,4.731,3203,4.731,3204,4.731,3205,4.731,3206,4.731,3207,4.731,3208,4.731,3209,4.731]],["title/classes/MsClient.html",[10,0.083,3210,3.925]],["body/classes/MsClient.html",[3,0.094,4,0.161,5,0.019,8,0.167,10,0.073,13,1.203,15,0.243,18,1.827,21,3.56,23,1.203,25,2.168,30,0.633,35,2.399,43,1.301,44,0.007,45,0.423,46,0.173,47,1.136,50,0.99,51,1.517,58,1.037,66,4.315,74,0.211,76,0.846,85,3.051,86,0.082,88,1.559,89,2.357,97,3.292,98,1.917,103,1.897,115,0.004,116,0.004,118,1.263,124,3.292,137,2.115,144,1.27,149,4.275,170,2.243,174,1.781,181,4.588,182,1.263,183,0.919,184,3.153,190,3.23,195,3.455,196,3.455,319,1.381,373,2.924,510,3.398,676,2.601,679,3.405,687,1.909,829,4.371,844,2.39,846,1.83,848,2.247,921,4.592,960,2.661,961,2.472,965,3.398,968,2.773,1033,4.966,1333,2.661,1369,7.179,1503,3.455,1851,7.854,1888,3.23,1893,3.051,2569,2.773,2668,4.912,2866,4.592,2867,4.124,3118,5.715,3119,6.031,3120,6.031,3124,6.213,3125,5.343,3126,3.757,3127,8.231,3128,7.635,3130,6.213,3131,3.757,3133,8.46,3134,3.757,3137,5.225,3138,5.715,3148,4.912,3210,4.912,3211,4.214,3212,5.34,3213,6.969,3214,6.969,3215,6.766,3216,4.214,3217,4.214,3218,5.99,3219,5.99,3220,4.214,3221,5.99,3222,4.214,3223,4.214,3224,5.99,3225,4.214,3226,3.23,3227,4.214,3228,4.214,3229,5.99,3230,3.757,3231,4.214,3232,4.592,3233,4.214,3234,3.051,3235,3.051,3236,5.99,3237,6.969,3238,4.214,3239,3.757,3240,4.214,3241,4.214,3242,4.214,3243,6.969,3244,4.214,3245,4.214,3246,3.757,3247,4.214,3248,4.214,3249,5.34,3250,4.214,3251,4.214,3252,4.214,3253,4.214,3254,4.214,3255,4.214,3256,4.214,3257,4.214,3258,4.214]],["title/modules/MsClientModule.html",[850,1.114,3259,3.669]],["body/modules/MsClientModule.html",[3,0.133,4,0.108,5,0.034,8,0.124,10,0.104,21,3.94,44,0.007,45,0.315,74,0.222,76,1.2,81,1.161,86,0.116,98,1.643,103,1.414,115,0.005,116,0.005,267,1.181,380,1.562,480,1.511,510,4.298,518,1.562,612,3.717,644,1.981,661,2.194,687,1.303,749,1.791,750,1.76,751,1.76,752,1.791,753,2.494,754,1.76,755,2.713,756,2.194,757,1.643,758,1.791,759,1.791,760,1.791,761,1.791,762,1.791,763,1.791,764,1.672,765,1.791,766,1.791,767,1.791,768,1.73,769,1.791,770,1.76,771,1.791,772,1.791,773,1.791,774,1.791,775,1.791,776,1.643,777,1.791,778,1.76,779,1.791,846,3.291,850,2.102,852,2.595,870,4.37,880,3.978,884,4.987,892,3.533,893,3.011,896,3.533,985,3.095,1033,4.963,1286,4.04,1319,3.39,1320,3.773,1321,3.773,1322,3.773,1327,3.773,1332,4.326,1333,3.773,1334,4.326,1335,4.326,1340,4.114,1342,4.114,1344,4.326,2867,5.217,3119,4.326,3120,4.326,3137,6.025,3138,4.9,3210,4.9,3212,6.756,3215,6.756,3226,4.581,3230,6.756,3246,5.327,3259,7.074,3260,5.327,3261,5.976,3262,5.976,3263,5.976,3264,7.419,3265,7.419,3266,5.976,3267,5.976,3268,5.976,3269,5.976,3270,5.976,3271,5.976,3272,5.976]],["title/classes/MsException.html",[10,0.083,965,2.715]],["body/classes/MsException.html",[3,0.156,4,0.127,5,0.032,8,0.147,10,0.156,18,2.729,30,0.555,43,1.027,44,0.006,45,0.371,46,0.163,47,0.858,63,0.502,74,0.198,85,5.093,86,0.137,115,0.005,116,0.005,118,2.108,137,2.958,181,4.318,184,2.922,218,2.86,314,1.448,392,1.683,604,4.005,841,4.005,849,4.276,960,5.29,964,5.513,965,4.752,2927,8.256,3226,5.393,3232,6.422,3273,7.035,3274,8.378,3275,8.378,3276,9.461,3277,7.035,3278,7.035]],["title/injectables/NotEmptyPipe.html",[837,1.569,2110,3.465]],["body/injectables/NotEmptyPipe.html",[3,0.156,4,0.126,5,0.032,8,0.146,10,0.122,13,1.409,15,0.405,18,2.14,23,1.68,30,0.66,43,1.221,44,0.006,45,0.441,46,0.162,47,1.02,50,0.793,63,0.501,74,0.166,76,1.409,86,0.136,97,3.855,98,1.929,103,1.66,115,0.005,116,0.005,137,2.478,183,2.061,293,5.753,837,2.741,839,3.271,995,5.504,1383,3.855,1435,3.98,2110,6.055,2220,7.967,3279,8.937,3280,7.016,3281,8.364,3282,8.364,3283,7.016,3284,7.016,3285,7.457,3286,8.364,3287,7.016,3288,8.364,3289,7.016,3290,7.016]],["title/classes/NotFoundMsException.html",[10,0.083,3291,4.267]],["body/classes/NotFoundMsException.html",[3,0.16,4,0.129,5,0.032,8,0.149,10,0.125,30,0.566,43,1.048,44,0.006,45,0.379,46,0.139,47,0.875,59,6.886,63,0.506,74,0.201,76,1.441,86,0.139,115,0.005,116,0.005,118,2.151,137,2.534,181,3.952,184,2.981,604,4.052,841,4.052,959,4.94,960,5.353,961,4.972,963,5.836,964,5.578,965,5.395,966,5.836,967,4.94,968,4.722,969,4.94,3291,7.557,3292,8.477,3293,7.176]],["title/classes/PageableData.html",[10,0.083,1072,2.411]],["body/classes/PageableData.html",[3,0.127,4,0.103,5,0.026,8,0.153,10,0.162,18,2.626,30,0.451,34,4.336,43,1.075,44,0.007,45,0.301,46,0.189,47,1.05,63,0.52,74,0.174,86,0.158,88,1.441,103,1.743,115,0.005,116,0.005,118,1.713,125,4.32,137,2.601,174,1.458,182,2.207,247,4.32,314,1.621,319,2.919,353,4.622,364,2.374,473,3.926,574,2.427,899,2.879,993,3.352,996,1.943,1028,2.879,1051,2.879,1072,4.336,1139,4.478,1258,3.815,1483,6.598,1544,4.476,1589,5.387,1591,4.686,1653,4.381,1654,6.247,1665,5.646,1669,7.058,1904,5.07,1916,5.07,3294,4.686,3295,5.715,3296,7.673,3297,7.673,3298,5.715,3299,8.025,3300,6.565,3301,5.094,3302,5.094,3303,6.565,3304,5.094,3305,6.565,3306,7.058,3307,5.094,3308,4.686,3309,5.094,3310,5.646]],["title/classes/PageableParams.html",[10,0.083,1051,2.411]],["body/classes/PageableParams.html",[3,0.124,4,0.1,5,0.025,8,0.116,10,0.161,15,0.321,16,0.985,18,2.599,30,0.697,34,3.648,43,1.057,44,0.007,46,0.191,47,1.153,63,0.53,74,0.171,86,0.156,88,1.427,103,1.713,115,0.005,116,0.005,118,1.668,125,3.265,137,1.966,174,1.296,182,2.554,183,1.578,247,4.72,314,1.595,319,2.637,353,4.107,364,2.312,473,4.543,574,2.364,695,2.389,899,3.648,993,3.265,996,1.893,1028,2.804,1051,3.648,1072,3.648,1139,3.979,1258,2.883,1483,6.942,1544,3.383,1589,5.303,1591,5.937,1653,6.169,1654,6.772,1665,5.55,1669,5.937,1904,3.832,1916,4.985,3294,4.564,3296,6.454,3297,6.454,3299,7.818,3300,4.962,3301,4.962,3302,4.962,3303,6.454,3304,4.962,3305,7.174,3306,7.244,3307,4.962,3308,4.564,3309,4.962,3310,5.55,3311,8.047,3312,5.566,3313,5.566,3314,5.566,3315,5.566,3316,5.566,3317,5.566,3318,5.566]],["title/controllers/ProcessController.html",[662,0.915,3319,3.925]],["body/controllers/ProcessController.html",[3,0.121,4,0.098,5,0.032,10,0.095,15,0.315,18,1.663,23,1.435,24,3.088,30,0.693,43,1.281,44,0.007,45,0.463,46,0.17,47,1.07,50,0.992,51,2.572,63,0.54,74,0.217,76,1.095,81,1.06,86,0.106,87,1.169,88,0.913,89,2.218,93,3.006,97,3.926,98,1.965,103,1.29,115,0.005,116,0.005,122,3.102,127,3.948,142,4.511,188,3.948,203,1.043,267,1.077,314,1.289,380,1.426,392,1.751,480,1.379,518,1.426,644,1.868,662,1.043,695,2.373,731,2.423,733,2.368,749,1.634,750,1.606,751,1.606,752,1.634,753,2.388,754,1.606,755,2.656,756,2.068,757,1.5,758,1.634,759,1.634,760,1.634,761,1.634,762,1.634,763,1.634,764,1.525,765,1.634,766,1.634,767,1.634,768,1.579,769,1.634,770,1.606,771,1.634,772,1.634,773,1.634,774,1.634,775,1.634,776,1.5,777,1.634,778,1.606,779,1.634,782,3.443,838,3.314,1272,2.423,1303,5.768,1383,2.996,1435,3.093,1527,3.588,1530,3.754,1531,3.948,1532,3.754,1533,3.754,1536,3.588,1537,6.354,3319,5.858,3320,5.453,3321,7.144,3322,7.144,3323,5.858,3324,5.858,3325,6.368,3326,5.453,3327,5.453,3328,5.453,3329,5.453,3330,5.453,3331,5.453,3332,4.861,3333,5.453,3334,5.453,3335,4.861,3336,5.453,3337,5.453,3338,4.861,3339,5.453,3340,5.453,3341,5.453,3342,5.453,3343,5.453,3344,5.453,3345,5.453,3346,5.453,3347,5.453,3348,5.453,3349,5.453,3350,5.453,3351,5.453,3352,5.453,3353,5.453,3354,5.453,3355,5.453,3356,5.453,3357,6.533,3358,5.453,3359,5.453,3360,5.453,3361,4.471,3362,5.453,3363,5.453,3364,7.144,3365,5.453]],["title/interfaces/ProcessLog.html",[327,0.552,3366,3.669]],["body/interfaces/ProcessLog.html",[3,0.151,4,0.123,5,0.031,8,0.171,15,0.393,16,1.117,44,0.006,46,0.182,52,1.366,63,0.526,74,0.194,86,0.159,115,0.005,116,0.005,121,2.02,122,4.221,123,3.738,147,3.252,178,5.403,179,6.294,187,4.683,194,4.683,203,1.337,240,2.28,314,1.427,327,1.081,329,2.004,392,1.279,405,3.073,408,4.167,984,3.99,1035,4.135,1065,2.691,1066,2.449,3366,6.761,3367,6.064,3368,7.021,3369,6.63,3370,5.578]],["title/entities/ProcessLogEntity.html",[140,3.15,264,0.49]],["body/entities/ProcessLogEntity.html",[3,0.133,4,0.108,5,0.034,8,0.125,10,0.104,13,1.203,15,0.506,16,1.033,30,0.713,44,0.007,45,0.4,46,0.186,63,0.425,74,0.197,81,1.164,86,0.116,87,1.878,115,0.005,116,0.005,122,3.618,140,4.994,203,1.216,240,2.073,264,0.853,267,1.183,295,1.489,314,1.228,319,2.487,380,1.566,393,2.399,405,2.73,408,3.791,480,1.514,501,2.399,518,1.566,644,1.984,692,1.734,695,2.443,697,3.021,712,3.102,722,1.927,723,3.823,726,3.102,749,1.795,750,1.764,751,1.764,752,1.795,753,2.497,754,1.764,755,2.715,756,2.197,757,1.647,758,1.795,759,1.795,760,1.795,761,1.795,762,1.795,763,1.795,764,1.675,765,1.795,766,1.795,767,1.795,768,1.734,769,1.795,770,1.764,771,1.795,772,1.795,773,1.795,774,1.795,775,1.795,776,1.647,777,1.795,778,1.764,779,1.795,984,4.451,1420,3.102,1421,4.792,1442,3.931,1614,4.613,1965,4.911,1973,4.911,2152,4.123,2153,5.224,2154,6.03,2156,5.224,3366,5.817,3368,6.386,3371,5.989,3372,5.989,3373,5.989,3374,6.341,3375,5.989,3376,5.989,3377,5.989,3378,7.589,3379,5.989,3380,7.589,3381,5.989,3382,4.911,3383,5.989]],["title/injectables/ProcessManagerService.html",[142,3.022,837,1.569]],["body/injectables/ProcessManagerService.html",[3,0.072,4,0.058,5,0.015,8,0.18,10,0.056,15,0.186,16,0.669,18,2.189,21,3.369,23,0.987,24,2.996,25,2.33,30,0.706,33,1.735,34,2.476,43,1.258,44,0.007,45,0.455,46,0.17,47,1.051,50,1.042,51,2.145,52,0.987,63,0.531,74,0.212,76,0.647,86,0.063,87,1.739,88,1.481,89,2.676,93,2.877,97,3.274,98,1.973,103,1.919,115,0.003,116,0.003,122,4.316,123,4.658,124,2.7,125,5.244,126,4.029,134,2.476,135,3.557,137,1.735,140,5.937,142,3.103,146,6.217,147,4.407,163,3.767,166,3.383,167,2.134,169,3.767,172,2.184,174,1.354,178,5.336,182,1.998,183,1.071,187,2.218,189,2.641,194,4.588,202,2.641,203,1.148,206,2.641,288,2.7,295,0.801,311,4.885,314,1.273,392,1.852,404,1.735,408,1.466,460,2.987,574,2.087,670,1.769,687,1.071,692,1.423,837,1.61,839,1.502,846,1.399,848,1.717,855,3.001,860,1.477,937,5.176,984,3.909,1035,5.051,1050,2.349,1101,1.77,1140,1.717,1149,2.236,1164,1.84,1258,2.545,1288,5.415,1305,2.332,1306,1.717,1594,3.767,1614,4.781,1636,2.12,1653,5.501,1654,2.469,1714,2.641,1881,4.029,2547,5.311,2560,2.641,2974,5.109,3139,5.109,3141,3.234,3161,2.469,3162,2.641,3190,2.872,3310,2.469,3323,4.029,3324,4.029,3325,4.381,3332,4.381,3335,4.381,3338,4.381,3357,7.331,3361,2.641,3368,2.469,3374,4.313,3384,8.043,3385,3.221,3386,5.957,3387,4.914,3388,4.914,3389,4.914,3390,4.914,3391,4.914,3392,6.665,3393,6.665,3394,4.914,3395,4.914,3396,3.221,3397,5.109,3398,5.311,3399,5.957,3400,5.957,3401,4.914,3402,4.381,3403,4.914,3404,3.221,3405,7.176,3406,4.914,3407,3.221,3408,4.381,3409,4.914,3410,3.221,3411,3.767,3412,4.914,3413,4.914,3414,3.221,3415,4.914,3416,3.221,3417,3.221,3418,6.665,3419,5.941,3420,4.381,3421,3.221,3422,4.381,3423,4.914,3424,3.221,3425,3.221,3426,3.221,3427,3.221,3428,4.914,3429,4.914,3430,4.914,3431,3.221,3432,2.872,3433,2.218,3434,2.872,3435,2.872,3436,4.029,3437,2.469,3438,2.872,3439,3.221,3440,3.221,3441,2.872,3442,2.872,3443,3.221,3444,3.221,3445,4.914,3446,3.221,3447,3.221,3448,3.221,3449,4.914,3450,4.914,3451,2.872,3452,5.311,3453,2.469,3454,2.872,3455,2.641,3456,2.872,3457,4.914,3458,6.665,3459,3.221,3460,3.221,3461,3.221,3462,3.221,3463,4.914,3464,5.957,3465,4.914,3466,3.221,3467,4.914,3468,3.221,3469,3.221,3470,3.221,3471,3.221,3472,3.221,3473,3.221,3474,3.221,3475,2.872]],["title/modules/ProcessModule.html",[850,1.114,3476,3.669]],["body/modules/ProcessModule.html",[3,0.122,4,0.099,5,0.032,8,0.114,10,0.096,13,1.102,18,1.674,23,1.102,24,2.267,30,0.433,44,0.007,50,0.62,74,0.229,76,1.102,81,1.066,86,0.107,93,1.831,115,0.005,116,0.005,122,3.115,124,3.941,127,3.972,140,4.72,142,6.121,188,3.972,189,4.499,267,1.084,380,1.434,480,1.387,518,1.434,533,3.824,612,3.518,644,1.875,731,3.187,749,1.644,750,1.616,751,1.616,752,1.644,753,2.395,754,1.616,755,2.66,756,2.076,757,1.509,758,1.644,759,1.644,760,1.644,761,1.644,762,1.644,763,1.644,764,1.535,765,1.644,766,1.644,767,1.644,768,1.588,769,1.644,770,1.616,771,1.644,772,1.644,773,1.644,774,1.644,775,1.644,776,1.509,777,1.644,778,1.616,779,1.644,850,2.047,852,2.383,868,4.809,869,3.335,870,4.205,871,3.335,872,4.001,873,3.61,880,3.429,882,3.61,892,3.725,896,3.725,985,2.842,1306,2.925,1319,3.112,1320,3.464,1321,3.464,1322,3.464,1327,3.464,1383,3.015,1464,3.61,1556,5.192,1614,5.151,1621,5.881,3141,3.61,3157,6.53,3319,6.552,3374,3.972,3432,4.891,3436,4.499,3476,7.583,3477,4.891,3478,4.891,3479,4.891,3480,4.891,3481,6.53,3482,6.915,3483,5.487,3484,7.172,3485,6.394,3486,7.172,3487,7.172,3488,7.172,3489,9.19,3490,6.394,3491,6.394,3492,5.487,3493,5.487,3494,4.499,3495,5.487,3496,5.487,3497,5.487,3498,5.487,3499,5.487,3500,5.487,3501,5.487]],["title/injectables/ProcessRegisterService.html",[837,1.569,3482,3.669]],["body/injectables/ProcessRegisterService.html",[3,0.1,4,0.081,5,0.02,8,0.171,10,0.078,15,0.26,18,2.507,21,3.628,23,1.261,24,2.816,25,2.601,30,0.649,43,1.2,44,0.007,45,0.434,46,0.16,47,1.002,50,0.962,51,2.26,60,5.992,74,0.224,76,0.905,86,0.087,87,1.825,88,1.308,89,2.552,93,2.096,98,1.239,103,2.108,115,0.004,116,0.004,122,4.209,124,3.45,127,5.231,134,3.163,135,4.545,137,2.217,142,4.936,147,2.153,163,4.812,169,4.812,174,1.672,187,3.101,188,3.261,194,3.101,202,5.925,207,5.596,392,1.181,670,3.144,837,2.057,839,2.1,844,2.555,846,1.956,848,2.402,860,1.391,1101,2.475,1161,5.133,1500,3.682,1614,3.816,1636,2.964,2560,3.694,3141,4.131,3161,3.453,3162,3.694,3164,5.659,3165,4.016,3323,5.148,3324,5.148,3357,7.305,3361,7.42,3369,6.815,3382,3.694,3384,7.588,3397,5.992,3398,6.442,3402,6.442,3420,5.596,3433,3.101,3434,4.016,3435,4.016,3436,5.148,3437,3.453,3438,4.016,3441,4.016,3442,4.016,3451,4.016,3452,4.016,3453,7.216,3454,4.016,3455,7.77,3456,4.016,3475,4.016,3482,4.812,3494,3.694,3502,4.504,3503,6.278,3504,5.596,3505,6.278,3506,6.278,3507,8.734,3508,4.504,3509,6.278,3510,4.504,3511,6.442,3512,6.278,3513,4.504,3514,6.278,3515,4.504,3516,6.278,3517,4.504,3518,6.278,3519,6.442,3520,6.278,3521,4.504,3522,4.504,3523,4.504,3524,4.504,3525,4.504,3526,4.504,3527,4.504,3528,4.504,3529,4.504,3530,4.504,3531,4.504,3532,4.504,3533,8.512,3534,7.226,3535,7.226,3536,4.504,3537,6.278,3538,4.504,3539,6.278,3540,4.504,3541,4.504,3542,4.504,3543,4.504,3544,4.504,3545,4.504,3546,4.504,3547,4.504,3548,4.504,3549,4.504]],["title/interfaces/ProcessUnit.html",[327,0.552,3369,3.465]],["body/interfaces/ProcessUnit.html",[3,0.149,4,0.121,5,0.03,8,0.194,15,0.386,16,1.106,44,0.006,46,0.187,52,1.759,63,0.538,74,0.192,86,0.158,115,0.005,116,0.005,121,2.005,122,4.053,123,4.467,147,4.354,178,4.404,179,5.13,187,4.607,194,6.029,203,0.977,240,2.209,314,1.083,327,1.076,329,1.971,392,1.713,405,3.059,408,3.045,984,5.342,1035,5.536,1065,2.985,1066,2.409,3366,6.982,3367,5.966,3368,5.13,3369,6.339,3370,7.468]],["title/entities/ProcessUnitEntity.html",[264,0.49,3374,3.465]],["body/entities/ProcessUnitEntity.html",[3,0.123,4,0.1,5,0.033,8,0.177,10,0.096,13,1.11,15,0.522,16,0.98,30,0.726,44,0.007,45,0.423,46,0.185,52,1.447,61,2.576,63,0.476,74,0.209,81,1.074,86,0.107,87,1.974,115,0.005,116,0.005,122,2.4,140,5.592,147,3.833,182,2.547,187,3.804,194,4.961,218,2.93,240,1.705,264,0.821,267,1.092,295,1.374,373,2.405,380,1.445,392,1.508,393,2.278,405,2.628,480,1.397,501,2.278,518,1.445,644,1.884,670,2.594,692,1.6,695,2.489,696,3.037,697,3.382,722,2.319,727,2.456,749,1.656,750,1.628,751,1.628,752,1.656,753,2.404,754,1.628,755,2.665,756,2.086,757,1.52,758,1.656,759,1.656,760,1.656,761,1.656,762,1.656,763,1.656,764,1.546,765,1.656,766,1.656,767,1.656,768,1.6,769,1.656,770,1.628,771,1.656,772,1.656,773,1.656,774,1.656,775,1.656,776,1.52,777,1.656,778,1.628,779,1.656,984,4.704,1035,4.874,1108,2.456,1424,4.402,1425,3.359,1426,4.67,1427,3.359,1440,3.842,1441,3.842,1445,3.037,1614,4.38,1909,4.236,1915,4.531,1916,5.85,1919,3.489,1922,3.135,1930,4.236,1974,3.804,2074,4.531,2075,5.909,2092,5.909,2152,3.804,2153,4.961,2154,4.961,2156,4.961,3369,5.217,3370,6.575,3374,5.217,3382,4.531,3550,5.526,3551,5.909,3552,5.526,3553,7.206,3554,5.526,3555,5.526,3556,5.526,3557,7.206,3558,5.526,3559,5.526,3560,5.526,3561,5.526,3562,5.526,3563,5.526,3564,5.526,3565,5.526]],["title/controllers/ProfileController.html",[662,0.915,3566,3.925]],["body/controllers/ProfileController.html",[3,0.116,4,0.094,5,0.031,10,0.09,13,1.043,15,0.3,18,1.584,22,4.029,23,1.389,24,3.023,30,0.655,43,1.211,44,0.007,45,0.438,46,0.161,47,1.012,50,0.938,63,0.523,71,2.957,74,0.225,75,6.378,76,1.043,81,1.01,86,0.101,88,0.869,89,1.613,93,2.769,97,4.274,98,2.139,103,2.044,115,0.004,116,0.004,144,1.542,174,1.392,203,1.345,267,1.026,297,3.418,298,3.982,317,2.946,321,4.259,358,4.227,380,1.358,480,1.313,518,1.358,644,1.809,662,0.993,695,2.243,731,2.308,733,2.256,749,1.557,750,1.53,751,1.53,752,1.557,753,2.331,754,1.53,755,2.625,756,2.003,757,1.428,758,1.557,759,1.557,760,1.557,761,1.557,762,1.557,763,1.557,764,1.453,765,1.557,766,1.557,767,1.557,768,1.504,769,1.557,770,1.53,771,1.557,772,1.557,773,1.557,774,1.557,775,1.557,776,1.428,777,1.557,778,1.53,779,1.557,780,3.148,781,4.368,782,3.28,791,4.63,792,4.63,793,4.63,838,3.157,997,2.769,1129,3.919,1250,4.205,1252,6.167,1253,6.934,1254,6.167,1255,6.934,1256,3.28,1259,3.28,1262,3.28,1264,3.28,1272,2.308,1303,5.008,1304,3.76,1383,2.854,1527,3.418,1530,3.576,1531,3.76,1532,3.576,1533,3.576,1536,3.418,1537,5.008,2000,5.303,2001,4.63,2002,4.259,2003,4.259,2125,5.673,2129,4.259,2132,4.259,2533,4.63,3566,5.673,3567,5.194,3568,5.194,3569,7.778,3570,5.194,3571,5.194,3572,5.194,3573,5.194,3574,5.194,3575,5.194,3576,5.194,3577,4.63,3578,5.194,3579,4.63,3580,4.63,3581,5.194,3582,8.294,3583,6.918,3584,6.918,3585,5.194,3586,5.194,3587,5.194,3588,5.194,3589,5.194,3590,5.194,3591,5.194]],["title/injectables/RedisCacheService.html",[837,1.569,1337,3.925]],["body/injectables/RedisCacheService.html",[3,0.078,4,0.063,5,0.016,8,0.177,10,0.109,13,0.707,15,0.203,18,1.603,19,3.513,21,3.368,23,1.056,24,2.996,25,1.421,30,0.672,43,1.244,44,0.007,45,0.449,46,0.165,47,1.099,50,1.044,51,1.892,52,1.4,60,5.998,61,3.648,63,0.544,66,3.612,68,3.083,74,0.177,76,0.707,86,0.068,87,1.86,88,1.473,89,2.165,93,2.782,98,1.729,103,2.132,115,0.003,116,0.004,137,1.856,144,1.604,149,4.983,166,4.8,167,3.699,180,4.261,183,2.1,184,1.463,212,4.534,219,4.711,314,1.379,317,2.981,327,0.606,363,3.831,459,4.765,582,4.053,610,2.648,645,2.141,661,1.522,670,3.066,671,2.075,675,2.412,837,1.723,839,1.642,844,1.998,846,1.529,848,1.878,860,1.165,889,7.217,931,6.372,932,6.584,942,4.781,1010,5.558,1027,5.048,1033,3.455,1124,4.09,1164,1.968,1219,3.717,1286,2.802,1330,5.285,1333,2.224,1336,3.14,1337,4.31,1353,4.686,1354,4.686,1355,4.686,1356,4.686,1357,4.686,1358,4.686,1359,4.686,1361,4.686,1363,4.686,1365,4.686,1367,4.686,1369,5.869,1370,4.686,1372,4.686,1374,3.14,1576,4.31,1644,8.107,2569,2.318,2729,6.216,3189,2.55,3191,2.55,3234,2.55,3235,2.55,3249,5.606,3408,6.975,3411,2.7,3592,8.672,3593,3.522,3594,5.256,3595,3.522,3596,3.522,3597,3.522,3598,5.256,3599,3.522,3600,3.522,3601,3.522,3602,6.65,3603,3.522,3604,3.522,3605,5.256,3606,5.256,3607,3.522,3608,3.14,3609,3.522,3610,3.522,3611,5.256,3612,5.256,3613,5.256,3614,3.522,3615,3.522,3616,3.522,3617,3.522,3618,3.522,3619,3.522,3620,3.522,3621,3.522,3622,3.522,3623,3.14,3624,3.522,3625,3.522,3626,3.522,3627,3.522,3628,3.522,3629,2.7]],["title/modules/RedisModule.html",[850,1.114,1326,3.15]],["body/modules/RedisModule.html",[3,0.132,4,0.107,5,0.034,8,0.124,10,0.104,21,3.45,23,1.195,24,1.88,25,1.609,30,0.469,43,0.869,44,0.007,45,0.314,46,0.161,47,0.726,50,0.673,61,3.523,63,0.466,74,0.207,76,1.195,81,1.156,86,0.116,89,2.579,98,1.636,103,1.788,115,0.005,116,0.005,267,1.175,276,2.707,314,1.223,373,2.522,380,1.555,480,1.504,518,1.555,644,1.976,687,1.647,749,1.783,750,1.752,751,1.752,752,1.783,753,2.489,754,1.752,755,2.711,756,2.188,757,1.636,758,1.783,759,1.783,760,1.783,761,1.783,762,1.783,763,1.783,764,1.664,765,1.783,766,1.783,767,1.783,768,1.722,769,1.783,770,1.752,771,1.783,772,1.783,773,1.783,774,1.783,775,1.783,776,1.636,777,1.783,778,1.752,779,1.783,846,3.607,850,2.099,852,2.584,855,4.184,862,4.871,880,4.176,884,5.465,892,2.774,893,2.997,896,2.774,982,3.757,1033,4.152,1286,4.029,1326,5.465,1330,5.125,1334,4.307,1335,4.307,1340,4.096,1341,3.915,1342,4.096,1344,4.307,1346,4.307,1394,5.304,1395,6.737,1396,5.202,1401,6.737,2257,4.878,3189,4.307,3191,6.012,3608,5.304,3630,5.949,3631,7.557,3632,5.949,3633,5.949,3634,8.305,3635,5.949,3636,5.949,3637,5.949,3638,5.949,3639,5.949]],["title/classes/Roles.html",[10,0.083,1272,2.127]],["body/classes/Roles.html",[3,0.138,4,0.112,5,0.028,8,0.129,10,0.135,15,0.358,16,1.152,18,2.94,30,0.668,34,3.126,35,2.676,41,2.599,42,3.519,44,0.007,45,0.409,46,0.164,58,1.074,63,0.475,71,2.326,84,4.756,85,4.491,86,0.164,89,2.409,115,0.005,116,0.005,118,1.86,121,1.777,175,3.154,182,2.538,183,1.846,311,7.835,355,2.277,391,2.323,797,5.346,855,4.889,908,3.025,922,7.274,961,3.639,965,3.519,1003,6.288,1015,4.24,1129,4.265,1272,3.762,1274,5.119,1491,6.578,1544,5.662,2823,4.491,3137,4.271,3232,4.756,3640,5.531,3641,5.087,3642,6.204,3643,7.759,3644,6.204,3645,6.204,3646,7.759,3647,6.362]],["title/guards/RolesGuard.html",[0,3.465,2000,3.669]],["body/guards/RolesGuard.html",[0,5.763,2,5.302,3,0.144,4,0.117,5,0.029,8,0.135,10,0.113,13,1.299,14,8.024,15,0.373,18,1.972,23,1.599,28,7.097,29,6.9,30,0.628,38,3.169,41,2.265,43,1.162,44,0.007,45,0.42,46,0.155,47,0.971,48,4.681,50,0.731,52,1.599,57,4.957,74,0.226,76,1.299,83,4.957,84,4.957,85,4.681,86,0.126,87,1.85,89,2.795,90,5.764,103,2.13,115,0.005,116,0.005,137,2.283,247,3.793,670,2.328,837,2.609,1272,3.833,1273,4.669,1274,4.74,1383,3.553,1532,4.452,2000,6.103,3577,5.764,3579,5.764,3580,5.764,3648,6.466,3649,5.763,3650,6.466,3651,9.411,3652,6.466,3653,6.466,3654,5.764,3655,6.466,3656,7.097,3657,6.466,3658,6.466,3659,6.466,3660,7.961,3661,6.466,3662,6.466,3663,5.764,3664,6.466]],["title/interfaces/TargetData.html",[327,0.552,1107,2.715]],["body/interfaces/TargetData.html",[3,0.081,4,0.066,5,0.017,8,0.158,9,2.447,10,0.138,15,0.211,16,0.734,38,1.452,41,2.154,43,1.229,44,0.007,45,0.468,46,0.18,47,0.445,50,0.927,51,1.314,52,1.912,58,1.536,63,0.551,66,1.89,71,2.719,74,0.199,86,0.176,88,1.555,115,0.004,116,0.003,121,2.056,144,1.63,172,1.622,174,1.565,180,2.579,203,1.255,240,0.864,264,1.009,285,2.07,295,0.907,296,1.038,314,1.453,319,2.481,327,1.07,329,1.075,383,1.216,384,1.483,389,0.954,392,1.015,398,1.87,400,1.423,402,1.701,423,1.423,432,1.549,434,2.455,445,1.744,484,1.701,574,1.549,626,1.701,662,0.698,665,1.314,671,1.909,672,1.943,675,2.054,684,1.094,685,1.589,687,0.795,688,1.003,692,1.056,722,2.066,733,1.585,780,1.66,850,0.849,860,1.196,908,2.104,998,1.744,1015,1.744,1028,1.838,1037,2.07,1038,2.14,1040,2.14,1041,2.14,1042,3.165,1043,2.14,1046,2.14,1048,4.573,1050,3.619,1051,3.574,1054,3.235,1057,2.14,1059,2.14,1061,2.14,1062,4.807,1064,1.945,1065,2.867,1066,1.314,1067,3.326,1068,2.14,1069,2.005,1070,4.229,1071,2.005,1072,2.719,1073,2.005,1074,2.07,1075,1.945,1076,3.165,1077,2.14,1078,2.005,1079,4.776,1080,1.89,1081,2.965,1082,2.14,1083,2.14,1084,2.14,1085,2.14,1086,2.07,1087,2.07,1088,2.14,1089,2.14,1090,2.14,1091,2.14,1092,2.14,1093,2.14,1094,2.14,1095,2.14,1096,2.14,1097,2.14,1098,2.14,1099,3.642,1100,2.14,1101,2.965,1102,3.061,1103,2.877,1104,2.218,1105,3.061,1106,1.945,1107,3.642,1108,3.153,1109,4.312,1110,1.945,1111,3.165,1112,5.032,1113,2.14,1114,2.14,1115,2.14,1116,2.14,1117,2.14,1118,2.14,1119,2.07,1120,2.14,1121,1.945,1122,2.218,1123,2.14,1124,2.14,1125,1.585,1126,2.218,1127,2.07,1128,2.14,1129,1.838,1130,2.005,1131,2.07,1132,1.744,1133,1.838,1134,2.005,1135,2.14,1136,2.07,1137,2.218,1138,2.218,1139,2.965,1140,3.423,1141,2.14,1142,2.14,1143,5.131,1144,4.81,1145,4.602,1146,2.218,1147,2.14,1148,2.14,1149,2.455,1150,2.218,1151,3.903,1152,2.14,1153,2.14,1154,1.945,1155,3.28,1156,2.218,1157,2.218,1158,2.218,1159,2.218,1160,1.516,1161,2.07,1162,1.945,1163,2.14,1164,1.366,1165,1.622,1166,2.218,1167,2.218]],["title/classes/TmpDirCleanerProcess.html",[10,0.083,3665,4.267]],["body/classes/TmpDirCleanerProcess.html",[3,0.098,4,0.079,5,0.032,8,0.17,9,2.279,10,0.124,15,0.254,16,0.84,17,5.829,18,2.646,19,4.371,21,3.788,23,1.24,24,3.055,25,2.466,30,0.745,34,3.11,43,1.189,44,0.007,45,0.43,46,0.177,47,1.03,49,3.606,50,1.042,51,1.583,58,1.069,63,0.474,74,0.213,76,0.883,86,0.085,87,1.324,88,0.736,89,2.402,93,2.82,98,1.209,103,1.461,115,0.004,116,0.004,117,7.787,118,1.318,122,4.1,126,5.062,127,5.898,128,6.342,129,6.359,130,5.503,131,6.359,132,6.359,133,5.503,134,3.594,135,5.164,136,5.503,137,2.18,140,2.894,142,5.144,146,5.468,147,4.233,148,3.92,149,4.124,151,5.468,152,3.92,153,6.359,154,3.92,155,6.359,156,6.359,157,6.359,158,3.92,159,3.92,161,3.92,163,4.732,164,3.92,166,3.027,167,1.91,169,3.371,170,1.646,172,1.954,173,3.92,174,1.384,175,3.144,177,3.92,178,5.09,179,3.371,180,2.102,181,3.326,182,1.85,183,0.959,184,1.827,185,2.494,186,5.503,188,3.183,212,2.673,216,3.92,314,1.252,317,3.501,429,3.621,784,2.894,788,2.894,841,2.951,844,2.494,846,1.91,848,2.344,849,2.673,908,2.407,937,2.894,942,2.102,1163,3.621,1214,2.671,1296,6.405,1396,4.25,1435,3.501,1577,5.559,1627,4.732,1636,2.894,1688,3.371,1714,3.606,1749,5.929,1775,3.371,1833,3.371,1857,3.92,1865,3.92,2228,3.606,3665,5.503,3666,7.133,3667,4.397,3668,6.173,3669,6.342,3670,6.173,3671,4.397,3672,4.397,3673,4.397,3674,4.397,3675,4.397,3676,6.173,3677,6.173,3678,6.173,3679,4.397,3680,6.173,3681,7.133,3682,6.173,3683,7.735,3684,7.735,3685,7.735,3686,4.732,3687,4.397,3688,4.397,3689,4.397,3690,4.397,3691,4.397,3692,4.397,3693,4.397,3694,4.397,3695,4.397,3696,4.397,3697,4.397,3698,4.397,3699,4.397,3700,4.397,3701,4.397,3702,4.397,3703,4.397,3704,5.503,3705,4.397,3706,4.397,3707,4.397,3708,4.397,3709,4.397,3710,4.397,3711,4.397]],["title/classes/TooManyRequestsMsException.html",[10,0.083,3712,4.267]],["body/classes/TooManyRequestsMsException.html",[3,0.158,4,0.128,5,0.032,8,0.147,10,0.123,30,0.559,43,1.034,44,0.006,45,0.374,46,0.138,47,0.864,63,0.503,74,0.199,76,1.422,86,0.138,115,0.005,116,0.005,118,2.122,137,2.501,181,3.921,184,2.941,212,4.304,604,4.02,841,4.02,849,4.304,959,4.875,960,5.311,961,4.933,963,6.525,964,5.534,965,5.376,966,5.79,967,4.875,968,4.66,969,4.875,3712,7.498,3713,8.41,3714,9.478,3715,7.081,3716,6.312,3717,6.312,3718,7.081,3719,7.081]],["title/classes/UnauthorizedMsException.html",[10,0.083,3720,4.267]],["body/classes/UnauthorizedMsException.html",[3,0.16,4,0.129,5,0.033,8,0.15,10,0.125,30,0.567,35,2.271,43,1.049,44,0.006,45,0.379,46,0.14,47,0.876,63,0.506,74,0.201,76,1.443,86,0.14,115,0.005,116,0.005,118,2.154,137,2.537,181,3.955,184,2.985,604,4.055,841,4.055,959,4.947,960,5.357,961,4.976,963,5.841,964,5.583,965,5.397,966,5.841,967,4.947,968,4.728,969,4.947,2794,6.406,3720,7.563,3721,8.484,3722,9.027]],["title/interfaces/UpsertMediaRequest.html",[327,0.552,1228,2.552]],["body/interfaces/UpsertMediaRequest.html",[3,0.077,4,0.062,5,0.044,8,0.072,9,2.414,10,0.15,13,1.387,15,0.2,16,0.705,25,1.868,33,1.22,35,1.638,41,0.983,44,0.007,45,0.474,46,0.189,47,1.011,50,0.837,52,1.664,53,1.133,58,1.434,63,0.548,74,0.175,81,0.672,86,0.174,88,1.445,115,0.003,116,0.003,121,1.977,144,1.56,170,1.294,174,1.324,175,1.405,183,0.753,203,1.375,240,1.471,264,0.758,267,0.683,292,3.607,296,0.983,314,1.56,327,1.053,329,1.018,332,1.609,338,1.467,355,1.269,359,1.32,364,3.796,365,3.326,366,1.467,374,1.536,378,1.536,383,2.252,388,2.306,389,2.216,390,3.214,391,3.016,392,1.743,397,1.94,398,2.154,399,1.536,403,2.64,404,1.22,405,1.698,409,2.107,410,2.153,418,1.347,419,1.762,431,1.294,444,1.405,452,3.159,453,3.07,454,3.159,468,1.501,471,1.436,474,1.536,482,1.376,501,1.638,635,1.536,650,2.763,660,1.092,661,1,662,0.991,664,1.467,665,1.244,668,2.251,671,1.723,672,1.244,674,1.436,675,1.5,676,1.501,677,1.98,678,1.347,679,1.467,680,2.375,681,1.501,684,1.036,685,1.526,687,0.753,688,0.95,860,1.148,899,3.132,977,2.586,994,3.994,996,1.175,1065,2.64,1066,1.244,1125,1.501,1160,1.436,1164,1.294,1176,1.79,1177,1.843,1178,1.843,1180,1.843,1185,2.848,1186,1.843,1187,1.843,1190,3.578,1192,1.843,1193,1.899,1194,1.899,1195,1.843,1196,1.899,1197,1.843,1198,1.843,1200,1.899,1201,1.899,1202,2.848,1203,1.843,1205,2.358,1206,1.899,1207,1.79,1208,1.899,1209,1.899,1210,3.578,1211,2.763,1212,1.79,1213,1.899,1214,1.94,1215,3.578,1216,1.843,1217,1.79,1218,2.763,1219,1.843,1220,1.899,1221,3.578,1222,1.899,1223,3.22,1224,1.843,1225,3.05,1226,3.833,1227,2.848,1228,2.763,1229,3.143,1230,3.796,1231,3.796,1232,2.763,1233,3.945,1234,1.843,1235,2.763,1236,1.741,1237,1.741,1238,1.899,1239,1.899,1240,1.741,1241,1.741,1242,1.741,1243,1.899,1244,1.899,1245,1.741,1246,1.899,1247,1.899,1248,1.652,1249,1.79]],["title/interfaces/User.html",[71,1.435,327,0.552]],["body/interfaces/User.html",[3,0.104,4,0.084,5,0.021,8,0.097,9,2.467,10,0.156,13,1.292,15,0.269,16,0.875,22,2.416,34,4.335,35,1.475,44,0.007,45,0.339,46,0.186,50,0.941,52,1.594,58,1.374,63,0.562,71,3.012,74,0.188,86,0.174,88,1.476,98,2.024,115,0.004,116,0.004,121,1.971,144,1.585,172,2.858,174,1.42,203,1.411,240,2.036,264,0.813,276,3.788,288,2.564,291,3.788,296,1.327,327,1.051,329,1.374,358,4.504,383,1.875,384,1.897,392,1.21,404,1.647,405,2.89,419,1.586,501,2.033,660,1.475,661,1.351,662,1.23,671,1.847,675,1.351,680,2.457,684,1.398,685,1.895,687,1.017,688,1.283,860,1.425,872,2.123,907,3.611,950,3.91,977,2.408,994,3.904,996,1.586,997,2.487,1030,2.736,1065,2.413,1066,1.679,1149,3.35,1205,3.611,1250,2.836,1251,2.946,1256,2.946,1258,2.416,1259,2.946,1261,4.233,1262,2.946,1264,2.946,1266,5.06,1267,5.256,1268,5.256,1269,5.06,1270,5.256,1271,5.06,1272,3.699,1273,4.883,1274,3.535,1275,4.649,1276,2.946,1277,2.946,1278,2.946,1279,2.946,1280,2.946,1281,2.946,1282,2.836]],["title/classes/UserDto.html",[10,0.083,997,2.552]],["body/classes/UserDto.html",[3,0.101,4,0.082,5,0.02,8,0.094,9,2.446,10,0.155,13,1.455,15,0.261,16,0.857,22,2.345,30,0.732,34,4.295,35,1.431,44,0.007,45,0.332,46,0.185,50,0.931,52,1.455,58,1.356,63,0.557,71,3.007,74,0.185,86,0.173,88,1.464,98,1.993,115,0.004,116,0.004,118,1.357,121,1.886,144,1.577,172,2.8,174,1.474,203,1.399,240,1.949,264,0.802,276,3.564,288,2.488,291,3.564,296,1.288,327,1.028,358,4.488,383,1.765,384,1.84,392,1.185,404,1.599,405,2.794,419,1.539,501,1.991,660,1.431,661,1.311,662,1.205,671,1.824,675,1.311,680,2.406,684,1.357,685,1.856,687,0.987,688,1.245,695,2.506,860,1.396,872,2.06,907,3.564,950,3.829,977,2.713,994,4.041,996,1.539,997,3.359,1030,2.655,1065,2.375,1066,1.63,1149,3.297,1205,3.879,1250,2.752,1251,2.859,1256,2.859,1258,2.345,1259,2.859,1261,4.146,1262,2.859,1264,2.859,1266,4.761,1267,4.947,1268,4.947,1269,4.761,1270,4.947,1271,4.761,1272,3.481,1273,4.25,1274,3.462,1275,4.947,1276,2.859,1277,2.859,1278,2.859,1279,2.859,1280,2.859,1281,2.859,1282,2.752,2799,3.277,3723,4.527,3724,4.527,3725,4.527,3726,4.527,3727,4.527,3728,4.527,3729,4.527,3730,4.527,3731,4.527,3732,4.527,3733,4.527]],["title/entities/UserEntity.html",[264,0.49,297,3.15]],["body/entities/UserEntity.html",[3,0.115,4,0.093,5,0.031,8,0.108,10,0.12,13,1.038,15,0.531,16,0.938,30,0.749,44,0.007,45,0.468,46,0.188,52,1.385,63,0.542,71,2.326,74,0.196,81,1.005,86,0.1,87,2.049,115,0.004,116,0.004,182,2.067,203,1.133,240,1.632,264,0.795,267,1.021,276,3.531,291,3.531,295,1.285,297,4.538,319,2.26,380,1.351,389,2.029,393,2.18,405,2.543,480,1.307,501,2.18,518,1.351,644,1.803,670,3.193,692,1.496,695,2.566,696,4.264,697,3.826,722,2.219,723,3.909,727,3.942,749,1.549,750,1.523,751,1.523,752,1.549,753,2.326,754,1.523,755,2.622,756,1.996,757,1.421,758,1.549,759,1.549,760,1.549,761,1.549,762,1.549,763,1.549,764,1.446,765,1.549,766,1.549,767,1.549,768,1.496,769,1.549,770,1.523,771,1.549,772,1.549,773,1.549,774,1.549,775,1.549,776,1.421,777,1.549,778,1.523,779,1.549,1067,4.288,1069,2.84,1266,4.716,1267,4.9,1268,4.9,1269,4.716,1270,4.9,1271,4.716,1272,3.448,1304,3.742,1416,2.536,1417,3.032,1419,4.856,1420,2.677,1421,4.354,1438,5.286,1440,3.676,1441,3.676,1442,3.572,1472,3.962,1930,3.962,1974,3.559,2093,4.238,2152,3.559,2153,4.747,2154,4.747,2156,4.747,2159,5.654,2162,4.238,3734,5.169,3735,4.992,3736,5.169,3737,5.169,3738,5.169,3739,6.896,3740,5.169,3741,5.169,3742,6.896,3743,5.169,3744,5.169,3745,5.169,3746,5.169,3747,5.169,3748,5.169,3749,5.169]],["title/injectables/UserEntityPwdAndRolesSaveHandler.html",[837,1.569,3750,4.267]],["body/injectables/UserEntityPwdAndRolesSaveHandler.html",[3,0.15,4,0.121,5,0.03,8,0.14,10,0.117,13,1.353,15,0.389,23,1.639,30,0.531,43,0.983,44,0.006,45,0.355,46,0.131,47,0.821,50,0.761,63,0.492,71,2.945,74,0.216,76,1.353,86,0.131,103,1.594,115,0.005,116,0.005,264,0.836,266,5.37,317,4.981,614,4.96,632,4.96,665,2.938,692,2.362,741,5.177,778,2.404,837,2.674,839,3.139,998,3.219,1048,3.139,1121,4.351,1127,4.629,1128,4.787,1129,4.424,1272,3.902,1533,4.636,1918,4.252,3663,6.003,3750,7.275,3751,8.161,3752,8.161,3753,8.161,3754,6.734,3755,7.275,3756,6.734,3757,6.734,3758,6.734,3759,6.734,3760,6.734,3761,6.734,3762,6.734]],["title/modules/UserModule.html",[850,1.114,872,2.178]],["body/modules/UserModule.html",[3,0.136,4,0.111,5,0.035,8,0.128,10,0.107,22,4.362,23,1.232,30,0.484,43,0.895,44,0.007,45,0.324,46,0.119,47,0.748,50,0.693,71,1.838,74,0.226,76,1.232,81,1.192,86,0.119,103,1.451,115,0.005,116,0.005,124,4.233,182,1.838,183,1.337,267,1.212,297,4.036,298,4.701,380,1.603,480,1.551,501,2.435,518,1.603,533,4.107,644,2.014,662,1.473,687,1.679,731,2.726,749,1.838,750,1.806,751,1.806,752,1.838,753,2.524,754,1.806,755,2.729,756,2.23,757,1.687,758,1.838,759,1.838,760,1.838,761,1.838,762,1.838,763,1.838,764,1.716,765,1.838,766,1.838,767,1.838,768,1.775,769,1.838,770,1.806,771,1.838,772,1.838,773,1.838,774,1.838,775,1.838,776,1.687,777,1.838,778,1.806,779,1.838,850,2.119,852,2.663,855,3.881,856,4.864,857,4.036,860,1.866,862,4.94,868,4.107,869,3.728,870,3.591,871,3.728,872,3.832,879,4.222,880,2.932,892,2.859,893,3.09,894,3.597,895,4.44,896,2.859,1282,5.37,1283,6.906,1304,4.44,1306,3.27,1464,4.036,3566,6.906,3735,5.577,3763,6.133,3764,6.133,3765,6.133,3766,6.133,3767,6.133]],["title/interfaces/UserRole.html",[327,0.552,1273,2.807]],["body/interfaces/UserRole.html",[3,0.109,4,0.088,5,0.022,8,0.102,9,2.499,10,0.158,13,1.337,15,0.283,16,0.906,22,2.54,34,4.401,35,1.55,44,0.007,45,0.447,46,0.174,50,0.958,52,1.337,58,1.308,63,0.557,71,3.018,74,0.192,86,0.177,88,1.496,98,2.078,115,0.004,116,0.004,121,2.001,144,1.597,172,2.958,174,1.45,203,1.401,240,2.067,264,0.83,276,3.029,288,2.695,291,3.029,296,1.395,327,1.062,329,1.445,358,4.531,383,1.702,384,1.994,392,1.593,404,1.732,405,2.928,419,1.668,501,2.104,660,1.55,661,1.42,662,1.273,671,1.886,675,1.42,680,2.542,684,1.47,685,1.96,687,1.069,688,1.349,860,1.475,872,2.232,907,3.687,950,4.046,977,2.492,994,3.936,996,1.668,997,2.615,1030,2.877,1065,2.776,1066,1.765,1149,3.438,1205,3.687,1250,2.981,1251,3.097,1256,3.097,1258,2.54,1259,3.097,1261,4.38,1262,3.097,1264,3.097,1266,4.046,1267,4.203,1268,4.203,1269,4.046,1270,4.203,1271,4.046,1272,2.958,1273,4.753,1274,4.152,1275,4.771,1276,3.097,1277,3.097,1278,3.097,1279,3.097,1280,3.097,1281,3.097,1282,2.981]],["title/classes/UserRoleDto.html",[10,0.083,1275,3.022]],["body/classes/UserRoleDto.html",[3,0.108,4,0.087,5,0.022,8,0.101,9,2.492,10,0.158,13,1.509,15,0.28,16,0.899,22,2.513,30,0.593,34,4.387,35,1.533,44,0.007,45,0.426,46,0.173,50,0.954,52,1.327,58,1.396,63,0.555,71,3.016,74,0.191,86,0.176,88,1.492,98,2.066,115,0.004,116,0.004,118,1.454,121,1.933,144,1.594,172,2.936,174,1.51,203,1.398,240,1.997,264,0.826,276,3.006,288,2.666,291,3.006,296,1.38,327,1.045,358,4.525,383,1.692,384,1.972,392,1.517,404,1.713,405,2.854,419,1.65,501,2.088,660,1.533,661,1.404,662,1.263,671,1.878,675,1.404,680,2.524,684,1.454,685,1.946,687,1.057,688,1.334,695,2.031,860,1.464,872,2.207,907,3.67,950,4.016,977,2.813,994,3.979,996,1.65,997,2.586,1030,2.845,1065,2.644,1066,1.746,1149,3.419,1205,3.84,1250,2.948,1251,3.063,1256,3.063,1258,2.513,1259,3.063,1261,4.347,1262,3.063,1264,3.063,1266,4.016,1267,4.172,1268,4.172,1269,4.016,1270,4.172,1271,4.016,1272,2.936,1273,4.731,1274,4.129,1275,5.094,1276,3.063,1277,3.063,1278,3.063,1279,3.063,1280,3.063,1281,3.063,1282,2.948,3768,4.851,3769,4.851,3770,4.851]],["title/entities/UserRoleEntity.html",[264,0.49,1067,2.479]],["body/entities/UserRoleEntity.html",[3,0.139,4,0.112,5,0.035,8,0.13,10,0.109,13,1.252,15,0.513,16,1.059,30,0.67,44,0.007,45,0.469,46,0.178,63,0.436,74,0.201,81,1.211,86,0.121,87,1.669,115,0.005,116,0.005,240,1.842,264,0.869,267,1.232,295,1.55,380,1.629,389,1.629,392,1.596,393,2.46,405,2.781,480,1.576,501,2.46,518,1.629,644,2.034,692,1.804,695,2.294,749,1.868,750,1.836,751,1.836,752,1.868,753,2.543,754,1.836,755,2.739,756,2.253,757,1.714,758,1.868,759,1.868,760,1.868,761,1.868,762,1.868,763,1.868,764,1.743,765,1.868,766,1.868,767,1.868,768,1.804,769,1.868,770,1.836,771,1.868,772,1.868,773,1.868,774,1.868,775,1.868,776,1.714,777,1.868,778,1.836,779,1.868,1067,4.031,1108,2.77,1272,3.458,1273,4.564,1304,4.512,1416,3.057,1424,4.602,1425,3.788,1426,4.276,1427,3.788,1440,4.149,1441,4.149,1445,3.425,1919,3.936,1922,3.535,1928,4.102,2152,4.291,2153,5.357,2154,5.357,2156,5.357,3735,5.633,3771,8.886,3772,6.233,3773,6.233,3774,6.233,3775,6.233,3776,6.233]],["title/classes/UserService.html",[10,0.083,22,2.479]],["body/classes/UserService.html",[3,0.102,4,0.083,5,0.021,8,0.096,9,2.708,10,0.158,13,1.278,15,0.265,22,3.296,23,1.278,30,0.653,34,4.315,35,1.452,43,1.209,44,0.007,45,0.463,46,0.176,47,1.01,50,1.04,52,1.278,58,1.264,63,0.559,71,3.021,74,0.187,86,0.174,88,1.47,98,2.008,115,0.004,116,0.004,118,1.377,121,1.961,144,1.62,172,2.828,174,1.411,203,1.408,240,1.865,264,0.807,276,2.896,288,2.524,291,3.322,296,1.307,327,1.032,358,4.496,383,1.645,384,1.867,392,1.197,404,1.622,405,2.583,419,1.562,482,2.533,501,2.011,660,1.452,661,1.33,662,1.217,671,1.835,675,1.33,680,2.431,684,1.377,685,1.874,687,1.001,688,1.263,860,1.618,872,2.09,907,3.587,950,3.868,977,2.382,994,3.894,996,1.562,997,2.449,1030,2.694,1065,2.393,1066,1.653,1149,3.322,1205,3.587,1250,2.792,1251,2.9,1256,2.9,1258,2.379,1259,2.9,1261,4.187,1262,2.9,1264,2.9,1266,3.868,1267,4.018,1268,4.018,1269,3.868,1270,4.018,1271,3.868,1272,2.828,1273,4.283,1274,3.497,1275,4.611,1276,2.9,1277,4.018,1278,4.018,1279,4.018,1280,4.018,1281,4.018,1282,2.792,1289,5.673,1290,5.673,1291,5.673,1292,5.673,3777,4.593,3778,4.593,3779,4.593,3780,4.593,3781,4.593]],["title/classes/UserSubscriber.html",[10,0.083,3782,4.267]],["body/classes/UserSubscriber.html",[3,0.141,4,0.115,5,0.029,8,0.132,9,1.779,10,0.111,13,1.582,15,0.367,16,1.072,17,5.204,18,2.611,23,1.582,24,2.963,30,0.706,43,1.15,44,0.007,45,0.416,46,0.179,47,0.961,50,0.968,65,4.789,71,1.906,74,0.212,86,0.123,93,2.987,103,1.505,115,0.005,116,0.005,118,1.906,170,2.95,182,1.906,183,1.386,261,6.46,264,0.807,268,7.338,275,7.024,276,3.585,282,7.977,283,7.977,286,6.04,287,6.46,288,4.329,291,3.585,294,5.669,295,1.581,297,6.168,432,3.345,471,3.273,841,3.04,2872,7.632,2873,7.024,3782,7.024,3783,6.359,3784,8.561,3785,7.879,3786,7.879,3787,8.949,3788,6.359,3789,7.879,3790,6.359,3791,7.879,3792,6.359,3793,6.359,3794,6.359,3795,7.879,3796,7.879,3797,6.359]],["title/interfaces/UserUpdateRequest.html",[327,0.552,1276,3.022]],["body/interfaces/UserUpdateRequest.html",[3,0.11,4,0.089,5,0.022,8,0.103,9,2.503,10,0.158,13,1.342,15,0.285,16,0.909,22,2.554,34,4.409,35,2.112,44,0.007,45,0.352,46,0.17,50,0.96,52,1.342,58,1.312,63,0.557,71,3.028,74,0.192,86,0.177,88,1.498,98,2.084,115,0.004,116,0.004,121,2.004,144,1.598,172,2.969,174,1.453,203,1.42,240,1.922,264,0.832,276,3.04,288,3.671,291,3.04,296,1.403,327,1.063,329,1.452,358,4.534,383,1.707,384,2.005,392,1.256,404,1.741,405,2.662,419,1.677,501,2.112,660,1.559,661,1.428,662,1.277,671,1.891,675,1.428,680,2.552,684,1.478,685,1.968,687,1.075,688,1.356,860,1.48,872,2.244,907,3.695,950,4.061,977,2.501,994,3.94,996,1.677,997,2.629,1030,2.892,1065,2.483,1066,1.775,1149,3.448,1205,3.695,1250,2.997,1251,3.114,1256,3.114,1258,2.554,1259,3.114,1261,4.396,1262,3.114,1264,3.114,1266,4.061,1267,4.219,1268,4.219,1269,4.061,1270,4.219,1271,4.061,1272,2.969,1273,4.444,1274,3.671,1275,4.784,1276,4.219,1277,3.114,1278,3.114,1279,3.114,1280,3.114,1281,3.114,1282,2.997]],["title/interfaces/VideoFileMetadata.html",[327,0.552,446,2.807]],["body/interfaces/VideoFileMetadata.html",[3,0.048,4,0.039,5,0.044,8,0.074,10,0.11,15,0.206,16,0.723,25,1.235,33,1.875,38,0.859,40,1.312,41,0.614,44,0.007,45,0.354,46,0.173,50,0.6,52,0.433,53,3.023,58,0.618,63,0.56,69,2.367,74,0.126,81,0.419,86,0.146,87,0.463,88,1.061,115,0.002,116,0.002,121,1.892,122,1.551,123,1.186,134,1.087,144,1.175,147,1.032,152,3.688,167,1.551,170,0.808,174,1.632,175,2.159,183,0.996,203,1.28,240,1.588,264,0.468,267,0.426,279,1.963,292,2.672,296,0.614,314,1.569,327,0.995,328,2.095,329,0.636,330,1.312,331,4.818,332,2.488,333,2.171,334,2.171,335,4.118,336,4.271,337,1.312,338,3.092,339,3.982,340,2.171,341,2.171,342,1.312,343,1.312,344,2.095,345,2.171,346,2.171,347,3.716,348,1.363,349,1.363,350,1.363,351,2.885,352,3.228,353,3.596,354,3.719,355,3.463,356,2.095,357,1.363,358,3.852,359,0.824,360,1.312,361,1.363,362,2.885,363,2.511,364,3.713,365,3.374,366,3.092,367,1.266,368,1.363,369,1.363,370,1.363,371,1.363,372,1.363,373,0.72,374,0.959,375,1.363,376,1.363,377,2.885,378,2.031,379,1.363,380,1.195,381,1.363,382,1.363,383,1.196,384,0.877,385,1.85,386,1.85,387,1.186,388,1.773,389,0.934,390,0.937,391,1.711,392,0.406,393,1.679,394,1.551,395,1.312,396,3.716,397,2.203,398,1.84,399,0.959,400,1.392,401,2.095,402,1.006,403,1.94,404,2.571,405,0.707,406,2.171,407,1.363,408,1.625,409,0.877,410,0.896,411,1.363,412,1.363,413,1.312,414,4.686,415,1.363,416,5.367,417,1.363,418,1.392,419,1.214,420,2.095,421,3.596,422,2.255,423,0.841,424,2.777,425,2.777,426,1.363,427,2.095,428,3.382,429,2.68,430,2.885,431,3.575,432,0.916,433,4.004,434,1.625,435,2.095,436,3.719,437,1.363,438,1.312,439,1.312,440,1.363,441,4.738,442,2.885,443,2.255,444,3.786,445,1.032,446,2.68,447,2.255,448,2.171,449,1.363,450,1.363,451,1.312,452,3.129,453,3.42,454,3.129,455,2.255,456,1.312,457,2.171,458,1.363,459,3.484,460,2.171,461,2.171,462,1.312,463,1.363,464,1.363,465,1.312,466,3.577,467,1.312,468,1.551,469,1.363,470,1.312,471,0.896,472,1.363,473,1.15,474,2.818,475,1.363,476,1.363,477,1.363,478,2.832,479,1.312,480,1.488,481,2.255,482,1.422,483,1.312,484,2.13,485,2.777,486,1.312,487,1.312,488,1.312,489,1.266,490,3.716,491,1.363,492,1.312,493,1.312,494,1.312,495,1.363,496,1.363,497,1.363,498,1.312,499,1.266,500,1.363,501,1.444,502,1.312,503,1.312,504,2.885,505,1.312,506,1.312,507,2.777,508,2.255,509,4.004,510,2.026,511,2.255,512,1.312,513,1.312,514,1.363,515,1.312,516,1.363,517,1.312,518,0.564,519,1.312,520,1.363,521,1.312,522,1.312,523,1.266,524,3.354,525,1.363,526,1.963,527,2.255,528,1.363,529,2.255,530,1.363,531,1.363,532,1.363,533,1.15,534,1.363,535,1.363,536,1.363,537,1.363,538,2.255,539,1.363,540,2.255,541,1.363,542,2.171,543,2.255,544,1.312,545,1.363,546,1.363,547,2.885,548,1.363,549,3.354,550,2.885,551,2.885,552,2.885,553,1.363,554,4.433,555,1.363,556,3.115,557,4.238,558,1.363,559,1.363,560,1.363,561,2.255,562,2.255,563,1.363,564,1.363,565,1.363,566,1.363,567,1.363,568,1.363,569,1.363,570,1.363,571,2.255,572,1.363,573,1.363,574,0.916,575,1.363,576,2.255,577,2.171,578,1.363,579,1.363,580,1.363,581,1.363,582,1.118,583,2.255,584,4.004,585,1.363,586,1.363,587,2.885,588,1.363,589,1.363,590,1.363,591,3.577,592,1.363,593,1.363,594,1.363,595,1.363,596,2.885,597,2.255,598,1.363,599,1.363,600,2.255,601,1.363,602,2.255,603,1.363,604,1.032,605,1.363,606,3.716,607,1.363,608,1.363,609,1.363,610,1.087,611,1.363,612,1.058,613,4.238,614,3.228,615,1.363,616,1.363,617,2.255,618,2.255,619,2.255,620,2.885,621,1.363,622,1.363,623,1.363,624,1.363,625,1.312,626,1.006,627,1.312,628,1.363,629,1.363,630,1.363,631,2.171,632,1.312,633,1.363,634,1.363,635,0.959,636,2.885,637,2.171,638,2.255,639,2.255,640,2.255,641,2.255,642,2.255,643,3.354,644,0.934,645,2.171,646,3.228,647,2.255,648,3.228,649,3.228,650,1.587,651,2.255,652,2.255,653,2.255,654,2.255,655,3.228,656,2.255,657,2.255,658,2.255,659,3.228,660,0.682,661,0.625,662,0.683,663,1.266,664,0.916,665,0.777,666,1.363,667,1.363,668,0.937,669,1.963,670,0.777,671,1.236,672,0.777,673,1.312,674,0.896,675,1.034,676,0.937,677,0.824,678,0.841,679,0.916,680,1.745,681,0.937,682,1.312,683,1.312,684,0.647,685,1.052,686,1.312,687,0.47,688,0.593,689,1.118,690,1.266]],["title/entities/VideoFileMetadataEntity.html",[264,0.49,2197,3.669]],["body/entities/VideoFileMetadataEntity.html",[3,0.114,4,0.092,5,0.044,8,0.107,10,0.089,13,1.027,15,0.557,16,0.932,30,0.757,44,0.007,45,0.496,46,0.186,61,3.599,63,0.546,74,0.162,86,0.099,87,2.136,115,0.004,116,0.004,182,2.651,203,1.127,218,3.138,264,0.791,295,1.272,314,1.52,326,4.714,332,2.126,335,4.527,336,4.527,338,3.277,339,4.378,393,2.164,444,2.784,446,4.016,452,3.138,454,3.138,591,4.692,646,4.692,648,4.692,649,4.692,655,4.692,659,4.692,692,1.481,694,3.521,695,2.595,696,5.044,697,3.953,698,4.194,699,4.56,700,4.874,701,3.921,702,3.921,705,3.921,706,4.194,707,5.615,708,5.615,709,5.615,710,4.56,712,2.649,713,3.703,716,3.921,718,3.703,719,4.56,721,4.56,722,1.646,723,3.45,724,2.811,726,2.649,727,4.079,728,4.378,729,4.194,2197,5.249,3798,9.648,3799,6.847,3800,6.847,3801,6.847,3802,5.115,3803,6.847,3804,6.847,3805,5.115,3806,5.115]],["title/modules/WarlockModule.html",[850,1.114,3481,3.465]],["body/modules/WarlockModule.html",[3,0.127,4,0.103,5,0.033,8,0.119,10,0.099,21,3.698,24,1.802,44,0.007,63,0.32,74,0.227,76,1.145,81,1.108,86,0.111,89,1.771,93,1.903,103,1.926,115,0.005,116,0.005,144,0.955,267,1.127,276,2.595,277,4.47,312,3.752,380,1.491,480,1.442,518,1.491,612,3.608,644,1.923,661,2.129,749,1.709,750,1.68,751,1.68,752,1.709,753,2.44,754,1.68,755,2.685,756,2.129,757,1.568,758,1.709,759,1.709,760,1.709,761,1.709,762,1.709,763,1.709,764,1.595,765,1.709,766,1.709,767,1.709,768,1.651,769,1.709,770,1.68,771,1.709,772,1.709,773,1.709,774,1.709,775,1.709,776,1.568,777,1.709,778,1.68,779,1.709,846,3.194,850,2.072,852,2.476,870,3.429,880,3.891,884,4.84,892,3.429,893,2.873,896,3.429,982,3.601,985,2.954,1033,3.134,1286,3.921,1319,3.235,1320,3.601,1321,3.601,1322,3.601,1326,5.858,1327,3.601,1330,5.221,1332,4.128,1333,3.601,1334,4.128,1335,4.128,1339,4.676,1340,3.926,1341,3.752,1342,3.926,1343,4.676,1344,4.128,1345,4.676,1346,4.128,1347,4.676,1348,4.676,1349,4.676,1825,4.47,2569,4.84,3163,5.084,3189,4.128,3191,5.324,3192,5.084,3397,5.638,3433,6.275,3481,6.599,3807,5.702,3808,5.702,3809,5.702,3810,6.556,3811,6.556,3812,4.128,3813,5.702,3814,5.702,3815,7.355,3816,5.702,3817,5.702,3818,5.702,3819,5.702,3820,5.702,3821,7.355,3822,5.702,3823,5.702,3824,8.141]],["title/classes/XdbExportService.html",[10,0.083,3825,3.295]],["body/classes/XdbExportService.html",[3,0.098,4,0.08,5,0.028,8,0.092,9,2.553,10,0.142,15,0.255,23,1.243,24,1.957,30,0.348,33,1.559,43,0.645,44,0.007,45,0.233,46,0.086,47,0.539,50,0.982,51,1.589,52,1.243,53,1.447,58,1.341,61,3.333,63,0.248,74,0.193,86,0.179,87,1.662,88,1.366,89,3.021,98,1.702,103,2.16,115,0.004,116,0.004,118,1.323,121,1.011,125,4.193,144,1.416,149,2.354,151,3.385,174,1.612,183,0.963,295,1.098,312,4.074,354,2.59,391,1.653,408,2.817,670,2.789,671,1.028,684,1.323,685,1.301,780,3.526,829,3.801,908,1.721,942,2.111,1048,2.886,1050,2.111,1064,3.812,1080,3.207,1106,3.812,1133,4.376,1154,3.301,1162,4.131,1164,3.055,1165,3.177,1217,2.287,1229,3.526,1459,5.48,1491,4.262,1500,3.631,1583,3.385,1608,4.746,1610,4.746,1825,4.959,1850,5.335,2221,5.076,2542,2.906,2569,4.704,3234,3.196,3235,3.196,3629,3.385,3812,3.196,3825,4.262,3826,3.909,3827,3.909,3828,3.621,3829,5.659,3830,6.191,3831,5.519,3832,5.61,3833,4.415,3834,4.746,3835,6.484,3836,3.385,3837,6.288,3838,4.746,3839,3.385,3840,5.076,3841,7.073,3842,3.936,3843,3.04,3844,3.936,3845,3.936,3846,3.385,3847,3.621,3848,3.936,3849,5.076,3850,3.621,3851,3.621,3852,3.621,3853,3.621,3854,3.936,3855,3.936,3856,3.936,3857,3.936,3858,3.936,3859,3.936,3860,3.936,3861,5.519,3862,3.936,3863,3.936,3864,3.936,3865,3.936,3866,5.862,3867,5.076,3868,3.936,3869,3.936,3870,3.936,3871,5.519,3872,5.519,3873,3.936,3874,3.936,3875,3.936,3876,3.936,3877,3.936,3878,3.936,3879,3.936,3880,3.936,3881,3.936,3882,3.936,3883,3.936,3884,3.936,3885,3.936,3886,3.936,3887,3.936,3888,3.936,3889,3.936,3890,3.936,3891,3.936,3892,3.621,3893,5.519,3894,5.519,3895,6.908,3896,3.936,3897,7.274,3898,3.936,3899,5.519,3900,3.936,3901,3.936,3902,3.936,3903,3.936,3904,3.936,3905,3.936,3906,3.936,3907,3.936]],["title/classes/XdbImportService.html",[10,0.083,3843,3.295]],["body/classes/XdbImportService.html",[3,0.096,4,0.078,5,0.028,8,0.09,9,2.596,10,0.141,15,0.25,23,1.228,24,1.932,30,0.482,33,1.531,43,0.893,44,0.007,45,0.323,46,0.119,47,0.746,50,0.998,51,1.561,52,1.228,53,1.421,58,1.331,61,3.301,63,0.243,74,0.199,86,0.177,87,1.649,88,1.357,89,3.016,98,1.681,103,2.152,115,0.004,116,0.004,118,1.3,121,0.993,125,4.153,144,1.447,149,2.312,151,3.324,174,1.645,183,0.945,295,1.078,312,4.023,354,2.544,391,1.624,408,2.782,670,2.767,671,1.01,684,1.3,685,1.277,780,3.498,829,3.771,908,1.691,942,2.073,1048,2.85,1064,3.775,1080,3.166,1106,3.775,1133,4.354,1154,3.259,1162,4.099,1164,3.034,1165,3.146,1217,2.246,1229,3.827,1459,5.427,1491,4.209,1500,3.586,1583,3.324,1608,4.686,1610,4.686,1825,4.926,1850,5.293,2221,5.013,2542,2.854,2569,4.659,3234,3.14,3235,3.14,3629,3.324,3812,3.14,3825,2.986,3826,4.471,3827,4.471,3828,3.556,3829,5.687,3831,3.866,3832,4.426,3834,4.686,3835,6.447,3836,3.324,3837,6.495,3838,4.686,3839,3.324,3840,5.013,3841,7.048,3842,3.866,3843,4.209,3844,5.45,3845,5.45,3846,3.324,3847,3.556,3848,3.866,3849,5.013,3850,3.556,3851,3.556,3852,3.556,3853,3.556,3854,3.866,3855,3.866,3856,3.866,3857,3.866,3858,3.866,3859,3.866,3860,3.866,3861,5.45,3862,3.866,3863,3.866,3864,3.866,3865,3.866,3866,5.805,3867,5.013,3868,3.866,3869,3.866,3870,3.866,3871,5.45,3872,5.45,3873,3.866,3874,3.866,3875,3.866,3876,3.866,3877,3.866,3878,3.866,3879,3.866,3880,3.866,3881,3.866,3882,3.866,3883,3.866,3884,3.866,3885,3.866,3886,3.866,3887,3.866,3888,3.866,3889,3.866,3890,3.866,3891,3.866,3892,3.556,3893,5.45,3894,5.45,3895,6.853,3896,3.866,3897,7.225,3898,3.866,3899,5.45,3900,3.866,3901,3.866,3902,3.866,3903,3.866,3904,3.866,3905,3.866,3906,3.866,3907,3.866,3908,6.113,3909,6.113,3910,4.337,3911,4.337,3912,4.337]],["title/interfaces/XdbRequest.html",[327,0.552,3913,4.267]],["body/interfaces/XdbRequest.html",[3,0.117,4,0.095,5,0.04,8,0.109,10,0.136,15,0.303,16,0.949,35,2.204,43,0.767,44,0.007,45,0.368,46,0.194,52,1.4,58,0.91,63,0.56,71,2.345,74,0.211,86,0.187,115,0.004,116,0.004,121,2.179,144,0.88,174,1.753,183,1.52,203,1.266,264,0.538,295,1.307,296,1.495,314,0.851,327,0.902,329,1.548,332,1.632,383,1.571,392,1.311,394,2.282,397,1.968,408,2.391,434,2.391,556,3.082,687,1.146,688,1.445,862,4.089,880,2.512,942,3.333,998,2.512,1048,4.155,1064,3.717,1106,3.717,1133,2.648,1154,4.443,1164,2.929,1301,3.458,1526,3.618,1558,4.029,1586,4.309,1850,3.618,1882,4.309,3285,4.685,3825,3.618,3826,3.318,3827,3.318,3829,5.823,3832,3.804,3834,5.345,3835,4.029,3836,4.029,3837,3.804,3838,4.029,3843,3.618,3866,4.309,3867,5.717,3913,6.215,3914,4.685,3915,6.888,3916,5.255,3917,5.255,3918,6.972,3919,5.255,3920,5.255,3921,4.029,3922,6.975,3923,5.255,3924,5.255,3925,4.685,3926,4.685,3927,5.255,3928,3.804,3929,4.309,3930,4.685,3931,4.685,3932,5.255,3933,5.255,3934,4.685]],["title/controllers/XmlDataBridgeController.html",[662,0.915,3935,3.925]],["body/controllers/XmlDataBridgeController.html",[3,0.123,4,0.099,5,0.04,10,0.096,15,0.319,18,2.197,23,1.446,24,2.983,25,1.947,30,0.632,43,1.17,44,0.007,45,0.423,46,0.156,47,0.978,50,0.906,51,2.885,71,2.797,74,0.228,76,1.109,81,1.4,86,0.156,93,2.675,98,1.518,103,1.897,115,0.005,116,0.005,137,1.949,174,1.704,218,2.244,267,1.091,380,1.443,480,1.396,518,1.443,644,1.883,662,1.055,674,3.329,695,2.167,731,2.453,733,2.397,749,1.655,750,1.626,751,1.626,752,1.655,753,2.402,754,1.626,755,2.664,756,2.085,757,1.518,758,1.655,759,1.655,760,1.655,761,1.655,762,1.655,763,1.655,764,1.544,765,1.655,766,1.655,767,1.655,768,1.598,769,1.655,770,1.626,771,1.655,772,1.655,773,1.655,774,1.655,775,1.655,776,1.518,777,1.655,778,1.626,779,1.655,780,4.009,781,3.486,782,3.486,838,3.355,998,2.639,1129,3.628,1272,2.453,1527,3.633,1530,3.801,1531,3.996,1532,3.801,1533,3.801,1536,3.633,1537,3.996,2002,4.527,2003,4.527,2106,4.527,2107,4.527,2108,4.527,2109,4.527,2110,3.996,2111,4.527,2112,4.527,2116,4.527,2117,4.527,2118,4.527,3825,5.518,3826,5.364,3827,5.364,3829,4.377,3832,6.15,3837,6.15,3839,4.232,3843,5.518,3846,4.232,3921,4.232,3935,5.905,3936,5.52,3937,8.015,3938,5.52,3939,5.52,3940,5.52,3941,5.52,3942,5.52,3943,5.52,3944,5.52,3945,5.52,3946,5.52,3947,5.52,3948,5.52,3949,7.201,3950,7.201,3951,5.52,3952,5.52,3953,5.52,3954,5.52,3955,5.52,3956,5.52,3957,7.201,3958,5.52]],["title/injectables/XmlDataBridgeMiddleware.html",[837,1.569,3959,3.925]],["body/injectables/XmlDataBridgeMiddleware.html",[3,0.126,4,0.102,5,0.026,8,0.169,10,0.099,13,1.138,15,0.327,16,0.997,18,2.476,23,1.471,24,2.565,25,2.46,30,0.64,35,3.121,43,1.069,44,0.007,45,0.386,46,0.158,47,0.893,50,0.918,57,6.577,58,1.603,74,0.192,76,1.138,81,1.101,86,0.11,88,1.436,93,1.891,98,1.558,103,1.341,115,0.005,116,0.005,144,1.436,174,1.767,182,1.698,183,1.235,388,3.037,671,1.705,677,3.277,757,2.014,780,3.333,829,2.779,837,2.4,839,2.642,963,5.042,1608,6.577,1610,5.615,1825,4.452,1888,7.098,2569,4.82,3234,4.102,3235,4.102,3239,5.051,3623,6.529,3629,4.344,3826,5.418,3827,5.418,3829,5.764,3841,6.222,3846,4.344,3849,6.006,3921,4.344,3959,6.006,3960,5.666,3961,7.324,3962,7.324,3963,7.324,3964,7.324,3965,5.666,3966,7.324,3967,8.58,3968,5.666,3969,7.324,3970,7.324,3971,7.324,3972,5.666,3973,7.324,3974,5.666,3975,5.666,3976,7.324,3977,5.666,3978,5.666,3979,5.666,3980,5.666,3981,5.666]],["title/modules/XmlDataBridgeModule.html",[850,1.114,3928,3.465]],["body/modules/XmlDataBridgeModule.html",[3,0.116,4,0.094,5,0.031,8,0.108,10,0.091,13,1.045,23,1.045,30,0.614,43,1.137,44,0.007,45,0.411,46,0.151,47,0.95,50,0.88,74,0.23,76,1.045,81,1.012,86,0.151,103,1.639,115,0.004,116,0.004,174,1.731,182,1.56,183,1.135,267,1.028,373,2.312,380,1.361,480,1.316,518,1.361,533,3.693,644,1.811,687,1.51,689,2.696,731,2.313,749,1.56,750,1.533,751,1.533,752,1.56,753,2.334,754,1.533,755,2.626,756,2.005,757,1.431,758,1.56,759,1.56,760,1.56,761,1.56,762,1.56,763,1.56,764,1.456,765,1.56,766,1.56,767,1.56,768,1.507,769,1.56,770,1.533,771,1.56,772,1.56,773,1.56,774,1.56,775,1.56,776,1.431,777,1.56,778,1.533,779,1.56,850,2.069,852,2.26,855,4.182,856,4.374,857,3.425,862,5.405,868,4.426,869,3.163,870,3.87,871,3.163,872,2.368,873,3.425,880,3.968,882,4.558,892,3.229,893,4.182,894,4.869,896,3.229,1248,2.488,1500,3.053,1551,4.639,2023,3.989,3097,4.639,3099,6.941,3825,5.951,3826,5.241,3827,5.241,3829,5.601,3839,3.989,3843,5.951,3915,5.015,3921,3.989,3928,6.009,3929,6.806,3930,6.175,3931,6.175,3935,5.68,3959,4.267,3982,5.204,3983,5.204,3984,6.927,3985,8.301,3986,5.204,3987,5.204,3988,6.927,3989,5.204,3990,6.927,3991,5.204,3992,8.301,3993,8.301,3994,7.786,3995,7.786,3996,6.927,3997,5.204,3998,5.204,3999,5.204,4000,5.204,4001,5.204,4002,5.204,4003,5.204,4004,5.204,4005,5.204,4006,5.204]],["title/dependencies.html",[1319,3.267,4007,3.557]],["body/dependencies.html",[5,0.031,10,0.143,44,0.007,46,0.132,58,1.175,76,1.363,115,0.005,116,0.005,247,5.167,278,6.049,279,3.729,295,1.687,326,6.45,332,2.545,367,3.98,855,3.418,864,6.049,866,6.049,993,3.98,996,2.307,1197,3.618,1319,3.849,1330,3.98,1893,4.912,2225,6.049,2226,7.308,2672,6.049,2715,6.049,2718,6.049,2731,7.854,2970,7.308,2974,6.753,3189,4.912,3226,5.201,3433,4.671,3494,5.564,3654,6.049,3812,4.912,3840,5.564,4008,6.785,4009,6.785,4010,6.785,4011,8.198,4012,6.785,4013,6.722,4014,6.785,4015,6.785,4016,6.785,4017,6.785,4018,6.785,4019,6.785,4020,6.049,4021,8.81,4022,6.785,4023,7.224,4024,6.785,4025,6.785,4026,6.785,4027,6.785,4028,6.785,4029,6.785,4030,6.785]],["title/miscellaneous/enumerations.html",[4031,2.747,4032,5.135]],["body/miscellaneous/enumerations.html",[15,0.405,44,0.006,115,0.005,116,0.005,122,3.881,128,6.859,134,3.535,135,5.079,147,3.998,149,4.46,178,5.881,183,2.183,197,7.457,223,7.457,1665,6.412,1916,6.153,2916,7.457,2920,7.457,2921,7.457,3294,5.753,3306,6.859,3310,6.412,3419,6.255,3422,7.457,3437,6.412,3511,6.255,3519,6.255,4031,4.83,4032,6.255,4033,7.967,4034,7.016,4035,6.255,4036,8.364,4037,7.016,4038,7.016,4039,7.016,4040,7.016,4041,7.016,4042,7.016]],["title/index.html",[15,0.23,3411,3.059,4043,3.557]],["body/index.html",[4,0.09,5,0.04,12,2.74,16,1.159,25,1.348,37,4.445,38,3.033,41,1.419,44,0.004,46,0.097,68,2.925,71,1.495,74,0.118,115,0.004,116,0.004,122,2.165,124,2.74,134,3.391,167,2.165,172,2.216,174,1.525,182,2.018,205,6.793,264,0.511,267,0.985,276,2.269,277,3.031,295,1.674,331,2.74,332,2.366,358,2.325,359,2.911,360,3.031,373,2.93,383,1.516,393,1.576,395,4.091,397,1.867,414,2.828,419,2.897,421,2.828,423,2.624,432,2.858,436,2.925,439,3.031,444,2.027,459,2.74,471,2.071,482,2.679,489,3.948,499,4.469,501,2.409,502,3.031,510,2.828,523,2.925,544,3.031,604,2.384,627,4.091,631,3.031,661,1.443,664,2.858,687,1.087,756,1.443,757,1.851,768,1.443,814,3.9,850,1.774,852,2.923,854,5.519,860,1.105,893,2.512,898,5.16,931,3.281,936,3.822,937,3.281,938,3.822,977,2.52,1001,2.583,1002,3.281,1003,5.014,1033,2.74,1070,2.325,1074,2.828,1075,3.589,1110,3.589,1131,2.828,1132,3.642,1133,2.512,1134,2.74,1135,2.925,1136,2.828,1139,2.74,1153,2.925,1190,2.583,1214,3.36,1224,2.658,1225,2.446,1274,2.74,1286,4.063,1288,3.433,1319,2.828,1330,3.948,1346,4.873,1352,4.089,1391,3.822,1461,4.089,1491,3.433,1544,3.031,1556,6.168,1559,4.445,1577,4.429,1603,6.248,1614,3.031,1621,4.089,1807,4.089,1808,4.089,1818,4.089,1850,4.634,1888,3.822,1906,3.822,2203,4.445,2542,3.281,2660,4.089,2661,4.089,2663,3.822,2686,4.089,2823,3.61,2866,3.822,2914,4.445,2967,4.089,3437,3.822,3453,3.822,3455,4.089,3485,4.445,3491,4.445,3551,5.519,3602,4.445,3641,5.519,3647,6.248,3649,4.873,3686,3.822,3704,6.001,3717,6.001,3735,5.516,3829,4.632,3892,4.089,3915,3.61,4044,4.445,4045,4.445,4046,4.445,4047,6.001,4048,4.445,4049,4.986,4050,6.793,4051,4.986,4052,4.445,4053,4.986,4054,5.519,4055,4.986,4056,4.986,4057,6.001,4058,4.986,4059,4.986,4060,7.62,4061,4.986,4062,4.986,4063,4.986,4064,4.986,4065,4.986,4066,4.986,4067,4.986,4068,6.001,4069,4.986,4070,7.62,4071,6.001,4072,4.986,4073,4.986,4074,4.986,4075,4.986,4076,4.986,4077,6.001,4078,4.986,4079,4.986,4080,4.986,4081,4.445,4082,6.731,4083,8.159,4084,4.445,4085,4.986,4086,6.001,4087,6.731,4088,4.986,4089,6.731,4090,4.986,4091,4.089,4092,4.986,4093,4.445,4094,4.986,4095,4.445,4096,4.445,4097,4.445,4098,4.986,4099,4.986,4100,4.986,4101,4.986,4102,4.986,4103,7.62,4104,4.986,4105,4.089,4106,4.986,4107,4.986,4108,4.986,4109,4.986,4110,4.445,4111,4.445,4112,4.986,4113,6.731,4114,4.445,4115,4.986,4116,4.986,4117,6.731,4118,6.731,4119,4.986,4120,4.986,4121,4.986,4122,4.986,4123,4.445,4124,4.986,4125,4.445,4126,7.62,4127,4.986,4128,4.986,4129,4.986,4130,4.986,4131,4.986,4132,4.986,4133,4.986,4134,4.986,4135,6.001,4136,6.731,4137,4.986,4138,4.986,4139,4.986,4140,4.445,4141,4.986,4142,4.986,4143,4.986,4144,6.731,4145,8.52,4146,7.62,4147,4.986,4148,5.16,4149,4.986,4150,4.986,4151,4.986,4152,4.986,4153,4.445,4154,4.986,4155,4.986,4156,4.986,4157,6.001,4158,6.001,4159,4.986,4160,4.445,4161,4.986,4162,4.986,4163,4.986,4164,4.986,4165,3.61,4166,4.986,4167,4.445]],["title/license.html",[755,1.155,3411,3.059,4043,3.557]],["body/license.html",[4,0.159,5,0.037,8,0.071,10,0.059,30,0.268,33,2.416,38,1.349,44,0.005,45,0.27,58,1.335,60,5.913,68,2.996,74,0.08,81,0.993,115,0.003,116,0.003,185,4.163,206,2.78,240,0.802,247,1.989,264,0.88,267,0.67,277,2.061,285,1.923,286,2.599,292,1.349,329,0.999,344,1.989,366,1.44,373,1.132,380,1.335,383,0.764,390,1.472,392,1.156,408,1.543,418,1.322,419,1.153,423,3.287,428,1.708,432,3.946,438,2.061,448,2.061,461,2.061,478,2.723,480,1.554,485,3.736,487,2.061,492,2.061,518,2.311,519,3.105,521,2.061,523,1.989,533,1.808,577,3.105,644,1.607,681,1.472,692,0.981,749,1.016,750,0.999,751,0.999,752,1.016,753,2.527,754,2.015,755,2.827,756,1.779,757,2.362,758,1.842,759,1.016,760,1.016,761,1.842,762,1.016,763,2.051,764,1.914,765,1.842,766,1.842,767,1.842,768,1.98,769,1.531,770,2.162,771,1.842,772,2.68,773,1.531,774,1.531,775,1.016,776,0.932,777,1.016,778,1.81,779,1.016,829,1.663,860,0.751,893,1.708,901,3.022,907,3.34,943,3.517,948,2.78,977,1.269,985,1.756,1001,3.544,1009,2.454,1054,1.708,1075,1.808,1152,1.989,1192,1.808,1211,1.808,1212,2.646,1214,2.301,1216,1.808,1286,2.723,1391,7.485,1545,6.099,1586,5.04,1589,1.923,1660,3.022,1671,3.022,1808,4.189,1817,2.78,1852,3.022,1895,3.022,1904,2.334,1905,2.599,2068,7.971,2075,2.78,2707,6.099,2744,3.022,3122,4.189,3136,4.189,3308,4.189,3551,2.78,3641,2.78,3649,4.953,3716,4.554,3755,3.022,4023,2.78,4077,3.022,4081,5.479,4086,3.022,4091,2.78,4111,3.022,4114,5.479,4125,3.022,4167,4.554,4168,3.39,4169,3.39,4170,3.39,4171,8.43,4172,6.841,4173,7.339,4174,3.39,4175,9.107,4176,8.59,4177,3.39,4178,3.39,4179,8.59,4180,7.339,4181,4.554,4182,3.39,4183,7.339,4184,3.39,4185,3.39,4186,3.39,4187,2.78,4188,6.841,4189,5.108,4190,3.39,4191,6.146,4192,5.108,4193,5.108,4194,3.39,4195,3.39,4196,3.39,4197,3.39,4198,3.39,4199,3.39,4200,3.39,4201,3.39,4202,6.146,4203,3.39,4204,5.108,4205,3.39,4206,3.39,4207,7.714,4208,6.841,4209,3.39,4210,3.39,4211,3.39,4212,3.39,4213,6.146,4214,3.39,4215,8.43,4216,5.108,4217,5.108,4218,3.39,4219,9.294,4220,9.344,4221,3.39,4222,3.39,4223,3.39,4224,3.39,4225,5.108,4226,3.39,4227,3.39,4228,3.39,4229,3.39,4230,6.841,4231,7.339,4232,3.39,4233,5.108,4234,6.841,4235,5.108,4236,3.39,4237,7.339,4238,5.108,4239,3.39,4240,3.39,4241,3.39,4242,3.39,4243,3.39,4244,3.39,4245,3.39,4246,3.39,4247,6.146,4248,3.39,4249,3.39,4250,3.39,4251,8.59,4252,3.39,4253,3.39,4254,5.108,4255,7.345,4256,6.146,4257,5.108,4258,5.108,4259,5.108,4260,5.108,4261,6.146,4262,5.108,4263,6.146,4264,5.108,4265,5.108,4266,5.108,4267,5.108,4268,3.39,4269,5.108,4270,3.39,4271,3.39,4272,7.339,4273,8.005,4274,5.108,4275,5.108,4276,5.108,4277,6.146,4278,5.108,4279,3.39,4280,3.39,4281,3.39,4282,6.146,4283,3.39,4284,3.39,4285,3.39,4286,5.108,4287,3.39,4288,3.39,4289,3.39,4290,3.39,4291,3.39,4292,3.39,4293,3.39,4294,5.108,4295,3.39,4296,3.39,4297,3.39,4298,3.39,4299,3.39,4300,3.39,4301,6.146,4302,3.39,4303,3.39,4304,3.39,4305,3.39,4306,8.239,4307,3.39,4308,3.39,4309,3.39,4310,6.841,4311,5.108,4312,6.841,4313,3.39,4314,3.39,4315,3.39,4316,3.39,4317,3.39,4318,5.108,4319,5.108,4320,3.39,4321,3.39,4322,3.39,4323,5.108,4324,5.108,4325,3.39,4326,3.39,4327,3.39,4328,3.39,4329,3.39,4330,3.39,4331,3.39,4332,6.146,4333,3.39,4334,3.39,4335,3.39,4336,3.39,4337,3.39,4338,3.39,4339,3.39,4340,3.39,4341,3.39,4342,5.108,4343,3.39,4344,3.39,4345,3.39,4346,3.39,4347,3.39,4348,3.39,4349,3.39,4350,3.39,4351,3.39,4352,6.841,4353,5.108,4354,3.39,4355,3.39,4356,3.39,4357,3.39,4358,3.39,4359,3.39,4360,5.108,4361,3.39,4362,3.39,4363,3.39,4364,7.339,4365,3.39,4366,3.39,4367,3.39,4368,3.39,4369,3.39,4370,3.39,4371,3.39,4372,3.39,4373,7.339,4374,3.39,4375,3.39,4376,3.39,4377,3.39,4378,3.39,4379,3.39,4380,3.39,4381,3.39,4382,3.39,4383,3.39,4384,3.39,4385,3.39,4386,3.39,4387,3.39,4388,3.39,4389,6.146,4390,3.39,4391,3.39,4392,3.39,4393,3.39,4394,5.108,4395,3.39,4396,3.39,4397,3.39,4398,3.39,4399,3.39,4400,3.39,4401,3.39,4402,3.39,4403,3.39,4404,3.39,4405,3.39,4406,3.39,4407,3.39,4408,3.39,4409,3.39,4410,5.108,4411,5.108,4412,3.39,4413,3.39,4414,3.39,4415,3.39,4416,3.39,4417,3.39,4418,3.39,4419,3.39,4420,3.39,4421,3.39]],["title/modules.html",[852,2.843]],["body/modules.html",[44,0.005,115,0.005,116,0.005,689,3.677,851,5.822,852,3.083,868,3.785,870,3.31,872,3.231,877,5.443,1248,3.394,1326,4.672,1452,5.443,1549,5.443,1904,6.816,2023,5.443,2817,5.443,3157,5.14,3259,5.443,3476,5.443,3481,5.14,3928,5.14,4091,7.968,4422,9.901,4423,10.082,4424,9.718,4425,8.663]],["title/overview.html",[4426,5.836]],["body/overview.html",[2,5.283,19,4.529,44,0.006,115,0.005,116,0.005,118,1.931,142,6.016,329,1.898,612,3.896,692,1.865,731,2.863,839,3.004,850,1.5,852,2.798,868,5.131,870,4.384,872,3.918,892,3.004,896,3.004,985,3.337,1319,3.654,1320,4.068,1321,4.068,1322,4.068,1323,5.743,1324,5.743,1325,5.743,1326,6.076,1327,4.068,1452,7.304,1453,5.743,1454,5.743,1455,5.743,1457,7.304,2817,7.078,2818,5.743,2819,5.743,2820,5.743,2821,7.304,3157,6.684,3158,5.743,3259,6.891,3260,5.743,3476,7.664,3477,5.743,3478,5.743,3479,5.743,3480,5.743,3481,6.684,3482,6.601,4020,5.743,4023,5.283,4426,5.743,4427,6.443,4428,6.443,4429,6.443,4430,6.443,4431,6.443]],["title/properties.html",[16,0.784,4007,3.557]],["body/properties.html",[8,0.148,12,3.917,16,0.97,38,2.837,41,2.028,44,0.006,74,0.169,86,0.138,115,0.005,116,0.005,174,1.276,295,1.773,373,2.818,383,1.606,419,3.059,480,1.802,499,4.953,750,2.1,751,2.1,754,2.1,755,2.064,756,2.444,814,3.407,898,5.464,1002,4.691,1003,4.691,1132,3.407,1214,2.669,1274,3.917,1288,4.907,1330,4.181,1556,5.16,1614,4.333,1880,5.845,3453,5.464,3504,6.354,3649,5.16,4044,8.02,4045,7.527,4046,7.527,4047,6.354,4048,6.354,4050,6.354,4052,6.354,4057,6.354,4068,6.354,4071,6.354,4093,6.354,4095,6.354,4110,6.354,4123,6.354,4157,6.354,4158,6.354,4432,7.128,4433,7.128,4434,7.128,4435,7.128,4436,7.128,4437,7.128,4438,7.128,4439,7.128]],["title/miscellaneous/typealiases.html",[4031,2.747,4440,5.76]],["body/miscellaneous/typealiases.html",[5,0.025,12,3.03,15,0.318,43,1.17,44,0.006,46,0.196,51,1.985,52,1.108,58,1.246,63,0.309,86,0.14,115,0.005,116,0.005,121,2.231,174,1.788,183,1.202,240,1.305,264,0.821,314,0.893,330,3.352,355,2.024,383,1.242,388,1.841,402,2.571,526,3.03,556,3.235,687,2.034,688,2.53,689,2.856,690,4.221,722,1.775,814,3.44,850,1.865,858,4.954,872,2.509,971,3.992,1017,4.227,1033,3.955,1034,4.736,1036,5.21,1038,3.235,1054,2.778,1070,3.959,1074,3.128,1075,2.94,1076,4.221,1106,2.94,1110,2.94,1111,3.235,1112,4.082,1117,3.235,1118,4.221,1119,4.082,1144,3.235,1154,4.527,1177,2.94,1248,2.636,1249,3.728,1251,3.482,1282,4.374,1396,6.829,1825,4.374,1882,4.522,3119,3.992,3120,3.992,3121,6.415,3128,5.901,3136,5.901,3137,3.797,3397,5.517,3433,3.797,3810,4.916,3811,4.916,3826,3.482,3827,3.482,3829,5.734,3832,5.21,3834,5.517,3835,5.517,3836,5.517,3837,5.21,3838,5.517,3914,8.549,3915,6.83,3922,6.415,3925,6.415,3926,6.415,3928,3.992,3929,5.901,3934,4.916,4031,3.797,4441,5.515,4442,5.515,4443,7.197,4444,8.491,4445,5.515,4446,8.486,4447,5.515,4448,4.916,4449,5.515,4450,7.197,4451,4.916,4452,5.515,4453,4.916,4454,5.515]],["title/miscellaneous/variables.html",[1584,4.723,4031,2.747]],["body/miscellaneous/variables.html",[4,0.052,5,0.036,8,0.095,15,0.168,16,1.097,21,2.623,24,0.92,29,3.483,34,2.289,35,2.397,36,4.05,38,1.158,41,2.232,42,5.018,44,0.007,45,0.435,46,0.189,48,2.107,51,2.273,58,1.257,63,0.538,69,2.353,71,1.675,77,3.725,78,3.725,79,3.725,84,3.483,89,2.354,93,2.108,98,0.8,103,1.857,115,0.003,116,0.003,121,1.04,125,1.707,149,2.422,174,1.527,181,2.606,182,2.966,183,2.159,212,1.769,218,1.183,219,1.838,220,2.107,264,0.572,287,2.386,291,2.874,292,1.808,312,2.99,314,0.471,332,0.904,355,3.277,356,1.707,373,2.286,383,1.708,391,1.701,392,0.547,400,2.67,408,2.067,409,1.183,410,1.209,432,1.236,480,0.736,604,2.671,660,0.92,692,1.828,722,0.937,731,1.293,733,3.153,768,0.842,780,2.067,784,1.915,797,4.788,814,2.172,842,2.386,850,0.677,860,0.645,897,2.594,908,2.179,909,3.848,913,2.003,920,2.869,921,3.483,922,3.725,923,2.594,924,4.05,925,2.594,926,4.05,927,3.128,928,2.594,929,4.05,930,2.99,931,5.163,932,4.572,933,2.594,934,4.05,935,2.594,936,4.284,937,3.678,938,2.231,939,4.05,940,2.594,941,3.839,942,3.47,943,2.003,944,4.05,945,2.594,946,4.05,947,2.594,948,3.725,949,3.725,951,4.05,952,2.594,953,2.003,954,2.003,955,4.05,956,2.594,961,1.707,965,1.651,985,1.507,996,0.99,1015,3.019,1033,2.497,1048,2.944,1054,1.466,1078,3.071,1080,2.895,1086,1.651,1087,1.651,1121,1.551,1129,3.451,1132,2.172,1133,1.466,1140,4.183,1161,1.651,1164,2.364,1165,1.293,1195,1.551,1212,3.271,1214,2.718,1221,1.507,1225,1.427,1266,1.769,1272,3.044,1274,1.599,1307,4.05,1330,1.707,1340,2.003,1341,2.99,1351,3.483,1369,3.289,1409,2.231,1430,2.869,1431,3.128,1491,3.848,1501,4.05,1528,2.107,1530,3.848,1544,3.397,1548,3.725,1549,2.231,1556,2.107,1577,1.915,1584,3.725,1594,3.483,1597,2.594,1602,2.107,1603,2.386,1609,2.594,1614,1.769,1622,2.594,1628,4.05,1629,4.05,1630,4.05,1631,4.05,1632,4.05,1633,4.05,1634,4.05,1639,3.483,1806,2.594,1817,2.386,1818,3.725,1819,2.594,1820,4.05,1821,2.594,1822,2.594,1825,1.769,1850,3.128,1880,2.386,1892,3.725,2542,2.99,2719,4.05,2745,3.725,2823,2.107,2910,2.231,2967,2.386,2990,4.05,3043,4.05,3119,2.107,3120,2.107,3123,2.594,3137,3.128,3140,2.231,3141,1.915,3161,3.483,3164,2.107,3191,3.289,3232,3.483,3264,4.05,3265,4.05,3299,2.386,3433,3.848,3490,2.594,3640,2.594,3647,5.178,3649,3.289,3656,4.05,3812,2.107,3826,2.869,3827,2.869,3828,5.178,3829,3.397,3841,4.284,3847,3.725,3850,2.386,3851,2.386,3852,2.386,3853,3.725,3915,3.289,4031,2.003,4033,2.594,4035,2.594,4084,2.594,4096,2.594,4135,4.05,4140,2.594,4148,2.231,4160,2.594,4255,2.594,4425,5.63,4446,5.63,4448,4.05,4451,6.106,4453,2.594,4455,8.401,4456,2.91,4457,4.543,4458,4.543,4459,5.589,4460,4.543,4461,4.543,4462,2.91,4463,2.91,4464,7.583,4465,2.91,4466,4.543,4467,4.543,4468,7.583,4469,4.543,4470,2.91,4471,4.543,4472,2.91,4473,4.543,4474,2.91,4475,4.543,4476,4.543,4477,2.91,4478,4.543,4479,5.589,4480,4.543,4481,2.91,4482,4.543,4483,2.91,4484,4.543,4485,4.543,4486,4.543,4487,4.543,4488,4.543,4489,5.589,4490,2.91,4491,2.91,4492,2.91,4493,4.543,4494,4.543,4495,2.91,4496,5.589,4497,4.543,4498,2.91,4499,2.91,4500,2.91,4501,2.91,4502,2.91,4503,2.91,4504,2.91,4505,2.91,4506,2.91,4507,2.91,4508,2.91,4509,6.85,4510,6.85,4511,6.85,4512,6.85,4513,6.85,4514,6.85,4515,7.259,4516,2.91,4517,2.91,4518,2.386,4519,2.91,4520,2.91,4521,2.91,4522,2.91,4523,2.231,4524,4.543,4525,2.91,4526,2.91,4527,2.91,4528,2.91,4529,2.91,4530,2.91,4531,2.91,4532,2.91,4533,2.91,4534,2.91,4535,2.91,4536,7.259,4537,2.91,4538,4.543,4539,5.589,4540,5.589,4541,2.91,4542,2.91,4543,4.543,4544,4.543,4545,4.543,4546,4.543,4547,4.543,4548,4.543,4549,4.543,4550,4.543,4551,4.543,4552,4.543,4553,4.543,4554,4.543,4555,4.543,4556,5.589,4557,5.589,4558,5.589,4559,5.589,4560,2.91,4561,2.91,4562,2.91,4563,2.91,4564,2.91,4565,2.91,4566,2.91,4567,2.91,4568,2.91,4569,2.91,4570,2.91,4571,2.91,4572,2.91,4573,2.91,4574,2.91,4575,2.91,4576,2.91,4577,2.91,4578,2.91,4579,2.91,4580,7.259,4581,2.91,4582,2.91,4583,2.91,4584,2.91,4585,2.91,4586,2.91,4587,4.543,4588,2.91,4589,2.91,4590,2.91,4591,2.91,4592,2.91,4593,2.91,4594,2.91,4595,2.91,4596,2.91,4597,2.91,4598,2.91,4599,2.91,4600,2.91,4601,2.91,4602,2.91,4603,2.91,4604,2.91]],["title/additional-documentation/properties.html",[16,0.543,185,2.263,1589,2.263]],["body/additional-documentation/properties.html",[5,0.043,8,0.18,16,1.178,44,0.006,46,0.168,63,0.486,69,3.856,115,0.006,116,0.006,373,3.149,383,1.677,394,3.762,855,4.364,943,5.125,1001,4.487,1214,3.243,1602,5.39,1639,5.707,3669,6.105,3686,5.707,4054,6.105,4105,6.105,4148,5.707,4187,6.105,4518,6.105,4523,5.707,4605,6.637,4606,6.637,4607,6.637]],["title/additional-documentation/properties/kp.properties.html",[185,2.263,1589,2.263,4523,3.059]],["body/additional-documentation/properties/kp.properties.html",[5,0.043,8,0.18,16,1.178,44,0.006,46,0.168,63,0.486,69,3.856,115,0.006,116,0.006,373,3.149,383,1.677,394,3.762,855,4.364,943,5.125,1001,4.487,1214,3.243,1602,5.39,1639,5.707,3669,6.105,3686,5.707,4054,6.105,4105,6.105,4148,5.707,4187,6.105,4518,6.105,4523,5.707,4605,6.637,4606,6.637,4607,6.637]],["title/additional-documentation/properties/auth.properties.html",[185,2.263,1589,2.263,4608,3.557]],["body/additional-documentation/properties/auth.properties.html",[5,0.033,8,0.189,12,3.98,41,2.426,42,5.304,44,0.006,46,0.176,63,0.406,73,5.383,115,0.005,116,0.005,247,4.249,277,4.403,288,3.98,314,1.38,326,4.987,355,2.659,359,2.767,363,4.684,365,2.659,373,2.845,886,5.94,898,6.534,910,4.987,930,5.609,942,3.463,1001,4.692,1430,4.574,4153,6.458,4165,6.171,4608,6.458,4609,7.244,4610,7.244,4611,7.244,4612,7.244,4613,8.524,4614,9.058,4615,5.94,4616,7.244,4617,7.244,4618,7.244,4619,7.244,4620,7.244]],["title/additional-documentation/properties/bruteforce.properties.html",[185,2.263,1589,2.263,4621,3.557]],["body/additional-documentation/properties/bruteforce.properties.html",[5,0.033,8,0.189,44,0.005,46,0.176,52,1.463,68,4.272,71,2.563,87,1.562,115,0.005,116,0.005,291,3.314,314,1.516,339,4.131,359,2.782,363,4.002,365,2.673,373,2.854,471,3.025,574,3.631,936,6.959,937,5.974,938,6.555,949,7.012,1001,4.702,2974,5.583,4013,5.972,4097,6.493,4165,5.273,4615,5.972,4621,6.493,4622,7.283,4623,7.283,4624,7.283,4625,7.283,4626,7.283,4627,7.283,4628,7.283,4629,8.551,4630,7.283,4631,7.623]],["title/additional-documentation/properties/captcha.properties.html",[185,2.263,1589,2.263,4632,3.557]],["body/additional-documentation/properties/captcha.properties.html",[5,0.038,8,0.202,44,0.005,46,0.19,52,1.674,53,2.284,63,0.529,73,4.402,87,1.495,115,0.005,116,0.005,182,2.089,314,1.128,355,3.271,359,2.663,363,3.83,365,2.559,373,2.781,394,3.027,397,2.61,459,3.83,814,4.666,886,5.716,942,3.983,1001,5.015,1010,4.402,1026,4.799,1035,4.237,1389,6.214,1854,5.716,2660,6.832,2661,6.832,2663,5.343,2686,6.832,2701,7.428,2702,6.214,4013,5.716,4165,5.046,4615,5.716,4631,7.428,4632,6.214,4633,6.971,4634,6.971,4635,6.971,4636,6.971,4637,6.971,4638,6.971,4639,6.971,4640,6.971,4641,8.332,4642,6.971]],["title/additional-documentation/properties/file.properties.html",[185,2.263,1589,2.263,4643,3.557]],["body/additional-documentation/properties/file.properties.html",[5,0.034,8,0.182,25,2.047,44,0.006,46,0.17,63,0.424,69,3.922,115,0.006,116,0.006,314,1.225,359,2.892,365,2.779,373,2.92,394,3.798,397,2.835,1001,4.531,1214,3.55,2542,5.756,4643,6.749,4644,7.571,4645,7.571,4646,7.571,4647,7.571]],["title/additional-documentation/properties/media.properties.html",[185,2.263,1589,2.263,4648,3.557]],["body/additional-documentation/properties/media.properties.html",[5,0.033,8,0.179,25,2.459,44,0.005,46,0.166,63,0.481,115,0.005,116,0.005,124,4.018,359,2.793,365,2.684,373,2.861,383,2.181,397,3.405,408,3.9,1001,4.44,1214,3.405,1577,6.172,1807,5.996,2542,5.984,3735,6.205,4165,6.205,4181,6.519,4648,6.519,4649,7.313,4650,7.313,4651,8.572,4652,8.572,4653,7.313,4654,7.313,4655,7.313]]],"invertedIndex":[["",{"_index":44,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["0",{"_index":1435,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"injectables/FileMetadataService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/NotEmptyPipe.html":{},"controllers/ProcessController.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["0.14",{"_index":4015,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":4026,"title":{},"body":{"dependencies.html":{}}}],["0.3",{"_index":4029,"title":{},"body":{"dependencies.html":{}}}],["0.33",{"_index":4028,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":4011,"title":{},"body":{"dependencies.html":{}}}],["0.6",{"_index":4030,"title":{},"body":{"dependencies.html":{}}}],["0.9.9",{"_index":4432,"title":{},"body":{"properties.html":{}}}],["1",{"_index":247,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"classes/LogService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"guards/RolesGuard.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["10",{"_index":326,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"dependencies.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["10000",{"_index":3816,"title":{},"body":{"modules/WarlockModule.html":{}}}],["15",{"_index":708,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["16",{"_index":4017,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":4427,"title":{},"body":{"overview.html":{}}}],["19",{"_index":4018,"title":{},"body":{"dependencies.html":{}}}],["192.168.0.1",{"_index":1005,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["2",{"_index":4020,"title":{},"body":{"dependencies.html":{},"overview.html":{}}}],["2).join",{"_index":2976,"title":{},"body":{"classes/LogService.html":{}}}],["2.0",{"_index":756,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["2.11",{"_index":4014,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":3305,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["2004",{"_index":4169,"title":{},"body":{"license.html":{}}}],["2023",{"_index":749,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["22",{"_index":4429,"title":{},"body":{"overview.html":{}}}],["256",{"_index":1837,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["27",{"_index":4428,"title":{},"body":{"overview.html":{}}}],["3",{"_index":2974,"title":{},"body":{"classes/LogService.html":{},"injectables/ProcessManagerService.html":{},"dependencies.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["300",{"_index":4631,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["30px",{"_index":2758,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["3600",{"_index":4617,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["4",{"_index":2970,"title":{},"body":{"classes/LogService.html":{},"dependencies.html":{}}}],["40",{"_index":4431,"title":{},"body":{"overview.html":{}}}],["43",{"_index":4430,"title":{},"body":{"overview.html":{}}}],["5",{"_index":4013,"title":{},"body":{"dependencies.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["50",{"_index":2744,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"license.html":{}}}],["502",{"_index":1793,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["6",{"_index":4620,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["600",{"_index":4614,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["7",{"_index":2731,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"dependencies.html":{}}}],["78",{"_index":4531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":4520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":4023,"title":{},"body":{"dependencies.html":{},"license.html":{},"overview.html":{}}}],["9]*$/.test(variablename",{"_index":1726,"title":{},"body":{"injectables/ConfigService.html":{}}}],["9_",{"_index":304,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["_a",{"_index":1724,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a.localecompare(b",{"_index":1668,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a[sort",{"_index":1662,"title":{},"body":{"injectables/ConfigService.html":{}}}],["abc123456",{"_index":4641,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["abortable",{"_index":1815,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["above",{"_index":4335,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":9,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"classes/AuthService.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/LiteAuthGuard.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["abstractauthguard",{"_index":1,"title":{"guards/AbstractAuthGuard.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["abstractprocess",{"_index":117,"title":{"classes/AbstractProcess.html":{}},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:140",{"_index":3689,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:148",{"_index":3690,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:157",{"_index":3688,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:165",{"_index":3687,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:173",{"_index":3691,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:31",{"_index":3672,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:32",{"_index":3674,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:33",{"_index":3673,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:42",{"_index":3675,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:44",{"_index":3692,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:80",{"_index":3693,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:94",{"_index":3694,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractusersubscriber",{"_index":261,"title":{"classes/AbstractUserSubscriber.html":{}},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["acceptance",{"_index":4392,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":4389,"title":{},"body":{"license.html":{}}}],["access",{"_index":41,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"injectables/LocaleSubscriber.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["access_token",{"_index":933,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["access_token_error_msg",{"_index":77,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["accessible",{"_index":4651,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["accesstoken",{"_index":797,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["act",{"_index":4397,"title":{},"body":{"license.html":{}}}],["acting",{"_index":4185,"title":{},"body":{"license.html":{}}}],["action",{"_index":1106,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["action.entity",{"_index":2094,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["action.entity.ts",{"_index":1903,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:36",{"_index":1910,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:40",{"_index":1912,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:44",{"_index":1911,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:53",{"_index":1917,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:60",{"_index":1913,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:63",{"_index":1914,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action?.$?.content",{"_index":3865,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["action?.$?.read",{"_index":3864,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["action?.$?.target",{"_index":3863,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["action[\"#name",{"_index":3862,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["actions",{"_index":1080,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["actions.description",{"_index":4558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.description.lang",{"_index":4559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.name",{"_index":4556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.name.lang",{"_index":4557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["active",{"_index":1271,"title":{},"body":{"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["acts",{"_index":4371,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":4108,"title":{},"body":{"index.html":{}}}],["add",{"_index":4324,"title":{},"body":{"license.html":{}}}],["addendum",{"_index":4326,"title":{},"body":{"license.html":{}}}],["additional",{"_index":185,"title":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{},"classes/TmpDirCleanerProcess.html":{},"license.html":{}}}],["additions",{"_index":4232,"title":{},"body":{"license.html":{}}}],["address",{"_index":953,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["addresses",{"_index":928,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["adm",{"_index":4009,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":1003,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"index.html":{},"properties.html":{}}}],["administrative",{"_index":3643,"title":{},"body":{"classes/Roles.html":{}}}],["advanced",{"_index":4078,"title":{},"body":{"index.html":{}}}],["advised",{"_index":4388,"title":{},"body":{"license.html":{}}}],["afterremove",{"_index":2863,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["afterremove(event",{"_index":2868,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["again",{"_index":3718,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["against",{"_index":68,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/RedisCacheService.html":{},"index.html":{},"license.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["agree",{"_index":4400,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":767,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["agreement",{"_index":4340,"title":{},"body":{"license.html":{}}}],["album",{"_index":333,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["alexander",{"_index":750,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["algorithm",{"_index":638,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["alias",{"_index":2069,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["aliases",{"_index":4441,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alleging",{"_index":4291,"title":{},"body":{"license.html":{}}}],["allow",{"_index":4106,"title":{},"body":{"index.html":{}}}],["allowed",{"_index":36,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["allowedformetadatakey",{"_index":3656,"title":{},"body":{"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["allowfor",{"_index":1471,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["allowing",{"_index":476,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["allows",{"_index":4099,"title":{},"body":{"index.html":{}}}],["alone",{"_index":4283,"title":{},"body":{"license.html":{}}}],["along",{"_index":1009,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"license.html":{}}}],["alongside",{"_index":4325,"title":{},"body":{"license.html":{}}}],["already",{"_index":3540,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["altitude",{"_index":637,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["amount",{"_index":351,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["analysis",{"_index":1137,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["analyzedatabase",{"_index":1138,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["analyzes",{"_index":1131,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"index.html":{}}}],["analyzing",{"_index":2026,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["and/or",{"_index":4395,"title":{},"body":{"license.html":{}}}],["angle",{"_index":657,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["angular",{"_index":4110,"title":{},"body":{"index.html":{},"properties.html":{}}}],["annotate",{"_index":4500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["annotations",{"_index":4223,"title":{},"body":{"license.html":{}}}],["anonymous",{"_index":2979,"title":{},"body":{"classes/LogService.html":{}}}],["apache",{"_index":754,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["aperture",{"_index":554,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["app",{"_index":4148,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["app.close",{"_index":4573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.init",{"_index":4568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.select(logmodule).get(logger",{"_index":4569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.select(mod).get(configservice",{"_index":4570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appear",{"_index":4321,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":4217,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":765,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["application",{"_index":1556,"title":{},"body":{"injectables/ConfigService.html":{},"modules/ProcessModule.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["application/xml",{"_index":3975,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["applications",{"_index":4048,"title":{},"body":{"index.html":{},"properties.html":{}}}],["applied",{"_index":614,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/VideoFileMetadata.html":{}}}],["applies",{"_index":1192,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"license.html":{}}}],["apply",{"_index":3308,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"license.html":{}}}],["applying",{"_index":628,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["appropriate",{"_index":3755,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"license.html":{}}}],["appropriateness",{"_index":4359,"title":{},"body":{"license.html":{}}}],["archives",{"_index":4421,"title":{},"body":{"license.html":{}}}],["arg",{"_index":3636,"title":{},"body":{"modules/RedisModule.html":{}}}],["args",{"_index":1401,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/RedisModule.html":{}}}],["args.find((arg",{"_index":3635,"title":{},"body":{"modules/RedisModule.html":{}}}],["argumentshost",{"_index":1797,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["arising",{"_index":4377,"title":{},"body":{"license.html":{}}}],["array",{"_index":1164,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/LocaleService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(obj",{"_index":2255,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["array.isarray(value",{"_index":2879,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["array.reverse().foreach((obj",{"_index":3886,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["arrays",{"_index":1809,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["artist",{"_index":334,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["asc",{"_index":1665,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"miscellaneous/enumerations.html":{}}}],["aspect",{"_index":643,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["asserted",{"_index":4405,"title":{},"body":{"license.html":{}}}],["associated",{"_index":418,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/ConfigItem.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["associating",{"_index":1185,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["assume",{"_index":4361,"title":{},"body":{"license.html":{}}}],["assumed",{"_index":4524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":24,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/BasicUserService.html":{},"controllers/CaptchaController.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"controllers/FileController.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"controllers/MediaController.html":{},"injectables/MessagesBrokerService.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["asynchronously",{"_index":4575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["atexp",{"_index":1013,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["attach",{"_index":4407,"title":{},"body":{"license.html":{}}}],["attached",{"_index":1152,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"license.html":{}}}],["attacks",{"_index":4097,"title":{},"body":{"index.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["attempts",{"_index":949,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["attribution",{"_index":4310,"title":{},"body":{"license.html":{}}}],["attrs",{"_index":3867,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{}}}],["audio",{"_index":331,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["audiofilemetadata",{"_index":328,"title":{"interfaces/AudioFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["audiofilemetadataentity",{"_index":691,"title":{"entities/AudioFileMetadataEntity.html":{}},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{}}}],["audiomd",{"_index":2264,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["audiomd.bit_rate",{"_index":2277,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["audiomd.channels",{"_index":2275,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["audiomd.codec_long_name",{"_index":2271,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["audiomd.codec_name?.touppercase",{"_index":2269,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["auth",{"_index":734,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth.access.token.expiration",{"_index":4612,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["auth.constants",{"_index":787,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["auth.controller",{"_index":876,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":796,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["auth.guard.ts",{"_index":7,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["auth.guard.ts:28",{"_index":2816,"title":{},"body":{"injectables/LiteAuthGuard.html":{}}}],["auth.guard.ts:47",{"_index":31,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["auth.guard.ts:72",{"_index":64,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["auth.guard.ts:83",{"_index":55,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["auth.jwt.secret",{"_index":4609,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["auth.properties",{"_index":4608,"title":{"additional-documentation/properties/auth.properties.html":{}},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["auth.refresh.token.expiration",{"_index":4616,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["auth.types",{"_index":802,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{}}}],["auth_access_token_prefix",{"_index":78,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth_jwt_cache_prefix",{"_index":79,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth_jwt_cache_prefix}:${auth_access_token_prefix}:${accesstoken",{"_index":945,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth_jwt_cache_prefix}:${auth_access_token_prefix}:${token",{"_index":105,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["auth_jwt_cache_prefix}:${auth_refresh_token_prefix}:${accesstoken}:${refreshtoken",{"_index":947,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth_refresh_token_prefix",{"_index":934,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["authconfig",{"_index":874,"title":{},"body":{"modules/AuthModule.html":{}}}],["authconfig.access_token_expiration",{"_index":891,"title":{},"body":{"modules/AuthModule.html":{}}}],["authcontroller",{"_index":730,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authenticate",{"_index":902,"title":{},"body":{"classes/AuthService.html":{}}}],["authenticate(data",{"_index":905,"title":{},"body":{"classes/AuthService.html":{}}}],["authenticated",{"_index":1261,"title":{},"body":{"interfaces/BasicUserController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["authentication",{"_index":12,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"injectables/LiteAuthGuard.html":{},"classes/LoginPayload.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["authenticity",{"_index":497,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["authguard",{"_index":838,"title":{"injectables/AuthGuard.html":{}},"body":{"injectables/AuthGuard.html":{},"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["authmodule",{"_index":851,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{}}}],["authmoduleoptions",{"_index":858,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/typealiases.html":{}}}],["author",{"_index":4439,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":898,"title":{},"body":{"classes/AuthService.html":{},"index.html":{},"properties.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["authorization.service",{"_index":867,"title":{},"body":{"modules/AuthModule.html":{}}}],["authorizationheader",{"_index":109,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["authorizationheader.match(/bearer\\s+(\\s+)\\s",{"_index":112,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["authorizationservice",{"_index":861,"title":{},"body":{"modules/AuthModule.html":{}}}],["authorized",{"_index":4181,"title":{},"body":{"license.html":{},"additional-documentation/properties/media.properties.html":{}}}],["authorship",{"_index":4213,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":786,"title":{"classes/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["automates",{"_index":4058,"title":{},"body":{"index.html":{}}}],["automatic",{"_index":4070,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":4591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":1904,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"injectables/LocaleService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"license.html":{},"modules.html":{}}}],["avalue",{"_index":1661,"title":{},"body":{"injectables/ConfigService.html":{}}}],["avalue.localecompare(bvalue",{"_index":1666,"title":{},"body":{"injectables/ConfigService.html":{}}}],["avatar",{"_index":1266,"title":{},"body":{"interfaces/BasicUserController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/variables.html":{}}}],["avatar.files",{"_index":4597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.files.format",{"_index":4598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.name",{"_index":4595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.name.lang",{"_index":4596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.type",{"_index":4599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.type.ext",{"_index":4600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["await",{"_index":93,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/BasicUserService.html":{},"controllers/CaptchaController.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"controllers/FileController.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"controllers/MediaController.html":{},"injectables/MessagesBrokerService.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["axios",{"_index":4012,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":1660,"title":{},"body":{"injectables/ConfigService.html":{},"license.html":{}}}],["b[sort",{"_index":1664,"title":{},"body":{"injectables/ConfigService.html":{}}}],["background",{"_index":4068,"title":{},"body":{"index.html":{},"properties.html":{}}}],["bad",{"_index":962,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/DbExceptionFilter.html":{}}}],["badrequestexception",{"_index":293,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/FileService.html":{},"injectables/NotEmptyPipe.html":{}}}],["badrequestexception(`${this.fieldname",{"_index":3290,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["badrequestmsexception",{"_index":957,"title":{"classes/BadRequestMsException.html":{}},"body":{"classes/BadRequestMsException.html":{}}}],["balance",{"_index":609,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["band",{"_index":349,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["base",{"_index":3274,"title":{},"body":{"classes/MsException.html":{}}}],["base64",{"_index":2709,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["based",{"_index":38,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["basename(filepath",{"_index":1765,"title":{},"body":{"injectables/ConfigService.html":{}}}],["basic",{"_index":660,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"modules/ExplorerModule.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/variables.html":{}}}],["basic.service",{"_index":3765,"title":{},"body":{"modules/UserModule.html":{}}}],["basic.service.ts",{"_index":1285,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["basic.service.ts:28",{"_index":1294,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["basicauthcontroller",{"_index":800,"title":{"interfaces/BasicAuthController.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["basiccaptchacontroller",{"_index":1016,"title":{"interfaces/BasicCaptchaController.html":{}},"body":{"interfaces/BasicCaptchaController.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["basicexplorercontroller",{"_index":1037,"title":{"interfaces/BasicExplorerController.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["basicexplorerservice",{"_index":2028,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["basicfilecontroller",{"_index":663,"title":{"interfaces/BasicFileController.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["basicmediacontroller",{"_index":1176,"title":{"interfaces/BasicMediaController.html":{}},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["basicusercontroller",{"_index":1250,"title":{"interfaces/BasicUserController.html":{}},"body":{"interfaces/BasicUserController.html":{},"controllers/ProfileController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["basicuserservice",{"_index":1283,"title":{"injectables/BasicUserService.html":{}},"body":{"injectables/BasicUserService.html":{},"modules/UserModule.html":{}}}],["basis",{"_index":769,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["bcrypt",{"_index":278,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"dependencies.html":{}}}],["bcrypt.compare(user.password",{"_index":322,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["bcrypt.hash(password",{"_index":325,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["before",{"_index":471,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"classes/UserSubscriber.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["beforeinsert",{"_index":3785,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beforeinsert(event",{"_index":3789,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beforeupdate",{"_index":3786,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beforeupdate(event",{"_index":3791,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beginning",{"_index":541,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["behalf",{"_index":4237,"title":{},"body":{"license.html":{}}}],["being",{"_index":1125,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["belongs",{"_index":348,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["below",{"_index":4218,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":4201,"title":{},"body":{"license.html":{}}}],["between",{"_index":510,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["bind",{"_index":4229,"title":{},"body":{"license.html":{}}}],["bit",{"_index":463,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["bitdepth",{"_index":465,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["bitrate",{"_index":335,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["bits",{"_index":447,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["block",{"_index":543,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["blocked",{"_index":4629,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["blocking",{"_index":4627,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["body",{"_index":780,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/BasicExplorerController.html":{},"controllers/CaptchaController.html":{},"controllers/ConfigController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"controllers/ProfileController.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["body.depth",{"_index":3957,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["body.schema",{"_index":3860,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["body.user",{"_index":3956,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["body_token",{"_index":4460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boilerplate",{"_index":4408,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":52,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["bootstrap",{"_index":1322,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}],["both",{"_index":1547,"title":{},"body":{"interfaces/ConfigItem.html":{},"entities/ExplorerActionEntity.html":{}}}],["bps",{"_index":451,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["brackets",{"_index":4411,"title":{},"body":{"license.html":{}}}],["break",{"_index":232,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{}}}],["bridge",{"_index":3915,"title":{},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bridge.constants",{"_index":3921,"title":{},"body":{"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["bridge.constants.ts",{"_index":3828,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["bridge.constants.ts:33",{"_index":3912,"title":{},"body":{"classes/XdbImportService.html":{}}}],["bridge.constants.ts:35",{"_index":3910,"title":{},"body":{"classes/XdbImportService.html":{}}}],["bridge.constants.ts:41",{"_index":3833,"title":{},"body":{"classes/XdbExportService.html":{}}}],["bridge.controller",{"_index":4001,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["bridge.controller.ts",{"_index":3936,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["bridge.controller.ts:48",{"_index":3943,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["bridge.controller.ts:55",{"_index":3947,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["bridge.controller.ts:63",{"_index":3940,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["bridge.middleware",{"_index":4002,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["bridge.middleware.ts",{"_index":3960,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["bridge.middleware.ts:26",{"_index":3972,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["bridge.middleware.ts:34",{"_index":3968,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["bridge.middleware.ts:47",{"_index":3965,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["bridge.module.ts",{"_index":3982,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["bridge.module.ts:101",{"_index":3986,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["bridge.module.ts:44",{"_index":3991,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["bridge.module.ts:76",{"_index":3989,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["bridge.types",{"_index":3839,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{}}}],["bridge.types.ts",{"_index":3914,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["bridge/xml",{"_index":3827,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["brightness",{"_index":571,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["broker",{"_index":3398,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["broker.constants",{"_index":3162,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["broker.constants.ts",{"_index":4478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["broker.module",{"_index":3496,"title":{},"body":{"modules/ProcessModule.html":{}}}],["broker.module.ts",{"_index":3160,"title":{},"body":{"modules/MessagesBrokerModule.html":{}}}],["broker.service",{"_index":3165,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"injectables/ProcessRegisterService.html":{}}}],["broker.service.ts",{"_index":3166,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:27",{"_index":3187,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:28",{"_index":3188,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:29",{"_index":3171,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:47",{"_index":3173,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:56",{"_index":3185,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:65",{"_index":3186,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:75",{"_index":3181,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:88",{"_index":3175,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.subscribe(command.register",{"_index":3525,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["broker.subscribe(command.start",{"_index":3529,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["broker.subscribe(command.stop",{"_index":3531,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["broker.subscribe(command.unregister",{"_index":3527,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["broker.types",{"_index":3190,"title":{},"body":{"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{}}}],["broker.types.ts",{"_index":3142,"title":{},"body":{"interfaces/MessagesBroker.html":{}}}],["broker.types.ts:26",{"_index":3147,"title":{},"body":{"interfaces/MessagesBroker.html":{}}}],["broker.types.ts:33",{"_index":3152,"title":{},"body":{"interfaces/MessagesBroker.html":{}}}],["broker.types.ts:39",{"_index":3155,"title":{},"body":{"interfaces/MessagesBroker.html":{}}}],["broker/messages",{"_index":3141,"title":{},"body":{"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"miscellaneous/variables.html":{}}}],["brokering",{"_index":3143,"title":{},"body":{"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{}}}],["browse",{"_index":4423,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":4424,"title":{},"body":{"modules.html":{}}}],["brute",{"_index":936,"title":{},"body":{"classes/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce",{"_index":940,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforce.block.duration",{"_index":4628,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce.enabled",{"_index":4623,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce.max.attempts",{"_index":4626,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce.properties",{"_index":4621,"title":{"additional-documentation/properties/bruteforce.properties.html":{}},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce_jwt_cache_prefix",{"_index":939,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforce_jwt_cache_prefix}:ip:${ipaddress",{"_index":956,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforce_jwt_cache_prefix}:login:${login",{"_index":952,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforceipkey",{"_index":955,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforceloginkey",{"_index":951,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["buf",{"_index":2183,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{}}}],["buffer",{"_index":1229,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/DirectoryStructure.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["build",{"_index":4150,"title":{},"body":{"index.html":{}}}],["builder",{"_index":2523,"title":{},"body":{"injectables/FileService.html":{}}}],["built",{"_index":2914,"title":{},"body":{"classes/LogService.html":{},"index.html":{}}}],["bus",{"_index":3123,"title":{},"body":{"interfaces/MessageBus.html":{},"miscellaneous/variables.html":{}}}],["bvalue",{"_index":1663,"title":{},"body":{"injectables/ConfigService.html":{}}}],["bvalue.localecompare(avalue",{"_index":1667,"title":{},"body":{"injectables/ConfigService.html":{}}}],["bytes",{"_index":399,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["c",{"_index":2075,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"entities/ProcessUnitEntity.html":{},"license.html":{}}}],["c.process",{"_index":3557,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["c.target",{"_index":2076,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["cache",{"_index":931,"title":{},"body":{"classes/AuthService.html":{},"classes/CacheService.html":{},"injectables/ConfigService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/RedisCacheService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cache.constants",{"_index":3608,"title":{},"body":{"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{}}}],["cache.service",{"_index":1338,"title":{},"body":{"modules/CacheModule.html":{}}}],["cache.service.ts",{"_index":3593,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:102",{"_index":3596,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:121",{"_index":3604,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:139",{"_index":3597,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:157",{"_index":3601,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:27",{"_index":3595,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:39",{"_index":3599,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:54",{"_index":3600,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:65",{"_index":3603,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:78",{"_index":3607,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.types",{"_index":1336,"title":{},"body":{"modules/CacheModule.html":{},"injectables/RedisCacheService.html":{}}}],["cache/cache.constants",{"_index":3192,"title":{},"body":{"injectables/MessagesBrokerService.html":{},"modules/WarlockModule.html":{}}}],["cache/redis.module",{"_index":3163,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["cached",{"_index":2712,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["cachemodule",{"_index":868,"title":{"modules/CacheModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/ProcessModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"overview.html":{}}}],["cacheservice",{"_index":19,"title":{"classes/CacheService.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"overview.html":{}}}],["caching",{"_index":1329,"title":{},"body":{"modules/CacheModule.html":{}}}],["call",{"_index":3970,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["callback",{"_index":151,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["called",{"_index":153,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["caller",{"_index":3821,"title":{},"body":{"modules/WarlockModule.html":{}}}],["callhandler",{"_index":1889,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["calling",{"_index":2929,"title":{},"body":{"classes/LogService.html":{}}}],["camera",{"_index":441,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["can't",{"_index":207,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessRegisterService.html":{}}}],["canactivate",{"_index":14,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":28,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canread",{"_index":1086,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["canread.name",{"_index":4560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canread.name.lang",{"_index":4561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvas",{"_index":2718,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"dependencies.html":{}}}],["canvas.getcontext(\"2d",{"_index":2746,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["canvas.height",{"_index":2756,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["canvas.width",{"_index":2755,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["canwrite",{"_index":1087,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["canwrite.name",{"_index":4562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canwrite.name.lang",{"_index":4563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capabilities",{"_index":360,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["capex",{"_index":2733,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["capfontfamily",{"_index":2747,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["capfontpath",{"_index":2749,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha",{"_index":814,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.constants",{"_index":2720,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.controller",{"_index":1400,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["captcha.enabled",{"_index":4633,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.expiration",{"_index":4634,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.font.family",{"_index":4638,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.font.path",{"_index":4636,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.google.public.key",{"_index":4640,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.google.secret.key",{"_index":4642,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.id",{"_index":1387,"title":{},"body":{"controllers/CaptchaController.html":{}}}],["captcha.image",{"_index":1388,"title":{},"body":{"controllers/CaptchaController.html":{}}}],["captcha.properties",{"_index":4632,"title":{"additional-documentation/properties/captcha.properties.html":{}},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.service",{"_index":1399,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["captcha.service.ts",{"_index":2658,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:129",{"_index":2696,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:137",{"_index":2699,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:145",{"_index":2700,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:153",{"_index":2703,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:33",{"_index":2666,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["captcha.service.ts:39",{"_index":2693,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:96",{"_index":2706,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.type",{"_index":1389,"title":{},"body":{"controllers/CaptchaController.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.types",{"_index":1381,"title":{},"body":{"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captcha/captcha.module",{"_index":878,"title":{},"body":{"modules/AuthModule.html":{}}}],["captcha/captcha.types",{"_index":790,"title":{},"body":{"controllers/AuthController.html":{}}}],["captcha_cache_prefix",{"_index":2719,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"miscellaneous/variables.html":{}}}],["captcha_cache_prefix}:${request.id",{"_index":2738,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captchabody",{"_index":1029,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["captchaconfig",{"_index":783,"title":{},"body":{"controllers/AuthController.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captchaconfig.enabled",{"_index":809,"title":{},"body":{"controllers/AuthController.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captchaconfig.google_secret_key",{"_index":2676,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["captchacontroller",{"_index":1376,"title":{"controllers/CaptchaController.html":{}},"body":{"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{}}}],["captchaenabled",{"_index":807,"title":{},"body":{"controllers/AuthController.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captchaid",{"_index":1006,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["captchamodule",{"_index":877,"title":{"modules/CaptchaModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules.html":{}}}],["captchamodule.forroot",{"_index":881,"title":{},"body":{"modules/AuthModule.html":{}}}],["captchamoduleoptions",{"_index":1036,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"miscellaneous/typealiases.html":{}}}],["captchapayload",{"_index":1007,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["captcharequest",{"_index":1022,"title":{"classes/CaptchaRequest.html":{}},"body":{"interfaces/BasicCaptchaController.html":{},"controllers/CaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captcharesponse",{"_index":1034,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"controllers/CaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"miscellaneous/typealiases.html":{}}}],["captchas",{"_index":2687,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captchaservice",{"_index":789,"title":{"classes/CaptchaService.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/BasicCaptchaController.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captchaservice:46",{"_index":2667,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["captchaservice:55",{"_index":2694,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captchaservice:62",{"_index":2669,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["captchaservice:76",{"_index":2711,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["capture",{"_index":557,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["captured",{"_index":601,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["capturing",{"_index":552,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["carry",{"_index":4304,"title":{},"body":{"license.html":{}}}],["cascade",{"_index":1426,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["cascade'})@joincolumn",{"_index":2143,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["case",{"_index":230,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["cat",{"_index":1496,"title":{},"body":{"injectables/CategoryService.html":{}}}],["catch",{"_index":219,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"miscellaneous/variables.html":{}}}],["catch((err",{"_index":2567,"title":{},"body":{"injectables/FileService.html":{}}}],["catch(exception",{"_index":1795,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["catch(typeormerror",{"_index":1801,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["catcherror",{"_index":3227,"title":{},"body":{"classes/MsClient.html":{}}}],["catcherror((error",{"_index":3247,"title":{},"body":{"classes/MsClient.html":{}}}],["catches",{"_index":1792,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["categories",{"_index":1462,"title":{},"body":{"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{}}}],["category",{"_index":1409,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"miscellaneous/variables.html":{}}}],["category.constants",{"_index":1502,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category.entity",{"_index":1478,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["category.service",{"_index":1463,"title":{},"body":{"modules/CategoryModule.html":{}}}],["category_relations",{"_index":1501,"title":{},"body":{"injectables/CategoryService.html":{},"miscellaneous/variables.html":{}}}],["categoryentity",{"_index":1407,"title":{"entities/CategoryEntity.html":{}},"body":{"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{}}}],["categorymodule",{"_index":1452,"title":{"modules/CategoryModule.html":{}},"body":{"modules/CategoryModule.html":{},"modules.html":{},"overview.html":{}}}],["categoryrestrictionentity",{"_index":1467,"title":{"entities/CategoryRestrictionEntity.html":{}},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["categoryservice",{"_index":1457,"title":{"injectables/CategoryService.html":{}},"body":{"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"overview.html":{}}}],["catrep",{"_index":1487,"title":{},"body":{"injectables/CategoryService.html":{}}}],["cause",{"_index":4193,"title":{},"body":{"license.html":{}}}],["caused",{"_index":158,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["cb",{"_index":536,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["certain",{"_index":4065,"title":{},"body":{"index.html":{}}}],["chanel",{"_index":3150,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["change",{"_index":4103,"title":{},"body":{"index.html":{}}}],["changed",{"_index":285,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"license.html":{}}}],["changes",{"_index":1166,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["changetarget",{"_index":2046,"title":{},"body":{"classes/ExplorerService.html":{}}}],["changetarget(target",{"_index":1167,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["channel",{"_index":3149,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["channels",{"_index":371,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["character",{"_index":390,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["characteristics",{"_index":430,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["charat(0",{"_index":1769,"title":{},"body":{"injectables/ConfigService.html":{}}}],["charge",{"_index":4263,"title":{},"body":{"license.html":{}}}],["check",{"_index":1145,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["checking",{"_index":67,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["checks",{"_index":3891,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["checkuseraccess",{"_index":1116,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["child",{"_index":257,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["children",{"_index":1411,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/CategoryService.html":{}}}],["choose",{"_index":4390,"title":{},"body":{"license.html":{}}}],["chunk",{"_index":3623,"title":{},"body":{"injectables/RedisCacheService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["claim",{"_index":4288,"title":{},"body":{"license.html":{}}}],["claims",{"_index":4278,"title":{},"body":{"license.html":{}}}],["class",{"_index":10,"title":{"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/DbExceptionFilter.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerService.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"classes/MediaDto.html":{},"classes/MediaFileDto.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"classes/MediaTypeDto.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"license.html":{}}}],["class\"]?.description",{"_index":2376,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["class\"]?.value",{"_index":2378,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["classes",{"_index":118,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/DbExceptionFilter.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerService.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"classes/MediaDto.html":{},"classes/MediaFileDto.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"classes/MediaTypeDto.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"overview.html":{}}}],["clean",{"_index":3677,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaned",{"_index":3709,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaner.process.ts",{"_index":3667,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaner.process.ts:30",{"_index":3671,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaner.process.ts:63",{"_index":3679,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaning",{"_index":3668,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleared",{"_index":988,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["clearing",{"_index":987,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["client",{"_index":1033,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["client.constants",{"_index":3266,"title":{},"body":{"modules/MsClientModule.html":{}}}],["client.constants.ts",{"_index":4479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["client.module.ts",{"_index":3262,"title":{},"body":{"modules/MsClientModule.html":{}}}],["client.ts",{"_index":3211,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:30",{"_index":3216,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:43",{"_index":3217,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:64",{"_index":3225,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:80",{"_index":3220,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:97",{"_index":3223,"title":{},"body":{"classes/MsClient.html":{}}}],["client.types",{"_index":3231,"title":{},"body":{"classes/MsClient.html":{}}}],["client.types.ts",{"_index":3121,"title":{},"body":{"interfaces/MessageBus.html":{},"miscellaneous/typealiases.html":{}}}],["client.types.ts:30",{"_index":3129,"title":{},"body":{"interfaces/MessageBus.html":{}}}],["client.types.ts:36",{"_index":3135,"title":{},"body":{"interfaces/MessageBus.html":{}}}],["client.types.ts:42",{"_index":3132,"title":{},"body":{"interfaces/MessageBus.html":{}}}],["client/ms",{"_index":3120,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["clientproxy",{"_index":3215,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["clientsmodule",{"_index":3263,"title":{},"body":{"modules/MsClientModule.html":{}}}],["clientsmodule.registerasync",{"_index":3267,"title":{},"body":{"modules/MsClientModule.html":{}}}],["cluster_cachemodule",{"_index":1323,"title":{},"body":{"modules/CacheModule.html":{},"overview.html":{}}}],["cluster_cachemodule_exports",{"_index":1325,"title":{},"body":{"modules/CacheModule.html":{},"overview.html":{}}}],["cluster_cachemodule_imports",{"_index":1324,"title":{},"body":{"modules/CacheModule.html":{},"overview.html":{}}}],["cluster_categorymodule",{"_index":1453,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_categorymodule_exports",{"_index":1455,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_categorymodule_imports",{"_index":1456,"title":{},"body":{"modules/CategoryModule.html":{}}}],["cluster_categorymodule_providers",{"_index":1454,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_localemodule",{"_index":2818,"title":{},"body":{"modules/LocaleModule.html":{},"overview.html":{}}}],["cluster_localemodule_exports",{"_index":2819,"title":{},"body":{"modules/LocaleModule.html":{},"overview.html":{}}}],["cluster_localemodule_providers",{"_index":2820,"title":{},"body":{"modules/LocaleModule.html":{},"overview.html":{}}}],["cluster_messagesbrokermodule",{"_index":3158,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"overview.html":{}}}],["cluster_messagesbrokermodule_imports",{"_index":3159,"title":{},"body":{"modules/MessagesBrokerModule.html":{}}}],["cluster_msclientmodule",{"_index":3260,"title":{},"body":{"modules/MsClientModule.html":{},"overview.html":{}}}],["cluster_msclientmodule_imports",{"_index":3261,"title":{},"body":{"modules/MsClientModule.html":{}}}],["cluster_processmodule",{"_index":3477,"title":{},"body":{"modules/ProcessModule.html":{},"overview.html":{}}}],["cluster_processmodule_exports",{"_index":3480,"title":{},"body":{"modules/ProcessModule.html":{},"overview.html":{}}}],["cluster_processmodule_imports",{"_index":3478,"title":{},"body":{"modules/ProcessModule.html":{},"overview.html":{}}}],["cluster_processmodule_providers",{"_index":3479,"title":{},"body":{"modules/ProcessModule.html":{},"overview.html":{}}}],["cluster_warlockmodule",{"_index":3807,"title":{},"body":{"modules/WarlockModule.html":{}}}],["cluster_warlockmodule_imports",{"_index":3808,"title":{},"body":{"modules/WarlockModule.html":{}}}],["code",{"_index":392,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleService.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"classes/MsException.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["codebase",{"_index":4119,"title":{},"body":{"index.html":{}}}],["codec",{"_index":336,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["codec_profile",{"_index":703,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["codecprofile",{"_index":337,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["code}_${language.id",{"_index":2848,"title":{},"body":{"injectables/LocaleService.html":{}}}],["color",{"_index":416,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["color_components",{"_index":2789,"title":{},"body":{"entities/ImageFileMetadataEntity.html":{}}}],["color_range",{"_index":3799,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["color_space",{"_index":3800,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["colorcomponents",{"_index":456,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["colorrange",{"_index":649,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["colors",{"_index":509,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["colorspace",{"_index":591,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["colortype",{"_index":467,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["column",{"_index":722,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicExplorerController.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["column(\"boolean",{"_index":1974,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{}}}],["column(\"date",{"_index":2787,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["column(\"decimal",{"_index":729,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["column(\"int",{"_index":728,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/FileEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["column(\"simple",{"_index":1451,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["column(\"smallint",{"_index":3069,"title":{},"body":{"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{}}}],["column(\"text",{"_index":1973,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/ProcessLogEntity.html":{}}}],["column(\"varchar",{"_index":727,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["column('boolean",{"_index":2148,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaTypeEntity.html":{}}}],["column('int",{"_index":2150,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaTypeEntity.html":{}}}],["column('simple",{"_index":1429,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["column('smallint",{"_index":3060,"title":{},"body":{"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{}}}],["column('text",{"_index":1965,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/ProcessLogEntity.html":{}}}],["column('varchar",{"_index":1438,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/UserEntity.html":{}}}],["column.entity",{"_index":2033,"title":{},"body":{"modules/ExplorerModule.html":{},"entities/ExplorerTargetEntity.html":{}}}],["column.entity.ts",{"_index":1924,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:103",{"_index":1935,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:107",{"_index":1959,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:111",{"_index":1944,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:115",{"_index":1955,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:119",{"_index":1940,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:127",{"_index":1957,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:135",{"_index":1942,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:138",{"_index":1961,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:41",{"_index":1929,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:45",{"_index":1946,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:49",{"_index":1932,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:53",{"_index":1927,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:56",{"_index":1964,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:59",{"_index":1966,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:63",{"_index":1968,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:67",{"_index":1945,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:71",{"_index":1967,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:75",{"_index":1931,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:79",{"_index":1933,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:83",{"_index":1948,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:87",{"_index":1950,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:91",{"_index":1954,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:95",{"_index":1937,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:99",{"_index":1952,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["columndatatype",{"_index":1076,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["columns",{"_index":1078,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["columns.description",{"_index":4541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.description.lang",{"_index":4542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.name",{"_index":4539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.name.lang",{"_index":4540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer",{"_index":4543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer.description",{"_index":4546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer.description.lang",{"_index":4547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer.name",{"_index":4544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer.name.lang",{"_index":4545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer",{"_index":4548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer.description",{"_index":4551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer.description.lang",{"_index":4552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer.name",{"_index":4549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer.name.lang",{"_index":4550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.tab",{"_index":4553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.tab.name",{"_index":4554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.tab.name.lang",{"_index":4555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["combination",{"_index":4284,"title":{},"body":{"license.html":{}}}],["combining",{"_index":625,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/LogService.html":{},"interfaces/VideoFileMetadata.html":{}}}],["command",{"_index":3437,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["commands",{"_index":4037,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["comment",{"_index":4415,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":4385,"title":{},"body":{"license.html":{}}}],["common",{"_index":4187,"title":{},"body":{"license.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["common/auth/auth.constants",{"_index":80,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["common/media/entity/media.entity",{"_index":1448,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{}}}],["common/media/media.types",{"_index":2802,"title":{},"body":{"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{}}}],["common/user/entity/user",{"_index":1479,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["common/user/user.types",{"_index":83,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["commonutils",{"_index":3341,"title":{},"body":{"controllers/ProcessController.html":{}}}],["commonutils.sleep",{"_index":3344,"title":{},"body":{"controllers/ProcessController.html":{}}}],["communication",{"_index":4081,"title":{},"body":{"index.html":{},"license.html":{}}}],["company",{"_index":368,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["compatibility",{"_index":597,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["compensation",{"_index":572,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["compiled",{"_index":4212,"title":{},"body":{"license.html":{}}}],["complete",{"_index":2871,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["compliance",{"_index":759,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["complies",{"_index":4330,"title":{},"body":{"license.html":{}}}],["components",{"_index":455,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["components\"]?.value",{"_index":2344,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["composite",{"_index":624,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["compositeimage",{"_index":630,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["comprehensive",{"_index":4072,"title":{},"body":{"index.html":{}}}],["compress",{"_index":639,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["compressing",{"_index":472,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["compression",{"_index":468,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["computer",{"_index":4382,"title":{},"body":{"license.html":{}}}],["concat(config_file_ext_pattern",{"_index":1766,"title":{},"body":{"injectables/ConfigService.html":{}}}],["conditions",{"_index":772,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["config",{"_index":1341,"title":{},"body":{"modules/CacheModule.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"miscellaneous/variables.html":{}}}],["config.constants",{"_index":1635,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config.controller",{"_index":1554,"title":{},"body":{"modules/ConfigModule.html":{}}}],["config.service",{"_index":1529,"title":{},"body":{"controllers/ConfigController.html":{},"modules/ConfigModule.html":{}}}],["config.ts",{"_index":4518,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["config.types",{"_index":1534,"title":{},"body":{"controllers/ConfigController.html":{},"injectables/ConfigService.html":{}}}],["config_cache_prefix",{"_index":1628,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["config_cache_prefix}:${!filter",{"_index":1657,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_cache_prefix}:${filenameprefix}.${keywithoutprefix",{"_index":1730,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_cache_prefix}:${item.key",{"_index":1681,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_cache_prefix}:${key",{"_index":1684,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_file_ext_pattern",{"_index":1629,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["configcontroller",{"_index":1512,"title":{"controllers/ConfigController.html":{}},"body":{"controllers/ConfigController.html":{},"modules/ConfigModule.html":{}}}],["configfilename",{"_index":1764,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configfilepath",{"_index":1767,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configitem",{"_index":1523,"title":{"interfaces/ConfigItem.html":{}},"body":{"controllers/ConfigController.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{}}}],["configmodule",{"_index":1549,"title":{"modules/ConfigModule.html":{}},"body":{"modules/ConfigModule.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["configmodule.forinitializer",{"_index":4566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice",{"_index":1528,"title":{"injectables/ConfigService.html":{}},"body":{"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["configservice.initwithpropertiesfiles(gencnfdir",{"_index":4572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":373,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicFileController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/MsClient.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"interfaces/VideoFileMetadata.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["configurations",{"_index":1460,"title":{},"body":{"modules/CategoryModule.html":{},"injectables/ConfigService.html":{},"modules/LocaleModule.html":{}}}],["configure",{"_index":3983,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["configure(consumer",{"_index":3984,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["configuring",{"_index":688,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["confirm",{"_index":496,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["connection",{"_index":489,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["connection_space",{"_index":2765,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["connectionspace",{"_index":493,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["consequential",{"_index":4376,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":4396,"title":{},"body":{"license.html":{}}}],["consists",{"_index":1546,"title":{},"body":{"interfaces/ConfigItem.html":{}}}],["consortium",{"_index":417,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["conspicuously",{"_index":4248,"title":{},"body":{"license.html":{}}}],["const",{"_index":89,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"controllers/FileController.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"controllers/MediaController.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":922,"title":{},"body":{"classes/AuthService.html":{},"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":85,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{}}}],["constitutes",{"_index":4292,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":137,"title":{},"body":{"classes/AbstractProcess.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"controllers/XmlDataBridgeController.html":{}}}],["constructor(@inject(redis_client",{"_index":3193,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["constructor(catrep",{"_index":1484,"title":{},"body":{"injectables/CategoryService.html":{}}}],["constructor(code",{"_index":3277,"title":{},"body":{"classes/MsException.html":{}}}],["constructor(fieldname",{"_index":3283,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["constructor(items",{"_index":3295,"title":{},"body":{"classes/PageableData.html":{}}}],["constructor(languagerep",{"_index":2833,"title":{},"body":{"injectables/LocaleService.html":{}}}],["constructor(lockexec",{"_index":3396,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["constructor(logger",{"_index":844,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"classes/MsClient.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["constructor(message",{"_index":966,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["constructor(private",{"_index":1383,"title":{},"body":{"controllers/CaptchaController.html":{},"controllers/ConfigController.html":{},"injectables/DtoInterceptor.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"controllers/FileController.html":{},"controllers/MediaController.html":{},"injectables/NotEmptyPipe.html":{},"controllers/ProcessController.html":{},"modules/ProcessModule.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{}}}],["constructor(pubclient",{"_index":3170,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["constructor(reflector",{"_index":3650,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(serializer",{"_index":1884,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["constructor(userrep",{"_index":1293,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["constructs",{"_index":2540,"title":{},"body":{"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{}}}],["construed",{"_index":4327,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":3987,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["consumer.apply(xmldatabridgemiddleware).forroutes(xmldatabridgecontroller",{"_index":4006,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["contain",{"_index":306,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["contained",{"_index":4315,"title":{},"body":{"license.html":{}}}],["container",{"_index":338,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["containing",{"_index":908,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicExplorerController.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["contains",{"_index":365,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["content",{"_index":408,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/media.properties.html":{}}}],["content.split(\"\\n",{"_index":1710,"title":{},"body":{"injectables/ConfigService.html":{}}}],["contents",{"_index":1852,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"license.html":{}}}],["context",{"_index":48,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/DtoInterceptor.html":{},"classes/LogService.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["context.gethandler",{"_index":3659,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":90,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["continue",{"_index":1714,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ProcessManagerService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["contract",{"_index":3122,"title":{},"body":{"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"license.html":{}}}],["contrast",{"_index":617,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["contribution",{"_index":4231,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":4282,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":4332,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":4251,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":4293,"title":{},"body":{"license.html":{}}}],["control",{"_index":3649,"title":{},"body":{"guards/RolesGuard.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["controlled",{"_index":4186,"title":{},"body":{"license.html":{}}}],["controller",{"_index":662,"title":{"controllers/AuthController.html":{},"controllers/CaptchaController.html":{},"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"controllers/XmlDataBridgeController.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"controllers/ConfigController.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"controllers/XmlDataBridgeController.html":{}}}],["controller(\"/auth",{"_index":803,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller(\"/captcha",{"_index":1382,"title":{},"body":{"controllers/CaptchaController.html":{}}}],["controller(\"/explorer",{"_index":2004,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["controller(\"/file",{"_index":2113,"title":{},"body":{"controllers/FileController.html":{}}}],["controller(\"/media",{"_index":2998,"title":{},"body":{"controllers/MediaController.html":{}}}],["controller(\"/profile",{"_index":3581,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller(\"config",{"_index":1535,"title":{},"body":{"controllers/ConfigController.html":{}}}],["controller(\"process",{"_index":3345,"title":{},"body":{"controllers/ProcessController.html":{}}}],["controller(\"xdb",{"_index":3948,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["controllers",{"_index":731,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"controllers/ProcessController.html":{},"modules/ProcessModule.html":{},"controllers/ProfileController.html":{},"modules/UserModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["conversions",{"_index":492,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["convert",{"_index":1197,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"dependencies.html":{}}}],["converting",{"_index":508,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["cookies",{"_index":974,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["coordinated",{"_index":567,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["copies",{"_index":4086,"title":{},"body":{"index.html":{},"license.html":{}}}],["copy",{"_index":761,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["copyright",{"_index":518,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/BasicFileController.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["copyright\"]?.description",{"_index":2407,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["core",{"_index":4438,"title":{},"body":{"properties.html":{}}}],["corresponding",{"_index":2546,"title":{},"body":{"injectables/FileService.html":{}}}],["counterclaim",{"_index":4289,"title":{},"body":{"license.html":{}}}],["counts",{"_index":1163,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["cr",{"_index":537,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["crash",{"_index":159,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["crashed",{"_index":223,"title":{},"body":{"classes/AbstractProcess.html":{},"miscellaneous/enumerations.html":{}}}],["crashes",{"_index":154,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["create",{"_index":482,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"injectables/BasicUserService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"classes/UserService.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["create(user",{"_index":1280,"title":{},"body":{"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["createbasicfindqb",{"_index":2513,"title":{},"body":{"injectables/FileService.html":{}}}],["createcanvas",{"_index":2716,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["createcanvas(200",{"_index":2743,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["created",{"_index":404,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"injectables/ProcessManagerService.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["createdatecolumn",{"_index":2156,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["createdirectoriesifnotexist",{"_index":2554,"title":{},"body":{"injectables/FileService.html":{}}}],["createdirectoriesifnotexist(dir",{"_index":2647,"title":{},"body":{"injectables/FileService.html":{}}}],["createdirectoriesifnotexist(directorypath",{"_index":1847,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["createfile",{"_index":1168,"title":{},"body":{"interfaces/BasicFileController.html":{},"controllers/FileController.html":{}}}],["createfile(file",{"_index":673,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["createfiledirectory",{"_index":2514,"title":{},"body":{"injectables/FileService.html":{}}}],["createfiledirectory(ispublic",{"_index":2524,"title":{},"body":{"injectables/FileService.html":{}}}],["createfileentity",{"_index":2515,"title":{},"body":{"injectables/FileService.html":{}}}],["createfileentity(ispublic",{"_index":2528,"title":{},"body":{"injectables/FileService.html":{}}}],["createfilemetadataentity",{"_index":2182,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{}}}],["createfilemetadataentity(buf",{"_index":2184,"title":{},"body":{"classes/FileMd.html":{},"injectables/FileMetadataService.html":{}}}],["createlocalizedstrings",{"_index":2832,"title":{},"body":{"injectables/LocaleService.html":{}}}],["createlocalizedstrings(value",{"_index":2838,"title":{},"body":{"injectables/LocaleService.html":{}}}],["createloginstance",{"_index":3387,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["createloginstance(processcode",{"_index":3403,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["createmedia",{"_index":1178,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["createmedia(file",{"_index":1183,"title":{},"body":{"interfaces/BasicMediaController.html":{},"controllers/MediaController.html":{}}}],["createorupdatefile",{"_index":2164,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{}}}],["createorupdatefile(file",{"_index":2170,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{}}}],["createorupdatemedia",{"_index":1244,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["createorupdatemedia(file",{"_index":3082,"title":{},"body":{"classes/MediaManager.html":{}}}],["createparamdecorator",{"_index":4493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createquerybuilder(\"file",{"_index":2611,"title":{},"body":{"injectables/FileService.html":{}}}],["creates",{"_index":1258,"title":{},"body":{"interfaces/BasicUserController.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LocaleService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["createuserprofile",{"_index":1252,"title":{},"body":{"interfaces/BasicUserController.html":{},"controllers/ProfileController.html":{}}}],["createuserprofile(@body",{"_index":3590,"title":{},"body":{"controllers/ProfileController.html":{}}}],["createuserprofile(profile",{"_index":1256,"title":{},"body":{"interfaces/BasicUserController.html":{},"controllers/ProfileController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["creating",{"_index":11,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["creation",{"_index":2203,"title":{},"body":{"injectables/FileMetadataService.html":{},"index.html":{}}}],["creator",{"_index":514,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["creator\"]?.description",{"_index":2403,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["credentials",{"_index":980,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["criteria",{"_index":3307,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["cron",{"_index":3453,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"index.html":{},"properties.html":{}}}],["cron/dist/job",{"_index":3522,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["cron_tab",{"_index":3553,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["cronjob",{"_index":3521,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["cronjob(processdata.crontab",{"_index":3542,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["crontab",{"_index":3370,"title":{},"body":{"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["cross",{"_index":4287,"title":{},"body":{"license.html":{}}}],["crud",{"_index":4052,"title":{},"body":{"index.html":{},"properties.html":{}}}],["crutch",{"_index":1830,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["crypto",{"_index":1812,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["crypto.createhash(\"sha256",{"_index":1842,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["cryptographic",{"_index":411,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["cs",{"_index":885,"title":{},"body":{"modules/AuthModule.html":{}}}],["cs.get(authconfig.jwt_secret",{"_index":887,"title":{},"body":{"modules/AuthModule.html":{}}}],["cs.getnumber",{"_index":890,"title":{},"body":{"modules/AuthModule.html":{}}}],["ctx",{"_index":2745,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"classes/LogService.html":{},"miscellaneous/variables.html":{}}}],["ctx.fillrect(0",{"_index":2754,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["ctx.fillstyle",{"_index":2752,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["ctx.font",{"_index":2757,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["ctx.methodname",{"_index":2949,"title":{},"body":{"classes/LogService.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":4494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.textbaseline",{"_index":2759,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["ctx?.filepath}:${ctx?.linenumber",{"_index":2956,"title":{},"body":{"classes/LogService.html":{}}}],["ctx?.methodname",{"_index":2957,"title":{},"body":{"classes/LogService.html":{}}}],["current",{"_index":34,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"interfaces/BasicUserController.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/variables.html":{}}}],["currentpage",{"_index":3296,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["currentpath",{"_index":1859,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["currentuser",{"_index":1129,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"controllers/ProfileController.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"controllers/XmlDataBridgeController.html":{},"miscellaneous/variables.html":{}}}],["currentuser.roles.find((v",{"_index":3757,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["custom",{"_index":604,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"classes/ForbiddenMsException.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["customary",{"_index":4348,"title":{},"body":{"license.html":{}}}],["customrendered",{"_index":605,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["d",{"_index":4313,"title":{},"body":{"license.html":{}}}],["d\\s()]*$/.test(processedvalue",{"_index":1739,"title":{},"body":{"injectables/ConfigService.html":{}}}],["damages",{"_index":4373,"title":{},"body":{"license.html":{}}}],["data",{"_index":174,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data.accesstoken",{"_index":819,"title":{},"body":{"controllers/AuthController.html":{}}}],["data.atexp",{"_index":823,"title":{},"body":{"controllers/AuthController.html":{}}}],["data.refreshtoken",{"_index":825,"title":{},"body":{"controllers/AuthController.html":{}}}],["data.rtexp",{"_index":826,"title":{},"body":{"controllers/AuthController.html":{}}}],["data.tostring",{"_index":3208,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["data:image/png;base64,${image",{"_index":2737,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["database",{"_index":1132,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"classes/DbExceptionFilter.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/FileService.html":{},"interfaces/TargetData.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["datasource",{"_index":2864,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["datasource.manager.connection.subscribers.push(this",{"_index":2875,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["date",{"_index":240,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["date\"]?.value",{"_index":2384,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["date(exifdata.icc[\"icc",{"_index":2383,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["date.tolocalestring",{"_index":253,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["date_time",{"_index":2790,"title":{},"body":{"entities/ImageFileMetadataEntity.html":{}}}],["dates",{"_index":1011,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["datetime",{"_index":462,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["db",{"_index":1346,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"index.html":{}}}],["db.properties",{"_index":4139,"title":{},"body":{"index.html":{}}}],["dbexceptionfilter",{"_index":1788,"title":{"classes/DbExceptionFilter.html":{}},"body":{"classes/DbExceptionFilter.html":{}}}],["dbms",{"_index":4126,"title":{},"body":{"index.html":{}}}],["debug",{"_index":2916,"title":{},"body":{"classes/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["debug(message",{"_index":2922,"title":{},"body":{"classes/LogService.html":{}}}],["declarations",{"_index":1321,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}],["decoding",{"_index":357,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["decomposed",{"_index":3934,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["decompress",{"_index":640,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["decorator",{"_index":4496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":695,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"controllers/CaptchaController.html":{},"classes/CaptchaRequest.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"classes/ExchangeTokenPayload.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"controllers/XmlDataBridgeController.html":{}}}],["decorators/for",{"_index":3657,"title":{},"body":{"guards/RolesGuard.html":{}}}],["deepequal(obj1",{"_index":3898,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["deepequal(obj1[key",{"_index":3906,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["deepequal(uniqueobj",{"_index":3888,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["deeply",{"_index":3893,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["default",{"_index":182,"title":{},"body":{"classes/AbstractProcess.html":{},"entities/AudioFileMetadataEntity.html":{},"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/ImageFileMetadataEntity.html":{},"injectables/LiteAuthGuard.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"entities/ProcessUnitEntity.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserSubscriber.html":{},"entities/VideoFileMetadataEntity.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["default.env",{"_index":4128,"title":{},"body":{"index.html":{}}}],["default_action_create",{"_index":2078,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["default_action_delete",{"_index":2080,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["default_action_duplicate",{"_index":2082,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["default_action_save",{"_index":2084,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["default_media_quality",{"_index":4467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_media_type",{"_index":2990,"title":{},"body":{"controllers/MediaController.html":{},"miscellaneous/variables.html":{}}}],["defaultactioncreate",{"_index":1082,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["defaultactiondelete",{"_index":1084,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["defaultactionduplicate",{"_index":1085,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["defaultactionsave",{"_index":1083,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["defaults",{"_index":1156,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["defend",{"_index":4402,"title":{},"body":{"license.html":{}}}],["defined",{"_index":30,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["defines",{"_index":899,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["defining",{"_index":1351,"title":{},"body":{"classes/CacheService.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"miscellaneous/variables.html":{}}}],["definition",{"_index":3136,"title":{},"body":{"interfaces/MessageBus.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["definitions",{"_index":4174,"title":{},"body":{"license.html":{}}}],["degrees",{"_index":658,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["del",{"_index":1353,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["del(...keys",{"_index":1359,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["delete",{"_index":317,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"controllers/MediaController.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["delete(\"/:id",{"_index":2132,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/ProfileController.html":{}}}],["delete(\"/entity/:target",{"_index":2021,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["delete('/:id",{"_index":2104,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{}}}],["delete('/entity/:target",{"_index":1994,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["deleted",{"_index":3682,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["deleteexistingconfigtsfiles",{"_index":1564,"title":{},"body":{"injectables/ConfigService.html":{}}}],["deleteexistingconfigtsfiles(directory",{"_index":1574,"title":{},"body":{"injectables/ConfigService.html":{}}}],["deletes",{"_index":1576,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{},"injectables/RedisCacheService.html":{}}}],["deleting",{"_index":3616,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["deliberate",{"_index":4368,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":1319,"title":{"dependencies.html":{}},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["depth",{"_index":434,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{}}}],["depth\"]?.value",{"_index":2351,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["derivative",{"_index":4219,"title":{},"body":{"license.html":{}}}],["derived",{"_index":901,"title":{},"body":{"classes/AuthService.html":{},"license.html":{}}}],["desc",{"_index":3310,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"miscellaneous/enumerations.html":{}}}],["descendants",{"_index":1490,"title":{},"body":{"injectables/CategoryService.html":{}}}],["describing",{"_index":487,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["description",{"_index":8,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["description\"]?.description",{"_index":2405,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["description.lang",{"_index":4538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deserialize",{"_index":3178,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["deserialized",{"_index":3179,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["deserializes",{"_index":3177,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["designated",{"_index":4250,"title":{},"body":{"license.html":{}}}],["desired",{"_index":4162,"title":{},"body":{"index.html":{}}}],["detailed",{"_index":1906,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"index.html":{}}}],["details",{"_index":4112,"title":{},"body":{"index.html":{}}}],["detect",{"_index":3851,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["determines",{"_index":32,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["determining",{"_index":4358,"title":{},"body":{"license.html":{}}}],["development",{"_index":4046,"title":{},"body":{"index.html":{},"properties.html":{}}}],["device",{"_index":442,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["device_manufacturer",{"_index":2766,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["device_model_number",{"_index":2768,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["devicemanufacturer",{"_index":505,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["devicemodelnumber",{"_index":506,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["different",{"_index":3641,"title":{},"body":{"classes/Roles.html":{},"index.html":{},"license.html":{}}}],["digital",{"_index":602,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["digitalzoomratio",{"_index":615,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["dir",{"_index":1749,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["direct",{"_index":4191,"title":{},"body":{"license.html":{}}}],["direction",{"_index":4194,"title":{},"body":{"license.html":{}}}],["directories",{"_index":1807,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"index.html":{},"additional-documentation/properties/media.properties.html":{}}}],["directory",{"_index":1577,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/media.properties.html":{}}}],["directorypath",{"_index":1846,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["directorystructure",{"_index":1805,"title":{"interfaces/DirectoryStructure.html":{}},"body":{"interfaces/DirectoryStructure.html":{}}}],["dirpath",{"_index":1760,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{}}}],["dirs",{"_index":1642,"title":{},"body":{"injectables/ConfigService.html":{}}}],["dirstruct",{"_index":3683,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["dirstruct[key].length",{"_index":3710,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["disables",{"_index":4625,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["disclaimer",{"_index":4351,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":4245,"title":{},"body":{"license.html":{}}}],["dispatch",{"_index":3124,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["dispatch(pattern",{"_index":3126,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["dispatched",{"_index":3219,"title":{},"body":{"classes/MsClient.html":{}}}],["dispatches",{"_index":3218,"title":{},"body":{"classes/MsClient.html":{}}}],["dispatching",{"_index":3212,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["display",{"_index":478,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/LogService.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["display_aspect_ratio",{"_index":3801,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["displayaspectratio",{"_index":648,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["displayed",{"_index":654,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["displaying",{"_index":4053,"title":{},"body":{"index.html":{}}}],["distance",{"_index":576,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["distribute",{"_index":4272,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":644,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/BasicFileController.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["distribution",{"_index":4173,"title":{},"body":{"license.html":{}}}],["document",{"_index":4178,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":4114,"title":{},"body":{"index.html":{},"license.html":{}}}],["documentations",{"_index":4117,"title":{},"body":{"index.html":{}}}],["don't",{"_index":4414,"title":{},"body":{"license.html":{}}}],["done",{"_index":4143,"title":{},"body":{"index.html":{}}}],["dotenv",{"_index":4016,"title":{},"body":{"dependencies.html":{}}}],["drawn",{"_index":2708,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["dto",{"_index":1882,"title":{},"body":{"injectables/DtoInterceptor.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["dto.decorator",{"_index":793,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["dtointerceptor",{"_index":1876,"title":{"injectables/DtoInterceptor.html":{}},"body":{"injectables/DtoInterceptor.html":{}}}],["duplicate",{"_index":1217,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["duplicates",{"_index":3883,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["duration",{"_index":339,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["during",{"_index":584,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["dynamic",{"_index":4071,"title":{},"body":{"index.html":{},"properties.html":{}}}],["dynamically",{"_index":1818,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dynamicmodule",{"_index":862,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["e",{"_index":220,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"entities/MediaTypeEntity.html":{},"miscellaneous/variables.html":{}}}],["e.code",{"_index":3109,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["e.g",{"_index":374,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["each",{"_index":1545,"title":{},"body":{"interfaces/ConfigItem.html":{},"license.html":{}}}],["easier",{"_index":4420,"title":{},"body":{"license.html":{}}}],["easy",{"_index":4090,"title":{},"body":{"index.html":{}}}],["edit",{"_index":532,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["editing",{"_index":1907,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["editorial",{"_index":4221,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":4100,"title":{},"body":{"index.html":{}}}],["effects",{"_index":629,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["efficient",{"_index":4074,"title":{},"body":{"index.html":{}}}],["elaborations",{"_index":4224,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":4238,"title":{},"body":{"license.html":{}}}],["elevation",{"_index":426,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["email",{"_index":1267,"title":{},"body":{"interfaces/BasicUserController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["embedded",{"_index":1074,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["emit",{"_index":3125,"title":{},"body":{"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{}}}],["emit(chanel",{"_index":3146,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["emit(pattern",{"_index":3131,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["emits",{"_index":3148,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{}}}],["emitted",{"_index":3221,"title":{},"body":{"classes/MsClient.html":{}}}],["empty",{"_index":2220,"title":{},"body":{"injectables/FileMetadataService.html":{},"injectables/NotEmptyPipe.html":{}}}],["empty.pipe",{"_index":2112,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["empty.pipe.ts",{"_index":3280,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["empty.pipe.ts:23",{"_index":3284,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["empty.pipe.ts:26",{"_index":3287,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["enabled",{"_index":1035,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"controllers/CaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["enables",{"_index":4624,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["enabling",{"_index":4073,"title":{},"body":{"index.html":{}}}],["encapsulates",{"_index":361,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["enclosed",{"_index":4410,"title":{},"body":{"license.html":{}}}],["encode",{"_index":381,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["encoded",{"_index":2710,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["encoding",{"_index":356,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/variables.html":{}}}],["encrypting",{"_index":4094,"title":{},"body":{"index.html":{}}}],["end",{"_index":1671,"title":{},"body":{"injectables/ConfigService.html":{},"license.html":{}}}],["ensure",{"_index":3282,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["ensuring",{"_index":632,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/VideoFileMetadata.html":{}}}],["entire",{"_index":4525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entities",{"_index":692,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicExplorerController.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":264,"title":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{}},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["entity(\"categories",{"_index":1449,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["entity(\"category_restriction",{"_index":1480,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["entity(\"explorer_actions",{"_index":1921,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["entity(\"explorer_column_renderers",{"_index":1982,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["entity(\"explorer_columns",{"_index":1972,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["entity(\"explorer_tabs",{"_index":2066,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["entity(\"explorer_targets",{"_index":2095,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["entity(\"file_metadata",{"_index":2199,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["entity(\"file_metadata_audio",{"_index":725,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["entity(\"file_metadata_gps",{"_index":2684,"title":{},"body":{"entities/GpsFileMetadataEntity.html":{}}}],["entity(\"file_metadata_icc",{"_index":2786,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["entity(\"file_metadata_image",{"_index":2791,"title":{},"body":{"entities/ImageFileMetadataEntity.html":{}}}],["entity(\"file_metadata_video",{"_index":3806,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["entity(\"files",{"_index":2161,"title":{},"body":{"entities/FileEntity.html":{}}}],["entity(\"languages",{"_index":2813,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["entity(\"localized_medias",{"_index":2900,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["entity(\"localized_strings",{"_index":2908,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["entity(\"medias",{"_index":3039,"title":{},"body":{"entities/MediaEntity.html":{}}}],["entity(\"medias_ext",{"_index":3046,"title":{},"body":{"entities/MediaExtEntity.html":{}}}],["entity(\"medias_files",{"_index":3068,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["entity(\"medias_format",{"_index":3079,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["entity(\"medias_types",{"_index":3117,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["entity(\"process_logs",{"_index":3383,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["entity(\"process_units",{"_index":3562,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["entity(\"users",{"_index":3749,"title":{},"body":{"entities/UserEntity.html":{}}}],["entity(\"users_roles",{"_index":3776,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["entity.code",{"_index":2578,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.constructor.name",{"_index":2884,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["entity.id",{"_index":2585,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.id.tostring",{"_index":2564,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.metadata",{"_index":2580,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.name",{"_index":2577,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.path",{"_index":2576,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.public",{"_index":2561,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.size",{"_index":2574,"title":{},"body":{"injectables/FileService.html":{}}}],["entity/audio",{"_index":2229,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/category.entity",{"_index":1465,"title":{},"body":{"modules/CategoryModule.html":{},"injectables/CategoryService.html":{}}}],["entity/exif",{"_index":2233,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/explorer",{"_index":2032,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["entity/file",{"_index":2181,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{}}}],["entity/file.entity",{"_index":2180,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{}}}],["entity/gps",{"_index":2232,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/icc",{"_index":2234,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/image",{"_index":2231,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/language.entity",{"_index":2825,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{}}}],["entity/localized",{"_index":2826,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{}}}],["entity/media",{"_index":3096,"title":{},"body":{"modules/MediaModule.html":{}}}],["entity/media.entity",{"_index":3095,"title":{},"body":{"modules/MediaModule.html":{}}}],["entity/process.log.entity",{"_index":189,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{}}}],["entity/process.unit.entity",{"_index":3432,"title":{},"body":{"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{}}}],["entity/user.entity",{"_index":298,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"controllers/ProfileController.html":{},"modules/UserModule.html":{}}}],["entity/video",{"_index":2230,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity_save_handler",{"_index":4469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entityid",{"_index":2525,"title":{},"body":{"injectables/FileService.html":{}}}],["entityidforpatch",{"_index":1230,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["entitymanager.remove(myentity",{"_index":2861,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["entityname",{"_index":1231,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["entitysavehandler",{"_index":1127,"title":{"interfaces/EntitySaveHandler.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["entitysubscriber",{"_index":2857,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["entitysubscriberinterface",{"_index":2872,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["entries",{"_index":4635,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["entry",{"_index":179,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["enum",{"_index":1916,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"entities/ProcessUnitEntity.html":{},"miscellaneous/enumerations.html":{}}}],["enumeration",{"_index":3309,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["enumerations",{"_index":4032,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":4577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environments",{"_index":4109,"title":{},"body":{"index.html":{}}}],["envloader",{"_index":1334,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["envloader.loadenvironment(logger",{"_index":1340,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":3894,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["err",{"_index":2569,"title":{},"body":{"injectables/FileService.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["err.code",{"_index":3253,"title":{},"body":{"classes/MsClient.html":{}}}],["err.message",{"_index":3250,"title":{},"body":{"classes/MsClient.html":{}}}],["err.stack",{"_index":3251,"title":{},"body":{"classes/MsClient.html":{}}}],["err_token_a",{"_index":923,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["err_token_r",{"_index":925,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":149,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AuthService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"classes/LogService.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error().stack",{"_index":2965,"title":{},"body":{"classes/LogService.html":{}}}],["error(`invalid",{"_index":1728,"title":{},"body":{"injectables/ConfigService.html":{}}}],["error(message",{"_index":2924,"title":{},"body":{"classes/LogService.html":{}}}],["error.name",{"_index":3254,"title":{},"body":{"classes/MsClient.html":{}}}],["error?.type",{"_index":3248,"title":{},"body":{"classes/MsClient.html":{}}}],["errors",{"_index":921,"title":{},"body":{"classes/AuthService.html":{},"classes/DbExceptionFilter.html":{},"classes/MsClient.html":{},"miscellaneous/variables.html":{}}}],["es",{"_index":1828,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["etc",{"_index":4054,"title":{},"body":{"index.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["eval('import(\"file",{"_index":1832,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["eval(processedvalue",{"_index":1740,"title":{},"body":{"injectables/ConfigService.html":{}}}],["even",{"_index":4387,"title":{},"body":{"license.html":{}}}],["event",{"_index":286,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/LocaleSubscriber.html":{},"classes/UserSubscriber.html":{},"license.html":{}}}],["event.entity",{"_index":2876,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["event.entity.login",{"_index":3797,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["event.entityid",{"_index":2885,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["event.manager.remove(relatedentity",{"_index":2889,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["events",{"_index":268,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/LocaleSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["eventsubscriber",{"_index":2873,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["ex",{"_index":3614,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["example",{"_index":1001,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"injectables/LocaleSubscriber.html":{},"classes/LoginPayload.html":{},"index.html":{},"license.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["examples/web",{"_index":4138,"title":{},"body":{"index.html":{}}}],["exceeding",{"_index":4630,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["except",{"_index":758,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["exception",{"_index":961,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/DbExceptionFilter.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsClient.html":{},"classes/NotFoundMsException.html":{},"classes/Roles.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":1804,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["exceptions",{"_index":3275,"title":{},"body":{"classes/MsException.html":{}}}],["exceptions/ms.exception",{"_index":3233,"title":{},"body":{"classes/MsClient.html":{}}}],["exchange",{"_index":735,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["exchange(payload",{"_index":737,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/BasicAuthController.html":{}}}],["exchangeable",{"_index":437,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exchanged",{"_index":975,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["exchanges",{"_index":973,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["exchangetoken",{"_index":903,"title":{},"body":{"classes/AuthService.html":{}}}],["exchangetoken(refreshtoken",{"_index":911,"title":{},"body":{"classes/AuthService.html":{}}}],["exchangetokenpayload",{"_index":738,"title":{"classes/ExchangeTokenPayload.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["exclude",{"_index":1205,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["excludeproperties",{"_index":3933,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["excluding",{"_index":4247,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":4262,"title":{},"body":{"license.html":{}}}],["execute",{"_index":128,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/enumerations.html":{}}}],["executed",{"_index":206,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"license.html":{}}}],["executes",{"_index":3676,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["execution",{"_index":49,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["executioncontext",{"_index":29,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/DtoInterceptor.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["exercise",{"_index":4363,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":4203,"title":{},"body":{"license.html":{}}}],["exif",{"_index":436,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["exifdata",{"_index":2329,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif",{"_index":2408,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.aperturevalue?.description",{"_index":2446,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.brightnessvalue?.description",{"_index":2448,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.colorspace?.description",{"_index":2464,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.contrast?.description",{"_index":2486,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.customrendered?.description",{"_index":2476,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.digitalzoomratio?.description",{"_index":2482,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exifversion?.description",{"_index":2440,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exposurebiasvalue?.description",{"_index":2450,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exposuremode?.description",{"_index":2478,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exposureprogram?.description",{"_index":2436,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exposuretime?.description",{"_index":2432,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.flash?.description",{"_index":2458,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.flashpixversion?.description",{"_index":2462,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.fnumber?.description",{"_index":2434,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.focallength?.description",{"_index":2460,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.interoperabilityindex?.description",{"_index":2500,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.isospeedratings?.description",{"_index":2438,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.lensmake?.description",{"_index":2494,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.lensmodel?.description",{"_index":2496,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.make?.description",{"_index":2411,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.maxaperturevalue?.description",{"_index":2452,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.meteringmode?.description",{"_index":2456,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.model?.description",{"_index":2413,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.offsettime?.description",{"_index":2442,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.orientation?.description",{"_index":2415,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.pixelxdimension?.description",{"_index":2466,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.pixelydimension?.description",{"_index":2468,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.resolutionunit?.description",{"_index":2421,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.saturation?.description",{"_index":2488,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.scenecapturetype?.description",{"_index":2484,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.scenetype?.description",{"_index":2474,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.sensingmethod?.description",{"_index":2472,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.sharpness?.description",{"_index":2490,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.shutterspeedvalue?.description",{"_index":2444,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.software?.description",{"_index":2423,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.subjectdistance?.description",{"_index":2454,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.subjectdistancerange?.description",{"_index":2492,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.whitebalance?.description",{"_index":2480,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.xresolution?.description",{"_index":2417,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.ycbcrpositioning?.description",{"_index":2425,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.yresolution?.description",{"_index":2419,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"compositeimage\"]?.description",{"_index":2498,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"exif",{"_index":2427,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"gps",{"_index":2430,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"interoperability",{"_index":2470,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"interoperabilityversion\"]?.description",{"_index":2502,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.file[\"bits",{"_index":2335,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.file[\"color",{"_index":2343,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.file[\"image",{"_index":2338,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.file[\"subsampling\"]?.description",{"_index":2346,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.gps",{"_index":2361,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.gps?.altitude",{"_index":2364,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.gps?.latitude",{"_index":2368,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.gps?.longitude",{"_index":2366,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc",{"_index":2369,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"connection",{"_index":2380,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"device",{"_index":2393,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"icc",{"_index":2385,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"primary",{"_index":2390,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"profile",{"_index":2372,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"profile/device",{"_index":2375,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"rendering",{"_index":2398,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png",{"_index":2347,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"bit",{"_index":2350,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"color",{"_index":2353,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"compression\"]?.description",{"_index":2356,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"filter\"]?.description",{"_index":2358,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"image",{"_index":2348,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"interlace\"]?.description",{"_index":2360,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exiffilemetadata",{"_index":443,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exiffilemetadataentity",{"_index":2188,"title":{},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{}}}],["exififdpointer",{"_index":546,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exifreader",{"_index":2225,"title":{},"body":{"injectables/FileMetadataService.html":{},"dependencies.html":{}}}],["exifreader.load(buf",{"_index":2330,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifversion",{"_index":564,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exist",{"_index":1845,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["existed",{"_index":2849,"title":{},"body":{"injectables/LocaleService.html":{}}}],["existed?.id",{"_index":2852,"title":{},"body":{"injectables/LocaleService.html":{}}}],["existedentityid",{"_index":1245,"title":{},"body":{"interfaces/BasicMediaController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["existing",{"_index":1186,"title":{},"body":{"interfaces/BasicMediaController.html":{},"injectables/ConfigService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["exists",{"_index":2560,"title":{},"body":{"injectables/FileService.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["expanded",{"_index":2331,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["expected",{"_index":1024,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["expiration",{"_index":1010,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/CacheService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"injectables/RedisCacheService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["expire",{"_index":1354,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["expire(key",{"_index":1361,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["expires",{"_index":822,"title":{},"body":{"controllers/AuthController.html":{}}}],["expiresin",{"_index":889,"title":{},"body":{"modules/AuthModule.html":{},"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["explaining",{"_index":516,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["explicitarray",{"_index":3856,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["explicitchildren",{"_index":3858,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["explicitly",{"_index":4333,"title":{},"body":{"license.html":{}}}],["explorer",{"_index":1070,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["explorer.constants",{"_index":1071,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorer.controller",{"_index":2034,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["explorer.providesavehandlers",{"_index":2039,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["explorer.service",{"_index":2031,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["explorer.types",{"_index":1918,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["explorer.variation",{"_index":1105,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorer/explorer.module",{"_index":3999,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["exploreraction",{"_index":1081,"title":{"interfaces/ExplorerAction.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["exploreractionentity",{"_index":1901,"title":{"entities/ExplorerActionEntity.html":{}},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerTargetEntity.html":{}}}],["explorercolumn",{"_index":1079,"title":{"interfaces/ExplorerColumn.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorercolumnentity",{"_index":1923,"title":{"entities/ExplorerColumnEntity.html":{}},"body":{"entities/ExplorerColumnEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTargetEntity.html":{}}}],["explorercolumnrenderer",{"_index":1099,"title":{"interfaces/ExplorerColumnRenderer.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorercolumnrendererentity",{"_index":1938,"title":{"entities/ExplorerColumnRendererEntity.html":{}},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{}}}],["explorercontroller",{"_index":1983,"title":{"controllers/ExplorerController.html":{}},"body":{"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{}}}],["explorermodule",{"_index":2023,"title":{"modules/ExplorerModule.html":{}},"body":{"modules/ExplorerModule.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{}}}],["explorermodule.forroot",{"_index":3994,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["explorermoduleoptions",{"_index":1119,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["explorerselectparams",{"_index":1118,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["explorerservice",{"_index":1130,"title":{"classes/ExplorerService.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorertab",{"_index":1102,"title":{"interfaces/ExplorerTab.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorertabentity",{"_index":1960,"title":{"entities/ExplorerTabEntity.html":{}},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["explorertarget",{"_index":1062,"title":{"interfaces/ExplorerTarget.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["explorertargetentity",{"_index":1962,"title":{"entities/ExplorerTargetEntity.html":{}},"body":{"entities/ExplorerColumnEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{}}}],["explorertargetparams",{"_index":1112,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["exploring",{"_index":2025,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["export",{"_index":86,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["export(@body",{"_index":3955,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["export(body",{"_index":3938,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["export.service",{"_index":3998,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["exporting",{"_index":4062,"title":{},"body":{"index.html":{}}}],["exports",{"_index":896,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"overview.html":{}}}],["exportservice",{"_index":3931,"title":{},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["exportxml",{"_index":3830,"title":{},"body":{"classes/XdbExportService.html":{}}}],["exportxml(params",{"_index":3831,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["expose",{"_index":994,"title":{},"body":{"interfaces/BasicAuthController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["expose()@type(undefined",{"_index":2799,"title":{},"body":{"classes/JwtDto.html":{},"classes/MediaDto.html":{},"classes/MediaFileDto.html":{},"classes/MediaTypeDto.html":{},"classes/UserDto.html":{}}}],["exposure",{"_index":549,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exposurebias",{"_index":573,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exposuremode",{"_index":607,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exposureprogram",{"_index":558,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exposuretime",{"_index":553,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["express",{"_index":81,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"classes/ExchangeTokenPayload.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"interfaces/UpsertMediaRequest.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["express.multer.file",{"_index":674,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"controllers/XmlDataBridgeController.html":{}}}],["expression",{"_index":1826,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["ext",{"_index":410,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/variables.html":{}}}],["ext.entity",{"_index":3116,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["ext.entity.ts",{"_index":3042,"title":{},"body":{"entities/MediaExtEntity.html":{}}}],["ext.entity.ts:11",{"_index":3044,"title":{},"body":{"entities/MediaExtEntity.html":{}}}],["ext.entity.ts:15",{"_index":3045,"title":{},"body":{"entities/MediaExtEntity.html":{}}}],["extend",{"_index":4089,"title":{},"body":{"index.html":{}}}],["extended",{"_index":4092,"title":{},"body":{"index.html":{}}}],["extending",{"_index":964,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["extends",{"_index":841,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"injectables/LiteAuthGuard.html":{},"classes/LogService.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"classes/UserSubscriber.html":{}}}],["extensibility",{"_index":4056,"title":{},"body":{"index.html":{}}}],["extension",{"_index":409,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/variables.html":{}}}],["extensions",{"_index":3043,"title":{},"body":{"entities/MediaExtEntity.html":{},"miscellaneous/variables.html":{}}}],["extracting",{"_index":4497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extracts",{"_index":56,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["f",{"_index":3026,"title":{},"body":{"entities/MediaEntity.html":{}}}],["f.media",{"_index":3027,"title":{},"body":{"entities/MediaEntity.html":{}}}],["failed",{"_index":2568,"title":{},"body":{"injectables/FileService.html":{}}}],["failure",{"_index":4383,"title":{},"body":{"license.html":{}}}],["false",{"_index":670,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"controllers/CaptchaController.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"entities/LocalizedMediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"entities/UserEntity.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["family",{"_index":2702,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["fast",{"_index":1559,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{}}}],["features",{"_index":4069,"title":{},"body":{"index.html":{}}}],["fee",{"_index":4391,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":1144,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["fetching",{"_index":843,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["fetchuser",{"_index":20,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["ffprobe",{"_index":2226,"title":{},"body":{"injectables/FileMetadataService.html":{},"dependencies.html":{}}}],["ffprobe(filepath",{"_index":2262,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ffprobemd",{"_index":2261,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ffprobemd.streams.find((v",{"_index":2265,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ffprobestatic",{"_index":2227,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ffprobestatic.path",{"_index":2263,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["field",{"_index":364,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["fieldname",{"_index":3285,"title":{},"body":{"injectables/NotEmptyPipe.html":{},"interfaces/XdbRequest.html":{}}}],["fields",{"_index":4409,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":4196,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{"interfaces/File.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["file')@useinterceptors(undefined)@forroles(roles.root",{"_index":3946,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["file's",{"_index":2532,"title":{},"body":{"injectables/FileService.html":{}}}],["file.buffer",{"_index":2121,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{}}}],["file.constants",{"_index":387,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["file.controller",{"_index":2507,"title":{},"body":{"modules/FileModule.html":{}}}],["file.entity",{"_index":3037,"title":{},"body":{"entities/MediaEntity.html":{},"modules/MediaModule.html":{}}}],["file.entity.ts",{"_index":3055,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:18",{"_index":3062,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:22",{"_index":3057,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:26",{"_index":3064,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:29",{"_index":3066,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:32",{"_index":3061,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:35",{"_index":3065,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:38",{"_index":3059,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:41",{"_index":3063,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.id.tostring",{"_index":2598,"title":{},"body":{"injectables/FileService.html":{}}}],["file.isdirectory",{"_index":1701,"title":{},"body":{"injectables/ConfigService.html":{}}}],["file.isfile",{"_index":1689,"title":{},"body":{"injectables/ConfigService.html":{}}}],["file.length",{"_index":2575,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata",{"_index":2599,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata.audio",{"_index":2604,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata.gps",{"_index":2602,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata.image",{"_index":2600,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata.video",{"_index":2606,"title":{},"body":{"injectables/FileService.html":{}}}],["file.name",{"_index":1690,"title":{},"body":{"injectables/ConfigService.html":{}}}],["file.originalname",{"_index":2123,"title":{},"body":{"controllers/FileController.html":{}}}],["file.originalname.split(\".\").pop",{"_index":2122,"title":{},"body":{"controllers/FileController.html":{}}}],["file.path",{"_index":2597,"title":{},"body":{"injectables/FileService.html":{}}}],["file.private.dir",{"_index":4646,"title":{},"body":{"additional-documentation/properties/file.properties.html":{}}}],["file.properties",{"_index":4643,"title":{"additional-documentation/properties/file.properties.html":{}},"body":{"additional-documentation/properties/file.properties.html":{}}}],["file.public",{"_index":2595,"title":{},"body":{"injectables/FileService.html":{}}}],["file.public.dir",{"_index":4644,"title":{},"body":{"additional-documentation/properties/file.properties.html":{}}}],["file.service",{"_index":2505,"title":{},"body":{"modules/FileModule.html":{}}}],["file.types",{"_index":724,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"entities/FileMetadataEntity.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["file/entity/file",{"_index":3038,"title":{},"body":{"entities/MediaEntity.html":{}}}],["file/file.module",{"_index":3097,"title":{},"body":{"modules/MediaModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["file/file.types",{"_index":1206,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["filebuffer",{"_index":1838,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fileconfig",{"_index":2548,"title":{},"body":{"injectables/FileService.html":{}}}],["fileconfig.private_dir",{"_index":2551,"title":{},"body":{"injectables/FileService.html":{}}}],["fileconfig.public_dir",{"_index":2553,"title":{},"body":{"injectables/FileService.html":{}}}],["filecontent",{"_index":1704,"title":{},"body":{"injectables/ConfigService.html":{}}}],["filecontroller",{"_index":2096,"title":{"controllers/FileController.html":{}},"body":{"controllers/FileController.html":{},"modules/FileModule.html":{}}}],["filed",{"_index":4297,"title":{},"body":{"license.html":{}}}],["filedata",{"_index":3911,"title":{},"body":{"classes/XdbImportService.html":{}}}],["fileentity",{"_index":2135,"title":{"entities/FileEntity.html":{}},"body":{"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{}}}],["fileinterceptor",{"_index":2108,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["filemanager",{"_index":385,"title":{"classes/FileManager.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["filemanager:131",{"_index":2536,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:148",{"_index":2534,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:159",{"_index":2538,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:168",{"_index":2537,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:177",{"_index":2539,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:187",{"_index":2545,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:66",{"_index":2530,"title":{},"body":{"injectables/FileService.html":{}}}],["filemd",{"_index":386,"title":{"classes/FileMd.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["filemd:45",{"_index":2208,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filemetadata",{"_index":403,"title":{"interfaces/FileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["filemetadataentity",{"_index":2140,"title":{"entities/FileMetadataEntity.html":{}},"body":{"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/MediaEntity.html":{}}}],["filemetadataservice",{"_index":2200,"title":{"injectables/FileMetadataService.html":{}},"body":{"injectables/FileMetadataService.html":{},"modules/FileModule.html":{}}}],["filemodule",{"_index":689,"title":{"modules/FileModule.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"modules/MediaModule.html":{},"interfaces/VideoFileMetadata.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["filemodule.forroot",{"_index":3099,"title":{},"body":{"modules/MediaModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["filemoduleoptions",{"_index":690,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["filename",{"_index":2573,"title":{},"body":{"injectables/FileService.html":{}}}],["filenameprefix",{"_index":1612,"title":{},"body":{"injectables/ConfigService.html":{}}}],["filepath",{"_index":1615,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"controllers/FileController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/LogService.html":{}}}],["filepromises",{"_index":1862,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["filerep",{"_index":2518,"title":{},"body":{"injectables/FileService.html":{}}}],["filerow",{"_index":3926,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["files",{"_index":1214,"title":{},"body":{"interfaces/BasicMediaController.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"entities/FileEntity.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["files.format",{"_index":4534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files.map(async",{"_index":1863,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["files_encoding",{"_index":1630,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["filescount",{"_index":3684,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["fileservice",{"_index":2114,"title":{"injectables/FileService.html":{}},"body":{"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{}}}],["filesutils",{"_index":1833,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["filesutils.createdirectoriesifnotexist",{"_index":2555,"title":{},"body":{"injectables/FileService.html":{}}}],["filesutils.filetype",{"_index":2237,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filesutils.gethashfrombuffer",{"_index":2236,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filesutils.readdirectoryrecursively",{"_index":3697,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["filetype",{"_index":1834,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{}}}],["filetype().filetypefrombuffer(buf",{"_index":2239,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filetypedata",{"_index":2238,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filetypedata.ext",{"_index":2245,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filetypedata.mime",{"_index":2243,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filetypemodule",{"_index":1820,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["filetypemodule.lib",{"_index":1835,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fill",{"_index":1135,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"index.html":{}}}],["filter",{"_index":473,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/VideoFileMetadata.html":{}}}],["filter.ts",{"_index":1790,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["filter.ts:27",{"_index":1798,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["filtering",{"_index":470,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["find",{"_index":1110,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"injectables/BasicUserService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"interfaces/TargetData.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["findbycode",{"_index":2165,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{},"classes/MediaManager.html":{}}}],["findbycode(code",{"_index":1237,"title":{},"body":{"interfaces/BasicMediaController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["findbyid",{"_index":1289,"title":{},"body":{"injectables/BasicUserService.html":{},"classes/UserService.html":{}}}],["findbyid(id",{"_index":1278,"title":{},"body":{"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["findbylogin",{"_index":1290,"title":{},"body":{"injectables/BasicUserService.html":{},"classes/UserService.html":{}}}],["findbylogin(login",{"_index":1277,"title":{},"body":{"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["findfilebyid",{"_index":2166,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{}}}],["findfilebyid(id",{"_index":2173,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{}}}],["finding",{"_index":2512,"title":{},"body":{"injectables/FileService.html":{}}}],["findmediabyid",{"_index":3080,"title":{},"body":{"classes/MediaManager.html":{}}}],["findmediabyid(id",{"_index":1238,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["findprivatebyid",{"_index":2167,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{},"classes/MediaManager.html":{}}}],["findprivatebyid(id",{"_index":1241,"title":{},"body":{"interfaces/BasicMediaController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["findpublicbyid",{"_index":2168,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{},"classes/MediaManager.html":{}}}],["findpublicbyid(id",{"_index":1240,"title":{},"body":{"interfaces/BasicMediaController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["finds",{"_index":2535,"title":{},"body":{"injectables/FileService.html":{}}}],["finished",{"_index":217,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["finishes",{"_index":161,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["first",{"_index":3896,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["first_name",{"_index":3739,"title":{},"body":{"entities/UserEntity.html":{}}}],["firstname",{"_index":1269,"title":{},"body":{"interfaces/BasicUserController.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["fitness",{"_index":4355,"title":{},"body":{"license.html":{}}}],["flag",{"_index":1854,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["flash",{"_index":583,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["flashpix",{"_index":589,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["flashpixversion",{"_index":590,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["flexibility",{"_index":4055,"title":{},"body":{"index.html":{}}}],["flexibly",{"_index":4107,"title":{},"body":{"index.html":{}}}],["fn.ts",{"_index":4473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fnumber",{"_index":555,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["focal",{"_index":585,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["focallength",{"_index":588,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["folder",{"_index":3686,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{},"index.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["folders",{"_index":3681,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["folderscount",{"_index":3685,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["following",{"_index":4301,"title":{},"body":{"license.html":{}}}],["font",{"_index":2701,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["for_roles",{"_index":4499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidden",{"_index":2654,"title":{},"body":{"classes/ForbiddenMsException.html":{}}}],["forbiddenexception",{"_index":75,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["forbiddenexception(\"invalid",{"_index":813,"title":{},"body":{"controllers/AuthController.html":{}}}],["forbiddenexception(access_token_error_msg",{"_index":99,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["forbiddenmsexception",{"_index":2652,"title":{"classes/ForbiddenMsException.html":{}},"body":{"classes/ForbiddenMsException.html":{}}}],["force",{"_index":937,"title":{},"body":{"classes/AuthService.html":{},"injectables/FileService.html":{},"injectables/ProcessManagerService.html":{},"classes/TmpDirCleanerProcess.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["forinitializer",{"_index":1551,"title":{},"body":{"modules/ConfigModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["forinitializer(typeormrootmodule",{"_index":3988,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["form",{"_index":2068,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"license.html":{}}}],["format",{"_index":292,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["format.entity",{"_index":3067,"title":{},"body":{"entities/MediaFileEntity.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{}}}],["format.entity.ts",{"_index":3074,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["format.entity.ts:11",{"_index":3075,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["format.entity.ts:15",{"_index":3077,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["format.entity.ts:18",{"_index":3078,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["format.entity.ts:21",{"_index":3076,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["formats",{"_index":1225,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["formatted",{"_index":2937,"title":{},"body":{"classes/LogService.html":{}}}],["forroles",{"_index":1530,"title":{},"body":{"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"controllers/XmlDataBridgeController.html":{},"miscellaneous/variables.html":{}}}],["forroles(roles.admin",{"_index":1537,"title":{},"body":{"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["forroles(roles.root",{"_index":3950,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["forroot",{"_index":856,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["forroot(options",{"_index":857,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["forrootasync",{"_index":1394,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/RedisModule.html":{}}}],["forrootasync(options",{"_index":1395,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/RedisModule.html":{}}}],["forwardreference",{"_index":3918,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["found",{"_index":59,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/NotFoundMsException.html":{}}}],["founduser",{"_index":318,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["founduser.password",{"_index":323,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["fourth",{"_index":2968,"title":{},"body":{"classes/LogService.html":{}}}],["frame",{"_index":652,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["frame_rate",{"_index":3803,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["framerate",{"_index":655,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["frames",{"_index":653,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["framework",{"_index":4044,"title":{},"body":{"index.html":{},"properties.html":{}}}],["free",{"_index":4265,"title":{},"body":{"license.html":{}}}],["from(value",{"_index":4588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fs",{"_index":1627,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["fs.existssync(localpropertiespath",{"_index":1696,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.existssync(tmpdir",{"_index":3700,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["fs.promises",{"_index":2565,"title":{},"body":{"injectables/FileService.html":{}}}],["fs.promises.access(directorypath",{"_index":1848,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.mkdir(directorypath",{"_index":1849,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.mkdir(gensrcpath",{"_index":1774,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readdir(currentpath",{"_index":1861,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.readdir(directory",{"_index":1686,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readdir(fullpath",{"_index":1747,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readfile",{"_index":1698,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readfile(fullpath",{"_index":1705,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readfile(kppath",{"_index":1693,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readfile(path",{"_index":1855,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.rm(tmpdir",{"_index":3707,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["fs.promises.stat(filepath",{"_index":1866,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.unlink(path.join(fullpath",{"_index":1755,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.writefile(`${outputpath}/${filename",{"_index":2579,"title":{},"body":{"injectables/FileService.html":{}}}],["fs.promises.writefile(configfilepath",{"_index":1776,"title":{},"body":{"injectables/ConfigService.html":{}}}],["ft",{"_index":1829,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["ft.lib",{"_index":1831,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["full",{"_index":842,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/FileService.html":{},"miscellaneous/variables.html":{}}}],["fullkey",{"_index":1680,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fullpath",{"_index":1700,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fullrelations",{"_index":1113,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["fun",{"_index":3198,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["fun(this.safedeserialize(data",{"_index":3200,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["function",{"_index":1825,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["functionality",{"_index":661,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"modules/CacheModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"injectables/RedisCacheService.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"modules/WarlockModule.html":{},"index.html":{}}}],["functions",{"_index":1209,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["future",{"_index":4159,"title":{},"body":{"index.html":{}}}],["gateway",{"_index":1794,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["gen",{"_index":784,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/variables.html":{}}}],["gen_src_dir",{"_index":1631,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["gencnfdir",{"_index":1597,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":4149,"title":{},"body":{"index.html":{}}}],["generatecaptcha",{"_index":1031,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["generatecolor",{"_index":2688,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["generateconfigtsfiles",{"_index":1565,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generated",{"_index":943,"title":{},"body":{"classes/AuthService.html":{},"injectables/ConfigService.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["generatedcontent",{"_index":1741,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generatedfilecontent",{"_index":1772,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generatedtsoutput",{"_index":1561,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generatenamespacewithvariables",{"_index":1566,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generatenamespacewithvariables(namespacename",{"_index":1580,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generaterandomint",{"_index":2727,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["generaterandomstring",{"_index":2725,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["generaterandomstring(5",{"_index":2730,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["generates",{"_index":941,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"miscellaneous/variables.html":{}}}],["generating",{"_index":981,"title":{},"body":{"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["generation",{"_index":2663,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"index.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["generator",{"_index":4435,"title":{},"body":{"properties.html":{}}}],["genre",{"_index":340,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["gensrcfile",{"_index":1750,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcfile.isfile",{"_index":1751,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcfile.name",{"_index":1754,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcfile.name.endswith(config_file_ext_pattern",{"_index":1752,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcfiles",{"_index":1746,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcpath",{"_index":1762,"title":{},"body":{"injectables/ConfigService.html":{}}}],["get(\"/:id",{"_index":2129,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/ProfileController.html":{}}}],["get(\"/entity/:target",{"_index":2014,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["get(\"/log/:id",{"_index":3362,"title":{},"body":{"controllers/ProcessController.html":{}}}],["get(\"/pageable/:target",{"_index":2017,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["get(\"/private/:id",{"_index":2124,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{}}}],["get(\"/start/:code",{"_index":3346,"title":{},"body":{"controllers/ProcessController.html":{}}}],["get(\"/stats/:code",{"_index":3355,"title":{},"body":{"controllers/ProcessController.html":{}}}],["get(\"/stop/:code",{"_index":3349,"title":{},"body":{"controllers/ProcessController.html":{}}}],["get(\"/target",{"_index":2005,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["get(\"/target/:target",{"_index":2010,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["get(\"/toggle/:code",{"_index":3352,"title":{},"body":{"controllers/ProcessController.html":{}}}],["get('/:id",{"_index":2100,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{}}}],["get('/entity/:target",{"_index":1985,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["get('/log/:id')@forroles(roles.admin",{"_index":3327,"title":{},"body":{"controllers/ProcessController.html":{}}}],["get('/pageable/:target",{"_index":1987,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["get('/private/:id",{"_index":2102,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{}}}],["get('/start/:code')@forroles(roles.admin",{"_index":3333,"title":{},"body":{"controllers/ProcessController.html":{}}}],["get('/stats/:code')@forroles(roles.admin",{"_index":3330,"title":{},"body":{"controllers/ProcessController.html":{}}}],["get('/stop/:code')@forroles(roles.admin",{"_index":3336,"title":{},"body":{"controllers/ProcessController.html":{}}}],["get('/target",{"_index":1991,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["get('/target/:target",{"_index":1989,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["get('/toggle/:code')@forroles(roles.admin",{"_index":3339,"title":{},"body":{"controllers/ProcessController.html":{}}}],["get(key",{"_index":1363,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getaccesstokenfromrequest",{"_index":26,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["getaccesstokenfromrequest(req",{"_index":54,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["getboolean",{"_index":1355,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getboolean(key",{"_index":1365,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getcallingcontext",{"_index":2917,"title":{},"body":{"classes/LogService.html":{}}}],["getcaptcha",{"_index":1018,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"controllers/CaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["getcaptchaexp",{"_index":2689,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["getcaptchafontfamily",{"_index":2690,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["getcaptchafontpath",{"_index":2691,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["getdeletestats",{"_index":3670,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["getdeletestats(dirstruct",{"_index":3678,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["getdescendantsbycodeofroot",{"_index":1482,"title":{},"body":{"injectables/CategoryService.html":{}}}],["getdescendantsbycodeofroot(code",{"_index":1488,"title":{},"body":{"injectables/CategoryService.html":{}}}],["getentity",{"_index":1039,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"controllers/ExplorerController.html":{}}}],["getentity(target",{"_index":1046,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["getentitydata",{"_index":1158,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["getentitydata(target",{"_index":2049,"title":{},"body":{"classes/ExplorerService.html":{}}}],["getentitylist",{"_index":1040,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["getentitylist(target",{"_index":1049,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"controllers/ExplorerController.html":{}}}],["getfile",{"_index":1169,"title":{},"body":{"interfaces/BasicFileController.html":{},"controllers/FileController.html":{}}}],["getfile(@param(\"id",{"_index":2130,"title":{},"body":{"controllers/FileController.html":{}}}],["getfile(id",{"_index":683,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["getfilepath",{"_index":2169,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{}}}],["getfilepath(file",{"_index":2177,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{}}}],["getfrompattern",{"_index":1356,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getfrompattern(pattern",{"_index":1367,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["gethashfrombuffer",{"_index":2235,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["gethashfrombuffer(buf",{"_index":2241,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["gethashfrombuffer(filebuffer",{"_index":1840,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["getlastlogsbyprocess",{"_index":3388,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getlastlogsbyprocess(processcode",{"_index":3406,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getlogs",{"_index":3321,"title":{},"body":{"controllers/ProcessController.html":{}}}],["getlogs(@param(\"id",{"_index":3363,"title":{},"body":{"controllers/ProcessController.html":{}}}],["getlogs(id",{"_index":3326,"title":{},"body":{"controllers/ProcessController.html":{}}}],["getmedia",{"_index":1179,"title":{},"body":{"interfaces/BasicMediaController.html":{},"controllers/MediaController.html":{}}}],["getmedia(@param(\"id",{"_index":3009,"title":{},"body":{"controllers/MediaController.html":{}}}],["getmedia(id",{"_index":1187,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["getmediapath",{"_index":1246,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["getmediapath(media",{"_index":3088,"title":{},"body":{"classes/MediaManager.html":{}}}],["getnumber",{"_index":1357,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getnumber(key",{"_index":1370,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getone",{"_index":2593,"title":{},"body":{"injectables/FileService.html":{}}}],["getpageableentitydata",{"_index":1146,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["getpageableentitydata(target",{"_index":2051,"title":{},"body":{"classes/ExplorerService.html":{}}}],["getprivatedir",{"_index":2516,"title":{},"body":{"injectables/FileService.html":{}}}],["getprivatefile",{"_index":1170,"title":{},"body":{"interfaces/BasicFileController.html":{},"controllers/FileController.html":{}}}],["getprivatefile(res",{"_index":682,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["getprivatemedia",{"_index":1180,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["getprivatemedia(res",{"_index":1189,"title":{},"body":{"interfaces/BasicMediaController.html":{},"controllers/MediaController.html":{}}}],["getprocessdata",{"_index":3389,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocessdata(code",{"_index":3409,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocessinstance",{"_index":3523,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["getprocessinstance(processdata.code",{"_index":3534,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["getprocesslogbyid",{"_index":3390,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocesslogbyid(id",{"_index":3413,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocessunitstatus",{"_index":3391,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocessunitstatus(code",{"_index":3415,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getpropertiespage",{"_index":1567,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getpropertiespage(params",{"_index":1587,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getpublicdir",{"_index":2517,"title":{},"body":{"injectables/FileService.html":{}}}],["gets",{"_index":146,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/DirectoryStructure.html":{},"injectables/ProcessManagerService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["getstats",{"_index":3322,"title":{},"body":{"controllers/ProcessController.html":{}}}],["getstats(@param(\"code",{"_index":3356,"title":{},"body":{"controllers/ProcessController.html":{}}}],["getstats(code",{"_index":3329,"title":{},"body":{"controllers/ProcessController.html":{}}}],["getstatus",{"_index":129,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["gettarget",{"_index":1041,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["gettarget(target",{"_index":1053,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"controllers/ExplorerController.html":{}}}],["gettargetdata",{"_index":1159,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["gettargetdata(target",{"_index":2053,"title":{},"body":{"classes/ExplorerService.html":{}}}],["gettargetlist",{"_index":1042,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["getting",{"_index":3411,"title":{"index.html":{},"license.html":{}},"body":{"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{}}}],["getuserprofile",{"_index":1253,"title":{},"body":{"interfaces/BasicUserController.html":{},"controllers/ProfileController.html":{}}}],["getuserprofile(id",{"_index":1259,"title":{},"body":{"interfaces/BasicUserController.html":{},"controllers/ProfileController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["getxmlparser",{"_index":3854,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["getxmlparser().parsestring(xmldata",{"_index":3880,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["give",{"_index":4302,"title":{},"body":{"license.html":{}}}],["given",{"_index":66,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{}}}],["global",{"_index":1621,"title":{},"body":{"injectables/ConfigService.html":{},"modules/ProcessModule.html":{},"index.html":{}}}],["globalkpcontent",{"_index":1618,"title":{},"body":{"injectables/ConfigService.html":{}}}],["go",{"_index":4137,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":4380,"title":{},"body":{"license.html":{}}}],["google",{"_index":2660,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"index.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["google's",{"_index":2670,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["googlecaptchaservice",{"_index":2656,"title":{"classes/GoogleCaptchaService.html":{}},"body":{"classes/GoogleCaptchaService.html":{}}}],["governing",{"_index":777,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["gps",{"_index":421,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["gpsfilemetadata",{"_index":427,"title":{"interfaces/GpsFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["gpsfilemetadataentity",{"_index":2190,"title":{"entities/GpsFileMetadataEntity.html":{}},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/GpsFileMetadataEntity.html":{}}}],["gpsinfoifdpointer",{"_index":548,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["grant",{"_index":4256,"title":{},"body":{"license.html":{}}}],["granted",{"_index":4204,"title":{},"body":{"license.html":{}}}],["granting",{"_index":4182,"title":{},"body":{"license.html":{}}}],["grants",{"_index":4258,"title":{},"body":{"license.html":{}}}],["graph",{"_index":4422,"title":{},"body":{"modules.html":{}}}],["graphic",{"_index":1398,"title":{},"body":{"modules/CaptchaModule.html":{},"classes/GraphicCaptchaService.html":{}}}],["graphical",{"_index":2686,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"index.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["graphiccaptcharesponse",{"_index":2695,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["graphiccaptchaservice",{"_index":1393,"title":{"classes/GraphicCaptchaService.html":{}},"body":{"modules/CaptchaModule.html":{},"classes/GraphicCaptchaService.html":{}}}],["grossly",{"_index":4369,"title":{},"body":{"license.html":{}}}],["guard",{"_index":0,"title":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["guides",{"_index":4116,"title":{},"body":{"index.html":{}}}],["handle",{"_index":266,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["handle(target",{"_index":1128,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["handled",{"_index":1126,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["handler",{"_index":1121,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"miscellaneous/variables.html":{}}}],["handler.ts",{"_index":3754,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["handler.ts:29",{"_index":3756,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["handlerequest",{"_index":3213,"title":{},"body":{"classes/MsClient.html":{}}}],["handlerequest(source",{"_index":3222,"title":{},"body":{"classes/MsClient.html":{}}}],["handlers",{"_index":1122,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["handles",{"_index":170,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/MsClient.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"classes/UserSubscriber.html":{},"interfaces/VideoFileMetadata.html":{}}}],["handling",{"_index":2823,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"classes/Roles.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["harmless",{"_index":4403,"title":{},"body":{"license.html":{}}}],["hash",{"_index":279,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"dependencies.html":{}}}],["hashed",{"_index":280,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashes",{"_index":275,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["hashpassword",{"_index":269,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashpassword(password",{"_index":273,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashpasswordifneeded",{"_index":270,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashpasswordifneeded(event",{"_index":281,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashsum",{"_index":1841,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["hashsum.digest(\"hex",{"_index":1844,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["hashsum.update(filebuffer",{"_index":1843,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["hasn't",{"_index":3452,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["hasprocessinstance",{"_index":3439,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["hasprocessinstance(code",{"_index":3461,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["hassomerole",{"_index":3579,"title":{},"body":{"controllers/ProfileController.html":{},"guards/RolesGuard.html":{}}}],["hassomerole(user.roles",{"_index":3583,"title":{},"body":{"controllers/ProfileController.html":{}}}],["hassomerole(userroles",{"_index":3662,"title":{},"body":{"guards/RolesGuard.html":{}}}],["heic",{"_index":4019,"title":{},"body":{"dependencies.html":{}}}],["height",{"_index":454,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["height\"]?.value",{"_index":2339,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["helper",{"_index":2522,"title":{},"body":{"injectables/FileService.html":{}}}],["here",{"_index":4113,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":4257,"title":{},"body":{"license.html":{}}}],["herein",{"_index":4337,"title":{},"body":{"license.html":{}}}],["hex",{"_index":1839,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["highest",{"_index":3646,"title":{},"body":{"classes/Roles.html":{}}}],["hold",{"_index":1817,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["hook",{"_index":3488,"title":{},"body":{"modules/ProcessModule.html":{}}}],["horizontal",{"_index":592,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["host",{"_index":1342,"title":{},"body":{"modules/CacheModule.html":{},"classes/DbExceptionFilter.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["host.switchtohttp().getresponse",{"_index":1802,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["hour",{"_index":4619,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["http",{"_index":678,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"classes/DbExceptionFilter.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["http://www.apache.org/licenses",{"_index":4170,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":762,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["httpexception",{"_index":3229,"title":{},"body":{"classes/MsClient.html":{}}}],["httpexception(err.message",{"_index":3252,"title":{},"body":{"classes/MsClient.html":{}}}],["httponly",{"_index":821,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://github.com/alexander",{"_index":4436,"title":{},"body":{"properties.html":{}}}],["https://www.google.com/recaptcha/api/siteverify?secret=${secretkey}&response=${request.data",{"_index":2678,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["httpservice",{"_index":2665,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["httpstatus",{"_index":968,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsClient.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["httpstatus.request_timeout",{"_index":3257,"title":{},"body":{"classes/MsClient.html":{}}}],["httpstatus.too_many_requests",{"_index":3715,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["icc",{"_index":414,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["icc_copyright",{"_index":2770,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["icc_description",{"_index":2771,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["icc_profile_date",{"_index":2774,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["icc_signature",{"_index":2775,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["icccopyright",{"_index":522,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["iccdescription",{"_index":517,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["iccfilemetadata",{"_index":420,"title":{"interfaces/IccFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["iccfilemetadataentity",{"_index":2193,"title":{"entities/IccFileMetadataEntity.html":{}},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/IccFileMetadataEntity.html":{}}}],["iccprofiledate",{"_index":494,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["iccsignature",{"_index":498,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["icon",{"_index":400,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"entities/CategoryEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/variables.html":{}}}],["icon.files",{"_index":4511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.files.format",{"_index":4512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.name",{"_index":4509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.name.lang",{"_index":4510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.type",{"_index":4513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.type.ext",{"_index":4514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconfiles",{"_index":2627,"title":{},"body":{"injectables/FileService.html":{}}}],["iconfilesformat",{"_index":2629,"title":{},"body":{"injectables/FileService.html":{}}}],["iconlang",{"_index":2625,"title":{},"body":{"injectables/FileService.html":{}}}],["iconname",{"_index":2623,"title":{},"body":{"injectables/FileService.html":{}}}],["icontype",{"_index":2631,"title":{},"body":{"injectables/FileService.html":{}}}],["icontypeext",{"_index":2633,"title":{},"body":{"injectables/FileService.html":{}}}],["id",{"_index":203,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"controllers/CaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"controllers/ProfileController.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{}}}],["identification",{"_index":366,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["identifier",{"_index":391,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/ConfigItem.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/Roles.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["identifying",{"_index":4413,"title":{},"body":{"license.html":{}}}],["identity",{"_index":72,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["ifd",{"_index":542,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["ii",{"_index":4195,"title":{},"body":{"license.html":{}}}],["iife",{"_index":1827,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["iii",{"_index":4200,"title":{},"body":{"license.html":{}}}],["image",{"_index":431,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"controllers/CaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["imagefilemetadata",{"_index":435,"title":{"interfaces/ImageFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["imagefilemetadataentity",{"_index":2195,"title":{"entities/ImageFileMetadataEntity.html":{}},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["imagemin",{"_index":4021,"title":{},"body":{"dependencies.html":{}}}],["images",{"_index":627,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["immediately",{"_index":1823,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["implement",{"_index":256,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["implementation",{"_index":4098,"title":{},"body":{"index.html":{}}}],["implemented",{"_index":900,"title":{},"body":{"classes/AuthService.html":{}}}],["implementing",{"_index":3594,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["implements",{"_index":13,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"controllers/CaptchaController.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"entities/VideoFileMetadataEntity.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["implied",{"_index":774,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["import",{"_index":74,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["import(\"file",{"_index":1822,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["import(@body",{"_index":3951,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["import(body",{"_index":3941,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["import.service",{"_index":3997,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["imported",{"_index":1819,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["importfile",{"_index":3937,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["importfile(file",{"_index":3944,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["importfromfile",{"_index":3908,"title":{},"body":{"classes/XdbImportService.html":{}}}],["importfromfile(filedata",{"_index":3845,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["importing",{"_index":4061,"title":{},"body":{"index.html":{}}}],["imports",{"_index":880,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["importservice",{"_index":3930,"title":{},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["importxml",{"_index":3909,"title":{},"body":{"classes/XdbImportService.html":{}}}],["importxml(xml",{"_index":3844,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["improving",{"_index":4246,"title":{},"body":{"license.html":{}}}],["inability",{"_index":4378,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":4375,"title":{},"body":{"license.html":{}}}],["include",{"_index":1586,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/XdbRequest.html":{},"license.html":{}}}],["included",{"_index":4216,"title":{},"body":{"license.html":{}}}],["includes",{"_index":438,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["includeunknown",{"_index":2332,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["including",{"_index":423,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"injectables/AuthGuard.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"license.html":{}}}],["inclusion",{"_index":4235,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":976,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["incorporated",{"_index":4254,"title":{},"body":{"license.html":{}}}],["incr",{"_index":1358,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["incr(key",{"_index":1372,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["increment",{"_index":3606,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["incrementing",{"_index":3619,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["increments",{"_index":3605,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["incurred",{"_index":4404,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":4401,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":4393,"title":{},"body":{"license.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index()@column('boolean",{"_index":1930,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{}}}],["index()@column('date",{"_index":2773,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["index()@column('decimal",{"_index":706,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["index()@column('int",{"_index":700,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["index()@column('varchar",{"_index":696,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["index()@column({type",{"_index":1915,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ProcessUnitEntity.html":{}}}],["index()@createdatecolumn({name",{"_index":2152,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["index()@manytoone(undefined",{"_index":1939,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["index()@updatedatecolumn({name",{"_index":3377,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["index({unique",{"_index":1416,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["indexable",{"_index":1810,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["indicated",{"_index":4214,"title":{},"body":{"license.html":{}}}],["indicates",{"_index":474,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["indicating",{"_index":53,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["indirect",{"_index":4192,"title":{},"body":{"license.html":{}}}],["individual",{"_index":4202,"title":{},"body":{"license.html":{}}}],["infinity",{"_index":1157,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["information",{"_index":428,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicFileController.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"injectables/LocaleSubscriber.html":{},"classes/LoginPayload.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["informational",{"_index":4322,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":4281,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":4294,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":1296,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["init",{"_index":3392,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["init:web",{"_index":4147,"title":{},"body":{"index.html":{}}}],["initconfig",{"_index":4471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initial",{"_index":1743,"title":{},"body":{"injectables/ConfigService.html":{}}}],["initialize",{"_index":3490,"title":{},"body":{"modules/ProcessModule.html":{},"miscellaneous/variables.html":{}}}],["initializes",{"_index":1594,"title":{},"body":{"injectables/ConfigService.html":{},"modules/ExplorerModule.html":{},"injectables/ProcessManagerService.html":{},"miscellaneous/variables.html":{}}}],["initializing",{"_index":3484,"title":{},"body":{"modules/ProcessModule.html":{}}}],["initwithpropertiesfiles",{"_index":1568,"title":{},"body":{"injectables/ConfigService.html":{}}}],["initwithpropertiesfiles(gencnfdir",{"_index":1592,"title":{},"body":{"injectables/ConfigService.html":{}}}],["inject",{"_index":846,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"modules/WarlockModule.html":{}}}],["inject(logger",{"_index":848,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["inject(messages_broker",{"_index":3442,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["inject(redis_client",{"_index":3609,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["inject(warlock",{"_index":3441,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["injectable",{"_index":837,"title":{"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"injectables/XmlDataBridgeMiddleware.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["injectables",{"_index":839,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"overview.html":{}}}],["injectdatasource",{"_index":2874,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["injecting",{"_index":4536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectrepository",{"_index":1305,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/FileService.html":{},"injectables/LocaleService.html":{},"injectables/ProcessManagerService.html":{}}}],["injectrepository(categoryentity",{"_index":1504,"title":{},"body":{"injectables/CategoryService.html":{}}}],["injectrepository(fileentity",{"_index":2556,"title":{},"body":{"injectables/FileService.html":{}}}],["injectrepository(languageentity",{"_index":2840,"title":{},"body":{"injectables/LocaleService.html":{}}}],["injectrepository(localizedmediaentity",{"_index":2842,"title":{},"body":{"injectables/LocaleService.html":{}}}],["injectrepository(localizedstringentity",{"_index":2841,"title":{},"body":{"injectables/LocaleService.html":{}}}],["injectrepository(processlogentity",{"_index":3444,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["injectrepository(processunitentity",{"_index":3443,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["injectrepository(userentity",{"_index":1309,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["insert",{"_index":287,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{},"miscellaneous/variables.html":{}}}],["insertevent",{"_index":282,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["insertupdate",{"_index":3927,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["inside",{"_index":544,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["inspect",{"_index":195,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{},"classes/MsClient.html":{}}}],["inspect(data",{"_index":248,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{}}}],["inspect(message",{"_index":242,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{}}}],["inspect(pattern",{"_index":3243,"title":{},"body":{"classes/MsClient.html":{}}}],["install",{"_index":4144,"title":{},"body":{"index.html":{}}}],["installation",{"_index":4154,"title":{},"body":{"index.html":{}}}],["installed",{"_index":4124,"title":{},"body":{"index.html":{}}}],["installing",{"_index":4121,"title":{},"body":{"index.html":{}}}],["instance",{"_index":125,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleSubscriber.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":2257,"title":{},"body":{"injectables/FileMetadataService.html":{},"injectables/LocaleSubscriber.html":{},"modules/RedisModule.html":{}}}],["instances",{"_index":1881,"title":{},"body":{"injectables/DtoInterceptor.html":{},"injectables/LocaleSubscriber.html":{},"injectables/ProcessManagerService.html":{}}}],["institute",{"_index":4285,"title":{},"body":{"license.html":{}}}],["integration",{"_index":4057,"title":{},"body":{"index.html":{},"properties.html":{}}}],["integrity",{"_index":412,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["intent\"]?.description",{"_index":2399,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["intent\"]?.value",{"_index":2401,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["intentionally",{"_index":4233,"title":{},"body":{"license.html":{}}}],["inter",{"_index":4080,"title":{},"body":{"index.html":{}}}],["interact",{"_index":1287,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["interaction",{"_index":4164,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":1883,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["intercept(context",{"_index":1887,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["interceptor",{"_index":1878,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["interface",{"_index":327,"title":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"interfaces/ConfigItem.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"interfaces/Media.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaFormat.html":{},"interfaces/MediaType.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"interfaces/UserRole.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/ConfigItem.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{}}}],["interfaces",{"_index":329,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"interfaces/ConfigItem.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"interfaces/Media.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaFormat.html":{},"interfaces/MediaType.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"interfaces/UserRole.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"license.html":{},"overview.html":{}}}],["interlace",{"_index":479,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["interlacing",{"_index":475,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["intermediate",{"_index":491,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["internalservererrorexception",{"_index":2547,"title":{},"body":{"injectables/FileService.html":{},"injectables/ProcessManagerService.html":{}}}],["internalservererrorexception(`process",{"_index":3462,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["international",{"_index":415,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["internationalized",{"_index":2894,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["interoperability",{"_index":596,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["interoperabilityifdpointer",{"_index":598,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["interoperabilityindex",{"_index":633,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["interoperabilityversion",{"_index":634,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["interpreted",{"_index":651,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["invalid",{"_index":300,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/FileMetadataService.html":{},"classes/InvalidTokenMsException.html":{}}}],["invalidate",{"_index":917,"title":{},"body":{"classes/AuthService.html":{}}}],["invalidated",{"_index":918,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["invalidatetoken",{"_index":904,"title":{},"body":{"classes/AuthService.html":{}}}],["invalidatetoken(accesstoken",{"_index":915,"title":{},"body":{"classes/AuthService.html":{}}}],["invalidating",{"_index":986,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["invalidtokenmsexception",{"_index":2792,"title":{"classes/InvalidTokenMsException.html":{}},"body":{"classes/InvalidTokenMsException.html":{}}}],["invoked",{"_index":1824,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["involved",{"_index":1208,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["ioredis",{"_index":3189,"title":{},"body":{"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"dependencies.html":{}}}],["ip",{"_index":927,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["ipaddress",{"_index":954,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["irrevocable",{"_index":4266,"title":{},"body":{"license.html":{}}}],["isip",{"_index":989,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["isip()@isoptional",{"_index":2982,"title":{},"body":{"classes/LoginPayload.html":{}}}],["isnotempty",{"_index":990,"title":{},"body":{"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["iso",{"_index":559,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["isoptional",{"_index":991,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["isospeedratings",{"_index":563,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["ispublic",{"_index":669,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["isstring",{"_index":992,"title":{},"body":{"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["isstring()@isnotempty",{"_index":1403,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/LoginPayload.html":{}}}],["isstring()@isoptional",{"_index":1899,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/LoginPayload.html":{}}}],["issue",{"_index":4243,"title":{},"body":{"license.html":{}}}],["item",{"_index":1162,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["item.$$.map((r",{"_index":3875,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["item.$.key",{"_index":3873,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["item._",{"_index":3872,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["item.value",{"_index":1683,"title":{},"body":{"injectables/ConfigService.html":{}}}],["item[\"#name",{"_index":3870,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["itemname",{"_index":3869,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["items",{"_index":3299,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"miscellaneous/variables.html":{}}}],["itself",{"_index":2903,"title":{},"body":{"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{}}}],["january",{"_index":4168,"title":{},"body":{"license.html":{}}}],["javascript",{"_index":1880,"title":{},"body":{"injectables/DtoInterceptor.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["job",{"_index":3455,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"index.html":{}}}],["job.start",{"_index":3544,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["job.stop",{"_index":3547,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["jobs",{"_index":3504,"title":{},"body":{"injectables/ProcessRegisterService.html":{},"properties.html":{}}}],["join(\"_",{"_index":1723,"title":{},"body":{"injectables/ConfigService.html":{}}}],["joincolumn",{"_index":2157,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["jointable",{"_index":1440,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["json",{"_index":1430,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"injectables/MessagesBrokerService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["json.parse(data",{"_index":3209,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["json.parse(processedvalue",{"_index":1738,"title":{},"body":{"injectables/ConfigService.html":{}}}],["json.parse(value",{"_index":4589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json.stringify(data",{"_index":3207,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["json.transformer",{"_index":1447,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["json.transformer.ts",{"_index":4484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt",{"_index":930,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["jwt_secret_key",{"_index":4611,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["jwtaccesstokenkey",{"_index":944,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["jwtdto",{"_index":801,"title":{"classes/JwtDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["jwtmodule",{"_index":863,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":883,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtrefreshtokenkey",{"_index":946,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["k",{"_index":3704,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{},"index.html":{}}}],["key",{"_index":942,"title":{},"body":{"classes/AuthService.html":{},"classes/CacheService.html":{},"controllers/ConfigController.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["key.length",{"_index":3711,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["key.replace(`${config_cache_prefix",{"_index":1678,"title":{},"body":{"injectables/ConfigService.html":{}}}],["key.slice(filenameprefix.length",{"_index":1718,"title":{},"body":{"injectables/ConfigService.html":{}}}],["key.startswith(filenameprefix",{"_index":1717,"title":{},"body":{"injectables/ConfigService.html":{}}}],["keys",{"_index":932,"title":{},"body":{"classes/AuthService.html":{},"classes/CacheService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/RedisCacheService.html":{},"miscellaneous/variables.html":{}}}],["keys.join",{"_index":3617,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["keys.push(...chunk",{"_index":3624,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["keys1",{"_index":3899,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keys1.length",{"_index":3903,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keys2",{"_index":3901,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keys2.includes(key",{"_index":3905,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keys2.length",{"_index":3904,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keystoretrieve",{"_index":1672,"title":{},"body":{"injectables/ConfigService.html":{}}}],["keystoretrieve.map(async",{"_index":1676,"title":{},"body":{"injectables/ConfigService.html":{}}}],["keywithoutprefix",{"_index":1716,"title":{},"body":{"injectables/ConfigService.html":{}}}],["keywords",{"_index":4433,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":773,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["kiriliuk",{"_index":751,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["kiriliuk/k",{"_index":4437,"title":{},"body":{"properties.html":{}}}],["kp",{"_index":1622,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["kp.properties",{"_index":4523,"title":{"additional-documentation/properties/kp.properties.html":{}},"body":{"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["kp.static.files",{"_index":4607,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["kp.tmp.dir",{"_index":4605,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["kp_properties_file_name",{"_index":1632,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["kpconfig",{"_index":3695,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["kppath",{"_index":1691,"title":{},"body":{"injectables/ConfigService.html":{}}}],["label",{"_index":341,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["lang",{"_index":2804,"title":{},"body":{"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{}}}],["language",{"_index":776,"title":{"interfaces/Language.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["language.entity",{"_index":2899,"title":{},"body":{"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{}}}],["languageentity",{"_index":2806,"title":{"entities/LanguageEntity.html":{}},"body":{"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{}}}],["languagerep",{"_index":2837,"title":{},"body":{"injectables/LocaleService.html":{}}}],["languages",{"_index":1207,"title":{},"body":{"interfaces/BasicMediaController.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["last",{"_index":460,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/ProcessManagerService.html":{},"interfaces/VideoFileMetadata.html":{}}}],["last_name",{"_index":3742,"title":{},"body":{"entities/UserEntity.html":{}}}],["lastname",{"_index":1270,"title":{},"body":{"interfaces/BasicUserController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["lastvaluefrom",{"_index":2673,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["lastvaluefrom(response",{"_index":2679,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["later",{"_index":3719,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["latin",{"_index":307,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["latitude",{"_index":424,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["law",{"_index":766,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["lawsuit",{"_index":4290,"title":{},"body":{"license.html":{}}}],["leftjoinandselect(\"file.icon",{"_index":2612,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"file.metadata",{"_index":2613,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"file.preview",{"_index":2634,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"icon.files",{"_index":2626,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"icon.name",{"_index":2622,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"icon.type",{"_index":2630,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"iconfiles.format",{"_index":2628,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"iconname.lang",{"_index":2624,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"icontype.ext",{"_index":2632,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"metadata.audio",{"_index":2618,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"metadata.gps",{"_index":2614,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"metadata.image",{"_index":2616,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"metadata.video",{"_index":2620,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"preview.files",{"_index":2639,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"preview.name",{"_index":2635,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"preview.type",{"_index":2643,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"previewfiles.format",{"_index":2641,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"previewname.lang",{"_index":2637,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"previewtype.ext",{"_index":2645,"title":{},"body":{"injectables/FileService.html":{}}}],["legal",{"_index":4183,"title":{},"body":{"license.html":{}}}],["legend",{"_index":1320,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}],["length",{"_index":586,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["lens",{"_index":587,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["lensmake",{"_index":622,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["lensmodel",{"_index":623,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["let's",{"_index":4127,"title":{},"body":{"index.html":{}}}],["letters",{"_index":308,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["level",{"_index":175,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/LogService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["levels",{"_index":4042,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["liability",{"_index":4364,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4372,"title":{},"body":{"license.html":{}}}],["lib",{"_index":1821,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["lib/.../access",{"_index":4456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../auth.constants.ts",{"_index":4455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../auth.types.ts",{"_index":4442,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../cache.constants.ts",{"_index":4481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../captcha.constants.ts",{"_index":4462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../captcha.types.ts",{"_index":4443,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../category.constants.ts",{"_index":4463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../config.constants.ts",{"_index":4464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../config.init",{"_index":4472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../constants.ts",{"_index":4480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../current",{"_index":4465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../explorer.constants.ts",{"_index":4451,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/.../explorer.types.ts",{"_index":4444,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../file.types.ts",{"_index":4445,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../files.utils.ts",{"_index":4470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../for",{"_index":4458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../log.constants.ts",{"_index":4474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../media.constants.ts",{"_index":4468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../media.types.ts",{"_index":4447,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../messages",{"_index":4477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../ms",{"_index":4448,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/.../pageable.types.ts",{"_index":4034,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lib/.../process.constants.ts",{"_index":4033,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lib/.../simple",{"_index":4483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../user.constants.ts",{"_index":4490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../user.types.ts",{"_index":4449,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../warlock.constants.ts",{"_index":4491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../warlock.types.ts",{"_index":4452,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../xml",{"_index":4446,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/common/auth/auth.constants.ts",{"_index":897,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["lib/common/auth/auth.constants.ts:109",{"_index":906,"title":{},"body":{"classes/AuthService.html":{}}}],["lib/common/auth/auth.constants.ts:116",{"_index":916,"title":{},"body":{"classes/AuthService.html":{}}}],["lib/common/auth/auth.constants.ts:123",{"_index":912,"title":{},"body":{"classes/AuthService.html":{}}}],["lib/common/auth/auth.controller.ts",{"_index":732,"title":{},"body":{"controllers/AuthController.html":{}}}],["lib/common/auth/auth.controller.ts:51",{"_index":745,"title":{},"body":{"controllers/AuthController.html":{}}}],["lib/common/auth/auth.controller.ts:87",{"_index":748,"title":{},"body":{"controllers/AuthController.html":{}}}],["lib/common/auth/auth.controller.ts:99",{"_index":740,"title":{},"body":{"controllers/AuthController.html":{}}}],["lib/common/auth/auth.module.ts",{"_index":853,"title":{},"body":{"modules/AuthModule.html":{}}}],["lib/common/auth/auth.module.ts:36",{"_index":859,"title":{},"body":{"modules/AuthModule.html":{}}}],["lib/common/auth/auth.types.ts",{"_index":971,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/auth/auth.types.ts:104",{"_index":2795,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/auth/auth.types.ts:110",{"_index":2797,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/auth/auth.types.ts:116",{"_index":2796,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/auth/auth.types.ts:122",{"_index":2798,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/auth/auth.types.ts:137",{"_index":978,"title":{},"body":{"interfaces/BasicAuthController.html":{}}}],["lib/common/auth/auth.types.ts:149",{"_index":983,"title":{},"body":{"interfaces/BasicAuthController.html":{}}}],["lib/common/auth/auth.types.ts:159",{"_index":972,"title":{},"body":{"interfaces/BasicAuthController.html":{}}}],["lib/common/auth/auth.types.ts:37",{"_index":2984,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:46",{"_index":2985,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:56",{"_index":2983,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:64",{"_index":2980,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:72",{"_index":2981,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:85",{"_index":1900,"title":{},"body":{"classes/ExchangeTokenPayload.html":{}}}],["lib/common/auth/auth.types.ts:98",{"_index":2800,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/captcha/captcha.constants.ts",{"_index":4507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/captcha/captcha.controller.ts",{"_index":1377,"title":{},"body":{"controllers/CaptchaController.html":{}}}],["lib/common/captcha/captcha.controller.ts:30",{"_index":1380,"title":{},"body":{"controllers/CaptchaController.html":{}}}],["lib/common/captcha/captcha.controller.ts:38",{"_index":1378,"title":{},"body":{"controllers/CaptchaController.html":{}}}],["lib/common/captcha/captcha.module.ts",{"_index":1390,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["lib/common/captcha/captcha.module.ts:34",{"_index":1392,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["lib/common/captcha/captcha.module.ts:54",{"_index":1397,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["lib/common/captcha/captcha.types.ts",{"_index":1017,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/captcha/captcha.types.ts:29",{"_index":1405,"title":{},"body":{"classes/CaptchaService.html":{}}}],["lib/common/captcha/captcha.types.ts:36",{"_index":1406,"title":{},"body":{"classes/CaptchaService.html":{}}}],["lib/common/captcha/captcha.types.ts:49",{"_index":1404,"title":{},"body":{"classes/CaptchaRequest.html":{}}}],["lib/common/captcha/captcha.types.ts:55",{"_index":1402,"title":{},"body":{"classes/CaptchaRequest.html":{}}}],["lib/common/captcha/captcha.types.ts:92",{"_index":1023,"title":{},"body":{"interfaces/BasicCaptchaController.html":{}}}],["lib/common/captcha/captcha.types.ts:98",{"_index":1020,"title":{},"body":{"interfaces/BasicCaptchaController.html":{}}}],["lib/common/captcha/google",{"_index":2657,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["lib/common/captcha/graphic",{"_index":2685,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["lib/common/captcha/montserrat.ttf",{"_index":4637,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["lib/common/config/config.constants.ts",{"_index":4517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/config/config.controller.ts",{"_index":1513,"title":{},"body":{"controllers/ConfigController.html":{}}}],["lib/common/config/config.controller.ts:44",{"_index":1518,"title":{},"body":{"controllers/ConfigController.html":{}}}],["lib/common/config/config.controller.ts:53",{"_index":1525,"title":{},"body":{"controllers/ConfigController.html":{}}}],["lib/common/config/config.controller.ts:60",{"_index":1521,"title":{},"body":{"controllers/ConfigController.html":{}}}],["lib/common/config/config.init",{"_index":4564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/config/config.module.ts",{"_index":1550,"title":{},"body":{"modules/ConfigModule.html":{}}}],["lib/common/config/config.module.ts:29",{"_index":1553,"title":{},"body":{"modules/ConfigModule.html":{}}}],["lib/common/config/config.module.ts:39",{"_index":1552,"title":{},"body":{"modules/ConfigModule.html":{}}}],["lib/common/config/config.service.ts",{"_index":1555,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:113",{"_index":1624,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:123",{"_index":1616,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:133",{"_index":1619,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:211",{"_index":1613,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:251",{"_index":1607,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:273",{"_index":1582,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:290",{"_index":1575,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:322",{"_index":1579,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:357",{"_index":1600,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:44",{"_index":1625,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:46",{"_index":1626,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:47",{"_index":1573,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:57",{"_index":1593,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:78",{"_index":1588,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.types.ts",{"_index":1543,"title":{},"body":{"interfaces/ConfigItem.html":{}}}],["lib/common/explorer/entity/explorer",{"_index":1902,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{}}}],["lib/common/explorer/explorer.constants.ts",{"_index":4453,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/common/explorer/explorer.controller.ts",{"_index":1984,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["lib/common/explorer/explorer.controller.ts:107",{"_index":1988,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["lib/common/explorer/explorer.controller.ts:124",{"_index":1997,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["lib/common/explorer/explorer.controller.ts:141",{"_index":1995,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["lib/common/explorer/explorer.controller.ts:54",{"_index":1993,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["lib/common/explorer/explorer.controller.ts:60",{"_index":1999,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["lib/common/explorer/explorer.controller.ts:65",{"_index":1990,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["lib/common/explorer/explorer.controller.ts:85",{"_index":1986,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["lib/common/explorer/explorer.module.ts",{"_index":2024,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["lib/common/explorer/explorer.module.ts:36",{"_index":2027,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["lib/common/explorer/explorer.module.ts:83",{"_index":2030,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["lib/common/explorer/explorer.types.ts",{"_index":1038,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/explorer/explorer.types.ts:191",{"_index":1898,"title":{},"body":{"interfaces/EntitySaveHandler.html":{}}}],["lib/common/explorer/explorer.types.ts:202",{"_index":2047,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:211",{"_index":2052,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:224",{"_index":2058,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:237",{"_index":2056,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:251",{"_index":2050,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:264",{"_index":2054,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:273",{"_index":2055,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:280",{"_index":2048,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:41",{"_index":1056,"title":{},"body":{"interfaces/BasicExplorerController.html":{}}}],["lib/common/explorer/explorer.types.ts:43",{"_index":1063,"title":{},"body":{"interfaces/BasicExplorerController.html":{}}}],["lib/common/explorer/explorer.types.ts:45",{"_index":1055,"title":{},"body":{"interfaces/BasicExplorerController.html":{}}}],["lib/common/explorer/explorer.types.ts:51",{"_index":1047,"title":{},"body":{"interfaces/BasicExplorerController.html":{}}}],["lib/common/explorer/explorer.types.ts:53",{"_index":1052,"title":{},"body":{"interfaces/BasicExplorerController.html":{}}}],["lib/common/explorer/explorer.types.ts:59",{"_index":1060,"title":{},"body":{"interfaces/BasicExplorerController.html":{}}}],["lib/common/explorer/explorer.types.ts:61",{"_index":1058,"title":{},"body":{"interfaces/BasicExplorerController.html":{}}}],["lib/common/explorer/handlers/user",{"_index":3751,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["lib/common/file/entity/audio",{"_index":693,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["lib/common/file/entity/file",{"_index":2186,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["lib/common/file/entity/file.entity.ts",{"_index":2136,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:25",{"_index":2139,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:29",{"_index":2137,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:32",{"_index":2145,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:35",{"_index":2146,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:38",{"_index":2149,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:41",{"_index":2151,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:44",{"_index":2138,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:47",{"_index":2147,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:54",{"_index":2144,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:58",{"_index":2155,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/gps",{"_index":2681,"title":{},"body":{"entities/GpsFileMetadataEntity.html":{}}}],["lib/common/file/entity/icc",{"_index":2764,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["lib/common/file/entity/image",{"_index":2788,"title":{},"body":{"entities/ImageFileMetadataEntity.html":{}}}],["lib/common/file/entity/video",{"_index":3798,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["lib/common/file/file",{"_index":2201,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["lib/common/file/file.constants.ts",{"_index":2163,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{}}}],["lib/common/file/file.constants.ts:25",{"_index":2171,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:34",{"_index":2172,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:36",{"_index":2174,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:38",{"_index":2176,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:40",{"_index":2175,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:42",{"_index":2178,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:44",{"_index":2179,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:51",{"_index":2185,"title":{},"body":{"classes/FileMd.html":{}}}],["lib/common/file/file.controller.ts",{"_index":2097,"title":{},"body":{"controllers/FileController.html":{}}}],["lib/common/file/file.controller.ts:43",{"_index":2099,"title":{},"body":{"controllers/FileController.html":{}}}],["lib/common/file/file.controller.ts:58",{"_index":2103,"title":{},"body":{"controllers/FileController.html":{}}}],["lib/common/file/file.controller.ts:68",{"_index":2101,"title":{},"body":{"controllers/FileController.html":{}}}],["lib/common/file/file.controller.ts:73",{"_index":2105,"title":{},"body":{"controllers/FileController.html":{}}}],["lib/common/file/file.module.ts",{"_index":2503,"title":{},"body":{"modules/FileModule.html":{}}}],["lib/common/file/file.module.ts:34",{"_index":2504,"title":{},"body":{"modules/FileModule.html":{}}}],["lib/common/file/file.service.ts",{"_index":2511,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:226",{"_index":2521,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:256",{"_index":2526,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:273",{"_index":2529,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:283",{"_index":2544,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:292",{"_index":2541,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:44",{"_index":2520,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.types.ts",{"_index":330,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/file/file.types.ts:332",{"_index":1172,"title":{},"body":{"interfaces/BasicFileController.html":{}}}],["lib/common/file/file.types.ts:340",{"_index":1174,"title":{},"body":{"interfaces/BasicFileController.html":{}}}],["lib/common/file/file.types.ts:347",{"_index":1173,"title":{},"body":{"interfaces/BasicFileController.html":{}}}],["lib/common/file/file.types.ts:354",{"_index":1175,"title":{},"body":{"interfaces/BasicFileController.html":{}}}],["lib/common/media/entity/media",{"_index":3041,"title":{},"body":{"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{}}}],["lib/common/media/entity/media.entity.ts",{"_index":3023,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:30",{"_index":3029,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:34",{"_index":3024,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:38",{"_index":3031,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:41",{"_index":3035,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:44",{"_index":3028,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:51",{"_index":3030,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:55",{"_index":3032,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/media.constants.ts",{"_index":4530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/media/media.controller.ts",{"_index":2987,"title":{},"body":{"controllers/MediaController.html":{}}}],["lib/common/media/media.controller.ts:44",{"_index":2989,"title":{},"body":{"controllers/MediaController.html":{}}}],["lib/common/media/media.controller.ts:58",{"_index":2992,"title":{},"body":{"controllers/MediaController.html":{}}}],["lib/common/media/media.controller.ts:70",{"_index":2991,"title":{},"body":{"controllers/MediaController.html":{}}}],["lib/common/media/media.controller.ts:75",{"_index":2995,"title":{},"body":{"controllers/MediaController.html":{}}}],["lib/common/media/media.controller.ts:80",{"_index":2994,"title":{},"body":{"controllers/MediaController.html":{}}}],["lib/common/media/media.module.ts",{"_index":3092,"title":{},"body":{"modules/MediaModule.html":{}}}],["lib/common/media/media.module.ts:36",{"_index":3093,"title":{},"body":{"modules/MediaModule.html":{}}}],["lib/common/media/media.types.ts",{"_index":1177,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/media/media.types.ts:124",{"_index":3100,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:127",{"_index":3101,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:131",{"_index":3102,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:134",{"_index":3103,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:137",{"_index":3104,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:140",{"_index":3106,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:143",{"_index":3105,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:151",{"_index":3070,"title":{},"body":{"classes/MediaFormatDto.html":{}}}],["lib/common/media/media.types.ts:154",{"_index":3071,"title":{},"body":{"classes/MediaFormatDto.html":{}}}],["lib/common/media/media.types.ts:157",{"_index":3072,"title":{},"body":{"classes/MediaFormatDto.html":{}}}],["lib/common/media/media.types.ts:160",{"_index":3073,"title":{},"body":{"classes/MediaFormatDto.html":{}}}],["lib/common/media/media.types.ts:168",{"_index":3018,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:171",{"_index":3016,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:174",{"_index":3020,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:178",{"_index":3022,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:182",{"_index":3017,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:185",{"_index":3019,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:188",{"_index":3021,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:196",{"_index":3050,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:199",{"_index":3047,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:203",{"_index":3048,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:206",{"_index":3049,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:209",{"_index":3051,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:212",{"_index":3052,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:215",{"_index":3053,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:218",{"_index":3054,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:225",{"_index":3084,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:227",{"_index":3085,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:229",{"_index":3087,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:231",{"_index":3086,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:233",{"_index":3091,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:235",{"_index":3090,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:237",{"_index":3083,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:245",{"_index":3089,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:263",{"_index":1184,"title":{},"body":{"interfaces/BasicMediaController.html":{}}}],["lib/common/media/media.types.ts:278",{"_index":1191,"title":{},"body":{"interfaces/BasicMediaController.html":{}}}],["lib/common/media/media.types.ts:290",{"_index":1188,"title":{},"body":{"interfaces/BasicMediaController.html":{}}}],["lib/common/media/media.types.ts:297",{"_index":1204,"title":{},"body":{"interfaces/BasicMediaController.html":{}}}],["lib/common/media/media.types.ts:304",{"_index":1199,"title":{},"body":{"interfaces/BasicMediaController.html":{}}}],["lib/common/process/abstract",{"_index":119,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["lib/common/process/default/tmp",{"_index":3666,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["lib/common/process/entity/process.log.entity.ts",{"_index":3371,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:35",{"_index":3373,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:38",{"_index":3372,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:42",{"_index":3376,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:46",{"_index":3379,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:49",{"_index":3375,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts",{"_index":3550,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:38",{"_index":3552,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:51",{"_index":3559,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:55",{"_index":3556,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:59",{"_index":3555,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:63",{"_index":3554,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:66",{"_index":3558,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:70",{"_index":3560,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/process",{"_index":3384,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["lib/common/process/process.constants.ts",{"_index":4035,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lib/common/process/process.controller.ts",{"_index":3320,"title":{},"body":{"controllers/ProcessController.html":{}}}],["lib/common/process/process.controller.ts:38",{"_index":3334,"title":{},"body":{"controllers/ProcessController.html":{}}}],["lib/common/process/process.controller.ts:44",{"_index":3337,"title":{},"body":{"controllers/ProcessController.html":{}}}],["lib/common/process/process.controller.ts:50",{"_index":3340,"title":{},"body":{"controllers/ProcessController.html":{}}}],["lib/common/process/process.controller.ts:56",{"_index":3331,"title":{},"body":{"controllers/ProcessController.html":{}}}],["lib/common/process/process.controller.ts:69",{"_index":3328,"title":{},"body":{"controllers/ProcessController.html":{}}}],["lib/common/process/process.module.ts",{"_index":3483,"title":{},"body":{"modules/ProcessModule.html":{}}}],["lib/common/process/process.module.ts:53",{"_index":3492,"title":{},"body":{"modules/ProcessModule.html":{}}}],["lib/common/process/process.types.ts",{"_index":3367,"title":{},"body":{"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{}}}],["lib/common/user/abstract",{"_index":262,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["lib/common/user/entity/user",{"_index":3771,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["lib/common/user/entity/user.entity.ts",{"_index":3734,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:41",{"_index":3741,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:44",{"_index":3737,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:47",{"_index":3745,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:50",{"_index":3744,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:54",{"_index":3738,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:58",{"_index":3746,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:62",{"_index":3740,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:66",{"_index":3743,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:70",{"_index":3736,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:74",{"_index":3747,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:78",{"_index":3748,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.subscriber.ts",{"_index":3783,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/entity/user.subscriber.ts:35",{"_index":3788,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/entity/user.subscriber.ts:37",{"_index":3793,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/entity/user.subscriber.ts:41",{"_index":3790,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/entity/user.subscriber.ts:46",{"_index":3792,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/profile.controller.ts",{"_index":3567,"title":{},"body":{"controllers/ProfileController.html":{}}}],["lib/common/user/profile.controller.ts:47",{"_index":3572,"title":{},"body":{"controllers/ProfileController.html":{}}}],["lib/common/user/profile.controller.ts:66",{"_index":3576,"title":{},"body":{"controllers/ProfileController.html":{}}}],["lib/common/user/profile.controller.ts:80",{"_index":3574,"title":{},"body":{"controllers/ProfileController.html":{}}}],["lib/common/user/profile.controller.ts:87",{"_index":3570,"title":{},"body":{"controllers/ProfileController.html":{}}}],["lib/common/user/user",{"_index":1284,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["lib/common/user/user.constants.ts",{"_index":4594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/user/user.module.ts",{"_index":3763,"title":{},"body":{"modules/UserModule.html":{}}}],["lib/common/user/user.module.ts:31",{"_index":3764,"title":{},"body":{"modules/UserModule.html":{}}}],["lib/common/user/user.types.ts",{"_index":1251,"title":{},"body":{"interfaces/BasicUserController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/user/user.types.ts:113",{"_index":3779,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:115",{"_index":3778,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:117",{"_index":3781,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:119",{"_index":3777,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:121",{"_index":3780,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:134",{"_index":1260,"title":{},"body":{"interfaces/BasicUserController.html":{}}}],["lib/common/user/user.types.ts:143",{"_index":1265,"title":{},"body":{"interfaces/BasicUserController.html":{}}}],["lib/common/user/user.types.ts:150",{"_index":1263,"title":{},"body":{"interfaces/BasicUserController.html":{}}}],["lib/common/user/user.types.ts:157",{"_index":1257,"title":{},"body":{"interfaces/BasicUserController.html":{}}}],["lib/common/user/user.types.ts:53",{"_index":3768,"title":{},"body":{"classes/UserRoleDto.html":{}}}],["lib/common/user/user.types.ts:56",{"_index":3769,"title":{},"body":{"classes/UserRoleDto.html":{}}}],["lib/common/user/user.types.ts:59",{"_index":3770,"title":{},"body":{"classes/UserRoleDto.html":{}}}],["lib/common/user/user.types.ts:67",{"_index":3727,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:70",{"_index":3729,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:73",{"_index":3725,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:76",{"_index":3726,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:79",{"_index":3728,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:82",{"_index":3730,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:86",{"_index":3732,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:89",{"_index":3723,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:92",{"_index":3724,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:95",{"_index":3731,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:98",{"_index":3733,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/xml",{"_index":3826,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/constants.ts",{"_index":3640,"title":{},"body":{"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/constants.ts:25",{"_index":3645,"title":{},"body":{"classes/Roles.html":{}}}],["lib/shared/constants.ts:30",{"_index":3642,"title":{},"body":{"classes/Roles.html":{}}}],["lib/shared/constants.ts:35",{"_index":3644,"title":{},"body":{"classes/Roles.html":{}}}],["lib/shared/decorators/access",{"_index":4492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/decorators/current",{"_index":4528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/decorators/for",{"_index":4498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/exceptions/bad",{"_index":958,"title":{},"body":{"classes/BadRequestMsException.html":{}}}],["lib/shared/exceptions/forbidden",{"_index":2653,"title":{},"body":{"classes/ForbiddenMsException.html":{}}}],["lib/shared/exceptions/invalid",{"_index":2793,"title":{},"body":{"classes/InvalidTokenMsException.html":{}}}],["lib/shared/exceptions/ms.exception.ts",{"_index":3273,"title":{},"body":{"classes/MsException.html":{}}}],["lib/shared/exceptions/ms.exception.ts:23",{"_index":3278,"title":{},"body":{"classes/MsException.html":{}}}],["lib/shared/exceptions/not",{"_index":3292,"title":{},"body":{"classes/NotFoundMsException.html":{}}}],["lib/shared/exceptions/too",{"_index":3713,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["lib/shared/exceptions/unauthorized",{"_index":3721,"title":{},"body":{"classes/UnauthorizedMsException.html":{}}}],["lib/shared/filters/db",{"_index":1789,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["lib/shared/guards/abstract",{"_index":6,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["lib/shared/guards/auth.guard.ts",{"_index":840,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["lib/shared/guards/auth.guard.ts:27",{"_index":845,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["lib/shared/guards/lite",{"_index":2814,"title":{},"body":{"injectables/LiteAuthGuard.html":{}}}],["lib/shared/guards/roles.guard.ts",{"_index":3648,"title":{},"body":{"guards/RolesGuard.html":{}}}],["lib/shared/guards/roles.guard.ts:29",{"_index":3652,"title":{},"body":{"guards/RolesGuard.html":{}}}],["lib/shared/guards/roles.guard.ts:32",{"_index":3653,"title":{},"body":{"guards/RolesGuard.html":{}}}],["lib/shared/interceptors/dto.interceptor.ts",{"_index":1877,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["lib/shared/interceptors/dto.interceptor.ts:31",{"_index":1885,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["lib/shared/interceptors/dto.interceptor.ts:34",{"_index":1890,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["lib/shared/modules/cache/cache.constants.ts",{"_index":4584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/modules/cache/cache.module.ts",{"_index":1328,"title":{},"body":{"modules/CacheModule.html":{}}}],["lib/shared/modules/cache/cache.types.ts",{"_index":1350,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:21",{"_index":1364,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:23",{"_index":1371,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:25",{"_index":1366,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:27",{"_index":1375,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:33",{"_index":1360,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:35",{"_index":1373,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:37",{"_index":1362,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:39",{"_index":1368,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/redis",{"_index":3592,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["lib/shared/modules/cache/redis.module.ts",{"_index":3630,"title":{},"body":{"modules/RedisModule.html":{}}}],["lib/shared/modules/cache/redis.module.ts:29",{"_index":3632,"title":{},"body":{"modules/RedisModule.html":{}}}],["lib/shared/modules/category/category.constants.ts",{"_index":4508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/modules/category/category.module.ts",{"_index":1458,"title":{},"body":{"modules/CategoryModule.html":{}}}],["lib/shared/modules/category/category.service.ts",{"_index":1481,"title":{},"body":{"injectables/CategoryService.html":{}}}],["lib/shared/modules/category/category.service.ts:29",{"_index":1486,"title":{},"body":{"injectables/CategoryService.html":{}}}],["lib/shared/modules/category/category.service.ts:42",{"_index":1489,"title":{},"body":{"injectables/CategoryService.html":{}}}],["lib/shared/modules/category/category.service.ts:66",{"_index":1494,"title":{},"body":{"injectables/CategoryService.html":{}}}],["lib/shared/modules/category/entity/category",{"_index":1468,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts",{"_index":1408,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:40",{"_index":1423,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:44",{"_index":1418,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:47",{"_index":1439,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:51",{"_index":1428,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:58",{"_index":1432,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:61",{"_index":1422,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:65",{"_index":1437,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:68",{"_index":1434,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:71",{"_index":1415,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts",{"_index":2807,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts:28",{"_index":2810,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts:32",{"_index":2808,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts:36",{"_index":2811,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts:39",{"_index":2809,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/locale",{"_index":2856,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["lib/shared/modules/locale/entity/localized",{"_index":2892,"title":{},"body":{"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{}}}],["lib/shared/modules/locale/locale.module.ts",{"_index":2822,"title":{},"body":{"modules/LocaleModule.html":{}}}],["lib/shared/modules/locale/locale.service.ts",{"_index":2831,"title":{},"body":{"injectables/LocaleService.html":{}}}],["lib/shared/modules/locale/locale.service.ts:28",{"_index":2836,"title":{},"body":{"injectables/LocaleService.html":{}}}],["lib/shared/modules/locale/locale.service.ts:44",{"_index":2839,"title":{},"body":{"injectables/LocaleService.html":{}}}],["lib/shared/modules/locale/locale.types.ts",{"_index":2801,"title":{},"body":{"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{}}}],["lib/shared/modules/log/log.constants.ts",{"_index":4578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/modules/log/log.module.ts",{"_index":2909,"title":{},"body":{"modules/LogModule.html":{}}}],["lib/shared/modules/log/log.service.ts",{"_index":2913,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:100",{"_index":2928,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:14",{"_index":2933,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:24",{"_index":2926,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:34",{"_index":2945,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:44",{"_index":2943,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:54",{"_index":2923,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:64",{"_index":2935,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:82",{"_index":2939,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/messages",{"_index":3140,"title":{},"body":{"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/modules/ms",{"_index":3119,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts",{"_index":3294,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"miscellaneous/enumerations.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:16",{"_index":3314,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:25",{"_index":3317,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:33",{"_index":3318,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:41",{"_index":3315,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:49",{"_index":3312,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:56",{"_index":3298,"title":{},"body":{"classes/PageableData.html":{}}}],["lib/shared/modules/warlock/warlock.constants.ts",{"_index":4603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/modules/warlock/warlock.module.ts",{"_index":3809,"title":{},"body":{"modules/WarlockModule.html":{}}}],["lib/shared/modules/warlock/warlock.types.ts",{"_index":4454,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/shared/pipes/not",{"_index":3279,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["lib/shared/transformers/simple",{"_index":4586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/utils/files.utils.ts",{"_index":1806,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/utils/files.utils.ts:43",{"_index":1811,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["licensable",{"_index":4279,"title":{},"body":{"license.html":{}}}],["license",{"_index":755,"title":{"license.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":752,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["licenses",{"_index":4295,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":4179,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":3487,"title":{},"body":{"modules/ProcessModule.html":{}}}],["lifetime",{"_index":4613,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["light",{"_index":562,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["lightweight",{"_index":2815,"title":{},"body":{"injectables/LiteAuthGuard.html":{}}}],["limit",{"_index":1653,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{}}}],["limitation",{"_index":4353,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":779,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["limited",{"_index":4208,"title":{},"body":{"license.html":{}}}],["line",{"_index":1711,"title":{},"body":{"injectables/ConfigService.html":{},"classes/LogService.html":{}}}],["line.split",{"_index":1715,"title":{},"body":{"injectables/ConfigService.html":{}}}],["line.trim().length",{"_index":1713,"title":{},"body":{"injectables/ConfigService.html":{}}}],["line.trim().startswith",{"_index":1712,"title":{},"body":{"injectables/ConfigService.html":{}}}],["linenumber",{"_index":2931,"title":{},"body":{"classes/LogService.html":{}}}],["lines",{"_index":1709,"title":{},"body":{"injectables/ConfigService.html":{},"classes/LogService.html":{}}}],["lines.length",{"_index":2969,"title":{},"body":{"classes/LogService.html":{}}}],["lines[3].match(/at\\s+(.+?)\\s+\\((.+):(\\d+):\\d",{"_index":2972,"title":{},"body":{"classes/LogService.html":{}}}],["link",{"_index":1211,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"license.html":{}}}],["links",{"_index":3056,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["list",{"_index":1160,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/BasicMediaController.html":{},"controllers/ConfigController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["list')@forroles(roles.admin",{"_index":1992,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["list(params",{"_index":1516,"title":{},"body":{"controllers/ConfigController.html":{}}}],["listens",{"_index":2858,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["listento",{"_index":3787,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lists",{"_index":1905,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"license.html":{}}}],["liteauthguard",{"_index":794,"title":{"injectables/LiteAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LiteAuthGuard.html":{}}}],["literal",{"_index":1396,"title":{},"body":{"modules/CaptchaModule.html":{},"injectables/ConfigService.html":{},"classes/LogService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/typealiases.html":{}}}],["litigation",{"_index":4286,"title":{},"body":{"license.html":{}}}],["loaded",{"_index":4516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loads",{"_index":4576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":1603,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["local.env",{"_index":4134,"title":{},"body":{"index.html":{}}}],["local.properties",{"_index":4140,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["local_properties_file_name",{"_index":1633,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["localcontent",{"_index":1599,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localcontent.split(\"\\n",{"_index":1781,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localcontentlines",{"_index":1780,"title":{},"body":{"injectables/ConfigService.html":{}}}],["locale.service",{"_index":2829,"title":{},"body":{"modules/LocaleModule.html":{}}}],["locale.types",{"_index":2812,"title":{},"body":{"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{}}}],["locale/entity/localized",{"_index":1444,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["localemodule",{"_index":2817,"title":{"modules/LocaleModule.html":{}},"body":{"modules/LocaleModule.html":{},"modules.html":{},"overview.html":{}}}],["localeservice",{"_index":2821,"title":{"injectables/LocaleService.html":{}},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"overview.html":{}}}],["localesubscriber",{"_index":2855,"title":{"injectables/LocaleSubscriber.html":{}},"body":{"injectables/LocaleSubscriber.html":{}}}],["localization",{"_index":2824,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{}}}],["localized",{"_index":2803,"title":{},"body":{"interfaces/Language.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{}}}],["localizedmedia",{"_index":2805,"title":{"interfaces/LocalizedMedia.html":{}},"body":{"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{}}}],["localizedmediaentity",{"_index":2827,"title":{"entities/LocalizedMediaEntity.html":{}},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{}}}],["localizedmediaproperties",{"_index":2890,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["localizedmediaproperties.length",{"_index":2891,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["localizedmediarep",{"_index":2835,"title":{},"body":{"injectables/LocaleService.html":{}}}],["localizedstring",{"_index":1065,"title":{"interfaces/LocalizedString.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["localizedstringentity",{"_index":1424,"title":{"entities/LocalizedStringEntity.html":{}},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["localizedstringproperties",{"_index":2877,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["localizedstringproperties.length",{"_index":2882,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["localizedstringrep",{"_index":2834,"title":{},"body":{"injectables/LocaleService.html":{}}}],["localkey",{"_index":1786,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localline",{"_index":1783,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localline.split",{"_index":1787,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localline.trim().length",{"_index":1785,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localline.trim().startswith",{"_index":1784,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localpropertiescontent",{"_index":1697,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localpropertiespath",{"_index":1694,"title":{},"body":{"injectables/ConfigService.html":{}}}],["located",{"_index":2967,"title":{},"body":{"classes/LogService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["location",{"_index":422,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["lock",{"_index":3818,"title":{},"body":{"modules/WarlockModule.html":{}}}],["lockcode",{"_index":3820,"title":{},"body":{"modules/WarlockModule.html":{}}}],["lockexec",{"_index":3402,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["locking",{"_index":3810,"title":{},"body":{"modules/WarlockModule.html":{},"miscellaneous/typealiases.html":{}}}],["lockkey",{"_index":3817,"title":{},"body":{"modules/WarlockModule.html":{}}}],["lockkey}:${lockcode",{"_index":3823,"title":{},"body":{"modules/WarlockModule.html":{}}}],["locklifetime",{"_index":3815,"title":{},"body":{"modules/WarlockModule.html":{}}}],["log",{"_index":178,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/enumerations.html":{}}}],["log(message",{"_index":2932,"title":{},"body":{"classes/LogService.html":{}}}],["log.constants",{"_index":2912,"title":{},"body":{"modules/LogModule.html":{}}}],["log.service",{"_index":2911,"title":{},"body":{"modules/LogModule.html":{}}}],["log/log.constants",{"_index":1333,"title":{},"body":{"modules/CacheModule.html":{},"injectables/CategoryService.html":{},"injectables/LocaleSubscriber.html":{},"modules/MessagesBrokerModule.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/RedisCacheService.html":{},"modules/WarlockModule.html":{}}}],["log/log.module",{"_index":1332,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/WarlockModule.html":{}}}],["logdata",{"_index":3364,"title":{},"body":{"controllers/ProcessController.html":{}}}],["logger",{"_index":21,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"injectables/AuthGuard.html":{},"modules/CacheModule.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"modules/MessagesBrokerModule.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"modules/WarlockModule.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":2866,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"modules/LogModule.html":{},"classes/MsClient.html":{},"index.html":{}}}],["login",{"_index":291,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["login(payload",{"_index":742,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/BasicAuthController.html":{}}}],["loginpayload",{"_index":743,"title":{"classes/LoginPayload.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["loginregex",{"_index":301,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["loginregex.test(login",{"_index":305,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["loginstance",{"_index":126,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["loglevel",{"_index":197,"title":{},"body":{"classes/AbstractProcess.html":{},"miscellaneous/enumerations.html":{}}}],["loglevel.debug",{"_index":236,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["loglevel.error",{"_index":224,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["loglevel.log",{"_index":186,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["loglevel.verbose",{"_index":238,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["loglevel.warn",{"_index":234,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["logmodule",{"_index":870,"title":{"modules/LogModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"overview.html":{}}}],["logout",{"_index":736,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["logout(token",{"_index":746,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["logs",{"_index":984,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["logservice",{"_index":2910,"title":{"classes/LogService.html":{}},"body":{"modules/LogModule.html":{},"classes/LogService.html":{},"miscellaneous/variables.html":{}}}],["longitude",{"_index":425,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["loss",{"_index":4379,"title":{},"body":{"license.html":{}}}],["losses",{"_index":4386,"title":{},"body":{"license.html":{}}}],["ls",{"_index":2844,"title":{},"body":{"injectables/LocaleService.html":{}}}],["ls.code",{"_index":2847,"title":{},"body":{"injectables/LocaleService.html":{}}}],["ls.id",{"_index":2851,"title":{},"body":{"injectables/LocaleService.html":{}}}],["ls.lang",{"_index":2845,"title":{},"body":{"injectables/LocaleService.html":{}}}],["ls.value",{"_index":2846,"title":{},"body":{"injectables/LocaleService.html":{}}}],["m",{"_index":2959,"title":{},"body":{"classes/LogService.html":{}}}],["m.endswith",{"_index":2961,"title":{},"body":{"classes/LogService.html":{}}}],["m.length",{"_index":2963,"title":{},"body":{"classes/LogService.html":{}}}],["m.startswith",{"_index":2960,"title":{},"body":{"classes/LogService.html":{}}}],["m.substring(1",{"_index":2962,"title":{},"body":{"classes/LogService.html":{}}}],["machine",{"_index":4136,"title":{},"body":{"index.html":{}}}],["made",{"_index":3716,"title":{},"body":{"classes/TooManyRequestsMsException.html":{},"license.html":{}}}],["mailing",{"_index":4242,"title":{},"body":{"license.html":{}}}],["main",{"_index":1602,"title":{},"body":{"injectables/ConfigService.html":{},"classes/LogService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["maincontent",{"_index":1604,"title":{},"body":{"injectables/ConfigService.html":{}}}],["maincontent.split(\"\\n",{"_index":1779,"title":{},"body":{"injectables/ConfigService.html":{}}}],["maincontentlines",{"_index":1778,"title":{},"body":{"injectables/ConfigService.html":{}}}],["make",{"_index":523,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"license.html":{}}}],["makeimagefromtext",{"_index":2692,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["makeimagefromtext(text",{"_index":2705,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["making",{"_index":4206,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":4384,"title":{},"body":{"license.html":{}}}],["manage",{"_index":4101,"title":{},"body":{"index.html":{}}}],["managed",{"_index":4244,"title":{},"body":{"license.html":{}}}],["management",{"_index":419,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"interfaces/File.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["manager",{"_index":311,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/ProcessManagerService.html":{},"classes/Roles.html":{}}}],["manager.findone(this.type",{"_index":320,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["manager.service",{"_index":188,"title":{},"body":{"classes/AbstractProcess.html":{},"controllers/ProcessController.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["manager.service.ts",{"_index":3385,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:111",{"_index":3427,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:130",{"_index":3424,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:141",{"_index":3416,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:151",{"_index":3404,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:164",{"_index":3431,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:174",{"_index":3410,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:184",{"_index":3414,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:197",{"_index":3407,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:208",{"_index":3421,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:42",{"_index":3401,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:57",{"_index":3417,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:83",{"_index":3425,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:97",{"_index":3426,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manages",{"_index":2662,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["managing",{"_index":124,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"modules/UserModule.html":{},"index.html":{},"additional-documentation/properties/media.properties.html":{}}}],["manufacturer",{"_index":504,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["manufacturer\"]?.description",{"_index":2394,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["many",{"_index":3714,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["manytomany",{"_index":1441,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["manytomany(undefined",{"_index":1425,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["manytomany(undefined)@jointable",{"_index":1472,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/UserEntity.html":{}}}],["manytoone",{"_index":1442,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/UserEntity.html":{}}}],["manytoone(undefined",{"_index":1420,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/UserEntity.html":{}}}],["map",{"_index":1892,"title":{},"body":{"injectables/DtoInterceptor.html":{},"injectables/MessagesBrokerService.html":{},"miscellaneous/variables.html":{}}}],["map((part",{"_index":1721,"title":{},"body":{"injectables/ConfigService.html":{}}}],["marked",{"_index":4249,"title":{},"body":{"license.html":{}}}],["marking",{"_index":667,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["marks",{"_index":4345,"title":{},"body":{"license.html":{}}}],["markup",{"_index":4063,"title":{},"body":{"index.html":{}}}],["match",{"_index":3602,"title":{},"body":{"injectables/RedisCacheService.html":{},"index.html":{}}}],["matches",{"_index":2971,"title":{},"body":{"classes/LogService.html":{}}}],["matches.length",{"_index":2973,"title":{},"body":{"classes/LogService.html":{}}}],["matches[1",{"_index":2977,"title":{},"body":{"classes/LogService.html":{}}}],["matches[2].split(\"/\").slice",{"_index":2975,"title":{},"body":{"classes/LogService.html":{}}}],["matches[3",{"_index":2978,"title":{},"body":{"classes/LogService.html":{}}}],["matching",{"_index":116,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["max",{"_index":3301,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["max(1000",{"_index":3304,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["maxaperture",{"_index":575,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["maxdepth",{"_index":1155,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["maximum",{"_index":574,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["md",{"_index":2211,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio",{"_index":2267,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.album",{"_index":2319,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.artist",{"_index":2321,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.bitrate",{"_index":2276,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.codec",{"_index":2270,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.codecprofile",{"_index":2312,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.container",{"_index":2268,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.duration",{"_index":2272,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.genre",{"_index":2325,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.label",{"_index":2327,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.numberofchannels",{"_index":2274,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.samplerate",{"_index":2308,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.title",{"_index":2317,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.tool",{"_index":2314,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.year",{"_index":2323,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif",{"_index":2409,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.aperture",{"_index":2445,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.brightness",{"_index":2447,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.colorspace",{"_index":2463,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.compositeimage",{"_index":2497,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.contrast",{"_index":2485,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.customrendered",{"_index":2475,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.digitalzoomratio",{"_index":2481,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exififdpointer",{"_index":2426,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exifversion",{"_index":2439,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exposurebias",{"_index":2449,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exposuremode",{"_index":2477,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exposureprogram",{"_index":2435,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exposuretime",{"_index":2431,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.flash",{"_index":2457,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.flashpixversion",{"_index":2461,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.fnumber",{"_index":2433,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.focallength",{"_index":2459,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.gpsinfoifdpointer",{"_index":2429,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.interoperabilityifdpointer",{"_index":2469,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.interoperabilityindex",{"_index":2499,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.interoperabilityversion",{"_index":2501,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.isospeedratings",{"_index":2437,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.lensmake",{"_index":2493,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.lensmodel",{"_index":2495,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.make",{"_index":2410,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.maxaperture",{"_index":2451,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.meteringmode",{"_index":2455,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.model",{"_index":2412,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.offsettime",{"_index":2441,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.orientation",{"_index":2414,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.pixelxdimension",{"_index":2465,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.pixelydimension",{"_index":2467,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.resolutionunit",{"_index":2420,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.resolutionx",{"_index":2416,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.resolutiony",{"_index":2418,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.saturation",{"_index":2487,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.scenecapturetype",{"_index":2483,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.scenetype",{"_index":2473,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.sensingmethod",{"_index":2471,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.sharpness",{"_index":2489,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.shutterspeedvalue",{"_index":2443,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.software",{"_index":2422,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.subjectdistance",{"_index":2453,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.subjectdistancerange",{"_index":2491,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.whitebalance",{"_index":2479,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.ycbcrpositioning",{"_index":2424,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.ext",{"_index":2244,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.gps",{"_index":2362,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.gps.altitude",{"_index":2363,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.gps.latitude",{"_index":2367,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.gps.longitude",{"_index":2365,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.hash",{"_index":2240,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc",{"_index":2370,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.connectionspace",{"_index":2379,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.devicemanufacturer",{"_index":2392,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.devicemodelnumber",{"_index":2395,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.icccopyright",{"_index":2406,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.iccdescription",{"_index":2404,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.iccprofiledate",{"_index":2382,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.iccsignature",{"_index":2387,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.primaryplatform",{"_index":2389,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.profileclassname",{"_index":2374,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.profileclassvalue",{"_index":2377,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.profilecreator",{"_index":2402,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.profileversion",{"_index":2371,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.renderingintentname",{"_index":2397,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.renderingintentvalue",{"_index":2400,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image",{"_index":2333,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.bitdepth",{"_index":2349,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.bps",{"_index":2334,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.colorcomponents",{"_index":2342,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.colortype",{"_index":2352,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.compression",{"_index":2355,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.datetime",{"_index":2386,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.filter",{"_index":2357,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.height",{"_index":2337,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.interlace",{"_index":2359,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.subsampling",{"_index":2345,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.width",{"_index":2340,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.mime",{"_index":2242,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.mime.startswith(\"audio",{"_index":2248,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.mime.startswith(\"image",{"_index":2246,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.mime.startswith(\"video",{"_index":2250,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video",{"_index":2279,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.bitrate",{"_index":2288,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.codec",{"_index":2280,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.colorrange",{"_index":2296,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.colorspace",{"_index":2298,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.container",{"_index":2282,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.displayaspectratio",{"_index":2294,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.duration",{"_index":2290,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.framerate",{"_index":2300,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.height",{"_index":2286,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.rotate",{"_index":2302,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.sampleaspectratio",{"_index":2292,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.width",{"_index":2284,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["mean",{"_index":4176,"title":{},"body":{"license.html":{}}}],["means",{"_index":4189,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":4210,"title":{},"body":{"license.html":{}}}],["mechanism",{"_index":4096,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["mechanisms",{"_index":3811,"title":{},"body":{"modules/WarlockModule.html":{},"miscellaneous/typealiases.html":{}}}],["media",{"_index":383,"title":{"interfaces/Media.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["media.constants",{"_index":2997,"title":{},"body":{"controllers/MediaController.html":{}}}],["media.controller",{"_index":3098,"title":{},"body":{"modules/MediaModule.html":{}}}],["media.entity",{"_index":2828,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaFileEntity.html":{}}}],["media.entity.ts",{"_index":2893,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.entity.ts:34",{"_index":2896,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.entity.ts:38",{"_index":2895,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.entity.ts:41",{"_index":2897,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.entity.ts:44",{"_index":2898,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.private.dir",{"_index":4653,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["media.properties",{"_index":4648,"title":{"additional-documentation/properties/media.properties.html":{}},"body":{"additional-documentation/properties/media.properties.html":{}}}],["media.public.dir",{"_index":4649,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["media.service",{"_index":3094,"title":{},"body":{"modules/MediaModule.html":{}}}],["media.types",{"_index":2996,"title":{},"body":{"controllers/MediaController.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{}}}],["media/entity/media.entity",{"_index":2093,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/UserEntity.html":{}}}],["media/media.module",{"_index":4000,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["media/media.types",{"_index":384,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicUserController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/TargetData.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["media_relations",{"_index":4475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media_type_relations",{"_index":4476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mediacontroller",{"_index":2986,"title":{"controllers/MediaController.html":{}},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{}}}],["mediadto",{"_index":1234,"title":{"classes/MediaDto.html":{}},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediaentity",{"_index":1419,"title":{"entities/MediaEntity.html":{}},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"modules/MediaModule.html":{},"entities/UserEntity.html":{}}}],["mediaext",{"_index":1223,"title":{"interfaces/MediaExt.html":{}},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediaextentity",{"_index":3040,"title":{"entities/MediaExtEntity.html":{}},"body":{"entities/MediaExtEntity.html":{},"entities/MediaTypeEntity.html":{}}}],["mediafile",{"_index":1215,"title":{"interfaces/MediaFile.html":{}},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediafiledto",{"_index":1235,"title":{"classes/MediaFileDto.html":{}},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediafileentity",{"_index":3025,"title":{"entities/MediaFileEntity.html":{}},"body":{"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"modules/MediaModule.html":{}}}],["mediaformat",{"_index":1226,"title":{"interfaces/MediaFormat.html":{}},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediaformatdto",{"_index":1233,"title":{"classes/MediaFormatDto.html":{}},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediaformatentity",{"_index":3058,"title":{"entities/MediaFormatEntity.html":{}},"body":{"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{}}}],["mediamanager",{"_index":1236,"title":{"classes/MediaManager.html":{}},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediamodule",{"_index":1248,"title":{"modules/MediaModule.html":{}},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["mediamodule.forroot",{"_index":3995,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["mediamoduleoptions",{"_index":1249,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"miscellaneous/typealiases.html":{}}}],["mediapath",{"_index":3006,"title":{},"body":{"controllers/MediaController.html":{}}}],["mediarow",{"_index":3925,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["mediaservice",{"_index":2999,"title":{},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{}}}],["mediatype",{"_index":1210,"title":{"interfaces/MediaType.html":{}},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediatypedto",{"_index":1232,"title":{"classes/MediaTypeDto.html":{}},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediatypeentity",{"_index":3033,"title":{"entities/MediaTypeEntity.html":{}},"body":{"entities/MediaEntity.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{}}}],["medium",{"_index":4299,"title":{},"body":{"license.html":{}}}],["meet",{"_index":4300,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":4354,"title":{},"body":{"license.html":{}}}],["merely",{"_index":4228,"title":{},"body":{"license.html":{}}}],["merged",{"_index":1605,"title":{},"body":{"injectables/ConfigService.html":{}}}],["mergedcontent",{"_index":1782,"title":{},"body":{"injectables/ConfigService.html":{}}}],["mergepropertiescontent",{"_index":1569,"title":{},"body":{"injectables/ConfigService.html":{}}}],["mergepropertiescontent(maincontent",{"_index":1598,"title":{},"body":{"injectables/ConfigService.html":{}}}],["merges",{"_index":1601,"title":{},"body":{"injectables/ConfigService.html":{}}}],["message",{"_index":181,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"classes/DbExceptionFilter.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/LogService.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"miscellaneous/variables.html":{}}}],["messagebus",{"_index":3118,"title":{"interfaces/MessageBus.html":{}},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["messages",{"_index":2867,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["messages_broker",{"_index":3161,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"miscellaneous/variables.html":{}}}],["messagesbroker",{"_index":3139,"title":{"interfaces/MessagesBroker.html":{}},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{}}}],["messagesbrokermodule",{"_index":3157,"title":{"modules/MessagesBrokerModule.html":{}},"body":{"modules/MessagesBrokerModule.html":{},"modules/ProcessModule.html":{},"modules.html":{},"overview.html":{}}}],["messagesbrokerservice",{"_index":3164,"title":{"injectables/MessagesBrokerService.html":{}},"body":{"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessRegisterService.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":635,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["metaaudio",{"_index":2619,"title":{},"body":{"injectables/FileService.html":{}}}],["metadata",{"_index":332,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["metadata.entity",{"_index":2160,"title":{},"body":{"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/MediaEntity.html":{}}}],["metadata.entity.ts",{"_index":694,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:10",{"_index":713,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:14",{"_index":705,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:18",{"_index":702,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:19",{"_index":2682,"title":{},"body":{"entities/GpsFileMetadataEntity.html":{}}}],["metadata.entity.ts:22",{"_index":718,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:25",{"_index":2196,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.entity.ts:26",{"_index":716,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:28",{"_index":2189,"title":{},"body":{"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{}}}],["metadata.entity.ts:30",{"_index":701,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:31",{"_index":2192,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.entity.ts:34",{"_index":704,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:37",{"_index":2683,"title":{},"body":{"entities/GpsFileMetadataEntity.html":{}}}],["metadata.entity.ts:38",{"_index":720,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:39",{"_index":3802,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:42",{"_index":2767,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:43",{"_index":3805,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:45",{"_index":2191,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.entity.ts:46",{"_index":2769,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:47",{"_index":710,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:50",{"_index":2785,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:51",{"_index":719,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:52",{"_index":2194,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.entity.ts:54",{"_index":2783,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:55",{"_index":699,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:58",{"_index":2780,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["metadata.entity.ts:59",{"_index":698,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:62",{"_index":2772,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["metadata.entity.ts:63",{"_index":721,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:66",{"_index":2187,"title":{},"body":{"entities/FileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{}}}],["metadata.entity.ts:67",{"_index":711,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["metadata.entity.ts:71",{"_index":714,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["metadata.entity.ts:73",{"_index":2198,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.service",{"_index":2506,"title":{},"body":{"modules/FileModule.html":{}}}],["metadata.service.ts",{"_index":2202,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadata.service.ts:101",{"_index":2215,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadata.service.ts:139",{"_index":2210,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadata.service.ts:166",{"_index":2213,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadata.service.ts:72",{"_index":2217,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadataservice",{"_index":2519,"title":{},"body":{"injectables/FileService.html":{}}}],["metagps",{"_index":2615,"title":{},"body":{"injectables/FileService.html":{}}}],["metaimage",{"_index":2617,"title":{},"body":{"injectables/FileService.html":{}}}],["metavideo",{"_index":2621,"title":{},"body":{"injectables/FileService.html":{}}}],["meteringmode",{"_index":581,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["method",{"_index":152,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/LogService.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/VideoFileMetadata.html":{}}}],["methodname",{"_index":2930,"title":{},"body":{"classes/LogService.html":{}}}],["methods",{"_index":23,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"controllers/FileController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"controllers/MediaController.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["microservice",{"_index":960,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["microservices",{"_index":3137,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/Roles.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["middle",{"_index":2760,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["middleware",{"_index":3961,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["middlewareconsumer",{"_index":3985,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["millimeters",{"_index":578,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["mime",{"_index":406,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["min",{"_index":3302,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["min(1",{"_index":3303,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["min(1)@max(1000)@type(undefined",{"_index":3313,"title":{},"body":{"classes/PageableParams.html":{}}}],["min(1)@type(undefined",{"_index":3316,"title":{},"body":{"classes/PageableParams.html":{}}}],["minutes",{"_index":4615,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["miscellaneous",{"_index":4031,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mod",{"_index":4565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":556,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["model",{"_index":466,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["modern",{"_index":4047,"title":{},"body":{"index.html":{},"properties.html":{}}}],["modifications",{"_index":4207,"title":{},"body":{"license.html":{}}}],["modified",{"_index":461,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["modifies",{"_index":3969,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["modify",{"_index":4323,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":4328,"title":{},"body":{"license.html":{}}}],["module",{"_index":850,"title":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"modules/FileModule.html":{},"classes/JwtDto.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"classes/LoginPayload.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"interfaces/TargetData.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module.interface",{"_index":3917,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["modules",{"_index":852,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modules/cache/cache.types",{"_index":82,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["modules/log/log.constants",{"_index":847,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["mono",{"_index":375,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["montserrat",{"_index":4639,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["more",{"_index":4111,"title":{},"body":{"index.html":{},"license.html":{}}}],["mozjpeg",{"_index":4022,"title":{},"body":{"dependencies.html":{}}}],["ms",{"_index":3230,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["ms.exception",{"_index":969,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["ms.exception.ts",{"_index":959,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["ms.exception.ts:23",{"_index":967,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["ms_client",{"_index":3264,"title":{},"body":{"modules/MsClientModule.html":{},"miscellaneous/variables.html":{}}}],["ms_exception_id",{"_index":3232,"title":{},"body":{"classes/MsClient.html":{},"classes/MsException.html":{},"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["msclient",{"_index":3210,"title":{"classes/MsClient.html":{}},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["msclient(logger",{"_index":3272,"title":{},"body":{"modules/MsClientModule.html":{}}}],["msclientmodule",{"_index":3259,"title":{"modules/MsClientModule.html":{}},"body":{"modules/MsClientModule.html":{},"modules.html":{},"overview.html":{}}}],["msclientoptions",{"_index":3128,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"miscellaneous/typealiases.html":{}}}],["msexception",{"_index":965,"title":{"classes/MsException.html":{}},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/Roles.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":241,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.endswith",{"_index":244,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.length",{"_index":246,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.replace(/\\[/g",{"_index":249,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.replace(/]/g",{"_index":250,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.startswith",{"_index":243,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.substring(1",{"_index":245,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg_bus",{"_index":3265,"title":{},"body":{"modules/MsClientModule.html":{},"miscellaneous/variables.html":{}}}],["multiple",{"_index":626,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{}}}],["music",{"_index":367,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"dependencies.html":{}}}],["musicmd",{"_index":2304,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.album",{"_index":2320,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.artists?.join",{"_index":2322,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.genre?.join",{"_index":2326,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.label?.join",{"_index":2328,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.title",{"_index":2318,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.year",{"_index":2324,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.bitrate",{"_index":2311,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.codec",{"_index":2307,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.codecprofile",{"_index":2313,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.container",{"_index":2306,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.duration",{"_index":2316,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.numberofchannels",{"_index":2310,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.samplerate",{"_index":2309,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.tool",{"_index":2315,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["myentity",{"_index":2860,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["mysql",{"_index":4158,"title":{},"body":{"index.html":{},"properties.html":{}}}],["n",{"_index":254,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{}}}],["name",{"_index":45,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"classes/LogService.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["name.lang",{"_index":4515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["named",{"_index":1089,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["namedcolumn",{"_index":1109,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["names",{"_index":1808,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"index.html":{},"license.html":{}}}],["namespace",{"_index":1583,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["namespacename",{"_index":1585,"title":{},"body":{"injectables/ConfigService.html":{}}}],["nature",{"_index":407,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["navigate",{"_index":4115,"title":{},"body":{"index.html":{}}}],["necessarily",{"_index":4280,"title":{},"body":{"license.html":{}}}],["necessary",{"_index":4163,"title":{},"body":{"index.html":{}}}],["need",{"_index":1498,"title":{},"body":{"injectables/CategoryService.html":{}}}],["needed",{"_index":157,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["needs",{"_index":258,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["negligence",{"_index":4367,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":4370,"title":{},"body":{"license.html":{}}}],["neighboring",{"_index":4526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nest",{"_index":2915,"title":{},"body":{"classes/LogService.html":{}}}],["nested",{"_index":1148,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["nestfactory.createapplicationcontext(mod",{"_index":4567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestinterceptor",{"_index":1891,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["nestjs",{"_index":3486,"title":{},"body":{"modules/ProcessModule.html":{}}}],["nestjs/axios",{"_index":2672,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":76,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"classes/ExchangeTokenPayload.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"controllers/FileController.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces/modules/dynamic",{"_index":3916,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["nestjs/common/interfaces/modules/forward",{"_index":3919,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["nestjs/common/interfaces/modules/provider.interface",{"_index":2036,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["nestjs/common/interfaces/type.interface",{"_index":296,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{}}}],["nestjs/core",{"_index":3654,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":864,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":3226,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":866,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2109,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["nestjs/schedule",{"_index":3494,"title":{},"body":{"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":1306,"title":{},"body":{"injectables/BasicUserService.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"modules/MediaModule.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"modules/UserModule.html":{}}}],["nestmiddleware",{"_index":3973,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["nestmodule",{"_index":3996,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["new",{"_index":98,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"classes/ExchangeTokenPayload.html":{},"controllers/ExplorerController.html":{},"controllers/FileController.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"controllers/MediaController.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/NotEmptyPipe.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["newrelativepath",{"_index":1867,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["newuser",{"_index":1314,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["next",{"_index":1888,"title":{},"body":{"injectables/DtoInterceptor.html":{},"classes/MsClient.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"index.html":{}}}],["nextfunction",{"_index":3967,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["node",{"_index":3812,"title":{},"body":{"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":4123,"title":{},"body":{"index.html":{},"properties.html":{}}}],["node:events",{"_index":1816,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["node:fs",{"_index":1814,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["node_modules",{"_index":1745,"title":{},"body":{"injectables/ConfigService.html":{}}}],["nodejs",{"_index":4434,"title":{},"body":{"properties.html":{}}}],["non",{"_index":4261,"title":{},"body":{"license.html":{}}}],["normalized",{"_index":2543,"title":{},"body":{"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{}}}],["normalizes",{"_index":2704,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["normally",{"_index":4320,"title":{},"body":{"license.html":{}}}],["note",{"_index":4165,"title":{},"body":{"index.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["notemptypipe",{"_index":2110,"title":{"injectables/NotEmptyPipe.html":{}},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"injectables/NotEmptyPipe.html":{},"controllers/XmlDataBridgeController.html":{}}}],["notemptypipe(\"file",{"_index":2118,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["notfoundexception",{"_index":1303,"title":{},"body":{"injectables/BasicUserService.html":{},"controllers/ExplorerController.html":{},"injectables/FileService.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{}}}],["notfoundexception(`file",{"_index":2590,"title":{},"body":{"injectables/FileService.html":{}}}],["notfoundexception(`user",{"_index":1317,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["notfoundmsexception",{"_index":3291,"title":{"classes/NotFoundMsException.html":{}},"body":{"classes/NotFoundMsException.html":{}}}],["nothing",{"_index":4336,"title":{},"body":{"license.html":{}}}],["notice",{"_index":4215,"title":{},"body":{"license.html":{}}}],["notices",{"_index":4306,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":4334,"title":{},"body":{"license.html":{}}}],["now",{"_index":205,"title":{},"body":{"classes/AbstractProcess.html":{},"index.html":{}}}],["npm",{"_index":4146,"title":{},"body":{"index.html":{}}}],["null",{"_index":61,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["nullable",{"_index":697,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["number",{"_index":314,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"classes/CacheService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"classes/MsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{}}}],["number\"]?.description",{"_index":2396,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["number_of_channels",{"_index":715,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["numberofchannels",{"_index":342,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["numbers",{"_index":309,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["numberutils",{"_index":2723,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["numberutils.generaterandomint",{"_index":2728,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["numeric",{"_index":1219,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"injectables/RedisCacheService.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["oauth",{"_index":4095,"title":{},"body":{"index.html":{},"properties.html":{}}}],["obj",{"_index":2221,"title":{},"body":{"injectables/FileMetadataService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["obj.indexof",{"_index":2254,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["obj.map(this.trimproperties",{"_index":2256,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["obj.rows.push(rowobj",{"_index":3877,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["obj.trim",{"_index":2253,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["obj1",{"_index":3895,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["obj2",{"_index":3897,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["obj2[key",{"_index":3907,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["object",{"_index":58,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"dependencies.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object.keys(obj1",{"_index":3900,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["object.keys(obj2",{"_index":3902,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["object.keys(value).length",{"_index":3289,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["object.values(entity).filter((value",{"_index":2878,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["object_enabled",{"_index":1934,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["object_priority",{"_index":1936,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["object_renderer_params",{"_index":1941,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["object_visibility",{"_index":1943,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["objectenabled",{"_index":1095,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["objectliteral",{"_index":1064,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{}}}],["objectpriority",{"_index":1093,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["objectrenderer",{"_index":1100,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["objectrendererparams",{"_index":1925,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["objects",{"_index":1165,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/LocaleService.html":{},"entities/LocalizedMediaEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["objectutils",{"_index":190,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/CategoryService.html":{},"classes/LogService.html":{},"classes/MsClient.html":{}}}],["objectutils.inspect",{"_index":196,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{},"classes/MsClient.html":{}}}],["objectutils.sort(cat.children",{"_index":1511,"title":{},"body":{"injectables/CategoryService.html":{}}}],["objectvisibility",{"_index":1097,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["obligations",{"_index":4394,"title":{},"body":{"license.html":{}}}],["observable",{"_index":3133,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["obtain",{"_index":760,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["occurs",{"_index":1124,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{}}}],["offer",{"_index":4275,"title":{},"body":{"license.html":{}}}],["offset",{"_index":565,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["offsettime",{"_index":569,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["onapplicationbootstrap",{"_index":3489,"title":{},"body":{"modules/ProcessModule.html":{}}}],["oncrash",{"_index":130,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["oncrash(error",{"_index":148,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["ondelete",{"_index":2142,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["one",{"_index":4125,"title":{},"body":{"index.html":{},"license.html":{}}}],["ones",{"_index":4527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onetomany",{"_index":2092,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{}}}],["onetomany(undefined",{"_index":2074,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{}}}],["onetoone",{"_index":2158,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["onetoone(undefined",{"_index":2141,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["onfinish",{"_index":131,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["onmoduleinit",{"_index":2029,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["onstop",{"_index":132,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["openmode",{"_index":1813,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["operating",{"_index":500,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["operation",{"_index":582,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicFileController.html":{},"injectables/ConfigService.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"injectables/RedisCacheService.html":{},"interfaces/VideoFileMetadata.html":{}}}],["operations",{"_index":1352,"title":{},"body":{"classes/CacheService.html":{},"injectables/LocaleService.html":{},"index.html":{}}}],["operator",{"_index":3852,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["optimized",{"_index":502,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["optional",{"_index":47,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"controllers/FileController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["optionally",{"_index":666,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["options",{"_index":687,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"modules/AuthModule.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/ProcessManagerService.html":{},"modules/RedisModule.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["options.controller",{"_index":879,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/UserModule.html":{}}}],["options.exportservice",{"_index":4005,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["options.filemanager",{"_index":2509,"title":{},"body":{"modules/FileModule.html":{}}}],["options.filemd",{"_index":2510,"title":{},"body":{"modules/FileModule.html":{}}}],["options.imports",{"_index":4003,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["options.importservice",{"_index":4004,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["options.savehandlers",{"_index":2040,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["options.savehandlers.foreach((h",{"_index":2041,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["options.savehandlers.length",{"_index":2037,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["options.service",{"_index":895,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/MediaModule.html":{},"modules/UserModule.html":{}}}],["opts",{"_index":1851,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["opts).subscribe",{"_index":3238,"title":{},"body":{"classes/MsClient.html":{}}}],["order",{"_index":1654,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{}}}],["orientation",{"_index":524,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["origin",{"_index":4349,"title":{},"body":{"license.html":{}}}],["original",{"_index":1212,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":60,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"license.html":{}}}],["out",{"_index":985,"title":{},"body":{"interfaces/BasicAuthController.html":{},"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"modules/LocaleModule.html":{},"classes/LoginPayload.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["outputpath",{"_index":2571,"title":{},"body":{"injectables/FileService.html":{}}}],["outputpath}/${filename",{"_index":2582,"title":{},"body":{"injectables/FileService.html":{}}}],["outstanding",{"_index":4198,"title":{},"body":{"license.html":{}}}],["overall",{"_index":1222,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["overridden",{"_index":155,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["override",{"_index":4135,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["overrides",{"_index":4105,"title":{},"body":{"index.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["overview",{"_index":4426,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":4180,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":519,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["p",{"_index":2955,"title":{},"body":{"classes/LogService.html":{}}}],["p@ssw0rd",{"_index":1004,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["package",{"_index":4007,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packaged",{"_index":641,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["page",{"_index":1589,"title":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"license.html":{}}}],["pageable",{"_index":1142,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["pageabledata",{"_index":1072,"title":{"classes/PageableData.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/TargetData.html":{}}}],["pageabledata(propertieswithvalues",{"_index":1679,"title":{},"body":{"injectables/ConfigService.html":{}}}],["pageableparams",{"_index":1051,"title":{"classes/PageableParams.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/TargetData.html":{}}}],["pages",{"_index":1908,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{}}}],["pagesize",{"_index":3297,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["paginated",{"_index":1139,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/TargetData.html":{},"index.html":{}}}],["pagination",{"_index":1591,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["pair",{"_index":1008,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["panel",{"_index":4050,"title":{},"body":{"index.html":{},"properties.html":{}}}],["param",{"_index":88,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["param(\"id",{"_index":2125,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/ProfileController.html":{}}}],["param(\"target",{"_index":2011,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["param(\"type",{"_index":3001,"title":{},"body":{"controllers/MediaController.html":{}}}],["parameter",{"_index":636,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["parameters",{"_index":43,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"controllers/FileController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"controllers/MediaController.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{}}}],["params",{"_index":1050,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"entities/CategoryEntity.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{}}}],["parent",{"_index":1412,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["parse",{"_index":1609,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["parsebuffer",{"_index":2224,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["parsebuffer(buf",{"_index":2305,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["parsed",{"_index":1610,"title":{},"body":{"injectables/ConfigService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["parsefloat(audiomd.duration",{"_index":2273,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["parsefloat(videomd.duration",{"_index":2291,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["parseint(process.env.redis_db",{"_index":1347,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["parseint(process.env.redis_port",{"_index":1345,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["parseint(process.env.transport_port",{"_index":3271,"title":{},"body":{"modules/MsClientModule.html":{}}}],["parseint(process.env.transport_timeout",{"_index":3246,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["parseint(process.env.transport_type",{"_index":3269,"title":{},"body":{"modules/MsClientModule.html":{}}}],["parser",{"_index":3841,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["parses",{"_index":1608,"title":{},"body":{"injectables/ConfigService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["parsestring",{"_index":3848,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["parsevalue",{"_index":1570,"title":{},"body":{"injectables/ConfigService.html":{}}}],["parsevalue(value",{"_index":1606,"title":{},"body":{"injectables/ConfigService.html":{}}}],["parsexmlbody(body",{"_index":3859,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["parsexmlbody(result",{"_index":3881,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["parsexmlfile(xmldata",{"_index":3879,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["parsexmlfromrequest",{"_index":3963,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["parsexmlfromrequest(req",{"_index":3964,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["parsing",{"_index":3962,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["part",{"_index":4312,"title":{},"body":{"license.html":{}}}],["part.touppercase",{"_index":1722,"title":{},"body":{"injectables/ConfigService.html":{}}}],["partial",{"_index":914,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"modules/ExplorerModule.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["particular",{"_index":4356,"title":{},"body":{"license.html":{}}}],["parts",{"_index":111,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["parts.length",{"_index":113,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["parts[1",{"_index":114,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["party",{"_index":4319,"title":{},"body":{"license.html":{}}}],["passportmodule",{"_index":865,"title":{},"body":{"modules/AuthModule.html":{}}}],["passthrough",{"_index":806,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":276,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicUserController.html":{},"modules/CacheModule.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"modules/WarlockModule.html":{},"index.html":{}}}],["patch",{"_index":2533,"title":{},"body":{"injectables/FileService.html":{},"controllers/ProfileController.html":{}}}],["patch(\"/:id",{"_index":3586,"title":{},"body":{"controllers/ProfileController.html":{}}}],["patches",{"_index":2936,"title":{},"body":{"classes/LogService.html":{}}}],["patchfromctx",{"_index":2918,"title":{},"body":{"classes/LogService.html":{}}}],["patchfromctx(ctx",{"_index":2934,"title":{},"body":{"classes/LogService.html":{}}}],["patent",{"_index":4273,"title":{},"body":{"license.html":{}}}],["path",{"_index":394,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/LogService.html":{},"controllers/MediaController.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{}}}],["path.basename",{"_index":1706,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.basename(filepath",{"_index":1758,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.dirname(filepath",{"_index":1761,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.extname(file.name",{"_index":1703,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.join",{"_index":1695,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{}}}],["path.join(currentpath",{"_index":1864,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["path.join(directory",{"_index":1692,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.join(dirpath",{"_index":1763,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.join(gensrcpath",{"_index":1768,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.join(relativepath",{"_index":1868,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["path.normalize(dir",{"_index":2650,"title":{},"body":{"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{}}}],["pattern",{"_index":1369,"title":{},"body":{"classes/CacheService.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":741,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"controllers/CaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload.captchaid",{"_index":811,"title":{},"body":{"controllers/AuthController.html":{}}}],["payload.captchapayload",{"_index":812,"title":{},"body":{"controllers/AuthController.html":{}}}],["payload.id",{"_index":3759,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload.ipaddress",{"_index":816,"title":{},"body":{"controllers/AuthController.html":{}}}],["payload.login",{"_index":3761,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload.password",{"_index":3760,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload.roles",{"_index":3762,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload?.token",{"_index":834,"title":{},"body":{"controllers/AuthController.html":{}}}],["peer",{"_index":4008,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":353,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/VideoFileMetadata.html":{}}}],["percent",{"_index":4197,"title":{},"body":{"license.html":{}}}],["perform",{"_index":4270,"title":{},"body":{"license.html":{}}}],["performed",{"_index":350,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["permission",{"_index":4343,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":778,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["perpetual",{"_index":4259,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":4311,"title":{},"body":{"license.html":{}}}],["phone",{"_index":1268,"title":{},"body":{"interfaces/BasicUserController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["photo",{"_index":527,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["pinpoint",{"_index":4064,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":3281,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["pipe(map((data",{"_index":1896,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["pipetransform",{"_index":3288,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["pixel",{"_index":450,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["pixels",{"_index":453,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["pixelxdimension",{"_index":593,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["pixelydimension",{"_index":595,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["placeholder",{"_index":926,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["places",{"_index":4316,"title":{},"body":{"license.html":{}}}],["placing",{"_index":535,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["plain",{"_index":1879,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["plaintoinstance",{"_index":1894,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["plaintoinstance(this.serializer",{"_index":1897,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["platform",{"_index":499,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"properties.html":{}}}],["platform\"]?.description",{"_index":2391,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["platform's",{"_index":4049,"title":{},"body":{"index.html":{}}}],["platform/client",{"_index":4155,"title":{},"body":{"index.html":{}}}],["playback",{"_index":647,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["please",{"_index":3717,"title":{},"body":{"classes/TooManyRequestsMsException.html":{},"index.html":{}}}],["pminitstatus",{"_index":3386,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["pmservice",{"_index":127,"title":{},"body":{"classes/AbstractProcess.html":{},"controllers/ProcessController.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["pngquant",{"_index":4024,"title":{},"body":{"dependencies.html":{}}}],["pointer",{"_index":540,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["pointer\"]?.description",{"_index":2428,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["port",{"_index":1344,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["possibility",{"_index":1216,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"license.html":{}}}],["possible",{"_index":4036,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["post",{"_index":781,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CaptchaController.html":{},"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/ProfileController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["post(\"/entity/:target",{"_index":2019,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["post(\"/exchange",{"_index":833,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"/export",{"_index":3954,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["post(\"/import",{"_index":3949,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["post(\"/login",{"_index":805,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"/logout",{"_index":828,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"/recreate/:id",{"_index":3013,"title":{},"body":{"controllers/MediaController.html":{}}}],["post(\"/target",{"_index":2007,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["post(\"/upload",{"_index":2115,"title":{},"body":{"controllers/FileController.html":{}}}],["post(\"/upload/:type",{"_index":3000,"title":{},"body":{"controllers/MediaController.html":{}}}],["post(\"/validate",{"_index":1384,"title":{},"body":{"controllers/CaptchaController.html":{}}}],["post('/entity/:target",{"_index":1996,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["post('/export')@forroles(roles.admin",{"_index":3939,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["post('/import",{"_index":3945,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["post('/import')@forroles(roles.root",{"_index":3942,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["post('/recreate/:id",{"_index":2993,"title":{},"body":{"controllers/MediaController.html":{}}}],["post('/target')@forroles(roles.admin",{"_index":1998,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["post('/upload')@useinterceptors(undefined",{"_index":2098,"title":{},"body":{"controllers/FileController.html":{}}}],["post('/upload/:type?')@useinterceptors(undefined",{"_index":2988,"title":{},"body":{"controllers/MediaController.html":{}}}],["post('/validate",{"_index":1379,"title":{},"body":{"controllers/CaptchaController.html":{}}}],["postgres",{"_index":4157,"title":{},"body":{"index.html":{},"properties.html":{}}}],["power",{"_index":4190,"title":{},"body":{"license.html":{}}}],["powerful",{"_index":4082,"title":{},"body":{"index.html":{}}}],["precision",{"_index":707,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["preferred",{"_index":4205,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":733,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicExplorerController.html":{},"controllers/CaptchaController.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"interfaces/TargetData.html":{},"controllers/XmlDataBridgeController.html":{},"miscellaneous/variables.html":{}}}],["preinstallation",{"_index":4141,"title":{},"body":{"index.html":{}}}],["prepare",{"_index":4268,"title":{},"body":{"license.html":{}}}],["prepared",{"_index":2941,"title":{},"body":{"classes/LogService.html":{}}}],["preparemessage",{"_index":2919,"title":{},"body":{"classes/LogService.html":{}}}],["preparemessage(message",{"_index":2938,"title":{},"body":{"classes/LogService.html":{}}}],["prepares",{"_index":2940,"title":{},"body":{"classes/LogService.html":{}}}],["presence",{"_index":39,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["preservechildrenorder",{"_index":3857,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["preview",{"_index":401,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["previewfiles",{"_index":2640,"title":{},"body":{"injectables/FileService.html":{}}}],["previewfilesformat",{"_index":2642,"title":{},"body":{"injectables/FileService.html":{}}}],["previewlang",{"_index":2638,"title":{},"body":{"injectables/FileService.html":{}}}],["previewname",{"_index":2636,"title":{},"body":{"injectables/FileService.html":{}}}],["previewtype",{"_index":2644,"title":{},"body":{"injectables/FileService.html":{}}}],["previewtypeext",{"_index":2646,"title":{},"body":{"injectables/FileService.html":{}}}],["primary",{"_index":484,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{}}}],["primary_platform",{"_index":2776,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["primarycolumn",{"_index":1108,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/LanguageEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserRoleEntity.html":{}}}],["primarycolumn(\"varchar",{"_index":1922,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/LanguageEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["primarycolumn('varchar",{"_index":1909,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/ProcessUnitEntity.html":{}}}],["primarygeneratedcolumn",{"_index":723,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["primarygeneratedcolumn({zerofill",{"_index":712,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["primaryplatform",{"_index":503,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["printed",{"_index":4419,"title":{},"body":{"license.html":{}}}],["priority",{"_index":1103,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"entities/CategoryEntity.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["private",{"_index":25,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"controllers/AuthController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"index.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["private_dir",{"_index":2550,"title":{},"body":{"injectables/FileService.html":{}}}],["privatemedia",{"_index":1239,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["proceed",{"_index":37,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"index.html":{}}}],["process",{"_index":122,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"modules/AuthModule.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["process.command",{"_index":3438,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["process.constants",{"_index":187,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["process.controller",{"_index":3498,"title":{},"body":{"modules/ProcessModule.html":{}}}],["process.cwd",{"_index":1688,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["process.cwd()}/${process.env.config_src_dir",{"_index":4571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.redis_host",{"_index":1343,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["process.env.redis_password",{"_index":1349,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["process.env.redis_user",{"_index":1348,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["process.env.transport_host",{"_index":3270,"title":{},"body":{"modules/MsClientModule.html":{}}}],["process.exit(0",{"_index":4574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.getprocessinstance",{"_index":3524,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["process.hasprocessinstance",{"_index":3440,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["process.log.entity",{"_index":3561,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["process.loglevel",{"_index":198,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.pid",{"_index":252,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.registerprocess",{"_index":193,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.status",{"_index":194,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["process.status.crashed",{"_index":3565,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["process.status.execute",{"_index":3564,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["process.status.ready",{"_index":3563,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["process.ts",{"_index":120,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:140",{"_index":160,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:148",{"_index":162,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:157",{"_index":150,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:165",{"_index":145,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:173",{"_index":165,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:31",{"_index":139,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:32",{"_index":143,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:33",{"_index":141,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:35",{"_index":138,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:44",{"_index":168,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:80",{"_index":171,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:94",{"_index":176,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.types",{"_index":3382,"title":{},"body":{"entities/ProcessLogEntity.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{}}}],["process.unit.entity",{"_index":3381,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["process:register",{"_index":4038,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["process:start",{"_index":4040,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["process:stop",{"_index":4041,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["process:unregister",{"_index":4039,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["processandvalidatepropertiescontent",{"_index":1571,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processandvalidatepropertiescontent(filepath",{"_index":1611,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processcode",{"_index":3405,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processcontroller",{"_index":3319,"title":{"controllers/ProcessController.html":{}},"body":{"controllers/ProcessController.html":{},"modules/ProcessModule.html":{}}}],["processdata",{"_index":3357,"title":{},"body":{"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["processdata.code",{"_index":3361,"title":{},"body":{"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["processdata.crontab?.length",{"_index":3451,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["processdata.enabled",{"_index":3464,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processdata.logs",{"_index":3359,"title":{},"body":{"controllers/ProcessController.html":{}}}],["processdata.status",{"_index":3467,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processed",{"_index":352,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["processeddata",{"_index":1581,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processeddata[variablename",{"_index":1731,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processedvalue",{"_index":1736,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processedvalue};\\n",{"_index":1742,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processes",{"_index":1614,"title":{},"body":{"injectables/ConfigService.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["processinstance",{"_index":3533,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["processinstance.start",{"_index":3537,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["processinstance.stop",{"_index":3538,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["processlist",{"_index":3449,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processlog",{"_index":3366,"title":{"interfaces/ProcessLog.html":{}},"body":{"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"interfaces/ProcessUnit.html":{}}}],["processlogentity",{"_index":140,"title":{"entities/ProcessLogEntity.html":{}},"body":{"classes/AbstractProcess.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["processlogrep",{"_index":3400,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processmanagerservice",{"_index":142,"title":{"injectables/ProcessManagerService.html":{}},"body":{"classes/AbstractProcess.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{},"overview.html":{}}}],["processmanagerservice.pminitstatus",{"_index":3445,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processmodule",{"_index":3476,"title":{"modules/ProcessModule.html":{}},"body":{"modules/ProcessModule.html":{},"modules.html":{},"overview.html":{}}}],["processregisterservice",{"_index":3482,"title":{"injectables/ProcessRegisterService.html":{}},"body":{"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"overview.html":{}}}],["processunit",{"_index":3369,"title":{"interfaces/ProcessUnit.html":{}},"body":{"interfaces/ProcessLog.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["processunitentity",{"_index":3374,"title":{"entities/ProcessUnitEntity.html":{}},"body":{"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{}}}],["processunitrep",{"_index":3399,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["product",{"_index":4346,"title":{},"body":{"license.html":{}}}],["profile",{"_index":358,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicUserController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"controllers/ProfileController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["profile.controller",{"_index":3766,"title":{},"body":{"modules/UserModule.html":{}}}],["profile_class_name",{"_index":2777,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["profile_class_value",{"_index":2778,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["profile_creator",{"_index":2779,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["profile_version",{"_index":2781,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["profileclassname",{"_index":488,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["profileclassvalue",{"_index":486,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["profilecontroller",{"_index":3566,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/UserModule.html":{}}}],["profilecreator",{"_index":515,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["profileversion",{"_index":483,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["progressive",{"_index":477,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["project",{"_index":1639,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["prominent",{"_index":4305,"title":{},"body":{"license.html":{}}}],["promise",{"_index":144,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"classes/MsClient.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["promise((resolve",{"_index":3234,"title":{},"body":{"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["promise.all",{"_index":1675,"title":{},"body":{"injectables/ConfigService.html":{}}}],["promise.all(filepromises",{"_index":1874,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["properties",{"_index":16,"title":{"properties.html":{},"additional-documentation/properties.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"injectables/MessagesBrokerService.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["properties_file_ext_pattern",{"_index":1634,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["properties_file_ext_pattern).slice(1",{"_index":1771,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertiesfiles",{"_index":1562,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertieswithvalues",{"_index":1674,"title":{},"body":{"injectables/ConfigService.html":{}}}],["property",{"_index":1015,"title":{},"body":{"interfaces/BasicAuthController.html":{},"interfaces/BasicExplorerController.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["propertykey",{"_index":1729,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertykey.startswith(\"kp",{"_index":1732,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertykey.startswith(\"local",{"_index":1733,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertykeys",{"_index":1655,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertykeys.sort((a",{"_index":1659,"title":{},"body":{"injectables/ConfigService.html":{}}}],["protected",{"_index":17,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"injectables/FileService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{}}}],["protecting",{"_index":4622,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["protection",{"_index":938,"title":{},"body":{"classes/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["provide",{"_index":893,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{}}}],["provided",{"_index":907,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicUserController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"license.html":{}}}],["provider",{"_index":2035,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["providers",{"_index":892,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"overview.html":{}}}],["providers.push(h",{"_index":2042,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["providers.push(providerwithhandlers",{"_index":2043,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["providerwithhandlers",{"_index":2038,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["provides",{"_index":1286,"title":{},"body":{"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"injectables/ConfigService.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"index.html":{},"license.html":{}}}],["providing",{"_index":854,"title":{},"body":{"modules/AuthModule.html":{},"classes/LogService.html":{},"index.html":{}}}],["proxy",{"_index":3214,"title":{},"body":{"classes/MsClient.html":{}}}],["pubclient",{"_index":3172,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["public",{"_index":397,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"index.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["public/private",{"_index":2527,"title":{},"body":{"injectables/FileService.html":{}}}],["public_dir",{"_index":2552,"title":{},"body":{"injectables/FileService.html":{}}}],["publicly",{"_index":4269,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":485,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["purposes",{"_index":4188,"title":{},"body":{"license.html":{}}}],["push",{"_index":3924,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["pwd",{"_index":3752,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["qb",{"_index":2586,"title":{},"body":{"injectables/FileService.html":{}}}],["qb.andwhere(`file.public",{"_index":2588,"title":{},"body":{"injectables/FileService.html":{}}}],["qb.getone",{"_index":2589,"title":{},"body":{"injectables/FileService.html":{}}}],["quality",{"_index":1221,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":1526,"title":{},"body":{"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"controllers/MediaController.html":{},"interfaces/XdbRequest.html":{}}}],["query(\"format",{"_index":3003,"title":{},"body":{"controllers/MediaController.html":{}}}],["query(\"id",{"_index":2015,"title":{},"body":{"controllers/ExplorerController.html":{},"controllers/MediaController.html":{}}}],["query(\"public",{"_index":2119,"title":{},"body":{"controllers/FileController.html":{}}}],["query(\"type",{"_index":2012,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["query(\"webp",{"_index":3004,"title":{},"body":{"controllers/MediaController.html":{}}}],["queryfailederror",{"_index":1796,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["r._",{"_index":3876,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["radius",{"_index":4161,"title":{},"body":{"index.html":{}}}],["random",{"_index":2697,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["range",{"_index":620,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["rapid",{"_index":4045,"title":{},"body":{"index.html":{},"properties.html":{}}}],["rate",{"_index":378,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["ratio",{"_index":613,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["read",{"_index":1850,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["read/write",{"_index":1976,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["readable",{"_index":4314,"title":{},"body":{"license.html":{}}}],["readdir",{"_index":1858,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["readdir(dirpath",{"_index":1875,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["readdir(filepath",{"_index":1871,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["readdirectoryrecursively",{"_index":1857,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["readdirectoryrecursively(tmpdir",{"_index":3702,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["readfile",{"_index":1853,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["reading",{"_index":4521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":18,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"controllers/CaptchaController.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"controllers/MediaController.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["readoperatorre",{"_index":3853,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["readrequest",{"_index":1114,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["reads",{"_index":1557,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{}}}],["ready",{"_index":3422,"title":{},"body":{"injectables/ProcessManagerService.html":{},"miscellaneous/enumerations.html":{}}}],["real",{"_index":4102,"title":{},"body":{"index.html":{}}}],["reason",{"_index":4406,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":4347,"title":{},"body":{"license.html":{}}}],["recaptcha",{"_index":2661,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"index.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["recaptchas",{"_index":2664,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["received",{"_index":4252,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":4303,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":4417,"title":{},"body":{"license.html":{}}}],["recommendation",{"_index":4156,"title":{},"body":{"index.html":{}}}],["recommendations",{"_index":4142,"title":{},"body":{"index.html":{}}}],["record",{"_index":2258,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["recorded",{"_index":440,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["recording",{"_index":445,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{}}}],["records",{"_index":4066,"title":{},"body":{"index.html":{}}}],["recreate",{"_index":3081,"title":{},"body":{"classes/MediaManager.html":{}}}],["recreate(id",{"_index":1243,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["recreated",{"_index":1202,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["recreatemedia",{"_index":1181,"title":{},"body":{"interfaces/BasicMediaController.html":{},"controllers/MediaController.html":{}}}],["recreatemedia(@param(\"id",{"_index":3014,"title":{},"body":{"controllers/MediaController.html":{}}}],["recreatemedia(id",{"_index":1198,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["recreates",{"_index":1200,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["recurring",{"_index":4076,"title":{},"body":{"index.html":{}}}],["recursive",{"_index":1775,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["recursively",{"_index":1856,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["redis",{"_index":1330,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"dependencies.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["redis(redisoptions",{"_index":3639,"title":{},"body":{"modules/RedisModule.html":{}}}],["redis.module",{"_index":1331,"title":{},"body":{"modules/CacheModule.html":{}}}],["redis_client",{"_index":3191,"title":{},"body":{"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"miscellaneous/variables.html":{}}}],["redis_db",{"_index":4131,"title":{},"body":{"index.html":{}}}],["redis_host",{"_index":4129,"title":{},"body":{"index.html":{}}}],["redis_password",{"_index":4133,"title":{},"body":{"index.html":{}}}],["redis_port",{"_index":4130,"title":{},"body":{"index.html":{}}}],["redis_user",{"_index":4132,"title":{},"body":{"index.html":{}}}],["rediscacheservice",{"_index":1337,"title":{"injectables/RedisCacheService.html":{}},"body":{"modules/CacheModule.html":{},"injectables/RedisCacheService.html":{}}}],["redisinstance",{"_index":3633,"title":{},"body":{"modules/RedisModule.html":{}}}],["redismodule",{"_index":1326,"title":{"modules/RedisModule.html":{}},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"modules.html":{},"overview.html":{}}}],["redismodule.forrootasync",{"_index":1339,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["redismodule.redisinstance",{"_index":3634,"title":{},"body":{"modules/RedisModule.html":{}}}],["redisoptions",{"_index":3637,"title":{},"body":{"modules/RedisModule.html":{}}}],["redistributing",{"_index":4360,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":4298,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":469,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["reference",{"_index":402,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["reference.interface",{"_index":3920,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["referenced_entity_name",{"_index":1947,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["referenced_table_name",{"_index":1949,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["referencedentityname",{"_index":1091,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["referencedtablename",{"_index":1090,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["reflect",{"_index":4025,"title":{},"body":{"dependencies.html":{}}}],["reflecting",{"_index":1220,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["reflector",{"_index":3651,"title":{},"body":{"guards/RolesGuard.html":{}}}],["refresh",{"_index":909,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["refresh_token",{"_index":935,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["refresh_token_error_msg",{"_index":924,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["refreshtoken",{"_index":913,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["regarding",{"_index":4341,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":3412,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["regenerating",{"_index":1201,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["regex",{"_index":3850,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["register",{"_index":3511,"title":{},"body":{"injectables/ProcessRegisterService.html":{},"miscellaneous/enumerations.html":{}}}],["register.service",{"_index":3495,"title":{},"body":{"modules/ProcessModule.html":{}}}],["register.service.ts",{"_index":3502,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:126",{"_index":3517,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:36",{"_index":3508,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:62",{"_index":3513,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:77",{"_index":3515,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:91",{"_index":3510,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["registercronjob",{"_index":3505,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["registercronjob(processdata",{"_index":3509,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["registered",{"_index":1161,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["registered_processes",{"_index":4482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registerfont",{"_index":2717,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["registerfont(capfontpath",{"_index":2751,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["registering",{"_index":3503,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["registerprocess",{"_index":192,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["registerprocess(this",{"_index":199,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["registers",{"_index":3420,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["registration",{"_index":3456,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["reject",{"_index":3235,"title":{},"body":{"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["reject(err",{"_index":3629,"title":{},"body":{"injectables/RedisCacheService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["reject(error",{"_index":3240,"title":{},"body":{"classes/MsClient.html":{}}}],["related",{"_index":920,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"injectables/FileService.html":{},"classes/JwtDto.html":{},"injectables/LocaleSubscriber.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["relatedentities",{"_index":2886,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["relatedentity",{"_index":2887,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["relatedentity.id",{"_index":2888,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["relations",{"_index":1140,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["relationships",{"_index":1134,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/TargetData.html":{},"index.html":{}}}],["relative",{"_index":538,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["relativepath",{"_index":1860,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["release",{"_index":382,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["released",{"_index":369,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["reliable",{"_index":4075,"title":{},"body":{"index.html":{}}}],["remain",{"_index":4226,"title":{},"body":{"license.html":{}}}],["removal",{"_index":2859,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["remove",{"_index":1301,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"classes/FileManager.html":{},"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{},"classes/MediaManager.html":{},"interfaces/XdbRequest.html":{}}}],["remove(id",{"_index":1242,"title":{},"body":{"interfaces/BasicMediaController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["removebyid",{"_index":1291,"title":{},"body":{"injectables/BasicUserService.html":{},"classes/UserService.html":{}}}],["removebyid(id",{"_index":1281,"title":{},"body":{"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["removed",{"_index":685,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["removeduplicateobjects",{"_index":3884,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["removeentity",{"_index":1043,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["removeentity(target",{"_index":1057,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["removeevent",{"_index":2869,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["removefile",{"_index":1171,"title":{},"body":{"interfaces/BasicFileController.html":{},"controllers/FileController.html":{}}}],["removefile(@param(\"id",{"_index":2133,"title":{},"body":{"controllers/FileController.html":{}}}],["removefile(id",{"_index":686,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["removemedia",{"_index":1182,"title":{},"body":{"interfaces/BasicMediaController.html":{},"controllers/MediaController.html":{}}}],["removemedia(@param(\"id",{"_index":3011,"title":{},"body":{"controllers/MediaController.html":{}}}],["removemedia(id",{"_index":1203,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["removeproperty",{"_index":1514,"title":{},"body":{"controllers/ConfigController.html":{},"injectables/ConfigService.html":{}}}],["removeproperty(@query(\"key",{"_index":1541,"title":{},"body":{"controllers/ConfigController.html":{}}}],["removeproperty(key",{"_index":1519,"title":{},"body":{"controllers/ConfigController.html":{},"injectables/ConfigService.html":{}}}],["removes",{"_index":684,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["removeuserprofile",{"_index":1254,"title":{},"body":{"interfaces/BasicUserController.html":{},"controllers/ProfileController.html":{}}}],["removeuserprofile(@param(\"id",{"_index":3588,"title":{},"body":{"controllers/ProfileController.html":{}}}],["removeuserprofile(id",{"_index":1262,"title":{},"body":{"interfaces/BasicUserController.html":{},"controllers/ProfileController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["removing",{"_index":2219,"title":{},"body":{"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{}}}],["renderer",{"_index":1104,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["renderer.entity",{"_index":1970,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["renderer.entity.ts",{"_index":1975,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:36",{"_index":1977,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:40",{"_index":1979,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:44",{"_index":1978,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:53",{"_index":1981,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:60",{"_index":1980,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["rendering",{"_index":507,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"entities/ExplorerColumnRendererEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["rendering_intent_name",{"_index":2782,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["rendering_intent_value",{"_index":2784,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["renderingintentname",{"_index":513,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["renderingintentvalue",{"_index":512,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["replace",{"_index":4160,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["replaced",{"_index":4412,"title":{},"body":{"license.html":{}}}],["repository",{"_index":1288,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/FileService.html":{},"injectables/LocaleService.html":{},"injectables/ProcessManagerService.html":{},"index.html":{},"properties.html":{}}}],["represent",{"_index":448,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["representation",{"_index":464,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["representatives",{"_index":4241,"title":{},"body":{"license.html":{}}}],["represented",{"_index":650,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["representing",{"_index":121,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["represents",{"_index":1544,"title":{},"body":{"interfaces/ConfigItem.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/Roles.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["reproduce",{"_index":4267,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":4350,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":4172,"title":{},"body":{"license.html":{}}}],["req",{"_index":57,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"controllers/AuthController.html":{},"guards/RolesGuard.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["req.body",{"_index":3976,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["req.cookies.accesstoken",{"_index":107,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req.cookies?.accesstoken",{"_index":106,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req.headers.authorization",{"_index":110,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req.headers?.authorization",{"_index":108,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req.headers[\"content",{"_index":3974,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["req.on(\"data",{"_index":3979,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["req.on(\"end",{"_index":3980,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["req[request_props.accesstoken",{"_index":95,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req[request_props.currentuser",{"_index":102,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req[request_props.currentuser]?.roles",{"_index":3661,"title":{},"body":{"guards/RolesGuard.html":{}}}],["request",{"_index":35,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"controllers/AuthController.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/MsClient.html":{},"classes/Roles.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["request.cookies?.refreshtoken",{"_index":835,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.data",{"_index":2741,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["request.id",{"_index":2740,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["request.ip",{"_index":815,"title":{},"body":{"controllers/AuthController.html":{}}}],["request[request_props.accesstoken",{"_index":4495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request[request_props.currentuser",{"_index":4529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request_props",{"_index":84,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":1193,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["requests",{"_index":963,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["required",{"_index":764,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/BasicAuthController.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"classes/ExchangeTokenPayload.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["res",{"_index":677,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"controllers/AuthController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"injectables/CategoryService.html":{},"controllers/ExplorerController.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/LocaleService.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["res.children.foreach((cat",{"_index":1508,"title":{},"body":{"injectables/CategoryService.html":{}}}],["res.children?.length",{"_index":1507,"title":{},"body":{"injectables/CategoryService.html":{}}}],["res.push(ls",{"_index":2854,"title":{},"body":{"injectables/LocaleService.html":{}}}],["res.sendfile(filepath",{"_index":2128,"title":{},"body":{"controllers/FileController.html":{}}}],["res.sendfile(path.join(process.cwd",{"_index":3008,"title":{},"body":{"controllers/MediaController.html":{}}}],["reset",{"_index":1327,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}],["resetallprocessstatuses",{"_index":3393,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["resets",{"_index":3418,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["resolution",{"_index":433,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["resolutionunit",{"_index":531,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["resolutionx",{"_index":528,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["resolutiony",{"_index":530,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["resolve(body",{"_index":3882,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["resolve(keys",{"_index":3626,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["resolve(result",{"_index":3239,"title":{},"body":{"classes/MsClient.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["resolves",{"_index":671,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["resolving",{"_index":2668,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/MsClient.html":{}}}],["response",{"_index":388,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"controllers/AuthController.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/DbExceptionFilter.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/typealiases.html":{}}}],["response.clearcookie(\"accesstoken",{"_index":831,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.clearcookie(\"refreshtoken",{"_index":832,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.cookie(\"accesstoken",{"_index":818,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.cookie(\"refreshtoken",{"_index":824,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.status(502).json",{"_index":1803,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["response?.data?.success",{"_index":2680,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["responsedto",{"_index":791,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["responsedto(jwtdto",{"_index":804,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsedto(jwtdto)@post('/exchange",{"_index":739,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsedto(jwtdto)@post('/login",{"_index":744,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsedto(userdto",{"_index":3582,"title":{},"body":{"controllers/ProfileController.html":{}}}],["responsedto(userdto)@delete('/:id')@forroles(roles.admin",{"_index":3573,"title":{},"body":{"controllers/ProfileController.html":{}}}],["responsedto(userdto)@get('/:id",{"_index":3571,"title":{},"body":{"controllers/ProfileController.html":{}}}],["responsedto(userdto)@patch('/:id",{"_index":3575,"title":{},"body":{"controllers/ProfileController.html":{}}}],["responsedto(userdto)@post('/')@forroles(roles.admin",{"_index":3568,"title":{},"body":{"controllers/ProfileController.html":{}}}],["responses",{"_index":1791,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["responsibility",{"_index":4399,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":533,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"modules/ProcessModule.html":{},"modules/UserModule.html":{},"interfaces/VideoFileMetadata.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["restricted",{"_index":4655,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["restricting",{"_index":1470,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts",{"_index":1469,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts:35",{"_index":1477,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts:39",{"_index":1476,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts:43",{"_index":1473,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts:46",{"_index":1475,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["result",{"_index":829,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"controllers/CaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/DirectoryStructure.html":{},"classes/ExchangeTokenPayload.html":{},"injectables/FileMetadataService.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/MsClient.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"license.html":{}}}],["result.schema.push(obj",{"_index":3878,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["result[key",{"_index":2260,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["result[newrelativepath",{"_index":1870,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["result[relativepath",{"_index":1872,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["resulting",{"_index":4209,"title":{},"body":{"license.html":{}}}],["results",{"_index":115,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["retain",{"_index":4308,"title":{},"body":{"license.html":{}}}],["retrieval",{"_index":1560,"title":{},"body":{"injectables/ConfigService.html":{}}}],["retrieve",{"_index":3408,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{}}}],["retrieved",{"_index":680,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["retrieves",{"_index":675,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/LogService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["return",{"_index":103,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"controllers/FileController.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/NotEmptyPipe.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserSubscriber.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1030,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"interfaces/BasicUserController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["returns",{"_index":50,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["revisions",{"_index":4222,"title":{},"body":{"license.html":{}}}],["rgb",{"_index":2698,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["rights",{"_index":521,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["risks",{"_index":4362,"title":{},"body":{"license.html":{}}}],["rm(dir",{"_index":2566,"title":{},"body":{"injectables/FileService.html":{}}}],["role",{"_index":1274,"title":{},"body":{"interfaces/BasicUserController.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["role.entity",{"_index":1069,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{}}}],["role.entity.ts",{"_index":3772,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["role.entity.ts:35",{"_index":3773,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["role.entity.ts:39",{"_index":3774,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["role.entity.ts:43",{"_index":3775,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["roles",{"_index":1272,"title":{"classes/Roles.html":{}},"body":{"interfaces/BasicUserController.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"controllers/XmlDataBridgeController.html":{},"miscellaneous/variables.html":{}}}],["roles.admin",{"_index":3584,"title":{},"body":{"controllers/ProfileController.html":{}}}],["roles.decorator",{"_index":1532,"title":{},"body":{"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"controllers/XmlDataBridgeController.html":{}}}],["roles.decorator.ts",{"_index":4459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles.indexof(role.code",{"_index":3664,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles.manager",{"_index":3569,"title":{},"body":{"controllers/ProfileController.html":{}}}],["roles.name",{"_index":4601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles.name.lang",{"_index":4602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles.root",{"_index":3663,"title":{},"body":{"guards/RolesGuard.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["roles.save",{"_index":3753,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["rolesguard",{"_index":2000,"title":{"guards/RolesGuard.html":{}},"body":{"controllers/ExplorerController.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{}}}],["root",{"_index":1491,"title":{},"body":{"injectables/CategoryService.html":{},"classes/Roles.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["roottoken",{"_index":3847,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["rotate",{"_index":659,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["rotation",{"_index":656,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["route",{"_index":4503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routes",{"_index":4501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["row",{"_index":1154,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["rowid",{"_index":1151,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["rowobj",{"_index":3868,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["rowobj[itemname",{"_index":3871,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["rowobj[itemname].values",{"_index":3874,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["rows",{"_index":3866,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{}}}],["royalty",{"_index":4264,"title":{},"body":{"license.html":{}}}],["rpcexception",{"_index":3276,"title":{},"body":{"classes/MsException.html":{}}}],["rtexp",{"_index":1014,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["run",{"_index":4145,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1893,"title":{},"body":{"injectables/DtoInterceptor.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"dependencies.html":{}}}],["safedeserialize",{"_index":3168,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safedeserialize(data",{"_index":3174,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safely",{"_index":3176,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safeserialize",{"_index":3169,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safeserialize(data",{"_index":3180,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safety",{"_index":4104,"title":{},"body":{"index.html":{}}}],["same",{"_index":4418,"title":{},"body":{"license.html":{}}}],["samesite",{"_index":820,"title":{},"body":{"controllers/AuthController.html":{}}}],["sample",{"_index":377,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["sample\"]?.value",{"_index":2336,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["sample_aspect_ratio",{"_index":3804,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["sample_rate",{"_index":717,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["sampleaspectratio",{"_index":646,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["sampled",{"_index":458,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["samplerate",{"_index":343,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["samples",{"_index":379,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["saturation",{"_index":618,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["save",{"_index":4537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saved",{"_index":672,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["saveentity",{"_index":1044,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"controllers/ExplorerController.html":{}}}],["saveentity(target",{"_index":1059,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["saveentitydata",{"_index":1150,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["saveentitydata(target",{"_index":2057,"title":{},"body":{"classes/ExplorerService.html":{}}}],["savehandlers",{"_index":1120,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["saves",{"_index":1147,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"interfaces/TargetData.html":{}}}],["savetarget",{"_index":1045,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"controllers/ExplorerController.html":{}}}],["savetarget(@body",{"_index":2008,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["savetarget(target",{"_index":1061,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["saving",{"_index":665,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/VideoFileMetadata.html":{}}}],["scalable",{"_index":4093,"title":{},"body":{"index.html":{},"properties.html":{}}}],["scale",{"_index":709,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["scan",{"_index":1578,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scanforpropertiesfiles",{"_index":1572,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scanforpropertiesfiles(directory",{"_index":1617,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scanning",{"_index":1595,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scans",{"_index":1620,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scene",{"_index":600,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["scenecapturetype",{"_index":616,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["scenetype",{"_index":603,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["schedulemodule",{"_index":3493,"title":{},"body":{"modules/ProcessModule.html":{}}}],["schedulemodule.forroot",{"_index":3500,"title":{},"body":{"modules/ProcessModule.html":{}}}],["schedulerregistry",{"_index":3507,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["scheduling",{"_index":4079,"title":{},"body":{"index.html":{}}}],["schema",{"_index":1133,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["schema.ts",{"_index":4461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search",{"_index":1492,"title":{},"body":{"injectables/CategoryService.html":{}}}],["second",{"_index":354,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["seconds",{"_index":363,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/RedisCacheService.html":{},"interfaces/VideoFileMetadata.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["secret",{"_index":886,"title":{},"body":{"modules/AuthModule.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["secretkey",{"_index":2675,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["section",{"_index":1054,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["section_enabled",{"_index":1951,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["section_priority",{"_index":1953,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["section_renderer_params",{"_index":1956,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["section_visibility",{"_index":1958,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["sectionenabled",{"_index":1094,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["sectionpriority",{"_index":1092,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["sectionrenderer",{"_index":1098,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["sectionrendererparams",{"_index":1926,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["sections",{"_index":4177,"title":{},"body":{"license.html":{}}}],["sectionvisibility",{"_index":1096,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["see",{"_index":775,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["selection",{"_index":1117,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["sell",{"_index":4276,"title":{},"body":{"license.html":{}}}],["send",{"_index":679,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["send(pattern",{"_index":3134,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["sending",{"_index":1196,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["sends",{"_index":676,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/MsClient.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["sensing",{"_index":580,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["sensingmethod",{"_index":599,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["sensitivity",{"_index":560,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["sensor",{"_index":561,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["sent",{"_index":681,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["separable",{"_index":4227,"title":{},"body":{"license.html":{}}}],["separate",{"_index":4339,"title":{},"body":{"license.html":{}}}],["serialize",{"_index":3183,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["serialized",{"_index":3184,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["serializer",{"_index":1886,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["serializes",{"_index":3182,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["server",{"_index":395,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["servers",{"_index":4067,"title":{},"body":{"index.html":{}}}],["serves",{"_index":4652,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["service",{"_index":860,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/JwtDto.html":{},"injectables/LocaleService.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["services",{"_index":1459,"title":{},"body":{"modules/CategoryModule.html":{},"modules/LocaleModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["set",{"_index":167,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicFileController.html":{},"classes/CacheService.html":{},"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["set(key",{"_index":1374,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["setaudiomd",{"_index":2204,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setaudiomd(md",{"_index":2209,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setimagemd",{"_index":2205,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setimagemd(md",{"_index":2212,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setmetadata(allowedformetadatakey",{"_index":4502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setprocessunitstatus",{"_index":3394,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["setprocessunitstatus(code",{"_index":3423,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["setproperty",{"_index":1515,"title":{},"body":{"controllers/ConfigController.html":{},"injectables/ConfigService.html":{}}}],["setproperty(@body",{"_index":1539,"title":{},"body":{"controllers/ConfigController.html":{}}}],["setproperty(body",{"_index":1522,"title":{},"body":{"controllers/ConfigController.html":{}}}],["setproperty(item",{"_index":1623,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sets",{"_index":166,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["setstatus",{"_index":133,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["setstatus(status",{"_index":164,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["setting",{"_index":610,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicFileController.html":{},"interfaces/ConfigItem.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"injectables/RedisCacheService.html":{},"interfaces/VideoFileMetadata.html":{}}}],["settings",{"_index":359,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["setup",{"_index":3631,"title":{},"body":{"modules/RedisModule.html":{}}}],["setvideomd",{"_index":2206,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setvideomd(md",{"_index":2214,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["sha",{"_index":1836,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["shall",{"_index":4175,"title":{},"body":{"license.html":{}}}],["shared/constants",{"_index":1533,"title":{},"body":{"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"controllers/XmlDataBridgeController.html":{}}}],["shared/decorators/access",{"_index":798,"title":{},"body":{"controllers/AuthController.html":{}}}],["shared/decorators/current",{"_index":2002,"title":{},"body":{"controllers/ExplorerController.html":{},"controllers/ProfileController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["shared/decorators/for",{"_index":1531,"title":{},"body":{"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["shared/decorators/response",{"_index":792,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["shared/guards/auth.guard",{"_index":1527,"title":{},"body":{"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["shared/guards/lite",{"_index":795,"title":{},"body":{"controllers/AuthController.html":{}}}],["shared/guards/roles.guard",{"_index":2001,"title":{},"body":{"controllers/ExplorerController.html":{},"controllers/ProfileController.html":{}}}],["shared/modules/cache/cache.module",{"_index":869,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/ProcessModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["shared/modules/cache/cache.types",{"_index":788,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["shared/modules/locale/entity/localized",{"_index":1919,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["shared/modules/locale/locale.types",{"_index":1066,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["shared/modules/log/log.constants",{"_index":1636,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["shared/modules/log/log.module",{"_index":871,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/ProcessModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["shared/modules/messages",{"_index":3436,"title":{},"body":{"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{}}}],["shared/modules/pageable/pageable.types",{"_index":1073,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["shared/modules/warlock/warlock.constants",{"_index":3434,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["shared/modules/warlock/warlock.module",{"_index":3497,"title":{},"body":{"modules/ProcessModule.html":{}}}],["shared/modules/warlock/warlock.types",{"_index":3435,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["shared/pipes/not",{"_index":2111,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["shared/transformers/simple",{"_index":1920,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["shared/utils/common.utils",{"_index":3342,"title":{},"body":{"controllers/ProcessController.html":{}}}],["shared/utils/files.utils",{"_index":2228,"title":{},"body":{"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["shared/utils/number.utils",{"_index":2724,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["shared/utils/object.utils",{"_index":191,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["shared/utils/string.utils",{"_index":2722,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["shared/utils/transform.utils",{"_index":1000,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["shared/utils/user.utils",{"_index":3578,"title":{},"body":{"controllers/ProfileController.html":{}}}],["shares",{"_index":4199,"title":{},"body":{"license.html":{}}}],["sharp",{"_index":4027,"title":{},"body":{"dependencies.html":{}}}],["sharpness",{"_index":619,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["shot",{"_index":606,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["shutter",{"_index":550,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["shutterspeedvalue",{"_index":570,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["side",{"_index":526,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicFileController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["sign",{"_index":4610,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["signature",{"_index":495,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["signature\"]?.description",{"_index":2388,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["signoptions",{"_index":888,"title":{},"body":{"modules/AuthModule.html":{}}}],["simplejsontransformer",{"_index":1431,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"miscellaneous/variables.html":{}}}],["simplifying",{"_index":4059,"title":{},"body":{"index.html":{}}}],["single",{"_index":449,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["size",{"_index":398,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["skip",{"_index":3454,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["sleep",{"_index":3343,"title":{},"body":{"controllers/ProcessController.html":{}}}],["slicing",{"_index":4085,"title":{},"body":{"index.html":{}}}],["software",{"_index":380,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/BasicFileController.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["sole",{"_index":4398,"title":{},"body":{"license.html":{}}}],["solely",{"_index":4357,"title":{},"body":{"license.html":{}}}],["solution",{"_index":1025,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["sort",{"_index":1483,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["sort(cat",{"_index":1493,"title":{},"body":{"injectables/CategoryService.html":{}}}],["sorted",{"_index":1499,"title":{},"body":{"injectables/CategoryService.html":{}}}],["sortedkeys",{"_index":1658,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sortedkeys.length",{"_index":1670,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sortedkeys.slice(start",{"_index":1673,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sorting",{"_index":1590,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sortorder",{"_index":3306,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"miscellaneous/enumerations.html":{}}}],["sorts",{"_index":1495,"title":{},"body":{"injectables/CategoryService.html":{}}}],["sound",{"_index":372,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["source.pipe",{"_index":3244,"title":{},"body":{"classes/MsClient.html":{}}}],["sources",{"_index":4151,"title":{},"body":{"index.html":{}}}],["space",{"_index":490,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["space\"]?.description",{"_index":2381,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["spaces",{"_index":511,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["special",{"_index":4374,"title":{},"body":{"license.html":{}}}],["specialization",{"_index":2659,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["specific",{"_index":267,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"interfaces/UpsertMediaRequest.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{}}}],["specification",{"_index":481,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["specified",{"_index":180,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AuthService.html":{},"interfaces/BasicExplorerController.html":{},"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["specifies",{"_index":396,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["specifying",{"_index":534,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["speed",{"_index":551,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["split",{"_index":1720,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src",{"_index":4522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/auth.config",{"_index":875,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/captcha.config",{"_index":785,"title":{},"body":{"controllers/AuthController.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["src/file.config",{"_index":2549,"title":{},"body":{"injectables/FileService.html":{}}}],["src/kp.config",{"_index":3696,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["stack",{"_index":2927,"title":{},"body":{"classes/LogService.html":{},"classes/MsException.html":{}}}],["stacktrace",{"_index":2964,"title":{},"body":{"classes/LogService.html":{}}}],["stacktrace.split(\"\\n",{"_index":2966,"title":{},"body":{"classes/LogService.html":{}}}],["standard",{"_index":631,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["start",{"_index":134,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["start:web",{"_index":4152,"title":{},"body":{"index.html":{}}}],["started",{"_index":4043,"title":{"index.html":{},"license.html":{}},"body":{}}],["startprocess",{"_index":3323,"title":{},"body":{"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["startprocess(@param(\"code",{"_index":3347,"title":{},"body":{"controllers/ProcessController.html":{}}}],["startprocess(code",{"_index":3332,"title":{},"body":{"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{}}}],["startprocess(processdata",{"_index":3512,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["starts",{"_index":169,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["startup",{"_index":3491,"title":{},"body":{"modules/ProcessModule.html":{},"index.html":{}}}],["state",{"_index":3551,"title":{},"body":{"entities/ProcessUnitEntity.html":{},"index.html":{},"license.html":{}}}],["stated",{"_index":4274,"title":{},"body":{"license.html":{}}}],["statement",{"_index":4329,"title":{},"body":{"license.html":{}}}],["static",{"_index":855,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"injectables/ProcessManagerService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["static/file",{"_index":4645,"title":{},"body":{"additional-documentation/properties/file.properties.html":{}}}],["static/media",{"_index":4650,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["static/private/file",{"_index":4647,"title":{},"body":{"additional-documentation/properties/file.properties.html":{}}}],["static/private/media",{"_index":4654,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["static/tmp",{"_index":4606,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["stating",{"_index":4307,"title":{},"body":{"license.html":{}}}],["statistics",{"_index":3680,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["stats",{"_index":1865,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["stats.filescount",{"_index":3705,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["stats.folderscount",{"_index":3706,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["stats.isdirectory",{"_index":1869,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["status",{"_index":147,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/enumerations.html":{}}}],["status.execute",{"_index":201,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["status.ready",{"_index":3475,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["statuses",{"_index":3419,"title":{},"body":{"injectables/ProcessManagerService.html":{},"miscellaneous/enumerations.html":{}}}],["stereo",{"_index":376,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["stop",{"_index":135,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/enumerations.html":{}}}],["stoppage",{"_index":4381,"title":{},"body":{"license.html":{}}}],["stopped",{"_index":228,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["stopprocess",{"_index":3324,"title":{},"body":{"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["stopprocess(@param(\"code",{"_index":3350,"title":{},"body":{"controllers/ProcessController.html":{}}}],["stopprocess(code",{"_index":3335,"title":{},"body":{"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{}}}],["stopprocess(processdata",{"_index":3514,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["stops",{"_index":163,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["storage",{"_index":1644,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/RedisCacheService.html":{}}}],["store",{"_index":69,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/file.properties.html":{}}}],["stored",{"_index":2542,"title":{},"body":{"injectables/FileService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["stores",{"_index":393,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/ConfigService.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"index.html":{}}}],["storing",{"_index":3647,"title":{},"body":{"classes/Roles.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["stream",{"_index":645,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/RedisCacheService.html":{},"interfaces/VideoFileMetadata.html":{}}}],["stream.on(\"data",{"_index":3622,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["stream.on(\"end",{"_index":3625,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["stream.on(\"error",{"_index":3627,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["streams",{"_index":362,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["string",{"_index":63,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleService.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["string.entity",{"_index":1445,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["string.entity.ts",{"_index":2901,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string.entity.ts:33",{"_index":2905,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string.entity.ts:37",{"_index":2904,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string.entity.ts:40",{"_index":2906,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string.entity.ts:43",{"_index":2907,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string[]).push(file",{"_index":1873,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["strings",{"_index":1548,"title":{},"body":{"interfaces/ConfigItem.html":{},"injectables/LocaleService.html":{},"miscellaneous/variables.html":{}}}],["stringutils",{"_index":2721,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["stringutils.generaterandomstring",{"_index":2726,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["structure",{"_index":429,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/VideoFileMetadata.html":{}}}],["subclasses",{"_index":156,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["subclient",{"_index":3167,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["subject",{"_index":577,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["subjectdistance",{"_index":579,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["subjectdistancerange",{"_index":621,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["sublicense",{"_index":4271,"title":{},"body":{"license.html":{}}}],["submission",{"_index":4331,"title":{},"body":{"license.html":{}}}],["submit",{"_index":4236,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":4234,"title":{},"body":{"license.html":{}}}],["subsampling",{"_index":457,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["subscribe",{"_index":3144,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["subscribe(chanel",{"_index":3151,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["subscriber",{"_index":3784,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["subscriber.ts",{"_index":263,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/LocaleSubscriber.html":{}}}],["subscriber.ts:28",{"_index":272,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["subscriber.ts:35",{"_index":290,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["subscriber.ts:47",{"_index":2865,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["subscriber.ts:48",{"_index":284,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["subscriber.ts:69",{"_index":2870,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["subscriber.ts:76",{"_index":274,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["subscribers",{"_index":265,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{}}}],["subscribes",{"_index":3153,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["subsequently",{"_index":4253,"title":{},"body":{"license.html":{}}}],["succeeded",{"_index":3598,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["successful",{"_index":1027,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"injectables/RedisCacheService.html":{}}}],["successfully",{"_index":919,"title":{},"body":{"classes/AuthService.html":{}}}],["such",{"_index":432,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/TargetData.html":{},"classes/UserSubscriber.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":849,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"classes/MsException.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{}}}],["super(httpstatus.bad_request",{"_index":970,"title":{},"body":{"classes/BadRequestMsException.html":{}}}],["super(httpstatus.forbidden",{"_index":2655,"title":{},"body":{"classes/ForbiddenMsException.html":{}}}],["super(httpstatus.not_found",{"_index":3293,"title":{},"body":{"classes/NotFoundMsException.html":{}}}],["super(httpstatus.unauthorized",{"_index":2794,"title":{},"body":{"classes/InvalidTokenMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["super.debug(this.preparemessage(message",{"_index":2954,"title":{},"body":{"classes/LogService.html":{}}}],["super.error(this.preparemessage(message",{"_index":2950,"title":{},"body":{"classes/LogService.html":{}}}],["super.log(this.preparemessage(message",{"_index":2948,"title":{},"body":{"classes/LogService.html":{}}}],["super.verbose(this.preparemessage(message",{"_index":2953,"title":{},"body":{"classes/LogService.html":{}}}],["super.warn(this.preparemessage(message",{"_index":2952,"title":{},"body":{"classes/LogService.html":{}}}],["supersede",{"_index":4338,"title":{},"body":{"license.html":{}}}],["support",{"_index":4091,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{}}}],["supported",{"_index":1224,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"index.html":{}}}],["supports",{"_index":4083,"title":{},"body":{"index.html":{}}}],["sure",{"_index":4122,"title":{},"body":{"index.html":{}}}],["svg",{"_index":4425,"title":{},"body":{"modules.html":{},"miscellaneous/variables.html":{}}}],["switch",{"_index":229,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["symbol",{"_index":4580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"entity_save_handler",{"_index":4535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"logger_service",{"_index":4579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"ms_client",{"_index":4582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"msg_broker",{"_index":4581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"msg_bus",{"_index":4583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"redis_client",{"_index":4585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"warlock",{"_index":4604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":1652,"title":{},"body":{"injectables/ConfigService.html":{}}}],["synchronizing",{"_index":1596,"title":{},"body":{"injectables/ConfigService.html":{}}}],["syntax",{"_index":4416,"title":{},"body":{"license.html":{}}}],["system",{"_index":501,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/LanguageEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["systems",{"_index":4167,"title":{},"body":{"index.html":{},"license.html":{}}}],["t",{"_index":319,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"entities/MediaEntity.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"entities/ProcessLogEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{}}}],["t.code",{"_index":1421,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/UserEntity.html":{}}}],["t.id",{"_index":1474,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{}}}],["t.target",{"_index":1963,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["tab",{"_index":1101,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/TargetData.html":{}}}],["tab.entity",{"_index":1971,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["tab.entity.ts",{"_index":2059,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:38",{"_index":2061,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:42",{"_index":2062,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:46",{"_index":2063,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:53",{"_index":2064,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:56",{"_index":2065,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tabbed",{"_index":2060,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["table",{"_index":1141,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["table_name",{"_index":2089,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["tableinheritance",{"_index":2159,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/UserEntity.html":{}}}],["tablename",{"_index":1077,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["tables",{"_index":1136,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"index.html":{}}}],["tagname",{"_index":3861,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["take",{"_index":3473,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["taken",{"_index":547,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["target",{"_index":1048,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/variables.html":{}}}],["target.entity",{"_index":1969,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{}}}],["target.entity.ts",{"_index":2067,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:103",{"_index":2072,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:107",{"_index":2073,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:41",{"_index":2091,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:45",{"_index":2090,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:49",{"_index":2071,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:53",{"_index":2088,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:57",{"_index":2086,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:60",{"_index":2087,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:63",{"_index":2077,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:67",{"_index":2070,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:75",{"_index":2079,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:83",{"_index":2085,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:91",{"_index":2081,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:99",{"_index":2083,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target_relations_basic",{"_index":4485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target_relations_full",{"_index":4486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target_relations_object",{"_index":4487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target_relations_section",{"_index":4488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["targetdata",{"_index":1107,"title":{"interfaces/TargetData.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["targetparams",{"_index":1143,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["targets",{"_index":1111,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["tasks",{"_index":4060,"title":{},"body":{"index.html":{}}}],["template",{"_index":1028,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/TargetData.html":{}}}],["templated",{"_index":4506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templates",{"_index":4505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["temporary",{"_index":3669,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["terminate",{"_index":4296,"title":{},"body":{"license.html":{}}}],["terms",{"_index":4171,"title":{},"body":{"license.html":{}}}],["tested",{"_index":4166,"title":{},"body":{"index.html":{}}}],["text",{"_index":2707,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"license.html":{}}}],["theory",{"_index":4365,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":4230,"title":{},"body":{"license.html":{}}}],["third",{"_index":4318,"title":{},"body":{"license.html":{}}}],["this.authservice.authenticate(payload",{"_index":817,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.exchangetoken(token",{"_index":836,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.invalidatetoken(token",{"_index":830,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.broker.emit(command.register",{"_index":3457,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.broker.emit(command.start",{"_index":3459,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.broker.emit(command.stop",{"_index":3460,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.broker.emit(command.unregister",{"_index":3466,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.cacheservice.del(config_cache_prefix",{"_index":1645,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cacheservice.del(fullkey",{"_index":1685,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cacheservice.del(key",{"_index":2739,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.get",{"_index":104,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/GoogleCaptchaService.html":{}}}],["this.cacheservice.get(captchaconfig.font_family",{"_index":2762,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.get(captchaconfig.font_path",{"_index":2763,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.get(captchaconfig.google_public_key",{"_index":2674,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["this.cacheservice.get(key",{"_index":1677,"title":{},"body":{"injectables/ConfigService.html":{},"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.get(kpconfig.tmp_dir",{"_index":3699,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["this.cacheservice.get(private_dir",{"_index":2651,"title":{},"body":{"injectables/FileService.html":{}}}],["this.cacheservice.get(public_dir",{"_index":2649,"title":{},"body":{"injectables/FileService.html":{}}}],["this.cacheservice.getboolean",{"_index":808,"title":{},"body":{"controllers/AuthController.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.getfrompattern",{"_index":1656,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cacheservice.getnumber(captchaconfig.expiration",{"_index":2761,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.set(`${captcha_cache_prefix}:${id",{"_index":2735,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.set(`${key",{"_index":1649,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cacheservice.set(fullkey",{"_index":1682,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.captchaservice.generatecaptcha",{"_index":1386,"title":{},"body":{"controllers/CaptchaController.html":{}}}],["this.captchaservice.validatecaptcha",{"_index":810,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.captchaservice.validatecaptcha(payload",{"_index":1385,"title":{},"body":{"controllers/CaptchaController.html":{}}}],["this.catrep.finddescendantstree(cat",{"_index":1506,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.catrep.findone",{"_index":1505,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.client.del(...keys",{"_index":3615,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.expire(key",{"_index":3620,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.get(key",{"_index":3610,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.incr(key",{"_index":3618,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.scanstream",{"_index":3621,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.set(key",{"_index":3613,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.configservice.getpropertiespage(params",{"_index":1538,"title":{},"body":{"controllers/ConfigController.html":{}}}],["this.configservice.removeproperty(key",{"_index":1542,"title":{},"body":{"controllers/ConfigController.html":{}}}],["this.configservice.setproperty(body",{"_index":1540,"title":{},"body":{"controllers/ConfigController.html":{}}}],["this.constructor.name",{"_index":204,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.createbasicfindqb",{"_index":2591,"title":{},"body":{"injectables/FileService.html":{}}}],["this.createbasicfindqb().where(\"file.id",{"_index":2587,"title":{},"body":{"injectables/FileService.html":{}}}],["this.createfiledirectory",{"_index":2572,"title":{},"body":{"injectables/FileService.html":{}}}],["this.createfileentity(ispublic",{"_index":2570,"title":{},"body":{"injectables/FileService.html":{}}}],["this.deleteexistingconfigtsfiles(fullpath",{"_index":1756,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.deleteexistingconfigtsfiles(process.cwd",{"_index":1643,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.execute",{"_index":213,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.explorerservice.changetarget(target",{"_index":2009,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["this.explorerservice.getentitydata",{"_index":2016,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["this.explorerservice.getpageableentitydata",{"_index":2018,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["this.explorerservice.gettargetdata(target",{"_index":2013,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["this.explorerservice.gettargetlist",{"_index":2006,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["this.explorerservice.removeentity(target",{"_index":2022,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["this.explorerservice.saveentitydata",{"_index":2020,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["this.fetchuser",{"_index":100,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["this.filerep",{"_index":2610,"title":{},"body":{"injectables/FileService.html":{}}}],["this.filerep.manager.transaction(async",{"_index":2557,"title":{},"body":{"injectables/FileService.html":{}}}],["this.filerep.save(entity",{"_index":2648,"title":{},"body":{"injectables/FileService.html":{}}}],["this.fileservice.createorupdatefile",{"_index":2120,"title":{},"body":{"controllers/FileController.html":{}}}],["this.fileservice.findprivatebyid(id",{"_index":2126,"title":{},"body":{"controllers/FileController.html":{}}}],["this.fileservice.findpublicbyid(id",{"_index":2131,"title":{},"body":{"controllers/FileController.html":{}}}],["this.fileservice.getfilepath(file",{"_index":2127,"title":{},"body":{"controllers/FileController.html":{}}}],["this.fileservice.remove(id",{"_index":2134,"title":{},"body":{"controllers/FileController.html":{}}}],["this.findbyid(id",{"_index":1313,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.findfilebyid(existedentityid",{"_index":2559,"title":{},"body":{"injectables/FileService.html":{}}}],["this.findfilebyid(id",{"_index":2594,"title":{},"body":{"injectables/FileService.html":{}}}],["this.generatecolor",{"_index":2753,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.generateconfigtsfiles",{"_index":1647,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.generatedtsoutput",{"_index":1637,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.generatenamespacewithvariables",{"_index":1773,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.get(key",{"_index":3612,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.getaccesstokenfromrequest(req",{"_index":91,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["this.getcallingcontext",{"_index":2947,"title":{},"body":{"classes/LogService.html":{}}}],["this.getcaptchaexp",{"_index":2734,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.getcaptchafontfamily",{"_index":2748,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.getcaptchafontpath",{"_index":2750,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.getdeletestats(dirstruct",{"_index":3703,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["this.getprivatedir",{"_index":2562,"title":{},"body":{"injectables/FileService.html":{}}}],["this.getprocessdata(code",{"_index":3458,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.getprocessdata(processcode",{"_index":3468,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.getpublicdir",{"_index":2563,"title":{},"body":{"injectables/FileService.html":{}}}],["this.getpublicdir()}/${file.id",{"_index":2596,"title":{},"body":{"injectables/FileService.html":{}}}],["this.getstatus",{"_index":200,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.handlerequest(source",{"_index":3237,"title":{},"body":{"classes/MsClient.html":{}}}],["this.hashpassword(user.password",{"_index":324,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["this.hashpasswordifneeded(event",{"_index":3796,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["this.http.post",{"_index":2677,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["this.languagerep.find",{"_index":2843,"title":{},"body":{"injectables/LocaleService.html":{}}}],["this.localizedstringrep.findone",{"_index":2850,"title":{},"body":{"injectables/LocaleService.html":{}}}],["this.localizedstringrep.save(ls",{"_index":2853,"title":{},"body":{"injectables/LocaleService.html":{}}}],["this.lockexec",{"_index":3543,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.lockexec(`${processdata.code}_start",{"_index":3536,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.logger.debug(`generated",{"_index":2736,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.logger.debug(`sending",{"_index":3242,"title":{},"body":{"classes/MsClient.html":{}}}],["this.logger.debug(message",{"_index":237,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.logger.error",{"_index":3249,"title":{},"body":{"classes/MsClient.html":{},"injectables/RedisCacheService.html":{}}}],["this.logger.error(`error",{"_index":3611,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.logger.error(`invalid",{"_index":1727,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.error(`process",{"_index":3535,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.logger.error(err",{"_index":3628,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.logger.error(message",{"_index":233,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.logger.log",{"_index":2584,"title":{},"body":{"injectables/FileService.html":{}}}],["this.logger.log(\"init",{"_index":3448,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.logger.log(`clean",{"_index":1641,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.log(`config",{"_index":1651,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.log(`file",{"_index":2609,"title":{},"body":{"injectables/FileService.html":{}}}],["this.logger.log(`generate",{"_index":1646,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.log(`scan",{"_index":1638,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.log(message",{"_index":231,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.logger.verbose",{"_index":2883,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["this.logger.verbose(`delete",{"_index":1753,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.verbose(`generated",{"_index":1777,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.verbose(`read",{"_index":1748,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.verbose(message",{"_index":239,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.logger.warn",{"_index":202,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["this.logger.warn(\"autostart",{"_index":3446,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.logger.warn(`incorrect",{"_index":2742,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.logger.warn(`invalid",{"_index":96,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/GraphicCaptchaService.html":{}}}],["this.logger.warn(`request",{"_index":3256,"title":{},"body":{"classes/MsClient.html":{}}}],["this.logger.warn(message",{"_index":235,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.loginstance",{"_index":208,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.loginstance.content",{"_index":251,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.makeimagefromtext(val",{"_index":2732,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.mediaservice.createorupdatemedia",{"_index":3002,"title":{},"body":{"controllers/MediaController.html":{}}}],["this.mediaservice.findprivatebyid(id",{"_index":3005,"title":{},"body":{"controllers/MediaController.html":{}}}],["this.mediaservice.findpublicbyid(id",{"_index":3010,"title":{},"body":{"controllers/MediaController.html":{}}}],["this.mediaservice.getmediapath(media",{"_index":3007,"title":{},"body":{"controllers/MediaController.html":{}}}],["this.mediaservice.recreate(id",{"_index":3015,"title":{},"body":{"controllers/MediaController.html":{}}}],["this.mediaservice.remove(id",{"_index":3012,"title":{},"body":{"controllers/MediaController.html":{}}}],["this.mergepropertiescontent",{"_index":1699,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.metadataservice.createfilemetadataentity",{"_index":2581,"title":{},"body":{"injectables/FileService.html":{}}}],["this.oncrash(e",{"_index":222,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.onfinish",{"_index":215,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.onstop",{"_index":226,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.parser.parsestring(xmldata",{"_index":3981,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["this.parsevalue(value.trim",{"_index":1735,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.parsexmlfromrequest(req",{"_index":3977,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["this.patchfromctx(ctx",{"_index":2951,"title":{},"body":{"classes/LogService.html":{}}}],["this.pmservice.createloginstance",{"_index":209,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.pmservice.getlastlogsbyprocess",{"_index":3360,"title":{},"body":{"controllers/ProcessController.html":{}}}],["this.pmservice.getprocessdata(code",{"_index":3358,"title":{},"body":{"controllers/ProcessController.html":{}}}],["this.pmservice.getprocesslogbyid(id",{"_index":3365,"title":{},"body":{"controllers/ProcessController.html":{}}}],["this.pmservice.getprocessunitstatus(this.constructor.name",{"_index":259,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.pmservice.init",{"_index":3501,"title":{},"body":{"modules/ProcessModule.html":{}}}],["this.pmservice.setprocessunitstatus(processdata.code",{"_index":3541,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.pmservice.setprocessunitstatus(this.constructor.name",{"_index":260,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.pmservice.startprocess(code",{"_index":3348,"title":{},"body":{"controllers/ProcessController.html":{}}}],["this.pmservice.stopprocess(code",{"_index":3351,"title":{},"body":{"controllers/ProcessController.html":{}}}],["this.pmservice.stopprocess(processdata.code",{"_index":3549,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.pmservice.toggleprocess(code",{"_index":3354,"title":{},"body":{"controllers/ProcessController.html":{}}}],["this.pmservice.updateloginstance(this.loginstance",{"_index":255,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.processandvalidatepropertiescontent",{"_index":1708,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.processlogrep.find",{"_index":3472,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processlogrep.findone",{"_index":3471,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processlogrep.save",{"_index":3469,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processlogrep.save(loginstance",{"_index":3470,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processunitrep.find",{"_index":3450,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processunitrep.findone",{"_index":3463,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processunitrep.save(processdata",{"_index":3465,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.propertiesfiles",{"_index":1757,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.propertiesfiles[filepath",{"_index":1759,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.propertiesfiles[fullpath",{"_index":1707,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.proxy.emit(pattern",{"_index":3241,"title":{},"body":{"classes/MsClient.html":{}}}],["this.proxy.send(pattern",{"_index":3236,"title":{},"body":{"classes/MsClient.html":{}}}],["this.pubclient.duplicate",{"_index":3195,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.pubclient.publish(chanel",{"_index":3201,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.reflector.get",{"_index":3658,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.registercronjob(data",{"_index":3526,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.resetallprocessstatuses",{"_index":3447,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.safeserialize(data",{"_index":3202,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.scanforpropertiesfiles(fullpath",{"_index":1702,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.scanforpropertiesfiles(process.cwd",{"_index":1640,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.schedulerregistry.addcronjob(processdata.code",{"_index":3545,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.schedulerregistry.deletecronjob(processdata.code",{"_index":3548,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.schedulerregistry.doesexist(\"cron",{"_index":3539,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.schedulerregistry.getcronjob(processdata.code",{"_index":3546,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.service.analyzedatabase",{"_index":2045,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["this.setaudiomd(md",{"_index":2249,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.setimagemd(md",{"_index":2247,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.setprocessunitstatus(processdata.code",{"_index":3474,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.setstatus(status.crashed",{"_index":221,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.setstatus(status.execute",{"_index":211,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.setstatus(status.ready",{"_index":214,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.setvideomd(md",{"_index":2251,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.sort(cat",{"_index":1509,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.sort(res",{"_index":1510,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.startprocess(data",{"_index":3530,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.stopprocess(data",{"_index":3532,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.subclient",{"_index":3194,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subclient.on(\"message",{"_index":3196,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subclient.subscribe(chanel",{"_index":3203,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subclient.unsubscribe(chanel",{"_index":3205,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subscribers.delete(chanel",{"_index":3206,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subscribers.get(chanel",{"_index":3199,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subscribers.has(chanel",{"_index":3197,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subscribers.set(chanel",{"_index":3204,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.trimproperties(md",{"_index":2252,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.trimproperties(obj[key",{"_index":2259,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.unregistercronjob(data",{"_index":3528,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.userrep.create(user",{"_index":1315,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userrep.findone",{"_index":1310,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userrep.remove(user",{"_index":1318,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userrep.save(newuser",{"_index":1316,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userrep.save(user",{"_index":1312,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userservice.create(profile",{"_index":3591,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.userservice.findbyid(id",{"_index":3585,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.userservice.findbylogin(useridentity",{"_index":101,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["this.userservice.removebyid(id",{"_index":3589,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.userservice.updatebyid(id",{"_index":3587,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.validatelogin(event.entity.login",{"_index":3795,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["this.validatetoken(token",{"_index":94,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["this.valuesofproperties",{"_index":1648,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.valuesofproperties[key",{"_index":1650,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.valuesofproperties[processedvalue.substring(1,processedvalue.length",{"_index":1744,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.valuesofproperties[propertykey",{"_index":1734,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.writelog",{"_index":216,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["this.writelog(`nothing",{"_index":3701,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["this.writelog(`process",{"_index":227,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.writelog(`start",{"_index":210,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.writelog(`tmp",{"_index":3708,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["this.writelog(`try",{"_index":225,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.xdbexportservice.exportxml(body",{"_index":3958,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["this.xdbimportservice.importfromfile(file.buffer",{"_index":3953,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["this.xdbimportservice.importxml(body",{"_index":3952,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["those",{"_index":4277,"title":{},"body":{"license.html":{}}}],["through",{"_index":4077,"title":{},"body":{"index.html":{},"license.html":{}}}],["throw",{"_index":97,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractUserSubscriber.html":{},"controllers/AuthController.html":{},"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"controllers/ExplorerController.html":{},"injectables/FileService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"controllers/ProfileController.html":{}}}],["throwerror",{"_index":3228,"title":{},"body":{"classes/MsClient.html":{}}}],["throwerror(error",{"_index":3258,"title":{},"body":{"classes/MsClient.html":{}}}],["throws",{"_index":299,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{}}}],["thumb",{"_index":4489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thumbnail",{"_index":4084,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["thumbnails",{"_index":1213,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["tiff",{"_index":545,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["time",{"_index":459,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/RedisCacheService.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["timeout",{"_index":3138,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["timeout(opts?.timeout",{"_index":3245,"title":{},"body":{"classes/MsClient.html":{}}}],["timeouterror",{"_index":3255,"title":{},"body":{"classes/MsClient.html":{}}}],["timeouts",{"_index":3224,"title":{},"body":{"classes/MsClient.html":{}}}],["timestamp",{"_index":2154,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["tinput",{"_index":3127,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["title",{"_index":344,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["tmpdir",{"_index":3698,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["tmpdircleanerprocess",{"_index":3665,"title":{"classes/TmpDirCleanerProcess.html":{}},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["to(value",{"_index":4590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["together",{"_index":642,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["toggle",{"_index":3429,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["toggleprocess",{"_index":3325,"title":{},"body":{"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{}}}],["toggleprocess(@param(\"code",{"_index":3353,"title":{},"body":{"controllers/ProcessController.html":{}}}],["toggleprocess(code",{"_index":3338,"title":{},"body":{"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{}}}],["toggles",{"_index":3428,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["token",{"_index":42,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["token.decorator",{"_index":799,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.decorator.ts",{"_index":4457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tokenizing",{"_index":4504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tokens",{"_index":910,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["tool",{"_index":345,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["toomanyrequestsmsexception",{"_index":3712,"title":{"classes/TooManyRequestsMsException.html":{}},"body":{"classes/TooManyRequestsMsException.html":{}}}],["tort",{"_index":4366,"title":{},"body":{"license.html":{}}}],["total",{"_index":3300,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["totalcount",{"_index":1669,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["touppercase",{"_index":1770,"title":{},"body":{"injectables/ConfigService.html":{}}}],["trac",{"_index":370,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["trace",{"_index":2925,"title":{},"body":{"classes/LogService.html":{}}}],["track",{"_index":347,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["tracking",{"_index":948,"title":{},"body":{"classes/AuthService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["trade",{"_index":4344,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":4309,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":4342,"title":{},"body":{"license.html":{}}}],["transactionmanager",{"_index":2558,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file",{"_index":2608,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file.metadata.audio",{"_index":2605,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file.metadata.gps",{"_index":2603,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file.metadata.image",{"_index":2601,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file.metadata.video",{"_index":2607,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.save(entity",{"_index":2583,"title":{},"body":{"injectables/FileService.html":{}}}],["transfer",{"_index":977,"title":{},"body":{"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"index.html":{},"license.html":{}}}],["transform",{"_index":995,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"injectables/NotEmptyPipe.html":{}}}],["transform(transformutils.datetotime",{"_index":1012,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["transform(value",{"_index":3286,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["transformation",{"_index":1895,"title":{},"body":{"injectables/DtoInterceptor.html":{},"license.html":{}}}],["transformations",{"_index":1194,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["transformer",{"_index":996,"title":{},"body":{"interfaces/BasicAuthController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"entities/CategoryEntity.html":{},"injectables/DtoInterceptor.html":{},"classes/ExchangeTokenPayload.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["transformers/simple",{"_index":1446,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["transforming",{"_index":1195,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"miscellaneous/variables.html":{}}}],["transformutils",{"_index":999,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["translation",{"_index":4211,"title":{},"body":{"license.html":{}}}],["translations",{"_index":2902,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["transport",{"_index":3268,"title":{},"body":{"modules/MsClientModule.html":{}}}],["tree",{"_index":1443,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/CategoryService.html":{}}}],["tree(\"nested",{"_index":1450,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["treechildren",{"_index":1414,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["treeparent",{"_index":1433,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["treerepository",{"_index":1485,"title":{},"body":{"injectables/CategoryService.html":{}}}],["trees",{"_index":1410,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["tresult",{"_index":3130,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["trigger",{"_index":2862,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["triggered",{"_index":1123,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/TargetData.html":{}}}],["trim",{"_index":2222,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["trimmed",{"_index":2223,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["trimproperties",{"_index":2207,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["trimproperties(obj",{"_index":2216,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["trims",{"_index":2218,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["true",{"_index":87,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicFileController.html":{},"injectables/BasicUserService.html":{},"controllers/CaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["true})@column('varchar",{"_index":1417,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/UserEntity.html":{}}}],["true})@jointable",{"_index":1427,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["true})@primarycolumn('varchar",{"_index":1928,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/LanguageEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/UserRoleEntity.html":{}}}],["try",{"_index":212,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"miscellaneous/variables.html":{}}}],["ts_created",{"_index":2153,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["ts_updated",{"_index":3378,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["tscreated",{"_index":405,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["tsupdated",{"_index":3368,"title":{},"body":{"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{}}}],["two",{"_index":3892,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"index.html":{}}}],["type",{"_index":46,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["type\"]?.description",{"_index":2354,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["type(undefined",{"_index":3311,"title":{},"body":{"classes/PageableParams.html":{}}}],["type.code",{"_index":3034,"title":{},"body":{"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{}}}],["type.entity",{"_index":3036,"title":{},"body":{"entities/MediaEntity.html":{},"modules/MediaModule.html":{}}}],["type.entity.ts",{"_index":3107,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:21",{"_index":3108,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:25",{"_index":3112,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:28",{"_index":3115,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:31",{"_index":3113,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:34",{"_index":3114,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:37",{"_index":3110,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:41",{"_index":3111,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.ext",{"_index":4533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type.formats",{"_index":4532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typealiases",{"_index":4440,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":312,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":295,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicExplorerController.html":{},"injectables/BasicUserService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"classes/UserSubscriber.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"dependencies.html":{},"index.html":{},"properties.html":{}}}],["typeorm/error/typeormerror",{"_index":1800,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["typeorm/subscriber/event/insertevent",{"_index":294,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["typeormerror",{"_index":1799,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["typeormmodule",{"_index":1464,"title":{},"body":{"modules/CategoryModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/MediaModule.html":{},"modules/ProcessModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature",{"_index":2830,"title":{},"body":{"modules/LocaleModule.html":{},"modules/MediaModule.html":{}}}],["typeormmodule.forfeature([categoryentity",{"_index":1466,"title":{},"body":{"modules/CategoryModule.html":{}}}],["typeormmodule.forfeature([explorertargetentity",{"_index":2044,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["typeormmodule.forfeature([fileentity",{"_index":2508,"title":{},"body":{"modules/FileModule.html":{}}}],["typeormmodule.forfeature([processunitentity",{"_index":3499,"title":{},"body":{"modules/ProcessModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":3767,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormrootmodule",{"_index":3990,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["types",{"_index":1075,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/MediaTypeEntity.html":{},"interfaces/TargetData.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["typescript",{"_index":1002,"title":{},"body":{"interfaces/BasicAuthController.html":{},"injectables/ConfigService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"index.html":{},"properties.html":{}}}],["ui",{"_index":4051,"title":{},"body":{"index.html":{}}}],["unauthorized",{"_index":3722,"title":{},"body":{"classes/UnauthorizedMsException.html":{}}}],["unauthorizedmsexception",{"_index":3720,"title":{"classes/UnauthorizedMsException.html":{}},"body":{"classes/UnauthorizedMsException.html":{}}}],["undefined",{"_index":218,"title":{},"body":{"classes/AbstractProcess.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/BasicUserService.html":{},"entities/CategoryEntity.html":{},"interfaces/DirectoryStructure.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"entities/ExplorerTabEntity.html":{},"controllers/FileController.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/LogService.html":{},"controllers/MediaController.html":{},"classes/MsException.html":{},"entities/ProcessUnitEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"controllers/XmlDataBridgeController.html":{},"miscellaneous/variables.html":{}}}],["undefined:undefined",{"_index":2958,"title":{},"body":{"classes/LogService.html":{}}}],["under",{"_index":753,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["underscores",{"_index":310,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["union",{"_index":4184,"title":{},"body":{"license.html":{}}}],["unique",{"_index":389,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["uniqueobjects",{"_index":3885,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["uniqueobjects.push(obj",{"_index":3889,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["uniqueobjects.reverse",{"_index":3890,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["uniqueobjects.some((uniqueobj",{"_index":3887,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["unit",{"_index":123,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"interfaces/VideoFileMetadata.html":{}}}],["universal",{"_index":568,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["unknown",{"_index":51,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"interfaces/BasicExplorerController.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"classes/LogService.html":{},"classes/MsClient.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"controllers/XmlDataBridgeController.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["unknown_ip",{"_index":929,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["unless",{"_index":763,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["unlock",{"_index":3824,"title":{},"body":{"modules/WarlockModule.html":{}}}],["unregister",{"_index":3519,"title":{},"body":{"injectables/ProcessRegisterService.html":{},"miscellaneous/enumerations.html":{}}}],["unregistercronjob",{"_index":3506,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["unregistercronjob(processdata",{"_index":3516,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["unregistered",{"_index":3520,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["unregisters",{"_index":3518,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["unsigned",{"_index":1436,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["unsubscribe",{"_index":3145,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["unsubscribe(chanel",{"_index":3154,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["unsubscribes",{"_index":3156,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["up",{"_index":1153,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"index.html":{}}}],["update",{"_index":288,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"injectables/ProcessManagerService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["updatebyid",{"_index":1292,"title":{},"body":{"injectables/BasicUserService.html":{},"classes/UserService.html":{}}}],["updatebyid(id",{"_index":1279,"title":{},"body":{"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["updated",{"_index":1149,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["updatedatecolumn",{"_index":3380,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["updateevent",{"_index":283,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["updateloginstance",{"_index":3395,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["updateloginstance(loginstance",{"_index":3430,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["updates",{"_index":172,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicUserController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"index.html":{}}}],["updateuserprofile",{"_index":1255,"title":{},"body":{"interfaces/BasicUserController.html":{},"controllers/ProfileController.html":{}}}],["updateuserprofile(id",{"_index":1264,"title":{},"body":{"interfaces/BasicUserController.html":{},"controllers/ProfileController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["upgrade",{"_index":4618,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["uploaded",{"_index":668,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["uploadedfile",{"_index":2106,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["uploadedfile(\"file",{"_index":2117,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["uploading",{"_index":664,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["uploads",{"_index":2531,"title":{},"body":{"injectables/FileService.html":{}}}],["upsert",{"_index":1227,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["upsertmediarequest",{"_index":1228,"title":{"interfaces/UpsertMediaRequest.html":{}},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["uri",{"_index":3923,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["url",{"_index":1413,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["usage",{"_index":520,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["use",{"_index":757,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{}}}],["use(req",{"_index":3966,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["useclass",{"_index":894,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["used",{"_index":355,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"injectables/AuthGuard.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/Roles.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["usefactory",{"_index":884,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["usefactory(...args).config",{"_index":3638,"title":{},"body":{"modules/RedisModule.html":{}}}],["usefiles",{"_index":3932,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["useguards",{"_index":782,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["useguards(authguard",{"_index":1536,"title":{},"body":{"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["useguards(authguard)@delete('/')@forroles(roles.admin",{"_index":1520,"title":{},"body":{"controllers/ConfigController.html":{}}}],["useguards(authguard)@get('/')@forroles(roles.admin",{"_index":1517,"title":{},"body":{"controllers/ConfigController.html":{}}}],["useguards(authguard)@post('/')@forroles(roles.admin",{"_index":1524,"title":{},"body":{"controllers/ConfigController.html":{}}}],["useguards(liteauthguard",{"_index":827,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(liteauthguard)@post('/logout",{"_index":747,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":2107,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["useinterceptors(fileinterceptor(\"file",{"_index":2116,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["user",{"_index":71,"title":{"interfaces/User.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/JwtDto.html":{},"injectables/LiteAuthGuard.html":{},"classes/LoginPayload.html":{},"controllers/ProfileController.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["user's",{"_index":950,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["user.constants",{"_index":1308,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["user.decorator",{"_index":2003,"title":{},"body":{"controllers/ExplorerController.html":{},"controllers/ProfileController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["user.decorator.ts",{"_index":4466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.entity",{"_index":3794,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["user.id",{"_index":321,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"controllers/ProfileController.html":{}}}],["user.login",{"_index":1311,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["user.password",{"_index":313,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["user.password.tostring",{"_index":315,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["user.password?.length",{"_index":316,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["user.types",{"_index":1304,"title":{},"body":{"injectables/BasicUserService.html":{},"controllers/ProfileController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{}}}],["user/entity/user",{"_index":1068,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["user/user.module",{"_index":873,"title":{},"body":{"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/ProcessModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["user/user.types",{"_index":998,"title":{},"body":{"interfaces/BasicAuthController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{}}}],["user_relations",{"_index":1307,"title":{},"body":{"injectables/BasicUserService.html":{},"miscellaneous/variables.html":{}}}],["userdto",{"_index":997,"title":{"classes/UserDto.html":{}},"body":{"interfaces/BasicAuthController.html":{},"interfaces/BasicUserController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"controllers/ProfileController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userentity",{"_index":297,"title":{"entities/UserEntity.html":{}},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"controllers/ProfileController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserSubscriber.html":{}}}],["userentitypwdandrolessavehandler",{"_index":3750,"title":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["useridentity",{"_index":92,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["usermodule",{"_index":872,"title":{"modules/UserModule.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/BasicUserController.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/ProcessModule.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["usermodule.forroot",{"_index":882,"title":{},"body":{"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/ProcessModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["usermoduleoptions",{"_index":1282,"title":{},"body":{"interfaces/BasicUserController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/typealiases.html":{}}}],["username",{"_index":982,"title":{},"body":{"interfaces/BasicAuthController.html":{},"modules/CacheModule.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["userrep",{"_index":1295,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userrole",{"_index":1273,"title":{"interfaces/UserRole.html":{}},"body":{"interfaces/BasicUserController.html":{},"guards/RolesGuard.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userroledto",{"_index":1275,"title":{"classes/UserRoleDto.html":{}},"body":{"interfaces/BasicUserController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userroleentity",{"_index":1067,"title":{"entities/UserRoleEntity.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["userroles",{"_index":3660,"title":{},"body":{"guards/RolesGuard.html":{}}}],["users",{"_index":3735,"title":{},"body":{"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"index.html":{},"additional-documentation/properties/media.properties.html":{}}}],["userservice",{"_index":22,"title":{"classes/UserService.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"injectables/LiteAuthGuard.html":{},"controllers/ProfileController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userservice:42",{"_index":1299,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userservice:55",{"_index":1298,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userservice:69",{"_index":1302,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userservice:84",{"_index":1297,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userservice:96",{"_index":1300,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["usersubscriber",{"_index":3782,"title":{"classes/UserSubscriber.html":{}},"body":{"classes/UserSubscriber.html":{}}}],["userupdaterequest",{"_index":1276,"title":{"interfaces/UserUpdateRequest.html":{}},"body":{"interfaces/BasicUserController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userutils",{"_index":3577,"title":{},"body":{"controllers/ProfileController.html":{},"guards/RolesGuard.html":{}}}],["userutils.hassomerole",{"_index":3580,"title":{},"body":{"controllers/ProfileController.html":{},"guards/RolesGuard.html":{}}}],["uses",{"_index":3485,"title":{},"body":{"modules/ProcessModule.html":{},"index.html":{}}}],["using",{"_index":277,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"modules/CacheModule.html":{},"modules/LogModule.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"modules/WarlockModule.html":{},"index.html":{},"license.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["utc",{"_index":566,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["utf",{"_index":4519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utils/env.loader",{"_index":1335,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["utils/object.utils",{"_index":1503,"title":{},"body":{"injectables/CategoryService.html":{},"classes/LogService.html":{},"classes/MsClient.html":{}}}],["utils/user.utils",{"_index":3655,"title":{},"body":{"guards/RolesGuard.html":{}}}],["uuid",{"_index":2715,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":2714,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["v.code",{"_index":3758,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["v.codec_type",{"_index":2266,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["v4",{"_index":2713,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["val",{"_index":2729,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"injectables/RedisCacheService.html":{}}}],["valid",{"_index":73,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["validate",{"_index":70,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["validatecaptcha",{"_index":1019,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"controllers/CaptchaController.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["validatecaptcha(payload",{"_index":1021,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"controllers/CaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["validatecaptcha(request",{"_index":1032,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["validated",{"_index":2671,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["validatelogin",{"_index":271,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["validatelogin(login",{"_index":289,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["validates",{"_index":65,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/UserSubscriber.html":{}}}],["validatetoken",{"_index":27,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["validatetoken(token",{"_index":62,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["validating",{"_index":979,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["validation",{"_index":1026,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["validator",{"_index":993,"title":{},"body":{"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"dependencies.html":{}}}],["validity",{"_index":40,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["value",{"_index":183,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"modules/AuthModule.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"modules/ExplorerModule.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"modules/UserModule.html":{},"classes/UserSubscriber.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":2880,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["value.trim",{"_index":1737,"title":{},"body":{"injectables/ConfigService.html":{}}}],["value[0",{"_index":2881,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["values",{"_index":1558,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"interfaces/XdbRequest.html":{}}}],["valuesofproperties",{"_index":1563,"title":{},"body":{"injectables/ConfigService.html":{}}}],["valuetransformer",{"_index":4587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["varchar",{"_index":2162,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/UserEntity.html":{}}}],["variablename",{"_index":1719,"title":{},"body":{"injectables/ConfigService.html":{}}}],["variables",{"_index":1584,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["variation",{"_index":4450,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["various",{"_index":439,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["vector",{"_index":4088,"title":{},"body":{"index.html":{}}}],["verbal",{"_index":4239,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":2920,"title":{},"body":{"classes/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["verbose(message",{"_index":2942,"title":{},"body":{"classes/LogService.html":{}}}],["verification",{"_index":413,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["versa",{"_index":4593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":480,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/BasicFileController.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["version\"]?.description",{"_index":2373,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["vertical",{"_index":594,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["vice",{"_index":4592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["video",{"_index":444,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"index.html":{}}}],["videofilemetadata",{"_index":446,"title":{"interfaces/VideoFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["videofilemetadataentity",{"_index":2197,"title":{"entities/VideoFileMetadataEntity.html":{}},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["videomd",{"_index":2278,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.bit_rate",{"_index":2289,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.codec_long_name",{"_index":2283,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.codec_name?.touppercase",{"_index":2281,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.color_range",{"_index":2297,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.color_space",{"_index":2299,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.display_aspect_ratio",{"_index":2295,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.height",{"_index":2287,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.r_frame_rate",{"_index":2301,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.sample_aspect_ratio",{"_index":2293,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.tags?.rotate",{"_index":2303,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.width",{"_index":2285,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["virtual",{"_index":1088,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["visit",{"_index":4118,"title":{},"body":{"index.html":{}}}],["void",{"_index":1500,"title":{},"body":{"injectables/CategoryService.html":{},"classes/DbExceptionFilter.html":{},"injectables/FileMetadataService.html":{},"classes/LogService.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"modules/XmlDataBridgeModule.html":{}}}],["vp6",{"_index":1218,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["warlock",{"_index":3433,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"modules/WarlockModule.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["warlock(client",{"_index":3819,"title":{},"body":{"modules/WarlockModule.html":{}}}],["warlock.constants",{"_index":3813,"title":{},"body":{"modules/WarlockModule.html":{}}}],["warlock.lock",{"_index":3822,"title":{},"body":{"modules/WarlockModule.html":{}}}],["warlock.types",{"_index":3814,"title":{},"body":{"modules/WarlockModule.html":{}}}],["warlockfn",{"_index":3397,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"modules/WarlockModule.html":{},"miscellaneous/typealiases.html":{}}}],["warlockmodule",{"_index":3481,"title":{"modules/WarlockModule.html":{}},"body":{"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"modules.html":{},"overview.html":{}}}],["warn",{"_index":2921,"title":{},"body":{"classes/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["warn(message",{"_index":2944,"title":{},"body":{"classes/LogService.html":{}}}],["warning",{"_index":2946,"title":{},"body":{"classes/LogService.html":{}}}],["warranties",{"_index":771,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["warranty",{"_index":4352,"title":{},"body":{"license.html":{}}}],["web",{"_index":4153,"title":{},"body":{"index.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["webp",{"_index":1190,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"index.html":{}}}],["webpsupport",{"_index":1247,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["website",{"_index":4120,"title":{},"body":{"index.html":{}}}],["well",{"_index":4087,"title":{},"body":{"index.html":{}}}],["where(\"file.code",{"_index":2592,"title":{},"body":{"injectables/FileService.html":{}}}],["wherever",{"_index":4317,"title":{},"body":{"license.html":{}}}],["whether",{"_index":33,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"injectables/ProcessManagerService.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"license.html":{}}}],["white",{"_index":608,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["whitebalance",{"_index":611,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["whole",{"_index":4225,"title":{},"body":{"license.html":{}}}],["whose",{"_index":1497,"title":{},"body":{"injectables/CategoryService.html":{}}}],["width",{"_index":452,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["width\"]?.value",{"_index":2341,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["withfiletypes",{"_index":1687,"title":{},"body":{"injectables/ConfigService.html":{}}}],["within",{"_index":4255,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":770,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["work",{"_index":1391,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"index.html":{},"license.html":{}}}],["working",{"_index":1461,"title":{},"body":{"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"index.html":{}}}],["works",{"_index":4220,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":4260,"title":{},"body":{"license.html":{}}}],["writelog",{"_index":136,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["writelog(message",{"_index":173,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["writerequest",{"_index":1115,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["writes",{"_index":177,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["writing",{"_index":768,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["written",{"_index":4240,"title":{},"body":{"license.html":{}}}],["x",{"_index":525,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["xdb",{"_index":3846,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["xdb.getxmlparser",{"_index":3971,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["xdb.parsexmlbody(req.body",{"_index":3978,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["xdbaction",{"_index":3834,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbdecomposedentity",{"_index":3835,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbexportdto",{"_index":3836,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbexportparams",{"_index":3832,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"miscellaneous/typealiases.html":{}}}],["xdbexportservice",{"_index":3825,"title":{"classes/XdbExportService.html":{}},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{}}}],["xdbimportservice",{"_index":3843,"title":{"classes/XdbImportService.html":{}},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{}}}],["xdbmoduleoptions",{"_index":3929,"title":{},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{}}}],["xdbobject",{"_index":3837,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"miscellaneous/typealiases.html":{}}}],["xdbrequest",{"_index":3913,"title":{"interfaces/XdbRequest.html":{}},"body":{"interfaces/XdbRequest.html":{}}}],["xdbrowdata",{"_index":3838,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbrowdatavalue",{"_index":3922,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xml",{"_index":3829,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["xml2js",{"_index":3840,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"dependencies.html":{}}}],["xml2js.parser",{"_index":3855,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["xmldata",{"_index":3849,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["xmldatabridgecontroller",{"_index":3935,"title":{"controllers/XmlDataBridgeController.html":{}},"body":{"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{}}}],["xmldatabridgeexportservice",{"_index":3993,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["xmldatabridgeimportservice",{"_index":3992,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["xmldatabridgemiddleware",{"_index":3959,"title":{"injectables/XmlDataBridgeMiddleware.html":{}},"body":{"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["xmldatabridgemodule",{"_index":3928,"title":{"modules/XmlDataBridgeModule.html":{}},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["y",{"_index":529,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["yargs",{"_index":3842,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["ycbcrpositioning",{"_index":539,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["year",{"_index":346,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["yes",{"_index":184,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/BadRequestMsException.html":{},"classes/CacheService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/ExplorerService.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"injectables/LocaleService.html":{},"classes/LogService.html":{},"classes/MediaManager.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["z0",{"_index":303,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/ConfigService.html":{}}}],["z][_a",{"_index":1725,"title":{},"body":{"injectables/ConfigService.html":{}}}],["za",{"_index":302,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/ConfigService.html":{}}}],["zerofill",{"_index":726,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["zip",{"_index":4010,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":612,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"interfaces/VideoFileMetadata.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AbstractAuthGuard.html":{"url":"guards/AbstractAuthGuard.html","title":"guard - AbstractAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AbstractAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                lib/shared/guards/abstract-auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    An abstract class for creating authentication guards.\n\n                \n\n\n                \n                Implements\n                \n                \n                            CanActivate\n                \n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                cacheService\n                            \n                            \n                                    Protected\n                                fetchUser\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                logger\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                getAccessTokenFromRequest\n                            \n                            \n                                    Private\n                                    Async\n                                validateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/guards/abstract-auth.guard.ts:47\n                        \n                    \n\n\n            \n                \n                        Determines whether the current request is allowed to proceed based on the presence and validity of an access token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe execution context of the request.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A boolean indicating whether the request is allowed to proceed.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAccessTokenFromRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAccessTokenFromRequest(req: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/guards/abstract-auth.guard.ts:83\n                        \n                    \n\n\n            \n                \n                        Extracts the access token from the request.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe request object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The access token if found, otherwise null.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/guards/abstract-auth.guard.ts:72\n                        \n                    \n\n\n            \n                \n                        Validates the given access token by checking it against the store.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe access token to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The user identity if the token is valid, otherwise null.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  ForbiddenException,\n  Logger,\n} from \"@nestjs/common\";\nimport {\n  ACCESS_TOKEN_ERROR_MSG,\n  AUTH_ACCESS_TOKEN_PREFIX,\n  AUTH_JWT_CACHE_PREFIX,\n} from \"../../common/auth/auth.constants\";\nimport { Request } from \"express\";\nimport { CacheService } from \"../modules/cache/cache.types\";\nimport { UserService } from \"../../common/user/user.types\";\nimport { REQUEST_PROPS } from \"../constants\";\n\n/**\n * An abstract class for creating authentication guards.\n */\nexport abstract class AbstractAuthGuard implements CanActivate {\n  protected abstract readonly logger: Logger;\n  protected abstract readonly cacheService: CacheService;\n  protected abstract readonly userService: UserService;\n  protected fetchUser = true;\n\n  /**\n   * Determines whether the current request is allowed to proceed based on the presence and validity of an access token.\n   * @param context - The execution context of the request.\n   * @returns A boolean indicating whether the request is allowed to proceed.\n   */\n  async canActivate(context: ExecutionContext) {\n    const req = context.switchToHttp().getRequest();\n    const token = this.getAccessTokenFromRequest(req);\n    const userIdentity = await this.validateToken(token);\n    if (userIdentity) {\n      req[REQUEST_PROPS.accessToken] = token;\n    } else {\n      this.logger.warn(`Invalid token: ${token}`);\n      throw new ForbiddenException(ACCESS_TOKEN_ERROR_MSG);\n    }\n    if (this.fetchUser) {\n      const user = await this.userService.findByLogin(userIdentity);\n      if (!user) {\n        throw new ForbiddenException(ACCESS_TOKEN_ERROR_MSG);\n      }\n      req[REQUEST_PROPS.currentUser] = user;\n    }\n    return true;\n  }\n\n  /**\n   * Validates the given access token by checking it against the store.\n   * @param token - The access token to validate.\n   * @returns The user identity if the token is valid, otherwise null.\n   */\n  private async validateToken(token: string) {\n    return this.cacheService.get(\n      `${AUTH_JWT_CACHE_PREFIX}:${AUTH_ACCESS_TOKEN_PREFIX}:${token}`,\n    );\n  }\n\n  /**\n   * Extracts the access token from the request.\n   * @param req - The request object.\n   * @returns The access token if found, otherwise null.\n   */\n  private getAccessTokenFromRequest(req: Request) {\n    if (req.cookies?.accessToken) {\n      return req.cookies.accessToken;\n    }\n    if (req.headers?.authorization) {\n      const authorizationHeader = req.headers.authorization;\n      const parts = authorizationHeader.match(/Bearer\\s+(\\S+)\\s*(.+)?/);\n      if (!parts.length) {\n        return null;\n      }\n      return parts[1];\n    }\n    return null;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractProcess.html":{"url":"classes/AbstractProcess.html","title":"class - AbstractProcess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractProcess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/abstract-process.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing a process unit managing instance.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                logInstance\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                pmService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                execute\n                            \n                            \n                                    Private\n                                    Async\n                                getStatus\n                            \n                            \n                                    Protected\n                                    Async\n                                onCrash\n                            \n                            \n                                    Protected\n                                    Async\n                                onFinish\n                            \n                            \n                                    Protected\n                                    Async\n                                onStop\n                            \n                            \n                                    Private\n                                    Async\n                                setStatus\n                            \n                            \n                                    Async\n                                start\n                            \n                            \n                                    Async\n                                stop\n                            \n                            \n                                    Protected\n                                    Async\n                                writeLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in lib/common/process/abstract-process.ts:35\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/abstract-process.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessLogEntity\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/abstract-process.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        pmService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessManagerService\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/abstract-process.ts:32\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise<>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:165\n                        \n                    \n\n\n            \n                \n                        Gets the current status of the process.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The current process status.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onCrash\n                        \n                    \n                \n            \n            \n                \n                        \n                    onCrash(error: Error)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:157\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process crashes.\nCan be overridden by subclasses if needed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error that caused the crash.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onFinish\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFinish()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:140\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process finishes.\nCan be overridden by subclasses if needed.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onStop\n                        \n                    \n                \n            \n            \n                \n                        \n                    onStop()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:148\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process stops.\nCan be overridden by subclasses if needed.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    setStatus(status: Status)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:173\n                        \n                    \n\n\n            \n                \n                        Sets the status of the process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            Status\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new status to set.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:44\n                        \n                    \n\n\n            \n                \n                        Starts the process and handles its execution.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:80\n                        \n                    \n\n\n            \n                \n                        Stops the process and updates its status.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        writeLog\n                        \n                    \n                \n            \n            \n                \n                        \n                    writeLog(message: string, data?, level)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:94\n                        \n                    \n\n\n            \n                \n                        Writes a log entry with the specified message, data, and log level.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe log message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nOptional additional data.\n\n\n                                            \n                                        \n                                        \n                                                level\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    LogLevel.Log\n                                            \n\n                                            \n                                                    \nThe log level (default: LogLevel.Log).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Process } from \"./process.constants\";\nimport { Logger } from \"@nestjs/common\";\nimport { ProcessManagerService } from \"./process-manager.service\";\nimport { ProcessLogEntity } from \"./entity/process.log.entity\";\nimport { ObjectUtils } from \"../../shared/utils/object.utils\";\nimport registerProcess = Process.registerProcess;\nimport Status = Process.Status;\nimport inspect = ObjectUtils.inspect;\nimport LogLevel = Process.LogLevel;\n\n/**\n * Abstract class representing a process unit managing instance.\n */\nexport abstract class AbstractProcess {\n  protected abstract readonly logger: Logger;\n  protected abstract readonly pmService: ProcessManagerService;\n  private logInstance: ProcessLogEntity;\n\n  protected abstract execute(): Promise;\n\n  protected constructor() {\n    registerProcess(this);\n  }\n\n  /**\n   * Starts the process and handles its execution.\n   */\n  async start() {\n    const status = await this.getStatus();\n    if (status === Status.Execute) {\n      this.logger.warn(\n        `Process with id ${this.constructor.name} now executed, can't start that`,\n      );\n      return;\n    }\n    this.logInstance = await this.pmService.createLogInstance(\n      this.constructor.name,\n    );\n    await this.writeLog(`Start process with id ${this.constructor.name}`);\n    await this.setStatus(Status.Execute);\n    try {\n      await this.execute();\n      await this.setStatus(Status.Ready);\n      await this.onFinish();\n      await this.writeLog(\n        `Process with id ${this.constructor.name} was finished`,\n      );\n      this.logInstance = undefined;\n    } catch (e) {\n      await this.setStatus(Status.Crashed);\n      await this.onCrash(e);\n      await this.writeLog(\n        `Process with id ${this.constructor.name} was crashed`,\n        e,\n        LogLevel.Error,\n      );\n      this.logInstance = undefined;\n    }\n  }\n\n  /**\n   * Stops the process and updates its status.\n   */\n  async stop() {\n    await this.writeLog(`Try to stop process with id ${this.constructor.name}`);\n    await this.setStatus(Status.Ready);\n    await this.onStop();\n    await this.writeLog(`Process with id ${this.constructor.name} was stopped`);\n    this.logInstance = undefined;\n  }\n\n  /**\n   * Writes a log entry with the specified message, data, and log level.\n   * @param message - The log message.\n   * @param data - Optional additional data.\n   * @param level - The log level (default: LogLevel.Log).\n   */\n  protected async writeLog(\n    message: string,\n    data?: unknown,\n    level = LogLevel.Log,\n  ) {\n    switch (level) {\n      case LogLevel.Log:\n        this.logger.log(message, data);\n        break;\n      case LogLevel.Error:\n        this.logger.error(message, data);\n        break;\n      case LogLevel.Warn:\n        this.logger.warn(message, data);\n        break;\n      case LogLevel.Debug:\n        this.logger.debug(message, data);\n        break;\n      case LogLevel.Verbose:\n        this.logger.verbose(message, data);\n        break;\n    }\n    if (!this.logInstance) {\n      return;\n    }\n    const date = new Date();\n    let msg = inspect(message);\n    if (\n      (msg.startsWith(`'`) && msg.endsWith(`'`)) ||\n      (msg.startsWith(`\"`) && msg.endsWith(`\"`))\n    ) {\n      msg = msg.substring(1, msg.length - 1);\n    }\n    if (data) {\n      msg += inspect(data);\n    }\n    msg = msg.replace(/\\[/g, \"{\");\n    msg = msg.replace(/]/g, \"}\");\n    this.logInstance.content += `[${process.pid} | ${date.toLocaleString()} | ${level}] ${msg} >>>\\n`;\n    await this.pmService.updateLogInstance(this.logInstance);\n  }\n\n  /**\n   * Callback method that is called when the process finishes.\n   * Can be overridden by subclasses if needed.\n   */\n  protected async onFinish() {\n    // implement callback in child class if it needs\n  }\n\n  /**\n   * Callback method that is called when the process stops.\n   * Can be overridden by subclasses if needed.\n   */\n  protected async onStop() {\n    // implement callback in child class if it needs\n  }\n\n  /**\n   * Callback method that is called when the process crashes.\n   * Can be overridden by subclasses if needed.\n   * @param error - The error that caused the crash.\n   */\n  protected async onCrash(error: Error) {\n    // implement callback in child class if it needs\n  }\n\n  /**\n   * Gets the current status of the process.\n   * @returns The current process status.\n   */\n  private async getStatus() {\n    return await this.pmService.getProcessUnitStatus(this.constructor.name);\n  }\n\n  /**\n   * Sets the status of the process.\n   * @param status - The new status to set.\n   */\n  private async setStatus(status: Status) {\n    await this.pmService.setProcessUnitStatus(this.constructor.name, status);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractUserSubscriber.html":{"url":"classes/AbstractUserSubscriber.html","title":"class - AbstractUserSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractUserSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/abstract-user-subscriber.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class for user entity subscribers to handle specific events.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                hashPassword\n                            \n                            \n                                    Protected\n                                    Async\n                                hashPasswordIfNeeded\n                            \n                            \n                                    Protected\n                                    Async\n                                validateLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Type\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/user/abstract-user-subscriber.ts:28\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/abstract-user-subscriber.ts:76\n                        \n                    \n\n\n            \n                \n                        Hashes a password using bcrypt.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe password to hash.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The hashed password.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        hashPasswordIfNeeded\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPasswordIfNeeded(event: InsertEvent | UpdateEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/abstract-user-subscriber.ts:48\n                        \n                    \n\n\n            \n                \n                        Hashes the user password if it has changed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        InsertEvent | UpdateEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe insert or update event.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        validateLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateLogin(login: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/abstract-user-subscriber.ts:35\n                        \n                    \n\n\n            \n                \n                        Validates the login format.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                login\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe login string to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException } from \"@nestjs/common\";\nimport { InsertEvent } from \"typeorm/subscriber/event/InsertEvent\";\nimport { UpdateEvent } from \"typeorm\";\nimport * as bcrypt from \"bcrypt\";\nimport { Type } from \"@nestjs/common/interfaces/type.interface\";\nimport { UserEntity } from \"./entity/user.entity\";\n\n/**\n * Abstract class for user entity subscribers to handle specific events.\n */\nexport abstract class AbstractUserSubscriber {\n  protected abstract readonly type: Type;\n\n  /**\n   * Validates the login format.\n   * @param login - The login string to validate.\n   * @throws BadRequestException if the login format is invalid.\n   */\n  protected async validateLogin(login: string) {\n    const loginRegex = /^[A-Za-z0-9_]+$/;\n    if (!loginRegex.test(login)) {\n      throw new BadRequestException(\n        \"Login must contain only Latin letters, numbers, and underscores.\",\n      );\n    }\n  }\n\n  /**\n   * Hashes the user password if it has changed.\n   * @param event - The insert or update event.\n   */\n  protected async hashPasswordIfNeeded(event: InsertEvent | UpdateEvent) {\n    const { entity: user, manager } = event;\n    if (typeof user.password === \"number\") {\n      user.password = user.password.toString();\n    }\n    if (!user.password?.length) {\n      delete user.password;\n      return;\n    }\n    const foundUser: T = await manager.findOne(this.type, {\n      where: { id: user.id },\n    });\n    if (foundUser) {\n      if (await bcrypt.compare(user.password, foundUser.password)) {\n        user.password = foundUser.password;\n      } else {\n        user.password = await this.hashPassword(user.password);\n      }\n    } else {\n      user.password = await this.hashPassword(user.password);\n    }\n  }\n\n  /**\n   * Hashes a password using bcrypt.\n   * @param password - The password to hash.\n   * @returns The hashed password.\n   */\n  protected async hashPassword(password: string) {\n    return await bcrypt.hash(password, 10);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AudioFileMetadata.html":{"url":"interfaces/AudioFileMetadata.html","title":"interface - AudioFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AudioFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing audio file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                                \n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            bitrate\n                                        \n                                \n                                \n                                        \n                                            codec\n                                        \n                                \n                                \n                                        \n                                            codecProfile\n                                        \n                                \n                                \n                                        \n                                            container\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            genre\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            numberOfChannels\n                                        \n                                \n                                \n                                        \n                                            sampleRate\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            tool\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the album that the audio track belongs to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the artist or band who performed the audio track.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bitrate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bitrate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The bitrate of the audio file, indicating the amount of data processed per second.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        codec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codec:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The audio codec used for encoding or decoding the audio data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        codecProfile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codecProfile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The codec profile used for encoding the audio data, indicating specific settings and capabilities\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        container\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        container:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The format of the audio file container, which encapsulates audio streams and metadata\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The duration of the audio file in seconds\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The genre of the audio track\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the identification number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The music label or company that released the audio trac\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfChannels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfChannels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of audio channels in the file, indicating the sound configuration (e.g., mono, stereo)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleRate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleRate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The sample rate of the audio file, indicating the number of samples per second\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the audio file or track\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tool\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tool:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The tool or software used to encode or process the audio file\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The year the audio track was release\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  /** This field contains the identification number */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file */\n  name: string;\n  /** This field stores the path to the file on the server */\n  path: string;\n  /** This field specifies the type of access to the file, public or private */\n  public: boolean;\n  /** This field stores the size of the file in bytes */\n  size: number;\n  /** This field stores the icon of the file */\n  icon: Media;\n  /** This field stores the media preview of the file  */\n  preview: Media;\n  /** This field contains a reference to the FileMetadata container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The MIME type of the file, indicating the nature and format of the file content */\n  mime: string;\n  /** The file extension, indicating the file format */\n  ext: string;\n  /** The cryptographic hash of the file content, used for integrity verification and identification */\n  hash: string;\n  /** The ICC (International Color Consortium) profile data associated with the file, used for color management */\n  icc: IccFileMetadata;\n  /** GPS data associated with the location where the file was created, including latitude, longitude and elevation */\n  gps: GpsFileMetadata;\n  /** This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics */\n  image: ImageFileMetadata;\n  /** This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created */\n  exif: ExifFileMetadata;\n  /** This field is used to store information about the structure and properties of the audio file */\n  audio: AudioFileMetadata;\n  /** This field is used to store information about the structure and properties of the video recording*/\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The number of bits used to represent the color of a single pixel in the image */\n  bps: number;\n  /** The width of the image in pixels */\n  width: number;\n  /** The height of the image in pixels */\n  height: number;\n  /** The number of color components used to represent the color of the image */\n  colorComponents: number;\n  /** The subsampling method used for the image, indicating how color information is sampled */\n  subsampling: string;\n  /** The date and time when the image was created or last modified */\n  dateTime: Date;\n  /** The bit depth of the image, indicating the number of bits used for color representation */\n  bitDepth: number;\n  /** The color type of the image, indicating the color model used */\n  colorType: string;\n  /** Contains the compression method used to reduce the size of the image */\n  compression: string;\n  /** Specifies the filtering method used to process the image data before compressing it */\n  filter: string;\n  /**  Indicates whether interlacing is used in the image, allowing for progressive display */\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The version of the ICC profile, indicating the specification version used to create the color profile. */\n  profileVersion: string;\n  /** The class of the ICC profile, indicating its primary purpose and type */\n  profileClassValue: string;\n  /** The name of the ICC profile class, describing its primary purpose */\n  profileClassName: string;\n  /** The connection space of the ICC profile, representing the intermediate color space used for color conversions. */\n  connectionSpace: string;\n  /** The date and time when the ICC profile was created or last modified */\n  iccProfileDate: Date;\n  /** A unique signature of the ICC profile used to confirm its authenticity and validity */\n  iccSignature: string;\n  /** The primary platform or operating system for which the ICC profile was created or optimized */\n  primaryPlatform: string;\n  /** The manufacturer of the device for which the ICC profile was created */\n  deviceManufacturer: string;\n  /** The model number of the device for which the ICC profile was created */\n  deviceModelNumber: string;\n  /**  Indicates the type of rendering to be used when converting colors between color spaces */\n  renderingIntentValue: string;\n  /** Specifies the name of the rendering type that is used when converting colors between color spaces */\n  renderingIntentName: string;\n  /** The name or identifier of the creator of the ICC profile */\n  profileCreator: string;\n  /** A description of the ICC profile, explaining its purpose and characteristics */\n  iccDescription: string;\n  /** The copyright information for the ICC profile, indicating ownership and usage rights */\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** This field specifies the manufacturer of the camera */\n  make: string;\n  /** This field specifies the model of the camera  */\n  model: string;\n  /** Indicates image display orientation based on EXIF metadata */\n  orientation: string;\n  /** X-side resolution of the photo*/\n  resolutionX: string;\n  /** Y-side resolution of the photo*/\n  resolutionY: string;\n  /** Unit of image resolution */\n  resolutionUnit: string;\n  /** The field contains information about the software that was used to create or edit the image */\n  software: string;\n  /** This field is responsible for specifying the method of placing these color components Y, Cb and Cr relative to the image pixels */\n  ycbCrPositioning: string;\n  /** Pointer to the beginning of an EXIF IFD block in a file inside a TIFF file */\n  exifIfdPointer: string;\n  /** Contains information about the location where the image was taken */\n  gpsInfoIfdPointer: string;\n  /** Exposure time (shutter speed) when capturing an image */\n  exposureTime: string;\n  /** Contains data on the aperture number (aperture) when capturing an image */\n  fNumber: string;\n  /** Contains data on the exposure mode (shutter speed and aperture) used to capture the image */\n  exposureProgram: string;\n  /** Contains data on the ISO value (the sensitivity of the camera sensor to light) */\n  isoSpeedRatings: string;\n  /** Contains EXIF specification version data */\n  exifVersion: string;\n  /** Contains time offset data relative to UTC (Coordinated Universal Time) for the date and time when the image was taken */\n  offsetTime: string;\n  /** Contains data on the shutter speed of the camera */\n  shutterSpeedValue: string;\n  /** Contains data on the aperture (aperture) value used to capture the image */\n  aperture: string;\n  /** Contains data on the brightness level of the image */\n  brightness: string;\n  /** Contains exposure compensation data  */\n  exposureBias: string;\n  /** Contains data on the maximum aperture (aperture) value  */\n  maxAperture: string;\n  /** Contains data on the distance to the subject in millimeters */\n  subjectDistance: string;\n  /** Contains data on the light sensing mode used by the camera when capturing an image */\n  meteringMode: string;\n  /** Contains data on the status and operation of the flash during image capture */\n  flash: string;\n  /** Contains data about the focal length of the camera lens */\n  focalLength: string;\n  /** The Flashpix format version used for the image */\n  flashpixVersion: string;\n  /** The color space of the image data */\n  colorSpace: string;\n  /** Width (horizontal resolution) of the image in pixels */\n  pixelXDimension: string;\n  /** Contains data about the vertical resolution (height) of the image in pixels */\n  pixelYDimension: string;\n  /** Pointer to the start of the Interoperability IFD block for compatibility metadata */\n  interoperabilityIfdPointer: string;\n  /** Indicates the method used by the camera sensor to capture the image */\n  sensingMethod: string;\n  /** The type of scene captured in the image, indicating if it was taken with a digital camera */\n  sceneType: string;\n  /** Indicates whether the image was processed with custom rendering */\n  customRendered: string;\n  /** The exposure mode used by the camera during the shot */\n  exposureMode: string;\n  /** The white balance setting used during the shot */\n  whiteBalance: string;\n  /** The digital zoom ratio applied during the shot */\n  digitalZoomRatio: string;\n  /** The type of scene capture mode used during the shot */\n  sceneCaptureType: string;\n  /** The level of contrast applied to the image */\n  contrast: string;\n  /** The level of color saturation applied to the image */\n  saturation: string;\n  /** The level of sharpness applied to the image */\n  sharpness: string;\n  /** The distance range to the subject during the shot */\n  subjectDistanceRange: string;\n  /** The manufacturer of the lens used to capture the image */\n  lensMake: string;\n  /** The model of the lens used to capture the image */\n  lensModel: string;\n  /** Indicates whether the image is a composite, created by combining multiple images or applying effects */\n  compositeImage: string;\n  /** The interoperability index indicating the standard used for ensuring image compatibility */\n  interoperabilityIndex: string;\n  /** The version of the interoperability standard used for the image */\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  /** Representing identifier of meta-data object */\n  id: number;\n  /** Representing gps-latitude parameter */\n  latitude: number;\n  /** Representing gps-longitude parameter */\n  longitude: number;\n  /** Representing gps-altitude parameter */\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** A codec ( algorithm or method ) used to compress and decompress a video file */\n  codec: string;\n  /** The container format of the video file, indicating how video, audio, and other data streams are packaged together */\n  container: string;\n  /** The width of the video in pixels */\n  width: number;\n  /** The height of the video in pixels */\n  height: number;\n  /**  The bitrate of the video file, indicating the amount of data processed per second */\n  bitrate: number;\n  /** The duration of the video file in seconds */\n  duration: number;\n  /** A sample video aspect ratio indicating how pixels are distributed in a video stream */\n  sampleAspectRatio: string;\n  /** The display aspect ratio of the video, indicating the ratio of width to height for playback.*/\n  displayAspectRatio: string;\n  /** Video color range, indicating the set of colors used in the video file */\n  colorRange: string;\n  /** The color space of the video, indicating how colors are represented and interpreted */\n  colorSpace: string;\n  /** The frame rate of the video, indicating the number of frames displayed per second */\n  frameRate: string;\n  /** The rotation angle of the video in degrees, indicating its orientation */\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The format of the audio file container, which encapsulates audio streams and metadata */\n  container: string;\n  /** The audio codec used for encoding or decoding the audio data */\n  codec: string;\n  /** The sample rate of the audio file, indicating the number of samples per second */\n  sampleRate: number;\n  /**  The number of audio channels in the file, indicating the sound configuration (e.g., mono, stereo) */\n  numberOfChannels: number;\n  /**  The bitrate of the audio file, indicating the amount of data processed per second. */\n  bitrate: number;\n  /** The codec profile used for encoding the audio data, indicating specific settings and capabilities */\n  codecProfile: string;\n  /** The tool or software used to encode or process the audio file */\n  tool: string;\n  /** The duration of the audio file in seconds */\n  duration: number;\n  /** The title of the audio file or track */\n  title: string;\n  /** The name of the artist or band who performed the audio track. */\n  artist: string;\n  /** The name of the album that the audio track belongs to */\n  album: string;\n  /** The year the audio track was release */\n  year: number;\n  /** The genre of the audio track */\n  genre: string;\n  /** The music label or company that released the audio trac */\n  label: string;\n}\n\n/**\n * Interface representing the basic functionality for a file management controller.\n */\nexport interface BasicFileController {\n  /**\n   * Handles the uploading of a file, saving it to the system, and optionally marking it as public.\n   * @param file - The file to be uploaded.\n   * @param isPublic - A string indicating whether the file should be public (\"true\") or private (\"false\").\n   * @returns A promise that resolves to the saved file entity.\n   */\n  createFile(file: Express.Multer.File, isPublic: string): Promise;\n\n  /**\n   * Retrieves a private file by its ID and sends it as a response.\n   * @param res - The HTTP response object used to send the file.\n   * @param id - The ID of the file to be retrieved.\n   * @returns A promise that resolves when the file is sent.\n   */\n  getPrivateFile(res: Response, id: number): Promise;\n\n  /**\n   * Retrieves a public file by its ID.\n   * @param id - The ID of the file to be retrieved.\n   * @returns A promise that resolves to the retrieved file entity.\n   */\n  getFile(id: number): Promise;\n\n  /**\n   * Removes a file by its ID from the system.\n   * @param id - The ID of the file to be removed.\n   * @returns A promise that resolves to the removed file entity.\n   */\n  removeFile(id: number): Promise;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AudioFileMetadataEntity.html":{"url":"entities/AudioFileMetadataEntity.html","title":"entity - AudioFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AudioFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/audio-file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the audio metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                album\n                            \n                            \n                                    \n                                    \n                                artist\n                            \n                            \n                                    \n                                    \n                                bitrate\n                            \n                            \n                                    \n                                    \n                                codec\n                            \n                            \n                                    \n                                    \n                                codecProfile\n                            \n                            \n                                    \n                                    \n                                container\n                            \n                            \n                                    \n                                    \n                                duration\n                            \n                            \n                                    \n                                    \n                                genre\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                label\n                            \n                            \n                                    \n                                    \n                                numberOfChannels\n                            \n                            \n                                    \n                                    \n                                sampleRate\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                tool\n                            \n                            \n                                    \n                                    \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        album\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        artist\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bitrate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        codec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        codecProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'codec_profile', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        genre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        numberOfChannels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'number_of_channels', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'sample_rate', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:63\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { AudioFileMetadata } from \"../file.types\";\n\n/**\n * The entity stores the audio metadata of the file\n */\n@Entity(\"file_metadata_audio\")\nexport class AudioFileMetadataEntity implements AudioFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  container: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  codec: string;\n\n  @Index()\n  @Column(\"int\", { name: \"sample_rate\", nullable: true })\n  sampleRate: number;\n\n  @Index()\n  @Column(\"int\", { name: \"number_of_channels\", nullable: true })\n  numberOfChannels: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true })\n  bitrate: number;\n\n  @Index()\n  @Column(\"varchar\", { name: \"codec_profile\", nullable: true })\n  codecProfile: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  tool: string;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  duration: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  title: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  artist: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  album: string;\n\n  @Index()\n  @Column(\"int\", { nullable: true })\n  year: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  genre: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  label: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                exchange\n                            \n                            \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        exchange\n                        \n                    \n                \n            \n            \n                \n                        \n                    exchange(payload: ExchangeTokenPayload, request: Request, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseDto(JwtDto)@Post('/exchange-token')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/auth/auth.controller.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ExchangeTokenPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(payload: LoginPayload, request: Request, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseDto(JwtDto)@Post('/login')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/auth/auth.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            LoginPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(token: string, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LiteAuthGuard)@Post('/logout')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/auth/auth.controller.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Body,\n  Controller,\n  ForbiddenException,\n  Post,\n  Req,\n  Res,\n  UseGuards,\n} from \"@nestjs/common\";\nimport { Request, Response } from \"express\";\nimport { CaptchaConfig } from \"../../../gen-src/captcha.config\";\nimport { AuthService } from \"./auth.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport { CaptchaService } from \"../captcha/captcha.types\";\nimport { ResponseDto } from \"../../shared/decorators/response-dto.decorator\";\nimport { LiteAuthGuard } from \"../../shared/guards/lite-auth.guard\";\nimport { AccessToken } from \"../../shared/decorators/access-token.decorator\";\nimport {\n  BasicAuthController,\n  ExchangeTokenPayload,\n  JwtDto,\n  LoginPayload,\n} from \"./auth.types\";\n\n@Controller(\"/auth\")\nexport class AuthController implements BasicAuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly cacheService: CacheService,\n    private readonly captchaService: CaptchaService,\n  ) {}\n\n  @ResponseDto(JwtDto)\n  @Post(\"/login\")\n  async login(\n    @Body() payload: LoginPayload,\n    @Req() request: Request,\n    @Res({ passthrough: true }) response: Response,\n  ): Promise {\n    const captchaEnabled = await this.cacheService.getBoolean(\n      CaptchaConfig.ENABLED,\n    );\n    if (captchaEnabled) {\n      const res = await this.captchaService.validateCaptcha({\n        id: payload.captchaId,\n        data: payload.captchaPayload,\n      });\n      if (!res) {\n        throw new ForbiddenException(\"Invalid captcha\");\n      }\n    }\n    if (request.ip) {\n      payload.ipAddress = request.ip;\n    }\n    const data = await this.authService.authenticate(payload);\n    response.cookie(\"accessToken\", data.accessToken, {\n      sameSite: true,\n      httpOnly: true,\n      expires: data.atExp,\n    });\n    response.cookie(\"refreshToken\", data.refreshToken, {\n      sameSite: true,\n      httpOnly: true,\n      expires: data.rtExp,\n    });\n    return data;\n  }\n\n  @UseGuards(LiteAuthGuard)\n  @Post(\"/logout\")\n  async logout(\n    @AccessToken() token: string,\n    @Res({ passthrough: true }) response: Response,\n  ): Promise {\n    const result = await this.authService.invalidateToken(token);\n    response.clearCookie(\"accessToken\");\n    response.clearCookie(\"refreshToken\");\n    return { result };\n  }\n\n  @ResponseDto(JwtDto)\n  @Post(\"/exchange-token\")\n  async exchange(\n    @Body() payload: ExchangeTokenPayload,\n    @Req() request: Request,\n    @Res({ passthrough: true }) response: Response,\n  ): Promise> {\n    const token = payload?.token ?? request.cookies?.refreshToken;\n    const data = await this.authService.exchangeToken(token);\n    response.cookie(\"accessToken\", data.accessToken, {\n      sameSite: true,\n      httpOnly: true,\n      expires: data.atExp,\n    });\n    response.cookie(\"refreshToken\", data.refreshToken, {\n      sameSite: true,\n      httpOnly: true,\n      expires: data.rtExp,\n    });\n    return data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/guards/auth.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                An authentication guard that extends AbstractAuthGuard, used for full authentication including user fetching.\n\n            \n\n            \n                Extends\n            \n            \n                            AbstractAuthGuard\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, userService: UserService, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/guards/auth.guard.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { AbstractAuthGuard } from \"./abstract-auth.guard\";\nimport { LOGGER } from \"../modules/log/log.constants\";\nimport { UserService } from \"../../common/user/user.types\";\nimport { CacheService } from \"../modules/cache/cache.types\";\n\n/**\n * An authentication guard that extends AbstractAuthGuard, used for full authentication including user fetching.\n */\n@Injectable()\nexport class AuthGuard extends AbstractAuthGuard {\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    protected readonly userService: UserService,\n    protected readonly cacheService: CacheService,\n  ) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/auth/auth.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module providing auth process.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: AuthModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.module.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            AuthModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      service: AuthorizationService,\n      controller: AuthController,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { JwtModule } from \"@nestjs/jwt\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { AuthorizationService } from \"./authorization.service\";\nimport { AuthModuleOptions } from \"./auth.types\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { UserModule } from \"../user/user.module\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport { AuthConfig } from \"../../../gen-src/auth.config\";\nimport { AuthService } from \"./auth.constants\";\nimport { AuthController } from \"./auth.controller\";\nimport { CaptchaModule } from \"../captcha/captcha.module\";\n\n/**\n * Module providing auth process.\n */\n@Module({})\nexport class AuthModule {\n  static forRoot(\n    options: AuthModuleOptions = {\n      service: AuthorizationService,\n      controller: AuthController,\n    },\n  ): DynamicModule {\n    return {\n      module: AuthModule,\n      controllers: [options.controller],\n      imports: [\n        PassportModule,\n        CacheModule,\n        LogModule,\n        CaptchaModule.forRoot(),\n        UserModule.forRoot(),\n        JwtModule.registerAsync({\n          imports: [CacheModule],\n          inject: [CacheService],\n          useFactory: async (cs: CacheService) => {\n            return {\n              secret: await cs.get(AuthConfig.JWT_SECRET),\n              signOptions: {\n                expiresIn: await cs.getNumber(\n                  AuthConfig.ACCESS_TOKEN_EXPIRATION,\n                ),\n              },\n            };\n          },\n        }),\n      ],\n      providers: [\n        {\n          provide: AuthService,\n          useClass: options.service,\n        },\n      ],\n      exports: [AuthService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthService.html":{"url":"classes/AuthService.html","title":"class - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract service class for authentication and authorization.\nDefines the methods that must be implemented by any derived service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                authenticate\n                            \n                            \n                                    Abstract\n                                exchangeToken\n                            \n                            \n                                    Abstract\n                                invalidateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        authenticate\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticate(data: LoginPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.constants.ts:109\n                        \n                    \n\n\n            \n                \n                        Authenticate the user with the provided login payload.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLoginPayload object with user login information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A Promise that resolves to a JwtDto containing access and refresh tokens.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        exchangeToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    exchangeToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.constants.ts:123\n                        \n                    \n\n\n            \n                \n                        Exchange the provided refresh token for a new access token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe refresh token to exchange.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                A Promise that resolves to a Partial containing new access and refresh tokens.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        invalidateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    invalidateToken(accessToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.constants.ts:116\n                        \n                    \n\n\n            \n                \n                        Invalidate the specified access token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe access token to invalidate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                A Promise that resolves to true if the token was invalidated successfully, or throws an error.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { JwtDto, LoginPayload } from \"./auth.types\";\n\n/**\n * Error message for access token related errors.\n * @constant\n */\nexport const ACCESS_TOKEN_ERROR_MSG = \"ERR_TOKEN_A\";\n\n/**\n * Error message for refresh token related errors.\n * @constant\n */\nexport const REFRESH_TOKEN_ERROR_MSG = \"ERR_TOKEN_R\";\n\n/**\n * Placeholder for unknown IP addresses.\n * @constant\n */\nexport const UNKNOWN_IP = \"unknown\";\n\n/**\n * Prefix for JWT cache keys.\n * @constant\n */\nexport const AUTH_JWT_CACHE_PREFIX = \"jwt\";\n\n/**\n * Prefix for access token cache keys.\n * @constant\n */\nexport const AUTH_ACCESS_TOKEN_PREFIX = \"access_token\";\n\n/**\n * Prefix for refresh token cache keys.\n * @constant\n */\nexport const AUTH_REFRESH_TOKEN_PREFIX = \"refresh_token\";\n\n/**\n * Prefix for brute force protection cache keys.\n * @constant\n */\nexport const BRUTEFORCE_JWT_CACHE_PREFIX = \"bruteforce\";\n\n/**\n * Generates a cache key for an access token.\n * @param accessToken - The access token.\n * @returns The generated cache key.\n */\nexport const jwtAccessTokenKey = (accessToken: string) => {\n  return `${AUTH_JWT_CACHE_PREFIX}:${AUTH_ACCESS_TOKEN_PREFIX}:${accessToken}`;\n};\n\n/**\n * Generates a cache key for a refresh token.\n * @param accessToken - The access token.\n * @param refreshToken - The refresh token.\n * @returns The generated cache key.\n */\nexport const jwtRefreshTokenKey = (\n  accessToken: string,\n  refreshToken: string,\n) => {\n  return `${AUTH_JWT_CACHE_PREFIX}:${AUTH_REFRESH_TOKEN_PREFIX}:${accessToken}:${refreshToken}`;\n};\n\n/**\n * Generates a cache key for tracking brute force login attempts by login.\n * @param login - The user's login.\n * @returns The generated cache key.\n */\nexport const bruteForceLoginKey = (login: string) =>\n  `${BRUTEFORCE_JWT_CACHE_PREFIX}:login:${login}`;\n\n/**\n * Generates a cache key for tracking brute force login attempts by IP address.\n * @param ipAddress - The IP address of the user.\n * @returns The generated cache key.\n */\nexport const bruteForceIPKey = (ipAddress: string) =>\n  `${BRUTEFORCE_JWT_CACHE_PREFIX}:ip:${ipAddress}`;\n\n/**\n * Abstract service class for authentication and authorization.\n * Defines the methods that must be implemented by any derived service.\n */\nexport abstract class AuthService {\n  /**\n   * Authenticate the user with the provided login payload.\n   * @param data - LoginPayload object with user login information.\n   * @returns A Promise that resolves to a JwtDto containing access and refresh tokens.\n   */\n  abstract authenticate(data: LoginPayload): Promise;\n\n  /**\n   * Invalidate the specified access token.\n   * @param accessToken - The access token to invalidate.\n   * @returns A Promise that resolves to true if the token was invalidated successfully, or throws an error.\n   */\n  abstract invalidateToken(accessToken: string);\n\n  /**\n   * Exchange the provided refresh token for a new access token.\n   * @param refreshToken - The refresh token to exchange.\n   * @returns A Promise that resolves to a Partial containing new access and refresh tokens.\n   */\n  abstract exchangeToken(refreshToken: string): Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BadRequestMsException.html":{"url":"classes/BadRequestMsException.html","title":"class - BadRequestMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BadRequestMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/bad-request-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for bad requests, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/bad-request-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for bad requests, extending MsException.\n */\nexport class BadRequestMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.BAD_REQUEST, message || \"Bad request\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasicAuthController.html":{"url":"interfaces/BasicAuthController.html","title":"interface - BasicAuthController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BasicAuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the basic functionality for an authentication controller.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        exchange\n                                    \n                                \n                                \n                                    \n                                        login\n                                    \n                                \n                                \n                                    \n                                        logout\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        exchange\n                        \n                    \n                \n            \n            \n                \nexchange(payload: ExchangeTokenPayload, request: Request, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.types.ts:159\n                        \n                    \n\n\n            \n                \n                        Exchanges a refresh token for a new set of access and refresh tokens.\nThe new tokens are set as HTTP-only cookies.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ExchangeTokenPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe payload containing the refresh token to be exchanged.\n\n\n                                            \n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe incoming HTTP request object.\n\n\n                                            \n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe HTTP response object where new cookies will be set.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                A promise that resolves to a partial JWT data transfer object containing the new tokens.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(payload: LoginPayload, request: Request, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.types.ts:137\n                        \n                    \n\n\n            \n                \n                        Handles user login by validating the provided credentials, generating JWT tokens,\nand setting them as HTTP-only cookies.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            LoginPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe login credentials, including username, password, and optional captcha data.\n\n\n                                            \n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe incoming HTTP request object.\n\n\n                                            \n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe HTTP response object where cookies will be set.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to a JWT data transfer object containing access and refresh tokens.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout(token: string, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.types.ts:149\n                        \n                    \n\n\n            \n                \n                        Logs out the user by invalidating the provided access token and clearing related cookies.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe JWT access token that needs to be invalidated.\n\n\n                                            \n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe HTTP response object where cookies will be cleared.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to an object indicating the result of the logout operation.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IsIP, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\nimport { Expose, Transform, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common\";\nimport { UserDto } from \"../user/user.types\";\nimport { TransformUtils } from \"../../shared/utils/transform.utils\";\nimport { AuthService } from \"./auth.constants\";\nimport { Request, Response } from \"express\";\n\n/**\n * Data transfer object for login payload.\n * Contains user login information required for authentication.\n */\nexport class LoginPayload {\n  /**\n   * The login of the user.\n   * @example ```typescript\n   * \"admin\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  login: string;\n\n  /**\n   * The password of the user.\n   * @example ```typescript\n   * \"P@ssw0rd!\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  /**\n   * The IP address of the user.\n   * Optional.\n   * @example ```typescript\n   * \"192.168.0.1\"\n   */\n  @IsIP()\n  @IsOptional()\n  ipAddress: string;\n\n  /**\n   * The ID of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaId?: string;\n\n  /**\n   * The payload of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaPayload?: string;\n}\n\n/**\n * Data transfer object for token exchange payload.\n * Contains the token to be exchanged for a new token pair JwtDto.\n */\nexport class ExchangeTokenPayload {\n  /**\n   * The refresh token to be exchanged.\n   */\n  @IsString()\n  @IsOptional()\n  token: string;\n}\n\n/**\n * Data transfer object for JWT tokens.\n * Contains access and refresh tokens along with their expiration dates and user information.\n */\nexport class JwtDto {\n  /**\n   * The user-data object.\n   */\n  @Expose()\n  @Type(() => UserDto)\n  user: UserDto;\n\n  /**\n   * The access token.\n   */\n  @Expose()\n  accessToken: string;\n\n  /**\n   * The refresh token.\n   */\n  @Expose()\n  refreshToken: string;\n\n  /**\n   * The expiration date of the access token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  atExp: Date;\n\n  /**\n   * The expiration date of the refresh token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  rtExp: Date;\n}\n\n/**\n * Interface representing the basic functionality for an authentication controller.\n */\nexport interface BasicAuthController {\n  /**\n   * Handles user login by validating the provided credentials, generating JWT tokens,\n   * and setting them as HTTP-only cookies.\n   * @param payload - The login credentials, including username, password, and optional captcha data.\n   * @param request - The incoming HTTP request object.\n   * @param response - The HTTP response object where cookies will be set.\n   * @returns A promise that resolves to a JWT data transfer object containing access and refresh tokens.\n   */\n  login(\n    payload: LoginPayload,\n    request: Request,\n    response: Response,\n  ): Promise;\n\n  /**\n   * Logs out the user by invalidating the provided access token and clearing related cookies.\n   * @param token - The JWT access token that needs to be invalidated.\n   * @param response - The HTTP response object where cookies will be cleared.\n   * @returns A promise that resolves to an object indicating the result of the logout operation.\n   */\n  logout(token: string, response: Response): Promise;\n\n  /**\n   * Exchanges a refresh token for a new set of access and refresh tokens.\n   * The new tokens are set as HTTP-only cookies.\n   * @param payload - The payload containing the refresh token to be exchanged.\n   * @param request - The incoming HTTP request object.\n   * @param response - The HTTP response object where new cookies will be set.\n   * @returns A promise that resolves to a partial JWT data transfer object containing the new tokens.\n   */\n  exchange(\n    payload: ExchangeTokenPayload,\n    request: Request,\n    response: Response,\n  ): Promise>;\n}\n\n/**\n * Options for configuring the authentication module.\n * @property service - The authentication service class.\n */\nexport type AuthModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasicCaptchaController.html":{"url":"interfaces/BasicCaptchaController.html","title":"interface - BasicCaptchaController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BasicCaptchaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/captcha.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the basic functionality for a CAPTCHA controller.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getCaptcha\n                                    \n                                \n                                \n                                    \n                                        validateCaptcha\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCaptcha\n                        \n                    \n                \n            \n            \n                \ngetCaptcha()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.types.ts:98\n                        \n                    \n\n\n            \n                \n                        Generates a CAPTCHA data.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to a CAPTCHA response.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateCaptcha\n                        \n                    \n                \n            \n            \n                \nvalidateCaptcha(payload: CaptchaRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.types.ts:92\n                        \n                    \n\n\n            \n                \n                        Validates the provided CAPTCHA response against the expected solution.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            CaptchaRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe CAPTCHA validation request.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to an object indicating whether the CAPTCHA validation was successful.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\n\n/**\n * Abstract class representing a CAPTCHA service.\n * @template CaptchaBody Type of data returned when generating CAPTCHA.\n */\nexport abstract class CaptchaService {\n  /**\n   * Generates a CAPTCHA.\n   * @returns {Promise} A promise that resolves with the CAPTCHA data.\n   */\n  abstract generateCaptcha(): Promise;\n\n  /**\n   * Validates a CAPTCHA.\n   * @param {CaptchaRequest} request The data for validate the CAPTCHA.\n   * @returns {Promise} A promise that resolves with the validation result (true if the CAPTCHA is valid).\n   */\n  abstract validateCaptcha(request: CaptchaRequest): Promise;\n}\n\n/**\n * Data transfer object for validate the CAPTCHA.\n * @template T Type of the CAPTCHA data.\n */\nexport class CaptchaRequest {\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  /**\n   * The data associated with the CAPTCHA request.\n   */\n  @IsNotEmpty()\n  data: T;\n}\n\n/**\n * Type representing a CAPTCHA response for client side.\n */\nexport type CaptchaResponse = {\n  /**\n   * The type of the CAPTCHA.\n   */\n  type?: string;\n\n  /**\n   * The image data for the CAPTCHA.\n   */\n  image?: string;\n\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  id?: string;\n\n  /**\n   * Whether the CAPTCHA is enabled in configuration.\n   */\n  enabled?: boolean;\n};\n\n/**\n * Interface representing the basic functionality for a CAPTCHA controller.\n */\nexport interface BasicCaptchaController {\n  /**\n   * Validates the provided CAPTCHA response against the expected solution.\n   * @param payload - The CAPTCHA validation request.\n   * @returns A promise that resolves to an object indicating whether the CAPTCHA validation was successful.\n   */\n  validateCaptcha(payload: CaptchaRequest): Promise;\n\n  /**\n   * Generates a CAPTCHA data.\n   * @returns A promise that resolves to a CAPTCHA response.\n   */\n  getCaptcha(): Promise;\n}\n\n/**\n * Options for configuring the CAPTCHA module.\n */\nexport type CaptchaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasicExplorerController.html":{"url":"interfaces/BasicExplorerController.html","title":"interface - BasicExplorerController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BasicExplorerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getEntity\n                                    \n                                \n                                \n                                    \n                                        getEntityList\n                                    \n                                \n                                \n                                    \n                                        getTarget\n                                    \n                                \n                                \n                                    \n                                        getTargetList\n                                    \n                                \n                                \n                                    \n                                        removeEntity\n                                    \n                                \n                                \n                                    \n                                        saveEntity\n                                    \n                                \n                                \n                                    \n                                        saveTarget\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getEntity\n                        \n                    \n                \n            \n            \n                \ngetEntity(target: string, id: string, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEntityList\n                        \n                    \n                \n            \n            \n                \ngetEntityList(target: string, params: PageableParams, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                            PageableParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTarget\n                        \n                    \n                \n            \n            \n                \ngetTarget(target: string, type: \"section\" | \"object\", user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                        \"section\" | \"object\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTargetList\n                        \n                    \n                \n            \n            \n                \ngetTargetList()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeEntity\n                        \n                    \n                \n            \n            \n                \nremoveEntity(target: string, id: string, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveEntity\n                        \n                    \n                \n            \n            \n                \nsaveEntity(target: string, body: T, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:59\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveTarget\n                        \n                    \n                \n            \n            \n                \nsaveTarget(target: ExplorerTarget)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            ExplorerTarget\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface BasicExplorerController {\n  getTargetList(): Promise;\n\n  saveTarget(target: ExplorerTarget): Promise;\n\n  getTarget(\n    target: string,\n    type: \"section\" | \"object\",\n    user: User,\n  ): Promise;\n\n  getEntity(target: string, id: string, user: User): Promise;\n\n  getEntityList(\n    target: string,\n    params: PageableParams,\n    user: User,\n  ): Promise>;\n\n  saveEntity(target: string, body: T, user: User): Promise;\n\n  removeEntity(target: string, id: string, user: User): Promise;\n}\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n  controller?: Class;\n  saveHandlers?: Class[];\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasicFileController.html":{"url":"interfaces/BasicFileController.html","title":"interface - BasicFileController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BasicFileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the basic functionality for a file management controller.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createFile\n                                    \n                                \n                                \n                                    \n                                        getFile\n                                    \n                                \n                                \n                                    \n                                        getPrivateFile\n                                    \n                                \n                                \n                                    \n                                        removeFile\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createFile\n                        \n                    \n                \n            \n            \n                \ncreateFile(file: Express.Multer.File, isPublic: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.types.ts:332\n                        \n                    \n\n\n            \n                \n                        Handles the uploading of a file, saving it to the system, and optionally marking it as public.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe file to be uploaded.\n\n\n                                            \n                                        \n                                        \n                                                isPublic\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA string indicating whether the file should be public (\"true\") or private (\"false\").\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the saved file entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFile\n                        \n                    \n                \n            \n            \n                \ngetFile(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.types.ts:347\n                        \n                    \n\n\n            \n                \n                        Retrieves a public file by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the file to be retrieved.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the retrieved file entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPrivateFile\n                        \n                    \n                \n            \n            \n                \ngetPrivateFile(res: Response, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.types.ts:340\n                        \n                    \n\n\n            \n                \n                        Retrieves a private file by its ID and sends it as a response.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe HTTP response object used to send the file.\n\n\n                                            \n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the file to be retrieved.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the file is sent.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFile\n                        \n                    \n                \n            \n            \n                \nremoveFile(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.types.ts:354\n                        \n                    \n\n\n            \n                \n                        Removes a file by its ID from the system.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the file to be removed.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the removed file entity.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  /** This field contains the identification number */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file */\n  name: string;\n  /** This field stores the path to the file on the server */\n  path: string;\n  /** This field specifies the type of access to the file, public or private */\n  public: boolean;\n  /** This field stores the size of the file in bytes */\n  size: number;\n  /** This field stores the icon of the file */\n  icon: Media;\n  /** This field stores the media preview of the file  */\n  preview: Media;\n  /** This field contains a reference to the FileMetadata container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The MIME type of the file, indicating the nature and format of the file content */\n  mime: string;\n  /** The file extension, indicating the file format */\n  ext: string;\n  /** The cryptographic hash of the file content, used for integrity verification and identification */\n  hash: string;\n  /** The ICC (International Color Consortium) profile data associated with the file, used for color management */\n  icc: IccFileMetadata;\n  /** GPS data associated with the location where the file was created, including latitude, longitude and elevation */\n  gps: GpsFileMetadata;\n  /** This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics */\n  image: ImageFileMetadata;\n  /** This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created */\n  exif: ExifFileMetadata;\n  /** This field is used to store information about the structure and properties of the audio file */\n  audio: AudioFileMetadata;\n  /** This field is used to store information about the structure and properties of the video recording*/\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The number of bits used to represent the color of a single pixel in the image */\n  bps: number;\n  /** The width of the image in pixels */\n  width: number;\n  /** The height of the image in pixels */\n  height: number;\n  /** The number of color components used to represent the color of the image */\n  colorComponents: number;\n  /** The subsampling method used for the image, indicating how color information is sampled */\n  subsampling: string;\n  /** The date and time when the image was created or last modified */\n  dateTime: Date;\n  /** The bit depth of the image, indicating the number of bits used for color representation */\n  bitDepth: number;\n  /** The color type of the image, indicating the color model used */\n  colorType: string;\n  /** Contains the compression method used to reduce the size of the image */\n  compression: string;\n  /** Specifies the filtering method used to process the image data before compressing it */\n  filter: string;\n  /**  Indicates whether interlacing is used in the image, allowing for progressive display */\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The version of the ICC profile, indicating the specification version used to create the color profile. */\n  profileVersion: string;\n  /** The class of the ICC profile, indicating its primary purpose and type */\n  profileClassValue: string;\n  /** The name of the ICC profile class, describing its primary purpose */\n  profileClassName: string;\n  /** The connection space of the ICC profile, representing the intermediate color space used for color conversions. */\n  connectionSpace: string;\n  /** The date and time when the ICC profile was created or last modified */\n  iccProfileDate: Date;\n  /** A unique signature of the ICC profile used to confirm its authenticity and validity */\n  iccSignature: string;\n  /** The primary platform or operating system for which the ICC profile was created or optimized */\n  primaryPlatform: string;\n  /** The manufacturer of the device for which the ICC profile was created */\n  deviceManufacturer: string;\n  /** The model number of the device for which the ICC profile was created */\n  deviceModelNumber: string;\n  /**  Indicates the type of rendering to be used when converting colors between color spaces */\n  renderingIntentValue: string;\n  /** Specifies the name of the rendering type that is used when converting colors between color spaces */\n  renderingIntentName: string;\n  /** The name or identifier of the creator of the ICC profile */\n  profileCreator: string;\n  /** A description of the ICC profile, explaining its purpose and characteristics */\n  iccDescription: string;\n  /** The copyright information for the ICC profile, indicating ownership and usage rights */\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** This field specifies the manufacturer of the camera */\n  make: string;\n  /** This field specifies the model of the camera  */\n  model: string;\n  /** Indicates image display orientation based on EXIF metadata */\n  orientation: string;\n  /** X-side resolution of the photo*/\n  resolutionX: string;\n  /** Y-side resolution of the photo*/\n  resolutionY: string;\n  /** Unit of image resolution */\n  resolutionUnit: string;\n  /** The field contains information about the software that was used to create or edit the image */\n  software: string;\n  /** This field is responsible for specifying the method of placing these color components Y, Cb and Cr relative to the image pixels */\n  ycbCrPositioning: string;\n  /** Pointer to the beginning of an EXIF IFD block in a file inside a TIFF file */\n  exifIfdPointer: string;\n  /** Contains information about the location where the image was taken */\n  gpsInfoIfdPointer: string;\n  /** Exposure time (shutter speed) when capturing an image */\n  exposureTime: string;\n  /** Contains data on the aperture number (aperture) when capturing an image */\n  fNumber: string;\n  /** Contains data on the exposure mode (shutter speed and aperture) used to capture the image */\n  exposureProgram: string;\n  /** Contains data on the ISO value (the sensitivity of the camera sensor to light) */\n  isoSpeedRatings: string;\n  /** Contains EXIF specification version data */\n  exifVersion: string;\n  /** Contains time offset data relative to UTC (Coordinated Universal Time) for the date and time when the image was taken */\n  offsetTime: string;\n  /** Contains data on the shutter speed of the camera */\n  shutterSpeedValue: string;\n  /** Contains data on the aperture (aperture) value used to capture the image */\n  aperture: string;\n  /** Contains data on the brightness level of the image */\n  brightness: string;\n  /** Contains exposure compensation data  */\n  exposureBias: string;\n  /** Contains data on the maximum aperture (aperture) value  */\n  maxAperture: string;\n  /** Contains data on the distance to the subject in millimeters */\n  subjectDistance: string;\n  /** Contains data on the light sensing mode used by the camera when capturing an image */\n  meteringMode: string;\n  /** Contains data on the status and operation of the flash during image capture */\n  flash: string;\n  /** Contains data about the focal length of the camera lens */\n  focalLength: string;\n  /** The Flashpix format version used for the image */\n  flashpixVersion: string;\n  /** The color space of the image data */\n  colorSpace: string;\n  /** Width (horizontal resolution) of the image in pixels */\n  pixelXDimension: string;\n  /** Contains data about the vertical resolution (height) of the image in pixels */\n  pixelYDimension: string;\n  /** Pointer to the start of the Interoperability IFD block for compatibility metadata */\n  interoperabilityIfdPointer: string;\n  /** Indicates the method used by the camera sensor to capture the image */\n  sensingMethod: string;\n  /** The type of scene captured in the image, indicating if it was taken with a digital camera */\n  sceneType: string;\n  /** Indicates whether the image was processed with custom rendering */\n  customRendered: string;\n  /** The exposure mode used by the camera during the shot */\n  exposureMode: string;\n  /** The white balance setting used during the shot */\n  whiteBalance: string;\n  /** The digital zoom ratio applied during the shot */\n  digitalZoomRatio: string;\n  /** The type of scene capture mode used during the shot */\n  sceneCaptureType: string;\n  /** The level of contrast applied to the image */\n  contrast: string;\n  /** The level of color saturation applied to the image */\n  saturation: string;\n  /** The level of sharpness applied to the image */\n  sharpness: string;\n  /** The distance range to the subject during the shot */\n  subjectDistanceRange: string;\n  /** The manufacturer of the lens used to capture the image */\n  lensMake: string;\n  /** The model of the lens used to capture the image */\n  lensModel: string;\n  /** Indicates whether the image is a composite, created by combining multiple images or applying effects */\n  compositeImage: string;\n  /** The interoperability index indicating the standard used for ensuring image compatibility */\n  interoperabilityIndex: string;\n  /** The version of the interoperability standard used for the image */\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  /** Representing identifier of meta-data object */\n  id: number;\n  /** Representing gps-latitude parameter */\n  latitude: number;\n  /** Representing gps-longitude parameter */\n  longitude: number;\n  /** Representing gps-altitude parameter */\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** A codec ( algorithm or method ) used to compress and decompress a video file */\n  codec: string;\n  /** The container format of the video file, indicating how video, audio, and other data streams are packaged together */\n  container: string;\n  /** The width of the video in pixels */\n  width: number;\n  /** The height of the video in pixels */\n  height: number;\n  /**  The bitrate of the video file, indicating the amount of data processed per second */\n  bitrate: number;\n  /** The duration of the video file in seconds */\n  duration: number;\n  /** A sample video aspect ratio indicating how pixels are distributed in a video stream */\n  sampleAspectRatio: string;\n  /** The display aspect ratio of the video, indicating the ratio of width to height for playback.*/\n  displayAspectRatio: string;\n  /** Video color range, indicating the set of colors used in the video file */\n  colorRange: string;\n  /** The color space of the video, indicating how colors are represented and interpreted */\n  colorSpace: string;\n  /** The frame rate of the video, indicating the number of frames displayed per second */\n  frameRate: string;\n  /** The rotation angle of the video in degrees, indicating its orientation */\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The format of the audio file container, which encapsulates audio streams and metadata */\n  container: string;\n  /** The audio codec used for encoding or decoding the audio data */\n  codec: string;\n  /** The sample rate of the audio file, indicating the number of samples per second */\n  sampleRate: number;\n  /**  The number of audio channels in the file, indicating the sound configuration (e.g., mono, stereo) */\n  numberOfChannels: number;\n  /**  The bitrate of the audio file, indicating the amount of data processed per second. */\n  bitrate: number;\n  /** The codec profile used for encoding the audio data, indicating specific settings and capabilities */\n  codecProfile: string;\n  /** The tool or software used to encode or process the audio file */\n  tool: string;\n  /** The duration of the audio file in seconds */\n  duration: number;\n  /** The title of the audio file or track */\n  title: string;\n  /** The name of the artist or band who performed the audio track. */\n  artist: string;\n  /** The name of the album that the audio track belongs to */\n  album: string;\n  /** The year the audio track was release */\n  year: number;\n  /** The genre of the audio track */\n  genre: string;\n  /** The music label or company that released the audio trac */\n  label: string;\n}\n\n/**\n * Interface representing the basic functionality for a file management controller.\n */\nexport interface BasicFileController {\n  /**\n   * Handles the uploading of a file, saving it to the system, and optionally marking it as public.\n   * @param file - The file to be uploaded.\n   * @param isPublic - A string indicating whether the file should be public (\"true\") or private (\"false\").\n   * @returns A promise that resolves to the saved file entity.\n   */\n  createFile(file: Express.Multer.File, isPublic: string): Promise;\n\n  /**\n   * Retrieves a private file by its ID and sends it as a response.\n   * @param res - The HTTP response object used to send the file.\n   * @param id - The ID of the file to be retrieved.\n   * @returns A promise that resolves when the file is sent.\n   */\n  getPrivateFile(res: Response, id: number): Promise;\n\n  /**\n   * Retrieves a public file by its ID.\n   * @param id - The ID of the file to be retrieved.\n   * @returns A promise that resolves to the retrieved file entity.\n   */\n  getFile(id: number): Promise;\n\n  /**\n   * Removes a file by its ID from the system.\n   * @param id - The ID of the file to be removed.\n   * @returns A promise that resolves to the removed file entity.\n   */\n  removeFile(id: number): Promise;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasicMediaController.html":{"url":"interfaces/BasicMediaController.html","title":"interface - BasicMediaController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BasicMediaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the basic functionality for a media management controller.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createMedia\n                                    \n                                \n                                \n                                    \n                                        getMedia\n                                    \n                                \n                                \n                                    \n                                        getPrivateMedia\n                                    \n                                \n                                \n                                    \n                                        recreateMedia\n                                    \n                                \n                                \n                                    \n                                        removeMedia\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMedia\n                        \n                    \n                \n            \n            \n                \ncreateMedia(file: Express.Multer.File, type: string, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:263\n                        \n                    \n\n\n            \n                \n                        Handles the uploading of media, saving it to the system, and associating it with a specific type and ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe media file to be uploaded.\n\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe type of media being uploaded (e.g., image, video).\n\n\n                                            \n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAn optional ID for associating the media with an existing entity.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the saved media entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMedia\n                        \n                    \n                \n            \n            \n                \ngetMedia(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:290\n                        \n                    \n\n\n            \n                \n                        Retrieves a public media file by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the media to be retrieved.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the retrieved media entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPrivateMedia\n                        \n                    \n                \n            \n            \n                \ngetPrivateMedia(res: Response, id: number, format: string, webp: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:278\n                        \n                    \n\n\n            \n                \n                        Retrieves a private media file by its ID, applies any requested format transformations,\nand sends it as a response.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe HTTP response object used to send the media file.\n\n\n                                            \n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the media to be retrieved.\n\n\n                                            \n                                        \n                                        \n                                                format\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAn optional format for transforming the media before sending.\n\n\n                                            \n                                        \n                                        \n                                                webp\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA boolean indicating whether to convert the media to WebP format.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the media file is sent.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recreateMedia\n                        \n                    \n                \n            \n            \n                \nrecreateMedia(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:304\n                        \n                    \n\n\n            \n                \n                        Recreates a media file by regenerating it.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the media to be recreated.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the recreated media entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMedia\n                        \n                    \n                \n            \n            \n                \nremoveMedia(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:297\n                        \n                    \n\n\n            \n                \n                        Removes a media file by its ID from the system.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the media to be removed.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the removed media entity.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  /** This field contains the identification number of the file  */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file in all languages involved */\n  name: LocalizedString[];\n  /** This field contains a list of unique settings and functions that the file contains */\n  type: MediaType;\n  /** This field contains a link to the original file and all its thumbnails */\n  files: MediaFile[];\n  /** This field contains a link to the meta data container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  /** A unique code representing the media file type */\n  code: string;\n  /** This field contains a unique character identifier */\n  name: string;\n  /** This field defines the possibility to create a duplicate file in WEBP format */\n  vp6: boolean;\n  /** This field indicates the type of access to the file, public or private */\n  private: boolean;\n  /** A numeric value reflecting the quality level of the media (defines the compression rate or overall quality) */\n  quality: number;\n  /** A file extension associated with the media type and which defines the file format  */\n  ext: MediaExt;\n  /** An array of supported media formats for this media type */\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media format */\n  name: string;\n  /** The width of the media file in pixels, represented as a string  */\n  width: string;\n  /** The height of the media file in pixels, represented as a string  */\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  /** A unique code or identifier for the media file*/\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media file */\n  name: string;\n  /** The width of the media file in pixels */\n  width: number;\n  /** The height of the media file in pixels */\n  height: number;\n  /** The size of the media file in bytes */\n  size: number;\n  /** The format of the media file, represented by the MediaFormat type */\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** A unique code or identifier for the media file*/\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(id: number, privateMedia?: boolean): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Interface representing the basic functionality for a media management controller.\n */\nexport interface BasicMediaController {\n  /**\n   * Handles the uploading of media, saving it to the system, and associating it with a specific type and ID.\n   * @param file - The media file to be uploaded.\n   * @param type - The type of media being uploaded (e.g., image, video).\n   * @param id - An optional ID for associating the media with an existing entity.\n   * @returns A promise that resolves to the saved media entity.\n   */\n  createMedia(\n    file: Express.Multer.File,\n    type: string,\n    id: number,\n  ): Promise;\n\n  /**\n   * Retrieves a private media file by its ID, applies any requested format transformations,\n   * and sends it as a response.\n   * @param res - The HTTP response object used to send the media file.\n   * @param id - The ID of the media to be retrieved.\n   * @param format - An optional format for transforming the media before sending.\n   * @param webp - A boolean indicating whether to convert the media to WebP format.\n   * @returns A promise that resolves when the media file is sent.\n   */\n  getPrivateMedia(\n    res: Response,\n    id: number,\n    format: string,\n    webp: boolean,\n  ): Promise;\n\n  /**\n   * Retrieves a public media file by its ID.\n   * @param id - The ID of the media to be retrieved.\n   * @returns A promise that resolves to the retrieved media entity.\n   */\n  getMedia(id: number): Promise;\n\n  /**\n   * Removes a media file by its ID from the system.\n   * @param id - The ID of the media to be removed.\n   * @returns A promise that resolves to the removed media entity.\n   */\n  removeMedia(id: number): Promise;\n\n  /**\n   * Recreates a media file by regenerating it.\n   * @param id - The ID of the media to be recreated.\n   * @returns A promise that resolves to the recreated media entity.\n   */\n  recreateMedia(id: number): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasicUserController.html":{"url":"interfaces/BasicUserController.html","title":"interface - BasicUserController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BasicUserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the basic functionality for a user profile management controller.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createUserProfile\n                                    \n                                \n                                \n                                    \n                                        getUserProfile\n                                    \n                                \n                                \n                                    \n                                        removeUserProfile\n                                    \n                                \n                                \n                                    \n                                        updateUserProfile\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUserProfile\n                        \n                    \n                \n            \n            \n                \ncreateUserProfile(profile: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:157\n                        \n                    \n\n\n            \n                \n                        Creates a new user profile in the system.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                profile\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe profile data for the new user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the created user entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserProfile\n                        \n                    \n                \n            \n            \n                \ngetUserProfile(id: string, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:134\n                        \n                    \n\n\n            \n                \n                        Retrieves the profile of a user by ID or returns the profile of the current user if no ID is provided.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user profile to be retrieved. If not provided, the current user's profile is returned.\n\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe current authenticated user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the retrieved user entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeUserProfile\n                        \n                    \n                \n            \n            \n                \nremoveUserProfile(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:150\n                        \n                    \n\n\n            \n                \n                        Removes a user profile by ID from the system.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user profile to be removed.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the removed user entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserProfile\n                        \n                    \n                \n            \n            \n                \nupdateUserProfile(id: string, profile: User, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:143\n                        \n                    \n\n\n            \n                \n                        Updates the profile of a user by ID or updates the profile of the current user if no ID is provided.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user profile to be updated. If not provided, the current user's profile is updated.\n\n\n                                            \n                                        \n                                        \n                                                profile\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new profile data.\n\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe current authenticated user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the updated user entity.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\n/**\n * Interface representing the basic functionality for a user profile management controller.\n */\nexport interface BasicUserController {\n  /**\n   * Retrieves the profile of a user by ID or returns the profile of the current user if no ID is provided.\n   * @param id - The ID of the user profile to be retrieved. If not provided, the current user's profile is returned.\n   * @param user - The current authenticated user.\n   * @returns A promise that resolves to the retrieved user entity.\n   */\n  getUserProfile(id: string, user: User): Promise;\n\n  /**\n   * Updates the profile of a user by ID or updates the profile of the current user if no ID is provided.\n   * @param id - The ID of the user profile to be updated. If not provided, the current user's profile is updated.\n   * @param profile - The new profile data.\n   * @param user - The current authenticated user.\n   * @returns A promise that resolves to the updated user entity.\n   */\n  updateUserProfile(id: string, profile: User, user: User): Promise;\n\n  /**\n   * Removes a user profile by ID from the system.\n   * @param id - The ID of the user profile to be removed.\n   * @returns A promise that resolves to the removed user entity.\n   */\n  removeUserProfile(id: string): Promise;\n\n  /**\n   * Creates a new user profile in the system.\n   * @param profile - The profile data for the new user.\n   * @returns A promise that resolves to the created user entity.\n   */\n  createUserProfile(profile: User): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BasicUserService.html":{"url":"injectables/BasicUserService.html","title":"injectable - BasicUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BasicUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user-service-basic.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Provides methods to interact with the UserEntity repository.\n\n            \n\n            \n                Extends\n            \n            \n                            UserService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByLogin\n                            \n                            \n                                    Async\n                                removeById\n                            \n                            \n                                    Async\n                                updateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRep: Repository)\n                    \n                \n                        \n                            \n                                Defined in lib/common/user/user-service-basic.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: User)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:84\n\n                        \n                    \n\n\n            \n                \n                        Create a new user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user object to create.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The created user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:55\n\n                        \n                    \n\n\n            \n                \n                        Find a user by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The user found or undefined if not found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByLogin(login: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:42\n\n                        \n                    \n\n\n            \n                \n                        Find a user by their login.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                login\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's login.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The user found or undefined if not found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeById\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:96\n\n                        \n                    \n\n\n            \n                \n                        Remove a user by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The removed user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateById(id: string, user: User)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:69\n\n                        \n                    \n\n\n            \n                \n                        Update a user by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's ID.\n\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user object with updated properties.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The updated user.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { User, UserService } from \"./user.types\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { UserEntity } from \"./entity/user.entity\";\nimport { USER_RELATIONS } from \"./user.constants\";\n\n/**\n * Provides methods to interact with the UserEntity repository.\n */\n@Injectable()\nexport class BasicUserService extends UserService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRep: Repository,\n  ) {\n    super();\n  }\n\n  /**\n   * Find a user by their login.\n   * @async\n   * @param {string} login - The user's login.\n   * @returns {Promise} The user found or undefined if not found.\n   */\n  async findByLogin(login: string): Promise {\n    return await this.userRep.findOne({\n      where: { login, active: true },\n      relations: USER_RELATIONS,\n    });\n  }\n\n  /**\n   * Find a user by their ID.\n   * @async\n   * @param {string} id - The user's ID.\n   * @returns {Promise} The user found or undefined if not found.\n   */\n  async findById(id: string): Promise {\n    return await this.userRep.findOne({\n      where: { id },\n      relations: USER_RELATIONS,\n    });\n  }\n\n  /**\n   * Update a user by their ID.\n   * @async\n   * @param {string} id - The user's ID.\n   * @param {User} user - The user object with updated properties.\n   * @returns {Promise} The updated user.\n   */\n  async updateById(id: string, user: User): Promise {\n    user.id = id;\n    if (user.login) {\n      delete user.login;\n    }\n    await this.userRep.save(user);\n    return await this.findById(id);\n  }\n\n  /**\n   * Create a new user.\n   * @async\n   * @param {User} user - The user object to create.\n   * @returns {Promise} The created user.\n   */\n  async create(user: User): Promise {\n    const newUser = this.userRep.create(user);\n    return await this.userRep.save(newUser);\n  }\n\n  /**\n   * Remove a user by their ID.\n   * @async\n   * @param {string} id - The user's ID.\n   * @returns {Promise} The removed user.\n   * @throws {NotFoundException} If the user with the specified ID is not found.\n   */\n  async removeById(id: string): Promise {\n    const user = await this.findById(id);\n    if (!user) {\n      throw new NotFoundException(`User with ID ${id} not found`);\n    }\n    await this.userRep.remove(user);\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CacheModule.html":{"url":"modules/CacheModule.html","title":"module - CacheModule","body":"\n                   \n\n\n\n\n    Modules\n    CacheModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CacheModule\n\n\n\ncluster_CacheModule_imports\n\n\n\ncluster_CacheModule_exports\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nCacheModule\n\nCacheModule\n\nCacheModule -->\n\nLogModule->CacheModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nCacheModule -->\n\nRedisModule->CacheModule\n\n\n\n\n\nCacheService \n\nCacheService \n\nCacheService  -->\n\nCacheModule->CacheService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/cache/cache.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides caching functionality using Redis.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            LogModule\n                        \n                        \n                            RedisModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CacheService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Logger, Module } from \"@nestjs/common\";\nimport { RedisModule } from \"./redis.module\";\nimport { LogModule } from \"../log/log.module\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\nimport { CacheService } from \"./cache.types\";\nimport { RedisCacheService } from \"./redis-cache.service\";\n\n/**\n * A module that provides caching functionality using Redis.\n */\n@Module({\n  imports: [\n    RedisModule.forRootAsync({\n      imports: [LogModule],\n      inject: [LOGGER],\n      useFactory: (logger: Logger) => {\n        EnvLoader.loadEnvironment(logger);\n        return {\n          config: {\n            host: process.env.REDIS_HOST,\n            port: parseInt(process.env.REDIS_PORT),\n            db: parseInt(process.env.REDIS_DB),\n            username: process.env.REDIS_USER,\n            password: process.env.REDIS_PASSWORD,\n          },\n        };\n      },\n    }),\n    LogModule,\n  ],\n  providers: [\n    {\n      provide: CacheService,\n      useClass: RedisCacheService,\n    },\n  ],\n  exports: [CacheService],\n})\nexport class CacheModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CacheService.html":{"url":"classes/CacheService.html","title":"class - CacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/cache/cache.types.ts\n        \n\n\n            \n                Description\n            \n            \n                An abstract class defining methods for cache operations.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                del\n                            \n                            \n                                    Abstract\n                                expire\n                            \n                            \n                                    Abstract\n                                get\n                            \n                            \n                                    Abstract\n                                getBoolean\n                            \n                            \n                                    Abstract\n                                getFromPattern\n                            \n                            \n                                    Abstract\n                                getNumber\n                            \n                            \n                                    Abstract\n                                incr\n                            \n                            \n                                    Abstract\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        del\n                        \n                    \n                \n            \n            \n                \n                        \n                    del(...keys: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        expire\n                        \n                    \n                \n            \n            \n                \n                        \n                    expire(key: string, expiresIn: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getBoolean\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBoolean(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getFromPattern\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFromPattern(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNumber(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        incr\n                        \n                    \n                \n            \n            \n                \n                        \n                    incr(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: string | number, expiration?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expiration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CacheService {\n  abstract get(key: string): Promise;\n\n  abstract getNumber(key: string): Promise;\n\n  abstract getBoolean(key: string): Promise;\n\n  abstract set(\n    key: string,\n    value: string | number,\n    expiration?: number,\n  ): Promise;\n\n  abstract del(...keys: string[]): Promise;\n\n  abstract incr(key: string): Promise;\n\n  abstract expire(key: string, expiresIn: number): Promise;\n\n  abstract getFromPattern(pattern: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CaptchaController.html":{"url":"controllers/CaptchaController.html","title":"controller - CaptchaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CaptchaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/captcha.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /captcha\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getCaptcha\n                            \n                            \n                                    \n                                    Async\n                                validateCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCaptcha()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        validateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateCaptcha(payload: CaptchaRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/validate')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            CaptchaRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Body, Controller, Get, Post } from \"@nestjs/common\";\nimport {\n  BasicCaptchaController,\n  CaptchaRequest,\n  CaptchaResponse,\n  CaptchaService,\n} from \"./captcha.types\";\n\n@Controller(\"/captcha\")\nexport class CaptchaController implements BasicCaptchaController {\n  constructor(private readonly captchaService: CaptchaService) {}\n\n  @Post(\"/validate\")\n  async validateCaptcha(\n    @Body() payload: CaptchaRequest,\n  ): Promise {\n    const result = await this.captchaService.validateCaptcha(payload);\n    return { result };\n  }\n\n  @Get(\"/\")\n  async getCaptcha(): Promise {\n    const captcha: CaptchaResponse =\n      await this.captchaService.generateCaptcha();\n    if (!captcha) {\n      return { enabled: false };\n    }\n    return {\n      enabled: true,\n      id: captcha.id,\n      image: captcha.image,\n      type: captcha.type,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CaptchaModule.html":{"url":"modules/CaptchaModule.html","title":"module - CaptchaModule","body":"\n                   \n\n\n\n\n    Modules\n    CaptchaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/captcha/captcha.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for work with captcha.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: CaptchaModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.module.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CaptchaModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      service: GraphicCaptchaService,\n      controller: CaptchaController,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRootAsync\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRootAsync(options: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.module.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { GraphicCaptchaService } from \"./graphic-captcha.service\";\nimport {\n  BasicCaptchaController,\n  CaptchaModuleOptions,\n  CaptchaService,\n} from \"./captcha.types\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CaptchaController } from \"./captcha.controller\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\n\n/**\n * Module for work with captcha.\n */\n@Module({})\nexport class CaptchaModule {\n  static forRoot(\n    options: CaptchaModuleOptions = {\n      service: GraphicCaptchaService,\n      controller: CaptchaController,\n    },\n  ): DynamicModule {\n    return {\n      module: CaptchaModule,\n      controllers: [options.controller],\n      imports: [CacheModule, LogModule],\n      providers: [\n        {\n          provide: CaptchaService,\n          useClass: options.service,\n        },\n      ],\n      exports: [CaptchaService],\n    };\n  }\n\n  static forRootAsync(options: {\n    inject?: any[];\n    imports?: any[];\n    controller?: Class;\n    useFactory: (...args) => Promise | CaptchaService;\n  }): DynamicModule {\n    const { inject, imports, controller, useFactory } = options;\n    return {\n      module: CaptchaModule,\n      imports: [...(imports || [])],\n      controllers: [controller || CaptchaController],\n      providers: [\n        {\n          provide: CaptchaService,\n          useFactory,\n          inject,\n        },\n      ],\n      exports: [CaptchaService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CaptchaRequest.html":{"url":"classes/CaptchaRequest.html","title":"class - CaptchaRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CaptchaRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/captcha.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for validate the CAPTCHA.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                data\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/captcha/captcha.types.ts:55\n                        \n                    \n\n            \n                \n                    The data associated with the CAPTCHA request.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/captcha/captcha.types.ts:49\n                        \n                    \n\n            \n                \n                    The unique identifier for the CAPTCHA.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\n\n/**\n * Abstract class representing a CAPTCHA service.\n * @template CaptchaBody Type of data returned when generating CAPTCHA.\n */\nexport abstract class CaptchaService {\n  /**\n   * Generates a CAPTCHA.\n   * @returns {Promise} A promise that resolves with the CAPTCHA data.\n   */\n  abstract generateCaptcha(): Promise;\n\n  /**\n   * Validates a CAPTCHA.\n   * @param {CaptchaRequest} request The data for validate the CAPTCHA.\n   * @returns {Promise} A promise that resolves with the validation result (true if the CAPTCHA is valid).\n   */\n  abstract validateCaptcha(request: CaptchaRequest): Promise;\n}\n\n/**\n * Data transfer object for validate the CAPTCHA.\n * @template T Type of the CAPTCHA data.\n */\nexport class CaptchaRequest {\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  /**\n   * The data associated with the CAPTCHA request.\n   */\n  @IsNotEmpty()\n  data: T;\n}\n\n/**\n * Type representing a CAPTCHA response for client side.\n */\nexport type CaptchaResponse = {\n  /**\n   * The type of the CAPTCHA.\n   */\n  type?: string;\n\n  /**\n   * The image data for the CAPTCHA.\n   */\n  image?: string;\n\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  id?: string;\n\n  /**\n   * Whether the CAPTCHA is enabled in configuration.\n   */\n  enabled?: boolean;\n};\n\n/**\n * Interface representing the basic functionality for a CAPTCHA controller.\n */\nexport interface BasicCaptchaController {\n  /**\n   * Validates the provided CAPTCHA response against the expected solution.\n   * @param payload - The CAPTCHA validation request.\n   * @returns A promise that resolves to an object indicating whether the CAPTCHA validation was successful.\n   */\n  validateCaptcha(payload: CaptchaRequest): Promise;\n\n  /**\n   * Generates a CAPTCHA data.\n   * @returns A promise that resolves to a CAPTCHA response.\n   */\n  getCaptcha(): Promise;\n}\n\n/**\n * Options for configuring the CAPTCHA module.\n */\nexport type CaptchaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CaptchaService.html":{"url":"classes/CaptchaService.html","title":"class - CaptchaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CaptchaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/captcha.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing a CAPTCHA service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                generateCaptcha\n                            \n                            \n                                    Abstract\n                                validateCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        generateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateCaptcha()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.types.ts:29\n                        \n                    \n\n\n            \n                \n                        Generates a CAPTCHA.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves with the CAPTCHA data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        validateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateCaptcha(request: CaptchaRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.types.ts:36\n                        \n                    \n\n\n            \n                \n                        Validates a CAPTCHA.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            CaptchaRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data for validate the CAPTCHA.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves with the validation result (true if the CAPTCHA is valid).\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\n\n/**\n * Abstract class representing a CAPTCHA service.\n * @template CaptchaBody Type of data returned when generating CAPTCHA.\n */\nexport abstract class CaptchaService {\n  /**\n   * Generates a CAPTCHA.\n   * @returns {Promise} A promise that resolves with the CAPTCHA data.\n   */\n  abstract generateCaptcha(): Promise;\n\n  /**\n   * Validates a CAPTCHA.\n   * @param {CaptchaRequest} request The data for validate the CAPTCHA.\n   * @returns {Promise} A promise that resolves with the validation result (true if the CAPTCHA is valid).\n   */\n  abstract validateCaptcha(request: CaptchaRequest): Promise;\n}\n\n/**\n * Data transfer object for validate the CAPTCHA.\n * @template T Type of the CAPTCHA data.\n */\nexport class CaptchaRequest {\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  /**\n   * The data associated with the CAPTCHA request.\n   */\n  @IsNotEmpty()\n  data: T;\n}\n\n/**\n * Type representing a CAPTCHA response for client side.\n */\nexport type CaptchaResponse = {\n  /**\n   * The type of the CAPTCHA.\n   */\n  type?: string;\n\n  /**\n   * The image data for the CAPTCHA.\n   */\n  image?: string;\n\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  id?: string;\n\n  /**\n   * Whether the CAPTCHA is enabled in configuration.\n   */\n  enabled?: boolean;\n};\n\n/**\n * Interface representing the basic functionality for a CAPTCHA controller.\n */\nexport interface BasicCaptchaController {\n  /**\n   * Validates the provided CAPTCHA response against the expected solution.\n   * @param payload - The CAPTCHA validation request.\n   * @returns A promise that resolves to an object indicating whether the CAPTCHA validation was successful.\n   */\n  validateCaptcha(payload: CaptchaRequest): Promise;\n\n  /**\n   * Generates a CAPTCHA data.\n   * @returns A promise that resolves to a CAPTCHA response.\n   */\n  getCaptcha(): Promise;\n}\n\n/**\n * Options for configuring the CAPTCHA module.\n */\nexport type CaptchaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CategoryEntity.html":{"url":"entities/CategoryEntity.html","title":"entity - CategoryEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CategoryEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/category/entity/category.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores category trees\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                children\n                            \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                params\n                            \n                            \n                                    \n                                parent\n                            \n                            \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @TreeChildren()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @TreeParent()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  Tree,\n  TreeChildren,\n  TreeParent,\n} from \"typeorm\";\nimport { LocalizedStringEntity } from \"../../locale/entity/localized-string.entity\";\nimport { SimpleJsonTransformer } from \"../../../transformers/simple-json.transformer\";\nimport { MediaEntity } from \"../../../../common/media/entity/media.entity\";\n\n/**\n * The entity stores category trees\n */\n@Entity(\"categories\")\n@Tree(\"nested-set\")\nexport class CategoryEntity {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @Column(\"varchar\", { nullable: true })\n  url: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    nullable: true,\n    default: null,\n  })\n  params: object;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  icon: MediaEntity;\n\n  @Index()\n  @Column(\"int\", { default: 0, unsigned: true })\n  priority: number;\n\n  @TreeParent()\n  parent: CategoryEntity;\n\n  @TreeChildren()\n  children: CategoryEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoryModule.html":{"url":"modules/CategoryModule.html","title":"module - CategoryModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_providers\n\n\n\ncluster_CategoryModule_exports\n\n\n\ncluster_CategoryModule_imports\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nCategoryModule\n\nCategoryModule\n\nCategoryModule -->\n\nLogModule->CategoryModule\n\n\n\n\n\nCategoryService \n\nCategoryService \n\nCategoryService  -->\n\nCategoryModule->CategoryService \n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/category/category.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides services and configurations for working with categories.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoryService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CategoryService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Module } from \"@nestjs/common\";\nimport { CategoryService } from \"./category.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { CategoryEntity } from \"./entity/category.entity\";\nimport { LogModule } from \"../log/log.module\";\n\n/**\n * A module that provides services and configurations for working with categories.\n */\n@Module({\n  imports: [LogModule, TypeOrmModule.forFeature([CategoryEntity])],\n  providers: [CategoryService],\n  exports: [CategoryService],\n})\nexport class CategoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CategoryRestrictionEntity.html":{"url":"entities/CategoryRestrictionEntity.html","title":"entity - CategoryRestrictionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CategoryRestrictionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/category/entity/category-restriction.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the settings for restricting access by user roles for categories\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                allowFor\n                            \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        allowFor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category-restriction.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category-restriction.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category-restriction.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category-restriction.entity.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { CategoryEntity } from \"./category.entity\";\nimport { UserRoleEntity } from \"../../../../common/user/entity/user-role.entity\";\n\n/**\n * The entity stores the settings for restricting access by user roles for categories\n */\n@Entity(\"category_restriction\")\nexport class CategoryRestrictionEntity {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @ManyToMany(() => UserRoleEntity)\n  @JoinTable()\n  allowFor: UserRoleEntity[];\n\n  @ManyToOne(() => CategoryEntity, (t) => t.id)\n  category: CategoryEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/category/category.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for working with tree-categories.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getDescendantsByCodeOfRoot\n                            \n                            \n                                    Private\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(catRep: TreeRepository, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/category/category.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        catRep\n                                                  \n                                                        \n                                                                        TreeRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDescendantsByCodeOfRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDescendantsByCodeOfRoot(code: string, depth?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/category/category.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Get descendants of a category by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The code of the root category.\n\n                                            \n                                        \n                                        \n                                                depth\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    The maximum depth for the search (optional).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the tree of descendants of the category.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sort\n                        \n                    \n                \n            \n            \n                \n                        \n                    sort(cat: CategoryEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/category/category.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Sorts the children of a category by priority.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cat\n                                            \n                                                            CategoryEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe category entity whose children need to be sorted.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { TreeRepository } from \"typeorm\";\nimport { CategoryEntity } from \"./entity/category.entity\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { CATEGORY_RELATIONS } from \"./category.constants\";\nimport { ObjectUtils } from \"../../utils/object.utils\";\n\n/**\n * Service for working with tree-categories.\n */\n@Injectable()\nexport class CategoryService {\n  constructor(\n    @InjectRepository(CategoryEntity)\n    private readonly catRep: TreeRepository,\n    @Inject(LOGGER) private readonly logger: Logger,\n  ) {}\n\n  /**\n   * Get descendants of a category by its code.\n   * @param code The code of the root category.\n   * @param depth The maximum depth for the search (optional).\n   * @returns A promise that resolves to the tree of descendants of the category.\n   */\n  async getDescendantsByCodeOfRoot(code: string, depth?: number) {\n    const cat = await this.catRep.findOne({\n      where: { code },\n      relations: CATEGORY_RELATIONS,\n    });\n    if (!cat) {\n      return null;\n    }\n    const res = await this.catRep.findDescendantsTree(cat, {\n      depth,\n      relations: CATEGORY_RELATIONS,\n    });\n    if (!res.children?.length) {\n      return res;\n    }\n    res.children.forEach((cat) => this.sort(cat));\n    this.sort(res);\n    return res;\n  }\n\n  /**\n   * Sorts the children of a category by priority.\n   * @param cat - The category entity whose children need to be sorted.\n   */\n  private sort(cat: CategoryEntity) {\n    ObjectUtils.sort(cat.children, \"priority\", false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ConfigController.html":{"url":"controllers/ConfigController.html","title":"controller - ConfigController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ConfigController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/config/config.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                config\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                list\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                removeProperty\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                setProperty\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        list\n                        \n                    \n                \n            \n            \n                \n                        \n                    list(params: PageableParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('/')@ForRoles(Roles.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/config/config.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            PageableParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        removeProperty\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeProperty(key: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Delete('/')@ForRoles(Roles.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/config/config.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        setProperty\n                        \n                    \n                \n            \n            \n                \n                        \n                    setProperty(body: ConfigItem)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Post('/')@ForRoles(Roles.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/config/config.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            ConfigItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Post,\n  Query,\n  UseGuards,\n} from \"@nestjs/common\";\nimport { AuthGuard } from \"../../shared/guards/auth.guard\";\nimport { ConfigService } from \"./config.service\";\nimport { ForRoles } from \"../../shared/decorators/for-roles.decorator\";\nimport { Roles } from \"../../shared/constants\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\nimport { ConfigItem } from \"./config.types\";\n\n@Controller(\"config\")\n@UseGuards(AuthGuard)\nexport class ConfigController {\n  constructor(private readonly configService: ConfigService) {}\n\n  @UseGuards(AuthGuard)\n  @Get(\"/\")\n  @ForRoles(Roles.ADMIN)\n  async list(\n    @Query() params: PageableParams,\n  ): Promise> {\n    return await this.configService.getPropertiesPage(params);\n  }\n\n  @UseGuards(AuthGuard)\n  @Post(\"/\")\n  @ForRoles(Roles.ADMIN)\n  async setProperty(@Body() body: ConfigItem): Promise {\n    return await this.configService.setProperty(body);\n  }\n\n  @UseGuards(AuthGuard)\n  @Delete(\"/\")\n  @ForRoles(Roles.ADMIN)\n  async removeProperty(@Query(\"key\") key: string): Promise {\n    return await this.configService.removeProperty(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigItem.html":{"url":"interfaces/ConfigItem.html","title":"interface - ConfigItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/config/config.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a configuration item.\nEach configuration item consists of a key and a value, both of which are strings.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key of the configuration item.\nThis is the identifier for the configuration setting.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The value of the configuration item.\nThis is the value associated with the configuration key.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ConfigItem {\n  /**\n   * The key of the configuration item.\n   * This is the identifier for the configuration setting.\n   */\n  key: string;\n\n  /**\n   * The value of the configuration item.\n   * This is the value associated with the configuration key.\n   */\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/config/config.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for work with system configuration.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forInitializer\n                        \n                    \n                \n            \n            \n                \n                        \n                    forInitializer()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.module.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DynamicModule\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.module.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DynamicModule\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { ConfigService } from \"./config.service\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { UserModule } from \"../user/user.module\";\nimport { ConfigController } from \"./config.controller\";\n\n/**\n * Module for work with system configuration.\n */\n@Module({})\nexport class ConfigModule {\n  static forRoot(): DynamicModule {\n    return {\n      module: ConfigModule,\n      imports: [LogModule, CacheModule, UserModule.forRoot()],\n      controllers: [ConfigController],\n      providers: [ConfigService],\n      exports: [ConfigService],\n    };\n  }\n\n  static forInitializer(): DynamicModule {\n    return {\n      module: ConfigModule,\n      imports: [LogModule, CacheModule],\n      providers: [ConfigService],\n      exports: [ConfigService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/config/config.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ConfigService is a service responsible for managing configurations in application.\nIt reads configuration properties from .properties files and stores the values in a store for fast retrieval.\nThe service provides methods to get, set, and remove configuration properties.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generatedTsOutput\n                            \n                            \n                                    Private\n                                    Readonly\n                                propertiesFiles\n                            \n                            \n                                    Private\n                                    Readonly\n                                valuesOfProperties\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                deleteExistingConfigTsFiles\n                            \n                            \n                                    Private\n                                    Async\n                                generateConfigTsFiles\n                            \n                            \n                                    Private\n                                generateNamespaceWithVariables\n                            \n                            \n                                    Async\n                                getPropertiesPage\n                            \n                            \n                                    Async\n                                initWithPropertiesFiles\n                            \n                            \n                                    Private\n                                mergePropertiesContent\n                            \n                            \n                                    Private\n                                parseValue\n                            \n                            \n                                    Private\n                                    Async\n                                processAndValidatePropertiesContent\n                            \n                            \n                                    Async\n                                removeProperty\n                            \n                            \n                                    Private\n                                    Async\n                                scanForPropertiesFiles\n                            \n                            \n                                    Async\n                                setProperty\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/common/config/config.service.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        deleteExistingConfigTsFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteExistingConfigTsFiles(directory: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:290\n                        \n                    \n\n\n            \n                \n                        Deletes existing configuration TypeScript files in the specified directory.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                directory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe directory to scan for generated configuration files.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        generateConfigTsFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateConfigTsFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:322\n                        \n                    \n\n\n            \n                \n                        Generates TypeScript configuration files based on the processed properties files.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateNamespaceWithVariables\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateNamespaceWithVariables(namespaceName: string, processedData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:273\n                        \n                    \n\n\n            \n                \n                        Generates a namespace with variables based on the processed data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                namespaceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the namespace.\n\n\n                                            \n                                        \n                                        \n                                                processedData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe processed data to include in the namespace.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The generated namespace content as a string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPropertiesPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPropertiesPage(params: PageableParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Retrieves a page of configuration properties based on the provided pageable parameters.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            PageableParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nPageable parameters for sorting, filtering, and pagination.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                A promise that resolves to an object containing the pageable data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initWithPropertiesFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    initWithPropertiesFiles(genCnfDir?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Initializes the service by scanning for properties files, generating config files, and synchronizing the cache.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                genCnfDir\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mergePropertiesContent\n                        \n                    \n                \n            \n            \n                \n                        \n                    mergePropertiesContent(mainContent: string, localContent: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:357\n                        \n                    \n\n\n            \n                \n                        Merges the content of the main properties file with the content of the local properties file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mainContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe content of the main properties file.\n\n\n                                            \n                                        \n                                        \n                                                localContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe content of the local properties file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The merged content.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parseValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:251\n                        \n                    \n\n\n            \n                \n                        Parses the value of a configuration property.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to parse.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The parsed value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        processAndValidatePropertiesContent\n                        \n                    \n                \n            \n            \n                \n                        \n                    processAndValidatePropertiesContent(filePath: string, content: string, fileNamePrefix: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:211\n                        \n                    \n\n\n            \n                \n                        Processes and validates the content of a properties file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path to the properties file.\n\n\n                                            \n                                        \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe content of the properties file.\n\n\n                                            \n                                        \n                                        \n                                                fileNamePrefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe prefix to use for the properties in the file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                An object containing the processed data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeProperty\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeProperty(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:123\n                        \n                    \n\n\n            \n                \n                        Removes a configuration property.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key of the configuration property to remove.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to a boolean indicating whether the operation was successful.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        scanForPropertiesFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    scanForPropertiesFiles(directory: string, globalKpContent: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:133\n                        \n                    \n\n\n            \n                \n                        Scans the specified directory for properties files and processes them.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                directory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe directory to scan for properties files.\n\n\n                                            \n                                        \n                                        \n                                                globalKpContent\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    \nThe content of the global KP properties file, if any.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setProperty\n                        \n                    \n                \n            \n            \n                \n                        \n                    setProperty(item: ConfigItem)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:113\n                        \n                    \n\n\n            \n                \n                        Sets a configuration property.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            ConfigItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAn object containing the key and value of the configuration property.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to a boolean indicating whether the operation was successful.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generatedTsOutput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/config/config.service.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        propertiesFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in lib/common/config/config.service.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        valuesOfProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in lib/common/config/config.service.ts:46\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport * as fs from \"fs\";\nimport * as path from \"path\";\nimport {\n  CONFIG_CACHE_PREFIX,\n  CONFIG_FILE_EXT_PATTERN,\n  FILES_ENCODING,\n  GEN_SRC_DIR,\n  KP_PROPERTIES_FILE_NAME,\n  LOCAL_PROPERTIES_FILE_NAME,\n  PROPERTIES_FILE_EXT_PATTERN,\n} from \"./config.constants\";\nimport { ConfigItem } from \"./config.types\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * ConfigService is a service responsible for managing configurations in application.\n * It reads configuration properties from .properties files and stores the values in a store for fast retrieval.\n * The service provides methods to get, set, and remove configuration properties.\n */\n@Injectable()\nexport class ConfigService {\n  private readonly propertiesFiles: { [path: string]: { [key: string]: any } } =\n    {};\n  private readonly valuesOfProperties: { [key: string]: any } = {};\n  private generatedTsOutput: string;\n\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    private readonly cacheService: CacheService,\n  ) {}\n\n  /**\n   * Initializes the service by scanning for properties files, generating config files, and synchronizing the cache.\n   */\n  async initWithPropertiesFiles(genCnfDir?: string) {\n    this.generatedTsOutput = genCnfDir;\n    this.logger.log(`Scan project`);\n    await this.scanForPropertiesFiles(process.cwd());\n    this.logger.log(`Clean generated source dirs`);\n    await this.deleteExistingConfigTsFiles(process.cwd());\n    this.logger.log(`Clean config storage`);\n    await this.cacheService.del(CONFIG_CACHE_PREFIX + \":*\");\n    this.logger.log(`Generate config files`);\n    await this.generateConfigTsFiles();\n    for (const key in this.valuesOfProperties) {\n      await this.cacheService.set(`${key}`, this.valuesOfProperties[key]);\n    }\n    this.logger.log(`Config files was synchronize`);\n  }\n\n  /**\n   * Retrieves a page of configuration properties based on the provided pageable parameters.\n   * @param params - Pageable parameters for sorting, filtering, and pagination.\n   * @returns A promise that resolves to an object containing the pageable data.\n   */\n  async getPropertiesPage(\n    params: PageableParams,\n  ): Promise> {\n    const { limit, page, sort, order, filter } = params;\n    const propertyKeys = await this.cacheService.getFromPattern(\n      `${CONFIG_CACHE_PREFIX}:${!filter ? \"*\" : filter}`,\n    );\n    const sortedKeys = propertyKeys.sort((a, b) => {\n      if (sort && order) {\n        const aValue = a[sort] || \"\";\n        const bValue = b[sort] || \"\";\n        return order === \"ASC\"\n          ? aValue.localeCompare(bValue)\n          : bValue.localeCompare(aValue);\n      }\n      return a.localeCompare(b);\n    });\n    const totalCount = sortedKeys.length;\n    const start = (page - 1) * limit;\n    const end = start + limit;\n    const keysToRetrieve = sortedKeys.slice(start, end);\n    const propertiesWithValues: ConfigItem[] = await Promise.all(\n      keysToRetrieve.map(async (key) => {\n        const value = await this.cacheService.get(key);\n        return { key: key.replace(`${CONFIG_CACHE_PREFIX}:`, ``), value };\n      }),\n    );\n    return new PageableData(propertiesWithValues, totalCount, page, limit);\n  }\n\n  /**\n   * Sets a configuration property.\n   * @param item - An object containing the key and value of the configuration property.\n   * @returns A promise that resolves to a boolean indicating whether the operation was successful.\n   */\n  async setProperty(item: ConfigItem): Promise {\n    const fullKey = `${CONFIG_CACHE_PREFIX}:${item.key}`;\n    return await this.cacheService.set(fullKey, item.value);\n  }\n\n  /**\n   * Removes a configuration property.\n   * @param key - The key of the configuration property to remove.\n   * @returns A promise that resolves to a boolean indicating whether the operation was successful.\n   */\n  async removeProperty(key: string): Promise {\n    const fullKey = `${CONFIG_CACHE_PREFIX}:${key}`;\n    return await this.cacheService.del(fullKey);\n  }\n\n  /**\n   * Scans the specified directory for properties files and processes them.\n   * @param directory - The directory to scan for properties files.\n   * @param globalKpContent - The content of the global KP properties file, if any.\n   */\n  private async scanForPropertiesFiles(\n    directory: string,\n    globalKpContent: string | null = null,\n  ) {\n    const files = await fs.promises.readdir(directory, { withFileTypes: true });\n    if (directory === process.cwd()) {\n      for (const file of files) {\n        if (file.isFile() && file.name === KP_PROPERTIES_FILE_NAME) {\n          const kpPath = path.join(directory, file.name);\n          globalKpContent = await fs.promises.readFile(kpPath, FILES_ENCODING);\n          const localPropertiesPath = path.join(\n            directory,\n            LOCAL_PROPERTIES_FILE_NAME,\n          );\n          if (fs.existsSync(localPropertiesPath)) {\n            const localPropertiesContent = await fs.promises.readFile(\n              localPropertiesPath,\n              FILES_ENCODING,\n            );\n            globalKpContent = this.mergePropertiesContent(\n              globalKpContent,\n              localPropertiesContent,\n            );\n          }\n          break;\n        }\n      }\n    }\n    for (const file of files) {\n      const fullPath = path.join(directory, file.name);\n      if (file.isDirectory()) {\n        await this.scanForPropertiesFiles(fullPath, globalKpContent);\n      } else if (\n        file.isFile() &&\n        path.extname(file.name) === PROPERTIES_FILE_EXT_PATTERN\n      ) {\n        let fileContent = await fs.promises.readFile(fullPath, FILES_ENCODING);\n        const localPropertiesPath = path.join(\n          directory,\n          LOCAL_PROPERTIES_FILE_NAME,\n        );\n        if (fs.existsSync(localPropertiesPath)) {\n          const localPropertiesContent = await fs.promises.readFile(\n            localPropertiesPath,\n            FILES_ENCODING,\n          );\n          fileContent = this.mergePropertiesContent(\n            fileContent,\n            localPropertiesContent,\n          );\n        }\n        if (globalKpContent) {\n          fileContent = this.mergePropertiesContent(\n            fileContent,\n            globalKpContent,\n          );\n        }\n        const fileNamePrefix = path.basename(\n          fullPath,\n          PROPERTIES_FILE_EXT_PATTERN,\n        );\n        this.propertiesFiles[fullPath] =\n          await this.processAndValidatePropertiesContent(\n            fullPath,\n            fileContent,\n            fileNamePrefix,\n          );\n      }\n    }\n  }\n\n  /**\n   * Processes and validates the content of a properties file.\n   * @param filePath - The path to the properties file.\n   * @param content - The content of the properties file.\n   * @param fileNamePrefix - The prefix to use for the properties in the file.\n   * @returns An object containing the processed data.\n   */\n  private async processAndValidatePropertiesContent(\n    filePath: string,\n    content: string,\n    fileNamePrefix: string,\n  ) {\n    const lines = content.split(\"\\n\");\n    const processedData: { [key: string]: any } = {};\n    for (const line of lines) {\n      if (line.trim().startsWith(\"#\") || line.trim().length === 0) {\n        continue;\n      }\n      const [key, value] = line.split(\"=\");\n      let keyWithoutPrefix = key;\n      if (key.startsWith(fileNamePrefix + \".\")) {\n        keyWithoutPrefix = key.slice(fileNamePrefix.length + 1);\n      } else {\n        continue;\n      }\n      const variableName = keyWithoutPrefix\n        .split(\".\")\n        .map((part) => part.toUpperCase())\n        .join(\"_\");\n      if (!/^[_a-zA-Z][_a-zA-Z0-9]*$/.test(variableName)) {\n        this.logger.error(`Invalid line found: \"${line}\" in file ${filePath}`);\n        throw new Error(`Invalid content in file: \"${filePath}\"`);\n      }\n      const propertyKey = `${CONFIG_CACHE_PREFIX}:${fileNamePrefix}.${keyWithoutPrefix}`;\n      processedData[variableName] = `\"${propertyKey}\"`;\n      if (!propertyKey.startsWith(\"kp.\") && !propertyKey.startsWith(\"local.\")) {\n        this.valuesOfProperties[propertyKey] = this.parseValue(value.trim());\n      }\n    }\n    return processedData;\n  }\n\n  /**\n   * Parses the value of a configuration property.\n   * @param value - The value to parse.\n   * @returns The parsed value.\n   */\n  private parseValue(value: string) {\n    let processedValue = value.trim();\n    if (processedValue === \"true\" || processedValue === \"false\") {\n      processedValue = JSON.parse(processedValue);\n    } else if (processedValue === \"null\") {\n      processedValue = null;\n    } else if (/^[-+*/\\d\\s()]*$/.test(processedValue)) {\n      try {\n        processedValue = eval(processedValue);\n      } catch (e) {\n        return processedValue;\n      }\n    }\n    return processedValue;\n  }\n\n  /**\n   * Generates a namespace with variables based on the processed data.\n   * @param namespaceName - The name of the namespace.\n   * @param processedData - The processed data to include in the namespace.\n   * @returns The generated namespace content as a string.\n   */\n  private generateNamespaceWithVariables(\n    namespaceName: string,\n    processedData: { [key: string]: string },\n  ) {\n    let generatedContent = `export namespace ${namespaceName} {\\n`;\n    for (const variableName in processedData) {\n      const processedValue = processedData[variableName];\n      generatedContent += `  export const ${variableName} = ${processedValue};\\n`; // initial value: ${this.valuesOfProperties[processedValue.substring(1,processedValue.length-1)]}\n    }\n    generatedContent += \"}\\n\";\n    return generatedContent;\n  }\n\n  /**\n   * Deletes existing configuration TypeScript files in the specified directory.\n   * @param directory - The directory to scan for generated configuration files.\n   */\n  private async deleteExistingConfigTsFiles(directory: string) {\n    if (directory === process.cwd() + \"/node_modules\") {\n      return;\n    }\n    const files = await fs.promises.readdir(directory, { withFileTypes: true });\n    for (const file of files) {\n      const fullPath = path.join(directory, file.name);\n      if (file.isDirectory()) {\n        if (file.name === GEN_SRC_DIR) {\n          const genSrcFiles = await fs.promises.readdir(fullPath, {\n            withFileTypes: true,\n          });\n          this.logger.verbose(`Read dir: ${fullPath}`);\n          for (const genSrcFile of genSrcFiles) {\n            if (\n              genSrcFile.isFile() &&\n              genSrcFile.name.endsWith(CONFIG_FILE_EXT_PATTERN)\n            ) {\n              this.logger.verbose(`Delete file: ${genSrcFile.name}`);\n              await fs.promises.unlink(path.join(fullPath, genSrcFile.name));\n            }\n          }\n        } else {\n          await this.deleteExistingConfigTsFiles(fullPath);\n        }\n      }\n    }\n  }\n\n  /**\n   * Generates TypeScript configuration files based on the processed properties files.\n   */\n  private async generateConfigTsFiles() {\n    for (const filePath in this.propertiesFiles) {\n      if (path.basename(filePath) === LOCAL_PROPERTIES_FILE_NAME) {\n        continue;\n      }\n      const fileContent = this.propertiesFiles[filePath];\n      const dirPath = this.generatedTsOutput ?? path.dirname(filePath);\n      const genSrcPath = path.join(dirPath, GEN_SRC_DIR);\n      const configFileName = path\n        .basename(filePath, PROPERTIES_FILE_EXT_PATTERN)\n        .concat(CONFIG_FILE_EXT_PATTERN);\n      const configFilePath = path.join(genSrcPath, configFileName);\n      const namespaceName =\n        path\n          .basename(filePath, PROPERTIES_FILE_EXT_PATTERN)\n          .charAt(0)\n          .toUpperCase() +\n        path.basename(filePath, PROPERTIES_FILE_EXT_PATTERN).slice(1) +\n        \"Config\";\n      const generatedFileContent = this.generateNamespaceWithVariables(\n        namespaceName,\n        fileContent,\n      );\n      await fs.promises.mkdir(genSrcPath, { recursive: true });\n      await fs.promises.writeFile(configFilePath, generatedFileContent);\n      this.logger.verbose(`Generated ${configFilePath}`);\n    }\n  }\n\n  /**\n   * Merges the content of the main properties file with the content of the local properties file.\n   * @param mainContent - The content of the main properties file.\n   * @param localContent - The content of the local properties file.\n   * @returns The merged content.\n   */\n  private mergePropertiesContent(\n    mainContent: string,\n    localContent: string,\n  ): string {\n    const mainContentLines = mainContent.split(\"\\n\");\n    const localContentLines = localContent.split(\"\\n\");\n    const mergedContent = [...mainContentLines];\n    for (const localLine of localContentLines) {\n      if (localLine.trim().startsWith(\"#\") || localLine.trim().length === 0) {\n        continue;\n      }\n      const [localKey] = localLine.split(\"=\");\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DbExceptionFilter.html":{"url":"classes/DbExceptionFilter.html","title":"class - DbExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DbExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/filters/db-exception-filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Exception filter to handle database errors and transform them into HTTP responses.\nThis filter catches TypeORM errors and returns a 502 Bad Gateway response with the error message.\n\n            \n\n\n            \n                Implements\n            \n            \n                            DbExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: QueryFailedError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/filters/db-exception-filter.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        QueryFailedError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch } from \"@nestjs/common\";\nimport { QueryFailedError } from \"typeorm\";\nimport { TypeORMError } from \"typeorm/error/TypeORMError\";\n\n/**\n * Exception filter to handle database errors and transform them into HTTP responses.\n * This filter catches TypeORM errors and returns a 502 Bad Gateway response with the error message.\n */\n@Catch(TypeORMError)\nexport class DbExceptionFilter implements DbExceptionFilter {\n  catch(exception: QueryFailedError, host: ArgumentsHost) {\n    const response = host.switchToHttp().getResponse();\n    response.status(502).json({ message: exception.message });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DirectoryStructure.html":{"url":"interfaces/DirectoryStructure.html","title":"interface - DirectoryStructure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DirectoryStructure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/utils/files.utils.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a structure of directories and files.\nThe keys are directory names, and the values are either arrays of file names or nested DirectoryStructure objects.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        [] | DirectoryStructure\n\n                    \n                \n                        \n                            \n                                Defined in lib/shared/utils/files.utils.ts:43\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import * as fs from \"fs\";\nimport * as crypto from \"crypto\";\nimport { OpenMode } from \"node:fs\";\nimport { Abortable } from \"node:events\";\nimport * as path from \"path\";\n\n/**\n * Object to hold the dynamically imported file-type module.\n */\nconst fileTypeModule = {} as { lib: typeof import(\"file-type\") };\n\n/**\n * Immediately Invoked Function Expression (IIFE) to dynamically import the ES module 'file-type'.\n * @param {object} ft - The fileTypeModule object.\n */\n(async (ft) => {\n  // crutch for import ES module\n  ft.lib = await (eval('import(\"file-type\")') as Promise);\n})(fileTypeModule);\n\n/**\n * An interface representing a structure of directories and files.\n * The keys are directory names, and the values are either arrays of file names or nested DirectoryStructure objects.\n */\ninterface DirectoryStructure {\n  [key: string]: string[] | DirectoryStructure;\n}\n\nexport namespace FilesUtils {\n  /**\n   * Gets the file type module.\n   * @returns The file type module.\n   */\n  export function fileType() {\n    return fileTypeModule.lib;\n  }\n\n  /**\n   * Generates an SHA-256 hash from a buffer.\n   * @param fileBuffer - The buffer to hash.\n   * @returns The SHA-256 hash as a hex string.\n   */\n  export function getHashFromBuffer(fileBuffer: Buffer) {\n    const hashSum = crypto.createHash(\"sha256\");\n    hashSum.update(fileBuffer);\n    return hashSum.digest(\"hex\");\n  }\n\n  /**\n   * Creates directories if they do not exist.\n   * @param directoryPath - The path of the directory to create.\n   */\n  export async function createDirectoriesIfNotExist(directoryPath: string) {\n    try {\n      await fs.promises.access(directoryPath);\n    } catch (error) {\n      await fs.promises.mkdir(directoryPath, { recursive: true });\n    }\n  }\n\n  /**\n   * Reads a file.\n   * @param path - The path of the file to read.\n   * @param opts - Optional read options.\n   * @returns The file contents as a buffer.\n   */\n  export async function readFile(\n    path: string,\n    opts?:\n      | ({\n          encoding?: null | undefined;\n          flag?: OpenMode | undefined;\n        } & Abortable)\n      | null,\n  ) {\n    return await fs.promises.readFile(path);\n  }\n\n  /**\n   * Recursively reads a directory and returns its structure.\n   * @param dirPath - The path of the directory to read.\n   * @returns A promise that resolves to the directory structure.\n   */\n  export async function readDirectoryRecursively(\n    dirPath: string,\n  ): Promise {\n    const result: DirectoryStructure = {};\n\n    async function readDir(\n      currentPath: string,\n      relativePath: string,\n    ): Promise {\n      const files = await fs.promises.readdir(currentPath);\n      const filePromises = files.map(async (file) => {\n        const filePath = path.join(currentPath, file);\n        const stats = await fs.promises.stat(filePath);\n        const newRelativePath = path.join(relativePath, file);\n        if (stats.isDirectory()) {\n          result[newRelativePath] = await readDir(filePath, newRelativePath);\n        } else {\n          if (!result[relativePath]) {\n            result[relativePath] = [];\n          }\n          (result[relativePath] as string[]).push(file);\n        }\n      });\n      await Promise.all(filePromises);\n      return result[relativePath] || [];\n    }\n\n    await readDir(dirPath, \"\");\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DtoInterceptor.html":{"url":"injectables/DtoInterceptor.html","title":"injectable - DtoInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DtoInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/interceptors/dto.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                An interceptor to transform plain JavaScript objects into instances of a specified DTO class.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serializer)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/interceptors/dto.interceptor.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serializer\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/interceptors/dto.interceptor.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from \"@nestjs/common\";\nimport { map } from \"rxjs\";\nimport { plainToInstance } from \"class-transformer\";\n\n/**\n * An interceptor to transform plain JavaScript objects into instances of a specified DTO class.\n * @template T - The DTO class to use for transformation.\n */\n@Injectable()\nexport class DtoInterceptor implements NestInterceptor {\n  constructor(private readonly serializer: new () => T) {}\n\n  intercept(context: ExecutionContext, next: CallHandler) {\n    return next\n      .handle()\n      .pipe(map((data) => plainToInstance(this.serializer, data)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntitySaveHandler.html":{"url":"interfaces/EntitySaveHandler.html","title":"interface - EntitySaveHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EntitySaveHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a handler for saving an entity.\nSuch handlers are triggered when entity recording occurs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        handle\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(target: string, data: T, currentUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:191\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface BasicExplorerController {\n  getTargetList(): Promise;\n\n  saveTarget(target: ExplorerTarget): Promise;\n\n  getTarget(\n    target: string,\n    type: \"section\" | \"object\",\n    user: User,\n  ): Promise;\n\n  getEntity(target: string, id: string, user: User): Promise;\n\n  getEntityList(\n    target: string,\n    params: PageableParams,\n    user: User,\n  ): Promise>;\n\n  saveEntity(target: string, body: T, user: User): Promise;\n\n  removeEntity(target: string, id: string, user: User): Promise;\n}\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n  controller?: Class;\n  saveHandlers?: Class[];\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExchangeTokenPayload.html":{"url":"classes/ExchangeTokenPayload.html","title":"class - ExchangeTokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExchangeTokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for token exchange payload.\nContains the token to be exchanged for a new token pair JwtDto.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:85\n                        \n                    \n\n            \n                \n                    The refresh token to be exchanged.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIP, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\nimport { Expose, Transform, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common\";\nimport { UserDto } from \"../user/user.types\";\nimport { TransformUtils } from \"../../shared/utils/transform.utils\";\nimport { AuthService } from \"./auth.constants\";\nimport { Request, Response } from \"express\";\n\n/**\n * Data transfer object for login payload.\n * Contains user login information required for authentication.\n */\nexport class LoginPayload {\n  /**\n   * The login of the user.\n   * @example ```typescript\n   * \"admin\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  login: string;\n\n  /**\n   * The password of the user.\n   * @example ```typescript\n   * \"P@ssw0rd!\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  /**\n   * The IP address of the user.\n   * Optional.\n   * @example ```typescript\n   * \"192.168.0.1\"\n   */\n  @IsIP()\n  @IsOptional()\n  ipAddress: string;\n\n  /**\n   * The ID of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaId?: string;\n\n  /**\n   * The payload of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaPayload?: string;\n}\n\n/**\n * Data transfer object for token exchange payload.\n * Contains the token to be exchanged for a new token pair JwtDto.\n */\nexport class ExchangeTokenPayload {\n  /**\n   * The refresh token to be exchanged.\n   */\n  @IsString()\n  @IsOptional()\n  token: string;\n}\n\n/**\n * Data transfer object for JWT tokens.\n * Contains access and refresh tokens along with their expiration dates and user information.\n */\nexport class JwtDto {\n  /**\n   * The user-data object.\n   */\n  @Expose()\n  @Type(() => UserDto)\n  user: UserDto;\n\n  /**\n   * The access token.\n   */\n  @Expose()\n  accessToken: string;\n\n  /**\n   * The refresh token.\n   */\n  @Expose()\n  refreshToken: string;\n\n  /**\n   * The expiration date of the access token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  atExp: Date;\n\n  /**\n   * The expiration date of the refresh token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  rtExp: Date;\n}\n\n/**\n * Interface representing the basic functionality for an authentication controller.\n */\nexport interface BasicAuthController {\n  /**\n   * Handles user login by validating the provided credentials, generating JWT tokens,\n   * and setting them as HTTP-only cookies.\n   * @param payload - The login credentials, including username, password, and optional captcha data.\n   * @param request - The incoming HTTP request object.\n   * @param response - The HTTP response object where cookies will be set.\n   * @returns A promise that resolves to a JWT data transfer object containing access and refresh tokens.\n   */\n  login(\n    payload: LoginPayload,\n    request: Request,\n    response: Response,\n  ): Promise;\n\n  /**\n   * Logs out the user by invalidating the provided access token and clearing related cookies.\n   * @param token - The JWT access token that needs to be invalidated.\n   * @param response - The HTTP response object where cookies will be cleared.\n   * @returns A promise that resolves to an object indicating the result of the logout operation.\n   */\n  logout(token: string, response: Response): Promise;\n\n  /**\n   * Exchanges a refresh token for a new set of access and refresh tokens.\n   * The new tokens are set as HTTP-only cookies.\n   * @param payload - The payload containing the refresh token to be exchanged.\n   * @param request - The incoming HTTP request object.\n   * @param response - The HTTP response object where new cookies will be set.\n   * @returns A promise that resolves to a partial JWT data transfer object containing the new tokens.\n   */\n  exchange(\n    payload: ExchangeTokenPayload,\n    request: Request,\n    response: Response,\n  ): Promise>;\n}\n\n/**\n * Options for configuring the authentication module.\n * @property service - The authentication service class.\n */\nexport type AuthModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerAction.html":{"url":"interfaces/ExplorerAction.html","title":"interface - ExplorerAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an action in an explorer target entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            params\n                                        \n                                \n                                \n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         Explorer.Variation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Explorer.Variation\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface BasicExplorerController {\n  getTargetList(): Promise;\n\n  saveTarget(target: ExplorerTarget): Promise;\n\n  getTarget(\n    target: string,\n    type: \"section\" | \"object\",\n    user: User,\n  ): Promise;\n\n  getEntity(target: string, id: string, user: User): Promise;\n\n  getEntityList(\n    target: string,\n    params: PageableParams,\n    user: User,\n  ): Promise>;\n\n  saveEntity(target: string, body: T, user: User): Promise;\n\n  removeEntity(target: string, id: string, user: User): Promise;\n}\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n  controller?: Class;\n  saveHandlers?: Class[];\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerActionEntity.html":{"url":"entities/ExplorerActionEntity.html","title":"entity - ExplorerActionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerActionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-action.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the available actions on the entities of the system, both in the lists and in the detailed editing pages\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                params\n                            \n                            \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Explorer.Variation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({type: 'enum', enum: undefined, default: undefined, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerAction } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { Explorer } from \"../explorer.constants\";\nimport { SimpleJsonTransformer } from \"../../../shared/transformers/simple-json.transformer\";\n\n/**\n * The entity stores the available actions on the entities of the system, both in the lists and in the detailed editing pages\n */\n@Entity(\"explorer_actions\")\nexport class ExplorerActionEntity implements ExplorerAction {\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @Index()\n  @Column({\n    type: \"enum\",\n    enum: [\"section\", \"object\"],\n    default: null,\n    nullable: true,\n  })\n  type: Explorer.Variation;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    nullable: true,\n    default: null,\n  })\n  params: object;\n  @Index()\n  @Column(\"int\", { default: 0, unsigned: true })\n  priority: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerColumn.html":{"url":"interfaces/ExplorerColumn.html","title":"interface - ExplorerColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a column in an explorer target entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            multiple\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            named\n                                        \n                                \n                                \n                                        \n                                            objectEnabled\n                                        \n                                \n                                \n                                        \n                                            objectPriority\n                                        \n                                \n                                \n                                        \n                                            objectRenderer\n                                        \n                                \n                                \n                                        \n                                            objectVisibility\n                                        \n                                \n                                \n                                        \n                                            primary\n                                        \n                                \n                                \n                                        \n                                            property\n                                        \n                                \n                                \n                                        \n                                            referencedEntityName\n                                        \n                                \n                                \n                                        \n                                            referencedTableName\n                                        \n                                \n                                \n                                        \n                                            sectionEnabled\n                                        \n                                \n                                \n                                        \n                                            sectionPriority\n                                        \n                                \n                                \n                                        \n                                            sectionRenderer\n                                        \n                                \n                                \n                                        \n                                            sectionVisibility\n                                        \n                                \n                                \n                                        \n                                            tab\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            unique\n                                        \n                                \n                                \n                                        \n                                            virtual\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multiple\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multiple:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        named\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        named:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectEnabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectPriority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectPriority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectRenderer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectRenderer:         ExplorerColumnRenderer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumnRenderer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectVisibility\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectVisibility:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primary:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        referencedEntityName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        referencedEntityName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        referencedTableName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        referencedTableName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionEnabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionPriority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionPriority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionRenderer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionRenderer:         ExplorerColumnRenderer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumnRenderer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionVisibility\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionVisibility:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tab:         ExplorerTab\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerTab\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         ExplorerTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ColumnDataType | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColumnDataType | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unique\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unique:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        virtual\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        virtual:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface BasicExplorerController {\n  getTargetList(): Promise;\n\n  saveTarget(target: ExplorerTarget): Promise;\n\n  getTarget(\n    target: string,\n    type: \"section\" | \"object\",\n    user: User,\n  ): Promise;\n\n  getEntity(target: string, id: string, user: User): Promise;\n\n  getEntityList(\n    target: string,\n    params: PageableParams,\n    user: User,\n  ): Promise>;\n\n  saveEntity(target: string, body: T, user: User): Promise;\n\n  removeEntity(target: string, id: string, user: User): Promise;\n}\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n  controller?: Class;\n  saveHandlers?: Class[];\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerColumnEntity.html":{"url":"entities/ExplorerColumnEntity.html","title":"entity - ExplorerColumnEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerColumnEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-column.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the metadata of the field (columns in the database table)\nand stores the display configuration in lists and detailed pages\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                multiple\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                named\n                            \n                            \n                                    \n                                    \n                                objectEnabled\n                            \n                            \n                                    \n                                    \n                                objectPriority\n                            \n                            \n                                    \n                                    \n                                objectRenderer\n                            \n                            \n                                    \n                                objectRendererParams\n                            \n                            \n                                    \n                                    \n                                objectVisibility\n                            \n                            \n                                    \n                                    \n                                primary\n                            \n                            \n                                    \n                                    \n                                property\n                            \n                            \n                                    \n                                    \n                                referencedEntityName\n                            \n                            \n                                    \n                                    \n                                referencedTableName\n                            \n                            \n                                    \n                                    \n                                sectionEnabled\n                            \n                            \n                                    \n                                    \n                                sectionPriority\n                            \n                            \n                                    \n                                    \n                                sectionRenderer\n                            \n                            \n                                    \n                                sectionRendererParams\n                            \n                            \n                                    \n                                    \n                                sectionVisibility\n                            \n                            \n                                    \n                                tab\n                            \n                            \n                                    \n                                target\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                unique\n                            \n                            \n                                    \n                                    \n                                virtual\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        multiple\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        named\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'object_enabled', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectPriority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'object_priority', default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectRenderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerColumnRendererEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectRendererParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, name: 'object_renderer_params', nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectVisibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'object_visibility', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        primary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        property\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        referencedEntityName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'referenced_entity_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        referencedTableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'referenced_table_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sectionEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'section_enabled', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sectionPriority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'section_priority', default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sectionRenderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerColumnRendererEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sectionRendererParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, name: 'section_renderer_params', nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sectionVisibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'section_visibility', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerTabEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerTargetEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.target)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        unique\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        virtual\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:63\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerTargetEntity } from \"./explorer-target.entity\";\nimport { ExplorerColumn } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { ExplorerColumnRendererEntity } from \"./explorer-column-renderer.entity\";\nimport { SimpleJsonTransformer } from \"../../../shared/transformers/simple-json.transformer\";\nimport { ExplorerTabEntity } from \"./explorer-tab.entity\";\n\n/**\n * The entity stores the metadata of the field (columns in the database table)\n * and stores the display configuration in lists and detailed pages\n */\n@Entity(\"explorer_columns\")\nexport class ExplorerColumnEntity implements ExplorerColumn {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  id: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  property: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @ManyToOne(() => ExplorerTargetEntity, (t) => t.target)\n  target: ExplorerTargetEntity;\n\n  @Column(\"text\", { nullable: false })\n  type: string;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  virtual: boolean;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  primary: boolean;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  unique: boolean;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  multiple: boolean;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  named: boolean;\n\n  @Index()\n  @Column(\"varchar\", { name: \"referenced_entity_name\", nullable: true })\n  referencedEntityName: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"referenced_table_name\", nullable: true })\n  referencedTableName: string;\n\n  @Index()\n  @Column(\"int\", { name: \"section_priority\", default: 0, unsigned: true })\n  sectionPriority: number;\n\n  @Index()\n  @Column(\"int\", { name: \"object_priority\", default: 0, unsigned: true })\n  objectPriority: number;\n\n  @Index()\n  @Column(\"boolean\", { name: \"section_enabled\", default: true })\n  sectionEnabled: boolean;\n\n  @Index()\n  @Column(\"boolean\", { name: \"object_enabled\", default: true })\n  objectEnabled: boolean;\n\n  @Index()\n  @Column(\"boolean\", { name: \"section_visibility\", default: true })\n  sectionVisibility: boolean;\n\n  @Index()\n  @Column(\"boolean\", { name: \"object_visibility\", default: true })\n  objectVisibility: boolean;\n\n  @Index()\n  @ManyToOne(() => ExplorerColumnRendererEntity, (t) => t.code)\n  sectionRenderer: ExplorerColumnRendererEntity;\n\n  @Index()\n  @ManyToOne(() => ExplorerColumnRendererEntity, (t) => t.code)\n  objectRenderer: ExplorerColumnRendererEntity;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    name: \"section_renderer_params\",\n    nullable: true,\n    default: null,\n  })\n  sectionRendererParams: object;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    name: \"object_renderer_params\",\n    nullable: true,\n    default: null,\n  })\n  objectRendererParams: object;\n\n  @ManyToOne(() => ExplorerTabEntity, (t) => t.id)\n  tab: ExplorerTabEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerColumnRenderer.html":{"url":"interfaces/ExplorerColumnRenderer.html","title":"interface - ExplorerColumnRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerColumnRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a renderer for an explorer column.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            params\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         Explorer.Variation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Explorer.Variation\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface BasicExplorerController {\n  getTargetList(): Promise;\n\n  saveTarget(target: ExplorerTarget): Promise;\n\n  getTarget(\n    target: string,\n    type: \"section\" | \"object\",\n    user: User,\n  ): Promise;\n\n  getEntity(target: string, id: string, user: User): Promise;\n\n  getEntityList(\n    target: string,\n    params: PageableParams,\n    user: User,\n  ): Promise>;\n\n  saveEntity(target: string, body: T, user: User): Promise;\n\n  removeEntity(target: string, id: string, user: User): Promise;\n}\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n  controller?: Class;\n  saveHandlers?: Class[];\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerColumnRendererEntity.html":{"url":"entities/ExplorerColumnRendererEntity.html","title":"entity - ExplorerColumnRendererEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerColumnRendererEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-column-renderer.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                An entity stores parameters for rendering the read/write interface of a specific column of a specific entity\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                params\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Explorer.Variation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({type: 'enum', enum: undefined, default: undefined, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerColumnRenderer } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { SimpleJsonTransformer } from \"../../../shared/transformers/simple-json.transformer\";\nimport { Explorer } from \"../explorer.constants\";\n\n/**\n * An entity stores parameters for rendering the read/write interface of a specific column of a specific entity\n */\n@Entity(\"explorer_column_renderers\")\nexport class ExplorerColumnRendererEntity implements ExplorerColumnRenderer {\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @Index()\n  @Column({\n    type: \"enum\",\n    enum: [\"section\", \"object\"],\n    default: null,\n    nullable: true,\n  })\n  type: Explorer.Variation;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    nullable: true,\n    default: null,\n  })\n  params: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ExplorerController.html":{"url":"controllers/ExplorerController.html","title":"controller - ExplorerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ExplorerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /explorer\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getEntity\n                            \n                            \n                                    \n                                    Async\n                                getEntityList\n                            \n                            \n                                    \n                                    Async\n                                getTarget\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getTargetList\n                            \n                            \n                                    \n                                    Async\n                                removeEntity\n                            \n                            \n                                    \n                                    Async\n                                saveEntity\n                            \n                            \n                                    \n                                    \n                                    Async\n                                saveTarget\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(target: string, id: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/entity/:target')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.controller.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getEntityList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntityList(target: string, params: PageableParams, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/pageable/:target')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.controller.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                            PageableParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getTarget\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTarget(target: string, type: \"section\" | \"object\", user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/target/:target')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                        \"section\" | \"object\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getTargetList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTargetList()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/target-list')@ForRoles(Roles.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        removeEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeEntity(target: string, id: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/entity/:target')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.controller.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        saveEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveEntity(target: string, body: T, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/entity/:target')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.controller.ts:124\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        saveTarget\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveTarget(target: ExplorerTarget)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/target')@ForRoles(Roles.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            ExplorerTarget\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  NotFoundException,\n  Param,\n  Post,\n  Query,\n  UseGuards,\n} from \"@nestjs/common\";\nimport { AuthGuard } from \"../../shared/guards/auth.guard\";\nimport { RolesGuard } from \"../../shared/guards/roles.guard\";\nimport {\n  BasicExplorerController,\n  ExplorerService,\n  ExplorerTarget,\n  ExplorerTargetParams,\n  TargetData,\n} from \"./explorer.types\";\nimport { ForRoles } from \"../../shared/decorators/for-roles.decorator\";\nimport { Roles } from \"../../shared/constants\";\nimport { ObjectLiteral } from \"typeorm\";\nimport { CurrentUser } from \"../../shared/decorators/current-user.decorator\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n@Controller(\"/explorer\")\n@UseGuards(AuthGuard, RolesGuard)\nexport class ExplorerController implements BasicExplorerController {\n  constructor(private readonly explorerService: ExplorerService) {}\n\n  @Get(\"/target-list\")\n  @ForRoles(Roles.ADMIN)\n  async getTargetList(): Promise {\n    return await this.explorerService.getTargetList();\n  }\n\n  @Post(\"/target\")\n  @ForRoles(Roles.ADMIN)\n  async saveTarget(@Body() target: ExplorerTarget): Promise {\n    return await this.explorerService.changeTarget(target);\n  }\n\n  @Get(\"/target/:target\")\n  async getTarget(\n    @Param(\"target\") target: string,\n    @Query(\"type\") type: \"section\" | \"object\",\n    @CurrentUser() user: User,\n  ): Promise {\n    const targetParams: ExplorerTargetParams = {\n      section: type === \"section\",\n      object: type === \"object\",\n      fullRelations: true,\n      readRequest: true,\n      checkUserAccess: user,\n    };\n    const res = await this.explorerService.getTargetData(target, targetParams);\n    if (!res) {\n      throw new NotFoundException();\n    }\n    return res;\n  }\n\n  @Get(\"/entity/:target\")\n  async getEntity(\n    @Param(\"target\") target: string,\n    @Query(\"id\") id: string,\n    @CurrentUser() user: User,\n  ): Promise {\n    const targetParams: ExplorerTargetParams = {\n      readRequest: true,\n      checkUserAccess: user,\n    };\n    const res = await this.explorerService.getEntityData(\n      target,\n      id,\n      undefined,\n      targetParams,\n    );\n    if (!res) {\n      throw new NotFoundException();\n    }\n    return res;\n  }\n\n  @Get(\"/pageable/:target\")\n  async getEntityList(\n    @Param(\"target\") target: string,\n    @Query() params: PageableParams,\n    @CurrentUser() user: User,\n  ): Promise> {\n    const targetParams: ExplorerTargetParams = {\n      readRequest: true,\n      checkUserAccess: user,\n    };\n    return await this.explorerService.getPageableEntityData(\n      target,\n      params,\n      targetParams,\n    );\n  }\n\n  @Post(\"/entity/:target\")\n  async saveEntity(\n    @Param(\"target\") target: string,\n    @Body() body: T,\n    @CurrentUser() user: User,\n  ): Promise {\n    const targetParams: ExplorerTargetParams = {\n      writeRequest: true,\n      checkUserAccess: user,\n    };\n    return await this.explorerService.saveEntityData(\n      target,\n      body,\n      targetParams,\n    );\n  }\n\n  @Delete(\"/entity/:target\")\n  async removeEntity(\n    @Param(\"target\") target: string,\n    @Query(\"id\") id: string,\n    @CurrentUser() user: User,\n  ): Promise {\n    const targetParams: ExplorerTargetParams = {\n      writeRequest: true,\n      checkUserAccess: user,\n    };\n    return await this.explorerService.removeEntity(target, id, targetParams);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExplorerModule.html":{"url":"modules/ExplorerModule.html","title":"module - ExplorerModule","body":"\n                   \n\n\n\n\n    Modules\n    ExplorerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/explorer/explorer.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for exploring and analyzing the database schema and relationships.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.module.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      service: BasicExplorerService,\n      controller: ExplorerController,\n      saveHandlers: [],\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.module.ts:83\n                        \n                    \n\n\n            \n                \n                        Initializes the module and analyzes the database.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module, OnModuleInit } from \"@nestjs/common\";\nimport { BasicExplorerService } from \"./basic-explorer.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { ExplorerTargetEntity } from \"./entity/explorer-target.entity\";\nimport { ExplorerColumnEntity } from \"./entity/explorer-column.entity\";\nimport { ExplorerModuleOptions, ExplorerService } from \"./explorer.types\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { ExplorerController } from \"./explorer.controller\";\nimport { UserModule } from \"../user/user.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { Explorer } from \"./explorer.constants\";\nimport { Provider } from \"@nestjs/common/interfaces/modules/provider.interface\";\nimport { Type } from \"@nestjs/common/interfaces/type.interface\";\n\n/**\n * Module for exploring and analyzing the database schema and relationships.\n */\n@Module({})\nexport class ExplorerModule implements OnModuleInit {\n  static forRoot(\n    options: Partial = {\n      service: BasicExplorerService,\n      controller: ExplorerController,\n      saveHandlers: [],\n    },\n  ): DynamicModule {\n    if (!options.service) {\n      options.service = BasicExplorerService;\n    }\n    if (!options.controller) {\n      options.controller = ExplorerController;\n    }\n    const providers: Provider[] = [\n      {\n        provide: ExplorerService,\n        useClass: options.service,\n      },\n    ];\n    if (options.saveHandlers.length) {\n      const providerWithHandlers = Explorer.provideSaveHandlers(\n        options.saveHandlers,\n      );\n      options.saveHandlers.forEach((h) => {\n        providers.push(h as Type);\n      });\n      providers.push(providerWithHandlers);\n    }\n    return {\n      module: ExplorerModule,\n      controllers: [options.controller],\n      imports: [\n        TypeOrmModule.forFeature([ExplorerTargetEntity, ExplorerColumnEntity]),\n        LogModule,\n        UserModule.forRoot(),\n        CacheModule,\n      ],\n      providers: providers,\n      exports: [ExplorerService],\n    };\n  }\n\n  constructor(private readonly service: ExplorerService) {}\n\n  /**\n   * Initializes the module and analyzes the database.\n   */\n  async onModuleInit() {\n    await this.service.analyzeDatabase();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExplorerService.html":{"url":"classes/ExplorerService.html","title":"class - ExplorerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExplorerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing an explorer service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                analyzeDatabase\n                            \n                            \n                                    Abstract\n                                changeTarget\n                            \n                            \n                                    Abstract\n                                getEntityData\n                            \n                            \n                                    Abstract\n                                getPageableEntityData\n                            \n                            \n                                    Abstract\n                                getTargetData\n                            \n                            \n                                    Abstract\n                                getTargetList\n                            \n                            \n                                    Abstract\n                                removeEntity\n                            \n                            \n                                    Abstract\n                                saveEntityData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        analyzeDatabase\n                        \n                    \n                \n            \n            \n                \n                        \n                    analyzeDatabase()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:202\n                        \n                    \n\n\n            \n                \n                        Analyzes the database schema and relationships.\nFill data for explorer tables based on that analysis.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        changeTarget\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeTarget(target: ExplorerTarget)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:280\n                        \n                    \n\n\n            \n                \n                        Changes the target data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            ExplorerTarget\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the target entity.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the changed target entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getEntityData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntityData(target: string, rowId: string | number, maxDepth?: number, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:251\n                        \n                    \n\n\n            \n                \n                        Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe target entity name.\n\n\n                                            \n                                        \n                                        \n                                                rowId\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the row to fetch.\n\n\n                                            \n                                        \n                                        \n                                                maxDepth\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nThe maximum depth of relations to fetch. Defaults to Infinity.\n\n\n                                            \n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nParameters to fetch and check entity access.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the entity object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getPageableEntityData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPageableEntityData(target: string, params?: PageableParams, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:211\n                        \n                    \n\n\n            \n                \n                        Retrieves paginated entity data with relations.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the target entity or table.\n\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            PageableParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nAn optional object containing pageable parameters.\n\n\n                                            \n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nParameters to fetch and check entity access.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to a PageableData object containing the paginated results.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getTargetData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTargetData(target: string, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:264\n                        \n                    \n\n\n            \n                \n                        Retrieves target data for the specified target entity name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe target entity name.\n\n\n                                            \n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nParameters to fetch and check entity access.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the TargetData object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getTargetList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTargetList()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:273\n                        \n                    \n\n\n            \n                \n                        Retrieves a list of all registered targets with their item counts.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to an array of ExplorerTarget objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        removeEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeEntity(target: string, id: string | number, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:237\n                        \n                    \n\n\n            \n                \n                        Removes an entity by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the entity-target.\n\n\n                                            \n                                        \n                                        \n                                                id\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the entity to be removed.\n\n\n                                            \n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nParameters to fetch and check entity access.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the removed entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        saveEntityData\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveEntityData(target: string, entity: T, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:224\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Saves or updates an entity, including its nested entities.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the target entity.\n\n\n                                            \n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe entity object to be saved or updated.\n\n\n                                            \n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nParameters to fetch and check entity access.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the saved or updated entity.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface BasicExplorerController {\n  getTargetList(): Promise;\n\n  saveTarget(target: ExplorerTarget): Promise;\n\n  getTarget(\n    target: string,\n    type: \"section\" | \"object\",\n    user: User,\n  ): Promise;\n\n  getEntity(target: string, id: string, user: User): Promise;\n\n  getEntityList(\n    target: string,\n    params: PageableParams,\n    user: User,\n  ): Promise>;\n\n  saveEntity(target: string, body: T, user: User): Promise;\n\n  removeEntity(target: string, id: string, user: User): Promise;\n}\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n  controller?: Class;\n  saveHandlers?: Class[];\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerTab.html":{"url":"interfaces/ExplorerTab.html","title":"interface - ExplorerTab","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerTab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a tab in an explorer target entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         ExplorerTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface BasicExplorerController {\n  getTargetList(): Promise;\n\n  saveTarget(target: ExplorerTarget): Promise;\n\n  getTarget(\n    target: string,\n    type: \"section\" | \"object\",\n    user: User,\n  ): Promise;\n\n  getEntity(target: string, id: string, user: User): Promise;\n\n  getEntityList(\n    target: string,\n    params: PageableParams,\n    user: User,\n  ): Promise>;\n\n  saveEntity(target: string, body: T, user: User): Promise;\n\n  removeEntity(target: string, id: string, user: User): Promise;\n}\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n  controller?: Class;\n  saveHandlers?: Class[];\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerTabEntity.html":{"url":"entities/ExplorerTabEntity.html","title":"entity - ExplorerTabEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerTabEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-tab.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the tabbed display parameters in the entity editing interface.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerTargetEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.target)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:56\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerTab } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { SimpleJsonTransformer } from \"../../../shared/transformers/simple-json.transformer\";\nimport { ExplorerTargetEntity } from \"./explorer-target.entity\";\n\n/**\n * The entity stores the tabbed display parameters in the entity editing interface.\n */\n@Entity(\"explorer_tabs\")\nexport class ExplorerTabEntity implements ExplorerTab {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  id: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @Index()\n  @Column(\"int\", { default: 0, unsigned: true })\n  priority: number;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    nullable: true,\n    default: null,\n  })\n  size: object;\n\n  @ManyToOne(() => ExplorerTargetEntity, (t) => t.target)\n  target: ExplorerTargetEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerTarget.html":{"url":"interfaces/ExplorerTarget.html","title":"interface - ExplorerTarget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerTarget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an explorer target entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actions\n                                        \n                                \n                                \n                                        \n                                            canRead\n                                        \n                                \n                                \n                                        \n                                            canWrite\n                                        \n                                \n                                \n                                        \n                                            columns\n                                        \n                                \n                                \n                                        \n                                            defaultActionCreate\n                                        \n                                \n                                \n                                        \n                                            defaultActionDelete\n                                        \n                                \n                                \n                                        \n                                            defaultActionDuplicate\n                                        \n                                \n                                \n                                        \n                                            defaultActionSave\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            tableName\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actions:         ExplorerAction[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerAction[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canRead\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canRead:         UserRoleEntity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRoleEntity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canWrite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canWrite:         UserRoleEntity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRoleEntity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        columns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columns:         ExplorerColumn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumn[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultActionCreate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultActionCreate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultActionDelete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultActionDelete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultActionDuplicate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultActionDuplicate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultActionSave\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultActionSave:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tableName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tableName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface BasicExplorerController {\n  getTargetList(): Promise;\n\n  saveTarget(target: ExplorerTarget): Promise;\n\n  getTarget(\n    target: string,\n    type: \"section\" | \"object\",\n    user: User,\n  ): Promise;\n\n  getEntity(target: string, id: string, user: User): Promise;\n\n  getEntityList(\n    target: string,\n    params: PageableParams,\n    user: User,\n  ): Promise>;\n\n  saveEntity(target: string, body: T, user: User): Promise;\n\n  removeEntity(target: string, id: string, user: User): Promise;\n}\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n  controller?: Class;\n  saveHandlers?: Class[];\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerTargetEntity.html":{"url":"entities/ExplorerTargetEntity.html","title":"entity - ExplorerTargetEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerTargetEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-target.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores a detailed description of the entity (tables in the database) in the form of an object\nwith metadata and stores the display configuration in lists and detailed pages\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                actions\n                            \n                            \n                                    \n                                    \n                                alias\n                            \n                            \n                                    \n                                    \n                                canRead\n                            \n                            \n                                    \n                                    \n                                canWrite\n                            \n                            \n                                    \n                                columns\n                            \n                            \n                                    \n                                    \n                                defaultActionCreate\n                            \n                            \n                                    \n                                    \n                                defaultActionDelete\n                            \n                            \n                                    \n                                    \n                                defaultActionDuplicate\n                            \n                            \n                                    \n                                    \n                                defaultActionSave\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                tableName\n                            \n                            \n                                    \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerAction[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        alias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        canRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        canWrite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerColumnEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, c => c.target, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defaultActionCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'default_action_create', default: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defaultActionDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'default_action_delete', default: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defaultActionDuplicate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'default_action_duplicate', default: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defaultActionSave\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'default_action_save', default: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {name: 'table_name', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerColumnEntity } from \"./explorer-column.entity\";\nimport { ExplorerAction, ExplorerTarget } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { MediaEntity } from \"../../media/entity/media.entity\";\nimport { ExplorerActionEntity } from \"./explorer-action.entity\";\nimport { UserRoleEntity } from \"../../user/entity/user-role.entity\";\n\n/**\n * The entity stores a detailed description of the entity (tables in the database) in the form of an object\n * with metadata and stores the display configuration in lists and detailed pages\n */\n@Entity(\"explorer_targets\")\nexport class ExplorerTargetEntity implements ExplorerTarget {\n  @PrimaryColumn(\"varchar\")\n  target: string;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { name: \"table_name\", nullable: false })\n  tableName: string;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  alias: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  icon: MediaEntity;\n\n  @OneToMany(() => ExplorerColumnEntity, (c) => c.target, { cascade: true })\n  columns: ExplorerColumnEntity[];\n\n  @ManyToMany(() => ExplorerActionEntity)\n  @JoinTable()\n  actions: ExplorerAction[];\n\n  @Index()\n  @Column(\"boolean\", {\n    name: \"default_action_create\",\n    default: true,\n    nullable: true,\n  })\n  defaultActionCreate: boolean;\n\n  @Index()\n  @Column(\"boolean\", {\n    name: \"default_action_save\",\n    default: true,\n    nullable: true,\n  })\n  defaultActionSave: boolean;\n\n  @Index()\n  @Column(\"boolean\", {\n    name: \"default_action_delete\",\n    default: true,\n    nullable: true,\n  })\n  defaultActionDelete: boolean;\n\n  @Index()\n  @Column(\"boolean\", {\n    name: \"default_action_duplicate\",\n    default: true,\n    nullable: true,\n  })\n  defaultActionDuplicate: boolean;\n\n  @ManyToMany(() => UserRoleEntity)\n  @JoinTable()\n  canRead: UserRoleEntity[];\n\n  @ManyToMany(() => UserRoleEntity)\n  @JoinTable()\n  canWrite: UserRoleEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/File.html":{"url":"interfaces/File.html","title":"interface - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a file.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            preview\n                                        \n                                \n                                \n                                        \n                                            public\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains a unique character identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field stores the icon of the file\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the identification number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         FileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains a reference to the FileMetadata container\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the name of the file\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field stores the path to the file on the server\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preview\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preview:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field stores the media preview of the file\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        public\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        public:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field specifies the type of access to the file, public or private\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field stores the size of the file in bytes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the date the file was created\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  /** This field contains the identification number */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file */\n  name: string;\n  /** This field stores the path to the file on the server */\n  path: string;\n  /** This field specifies the type of access to the file, public or private */\n  public: boolean;\n  /** This field stores the size of the file in bytes */\n  size: number;\n  /** This field stores the icon of the file */\n  icon: Media;\n  /** This field stores the media preview of the file  */\n  preview: Media;\n  /** This field contains a reference to the FileMetadata container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The MIME type of the file, indicating the nature and format of the file content */\n  mime: string;\n  /** The file extension, indicating the file format */\n  ext: string;\n  /** The cryptographic hash of the file content, used for integrity verification and identification */\n  hash: string;\n  /** The ICC (International Color Consortium) profile data associated with the file, used for color management */\n  icc: IccFileMetadata;\n  /** GPS data associated with the location where the file was created, including latitude, longitude and elevation */\n  gps: GpsFileMetadata;\n  /** This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics */\n  image: ImageFileMetadata;\n  /** This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created */\n  exif: ExifFileMetadata;\n  /** This field is used to store information about the structure and properties of the audio file */\n  audio: AudioFileMetadata;\n  /** This field is used to store information about the structure and properties of the video recording*/\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The number of bits used to represent the color of a single pixel in the image */\n  bps: number;\n  /** The width of the image in pixels */\n  width: number;\n  /** The height of the image in pixels */\n  height: number;\n  /** The number of color components used to represent the color of the image */\n  colorComponents: number;\n  /** The subsampling method used for the image, indicating how color information is sampled */\n  subsampling: string;\n  /** The date and time when the image was created or last modified */\n  dateTime: Date;\n  /** The bit depth of the image, indicating the number of bits used for color representation */\n  bitDepth: number;\n  /** The color type of the image, indicating the color model used */\n  colorType: string;\n  /** Contains the compression method used to reduce the size of the image */\n  compression: string;\n  /** Specifies the filtering method used to process the image data before compressing it */\n  filter: string;\n  /**  Indicates whether interlacing is used in the image, allowing for progressive display */\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The version of the ICC profile, indicating the specification version used to create the color profile. */\n  profileVersion: string;\n  /** The class of the ICC profile, indicating its primary purpose and type */\n  profileClassValue: string;\n  /** The name of the ICC profile class, describing its primary purpose */\n  profileClassName: string;\n  /** The connection space of the ICC profile, representing the intermediate color space used for color conversions. */\n  connectionSpace: string;\n  /** The date and time when the ICC profile was created or last modified */\n  iccProfileDate: Date;\n  /** A unique signature of the ICC profile used to confirm its authenticity and validity */\n  iccSignature: string;\n  /** The primary platform or operating system for which the ICC profile was created or optimized */\n  primaryPlatform: string;\n  /** The manufacturer of the device for which the ICC profile was created */\n  deviceManufacturer: string;\n  /** The model number of the device for which the ICC profile was created */\n  deviceModelNumber: string;\n  /**  Indicates the type of rendering to be used when converting colors between color spaces */\n  renderingIntentValue: string;\n  /** Specifies the name of the rendering type that is used when converting colors between color spaces */\n  renderingIntentName: string;\n  /** The name or identifier of the creator of the ICC profile */\n  profileCreator: string;\n  /** A description of the ICC profile, explaining its purpose and characteristics */\n  iccDescription: string;\n  /** The copyright information for the ICC profile, indicating ownership and usage rights */\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** This field specifies the manufacturer of the camera */\n  make: string;\n  /** This field specifies the model of the camera  */\n  model: string;\n  /** Indicates image display orientation based on EXIF metadata */\n  orientation: string;\n  /** X-side resolution of the photo*/\n  resolutionX: string;\n  /** Y-side resolution of the photo*/\n  resolutionY: string;\n  /** Unit of image resolution */\n  resolutionUnit: string;\n  /** The field contains information about the software that was used to create or edit the image */\n  software: string;\n  /** This field is responsible for specifying the method of placing these color components Y, Cb and Cr relative to the image pixels */\n  ycbCrPositioning: string;\n  /** Pointer to the beginning of an EXIF IFD block in a file inside a TIFF file */\n  exifIfdPointer: string;\n  /** Contains information about the location where the image was taken */\n  gpsInfoIfdPointer: string;\n  /** Exposure time (shutter speed) when capturing an image */\n  exposureTime: string;\n  /** Contains data on the aperture number (aperture) when capturing an image */\n  fNumber: string;\n  /** Contains data on the exposure mode (shutter speed and aperture) used to capture the image */\n  exposureProgram: string;\n  /** Contains data on the ISO value (the sensitivity of the camera sensor to light) */\n  isoSpeedRatings: string;\n  /** Contains EXIF specification version data */\n  exifVersion: string;\n  /** Contains time offset data relative to UTC (Coordinated Universal Time) for the date and time when the image was taken */\n  offsetTime: string;\n  /** Contains data on the shutter speed of the camera */\n  shutterSpeedValue: string;\n  /** Contains data on the aperture (aperture) value used to capture the image */\n  aperture: string;\n  /** Contains data on the brightness level of the image */\n  brightness: string;\n  /** Contains exposure compensation data  */\n  exposureBias: string;\n  /** Contains data on the maximum aperture (aperture) value  */\n  maxAperture: string;\n  /** Contains data on the distance to the subject in millimeters */\n  subjectDistance: string;\n  /** Contains data on the light sensing mode used by the camera when capturing an image */\n  meteringMode: string;\n  /** Contains data on the status and operation of the flash during image capture */\n  flash: string;\n  /** Contains data about the focal length of the camera lens */\n  focalLength: string;\n  /** The Flashpix format version used for the image */\n  flashpixVersion: string;\n  /** The color space of the image data */\n  colorSpace: string;\n  /** Width (horizontal resolution) of the image in pixels */\n  pixelXDimension: string;\n  /** Contains data about the vertical resolution (height) of the image in pixels */\n  pixelYDimension: string;\n  /** Pointer to the start of the Interoperability IFD block for compatibility metadata */\n  interoperabilityIfdPointer: string;\n  /** Indicates the method used by the camera sensor to capture the image */\n  sensingMethod: string;\n  /** The type of scene captured in the image, indicating if it was taken with a digital camera */\n  sceneType: string;\n  /** Indicates whether the image was processed with custom rendering */\n  customRendered: string;\n  /** The exposure mode used by the camera during the shot */\n  exposureMode: string;\n  /** The white balance setting used during the shot */\n  whiteBalance: string;\n  /** The digital zoom ratio applied during the shot */\n  digitalZoomRatio: string;\n  /** The type of scene capture mode used during the shot */\n  sceneCaptureType: string;\n  /** The level of contrast applied to the image */\n  contrast: string;\n  /** The level of color saturation applied to the image */\n  saturation: string;\n  /** The level of sharpness applied to the image */\n  sharpness: string;\n  /** The distance range to the subject during the shot */\n  subjectDistanceRange: string;\n  /** The manufacturer of the lens used to capture the image */\n  lensMake: string;\n  /** The model of the lens used to capture the image */\n  lensModel: string;\n  /** Indicates whether the image is a composite, created by combining multiple images or applying effects */\n  compositeImage: string;\n  /** The interoperability index indicating the standard used for ensuring image compatibility */\n  interoperabilityIndex: string;\n  /** The version of the interoperability standard used for the image */\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  /** Representing identifier of meta-data object */\n  id: number;\n  /** Representing gps-latitude parameter */\n  latitude: number;\n  /** Representing gps-longitude parameter */\n  longitude: number;\n  /** Representing gps-altitude parameter */\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** A codec ( algorithm or method ) used to compress and decompress a video file */\n  codec: string;\n  /** The container format of the video file, indicating how video, audio, and other data streams are packaged together */\n  container: string;\n  /** The width of the video in pixels */\n  width: number;\n  /** The height of the video in pixels */\n  height: number;\n  /**  The bitrate of the video file, indicating the amount of data processed per second */\n  bitrate: number;\n  /** The duration of the video file in seconds */\n  duration: number;\n  /** A sample video aspect ratio indicating how pixels are distributed in a video stream */\n  sampleAspectRatio: string;\n  /** The display aspect ratio of the video, indicating the ratio of width to height for playback.*/\n  displayAspectRatio: string;\n  /** Video color range, indicating the set of colors used in the video file */\n  colorRange: string;\n  /** The color space of the video, indicating how colors are represented and interpreted */\n  colorSpace: string;\n  /** The frame rate of the video, indicating the number of frames displayed per second */\n  frameRate: string;\n  /** The rotation angle of the video in degrees, indicating its orientation */\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The format of the audio file container, which encapsulates audio streams and metadata */\n  container: string;\n  /** The audio codec used for encoding or decoding the audio data */\n  codec: string;\n  /** The sample rate of the audio file, indicating the number of samples per second */\n  sampleRate: number;\n  /**  The number of audio channels in the file, indicating the sound configuration (e.g., mono, stereo) */\n  numberOfChannels: number;\n  /**  The bitrate of the audio file, indicating the amount of data processed per second. */\n  bitrate: number;\n  /** The codec profile used for encoding the audio data, indicating specific settings and capabilities */\n  codecProfile: string;\n  /** The tool or software used to encode or process the audio file */\n  tool: string;\n  /** The duration of the audio file in seconds */\n  duration: number;\n  /** The title of the audio file or track */\n  title: string;\n  /** The name of the artist or band who performed the audio track. */\n  artist: string;\n  /** The name of the album that the audio track belongs to */\n  album: string;\n  /** The year the audio track was release */\n  year: number;\n  /** The genre of the audio track */\n  genre: string;\n  /** The music label or company that released the audio trac */\n  label: string;\n}\n\n/**\n * Interface representing the basic functionality for a file management controller.\n */\nexport interface BasicFileController {\n  /**\n   * Handles the uploading of a file, saving it to the system, and optionally marking it as public.\n   * @param file - The file to be uploaded.\n   * @param isPublic - A string indicating whether the file should be public (\"true\") or private (\"false\").\n   * @returns A promise that resolves to the saved file entity.\n   */\n  createFile(file: Express.Multer.File, isPublic: string): Promise;\n\n  /**\n   * Retrieves a private file by its ID and sends it as a response.\n   * @param res - The HTTP response object used to send the file.\n   * @param id - The ID of the file to be retrieved.\n   * @returns A promise that resolves when the file is sent.\n   */\n  getPrivateFile(res: Response, id: number): Promise;\n\n  /**\n   * Retrieves a public file by its ID.\n   * @param id - The ID of the file to be retrieved.\n   * @returns A promise that resolves to the retrieved file entity.\n   */\n  getFile(id: number): Promise;\n\n  /**\n   * Removes a file by its ID from the system.\n   * @param id - The ID of the file to be removed.\n   * @returns A promise that resolves to the removed file entity.\n   */\n  removeFile(id: number): Promise;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FileController.html":{"url":"controllers/FileController.html","title":"controller - FileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /file\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createFile\n                            \n                            \n                                    \n                                    Async\n                                getFile\n                            \n                            \n                                    \n                                    Async\n                                getPrivateFile\n                            \n                            \n                                    \n                                    Async\n                                removeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFile(file: Express.Multer.File, isPublic: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/upload')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/file/file.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                isPublic\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"true\"\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFile(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/file/file.controller.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getPrivateFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPrivateFile(res: Response, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/private/:id')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/file/file.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        removeFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeFile(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/file/file.controller.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Query,\n  Res,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from \"@nestjs/common\";\nimport { FileInterceptor } from \"@nestjs/platform-express\";\nimport { Response } from \"express\";\nimport { AuthGuard } from \"../../shared/guards/auth.guard\";\nimport { FileManager } from \"./file.constants\";\nimport { NotEmptyPipe } from \"../../shared/pipes/not-empty.pipe\";\nimport { BasicFileController, File } from \"./file.types\";\n\n@Controller(\"/file\")\n@UseGuards(AuthGuard)\nexport class FileController implements BasicFileController {\n  constructor(private readonly fileService: FileManager) {}\n\n  @Post(\"/upload\")\n  @UseInterceptors(FileInterceptor(\"file\"))\n  async createFile(\n    @UploadedFile(\"file\", new NotEmptyPipe(\"file\")) file: Express.Multer.File,\n    @Query(\"public\") isPublic = \"true\",\n  ): Promise {\n    return this.fileService.createOrUpdateFile(\n      file.buffer,\n      file.originalname.split(\".\").pop(),\n      isPublic === \"true\",\n      undefined,\n      undefined,\n      file.originalname,\n    );\n  }\n\n  @Get(\"/private/:id\")\n  async getPrivateFile(\n    @Res() res: Response,\n    @Param(\"id\") id: number,\n  ): Promise {\n    const file = await this.fileService.findPrivateById(id);\n    const filePath = await this.fileService.getFilePath(file);\n    res.sendFile(filePath);\n  }\n\n  @Get(\"/:id\")\n  async getFile(@Param(\"id\") id: number): Promise {\n    return await this.fileService.findPublicById(id);\n  }\n\n  @Delete(\"/:id\")\n  async removeFile(@Param(\"id\") id: number): Promise {\n    return await this.fileService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/FileEntity.html":{"url":"entities/FileEntity.html","title":"entity - FileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  FileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/file.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores data about uploaded files\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                path\n                            \n                            \n                                    \n                                preview\n                            \n                            \n                                    \n                                public\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        preview\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        public\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:58\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinColumn,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  TableInheritance,\n} from \"typeorm\";\nimport { File } from \"../file.types\";\nimport { MediaEntity } from \"../../media/entity/media.entity\";\nimport { FileMetadataEntity } from \"./file-metadata.entity\";\n\n/**\n * The entity stores data about uploaded files\n */\n@Entity(\"files\")\n@TableInheritance({\n  column: { type: \"varchar\", name: \"class\", nullable: true },\n})\nexport class FileEntity implements File {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @Column(\"varchar\", { nullable: true })\n  name: string;\n\n  @Column(\"varchar\", { nullable: true })\n  path: string;\n\n  @Column(\"boolean\", { default: false })\n  public: boolean;\n\n  @Column(\"int\", { nullable: true })\n  size: number;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  icon: MediaEntity;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  preview: MediaEntity;\n\n  @OneToOne(() => FileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  metadata: FileMetadataEntity;\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileManager.html":{"url":"classes/FileManager.html","title":"class - FileManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing the file management service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createOrUpdateFile\n                            \n                            \n                                    Abstract\n                                findByCode\n                            \n                            \n                                    Abstract\n                                findFileById\n                            \n                            \n                                    Abstract\n                                findPrivateById\n                            \n                            \n                                    Abstract\n                                findPublicById\n                            \n                            \n                                    Abstract\n                                getFilePath\n                            \n                            \n                                    Abstract\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createOrUpdateFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrUpdateFile(file: Buffer, extension: string, isPublic: boolean, code?: string, existedEntityId?: number, name?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extension\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isPublic\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                existedEntityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findFileById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findFileById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findPrivateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPrivateById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findPublicById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPublicById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getFilePath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFilePath(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileEntity } from \"./entity/file.entity\";\nimport { FileMetadataEntity } from \"./entity/file-metadata.entity\";\nimport { File } from \"./file.types\";\n\n/**\n * Abstract class representing the file management service.\n */\nexport abstract class FileManager {\n  abstract createOrUpdateFile(\n    file: Buffer,\n    extension: string,\n    isPublic: boolean,\n    code?: string,\n    existedEntityId?: number,\n    name?: string,\n  ): Promise;\n\n  abstract findByCode(code: string): Promise;\n\n  abstract findFileById(id: number): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract getFilePath(file: File): Promise;\n\n  abstract remove(id: number): Promise;\n}\n\n/**\n * Abstract class representing the file metadata service.\n */\nexport abstract class FileMd {\n  abstract createFileMetadataEntity(\n    buf: Buffer,\n    filePath?: string,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileMd.html":{"url":"classes/FileMd.html","title":"class - FileMd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileMd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing the file metadata service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createFileMetadataEntity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createFileMetadataEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFileMetadataEntity(buf: Buffer, filePath?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buf\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileEntity } from \"./entity/file.entity\";\nimport { FileMetadataEntity } from \"./entity/file-metadata.entity\";\nimport { File } from \"./file.types\";\n\n/**\n * Abstract class representing the file management service.\n */\nexport abstract class FileManager {\n  abstract createOrUpdateFile(\n    file: Buffer,\n    extension: string,\n    isPublic: boolean,\n    code?: string,\n    existedEntityId?: number,\n    name?: string,\n  ): Promise;\n\n  abstract findByCode(code: string): Promise;\n\n  abstract findFileById(id: number): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract getFilePath(file: File): Promise;\n\n  abstract remove(id: number): Promise;\n}\n\n/**\n * Abstract class representing the file metadata service.\n */\nexport abstract class FileMd {\n  abstract createFileMetadataEntity(\n    buf: Buffer,\n    filePath?: string,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileMetadata.html":{"url":"interfaces/FileMetadata.html","title":"interface - FileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            audio\n                                        \n                                \n                                \n                                        \n                                            exif\n                                        \n                                \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            gps\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            icc\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            video\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        audio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        audio:         AudioFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AudioFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field is used to store information about the structure and properties of the audio file\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exif\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exif:         ExifFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExifFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The file extension, indicating the file format\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gps:         GpsFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GpsFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GPS data associated with the location where the file was created, including latitude, longitude and elevation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The cryptographic hash of the file content, used for integrity verification and identification\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icc:         IccFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IccFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ICC (International Color Consortium) profile data associated with the file, used for color management\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the identification number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         ImageFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ImageFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The MIME type of the file, indicating the nature and format of the file content\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        video\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        video:         VideoFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VideoFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field is used to store information about the structure and properties of the video recording\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  /** This field contains the identification number */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file */\n  name: string;\n  /** This field stores the path to the file on the server */\n  path: string;\n  /** This field specifies the type of access to the file, public or private */\n  public: boolean;\n  /** This field stores the size of the file in bytes */\n  size: number;\n  /** This field stores the icon of the file */\n  icon: Media;\n  /** This field stores the media preview of the file  */\n  preview: Media;\n  /** This field contains a reference to the FileMetadata container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The MIME type of the file, indicating the nature and format of the file content */\n  mime: string;\n  /** The file extension, indicating the file format */\n  ext: string;\n  /** The cryptographic hash of the file content, used for integrity verification and identification */\n  hash: string;\n  /** The ICC (International Color Consortium) profile data associated with the file, used for color management */\n  icc: IccFileMetadata;\n  /** GPS data associated with the location where the file was created, including latitude, longitude and elevation */\n  gps: GpsFileMetadata;\n  /** This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics */\n  image: ImageFileMetadata;\n  /** This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created */\n  exif: ExifFileMetadata;\n  /** This field is used to store information about the structure and properties of the audio file */\n  audio: AudioFileMetadata;\n  /** This field is used to store information about the structure and properties of the video recording*/\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The number of bits used to represent the color of a single pixel in the image */\n  bps: number;\n  /** The width of the image in pixels */\n  width: number;\n  /** The height of the image in pixels */\n  height: number;\n  /** The number of color components used to represent the color of the image */\n  colorComponents: number;\n  /** The subsampling method used for the image, indicating how color information is sampled */\n  subsampling: string;\n  /** The date and time when the image was created or last modified */\n  dateTime: Date;\n  /** The bit depth of the image, indicating the number of bits used for color representation */\n  bitDepth: number;\n  /** The color type of the image, indicating the color model used */\n  colorType: string;\n  /** Contains the compression method used to reduce the size of the image */\n  compression: string;\n  /** Specifies the filtering method used to process the image data before compressing it */\n  filter: string;\n  /**  Indicates whether interlacing is used in the image, allowing for progressive display */\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The version of the ICC profile, indicating the specification version used to create the color profile. */\n  profileVersion: string;\n  /** The class of the ICC profile, indicating its primary purpose and type */\n  profileClassValue: string;\n  /** The name of the ICC profile class, describing its primary purpose */\n  profileClassName: string;\n  /** The connection space of the ICC profile, representing the intermediate color space used for color conversions. */\n  connectionSpace: string;\n  /** The date and time when the ICC profile was created or last modified */\n  iccProfileDate: Date;\n  /** A unique signature of the ICC profile used to confirm its authenticity and validity */\n  iccSignature: string;\n  /** The primary platform or operating system for which the ICC profile was created or optimized */\n  primaryPlatform: string;\n  /** The manufacturer of the device for which the ICC profile was created */\n  deviceManufacturer: string;\n  /** The model number of the device for which the ICC profile was created */\n  deviceModelNumber: string;\n  /**  Indicates the type of rendering to be used when converting colors between color spaces */\n  renderingIntentValue: string;\n  /** Specifies the name of the rendering type that is used when converting colors between color spaces */\n  renderingIntentName: string;\n  /** The name or identifier of the creator of the ICC profile */\n  profileCreator: string;\n  /** A description of the ICC profile, explaining its purpose and characteristics */\n  iccDescription: string;\n  /** The copyright information for the ICC profile, indicating ownership and usage rights */\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** This field specifies the manufacturer of the camera */\n  make: string;\n  /** This field specifies the model of the camera  */\n  model: string;\n  /** Indicates image display orientation based on EXIF metadata */\n  orientation: string;\n  /** X-side resolution of the photo*/\n  resolutionX: string;\n  /** Y-side resolution of the photo*/\n  resolutionY: string;\n  /** Unit of image resolution */\n  resolutionUnit: string;\n  /** The field contains information about the software that was used to create or edit the image */\n  software: string;\n  /** This field is responsible for specifying the method of placing these color components Y, Cb and Cr relative to the image pixels */\n  ycbCrPositioning: string;\n  /** Pointer to the beginning of an EXIF IFD block in a file inside a TIFF file */\n  exifIfdPointer: string;\n  /** Contains information about the location where the image was taken */\n  gpsInfoIfdPointer: string;\n  /** Exposure time (shutter speed) when capturing an image */\n  exposureTime: string;\n  /** Contains data on the aperture number (aperture) when capturing an image */\n  fNumber: string;\n  /** Contains data on the exposure mode (shutter speed and aperture) used to capture the image */\n  exposureProgram: string;\n  /** Contains data on the ISO value (the sensitivity of the camera sensor to light) */\n  isoSpeedRatings: string;\n  /** Contains EXIF specification version data */\n  exifVersion: string;\n  /** Contains time offset data relative to UTC (Coordinated Universal Time) for the date and time when the image was taken */\n  offsetTime: string;\n  /** Contains data on the shutter speed of the camera */\n  shutterSpeedValue: string;\n  /** Contains data on the aperture (aperture) value used to capture the image */\n  aperture: string;\n  /** Contains data on the brightness level of the image */\n  brightness: string;\n  /** Contains exposure compensation data  */\n  exposureBias: string;\n  /** Contains data on the maximum aperture (aperture) value  */\n  maxAperture: string;\n  /** Contains data on the distance to the subject in millimeters */\n  subjectDistance: string;\n  /** Contains data on the light sensing mode used by the camera when capturing an image */\n  meteringMode: string;\n  /** Contains data on the status and operation of the flash during image capture */\n  flash: string;\n  /** Contains data about the focal length of the camera lens */\n  focalLength: string;\n  /** The Flashpix format version used for the image */\n  flashpixVersion: string;\n  /** The color space of the image data */\n  colorSpace: string;\n  /** Width (horizontal resolution) of the image in pixels */\n  pixelXDimension: string;\n  /** Contains data about the vertical resolution (height) of the image in pixels */\n  pixelYDimension: string;\n  /** Pointer to the start of the Interoperability IFD block for compatibility metadata */\n  interoperabilityIfdPointer: string;\n  /** Indicates the method used by the camera sensor to capture the image */\n  sensingMethod: string;\n  /** The type of scene captured in the image, indicating if it was taken with a digital camera */\n  sceneType: string;\n  /** Indicates whether the image was processed with custom rendering */\n  customRendered: string;\n  /** The exposure mode used by the camera during the shot */\n  exposureMode: string;\n  /** The white balance setting used during the shot */\n  whiteBalance: string;\n  /** The digital zoom ratio applied during the shot */\n  digitalZoomRatio: string;\n  /** The type of scene capture mode used during the shot */\n  sceneCaptureType: string;\n  /** The level of contrast applied to the image */\n  contrast: string;\n  /** The level of color saturation applied to the image */\n  saturation: string;\n  /** The level of sharpness applied to the image */\n  sharpness: string;\n  /** The distance range to the subject during the shot */\n  subjectDistanceRange: string;\n  /** The manufacturer of the lens used to capture the image */\n  lensMake: string;\n  /** The model of the lens used to capture the image */\n  lensModel: string;\n  /** Indicates whether the image is a composite, created by combining multiple images or applying effects */\n  compositeImage: string;\n  /** The interoperability index indicating the standard used for ensuring image compatibility */\n  interoperabilityIndex: string;\n  /** The version of the interoperability standard used for the image */\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  /** Representing identifier of meta-data object */\n  id: number;\n  /** Representing gps-latitude parameter */\n  latitude: number;\n  /** Representing gps-longitude parameter */\n  longitude: number;\n  /** Representing gps-altitude parameter */\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** A codec ( algorithm or method ) used to compress and decompress a video file */\n  codec: string;\n  /** The container format of the video file, indicating how video, audio, and other data streams are packaged together */\n  container: string;\n  /** The width of the video in pixels */\n  width: number;\n  /** The height of the video in pixels */\n  height: number;\n  /**  The bitrate of the video file, indicating the amount of data processed per second */\n  bitrate: number;\n  /** The duration of the video file in seconds */\n  duration: number;\n  /** A sample video aspect ratio indicating how pixels are distributed in a video stream */\n  sampleAspectRatio: string;\n  /** The display aspect ratio of the video, indicating the ratio of width to height for playback.*/\n  displayAspectRatio: string;\n  /** Video color range, indicating the set of colors used in the video file */\n  colorRange: string;\n  /** The color space of the video, indicating how colors are represented and interpreted */\n  colorSpace: string;\n  /** The frame rate of the video, indicating the number of frames displayed per second */\n  frameRate: string;\n  /** The rotation angle of the video in degrees, indicating its orientation */\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The format of the audio file container, which encapsulates audio streams and metadata */\n  container: string;\n  /** The audio codec used for encoding or decoding the audio data */\n  codec: string;\n  /** The sample rate of the audio file, indicating the number of samples per second */\n  sampleRate: number;\n  /**  The number of audio channels in the file, indicating the sound configuration (e.g., mono, stereo) */\n  numberOfChannels: number;\n  /**  The bitrate of the audio file, indicating the amount of data processed per second. */\n  bitrate: number;\n  /** The codec profile used for encoding the audio data, indicating specific settings and capabilities */\n  codecProfile: string;\n  /** The tool or software used to encode or process the audio file */\n  tool: string;\n  /** The duration of the audio file in seconds */\n  duration: number;\n  /** The title of the audio file or track */\n  title: string;\n  /** The name of the artist or band who performed the audio track. */\n  artist: string;\n  /** The name of the album that the audio track belongs to */\n  album: string;\n  /** The year the audio track was release */\n  year: number;\n  /** The genre of the audio track */\n  genre: string;\n  /** The music label or company that released the audio trac */\n  label: string;\n}\n\n/**\n * Interface representing the basic functionality for a file management controller.\n */\nexport interface BasicFileController {\n  /**\n   * Handles the uploading of a file, saving it to the system, and optionally marking it as public.\n   * @param file - The file to be uploaded.\n   * @param isPublic - A string indicating whether the file should be public (\"true\") or private (\"false\").\n   * @returns A promise that resolves to the saved file entity.\n   */\n  createFile(file: Express.Multer.File, isPublic: string): Promise;\n\n  /**\n   * Retrieves a private file by its ID and sends it as a response.\n   * @param res - The HTTP response object used to send the file.\n   * @param id - The ID of the file to be retrieved.\n   * @returns A promise that resolves when the file is sent.\n   */\n  getPrivateFile(res: Response, id: number): Promise;\n\n  /**\n   * Retrieves a public file by its ID.\n   * @param id - The ID of the file to be retrieved.\n   * @returns A promise that resolves to the retrieved file entity.\n   */\n  getFile(id: number): Promise;\n\n  /**\n   * Removes a file by its ID from the system.\n   * @param id - The ID of the file to be removed.\n   * @returns A promise that resolves to the removed file entity.\n   */\n  removeFile(id: number): Promise;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/FileMetadataEntity.html":{"url":"entities/FileMetadataEntity.html","title":"entity - FileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  FileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the basic metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                audio\n                            \n                            \n                                    \n                                    \n                                exif\n                            \n                            \n                                    \n                                ext\n                            \n                            \n                                    \n                                    \n                                gps\n                            \n                            \n                                    \n                                hash\n                            \n                            \n                                    \n                                    \n                                icc\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                image\n                            \n                            \n                                    \n                                mime\n                            \n                            \n                                    \n                                    \n                                video\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        audio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AudioFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        exif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExifFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gps\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GpsFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        icc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IccFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ImageFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        mime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        video\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VideoFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:73\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  JoinColumn,\n  OneToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { FileMetadata } from \"../file.types\";\nimport { ImageFileMetadataEntity } from \"./image-file-metadata.entity\";\nimport { GpsFileMetadataEntity } from \"./gps-file-metadata.entity\";\nimport { IccFileMetadataEntity } from \"./icc-file-metadata.entity\";\nimport { ExifFileMetadataEntity } from \"./exif-file-metadata.entity\";\nimport { VideoFileMetadataEntity } from \"./video-file-metadata.entity\";\nimport { AudioFileMetadataEntity } from \"./audio-file-metadata.entity\";\n\n/**\n * The entity stores the basic metadata of the file\n */\n@Entity(\"file_metadata\")\nexport class FileMetadataEntity implements FileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Column(\"varchar\", { nullable: true })\n  mime: string;\n\n  @Column(\"varchar\", { nullable: true })\n  ext: string;\n\n  @Column(\"varchar\", { nullable: true })\n  hash: string;\n\n  @OneToOne(() => ImageFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  image: ImageFileMetadataEntity;\n\n  @OneToOne(() => GpsFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  gps: GpsFileMetadataEntity;\n\n  @OneToOne(() => IccFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  icc: IccFileMetadataEntity;\n\n  @OneToOne(() => ExifFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  exif: ExifFileMetadataEntity;\n\n  @OneToOne(() => AudioFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  audio: AudioFileMetadataEntity;\n\n  @OneToOne(() => VideoFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  video: VideoFileMetadataEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileMetadataService.html":{"url":"injectables/FileMetadataService.html","title":"injectable - FileMetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileMetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file-metadata.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing file metadata, including creation and setting metadata properties.\n\n            \n\n            \n                Extends\n            \n            \n                            FileMd\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createFileMetadataEntity\n                            \n                            \n                                    Private\n                                    Async\n                                setAudioMd\n                            \n                            \n                                    Private\n                                setImageMd\n                            \n                            \n                                    Private\n                                    Async\n                                setVideoMd\n                            \n                            \n                                    Private\n                                trimProperties\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createFileMetadataEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFileMetadataEntity(buf: Buffer, filePath?: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileMd\n\n                        \n                    \n                    \n                        \n                                Defined in         FileMd:45\n\n                        \n                    \n\n\n            \n                \n                        Creates a FileMetadataEntity for the given buffer and file path.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                buf\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBuffer containing the file data.\n\n\n                                            \n                                        \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional file path for the file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the created FileMetadataEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setAudioMd\n                        \n                    \n                \n            \n            \n                \n                        \n                    setAudioMd(md: FileMetadataEntity, buf: Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file-metadata.service.ts:139\n                        \n                    \n\n\n            \n                \n                        Sets audio metadata for the given FileMetadataEntity and buffer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                md\n                                            \n                                                            FileMetadataEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe FileMetadataEntity to set the metadata for.\n\n\n                                            \n                                        \n                                        \n                                                buf\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe buffer containing the audio data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setImageMd\n                        \n                    \n                \n            \n            \n                \n                        \n                    setImageMd(md: FileMetadataEntity, buf: Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file-metadata.service.ts:166\n                        \n                    \n\n\n            \n                \n                        Sets image metadata for the given FileMetadataEntity and buffer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                md\n                                            \n                                                            FileMetadataEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe FileMetadataEntity to set the metadata for.\n\n\n                                            \n                                        \n                                        \n                                                buf\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe buffer containing the image data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setVideoMd\n                        \n                    \n                \n            \n            \n                \n                        \n                    setVideoMd(md: FileMetadataEntity, filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file-metadata.service.ts:101\n                        \n                    \n\n\n            \n                \n                        Sets video metadata for the given FileMetadataEntity and file path.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                md\n                                            \n                                                            FileMetadataEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe FileMetadataEntity to set the metadata for.\n\n\n                                            \n                                        \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe file path for the video file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        trimProperties\n                        \n                    \n                \n            \n            \n                \n                        \n                    trimProperties(obj: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file-metadata.service.ts:72\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Trims properties of an object, removing empty or invalid values.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe object to trim.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                The trimmed object.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { parseBuffer } from \"music-metadata\";\nimport * as ExifReader from \"exifreader\";\nimport * as ffprobe from \"ffprobe\";\nimport * as ffprobeStatic from \"ffprobe-static\";\nimport { FilesUtils } from \"../../shared/utils/files.utils\";\nimport { FileMd } from \"./file.constants\";\nimport { FileMetadataEntity } from \"./entity/file-metadata.entity\";\nimport { AudioFileMetadataEntity } from \"./entity/audio-file-metadata.entity\";\nimport { VideoFileMetadataEntity } from \"./entity/video-file-metadata.entity\";\nimport { ImageFileMetadataEntity } from \"./entity/image-file-metadata.entity\";\nimport { GpsFileMetadataEntity } from \"./entity/gps-file-metadata.entity\";\nimport { ExifFileMetadataEntity } from \"./entity/exif-file-metadata.entity\";\nimport { IccFileMetadataEntity } from \"./entity/icc-file-metadata.entity\";\nimport getHashFromBuffer = FilesUtils.getHashFromBuffer;\nimport fileType = FilesUtils.fileType;\n\n/**\n * Service for managing file metadata, including creation and setting metadata properties.\n */\n@Injectable()\nexport class FileMetadataService extends FileMd {\n  /**\n   * Creates a FileMetadataEntity for the given buffer and file path.\n   * @param buf - Buffer containing the file data.\n   * @param filePath - Optional file path for the file.\n   * @returns A promise that resolves to the created FileMetadataEntity.\n   */\n  async createFileMetadataEntity(buf: Buffer, filePath?: string) {\n    const fileTypeData = await fileType().fileTypeFromBuffer(buf);\n    const md = new FileMetadataEntity();\n    md.hash = getHashFromBuffer(buf);\n    if (fileTypeData) {\n      md.mime = fileTypeData.mime;\n      md.ext = fileTypeData.ext;\n    } else {\n      return md;\n    }\n    try {\n      if (md.mime.startsWith(\"image\")) {\n        this.setImageMd(md, buf);\n      } else if (md.mime.startsWith(\"audio\")) {\n        await this.setAudioMd(md, buf);\n      } else if (md.mime.startsWith(\"video\")) {\n        await this.setVideoMd(md, filePath);\n      }\n    } catch (e) {}\n    return this.trimProperties(md);\n  }\n\n  /**\n   * Trims properties of an object, removing empty or invalid values.\n   * @param obj - The object to trim.\n   * @returns The trimmed object.\n   */\n  private trimProperties(obj: T): T {\n    if (typeof obj === \"string\") {\n      return obj.trim() === \"\" || obj.indexOf(\"\") !== -1\n        ? undefined\n        : (obj.trim() as T);\n    } else if (Array.isArray(obj)) {\n      return obj.map(this.trimProperties) as T;\n    } else if (typeof obj === \"object\") {\n      if (obj instanceof Date) {\n        return obj as T;\n      }\n      const result: Record = {};\n      for (const key in obj) {\n        const value = this.trimProperties(obj[key]);\n        if (value !== undefined) {\n          result[key] = value;\n        }\n      }\n      return result as T;\n    } else {\n      return obj;\n    }\n  }\n\n  /**\n   * Sets video metadata for the given FileMetadataEntity and file path.\n   * @param md - The FileMetadataEntity to set the metadata for.\n   * @param filePath - The file path for the video file.\n   */\n  private async setVideoMd(md: FileMetadataEntity, filePath: string) {\n    if (filePath) {\n      const ffProbeMd = await ffprobe(filePath, { path: ffprobeStatic.path });\n      if (ffProbeMd) {\n        const audioMd = ffProbeMd.streams.find((v) => v.codec_type === \"audio\");\n        if (audioMd) {\n          md.audio = new AudioFileMetadataEntity();\n          md.audio.container = audioMd.codec_name?.toUpperCase();\n          md.audio.codec = audioMd.codec_long_name;\n          md.audio.duration = parseFloat(audioMd.duration || 0);\n          md.audio.numberOfChannels = audioMd.channels;\n          md.audio.bitrate = audioMd.bit_rate;\n        }\n        const videoMd = ffProbeMd.streams.find((v) => v.codec_type === \"video\");\n        if (videoMd) {\n          md.video = new VideoFileMetadataEntity();\n          md.video.codec = videoMd.codec_name?.toUpperCase();\n          md.video.container = videoMd.codec_long_name;\n          md.video.width = videoMd.width;\n          md.video.height = videoMd.height;\n          md.video.bitrate = videoMd.bit_rate;\n          md.video.duration = parseFloat(videoMd.duration || 0);\n          md.video.sampleAspectRatio = videoMd.sample_aspect_ratio;\n          md.video.displayAspectRatio = videoMd.display_aspect_ratio;\n          md.video.colorRange = videoMd.color_range;\n          md.video.colorSpace = videoMd.color_space;\n          md.video.frameRate = videoMd.r_frame_rate;\n          md.video.rotate = videoMd.tags?.rotate;\n        }\n      }\n    }\n  }\n\n  /**\n   * Sets audio metadata for the given FileMetadataEntity and buffer.\n   * @param md - The FileMetadataEntity to set the metadata for.\n   * @param buf - The buffer containing the audio data.\n   */\n  private async setAudioMd(md: FileMetadataEntity, buf: Buffer) {\n    const musicMd = await parseBuffer(buf);\n    if (!musicMd) {\n      return;\n    }\n    md.audio = new AudioFileMetadataEntity();\n    md.audio.container = musicMd.format.container;\n    md.audio.codec = musicMd.format.codec;\n    md.audio.sampleRate = musicMd.format.sampleRate;\n    md.audio.numberOfChannels = musicMd.format.numberOfChannels;\n    md.audio.bitrate = musicMd.format.bitrate;\n    md.audio.codecProfile = musicMd.format.codecProfile;\n    md.audio.tool = musicMd.format.tool;\n    md.audio.duration = musicMd.format.duration;\n    md.audio.title = musicMd.common.title;\n    md.audio.album = musicMd.common.album;\n    md.audio.artist = musicMd.common.artists?.join(\", \");\n    md.audio.year = musicMd.common.year;\n    md.audio.genre = musicMd.common.genre?.join(\", \");\n    md.audio.label = musicMd.common.label?.join(\", \");\n  }\n\n  /**\n   * Sets image metadata for the given FileMetadataEntity and buffer.\n   * @param md - The FileMetadataEntity to set the metadata for.\n   * @param buf - The buffer containing the image data.\n   */\n  private setImageMd(md: FileMetadataEntity, buf: Buffer) {\n    const exifData = ExifReader.load(buf, {\n      expanded: true,\n      includeUnknown: true,\n    });\n    if (!exifData) {\n      return;\n    }\n    md.image = new ImageFileMetadataEntity();\n    md.image.bps = exifData.file[\"Bits Per Sample\"]?.value;\n    md.image.height = exifData.file[\"Image Height\"]?.value;\n    md.image.width = exifData.file[\"Image Width\"]?.value;\n    md.image.colorComponents = exifData.file[\"Color Components\"]?.value;\n    md.image.subsampling = exifData.file[\"Subsampling\"]?.description;\n    if (exifData.png) {\n      md.image.height = exifData.png[\"Image Height\"]?.value;\n      md.image.width = exifData.png[\"Image Width\"]?.value;\n      md.image.bitDepth = exifData.png[\"Bit Depth\"]?.value;\n      md.image.colorType = exifData.png[\"Color Type\"]?.description;\n      md.image.compression = exifData.png[\"Compression\"]?.description;\n      md.image.filter = exifData.png[\"Filter\"]?.description;\n      md.image.interlace = exifData.png[\"Interlace\"]?.description;\n    }\n    if (exifData.gps) {\n      md.gps = new GpsFileMetadataEntity();\n      md.gps.altitude = exifData.gps?.Altitude;\n      md.gps.longitude = exifData.gps?.Longitude;\n      md.gps.latitude = exifData.gps?.Latitude;\n    }\n    if (exifData.icc) {\n      md.icc = new IccFileMetadataEntity();\n      md.icc.profileVersion = exifData.icc[\"Profile Version\"]?.description;\n      md.icc.profileClassName =\n        exifData.icc[\"Profile/Device class\"]?.description;\n      md.icc.profileClassValue = exifData.icc[\"Profile/Device class\"]?.value;\n      md.icc.connectionSpace = exifData.icc[\"Connection Space\"]?.description;\n      md.icc.iccProfileDate = new Date(exifData.icc[\"ICC Profile Date\"]?.value);\n      if (exifData.icc[\"ICC Profile Date\"]?.value) {\n        md.image.dateTime = md.icc.iccProfileDate;\n      }\n      md.icc.iccSignature = exifData.icc[\"ICC Signature\"]?.description;\n      md.icc.primaryPlatform = exifData.icc[\"Primary Platform\"]?.description;\n      md.icc.deviceManufacturer =\n        exifData.icc[\"Device Manufacturer\"]?.description;\n      md.icc.deviceModelNumber =\n        exifData.icc[\"Device Model Number\"]?.description;\n      md.icc.renderingIntentName =\n        exifData.icc[\"Rendering Intent\"]?.description;\n      md.icc.renderingIntentValue = exifData.icc[\"Rendering Intent\"]?.value;\n      md.icc.profileCreator = exifData.icc[\"Profile Creator\"]?.description;\n      md.icc.iccDescription = exifData.icc[\"ICC Description\"]?.description;\n      md.icc.iccCopyright = exifData.icc[\"ICC Copyright\"]?.description;\n    }\n    if (exifData.exif) {\n      md.exif = new ExifFileMetadataEntity();\n      md.exif.make = exifData.exif.Make?.description;\n      md.exif.model = exifData.exif.Model?.description;\n      md.exif.orientation = exifData.exif.Orientation?.description;\n      md.exif.resolutionX = exifData.exif.XResolution?.description;\n      md.exif.resolutionY = exifData.exif.YResolution?.description;\n      md.exif.resolutionUnit = exifData.exif.ResolutionUnit?.description;\n      md.exif.software = exifData.exif.Software?.description;\n      md.exif.ycbCrPositioning = exifData.exif.YCbCrPositioning?.description;\n      md.exif.exifIfdPointer = exifData.exif[\"Exif IFD Pointer\"]?.description;\n      md.exif.gpsInfoIfdPointer =\n        exifData.exif[\"GPS Info IFD Pointer\"]?.description;\n      md.exif.exposureTime = exifData.exif.ExposureTime?.description;\n      md.exif.fNumber = exifData.exif.FNumber?.description;\n      md.exif.exposureProgram = exifData.exif.ExposureProgram?.description;\n      md.exif.isoSpeedRatings = exifData.exif.ISOSpeedRatings?.description;\n      md.exif.exifVersion = exifData.exif.ExifVersion?.description;\n      md.exif.offsetTime = exifData.exif.OffsetTime?.description;\n      md.exif.shutterSpeedValue = exifData.exif.ShutterSpeedValue?.description;\n      md.exif.aperture = exifData.exif.ApertureValue?.description;\n      md.exif.brightness = exifData.exif.BrightnessValue?.description;\n      md.exif.exposureBias = exifData.exif.ExposureBiasValue?.description;\n      md.exif.maxAperture = exifData.exif.MaxApertureValue?.description;\n      md.exif.subjectDistance = exifData.exif.SubjectDistance?.description;\n      md.exif.meteringMode = exifData.exif.MeteringMode?.description;\n      md.exif.flash = exifData.exif.Flash?.description;\n      md.exif.focalLength = exifData.exif.FocalLength?.description;\n      md.exif.flashpixVersion = exifData.exif.FlashpixVersion?.description;\n      md.exif.colorSpace = exifData.exif.ColorSpace?.description;\n      md.exif.pixelXDimension = exifData.exif.PixelXDimension?.description;\n      md.exif.pixelYDimension = exifData.exif.PixelYDimension?.description;\n      md.exif.interoperabilityIfdPointer =\n        exifData.exif[\"Interoperability IFD Pointer\"]?.description;\n      md.exif.sensingMethod = exifData.exif.SensingMethod?.description;\n      md.exif.sceneType = exifData.exif.SceneType?.description;\n      md.exif.customRendered = exifData.exif.CustomRendered?.description;\n      md.exif.exposureMode = exifData.exif.ExposureMode?.description;\n      md.exif.whiteBalance = exifData.exif.WhiteBalance?.description;\n      md.exif.digitalZoomRatio = exifData.exif.DigitalZoomRatio?.description;\n      md.exif.sceneCaptureType = exifData.exif.SceneCaptureType?.description;\n      md.exif.contrast = exifData.exif.Contrast?.description;\n      md.exif.saturation = exifData.exif.Saturation?.description;\n      md.exif.sharpness = exifData.exif.Sharpness?.description;\n      md.exif.subjectDistanceRange =\n        exifData.exif.SubjectDistanceRange?.description;\n      md.exif.lensMake = exifData.exif.LensMake?.description;\n      md.exif.lensModel = exifData.exif.LensModel?.description;\n      md.exif.compositeImage = exifData.exif[\"CompositeImage\"]?.description;\n      md.exif.interoperabilityIndex =\n        exifData.exif.InteroperabilityIndex?.description;\n      md.exif.interoperabilityVersion =\n        exifData.exif[\"InteroperabilityVersion\"]?.description;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileModule.html":{"url":"modules/FileModule.html","title":"module - FileModule","body":"\n                   \n\n\n\n\n    Modules\n    FileModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/file/file.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for managing files.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: FileModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.module.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            FileModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      fileManager: FileService,\n      fileMd: FileMetadataService,\n      controller: FileController,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { FileService } from \"./file.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { FileEntity } from \"./entity/file.entity\";\nimport { FileModuleOptions } from \"./file.types\";\nimport { FileMetadataService } from \"./file-metadata.service\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { FileManager, FileMd } from \"./file.constants\";\nimport { FileController } from \"./file.controller\";\nimport { UserModule } from \"../user/user.module\";\n\n/**\n * Module for managing files.\n */\n@Module({})\nexport class FileModule {\n  static forRoot(\n    options: FileModuleOptions = {\n      fileManager: FileService,\n      fileMd: FileMetadataService,\n      controller: FileController,\n    },\n  ): DynamicModule {\n    return {\n      module: FileModule,\n      imports: [\n        TypeOrmModule.forFeature([FileEntity]),\n        LogModule,\n        CacheModule,\n        UserModule.forRoot(),\n      ],\n      controllers: [options.controller],\n      providers: [\n        {\n          provide: FileManager,\n          useClass: options.fileManager,\n        },\n        {\n          provide: FileMd,\n          useClass: options.fileMd,\n        },\n      ],\n      exports: [FileManager, FileMd],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing files, including uploading, finding, and removing files.\n\n            \n\n            \n                Extends\n            \n            \n                            FileManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createBasicFindQb\n                            \n                            \n                                    Private\n                                    Async\n                                createFileDirectory\n                            \n                            \n                                    Private\n                                    Async\n                                createFileEntity\n                            \n                            \n                                    Async\n                                createOrUpdateFile\n                            \n                            \n                                    Async\n                                findByCode\n                            \n                            \n                                    Async\n                                findFileById\n                            \n                            \n                                    Async\n                                findPrivateById\n                            \n                            \n                                    Async\n                                findPublicById\n                            \n                            \n                                    Async\n                                getFilePath\n                            \n                            \n                                    Private\n                                    Async\n                                getPrivateDir\n                            \n                            \n                                    Private\n                                    Async\n                                getPublicDir\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, fileRep: Repository, cacheService: CacheService, metadataService: FileMd)\n                    \n                \n                        \n                            \n                                Defined in lib/common/file/file.service.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        metadataService\n                                                  \n                                                        \n                                                                        FileMd\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createBasicFindQb\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBasicFindQb()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:226\n                        \n                    \n\n\n            \n                \n                        Private helper method to create a query builder for finding files with their related entities.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                A query builder instance for finding files.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        createFileDirectory\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFileDirectory(isPublic: boolean, entityId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:256\n                        \n                    \n\n\n            \n                \n                        Private helper method to create a file directory for the specified public/private status and entity ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isPublic\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA boolean flag indicating if the directory is for public files (true) or private files (false).\n\n\n                                            \n                                        \n                                        \n                                                entityId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe entity ID to use as the directory name.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the created directory path as a string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        createFileEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFileEntity(isPublic: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:273\n                        \n                    \n\n\n            \n                \n                        Private helper method to create a new FileEntity with the specified public/private status.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isPublic\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA boolean flag indicating if the FileEntity is for a public file (true) or private file (false).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the created FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOrUpdateFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrUpdateFile(file: Buffer, extension: string, isPublic, code?: string, existedEntityId?: number, name?: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:66\n\n                        \n                    \n\n\n            \n                \n                        Uploads a file and saves it to the specified directory (public or private).\nAlso creates a FileEntity and saves the file's metadata in the database.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nBuffer of file.\n\n\n                                            \n                                        \n                                        \n                                                extension\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"\"\n                                            \n\n                                            \n                                                    \nfile extension (based of file name).\n\n\n                                            \n                                        \n                                        \n                                                isPublic\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                            \n                                                    \nA boolean flag indicating if the file should be saved to the public directory (true) or private directory (false).\n\n\n                                            \n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nSpecific identification code for file entity.\n\n\n                                            \n                                        \n                                        \n                                                existedEntityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nID of file entity for patch.\n\n\n                                            \n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nname for file entity.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the created FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:148\n\n                        \n                    \n\n\n            \n                \n                        Finds a file entity by code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the file entity.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The found file entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findFileById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findFileById(id: number, isPublic: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:131\n\n                        \n                    \n\n\n            \n                \n                        Private helper method to find a file by its ID and public/private status.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe ID of the file to find.\n\n\n                                            \n                                        \n                                        \n                                                isPublic\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                            \n                                                    \nA boolean flag indicating if the file is public (true) or private (false).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the found FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPrivateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPrivateById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:168\n\n                        \n                    \n\n\n            \n                \n                        Finds a private file by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the file to find.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the found FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPublicById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPublicById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:159\n\n                        \n                    \n\n\n            \n                \n                        Finds a public file by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the file to find.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the found FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFilePath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFilePath(file: File)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:177\n\n                        \n                    \n\n\n            \n                \n                        Constructs the full file path for the given File object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA File object containing the file's metadata.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The full file path as a string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getPrivateDir\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPrivateDir()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:292\n                        \n                    \n\n\n            \n                \n                        Retrieves the private directory path stored in configuration.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the normalized private directory path.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getPublicDir\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPublicDir()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:283\n                        \n                    \n\n\n            \n                \n                        Retrieves the public directory path stored in configuration.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the normalized public directory path.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:187\n\n                        \n                    \n\n\n            \n                \n                        Removes a file by its ID and deletes its corresponding directory.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the file to remove.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the removed FileEntity.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n  Logger,\n  NotFoundException,\n} from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { FileEntity } from \"./entity/file.entity\";\nimport * as path from \"path\";\nimport * as fs from \"fs\";\nimport { File } from \"./file.types\";\nimport { FilesUtils } from \"../../shared/utils/files.utils\";\nimport { FileConfig } from \"../../../gen-src/file.config\";\nimport { FileManager, FileMd } from \"./file.constants\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport PRIVATE_DIR = FileConfig.PRIVATE_DIR;\nimport PUBLIC_DIR = FileConfig.PUBLIC_DIR;\nimport createDirectoriesIfNotExist = FilesUtils.createDirectoriesIfNotExist;\n\n/**\n * Service for managing files, including uploading, finding, and removing files.\n */\n@Injectable()\nexport class FileService extends FileManager {\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    @InjectRepository(FileEntity)\n    private readonly fileRep: Repository,\n    private readonly cacheService: CacheService,\n    private readonly metadataService: FileMd,\n  ) {\n    super();\n  }\n\n  /**\n   * Uploads a file and saves it to the specified directory (public or private).\n   * Also creates a FileEntity and saves the file's metadata in the database.\n   * @param file - Buffer of file.\n   * @param extension - file extension (based of file name).\n   * @param isPublic - A boolean flag indicating if the file should be saved to the public directory (true) or private directory (false).\n   * @param code - Specific identification code for file entity.\n   * @param existedEntityId - ID of file entity for patch.\n   * @param name - name for file entity.\n   * @returns A promise that resolves to the created FileEntity.\n   */\n  async createOrUpdateFile(\n    file: Buffer,\n    extension = \"\",\n    isPublic = true,\n    code?: string,\n    existedEntityId?: number,\n    name?: string,\n  ): Promise {\n    let entity: FileEntity = undefined;\n    await this.fileRep.manager.transaction(async (transactionManager) => {\n      if (existedEntityId) {\n        entity = await this.findFileById(existedEntityId, isPublic);\n        if (!entity) {\n          throw new BadRequestException(\n            `Cannot patch file with ID ${existedEntityId}, because than not exists`,\n          );\n        }\n        const dir = path.join(\n          !entity.public\n            ? await this.getPrivateDir()\n            : await this.getPublicDir(),\n          entity.id.toString(),\n        );\n        await fs.promises\n          .rm(dir, { recursive: true, force: true })\n          .catch((err) => {\n            throw new InternalServerErrorException(\n              `Failed to delete directory: ${dir}`,\n              err,\n            );\n          });\n      } else {\n        entity = await this.createFileEntity(isPublic);\n      }\n      const outputPath = await this.createFileDirectory(\n        entity.public,\n        entity.id.toString(),\n      );\n      const fileName =\n        entity.id.toString() + (extension ? `.${extension}` : extension);\n      entity.size = file.length;\n      entity.path = fileName;\n      entity.name = name;\n      entity.code = code;\n      await fs.promises.writeFile(`${outputPath}/${fileName}`, file);\n      if (!existedEntityId) {\n        entity.metadata = await this.metadataService.createFileMetadataEntity(\n          file,\n          `${outputPath}/${fileName}`,\n        );\n      }\n      await transactionManager.save(entity);\n    });\n    this.logger.log(\n      `${!existedEntityId ? `Created` : `Updated`} file with ID ${entity.id}`,\n    );\n    return entity;\n  }\n\n  /**\n   * Private helper method to find a file by its ID and public/private status.\n   * @param id - The ID of the file to find.\n   * @param isPublic - A boolean flag indicating if the file is public (true) or private (false).\n   * @returns A promise that resolves to the found FileEntity.\n   */\n  async findFileById(id: number, isPublic: boolean = undefined) {\n    const qb = this.createBasicFindQb().where(\"file.id = :id\", { id });\n    if (isPublic !== undefined) {\n      qb.andWhere(`file.public = :isPublic`, { isPublic });\n    }\n    const entity = await qb.getOne();\n    if (!entity) {\n      throw new NotFoundException(`File with ID ${id} not found`);\n    }\n    return entity;\n  }\n\n  /**\n   * Finds a file entity by code.\n   * @param code - The code of the file entity.\n   * @returns The found file entity.\n   */\n  async findByCode(code: string): Promise {\n    return await this.createBasicFindQb()\n      .where(\"file.code = :code\", { code })\n      .getOne();\n  }\n\n  /**\n   * Finds a public file by its ID.\n   * @param id - The ID of the file to find.\n   * @returns A promise that resolves to the found FileEntity.\n   */\n  async findPublicById(id: number): Promise {\n    return this.findFileById(id, true);\n  }\n\n  /**\n   * Finds a private file by its ID.\n   * @param id - The ID of the file to find.\n   * @returns A promise that resolves to the found FileEntity.\n   */\n  async findPrivateById(id: number): Promise {\n    return this.findFileById(id);\n  }\n\n  /**\n   * Constructs the full file path for the given File object.\n   * @param file - A File object containing the file's metadata.\n   * @returns The full file path as a string.\n   */\n  async getFilePath(file: File): Promise {\n    const filePath = `${!file.public ? await this.getPrivateDir() : await this.getPublicDir()}/${file.id}/`;\n    return filePath + file.path;\n  }\n\n  /**\n   * Removes a file by its ID and deletes its corresponding directory.\n   * @param id - The ID of the file to remove.\n   * @returns A promise that resolves to the removed FileEntity.\n   */\n  async remove(id: number): Promise {\n    const file = await this.findFileById(id);\n    const dir = path.join(\n      !file.public ? await this.getPrivateDir() : await this.getPublicDir(),\n      file.id.toString(),\n    );\n    await this.fileRep.manager.transaction(async (transactionManager) => {\n      if (file.metadata) {\n        if (file.metadata.image) {\n          await transactionManager.remove(file.metadata.image);\n        }\n        if (file.metadata.gps) {\n          await transactionManager.remove(file.metadata.gps);\n        }\n        if (file.metadata.audio) {\n          await transactionManager.remove(file.metadata.audio);\n        }\n        if (file.metadata.video) {\n          await transactionManager.remove(file.metadata.video);\n        }\n      }\n      await transactionManager.remove(file);\n      await fs.promises\n        .rm(dir, { recursive: true, force: true })\n        .catch((err) => {\n          throw new InternalServerErrorException(\n            `Failed to delete directory: ${dir}`,\n            err,\n          );\n        });\n    });\n    this.logger.log(`File with ID ${id} removed`);\n    return file;\n  }\n\n  /**\n   * Private helper method to create a query builder for finding files with their related entities.\n   * @returns A query builder instance for finding files.\n   */\n  private createBasicFindQb() {\n    return this.fileRep\n      .createQueryBuilder(\"file\")\n      .leftJoinAndSelect(\"file.icon\", \"icon\")\n      .leftJoinAndSelect(\"file.metadata\", \"metadata\")\n      .leftJoinAndSelect(\"metadata.gps\", \"metaGps\")\n      .leftJoinAndSelect(\"metadata.image\", \"metaImage\")\n      .leftJoinAndSelect(\"metadata.audio\", \"metaAudio\")\n      .leftJoinAndSelect(\"metadata.video\", \"metaVideo\")\n      .leftJoinAndSelect(\"icon.name\", \"iconName\")\n      .leftJoinAndSelect(\"iconName.lang\", \"iconLang\")\n      .leftJoinAndSelect(\"icon.files\", \"iconFiles\")\n      .leftJoinAndSelect(\"iconFiles.format\", \"iconFilesFormat\")\n      .leftJoinAndSelect(\"icon.type\", \"iconType\")\n      .leftJoinAndSelect(\"iconType.ext\", \"iconTypeExt\")\n      .leftJoinAndSelect(\"file.preview\", \"preview\")\n      .leftJoinAndSelect(\"preview.name\", \"previewName\")\n      .leftJoinAndSelect(\"previewName.lang\", \"previewLang\")\n      .leftJoinAndSelect(\"preview.files\", \"previewFiles\")\n      .leftJoinAndSelect(\"previewFiles.format\", \"previewFilesFormat\")\n      .leftJoinAndSelect(\"preview.type\", \"previewType\")\n      .leftJoinAndSelect(\"previewType.ext\", \"previewTypeExt\");\n  }\n\n  /**\n   * Private helper method to create a file directory for the specified public/private status and entity ID.\n   * @param isPublic - A boolean flag indicating if the directory is for public files (true) or private files (false).\n   * @param entityId - The entity ID to use as the directory name.\n   * @returns A promise that resolves to the created directory path as a string.\n   */\n  private async createFileDirectory(\n    isPublic: boolean,\n    entityId: string,\n  ): Promise {\n    const dir = path.join(\n      !isPublic ? await this.getPrivateDir() : await this.getPublicDir(),\n      entityId,\n    );\n    await createDirectoriesIfNotExist(dir);\n    return dir;\n  }\n\n  /**\n   * Private helper method to create a new FileEntity with the specified public/private status.\n   * @param isPublic - A boolean flag indicating if the FileEntity is for a public file (true) or private file (false).\n   * @returns A promise that resolves to the created FileEntity.\n   */\n  private async createFileEntity(isPublic: boolean) {\n    const entity = new FileEntity();\n    entity.public = isPublic;\n    return this.fileRep.save(entity);\n  }\n\n  /**\n   * Retrieves the public directory path stored in configuration.\n   * @returns A promise that resolves to the normalized public directory path.\n   */\n  private async getPublicDir() {\n    const dir = process.cwd() + (await this.cacheService.get(PUBLIC_DIR));\n    return path.normalize(dir);\n  }\n\n  /**\n   * Retrieves the private directory path stored in configuration.\n   * @returns A promise that resolves to the normalized private directory path.\n   */\n  private async getPrivateDir() {\n    const dir = process.cwd() + (await this.cacheService.get(PRIVATE_DIR));\n    return path.normalize(dir);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForbiddenMsException.html":{"url":"classes/ForbiddenMsException.html","title":"class - ForbiddenMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForbiddenMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/forbidden-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for forbidden requests, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/forbidden-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for forbidden requests, extending MsException.\n */\nexport class ForbiddenMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.FORBIDDEN, message || \"Forbidden\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleCaptchaService.html":{"url":"classes/GoogleCaptchaService.html","title":"class - GoogleCaptchaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleCaptchaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/google-captcha.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The GoogleCaptchaService class extends the CaptchaService class with a specialization for Google reCAPTCHA.\nIt manages the generation and validation of Google reCAPTCHAs.\n\n            \n\n            \n                Extends\n            \n            \n                            CaptchaService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateCaptcha\n                            \n                            \n                                    Async\n                                validateCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, cacheService: CacheService, http: HttpService)\n                    \n                \n                        \n                            \n                                Defined in lib/common/captcha/google-captcha.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateCaptcha()\n                \n            \n\n\n                    \n                        \n                            Inherited from         CaptchaService\n\n                        \n                    \n                    \n                        \n                                Defined in         CaptchaService:46\n\n                        \n                    \n\n\n            \n                \n                        Generates a new Google reCAPTCHA and retrieves the public key defined in configuration.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nA promise resolving to a CaptchaResponse object containing the captcha id and type.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateCaptcha(request: CaptchaRequest)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CaptchaService\n\n                        \n                    \n                    \n                        \n                                Defined in         CaptchaService:62\n\n                        \n                    \n\n\n            \n                \n                        Validates the provided captcha request against Google's reCAPTCHA verification service.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            CaptchaRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe captcha request to be validated.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA promise resolving to a boolean indicating whether the captcha is valid or not.\n\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CaptchaRequest,\n  CaptchaResponse,\n  CaptchaService,\n} from \"./captcha.types\";\nimport { Inject, Logger } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { lastValueFrom } from \"rxjs\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport { CaptchaConfig } from \"../../../gen-src/captcha.config\";\n\n/**\n * The GoogleCaptchaService class extends the CaptchaService class with a specialization for Google reCAPTCHA.\n * It manages the generation and validation of Google reCAPTCHAs.\n */\nexport class GoogleCaptchaService extends CaptchaService {\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    private readonly cacheService: CacheService,\n    private readonly http: HttpService,\n  ) {\n    super();\n  }\n\n  /**\n   * Generates a new Google reCAPTCHA and retrieves the public key defined in configuration.\n   * @returns {Promise} - A promise resolving to a CaptchaResponse object containing the captcha id and type.\n   */\n  async generateCaptcha(): Promise {\n    const captchaEnabled = await this.cacheService.getBoolean(\n      CaptchaConfig.ENABLED,\n    );\n    if (!captchaEnabled) {\n      return undefined;\n    }\n    const id = await this.cacheService.get(CaptchaConfig.GOOGLE_PUBLIC_KEY);\n    return { id, type: \"google\" };\n  }\n\n  /**\n   * Validates the provided captcha request against Google's reCAPTCHA verification service.\n   * @param {CaptchaRequest} request - The captcha request to be validated.\n   * @returns {Promise} - A promise resolving to a boolean indicating whether the captcha is valid or not.\n   */\n  async validateCaptcha(request: CaptchaRequest): Promise {\n    const secretKey = await this.cacheService.get(\n      CaptchaConfig.GOOGLE_SECRET_KEY,\n    );\n    const response$ = await this.http.post(\n      `https://www.google.com/recaptcha/api/siteverify?secret=${secretKey}&response=${request.data}`,\n    );\n    const response = await lastValueFrom(response$);\n    return response?.data?.success;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GpsFileMetadata.html":{"url":"interfaces/GpsFileMetadata.html","title":"interface - GpsFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GpsFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing GPS file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            altitude\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            latitude\n                                        \n                                \n                                \n                                        \n                                            longitude\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        altitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        altitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Representing gps-altitude parameter\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Representing identifier of meta-data object\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Representing gps-latitude parameter\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Representing gps-longitude parameter\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  /** This field contains the identification number */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file */\n  name: string;\n  /** This field stores the path to the file on the server */\n  path: string;\n  /** This field specifies the type of access to the file, public or private */\n  public: boolean;\n  /** This field stores the size of the file in bytes */\n  size: number;\n  /** This field stores the icon of the file */\n  icon: Media;\n  /** This field stores the media preview of the file  */\n  preview: Media;\n  /** This field contains a reference to the FileMetadata container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The MIME type of the file, indicating the nature and format of the file content */\n  mime: string;\n  /** The file extension, indicating the file format */\n  ext: string;\n  /** The cryptographic hash of the file content, used for integrity verification and identification */\n  hash: string;\n  /** The ICC (International Color Consortium) profile data associated with the file, used for color management */\n  icc: IccFileMetadata;\n  /** GPS data associated with the location where the file was created, including latitude, longitude and elevation */\n  gps: GpsFileMetadata;\n  /** This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics */\n  image: ImageFileMetadata;\n  /** This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created */\n  exif: ExifFileMetadata;\n  /** This field is used to store information about the structure and properties of the audio file */\n  audio: AudioFileMetadata;\n  /** This field is used to store information about the structure and properties of the video recording*/\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The number of bits used to represent the color of a single pixel in the image */\n  bps: number;\n  /** The width of the image in pixels */\n  width: number;\n  /** The height of the image in pixels */\n  height: number;\n  /** The number of color components used to represent the color of the image */\n  colorComponents: number;\n  /** The subsampling method used for the image, indicating how color information is sampled */\n  subsampling: string;\n  /** The date and time when the image was created or last modified */\n  dateTime: Date;\n  /** The bit depth of the image, indicating the number of bits used for color representation */\n  bitDepth: number;\n  /** The color type of the image, indicating the color model used */\n  colorType: string;\n  /** Contains the compression method used to reduce the size of the image */\n  compression: string;\n  /** Specifies the filtering method used to process the image data before compressing it */\n  filter: string;\n  /**  Indicates whether interlacing is used in the image, allowing for progressive display */\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The version of the ICC profile, indicating the specification version used to create the color profile. */\n  profileVersion: string;\n  /** The class of the ICC profile, indicating its primary purpose and type */\n  profileClassValue: string;\n  /** The name of the ICC profile class, describing its primary purpose */\n  profileClassName: string;\n  /** The connection space of the ICC profile, representing the intermediate color space used for color conversions. */\n  connectionSpace: string;\n  /** The date and time when the ICC profile was created or last modified */\n  iccProfileDate: Date;\n  /** A unique signature of the ICC profile used to confirm its authenticity and validity */\n  iccSignature: string;\n  /** The primary platform or operating system for which the ICC profile was created or optimized */\n  primaryPlatform: string;\n  /** The manufacturer of the device for which the ICC profile was created */\n  deviceManufacturer: string;\n  /** The model number of the device for which the ICC profile was created */\n  deviceModelNumber: string;\n  /**  Indicates the type of rendering to be used when converting colors between color spaces */\n  renderingIntentValue: string;\n  /** Specifies the name of the rendering type that is used when converting colors between color spaces */\n  renderingIntentName: string;\n  /** The name or identifier of the creator of the ICC profile */\n  profileCreator: string;\n  /** A description of the ICC profile, explaining its purpose and characteristics */\n  iccDescription: string;\n  /** The copyright information for the ICC profile, indicating ownership and usage rights */\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** This field specifies the manufacturer of the camera */\n  make: string;\n  /** This field specifies the model of the camera  */\n  model: string;\n  /** Indicates image display orientation based on EXIF metadata */\n  orientation: string;\n  /** X-side resolution of the photo*/\n  resolutionX: string;\n  /** Y-side resolution of the photo*/\n  resolutionY: string;\n  /** Unit of image resolution */\n  resolutionUnit: string;\n  /** The field contains information about the software that was used to create or edit the image */\n  software: string;\n  /** This field is responsible for specifying the method of placing these color components Y, Cb and Cr relative to the image pixels */\n  ycbCrPositioning: string;\n  /** Pointer to the beginning of an EXIF IFD block in a file inside a TIFF file */\n  exifIfdPointer: string;\n  /** Contains information about the location where the image was taken */\n  gpsInfoIfdPointer: string;\n  /** Exposure time (shutter speed) when capturing an image */\n  exposureTime: string;\n  /** Contains data on the aperture number (aperture) when capturing an image */\n  fNumber: string;\n  /** Contains data on the exposure mode (shutter speed and aperture) used to capture the image */\n  exposureProgram: string;\n  /** Contains data on the ISO value (the sensitivity of the camera sensor to light) */\n  isoSpeedRatings: string;\n  /** Contains EXIF specification version data */\n  exifVersion: string;\n  /** Contains time offset data relative to UTC (Coordinated Universal Time) for the date and time when the image was taken */\n  offsetTime: string;\n  /** Contains data on the shutter speed of the camera */\n  shutterSpeedValue: string;\n  /** Contains data on the aperture (aperture) value used to capture the image */\n  aperture: string;\n  /** Contains data on the brightness level of the image */\n  brightness: string;\n  /** Contains exposure compensation data  */\n  exposureBias: string;\n  /** Contains data on the maximum aperture (aperture) value  */\n  maxAperture: string;\n  /** Contains data on the distance to the subject in millimeters */\n  subjectDistance: string;\n  /** Contains data on the light sensing mode used by the camera when capturing an image */\n  meteringMode: string;\n  /** Contains data on the status and operation of the flash during image capture */\n  flash: string;\n  /** Contains data about the focal length of the camera lens */\n  focalLength: string;\n  /** The Flashpix format version used for the image */\n  flashpixVersion: string;\n  /** The color space of the image data */\n  colorSpace: string;\n  /** Width (horizontal resolution) of the image in pixels */\n  pixelXDimension: string;\n  /** Contains data about the vertical resolution (height) of the image in pixels */\n  pixelYDimension: string;\n  /** Pointer to the start of the Interoperability IFD block for compatibility metadata */\n  interoperabilityIfdPointer: string;\n  /** Indicates the method used by the camera sensor to capture the image */\n  sensingMethod: string;\n  /** The type of scene captured in the image, indicating if it was taken with a digital camera */\n  sceneType: string;\n  /** Indicates whether the image was processed with custom rendering */\n  customRendered: string;\n  /** The exposure mode used by the camera during the shot */\n  exposureMode: string;\n  /** The white balance setting used during the shot */\n  whiteBalance: string;\n  /** The digital zoom ratio applied during the shot */\n  digitalZoomRatio: string;\n  /** The type of scene capture mode used during the shot */\n  sceneCaptureType: string;\n  /** The level of contrast applied to the image */\n  contrast: string;\n  /** The level of color saturation applied to the image */\n  saturation: string;\n  /** The level of sharpness applied to the image */\n  sharpness: string;\n  /** The distance range to the subject during the shot */\n  subjectDistanceRange: string;\n  /** The manufacturer of the lens used to capture the image */\n  lensMake: string;\n  /** The model of the lens used to capture the image */\n  lensModel: string;\n  /** Indicates whether the image is a composite, created by combining multiple images or applying effects */\n  compositeImage: string;\n  /** The interoperability index indicating the standard used for ensuring image compatibility */\n  interoperabilityIndex: string;\n  /** The version of the interoperability standard used for the image */\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  /** Representing identifier of meta-data object */\n  id: number;\n  /** Representing gps-latitude parameter */\n  latitude: number;\n  /** Representing gps-longitude parameter */\n  longitude: number;\n  /** Representing gps-altitude parameter */\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** A codec ( algorithm or method ) used to compress and decompress a video file */\n  codec: string;\n  /** The container format of the video file, indicating how video, audio, and other data streams are packaged together */\n  container: string;\n  /** The width of the video in pixels */\n  width: number;\n  /** The height of the video in pixels */\n  height: number;\n  /**  The bitrate of the video file, indicating the amount of data processed per second */\n  bitrate: number;\n  /** The duration of the video file in seconds */\n  duration: number;\n  /** A sample video aspect ratio indicating how pixels are distributed in a video stream */\n  sampleAspectRatio: string;\n  /** The display aspect ratio of the video, indicating the ratio of width to height for playback.*/\n  displayAspectRatio: string;\n  /** Video color range, indicating the set of colors used in the video file */\n  colorRange: string;\n  /** The color space of the video, indicating how colors are represented and interpreted */\n  colorSpace: string;\n  /** The frame rate of the video, indicating the number of frames displayed per second */\n  frameRate: string;\n  /** The rotation angle of the video in degrees, indicating its orientation */\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The format of the audio file container, which encapsulates audio streams and metadata */\n  container: string;\n  /** The audio codec used for encoding or decoding the audio data */\n  codec: string;\n  /** The sample rate of the audio file, indicating the number of samples per second */\n  sampleRate: number;\n  /**  The number of audio channels in the file, indicating the sound configuration (e.g., mono, stereo) */\n  numberOfChannels: number;\n  /**  The bitrate of the audio file, indicating the amount of data processed per second. */\n  bitrate: number;\n  /** The codec profile used for encoding the audio data, indicating specific settings and capabilities */\n  codecProfile: string;\n  /** The tool or software used to encode or process the audio file */\n  tool: string;\n  /** The duration of the audio file in seconds */\n  duration: number;\n  /** The title of the audio file or track */\n  title: string;\n  /** The name of the artist or band who performed the audio track. */\n  artist: string;\n  /** The name of the album that the audio track belongs to */\n  album: string;\n  /** The year the audio track was release */\n  year: number;\n  /** The genre of the audio track */\n  genre: string;\n  /** The music label or company that released the audio trac */\n  label: string;\n}\n\n/**\n * Interface representing the basic functionality for a file management controller.\n */\nexport interface BasicFileController {\n  /**\n   * Handles the uploading of a file, saving it to the system, and optionally marking it as public.\n   * @param file - The file to be uploaded.\n   * @param isPublic - A string indicating whether the file should be public (\"true\") or private (\"false\").\n   * @returns A promise that resolves to the saved file entity.\n   */\n  createFile(file: Express.Multer.File, isPublic: string): Promise;\n\n  /**\n   * Retrieves a private file by its ID and sends it as a response.\n   * @param res - The HTTP response object used to send the file.\n   * @param id - The ID of the file to be retrieved.\n   * @returns A promise that resolves when the file is sent.\n   */\n  getPrivateFile(res: Response, id: number): Promise;\n\n  /**\n   * Retrieves a public file by its ID.\n   * @param id - The ID of the file to be retrieved.\n   * @returns A promise that resolves to the retrieved file entity.\n   */\n  getFile(id: number): Promise;\n\n  /**\n   * Removes a file by its ID from the system.\n   * @param id - The ID of the file to be removed.\n   * @returns A promise that resolves to the removed file entity.\n   */\n  removeFile(id: number): Promise;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GpsFileMetadataEntity.html":{"url":"entities/GpsFileMetadataEntity.html","title":"entity - GpsFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GpsFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/gps-file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the GPS metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                altitude\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                latitude\n                            \n                            \n                                    \n                                    \n                                longitude\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        altitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/gps-file-metadata.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/gps-file-metadata.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/gps-file-metadata.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/gps-file-metadata.entity.ts:37\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { GpsFileMetadata } from \"../file.types\";\n\n/**\n * The entity stores the GPS metadata of the file\n */\n@Entity(\"file_metadata_gps\")\nexport class GpsFileMetadataEntity implements GpsFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  altitude: number;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  latitude: number;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  longitude: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphicCaptchaService.html":{"url":"classes/GraphicCaptchaService.html","title":"class - GraphicCaptchaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphicCaptchaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/graphic-captcha.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The GraphicCaptchaService class extends the CaptchaService class with a specialization for graphical captchas.\nIt manages the generation and validation of graphic captchas.\n\n            \n\n            \n                Extends\n            \n            \n                            CaptchaService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateCaptcha\n                            \n                            \n                                    Private\n                                generateColor\n                            \n                            \n                                    Private\n                                    Async\n                                getCaptchaExp\n                            \n                            \n                                    Private\n                                    Async\n                                getCaptchaFontFamily\n                            \n                            \n                                    Private\n                                    Async\n                                getCaptchaFontPath\n                            \n                            \n                                    Private\n                                    Async\n                                makeImageFromText\n                            \n                            \n                                    Async\n                                validateCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/common/captcha/graphic-captcha.service.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAn instance of Logger.\n\n\n                                                        \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAn instance of CacheService.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateCaptcha()\n                \n            \n\n\n                    \n                        \n                            Inherited from         CaptchaService\n\n                        \n                    \n                    \n                        \n                                Defined in         CaptchaService:55\n\n                        \n                    \n\n\n            \n                \n                        Generates a new graphical captcha and stores it in the cache.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nA promise resolving to a GraphicCaptchaResponse object containing the captcha id and image.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateColor\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateColor()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:129\n                        \n                    \n\n\n            \n                \n                        Generates a random RGB color.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                \nAn RGB color string.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getCaptchaExp\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCaptchaExp()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:137\n                        \n                    \n\n\n            \n                \n                        Retrieves the captcha expiration time defined in configuration.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nA promise resolving to the captcha expiration time.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getCaptchaFontFamily\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCaptchaFontFamily()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:145\n                        \n                    \n\n\n            \n                \n                        Retrieves the captcha font family defined in configuration.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nA promise resolving to the captcha font family.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getCaptchaFontPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCaptchaFontPath()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:153\n                        \n                    \n\n\n            \n                \n                        Retrieves the captcha font path defined in configuration and normalizes it.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nA promise resolving to the normalized captcha font path.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        makeImageFromText\n                        \n                    \n                \n            \n            \n                \n                        \n                    makeImageFromText(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:96\n                        \n                    \n\n\n            \n                \n                        Generates an image from the provided text.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe text to be drawn on the image.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nA promise resolving to a base64 encoded image.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateCaptcha(request: CaptchaRequest)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CaptchaService\n\n                        \n                    \n                    \n                        \n                                Defined in         CaptchaService:76\n\n                        \n                    \n\n\n            \n                \n                        Validates the provided captcha request against the cached value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            CaptchaRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe captcha request to be validated.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA promise resolving to a boolean indicating whether the captcha is valid or not.\n\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CaptchaRequest,\n  CaptchaResponse,\n  CaptchaService,\n} from \"./captcha.types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Inject, Logger } from \"@nestjs/common\";\nimport { createCanvas, registerFont } from \"canvas\";\nimport { CAPTCHA_CACHE_PREFIX } from \"./captcha.constants\";\nimport * as path from \"path\";\nimport { StringUtils } from \"../../shared/utils/string.utils\";\nimport { NumberUtils } from \"../../shared/utils/number.utils\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport { CaptchaConfig } from \"../../../gen-src/captcha.config\";\nimport generateRandomString = StringUtils.generateRandomString;\nimport generateRandomInt = NumberUtils.generateRandomInt;\n\n/**\n * The GraphicCaptchaService class extends the CaptchaService class with a specialization for graphical captchas.\n * It manages the generation and validation of graphic captchas.\n */\nexport class GraphicCaptchaService extends CaptchaService {\n  /**\n   * @param {Logger} logger - An instance of Logger.\n   * @param {CacheService} cacheService - An instance of CacheService.\n   */\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    private readonly cacheService: CacheService,\n  ) {\n    super();\n  }\n\n  /**\n   * Generates a new graphical captcha and stores it in the cache.\n   * @returns {Promise} - A promise resolving to a GraphicCaptchaResponse object containing the captcha id and image.\n   */\n  async generateCaptcha(): Promise {\n    const captchaEnabled = await this.cacheService.getBoolean(\n      CaptchaConfig.ENABLED,\n    );\n    if (!captchaEnabled) {\n      return undefined;\n    }\n    const id = uuidv4();\n    const val = generateRandomString(5, 7);\n    const image = await this.makeImageFromText(val);\n    const capEx = await this.getCaptchaExp();\n    await this.cacheService.set(`${CAPTCHA_CACHE_PREFIX}:${id}`, val, capEx);\n    this.logger.debug(`Generated captcha with id: ${id} and value: ${val}`);\n    return { id, image: `data:image/png;base64,${image}`, type: \"default\" };\n  }\n\n  /**\n   * Validates the provided captcha request against the cached value.\n   * @param {CaptchaRequest} request - The captcha request to be validated.\n   * @returns {Promise} - A promise resolving to a boolean indicating whether the captcha is valid or not.\n   */\n  async validateCaptcha(request: CaptchaRequest): Promise {\n    const key = `${CAPTCHA_CACHE_PREFIX}:${request.id}`;\n    const val = await this.cacheService.get(key);\n    this.cacheService.del(key);\n    if (!val) {\n      this.logger.warn(`Invalid captcha id: ${request.id}`);\n      return false;\n    }\n    if (val !== request.data) {\n      this.logger.warn(`Incorrect captcha value for id: ${request.id}`);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Generates an image from the provided text.\n   * @param {string} text - The text to be drawn on the image.\n   * @returns {Promise} - A promise resolving to a base64 encoded image.\n   */\n  private async makeImageFromText(text: string) {\n    const canvas = createCanvas(200, 50);\n    const ctx = canvas.getContext(\"2d\");\n    const capFontFamily = await this.getCaptchaFontFamily();\n    const capFontPath = await this.getCaptchaFontPath();\n    registerFont(capFontPath, { family: capFontFamily });\n    ctx.fillStyle = this.generateColor();\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.font = `30px ${capFontFamily}`;\n    ctx.textBaseline = \"middle\";\n    for (let i = 0; i } - A promise resolving to the captcha expiration time.\n   */\n  private async getCaptchaExp() {\n    return await this.cacheService.getNumber(CaptchaConfig.EXPIRATION);\n  }\n\n  /**\n   * Retrieves the captcha font family defined in configuration.\n   * @returns {Promise} - A promise resolving to the captcha font family.\n   */\n  private async getCaptchaFontFamily() {\n    return await this.cacheService.get(CaptchaConfig.FONT_FAMILY);\n  }\n\n  /**\n   * Retrieves the captcha font path defined in configuration and normalizes it.\n   * @returns {Promise} - A promise resolving to the normalized captcha font path.\n   */\n  private async getCaptchaFontPath() {\n    const dir =\n      process.cwd() + (await this.cacheService.get(CaptchaConfig.FONT_PATH));\n    return path.normalize(dir);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IccFileMetadata.html":{"url":"interfaces/IccFileMetadata.html","title":"interface - IccFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IccFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing ICC file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            connectionSpace\n                                        \n                                \n                                \n                                        \n                                            deviceManufacturer\n                                        \n                                \n                                \n                                        \n                                            deviceModelNumber\n                                        \n                                \n                                \n                                        \n                                            iccCopyright\n                                        \n                                \n                                \n                                        \n                                            iccDescription\n                                        \n                                \n                                \n                                        \n                                            iccProfileDate\n                                        \n                                \n                                \n                                        \n                                            iccSignature\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            primaryPlatform\n                                        \n                                \n                                \n                                        \n                                            profileClassName\n                                        \n                                \n                                \n                                        \n                                            profileClassValue\n                                        \n                                \n                                \n                                        \n                                            profileCreator\n                                        \n                                \n                                \n                                        \n                                            profileVersion\n                                        \n                                \n                                \n                                        \n                                            renderingIntentName\n                                        \n                                \n                                \n                                        \n                                            renderingIntentValue\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connectionSpace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connectionSpace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The connection space of the ICC profile, representing the intermediate color space used for color conversions.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deviceManufacturer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deviceManufacturer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The manufacturer of the device for which the ICC profile was created\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deviceModelNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deviceModelNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The model number of the device for which the ICC profile was created\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iccCopyright\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccCopyright:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The copyright information for the ICC profile, indicating ownership and usage rights\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iccDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A description of the ICC profile, explaining its purpose and characteristics\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iccProfileDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccProfileDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The date and time when the ICC profile was created or last modified\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iccSignature\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccSignature:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A unique signature of the ICC profile used to confirm its authenticity and validity\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the identification number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryPlatform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primaryPlatform:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The primary platform or operating system for which the ICC profile was created or optimized\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileClassName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileClassName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the ICC profile class, describing its primary purpose\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileClassValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileClassValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The class of the ICC profile, indicating its primary purpose and type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileCreator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileCreator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name or identifier of the creator of the ICC profile\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The version of the ICC profile, indicating the specification version used to create the color profile.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        renderingIntentName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        renderingIntentName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Specifies the name of the rendering type that is used when converting colors between color spaces\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        renderingIntentValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        renderingIntentValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates the type of rendering to be used when converting colors between color spaces\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  /** This field contains the identification number */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file */\n  name: string;\n  /** This field stores the path to the file on the server */\n  path: string;\n  /** This field specifies the type of access to the file, public or private */\n  public: boolean;\n  /** This field stores the size of the file in bytes */\n  size: number;\n  /** This field stores the icon of the file */\n  icon: Media;\n  /** This field stores the media preview of the file  */\n  preview: Media;\n  /** This field contains a reference to the FileMetadata container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The MIME type of the file, indicating the nature and format of the file content */\n  mime: string;\n  /** The file extension, indicating the file format */\n  ext: string;\n  /** The cryptographic hash of the file content, used for integrity verification and identification */\n  hash: string;\n  /** The ICC (International Color Consortium) profile data associated with the file, used for color management */\n  icc: IccFileMetadata;\n  /** GPS data associated with the location where the file was created, including latitude, longitude and elevation */\n  gps: GpsFileMetadata;\n  /** This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics */\n  image: ImageFileMetadata;\n  /** This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created */\n  exif: ExifFileMetadata;\n  /** This field is used to store information about the structure and properties of the audio file */\n  audio: AudioFileMetadata;\n  /** This field is used to store information about the structure and properties of the video recording*/\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The number of bits used to represent the color of a single pixel in the image */\n  bps: number;\n  /** The width of the image in pixels */\n  width: number;\n  /** The height of the image in pixels */\n  height: number;\n  /** The number of color components used to represent the color of the image */\n  colorComponents: number;\n  /** The subsampling method used for the image, indicating how color information is sampled */\n  subsampling: string;\n  /** The date and time when the image was created or last modified */\n  dateTime: Date;\n  /** The bit depth of the image, indicating the number of bits used for color representation */\n  bitDepth: number;\n  /** The color type of the image, indicating the color model used */\n  colorType: string;\n  /** Contains the compression method used to reduce the size of the image */\n  compression: string;\n  /** Specifies the filtering method used to process the image data before compressing it */\n  filter: string;\n  /**  Indicates whether interlacing is used in the image, allowing for progressive display */\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The version of the ICC profile, indicating the specification version used to create the color profile. */\n  profileVersion: string;\n  /** The class of the ICC profile, indicating its primary purpose and type */\n  profileClassValue: string;\n  /** The name of the ICC profile class, describing its primary purpose */\n  profileClassName: string;\n  /** The connection space of the ICC profile, representing the intermediate color space used for color conversions. */\n  connectionSpace: string;\n  /** The date and time when the ICC profile was created or last modified */\n  iccProfileDate: Date;\n  /** A unique signature of the ICC profile used to confirm its authenticity and validity */\n  iccSignature: string;\n  /** The primary platform or operating system for which the ICC profile was created or optimized */\n  primaryPlatform: string;\n  /** The manufacturer of the device for which the ICC profile was created */\n  deviceManufacturer: string;\n  /** The model number of the device for which the ICC profile was created */\n  deviceModelNumber: string;\n  /**  Indicates the type of rendering to be used when converting colors between color spaces */\n  renderingIntentValue: string;\n  /** Specifies the name of the rendering type that is used when converting colors between color spaces */\n  renderingIntentName: string;\n  /** The name or identifier of the creator of the ICC profile */\n  profileCreator: string;\n  /** A description of the ICC profile, explaining its purpose and characteristics */\n  iccDescription: string;\n  /** The copyright information for the ICC profile, indicating ownership and usage rights */\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** This field specifies the manufacturer of the camera */\n  make: string;\n  /** This field specifies the model of the camera  */\n  model: string;\n  /** Indicates image display orientation based on EXIF metadata */\n  orientation: string;\n  /** X-side resolution of the photo*/\n  resolutionX: string;\n  /** Y-side resolution of the photo*/\n  resolutionY: string;\n  /** Unit of image resolution */\n  resolutionUnit: string;\n  /** The field contains information about the software that was used to create or edit the image */\n  software: string;\n  /** This field is responsible for specifying the method of placing these color components Y, Cb and Cr relative to the image pixels */\n  ycbCrPositioning: string;\n  /** Pointer to the beginning of an EXIF IFD block in a file inside a TIFF file */\n  exifIfdPointer: string;\n  /** Contains information about the location where the image was taken */\n  gpsInfoIfdPointer: string;\n  /** Exposure time (shutter speed) when capturing an image */\n  exposureTime: string;\n  /** Contains data on the aperture number (aperture) when capturing an image */\n  fNumber: string;\n  /** Contains data on the exposure mode (shutter speed and aperture) used to capture the image */\n  exposureProgram: string;\n  /** Contains data on the ISO value (the sensitivity of the camera sensor to light) */\n  isoSpeedRatings: string;\n  /** Contains EXIF specification version data */\n  exifVersion: string;\n  /** Contains time offset data relative to UTC (Coordinated Universal Time) for the date and time when the image was taken */\n  offsetTime: string;\n  /** Contains data on the shutter speed of the camera */\n  shutterSpeedValue: string;\n  /** Contains data on the aperture (aperture) value used to capture the image */\n  aperture: string;\n  /** Contains data on the brightness level of the image */\n  brightness: string;\n  /** Contains exposure compensation data  */\n  exposureBias: string;\n  /** Contains data on the maximum aperture (aperture) value  */\n  maxAperture: string;\n  /** Contains data on the distance to the subject in millimeters */\n  subjectDistance: string;\n  /** Contains data on the light sensing mode used by the camera when capturing an image */\n  meteringMode: string;\n  /** Contains data on the status and operation of the flash during image capture */\n  flash: string;\n  /** Contains data about the focal length of the camera lens */\n  focalLength: string;\n  /** The Flashpix format version used for the image */\n  flashpixVersion: string;\n  /** The color space of the image data */\n  colorSpace: string;\n  /** Width (horizontal resolution) of the image in pixels */\n  pixelXDimension: string;\n  /** Contains data about the vertical resolution (height) of the image in pixels */\n  pixelYDimension: string;\n  /** Pointer to the start of the Interoperability IFD block for compatibility metadata */\n  interoperabilityIfdPointer: string;\n  /** Indicates the method used by the camera sensor to capture the image */\n  sensingMethod: string;\n  /** The type of scene captured in the image, indicating if it was taken with a digital camera */\n  sceneType: string;\n  /** Indicates whether the image was processed with custom rendering */\n  customRendered: string;\n  /** The exposure mode used by the camera during the shot */\n  exposureMode: string;\n  /** The white balance setting used during the shot */\n  whiteBalance: string;\n  /** The digital zoom ratio applied during the shot */\n  digitalZoomRatio: string;\n  /** The type of scene capture mode used during the shot */\n  sceneCaptureType: string;\n  /** The level of contrast applied to the image */\n  contrast: string;\n  /** The level of color saturation applied to the image */\n  saturation: string;\n  /** The level of sharpness applied to the image */\n  sharpness: string;\n  /** The distance range to the subject during the shot */\n  subjectDistanceRange: string;\n  /** The manufacturer of the lens used to capture the image */\n  lensMake: string;\n  /** The model of the lens used to capture the image */\n  lensModel: string;\n  /** Indicates whether the image is a composite, created by combining multiple images or applying effects */\n  compositeImage: string;\n  /** The interoperability index indicating the standard used for ensuring image compatibility */\n  interoperabilityIndex: string;\n  /** The version of the interoperability standard used for the image */\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  /** Representing identifier of meta-data object */\n  id: number;\n  /** Representing gps-latitude parameter */\n  latitude: number;\n  /** Representing gps-longitude parameter */\n  longitude: number;\n  /** Representing gps-altitude parameter */\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** A codec ( algorithm or method ) used to compress and decompress a video file */\n  codec: string;\n  /** The container format of the video file, indicating how video, audio, and other data streams are packaged together */\n  container: string;\n  /** The width of the video in pixels */\n  width: number;\n  /** The height of the video in pixels */\n  height: number;\n  /**  The bitrate of the video file, indicating the amount of data processed per second */\n  bitrate: number;\n  /** The duration of the video file in seconds */\n  duration: number;\n  /** A sample video aspect ratio indicating how pixels are distributed in a video stream */\n  sampleAspectRatio: string;\n  /** The display aspect ratio of the video, indicating the ratio of width to height for playback.*/\n  displayAspectRatio: string;\n  /** Video color range, indicating the set of colors used in the video file */\n  colorRange: string;\n  /** The color space of the video, indicating how colors are represented and interpreted */\n  colorSpace: string;\n  /** The frame rate of the video, indicating the number of frames displayed per second */\n  frameRate: string;\n  /** The rotation angle of the video in degrees, indicating its orientation */\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The format of the audio file container, which encapsulates audio streams and metadata */\n  container: string;\n  /** The audio codec used for encoding or decoding the audio data */\n  codec: string;\n  /** The sample rate of the audio file, indicating the number of samples per second */\n  sampleRate: number;\n  /**  The number of audio channels in the file, indicating the sound configuration (e.g., mono, stereo) */\n  numberOfChannels: number;\n  /**  The bitrate of the audio file, indicating the amount of data processed per second. */\n  bitrate: number;\n  /** The codec profile used for encoding the audio data, indicating specific settings and capabilities */\n  codecProfile: string;\n  /** The tool or software used to encode or process the audio file */\n  tool: string;\n  /** The duration of the audio file in seconds */\n  duration: number;\n  /** The title of the audio file or track */\n  title: string;\n  /** The name of the artist or band who performed the audio track. */\n  artist: string;\n  /** The name of the album that the audio track belongs to */\n  album: string;\n  /** The year the audio track was release */\n  year: number;\n  /** The genre of the audio track */\n  genre: string;\n  /** The music label or company that released the audio trac */\n  label: string;\n}\n\n/**\n * Interface representing the basic functionality for a file management controller.\n */\nexport interface BasicFileController {\n  /**\n   * Handles the uploading of a file, saving it to the system, and optionally marking it as public.\n   * @param file - The file to be uploaded.\n   * @param isPublic - A string indicating whether the file should be public (\"true\") or private (\"false\").\n   * @returns A promise that resolves to the saved file entity.\n   */\n  createFile(file: Express.Multer.File, isPublic: string): Promise;\n\n  /**\n   * Retrieves a private file by its ID and sends it as a response.\n   * @param res - The HTTP response object used to send the file.\n   * @param id - The ID of the file to be retrieved.\n   * @returns A promise that resolves when the file is sent.\n   */\n  getPrivateFile(res: Response, id: number): Promise;\n\n  /**\n   * Retrieves a public file by its ID.\n   * @param id - The ID of the file to be retrieved.\n   * @returns A promise that resolves to the retrieved file entity.\n   */\n  getFile(id: number): Promise;\n\n  /**\n   * Removes a file by its ID from the system.\n   * @param id - The ID of the file to be removed.\n   * @returns A promise that resolves to the removed file entity.\n   */\n  removeFile(id: number): Promise;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/IccFileMetadataEntity.html":{"url":"entities/IccFileMetadataEntity.html","title":"entity - IccFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  IccFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/icc-file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the ICC metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                connectionSpace\n                            \n                            \n                                    \n                                    \n                                deviceManufacturer\n                            \n                            \n                                    \n                                    \n                                deviceModelNumber\n                            \n                            \n                                    \n                                    \n                                iccCopyright\n                            \n                            \n                                    \n                                    \n                                iccDescription\n                            \n                            \n                                    \n                                    \n                                iccProfileDate\n                            \n                            \n                                    \n                                    \n                                iccSignature\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                primaryPlatform\n                            \n                            \n                                    \n                                    \n                                profileClassName\n                            \n                            \n                                    \n                                    \n                                profileClassValue\n                            \n                            \n                                    \n                                    \n                                profileCreator\n                            \n                            \n                                    \n                                    \n                                profileVersion\n                            \n                            \n                                    \n                                    \n                                renderingIntentName\n                            \n                            \n                                    \n                                    \n                                renderingIntentValue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        connectionSpace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'connection_space', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deviceManufacturer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'device_manufacturer', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deviceModelNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'device_model_number', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        iccCopyright\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'icc_copyright', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        iccDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'icc_description', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        iccProfileDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('date', {name: 'icc_profile_date', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        iccSignature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'icc_signature', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        primaryPlatform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'primary_platform', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profileClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'profile_class_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profileClassValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'profile_class_value', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profileCreator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'profile_creator', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profileVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'profile_version', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        renderingIntentName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'rendering_intent_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        renderingIntentValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'rendering_intent_value', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { IccFileMetadata } from \"../file.types\";\n\n/**\n * The entity stores the ICC metadata of the file\n */\n@Entity(\"file_metadata_icc\")\nexport class IccFileMetadataEntity implements IccFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"varchar\", { name: \"profile_version\", nullable: true })\n  profileVersion: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"profile_class_value\", nullable: true })\n  profileClassValue: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"profile_class_name\", nullable: true })\n  profileClassName: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"connection_space\", nullable: true })\n  connectionSpace: string;\n\n  @Index()\n  @Column(\"date\", { name: \"icc_profile_date\", nullable: true })\n  iccProfileDate: Date;\n\n  @Index()\n  @Column(\"varchar\", { name: \"icc_signature\", nullable: true })\n  iccSignature: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"primary_platform\", nullable: true })\n  primaryPlatform: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"device_manufacturer\", nullable: true })\n  deviceManufacturer: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"device_model_number\", nullable: true })\n  deviceModelNumber: string;\n\n  @Index()\n  @Column(\"int\", { name: \"rendering_intent_value\", nullable: true })\n  renderingIntentValue: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"rendering_intent_name\", nullable: true })\n  renderingIntentName: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"profile_creator\", nullable: true })\n  profileCreator: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"icc_description\", nullable: true })\n  iccDescription: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"icc_copyright\", nullable: true })\n  iccCopyright: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageFileMetadata.html":{"url":"interfaces/ImageFileMetadata.html","title":"interface - ImageFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ImageFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing image file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bitDepth\n                                        \n                                \n                                \n                                        \n                                            bps\n                                        \n                                \n                                \n                                        \n                                            colorComponents\n                                        \n                                \n                                \n                                        \n                                            colorType\n                                        \n                                \n                                \n                                        \n                                            compression\n                                        \n                                \n                                \n                                        \n                                            dateTime\n                                        \n                                \n                                \n                                        \n                                            filter\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interlace\n                                        \n                                \n                                \n                                        \n                                            subsampling\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bitDepth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bitDepth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The bit depth of the image, indicating the number of bits used for color representation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bps:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of bits used to represent the color of a single pixel in the image\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorComponents\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorComponents:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of color components used to represent the color of the image\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The color type of the image, indicating the color model used\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        compression\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        compression:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contains the compression method used to reduce the size of the image\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The date and time when the image was created or last modified\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Specifies the filtering method used to process the image data before compressing it\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The height of the image in pixels\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the identification number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interlace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interlace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates whether interlacing is used in the image, allowing for progressive display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subsampling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subsampling:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The subsampling method used for the image, indicating how color information is sampled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The width of the image in pixels\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  /** This field contains the identification number */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file */\n  name: string;\n  /** This field stores the path to the file on the server */\n  path: string;\n  /** This field specifies the type of access to the file, public or private */\n  public: boolean;\n  /** This field stores the size of the file in bytes */\n  size: number;\n  /** This field stores the icon of the file */\n  icon: Media;\n  /** This field stores the media preview of the file  */\n  preview: Media;\n  /** This field contains a reference to the FileMetadata container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The MIME type of the file, indicating the nature and format of the file content */\n  mime: string;\n  /** The file extension, indicating the file format */\n  ext: string;\n  /** The cryptographic hash of the file content, used for integrity verification and identification */\n  hash: string;\n  /** The ICC (International Color Consortium) profile data associated with the file, used for color management */\n  icc: IccFileMetadata;\n  /** GPS data associated with the location where the file was created, including latitude, longitude and elevation */\n  gps: GpsFileMetadata;\n  /** This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics */\n  image: ImageFileMetadata;\n  /** This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created */\n  exif: ExifFileMetadata;\n  /** This field is used to store information about the structure and properties of the audio file */\n  audio: AudioFileMetadata;\n  /** This field is used to store information about the structure and properties of the video recording*/\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The number of bits used to represent the color of a single pixel in the image */\n  bps: number;\n  /** The width of the image in pixels */\n  width: number;\n  /** The height of the image in pixels */\n  height: number;\n  /** The number of color components used to represent the color of the image */\n  colorComponents: number;\n  /** The subsampling method used for the image, indicating how color information is sampled */\n  subsampling: string;\n  /** The date and time when the image was created or last modified */\n  dateTime: Date;\n  /** The bit depth of the image, indicating the number of bits used for color representation */\n  bitDepth: number;\n  /** The color type of the image, indicating the color model used */\n  colorType: string;\n  /** Contains the compression method used to reduce the size of the image */\n  compression: string;\n  /** Specifies the filtering method used to process the image data before compressing it */\n  filter: string;\n  /**  Indicates whether interlacing is used in the image, allowing for progressive display */\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The version of the ICC profile, indicating the specification version used to create the color profile. */\n  profileVersion: string;\n  /** The class of the ICC profile, indicating its primary purpose and type */\n  profileClassValue: string;\n  /** The name of the ICC profile class, describing its primary purpose */\n  profileClassName: string;\n  /** The connection space of the ICC profile, representing the intermediate color space used for color conversions. */\n  connectionSpace: string;\n  /** The date and time when the ICC profile was created or last modified */\n  iccProfileDate: Date;\n  /** A unique signature of the ICC profile used to confirm its authenticity and validity */\n  iccSignature: string;\n  /** The primary platform or operating system for which the ICC profile was created or optimized */\n  primaryPlatform: string;\n  /** The manufacturer of the device for which the ICC profile was created */\n  deviceManufacturer: string;\n  /** The model number of the device for which the ICC profile was created */\n  deviceModelNumber: string;\n  /**  Indicates the type of rendering to be used when converting colors between color spaces */\n  renderingIntentValue: string;\n  /** Specifies the name of the rendering type that is used when converting colors between color spaces */\n  renderingIntentName: string;\n  /** The name or identifier of the creator of the ICC profile */\n  profileCreator: string;\n  /** A description of the ICC profile, explaining its purpose and characteristics */\n  iccDescription: string;\n  /** The copyright information for the ICC profile, indicating ownership and usage rights */\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** This field specifies the manufacturer of the camera */\n  make: string;\n  /** This field specifies the model of the camera  */\n  model: string;\n  /** Indicates image display orientation based on EXIF metadata */\n  orientation: string;\n  /** X-side resolution of the photo*/\n  resolutionX: string;\n  /** Y-side resolution of the photo*/\n  resolutionY: string;\n  /** Unit of image resolution */\n  resolutionUnit: string;\n  /** The field contains information about the software that was used to create or edit the image */\n  software: string;\n  /** This field is responsible for specifying the method of placing these color components Y, Cb and Cr relative to the image pixels */\n  ycbCrPositioning: string;\n  /** Pointer to the beginning of an EXIF IFD block in a file inside a TIFF file */\n  exifIfdPointer: string;\n  /** Contains information about the location where the image was taken */\n  gpsInfoIfdPointer: string;\n  /** Exposure time (shutter speed) when capturing an image */\n  exposureTime: string;\n  /** Contains data on the aperture number (aperture) when capturing an image */\n  fNumber: string;\n  /** Contains data on the exposure mode (shutter speed and aperture) used to capture the image */\n  exposureProgram: string;\n  /** Contains data on the ISO value (the sensitivity of the camera sensor to light) */\n  isoSpeedRatings: string;\n  /** Contains EXIF specification version data */\n  exifVersion: string;\n  /** Contains time offset data relative to UTC (Coordinated Universal Time) for the date and time when the image was taken */\n  offsetTime: string;\n  /** Contains data on the shutter speed of the camera */\n  shutterSpeedValue: string;\n  /** Contains data on the aperture (aperture) value used to capture the image */\n  aperture: string;\n  /** Contains data on the brightness level of the image */\n  brightness: string;\n  /** Contains exposure compensation data  */\n  exposureBias: string;\n  /** Contains data on the maximum aperture (aperture) value  */\n  maxAperture: string;\n  /** Contains data on the distance to the subject in millimeters */\n  subjectDistance: string;\n  /** Contains data on the light sensing mode used by the camera when capturing an image */\n  meteringMode: string;\n  /** Contains data on the status and operation of the flash during image capture */\n  flash: string;\n  /** Contains data about the focal length of the camera lens */\n  focalLength: string;\n  /** The Flashpix format version used for the image */\n  flashpixVersion: string;\n  /** The color space of the image data */\n  colorSpace: string;\n  /** Width (horizontal resolution) of the image in pixels */\n  pixelXDimension: string;\n  /** Contains data about the vertical resolution (height) of the image in pixels */\n  pixelYDimension: string;\n  /** Pointer to the start of the Interoperability IFD block for compatibility metadata */\n  interoperabilityIfdPointer: string;\n  /** Indicates the method used by the camera sensor to capture the image */\n  sensingMethod: string;\n  /** The type of scene captured in the image, indicating if it was taken with a digital camera */\n  sceneType: string;\n  /** Indicates whether the image was processed with custom rendering */\n  customRendered: string;\n  /** The exposure mode used by the camera during the shot */\n  exposureMode: string;\n  /** The white balance setting used during the shot */\n  whiteBalance: string;\n  /** The digital zoom ratio applied during the shot */\n  digitalZoomRatio: string;\n  /** The type of scene capture mode used during the shot */\n  sceneCaptureType: string;\n  /** The level of contrast applied to the image */\n  contrast: string;\n  /** The level of color saturation applied to the image */\n  saturation: string;\n  /** The level of sharpness applied to the image */\n  sharpness: string;\n  /** The distance range to the subject during the shot */\n  subjectDistanceRange: string;\n  /** The manufacturer of the lens used to capture the image */\n  lensMake: string;\n  /** The model of the lens used to capture the image */\n  lensModel: string;\n  /** Indicates whether the image is a composite, created by combining multiple images or applying effects */\n  compositeImage: string;\n  /** The interoperability index indicating the standard used for ensuring image compatibility */\n  interoperabilityIndex: string;\n  /** The version of the interoperability standard used for the image */\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  /** Representing identifier of meta-data object */\n  id: number;\n  /** Representing gps-latitude parameter */\n  latitude: number;\n  /** Representing gps-longitude parameter */\n  longitude: number;\n  /** Representing gps-altitude parameter */\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** A codec ( algorithm or method ) used to compress and decompress a video file */\n  codec: string;\n  /** The container format of the video file, indicating how video, audio, and other data streams are packaged together */\n  container: string;\n  /** The width of the video in pixels */\n  width: number;\n  /** The height of the video in pixels */\n  height: number;\n  /**  The bitrate of the video file, indicating the amount of data processed per second */\n  bitrate: number;\n  /** The duration of the video file in seconds */\n  duration: number;\n  /** A sample video aspect ratio indicating how pixels are distributed in a video stream */\n  sampleAspectRatio: string;\n  /** The display aspect ratio of the video, indicating the ratio of width to height for playback.*/\n  displayAspectRatio: string;\n  /** Video color range, indicating the set of colors used in the video file */\n  colorRange: string;\n  /** The color space of the video, indicating how colors are represented and interpreted */\n  colorSpace: string;\n  /** The frame rate of the video, indicating the number of frames displayed per second */\n  frameRate: string;\n  /** The rotation angle of the video in degrees, indicating its orientation */\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The format of the audio file container, which encapsulates audio streams and metadata */\n  container: string;\n  /** The audio codec used for encoding or decoding the audio data */\n  codec: string;\n  /** The sample rate of the audio file, indicating the number of samples per second */\n  sampleRate: number;\n  /**  The number of audio channels in the file, indicating the sound configuration (e.g., mono, stereo) */\n  numberOfChannels: number;\n  /**  The bitrate of the audio file, indicating the amount of data processed per second. */\n  bitrate: number;\n  /** The codec profile used for encoding the audio data, indicating specific settings and capabilities */\n  codecProfile: string;\n  /** The tool or software used to encode or process the audio file */\n  tool: string;\n  /** The duration of the audio file in seconds */\n  duration: number;\n  /** The title of the audio file or track */\n  title: string;\n  /** The name of the artist or band who performed the audio track. */\n  artist: string;\n  /** The name of the album that the audio track belongs to */\n  album: string;\n  /** The year the audio track was release */\n  year: number;\n  /** The genre of the audio track */\n  genre: string;\n  /** The music label or company that released the audio trac */\n  label: string;\n}\n\n/**\n * Interface representing the basic functionality for a file management controller.\n */\nexport interface BasicFileController {\n  /**\n   * Handles the uploading of a file, saving it to the system, and optionally marking it as public.\n   * @param file - The file to be uploaded.\n   * @param isPublic - A string indicating whether the file should be public (\"true\") or private (\"false\").\n   * @returns A promise that resolves to the saved file entity.\n   */\n  createFile(file: Express.Multer.File, isPublic: string): Promise;\n\n  /**\n   * Retrieves a private file by its ID and sends it as a response.\n   * @param res - The HTTP response object used to send the file.\n   * @param id - The ID of the file to be retrieved.\n   * @returns A promise that resolves when the file is sent.\n   */\n  getPrivateFile(res: Response, id: number): Promise;\n\n  /**\n   * Retrieves a public file by its ID.\n   * @param id - The ID of the file to be retrieved.\n   * @returns A promise that resolves to the retrieved file entity.\n   */\n  getFile(id: number): Promise;\n\n  /**\n   * Removes a file by its ID from the system.\n   * @param id - The ID of the file to be removed.\n   * @returns A promise that resolves to the removed file entity.\n   */\n  removeFile(id: number): Promise;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ImageFileMetadataEntity.html":{"url":"entities/ImageFileMetadataEntity.html","title":"entity - ImageFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ImageFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/image-file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the image metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                bitDepth\n                            \n                            \n                                    \n                                    \n                                bps\n                            \n                            \n                                    \n                                    \n                                colorComponents\n                            \n                            \n                                    \n                                    \n                                colorType\n                            \n                            \n                                    \n                                    \n                                compression\n                            \n                            \n                                    \n                                    \n                                dateTime\n                            \n                            \n                                    \n                                    \n                                filter\n                            \n                            \n                                    \n                                    \n                                height\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                interlace\n                            \n                            \n                                    \n                                    \n                                subsampling\n                            \n                            \n                                    \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bitDepth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bps\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        colorComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'color_components', nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        colorType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        compression\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('date', {name: 'date_time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        interlace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        subsampling\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { ImageFileMetadata } from \"../file.types\";\n\n/**\n * The entity stores the image metadata of the file\n */\n@Entity(\"file_metadata_image\")\nexport class ImageFileMetadataEntity implements ImageFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  bps: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  width: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  height: number;\n\n  @Index()\n  @Column(\"int\", { name: \"color_components\", nullable: true, default: null })\n  colorComponents: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  subsampling: string;\n\n  @Index()\n  @Column(\"date\", { name: \"date_time\", nullable: true })\n  dateTime: Date;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  bitDepth: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  colorType: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  compression: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  filter: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  interlace: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidTokenMsException.html":{"url":"classes/InvalidTokenMsException.html","title":"class - InvalidTokenMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidTokenMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/invalid-token-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for invalid token, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/invalid-token-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for invalid token, extending MsException.\n */\nexport class InvalidTokenMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.UNAUTHORIZED, message || \"Invalid token\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtDto.html":{"url":"classes/JwtDto.html","title":"class - JwtDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for JWT tokens.\nContains access and refresh tokens along with their expiration dates and user information.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessToken\n                            \n                            \n                                    \n                                atExp\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                rtExp\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:104\n                        \n                    \n\n            \n                \n                    The access token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        atExp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform(TransformUtils.dateToTime)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:116\n                        \n                    \n\n            \n                \n                    The expiration date of the access token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:110\n                        \n                    \n\n            \n                \n                    The refresh token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rtExp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform(TransformUtils.dateToTime)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:122\n                        \n                    \n\n            \n                \n                    The expiration date of the refresh token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:98\n                        \n                    \n\n            \n                \n                    The user-data object.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIP, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\nimport { Expose, Transform, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common\";\nimport { UserDto } from \"../user/user.types\";\nimport { TransformUtils } from \"../../shared/utils/transform.utils\";\nimport { AuthService } from \"./auth.constants\";\nimport { Request, Response } from \"express\";\n\n/**\n * Data transfer object for login payload.\n * Contains user login information required for authentication.\n */\nexport class LoginPayload {\n  /**\n   * The login of the user.\n   * @example ```typescript\n   * \"admin\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  login: string;\n\n  /**\n   * The password of the user.\n   * @example ```typescript\n   * \"P@ssw0rd!\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  /**\n   * The IP address of the user.\n   * Optional.\n   * @example ```typescript\n   * \"192.168.0.1\"\n   */\n  @IsIP()\n  @IsOptional()\n  ipAddress: string;\n\n  /**\n   * The ID of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaId?: string;\n\n  /**\n   * The payload of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaPayload?: string;\n}\n\n/**\n * Data transfer object for token exchange payload.\n * Contains the token to be exchanged for a new token pair JwtDto.\n */\nexport class ExchangeTokenPayload {\n  /**\n   * The refresh token to be exchanged.\n   */\n  @IsString()\n  @IsOptional()\n  token: string;\n}\n\n/**\n * Data transfer object for JWT tokens.\n * Contains access and refresh tokens along with their expiration dates and user information.\n */\nexport class JwtDto {\n  /**\n   * The user-data object.\n   */\n  @Expose()\n  @Type(() => UserDto)\n  user: UserDto;\n\n  /**\n   * The access token.\n   */\n  @Expose()\n  accessToken: string;\n\n  /**\n   * The refresh token.\n   */\n  @Expose()\n  refreshToken: string;\n\n  /**\n   * The expiration date of the access token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  atExp: Date;\n\n  /**\n   * The expiration date of the refresh token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  rtExp: Date;\n}\n\n/**\n * Interface representing the basic functionality for an authentication controller.\n */\nexport interface BasicAuthController {\n  /**\n   * Handles user login by validating the provided credentials, generating JWT tokens,\n   * and setting them as HTTP-only cookies.\n   * @param payload - The login credentials, including username, password, and optional captcha data.\n   * @param request - The incoming HTTP request object.\n   * @param response - The HTTP response object where cookies will be set.\n   * @returns A promise that resolves to a JWT data transfer object containing access and refresh tokens.\n   */\n  login(\n    payload: LoginPayload,\n    request: Request,\n    response: Response,\n  ): Promise;\n\n  /**\n   * Logs out the user by invalidating the provided access token and clearing related cookies.\n   * @param token - The JWT access token that needs to be invalidated.\n   * @param response - The HTTP response object where cookies will be cleared.\n   * @returns A promise that resolves to an object indicating the result of the logout operation.\n   */\n  logout(token: string, response: Response): Promise;\n\n  /**\n   * Exchanges a refresh token for a new set of access and refresh tokens.\n   * The new tokens are set as HTTP-only cookies.\n   * @param payload - The payload containing the refresh token to be exchanged.\n   * @param request - The incoming HTTP request object.\n   * @param response - The HTTP response object where new cookies will be set.\n   * @returns A promise that resolves to a partial JWT data transfer object containing the new tokens.\n   */\n  exchange(\n    payload: ExchangeTokenPayload,\n    request: Request,\n    response: Response,\n  ): Promise>;\n}\n\n/**\n * Options for configuring the authentication module.\n * @property service - The authentication service class.\n */\nexport type AuthModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Language.html":{"url":"interfaces/Language.html","title":"interface - Language","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Language\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface represents a language entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Media } from \"../../../common/media/media.types\";\n\n/**\n * Interface represents a language entity.\n */\nexport interface Language {\n  id: string;\n  name: string;\n  icon: Media;\n}\n/**\n * Interface represents a localized string entity.\n */\nexport interface LocalizedString {\n  id: number;\n  code: string;\n  lang: Language;\n  value: string;\n}\n\n/**\n * Interface represents a localized media entity.\n */\nexport interface LocalizedMedia {\n  id: number;\n  code: string;\n  lang: Language;\n  value: Media;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/LanguageEntity.html":{"url":"entities/LanguageEntity.html","title":"entity - LanguageEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  LanguageEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/entity/language.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the system languages\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/language.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/language.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/language.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/language.entity.ts:36\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Column, Entity, Index, ManyToOne, PrimaryColumn } from \"typeorm\";\nimport { MediaEntity } from \"../../../../common/media/entity/media.entity\";\nimport { Language } from \"../locale.types\";\n\n/**\n * The entity stores the system languages\n */\n@Entity(\"languages\")\nexport class LanguageEntity implements Language {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  id: string;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  name: string;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  icon: MediaEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LiteAuthGuard.html":{"url":"injectables/LiteAuthGuard.html","title":"injectable - LiteAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LiteAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/guards/lite-auth.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                An authentication guard that extends AbstractAuthGuard, used for lightweight authentication without user fetching.\n\n            \n\n            \n                Extends\n            \n            \n                            AbstractAuthGuard\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                fetchUser\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, userService: UserService, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/guards/lite-auth.guard.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        fetchUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in lib/shared/guards/lite-auth.guard.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { AbstractAuthGuard } from \"./abstract-auth.guard\";\nimport { LOGGER } from \"../modules/log/log.constants\";\nimport { UserService } from \"../../common/user/user.types\";\nimport { CacheService } from \"../modules/cache/cache.types\";\n\n/**\n * An authentication guard that extends AbstractAuthGuard, used for lightweight authentication without user fetching.\n */\n@Injectable()\nexport class LiteAuthGuard extends AbstractAuthGuard {\n  protected fetchUser = false;\n\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    protected readonly userService: UserService,\n    protected readonly cacheService: CacheService,\n  ) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocaleModule.html":{"url":"modules/LocaleModule.html","title":"module - LocaleModule","body":"\n                   \n\n\n\n\n    Modules\n    LocaleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocaleModule\n\n\n\ncluster_LocaleModule_exports\n\n\n\ncluster_LocaleModule_providers\n\n\n\n\nLocaleService \n\nLocaleService \n\n\n\nLocaleModule\n\nLocaleModule\n\nLocaleService  -->\n\nLocaleModule->LocaleService \n\n\n\n\n\nLocaleService\n\nLocaleService\n\nLocaleModule -->\n\nLocaleService->LocaleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides services and configurations for handling localization.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LocaleService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LocaleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { LanguageEntity } from \"./entity/language.entity\";\nimport { LocalizedStringEntity } from \"./entity/localized-string.entity\";\nimport { LocalizedMediaEntity } from \"./entity/localized-media.entity\";\nimport { LocaleService } from \"./locale.service\";\n\n/**\n * A module that provides services and configurations for handling localization.\n */\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      LanguageEntity,\n      LocalizedStringEntity,\n      LocalizedMediaEntity,\n    ]),\n  ],\n  providers: [LocaleService],\n  exports: [LocaleService],\n})\nexport class LocaleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocaleService.html":{"url":"injectables/LocaleService.html","title":"injectable - LocaleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocaleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for handling localization operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLocalizedStrings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(languageRep: Repository, localizedStringRep: Repository, localizedMediaRep: Repository)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/locale/locale.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        languageRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localizedStringRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localizedMediaRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createLocalizedStrings\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLocalizedStrings(value: string, code?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/locale/locale.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Creates localized strings for all available languages.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to be localized.\n\n\n                                            \n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nAn optional code to be used for the localized strings.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to an array of LocalizedStringEntity objects.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { LanguageEntity } from \"./entity/language.entity\";\nimport { LocalizedStringEntity } from \"./entity/localized-string.entity\";\nimport { LocalizedMediaEntity } from \"./entity/localized-media.entity\";\n\n/**\n * Service for handling localization operations.\n */\n@Injectable()\nexport class LocaleService {\n  constructor(\n    @InjectRepository(LanguageEntity)\n    private readonly languageRep: Repository,\n    @InjectRepository(LocalizedStringEntity)\n    private readonly localizedStringRep: Repository,\n    @InjectRepository(LocalizedMediaEntity)\n    private readonly localizedMediaRep: Repository,\n  ) {}\n\n  /**\n   * Creates localized strings for all available languages.\n   * @param value - The value to be localized.\n   * @param code - An optional code to be used for the localized strings.\n   * @returns A promise that resolves to an array of LocalizedStringEntity objects.\n   */\n  async createLocalizedStrings(\n    value: string,\n    code?: string,\n  ): Promise {\n    const languages = await this.languageRep.find();\n    const res: LocalizedStringEntity[] = [];\n    for (const language of languages) {\n      const ls = new LocalizedStringEntity();\n      ls.lang = language;\n      ls.value = value;\n      if (code) {\n        ls.code = `${code}_${language.id}`;\n        const existed = await this.localizedStringRep.findOne({\n          where: { code: ls.code },\n        });\n        ls.id = existed?.id;\n      }\n      await this.localizedStringRep.save(ls);\n      res.push(ls);\n    }\n    return res;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocaleSubscriber.html":{"url":"injectables/LocaleSubscriber.html","title":"injectable - LocaleSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocaleSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/entity/locale-subscriber.ts\n        \n\n\n            \n                Description\n            \n            \n                LocaleSubscriber is an EntitySubscriber that listens to removal events\nfor entities that have relationships with LocalizedStringEntity or LocalizedMediaEntity.\nWhen such an entity is removed, LocaleSubscriber will also remove\nthe associated LocalizedStringEntity or LocalizedMediaEntity instances.\nExample :class MyEntity {\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  firstName: LocalizedStringEntity[];\n}const myEntity = new MyEntity();\nentityManager.remove(myEntity); // will trigger LocaleSubscriber to remove related LocalizedStringEntity instances\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                afterRemove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/locale/entity/locale-subscriber.ts:47\n                            \n                        \n\n                \n                    \n                            Constructs a new LocaleSubscriber instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Logger instance used for logging messages.\n\n\n                                                        \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe DataSource instance used to access the connection and its subscribers.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        afterRemove\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterRemove(event: RemoveEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/locale/entity/locale-subscriber.ts:69\n                        \n                    \n\n\n            \n                \n                        The afterRemove event is triggered when an entity is removed.\nIf the removed entity has relationships with LocalizedStringEntity instances,\nthe related LocalizedStringEntity instances will also be removed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        RemoveEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe RemoveEvent instance containing information about the removed entity.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves when the removal of related LocalizedStringEntity instances is complete.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  DataSource,\n  EntitySubscriberInterface,\n  EventSubscriber,\n  RemoveEvent,\n} from \"typeorm\";\nimport { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { InjectDataSource } from \"@nestjs/typeorm\";\nimport { LOGGER } from \"../../log/log.constants\";\nimport { LocalizedStringEntity } from \"./localized-string.entity\";\nimport { LocalizedMediaEntity } from \"./localized-media.entity\";\n\n/**\n * LocaleSubscriber is an EntitySubscriber that listens to removal events\n * for entities that have relationships with LocalizedStringEntity or LocalizedMediaEntity.\n * When such an entity is removed, LocaleSubscriber will also remove\n * the associated LocalizedStringEntity or LocalizedMediaEntity instances.\n *\n * @example\n * class MyEntity {\n *   @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n *   @JoinTable()\n *   firstName: LocalizedStringEntity[];\n * }\n *\n * const myEntity = new MyEntity();\n * entityManager.remove(myEntity); // will trigger LocaleSubscriber to remove related LocalizedStringEntity instances\n */\n@Injectable()\n@EventSubscriber()\nexport class LocaleSubscriber implements EntitySubscriberInterface {\n  /**\n   * Constructs a new LocaleSubscriber instance.\n   *\n   * @param logger - The Logger instance used for logging messages.\n   * @param dataSource - The DataSource instance used to access the connection and its subscribers.\n   */\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    @InjectDataSource() private readonly dataSource: DataSource,\n  ) {\n    dataSource.manager.connection.subscribers.push(this);\n  }\n\n  /**\n   * The afterRemove event is triggered when an entity is removed.\n   * If the removed entity has relationships with LocalizedStringEntity instances,\n   * the related LocalizedStringEntity instances will also be removed.\n   *\n   * @param event - The RemoveEvent instance containing information about the removed entity.\n   * @returns A Promise that resolves when the removal of related LocalizedStringEntity instances is complete.\n   */\n  async afterRemove(event: RemoveEvent): Promise {\n    const entity = event.entity;\n    if (!entity) {\n      return;\n    }\n    const localizedStringProperties = Object.values(entity).filter((value) => {\n      return (\n        Array.isArray(value) &&\n        value.length > 0 &&\n        value[0] instanceof LocalizedStringEntity\n      );\n    });\n    if (localizedStringProperties.length > 0) {\n      this.logger.verbose(\n        `Removing related LocalizedStringEntity entities for ${entity.constructor.name} with ID ${event.entityId}`,\n      );\n      for (const relatedEntities of localizedStringProperties as LocalizedStringEntity[][]) {\n        for (const relatedEntity of relatedEntities) {\n          this.logger.verbose(\n            `Removing LocalizedStringEntity with ID ${relatedEntity.id}`,\n          );\n          await event.manager.remove(relatedEntity);\n          this.logger.verbose(\n            `LocalizedStringEntity with ID ${relatedEntity.id} removed`,\n          );\n        }\n      }\n    }\n\n    const localizedMediaProperties = Object.values(entity).filter((value) => {\n      return (\n        Array.isArray(value) &&\n        value.length > 0 &&\n        value[0] instanceof LocalizedMediaEntity\n      );\n    });\n    if (localizedMediaProperties.length > 0) {\n      this.logger.verbose(\n        `Removing related LocalizedMediaEntity entities for ${entity.constructor.name} with ID ${event.entityId}`,\n      );\n      for (const relatedEntities of localizedMediaProperties as LocalizedMediaEntity[][]) {\n        for (const relatedEntity of relatedEntities) {\n          this.logger.verbose(\n            `Removing LocalizedMediaEntity with ID ${relatedEntity.id}`,\n          );\n          await event.manager.remove(relatedEntity);\n          this.logger.verbose(\n            `LocalizedMediaEntity with ID ${relatedEntity.id} removed`,\n          );\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalizedMedia.html":{"url":"interfaces/LocalizedMedia.html","title":"interface - LocalizedMedia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LocalizedMedia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface represents a localized media entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lang\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lang:         Language\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Language\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Media } from \"../../../common/media/media.types\";\n\n/**\n * Interface represents a language entity.\n */\nexport interface Language {\n  id: string;\n  name: string;\n  icon: Media;\n}\n/**\n * Interface represents a localized string entity.\n */\nexport interface LocalizedString {\n  id: number;\n  code: string;\n  lang: Language;\n  value: string;\n}\n\n/**\n * Interface represents a localized media entity.\n */\nexport interface LocalizedMedia {\n  id: number;\n  code: string;\n  lang: Language;\n  value: Media;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/LocalizedMediaEntity.html":{"url":"entities/LocalizedMediaEntity.html","title":"entity - LocalizedMediaEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  LocalizedMediaEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/entity/localized-media.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores internationalized media objects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lang\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-media.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-media.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LanguageEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-media.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-media.entity.ts:44\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { LocalizedMedia } from \"../locale.types\";\nimport { LanguageEntity } from \"./language.entity\";\nimport { MediaEntity } from \"../../../../common/media/entity/media.entity\";\n\n/**\n * The entity stores internationalized media objects\n */\n@Entity(\"localized_medias\")\nexport class LocalizedMediaEntity implements LocalizedMedia {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: false })\n  code: string;\n\n  @ManyToOne(() => LanguageEntity, (t) => t.id)\n  lang: LanguageEntity;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  value: MediaEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalizedString.html":{"url":"interfaces/LocalizedString.html","title":"interface - LocalizedString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LocalizedString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface represents a localized string entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lang\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lang:         Language\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Language\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Media } from \"../../../common/media/media.types\";\n\n/**\n * Interface represents a language entity.\n */\nexport interface Language {\n  id: string;\n  name: string;\n  icon: Media;\n}\n/**\n * Interface represents a localized string entity.\n */\nexport interface LocalizedString {\n  id: number;\n  code: string;\n  lang: Language;\n  value: string;\n}\n\n/**\n * Interface represents a localized media entity.\n */\nexport interface LocalizedMedia {\n  id: number;\n  code: string;\n  lang: Language;\n  value: Media;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/LocalizedStringEntity.html":{"url":"entities/LocalizedStringEntity.html","title":"entity - LocalizedStringEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  LocalizedStringEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/entity/localized-string.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the translations in itself\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lang\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-string.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-string.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LanguageEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-string.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-string.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { LocalizedString } from \"../locale.types\";\nimport { LanguageEntity } from \"./language.entity\";\n\n/**\n * The entity stores the translations in itself\n */\n@Entity(\"localized_strings\")\nexport class LocalizedStringEntity implements LocalizedString {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @ManyToOne(() => LanguageEntity, (t) => t.id)\n  lang: LanguageEntity;\n\n  @Column(\"text\", { nullable: true })\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LogModule.html":{"url":"modules/LogModule.html","title":"module - LogModule","body":"\n                   \n\n\n\n\n    Modules\n    LogModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/log/log.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides logging functionality using the LogService.\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { LogService } from \"./log.service\";\nimport { LOGGER } from \"./log.constants\";\n\n/**\n * A module that provides logging functionality using the LogService.\n */\n@Module({\n  providers: [\n    {\n      provide: LOGGER,\n      useClass: LogService,\n    },\n  ],\n  exports: [LOGGER],\n})\nexport class LogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogService.html":{"url":"classes/LogService.html","title":"class - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/log/log.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Log service that extends the built-in Nest Logger, providing additional functionality and context.\n\n            \n\n            \n                Extends\n            \n            \n                        Logger\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                    Private\n                                getCallingContext\n                            \n                            \n                                log\n                            \n                            \n                                    Private\n                                patchFromCtx\n                            \n                            \n                                    Private\n                                prepareMessage\n                            \n                            \n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:54\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Logs a debug message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe debug message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAdditional data to log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string, trace?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Logs an error message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error message.\n\n\n                                            \n                                        \n                                        \n                                                trace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional stack trace.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getCallingContext\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCallingContext()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:100\n                        \n                    \n\n\n            \n                \n                        Retrieves the calling context (file path, method name, line number) from the stack trace.\n\n\n                        \n                            Returns :     { filePath: any; methodName: any; lineNumber: any; }\n\n                        \n                            \n                                An object containing the file path, method name, and line number.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:14\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Logs a message at the log level.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message to log.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAdditional data to log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        patchFromCtx\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchFromCtx(ctx: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Patches the calling context for display in log messages.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe calling context object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A formatted string representing the calling context.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        prepareMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    prepareMessage(message: string, data?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:82\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Prepares the log message by combining the main message with additional data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe main log message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nAdditional data to log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The prepared log message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:44\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Logs a verbose message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe verbose message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAdditional data to log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:34\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Logs a warning message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe warning message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAdditional data to log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from \"@nestjs/common\";\nimport { ObjectUtils } from \"../../utils/object.utils\";\nimport inspect = ObjectUtils.inspect;\n\n/**\n * Log service that extends the built-in Nest Logger, providing additional functionality and context.\n */\nexport class LogService extends Logger {\n  /**\n   * Logs a message at the log level.\n   * @param message - The message to log.\n   * @param data - Additional data to log.\n   */\n  log(message: string, data: T) {\n    const ctx = this.getCallingContext();\n    super.log(this.prepareMessage(message, data), ctx.methodName);\n  }\n\n  /**\n   * Logs an error message.\n   * @param message - The error message.\n   * @param trace - Optional stack trace.\n   */\n  error(message: string, trace?: string) {\n    const ctx = this.getCallingContext();\n    super.error(this.prepareMessage(message), trace, this.patchFromCtx(ctx));\n  }\n\n  /**\n   * Logs a warning message.\n   * @param message - The warning message.\n   * @param data - Additional data to log.\n   */\n  warn(message: string, data: T) {\n    const ctx = this.getCallingContext();\n    super.warn(this.prepareMessage(message, data), this.patchFromCtx(ctx));\n  }\n\n  /**\n   * Logs a verbose message.\n   * @param message - The verbose message.\n   * @param data - Additional data to log.\n   */\n  verbose(message: string, data: T) {\n    const ctx = this.getCallingContext();\n    super.verbose(this.prepareMessage(message, data), this.patchFromCtx(ctx));\n  }\n\n  /**\n   * Logs a debug message.\n   * @param message - The debug message.\n   * @param data - Additional data to log.\n   */\n  debug(message: string, data: T) {\n    const ctx = this.getCallingContext();\n    super.debug(this.prepareMessage(message, data), this.patchFromCtx(ctx));\n  }\n\n  /**\n   * Patches the calling context for display in log messages.\n   * @param ctx - The calling context object.\n   * @returns A formatted string representing the calling context.\n   */\n  private patchFromCtx(ctx: {\n    filePath: string;\n    methodName: string;\n    lineNumber: string;\n  }) {\n    let p = `${ctx?.filePath}:${ctx?.lineNumber} > ${ctx?.methodName}`;\n    if (p === \"undefined:undefined > undefined\") {\n      p = \"unknown\";\n    }\n    return p;\n  }\n\n  /**\n   * Prepares the log message by combining the main message with additional data.\n   * @param message - The main log message.\n   * @param data - Additional data to log.\n   * @returns The prepared log message.\n   */\n  private prepareMessage(message: string, data?: T) {\n    let m = inspect(message);\n    if (\n      (m.startsWith(`'`) && m.endsWith(`'`)) ||\n      (m.startsWith(`\"`) && m.endsWith(`\"`))\n    ) {\n      m = m.substring(1, m.length - 1);\n    }\n    if (data) {\n      m += inspect(data);\n    }\n    return m;\n  }\n\n  /**\n   * Retrieves the calling context (file path, method name, line number) from the stack trace.\n   * @returns An object containing the file path, method name, and line number.\n   */\n  private getCallingContext() {\n    const stackTrace = new Error().stack;\n    if (stackTrace) {\n      const lines = stackTrace.split(\"\\n\");\n      // The calling context is located in the fourth line of the stack trace\n      if (lines.length >= 4) {\n        const matches = lines[3].match(/at\\s+(.+?)\\s+\\((.+):(\\d+):\\d+\\)/);\n        if (matches && matches.length > 3) {\n          const filePath = matches[2].split(\"/\").slice(-2).join(\"/\");\n          const methodName = matches[1];\n          const lineNumber = matches[3];\n          return { filePath, methodName, lineNumber };\n        }\n      }\n    }\n    return {\n      filePath: \"Unknown path\",\n      methodName: \"Anonymous context\",\n      lineNumber: \"Unknown line\",\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginPayload.html":{"url":"classes/LoginPayload.html","title":"class - LoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for login payload.\nContains user login information required for authentication.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                captchaId\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                captchaPayload\n                            \n                            \n                                    \n                                    \n                                ipAddress\n                            \n                            \n                                    \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        captchaId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:64\n                        \n                    \n\n            \n                \n                    The ID of the captcha.\nOptional.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        captchaPayload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:72\n                        \n                    \n\n            \n                \n                    The payload of the captcha.\nOptional.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ipAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsIP()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:56\n                        \n                    \n\n            \n                \n                    The IP address of the user.\nOptional.\nExample :\"192.168.0.1\"\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:37\n                        \n                    \n\n            \n                \n                    The login of the user.\nExample :\"admin\"\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:46\n                        \n                    \n\n            \n                \n                    The password of the user.\nExample :\"P@ssw0rd!\"\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIP, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\nimport { Expose, Transform, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common\";\nimport { UserDto } from \"../user/user.types\";\nimport { TransformUtils } from \"../../shared/utils/transform.utils\";\nimport { AuthService } from \"./auth.constants\";\nimport { Request, Response } from \"express\";\n\n/**\n * Data transfer object for login payload.\n * Contains user login information required for authentication.\n */\nexport class LoginPayload {\n  /**\n   * The login of the user.\n   * @example ```typescript\n   * \"admin\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  login: string;\n\n  /**\n   * The password of the user.\n   * @example ```typescript\n   * \"P@ssw0rd!\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  /**\n   * The IP address of the user.\n   * Optional.\n   * @example ```typescript\n   * \"192.168.0.1\"\n   */\n  @IsIP()\n  @IsOptional()\n  ipAddress: string;\n\n  /**\n   * The ID of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaId?: string;\n\n  /**\n   * The payload of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaPayload?: string;\n}\n\n/**\n * Data transfer object for token exchange payload.\n * Contains the token to be exchanged for a new token pair JwtDto.\n */\nexport class ExchangeTokenPayload {\n  /**\n   * The refresh token to be exchanged.\n   */\n  @IsString()\n  @IsOptional()\n  token: string;\n}\n\n/**\n * Data transfer object for JWT tokens.\n * Contains access and refresh tokens along with their expiration dates and user information.\n */\nexport class JwtDto {\n  /**\n   * The user-data object.\n   */\n  @Expose()\n  @Type(() => UserDto)\n  user: UserDto;\n\n  /**\n   * The access token.\n   */\n  @Expose()\n  accessToken: string;\n\n  /**\n   * The refresh token.\n   */\n  @Expose()\n  refreshToken: string;\n\n  /**\n   * The expiration date of the access token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  atExp: Date;\n\n  /**\n   * The expiration date of the refresh token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  rtExp: Date;\n}\n\n/**\n * Interface representing the basic functionality for an authentication controller.\n */\nexport interface BasicAuthController {\n  /**\n   * Handles user login by validating the provided credentials, generating JWT tokens,\n   * and setting them as HTTP-only cookies.\n   * @param payload - The login credentials, including username, password, and optional captcha data.\n   * @param request - The incoming HTTP request object.\n   * @param response - The HTTP response object where cookies will be set.\n   * @returns A promise that resolves to a JWT data transfer object containing access and refresh tokens.\n   */\n  login(\n    payload: LoginPayload,\n    request: Request,\n    response: Response,\n  ): Promise;\n\n  /**\n   * Logs out the user by invalidating the provided access token and clearing related cookies.\n   * @param token - The JWT access token that needs to be invalidated.\n   * @param response - The HTTP response object where cookies will be cleared.\n   * @returns A promise that resolves to an object indicating the result of the logout operation.\n   */\n  logout(token: string, response: Response): Promise;\n\n  /**\n   * Exchanges a refresh token for a new set of access and refresh tokens.\n   * The new tokens are set as HTTP-only cookies.\n   * @param payload - The payload containing the refresh token to be exchanged.\n   * @param request - The incoming HTTP request object.\n   * @param response - The HTTP response object where new cookies will be set.\n   * @returns A promise that resolves to a partial JWT data transfer object containing the new tokens.\n   */\n  exchange(\n    payload: ExchangeTokenPayload,\n    request: Request,\n    response: Response,\n  ): Promise>;\n}\n\n/**\n * Options for configuring the authentication module.\n * @property service - The authentication service class.\n */\nexport type AuthModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Media.html":{"url":"interfaces/Media.html","title":"interface - Media","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Media\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a media object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            files\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains a unique character identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        files\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        files:     MediaFile[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MediaFile[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains a link to the original file and all its thumbnails\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the identification number of the file\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         FileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains a link to the meta data container\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the name of the file in all languages involved\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the date the file was created\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         MediaType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MediaType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains a list of unique settings and functions that the file contains\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  /** This field contains the identification number of the file  */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file in all languages involved */\n  name: LocalizedString[];\n  /** This field contains a list of unique settings and functions that the file contains */\n  type: MediaType;\n  /** This field contains a link to the original file and all its thumbnails */\n  files: MediaFile[];\n  /** This field contains a link to the meta data container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  /** A unique code representing the media file type */\n  code: string;\n  /** This field contains a unique character identifier */\n  name: string;\n  /** This field defines the possibility to create a duplicate file in WEBP format */\n  vp6: boolean;\n  /** This field indicates the type of access to the file, public or private */\n  private: boolean;\n  /** A numeric value reflecting the quality level of the media (defines the compression rate or overall quality) */\n  quality: number;\n  /** A file extension associated with the media type and which defines the file format  */\n  ext: MediaExt;\n  /** An array of supported media formats for this media type */\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media format */\n  name: string;\n  /** The width of the media file in pixels, represented as a string  */\n  width: string;\n  /** The height of the media file in pixels, represented as a string  */\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  /** A unique code or identifier for the media file*/\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media file */\n  name: string;\n  /** The width of the media file in pixels */\n  width: number;\n  /** The height of the media file in pixels */\n  height: number;\n  /** The size of the media file in bytes */\n  size: number;\n  /** The format of the media file, represented by the MediaFormat type */\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** A unique code or identifier for the media file*/\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(id: number, privateMedia?: boolean): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Interface representing the basic functionality for a media management controller.\n */\nexport interface BasicMediaController {\n  /**\n   * Handles the uploading of media, saving it to the system, and associating it with a specific type and ID.\n   * @param file - The media file to be uploaded.\n   * @param type - The type of media being uploaded (e.g., image, video).\n   * @param id - An optional ID for associating the media with an existing entity.\n   * @returns A promise that resolves to the saved media entity.\n   */\n  createMedia(\n    file: Express.Multer.File,\n    type: string,\n    id: number,\n  ): Promise;\n\n  /**\n   * Retrieves a private media file by its ID, applies any requested format transformations,\n   * and sends it as a response.\n   * @param res - The HTTP response object used to send the media file.\n   * @param id - The ID of the media to be retrieved.\n   * @param format - An optional format for transforming the media before sending.\n   * @param webp - A boolean indicating whether to convert the media to WebP format.\n   * @returns A promise that resolves when the media file is sent.\n   */\n  getPrivateMedia(\n    res: Response,\n    id: number,\n    format: string,\n    webp: boolean,\n  ): Promise;\n\n  /**\n   * Retrieves a public media file by its ID.\n   * @param id - The ID of the media to be retrieved.\n   * @returns A promise that resolves to the retrieved media entity.\n   */\n  getMedia(id: number): Promise;\n\n  /**\n   * Removes a media file by its ID from the system.\n   * @param id - The ID of the media to be removed.\n   * @returns A promise that resolves to the removed media entity.\n   */\n  removeMedia(id: number): Promise;\n\n  /**\n   * Recreates a media file by regenerating it.\n   * @param id - The ID of the media to be recreated.\n   * @returns A promise that resolves to the recreated media entity.\n   */\n  recreateMedia(id: number): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MediaController.html":{"url":"controllers/MediaController.html","title":"controller - MediaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MediaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /media\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createMedia\n                            \n                            \n                                    \n                                    Async\n                                getMedia\n                            \n                            \n                                    \n                                    Async\n                                getPrivateMedia\n                            \n                            \n                                    \n                                    Async\n                                recreateMedia\n                            \n                            \n                                    \n                                    Async\n                                removeMedia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createMedia\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMedia(file: Express.Multer.File, type, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/upload/:type?')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/media/media.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                type\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    DEFAULT_MEDIA_TYPE\n                                            \n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getMedia\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMedia(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/media/media.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getPrivateMedia\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPrivateMedia(res: Response, id: number, format: string, webp: boolean)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/private/:id')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/media/media.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                format\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                webp\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        recreateMedia\n                        \n                    \n                \n            \n            \n                \n                        \n                    recreateMedia(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/recreate/:id')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/media/media.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        removeMedia\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeMedia(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/media/media.controller.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Query,\n  Res,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from \"@nestjs/common\";\nimport { FileInterceptor } from \"@nestjs/platform-express\";\nimport { Response } from \"express\";\nimport * as path from \"path\";\nimport { AuthGuard } from \"../../shared/guards/auth.guard\";\nimport { BasicMediaController, Media, MediaManager } from \"./media.types\";\nimport { NotEmptyPipe } from \"../../shared/pipes/not-empty.pipe\";\nimport { DEFAULT_MEDIA_TYPE } from \"./media.constants\";\n\n@Controller(\"/media\")\n@UseGuards(AuthGuard)\nexport class MediaController implements BasicMediaController {\n  constructor(private readonly mediaService: MediaManager) {}\n\n  @Post(\"/upload/:type?\")\n  @UseInterceptors(FileInterceptor(\"file\"))\n  async createMedia(\n    @UploadedFile(\"file\", new NotEmptyPipe(\"file\")) file: Express.Multer.File,\n    @Param(\"type\") type = DEFAULT_MEDIA_TYPE,\n    @Query(\"id\") id: number,\n  ): Promise {\n    return await this.mediaService.createOrUpdateMedia(\n      file.buffer,\n      type,\n      undefined,\n      id,\n    );\n  }\n\n  @Get(\"/private/:id\")\n  async getPrivateMedia(\n    @Res() res: Response,\n    @Param(\"id\") id: number,\n    @Query(\"format\") format: string,\n    @Query(\"webp\") webp: boolean,\n  ): Promise {\n    const media = await this.mediaService.findPrivateById(id);\n    const mediaPath = await this.mediaService.getMediaPath(media, format, webp);\n    res.sendFile(path.join(process.cwd(), mediaPath));\n  }\n\n  @Get(\"/:id\")\n  async getMedia(@Param(\"id\") id: number): Promise {\n    return await this.mediaService.findPublicById(id);\n  }\n\n  @Delete(\"/:id\")\n  async removeMedia(@Param(\"id\") id: number): Promise {\n    return await this.mediaService.remove(id);\n  }\n\n  @Post(\"/recreate/:id\")\n  async recreateMedia(@Param(\"id\") id: number): Promise {\n    return await this.mediaService.recreate(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaDto.html":{"url":"classes/MediaDto.html","title":"class - MediaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for media.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Media\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                files\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                metadata\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                tsCreated\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:171\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaFile[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:182\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:168\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:185\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedString[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:174\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:188\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:178\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  /** This field contains the identification number of the file  */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file in all languages involved */\n  name: LocalizedString[];\n  /** This field contains a list of unique settings and functions that the file contains */\n  type: MediaType;\n  /** This field contains a link to the original file and all its thumbnails */\n  files: MediaFile[];\n  /** This field contains a link to the meta data container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  /** A unique code representing the media file type */\n  code: string;\n  /** This field contains a unique character identifier */\n  name: string;\n  /** This field defines the possibility to create a duplicate file in WEBP format */\n  vp6: boolean;\n  /** This field indicates the type of access to the file, public or private */\n  private: boolean;\n  /** A numeric value reflecting the quality level of the media (defines the compression rate or overall quality) */\n  quality: number;\n  /** A file extension associated with the media type and which defines the file format  */\n  ext: MediaExt;\n  /** An array of supported media formats for this media type */\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media format */\n  name: string;\n  /** The width of the media file in pixels, represented as a string  */\n  width: string;\n  /** The height of the media file in pixels, represented as a string  */\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  /** A unique code or identifier for the media file*/\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media file */\n  name: string;\n  /** The width of the media file in pixels */\n  width: number;\n  /** The height of the media file in pixels */\n  height: number;\n  /** The size of the media file in bytes */\n  size: number;\n  /** The format of the media file, represented by the MediaFormat type */\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** A unique code or identifier for the media file*/\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(id: number, privateMedia?: boolean): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Interface representing the basic functionality for a media management controller.\n */\nexport interface BasicMediaController {\n  /**\n   * Handles the uploading of media, saving it to the system, and associating it with a specific type and ID.\n   * @param file - The media file to be uploaded.\n   * @param type - The type of media being uploaded (e.g., image, video).\n   * @param id - An optional ID for associating the media with an existing entity.\n   * @returns A promise that resolves to the saved media entity.\n   */\n  createMedia(\n    file: Express.Multer.File,\n    type: string,\n    id: number,\n  ): Promise;\n\n  /**\n   * Retrieves a private media file by its ID, applies any requested format transformations,\n   * and sends it as a response.\n   * @param res - The HTTP response object used to send the media file.\n   * @param id - The ID of the media to be retrieved.\n   * @param format - An optional format for transforming the media before sending.\n   * @param webp - A boolean indicating whether to convert the media to WebP format.\n   * @returns A promise that resolves when the media file is sent.\n   */\n  getPrivateMedia(\n    res: Response,\n    id: number,\n    format: string,\n    webp: boolean,\n  ): Promise;\n\n  /**\n   * Retrieves a public media file by its ID.\n   * @param id - The ID of the media to be retrieved.\n   * @returns A promise that resolves to the retrieved media entity.\n   */\n  getMedia(id: number): Promise;\n\n  /**\n   * Removes a media file by its ID from the system.\n   * @param id - The ID of the media to be removed.\n   * @returns A promise that resolves to the removed media entity.\n   */\n  removeMedia(id: number): Promise;\n\n  /**\n   * Recreates a media file by regenerating it.\n   * @param id - The ID of the media to be recreated.\n   * @returns A promise that resolves to the recreated media entity.\n   */\n  recreateMedia(id: number): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaEntity.html":{"url":"entities/MediaEntity.html","title":"entity - MediaEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores media objects in itself\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                files\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, f => f.media, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaTypeEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, type => type.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinColumn,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  TableInheritance,\n} from \"typeorm\";\nimport { MediaTypeEntity } from \"./media-type.entity\";\nimport { MediaFileEntity } from \"./media-file.entity\";\nimport { Media } from \"../media.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { FileMetadataEntity } from \"../../file/entity/file-metadata.entity\";\n\n/**\n * The entity stores media objects in itself\n */\n@Entity(\"medias\")\n@TableInheritance({\n  column: { type: \"varchar\", name: \"class\", nullable: true },\n})\nexport class MediaEntity implements Media {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToOne(() => MediaTypeEntity, (type) => type.code)\n  type: MediaTypeEntity;\n\n  @OneToMany(() => MediaFileEntity, (f) => f.media, { cascade: true })\n  files: MediaFileEntity[];\n\n  @OneToOne(() => FileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  metadata: FileMetadataEntity;\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaExt.html":{"url":"interfaces/MediaExt.html","title":"interface - MediaExt","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaExt\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a media extension.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains a unique character identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A unique code or identifier for the media file\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  /** This field contains the identification number of the file  */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file in all languages involved */\n  name: LocalizedString[];\n  /** This field contains a list of unique settings and functions that the file contains */\n  type: MediaType;\n  /** This field contains a link to the original file and all its thumbnails */\n  files: MediaFile[];\n  /** This field contains a link to the meta data container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  /** A unique code representing the media file type */\n  code: string;\n  /** This field contains a unique character identifier */\n  name: string;\n  /** This field defines the possibility to create a duplicate file in WEBP format */\n  vp6: boolean;\n  /** This field indicates the type of access to the file, public or private */\n  private: boolean;\n  /** A numeric value reflecting the quality level of the media (defines the compression rate or overall quality) */\n  quality: number;\n  /** A file extension associated with the media type and which defines the file format  */\n  ext: MediaExt;\n  /** An array of supported media formats for this media type */\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media format */\n  name: string;\n  /** The width of the media file in pixels, represented as a string  */\n  width: string;\n  /** The height of the media file in pixels, represented as a string  */\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  /** A unique code or identifier for the media file*/\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media file */\n  name: string;\n  /** The width of the media file in pixels */\n  width: number;\n  /** The height of the media file in pixels */\n  height: number;\n  /** The size of the media file in bytes */\n  size: number;\n  /** The format of the media file, represented by the MediaFormat type */\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** A unique code or identifier for the media file*/\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(id: number, privateMedia?: boolean): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Interface representing the basic functionality for a media management controller.\n */\nexport interface BasicMediaController {\n  /**\n   * Handles the uploading of media, saving it to the system, and associating it with a specific type and ID.\n   * @param file - The media file to be uploaded.\n   * @param type - The type of media being uploaded (e.g., image, video).\n   * @param id - An optional ID for associating the media with an existing entity.\n   * @returns A promise that resolves to the saved media entity.\n   */\n  createMedia(\n    file: Express.Multer.File,\n    type: string,\n    id: number,\n  ): Promise;\n\n  /**\n   * Retrieves a private media file by its ID, applies any requested format transformations,\n   * and sends it as a response.\n   * @param res - The HTTP response object used to send the media file.\n   * @param id - The ID of the media to be retrieved.\n   * @param format - An optional format for transforming the media before sending.\n   * @param webp - A boolean indicating whether to convert the media to WebP format.\n   * @returns A promise that resolves when the media file is sent.\n   */\n  getPrivateMedia(\n    res: Response,\n    id: number,\n    format: string,\n    webp: boolean,\n  ): Promise;\n\n  /**\n   * Retrieves a public media file by its ID.\n   * @param id - The ID of the media to be retrieved.\n   * @returns A promise that resolves to the retrieved media entity.\n   */\n  getMedia(id: number): Promise;\n\n  /**\n   * Removes a media file by its ID from the system.\n   * @param id - The ID of the media to be removed.\n   * @returns A promise that resolves to the removed media entity.\n   */\n  removeMedia(id: number): Promise;\n\n  /**\n   * Recreates a media file by regenerating it.\n   * @param id - The ID of the media to be recreated.\n   * @returns A promise that resolves to the recreated media entity.\n   */\n  recreateMedia(id: number): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaExtEntity.html":{"url":"entities/MediaExtEntity.html","title":"entity - MediaExtEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaExtEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media-ext.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores extensions of media objects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-ext.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-ext.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryColumn } from \"typeorm\";\nimport { MediaExt } from \"../media.types\";\n\n/**\n * The entity stores extensions of media objects\n */\n@Entity(\"medias_ext\")\nexport class MediaExtEntity implements MediaExt {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaFile.html":{"url":"interfaces/MediaFile.html","title":"interface - MediaFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a media file.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            media\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains a unique character identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         MediaFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MediaFormat\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The format of the media file, represented by the MediaFormat type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The height of the media file in pixels\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A unique code or identifier for the media file\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        media\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        media:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the name of the media file\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The size of the media file in bytes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The width of the media file in pixels\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  /** This field contains the identification number of the file  */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file in all languages involved */\n  name: LocalizedString[];\n  /** This field contains a list of unique settings and functions that the file contains */\n  type: MediaType;\n  /** This field contains a link to the original file and all its thumbnails */\n  files: MediaFile[];\n  /** This field contains a link to the meta data container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  /** A unique code representing the media file type */\n  code: string;\n  /** This field contains a unique character identifier */\n  name: string;\n  /** This field defines the possibility to create a duplicate file in WEBP format */\n  vp6: boolean;\n  /** This field indicates the type of access to the file, public or private */\n  private: boolean;\n  /** A numeric value reflecting the quality level of the media (defines the compression rate or overall quality) */\n  quality: number;\n  /** A file extension associated with the media type and which defines the file format  */\n  ext: MediaExt;\n  /** An array of supported media formats for this media type */\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media format */\n  name: string;\n  /** The width of the media file in pixels, represented as a string  */\n  width: string;\n  /** The height of the media file in pixels, represented as a string  */\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  /** A unique code or identifier for the media file*/\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media file */\n  name: string;\n  /** The width of the media file in pixels */\n  width: number;\n  /** The height of the media file in pixels */\n  height: number;\n  /** The size of the media file in bytes */\n  size: number;\n  /** The format of the media file, represented by the MediaFormat type */\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** A unique code or identifier for the media file*/\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(id: number, privateMedia?: boolean): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Interface representing the basic functionality for a media management controller.\n */\nexport interface BasicMediaController {\n  /**\n   * Handles the uploading of media, saving it to the system, and associating it with a specific type and ID.\n   * @param file - The media file to be uploaded.\n   * @param type - The type of media being uploaded (e.g., image, video).\n   * @param id - An optional ID for associating the media with an existing entity.\n   * @returns A promise that resolves to the saved media entity.\n   */\n  createMedia(\n    file: Express.Multer.File,\n    type: string,\n    id: number,\n  ): Promise;\n\n  /**\n   * Retrieves a private media file by its ID, applies any requested format transformations,\n   * and sends it as a response.\n   * @param res - The HTTP response object used to send the media file.\n   * @param id - The ID of the media to be retrieved.\n   * @param format - An optional format for transforming the media before sending.\n   * @param webp - A boolean indicating whether to convert the media to WebP format.\n   * @returns A promise that resolves when the media file is sent.\n   */\n  getPrivateMedia(\n    res: Response,\n    id: number,\n    format: string,\n    webp: boolean,\n  ): Promise;\n\n  /**\n   * Retrieves a public media file by its ID.\n   * @param id - The ID of the media to be retrieved.\n   * @returns A promise that resolves to the retrieved media entity.\n   */\n  getMedia(id: number): Promise;\n\n  /**\n   * Removes a media file by its ID from the system.\n   * @param id - The ID of the media to be removed.\n   * @returns A promise that resolves to the removed media entity.\n   */\n  removeMedia(id: number): Promise;\n\n  /**\n   * Recreates a media file by regenerating it.\n   * @param id - The ID of the media to be recreated.\n   * @returns A promise that resolves to the recreated media entity.\n   */\n  recreateMedia(id: number): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaFileDto.html":{"url":"classes/MediaFileDto.html","title":"class - MediaFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for media file.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MediaFile\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                format\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                media\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:199\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFormatDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:203\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:206\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:196\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        media\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Media\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:209\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:212\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:215\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:218\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  /** This field contains the identification number of the file  */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file in all languages involved */\n  name: LocalizedString[];\n  /** This field contains a list of unique settings and functions that the file contains */\n  type: MediaType;\n  /** This field contains a link to the original file and all its thumbnails */\n  files: MediaFile[];\n  /** This field contains a link to the meta data container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  /** A unique code representing the media file type */\n  code: string;\n  /** This field contains a unique character identifier */\n  name: string;\n  /** This field defines the possibility to create a duplicate file in WEBP format */\n  vp6: boolean;\n  /** This field indicates the type of access to the file, public or private */\n  private: boolean;\n  /** A numeric value reflecting the quality level of the media (defines the compression rate or overall quality) */\n  quality: number;\n  /** A file extension associated with the media type and which defines the file format  */\n  ext: MediaExt;\n  /** An array of supported media formats for this media type */\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media format */\n  name: string;\n  /** The width of the media file in pixels, represented as a string  */\n  width: string;\n  /** The height of the media file in pixels, represented as a string  */\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  /** A unique code or identifier for the media file*/\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media file */\n  name: string;\n  /** The width of the media file in pixels */\n  width: number;\n  /** The height of the media file in pixels */\n  height: number;\n  /** The size of the media file in bytes */\n  size: number;\n  /** The format of the media file, represented by the MediaFormat type */\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** A unique code or identifier for the media file*/\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(id: number, privateMedia?: boolean): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Interface representing the basic functionality for a media management controller.\n */\nexport interface BasicMediaController {\n  /**\n   * Handles the uploading of media, saving it to the system, and associating it with a specific type and ID.\n   * @param file - The media file to be uploaded.\n   * @param type - The type of media being uploaded (e.g., image, video).\n   * @param id - An optional ID for associating the media with an existing entity.\n   * @returns A promise that resolves to the saved media entity.\n   */\n  createMedia(\n    file: Express.Multer.File,\n    type: string,\n    id: number,\n  ): Promise;\n\n  /**\n   * Retrieves a private media file by its ID, applies any requested format transformations,\n   * and sends it as a response.\n   * @param res - The HTTP response object used to send the media file.\n   * @param id - The ID of the media to be retrieved.\n   * @param format - An optional format for transforming the media before sending.\n   * @param webp - A boolean indicating whether to convert the media to WebP format.\n   * @returns A promise that resolves when the media file is sent.\n   */\n  getPrivateMedia(\n    res: Response,\n    id: number,\n    format: string,\n    webp: boolean,\n  ): Promise;\n\n  /**\n   * Retrieves a public media file by its ID.\n   * @param id - The ID of the media to be retrieved.\n   * @returns A promise that resolves to the retrieved media entity.\n   */\n  getMedia(id: number): Promise;\n\n  /**\n   * Removes a media file by its ID from the system.\n   * @param id - The ID of the media to be removed.\n   * @returns A promise that resolves to the removed media entity.\n   */\n  removeMedia(id: number): Promise;\n\n  /**\n   * Recreates a media file by regenerating it.\n   * @param id - The ID of the media to be recreated.\n   * @returns A promise that resolves to the recreated media entity.\n   */\n  recreateMedia(id: number): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaFileEntity.html":{"url":"entities/MediaFileEntity.html","title":"entity - MediaFileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaFileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media-file.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores media object files (links)\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                format\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                media\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFormatEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, type => type.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('smallint', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        media\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('smallint', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { MediaEntity } from \"./media.entity\";\nimport { MediaFile } from \"../media.types\";\nimport { MediaFormatEntity } from \"./media-format.entity\";\n\n/**\n * The entity stores media object files (links)\n */\n@Entity(\"medias_files\")\nexport class MediaFileEntity implements MediaFile {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  name: string;\n\n  @Column(\"smallint\", { nullable: true })\n  width: number;\n\n  @Column(\"smallint\", { nullable: true })\n  height: number;\n\n  @Column(\"int\", { nullable: true })\n  size: number;\n\n  @ManyToOne(() => MediaFormatEntity, (type) => type.code)\n  format: MediaFormatEntity;\n\n  @ManyToOne(() => MediaEntity)\n  media: MediaEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaFormat.html":{"url":"interfaces/MediaFormat.html","title":"interface - MediaFormat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaFormat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a media format.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains a unique character identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The height of the media file in pixels, represented as a string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the name of the media format\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The width of the media file in pixels, represented as a string\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  /** This field contains the identification number of the file  */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file in all languages involved */\n  name: LocalizedString[];\n  /** This field contains a list of unique settings and functions that the file contains */\n  type: MediaType;\n  /** This field contains a link to the original file and all its thumbnails */\n  files: MediaFile[];\n  /** This field contains a link to the meta data container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  /** A unique code representing the media file type */\n  code: string;\n  /** This field contains a unique character identifier */\n  name: string;\n  /** This field defines the possibility to create a duplicate file in WEBP format */\n  vp6: boolean;\n  /** This field indicates the type of access to the file, public or private */\n  private: boolean;\n  /** A numeric value reflecting the quality level of the media (defines the compression rate or overall quality) */\n  quality: number;\n  /** A file extension associated with the media type and which defines the file format  */\n  ext: MediaExt;\n  /** An array of supported media formats for this media type */\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media format */\n  name: string;\n  /** The width of the media file in pixels, represented as a string  */\n  width: string;\n  /** The height of the media file in pixels, represented as a string  */\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  /** A unique code or identifier for the media file*/\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media file */\n  name: string;\n  /** The width of the media file in pixels */\n  width: number;\n  /** The height of the media file in pixels */\n  height: number;\n  /** The size of the media file in bytes */\n  size: number;\n  /** The format of the media file, represented by the MediaFormat type */\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** A unique code or identifier for the media file*/\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(id: number, privateMedia?: boolean): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Interface representing the basic functionality for a media management controller.\n */\nexport interface BasicMediaController {\n  /**\n   * Handles the uploading of media, saving it to the system, and associating it with a specific type and ID.\n   * @param file - The media file to be uploaded.\n   * @param type - The type of media being uploaded (e.g., image, video).\n   * @param id - An optional ID for associating the media with an existing entity.\n   * @returns A promise that resolves to the saved media entity.\n   */\n  createMedia(\n    file: Express.Multer.File,\n    type: string,\n    id: number,\n  ): Promise;\n\n  /**\n   * Retrieves a private media file by its ID, applies any requested format transformations,\n   * and sends it as a response.\n   * @param res - The HTTP response object used to send the media file.\n   * @param id - The ID of the media to be retrieved.\n   * @param format - An optional format for transforming the media before sending.\n   * @param webp - A boolean indicating whether to convert the media to WebP format.\n   * @returns A promise that resolves when the media file is sent.\n   */\n  getPrivateMedia(\n    res: Response,\n    id: number,\n    format: string,\n    webp: boolean,\n  ): Promise;\n\n  /**\n   * Retrieves a public media file by its ID.\n   * @param id - The ID of the media to be retrieved.\n   * @returns A promise that resolves to the retrieved media entity.\n   */\n  getMedia(id: number): Promise;\n\n  /**\n   * Removes a media file by its ID from the system.\n   * @param id - The ID of the media to be removed.\n   * @returns A promise that resolves to the removed media entity.\n   */\n  removeMedia(id: number): Promise;\n\n  /**\n   * Recreates a media file by regenerating it.\n   * @param id - The ID of the media to be recreated.\n   * @returns A promise that resolves to the recreated media entity.\n   */\n  recreateMedia(id: number): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaFormatDto.html":{"url":"classes/MediaFormatDto.html","title":"class - MediaFormatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaFormatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for media format.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MediaFormat\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:151\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:154\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:157\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:160\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  /** This field contains the identification number of the file  */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file in all languages involved */\n  name: LocalizedString[];\n  /** This field contains a list of unique settings and functions that the file contains */\n  type: MediaType;\n  /** This field contains a link to the original file and all its thumbnails */\n  files: MediaFile[];\n  /** This field contains a link to the meta data container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  /** A unique code representing the media file type */\n  code: string;\n  /** This field contains a unique character identifier */\n  name: string;\n  /** This field defines the possibility to create a duplicate file in WEBP format */\n  vp6: boolean;\n  /** This field indicates the type of access to the file, public or private */\n  private: boolean;\n  /** A numeric value reflecting the quality level of the media (defines the compression rate or overall quality) */\n  quality: number;\n  /** A file extension associated with the media type and which defines the file format  */\n  ext: MediaExt;\n  /** An array of supported media formats for this media type */\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media format */\n  name: string;\n  /** The width of the media file in pixels, represented as a string  */\n  width: string;\n  /** The height of the media file in pixels, represented as a string  */\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  /** A unique code or identifier for the media file*/\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media file */\n  name: string;\n  /** The width of the media file in pixels */\n  width: number;\n  /** The height of the media file in pixels */\n  height: number;\n  /** The size of the media file in bytes */\n  size: number;\n  /** The format of the media file, represented by the MediaFormat type */\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** A unique code or identifier for the media file*/\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(id: number, privateMedia?: boolean): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Interface representing the basic functionality for a media management controller.\n */\nexport interface BasicMediaController {\n  /**\n   * Handles the uploading of media, saving it to the system, and associating it with a specific type and ID.\n   * @param file - The media file to be uploaded.\n   * @param type - The type of media being uploaded (e.g., image, video).\n   * @param id - An optional ID for associating the media with an existing entity.\n   * @returns A promise that resolves to the saved media entity.\n   */\n  createMedia(\n    file: Express.Multer.File,\n    type: string,\n    id: number,\n  ): Promise;\n\n  /**\n   * Retrieves a private media file by its ID, applies any requested format transformations,\n   * and sends it as a response.\n   * @param res - The HTTP response object used to send the media file.\n   * @param id - The ID of the media to be retrieved.\n   * @param format - An optional format for transforming the media before sending.\n   * @param webp - A boolean indicating whether to convert the media to WebP format.\n   * @returns A promise that resolves when the media file is sent.\n   */\n  getPrivateMedia(\n    res: Response,\n    id: number,\n    format: string,\n    webp: boolean,\n  ): Promise;\n\n  /**\n   * Retrieves a public media file by its ID.\n   * @param id - The ID of the media to be retrieved.\n   * @returns A promise that resolves to the retrieved media entity.\n   */\n  getMedia(id: number): Promise;\n\n  /**\n   * Removes a media file by its ID from the system.\n   * @param id - The ID of the media to be removed.\n   * @returns A promise that resolves to the removed media entity.\n   */\n  removeMedia(id: number): Promise;\n\n  /**\n   * Recreates a media file by regenerating it.\n   * @param id - The ID of the media to be recreated.\n   * @returns A promise that resolves to the recreated media entity.\n   */\n  recreateMedia(id: number): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaFormatEntity.html":{"url":"entities/MediaFormatEntity.html","title":"entity - MediaFormatEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaFormatEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media-format.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the formats of media objects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-format.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('smallint', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-format.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-format.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('smallint', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-format.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryColumn } from \"typeorm\";\nimport { MediaFormat } from \"../media.types\";\n\n/**\n * The entity stores the formats of media objects\n */\n@Entity(\"medias_format\")\nexport class MediaFormatEntity implements MediaFormat {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  name: string;\n\n  @Column(\"smallint\", { nullable: true })\n  width: string;\n\n  @Column(\"smallint\", { nullable: true })\n  height: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaManager.html":{"url":"classes/MediaManager.html","title":"class - MediaManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing the media management service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createOrUpdateMedia\n                            \n                            \n                                    Abstract\n                                findByCode\n                            \n                            \n                                    Abstract\n                                findMediaById\n                            \n                            \n                                    Abstract\n                                findPrivateById\n                            \n                            \n                                    Abstract\n                                findPublicById\n                            \n                            \n                                    Abstract\n                                getMediaPath\n                            \n                            \n                                    Abstract\n                                recreate\n                            \n                            \n                                    Abstract\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createOrUpdateMedia\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrUpdateMedia(file: Buffer, type: string, code?: string, existedEntityId?: number, name?: LocalizedString[])\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:237\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                existedEntityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            LocalizedString[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:225\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findMediaById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMediaById(id: number, privateMedia?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:227\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                privateMedia\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findPrivateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPrivateById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:231\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findPublicById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPublicById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:229\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getMediaPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMediaPath(media: Media, format?: string, webpSupport?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:245\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                media\n                                            \n                                                            Media\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                format\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                webpSupport\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        recreate\n                        \n                    \n                \n            \n            \n                \n                        \n                    recreate(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:235\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:233\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  /** This field contains the identification number of the file  */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file in all languages involved */\n  name: LocalizedString[];\n  /** This field contains a list of unique settings and functions that the file contains */\n  type: MediaType;\n  /** This field contains a link to the original file and all its thumbnails */\n  files: MediaFile[];\n  /** This field contains a link to the meta data container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  /** A unique code representing the media file type */\n  code: string;\n  /** This field contains a unique character identifier */\n  name: string;\n  /** This field defines the possibility to create a duplicate file in WEBP format */\n  vp6: boolean;\n  /** This field indicates the type of access to the file, public or private */\n  private: boolean;\n  /** A numeric value reflecting the quality level of the media (defines the compression rate or overall quality) */\n  quality: number;\n  /** A file extension associated with the media type and which defines the file format  */\n  ext: MediaExt;\n  /** An array of supported media formats for this media type */\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media format */\n  name: string;\n  /** The width of the media file in pixels, represented as a string  */\n  width: string;\n  /** The height of the media file in pixels, represented as a string  */\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  /** A unique code or identifier for the media file*/\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media file */\n  name: string;\n  /** The width of the media file in pixels */\n  width: number;\n  /** The height of the media file in pixels */\n  height: number;\n  /** The size of the media file in bytes */\n  size: number;\n  /** The format of the media file, represented by the MediaFormat type */\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** A unique code or identifier for the media file*/\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(id: number, privateMedia?: boolean): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Interface representing the basic functionality for a media management controller.\n */\nexport interface BasicMediaController {\n  /**\n   * Handles the uploading of media, saving it to the system, and associating it with a specific type and ID.\n   * @param file - The media file to be uploaded.\n   * @param type - The type of media being uploaded (e.g., image, video).\n   * @param id - An optional ID for associating the media with an existing entity.\n   * @returns A promise that resolves to the saved media entity.\n   */\n  createMedia(\n    file: Express.Multer.File,\n    type: string,\n    id: number,\n  ): Promise;\n\n  /**\n   * Retrieves a private media file by its ID, applies any requested format transformations,\n   * and sends it as a response.\n   * @param res - The HTTP response object used to send the media file.\n   * @param id - The ID of the media to be retrieved.\n   * @param format - An optional format for transforming the media before sending.\n   * @param webp - A boolean indicating whether to convert the media to WebP format.\n   * @returns A promise that resolves when the media file is sent.\n   */\n  getPrivateMedia(\n    res: Response,\n    id: number,\n    format: string,\n    webp: boolean,\n  ): Promise;\n\n  /**\n   * Retrieves a public media file by its ID.\n   * @param id - The ID of the media to be retrieved.\n   * @returns A promise that resolves to the retrieved media entity.\n   */\n  getMedia(id: number): Promise;\n\n  /**\n   * Removes a media file by its ID from the system.\n   * @param id - The ID of the media to be removed.\n   * @returns A promise that resolves to the removed media entity.\n   */\n  removeMedia(id: number): Promise;\n\n  /**\n   * Recreates a media file by regenerating it.\n   * @param id - The ID of the media to be recreated.\n   * @returns A promise that resolves to the recreated media entity.\n   */\n  recreateMedia(id: number): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MediaModule.html":{"url":"modules/MediaModule.html","title":"module - MediaModule","body":"\n                   \n\n\n\n\n    Modules\n    MediaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/media/media.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for management media system.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: MediaModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.module.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            MediaModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      service: MediaService,\n      controller: MediaController,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { MediaService } from \"./media.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { MediaEntity } from \"./entity/media.entity\";\nimport { MediaTypeEntity } from \"./entity/media-type.entity\";\nimport { MediaFileEntity } from \"./entity/media-file.entity\";\nimport { MediaFormatEntity } from \"./entity/media-format.entity\";\nimport { MediaManager, MediaModuleOptions } from \"./media.types\";\nimport { FileModule } from \"../file/file.module\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { MediaController } from \"./media.controller\";\nimport { UserModule } from \"../user/user.module\";\n\n/**\n * Module for management media system.\n */\n@Module({})\nexport class MediaModule {\n  static forRoot(\n    options: MediaModuleOptions = {\n      service: MediaService,\n      controller: MediaController,\n    },\n  ): DynamicModule {\n    return {\n      module: MediaModule,\n      controllers: [options.controller],\n      imports: [\n        TypeOrmModule.forFeature([\n          MediaEntity,\n          MediaTypeEntity,\n          MediaFileEntity,\n          MediaFormatEntity,\n        ]),\n        UserModule.forRoot(),\n        FileModule.forRoot(),\n        LogModule,\n        CacheModule,\n      ],\n      providers: [\n        {\n          provide: MediaManager,\n          useClass: options.service,\n        },\n      ],\n      exports: [MediaManager],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaType.html":{"url":"interfaces/MediaType.html","title":"interface - MediaType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a media type.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            formats\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            private\n                                        \n                                \n                                \n                                        \n                                            quality\n                                        \n                                \n                                \n                                        \n                                            vp6\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A unique code representing the media file type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         MediaExt\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MediaExt\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A file extension associated with the media type and which defines the file format\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formats\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formats:     MediaFormat[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MediaFormat[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An array of supported media formats for this media type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains a unique character identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field indicates the type of access to the file, public or private\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quality\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quality:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A numeric value reflecting the quality level of the media (defines the compression rate or overall quality)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vp6\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vp6:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field defines the possibility to create a duplicate file in WEBP format\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  /** This field contains the identification number of the file  */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file in all languages involved */\n  name: LocalizedString[];\n  /** This field contains a list of unique settings and functions that the file contains */\n  type: MediaType;\n  /** This field contains a link to the original file and all its thumbnails */\n  files: MediaFile[];\n  /** This field contains a link to the meta data container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  /** A unique code representing the media file type */\n  code: string;\n  /** This field contains a unique character identifier */\n  name: string;\n  /** This field defines the possibility to create a duplicate file in WEBP format */\n  vp6: boolean;\n  /** This field indicates the type of access to the file, public or private */\n  private: boolean;\n  /** A numeric value reflecting the quality level of the media (defines the compression rate or overall quality) */\n  quality: number;\n  /** A file extension associated with the media type and which defines the file format  */\n  ext: MediaExt;\n  /** An array of supported media formats for this media type */\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media format */\n  name: string;\n  /** The width of the media file in pixels, represented as a string  */\n  width: string;\n  /** The height of the media file in pixels, represented as a string  */\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  /** A unique code or identifier for the media file*/\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media file */\n  name: string;\n  /** The width of the media file in pixels */\n  width: number;\n  /** The height of the media file in pixels */\n  height: number;\n  /** The size of the media file in bytes */\n  size: number;\n  /** The format of the media file, represented by the MediaFormat type */\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** A unique code or identifier for the media file*/\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(id: number, privateMedia?: boolean): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Interface representing the basic functionality for a media management controller.\n */\nexport interface BasicMediaController {\n  /**\n   * Handles the uploading of media, saving it to the system, and associating it with a specific type and ID.\n   * @param file - The media file to be uploaded.\n   * @param type - The type of media being uploaded (e.g., image, video).\n   * @param id - An optional ID for associating the media with an existing entity.\n   * @returns A promise that resolves to the saved media entity.\n   */\n  createMedia(\n    file: Express.Multer.File,\n    type: string,\n    id: number,\n  ): Promise;\n\n  /**\n   * Retrieves a private media file by its ID, applies any requested format transformations,\n   * and sends it as a response.\n   * @param res - The HTTP response object used to send the media file.\n   * @param id - The ID of the media to be retrieved.\n   * @param format - An optional format for transforming the media before sending.\n   * @param webp - A boolean indicating whether to convert the media to WebP format.\n   * @returns A promise that resolves when the media file is sent.\n   */\n  getPrivateMedia(\n    res: Response,\n    id: number,\n    format: string,\n    webp: boolean,\n  ): Promise;\n\n  /**\n   * Retrieves a public media file by its ID.\n   * @param id - The ID of the media to be retrieved.\n   * @returns A promise that resolves to the retrieved media entity.\n   */\n  getMedia(id: number): Promise;\n\n  /**\n   * Removes a media file by its ID from the system.\n   * @param id - The ID of the media to be removed.\n   * @returns A promise that resolves to the removed media entity.\n   */\n  removeMedia(id: number): Promise;\n\n  /**\n   * Recreates a media file by regenerating it.\n   * @param id - The ID of the media to be recreated.\n   * @returns A promise that resolves to the recreated media entity.\n   */\n  recreateMedia(id: number): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaTypeDto.html":{"url":"classes/MediaTypeDto.html","title":"class - MediaTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for media type.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MediaType\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                ext\n                            \n                            \n                                    \n                                    \n                                formats\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                private\n                            \n                            \n                                    \n                                quality\n                            \n                            \n                                    \n                                vp6\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaExt\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        formats\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFormatDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:137\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:143\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        vp6\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:140\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  /** This field contains the identification number of the file  */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file in all languages involved */\n  name: LocalizedString[];\n  /** This field contains a list of unique settings and functions that the file contains */\n  type: MediaType;\n  /** This field contains a link to the original file and all its thumbnails */\n  files: MediaFile[];\n  /** This field contains a link to the meta data container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  /** A unique code representing the media file type */\n  code: string;\n  /** This field contains a unique character identifier */\n  name: string;\n  /** This field defines the possibility to create a duplicate file in WEBP format */\n  vp6: boolean;\n  /** This field indicates the type of access to the file, public or private */\n  private: boolean;\n  /** A numeric value reflecting the quality level of the media (defines the compression rate or overall quality) */\n  quality: number;\n  /** A file extension associated with the media type and which defines the file format  */\n  ext: MediaExt;\n  /** An array of supported media formats for this media type */\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media format */\n  name: string;\n  /** The width of the media file in pixels, represented as a string  */\n  width: string;\n  /** The height of the media file in pixels, represented as a string  */\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  /** A unique code or identifier for the media file*/\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media file */\n  name: string;\n  /** The width of the media file in pixels */\n  width: number;\n  /** The height of the media file in pixels */\n  height: number;\n  /** The size of the media file in bytes */\n  size: number;\n  /** The format of the media file, represented by the MediaFormat type */\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** A unique code or identifier for the media file*/\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(id: number, privateMedia?: boolean): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Interface representing the basic functionality for a media management controller.\n */\nexport interface BasicMediaController {\n  /**\n   * Handles the uploading of media, saving it to the system, and associating it with a specific type and ID.\n   * @param file - The media file to be uploaded.\n   * @param type - The type of media being uploaded (e.g., image, video).\n   * @param id - An optional ID for associating the media with an existing entity.\n   * @returns A promise that resolves to the saved media entity.\n   */\n  createMedia(\n    file: Express.Multer.File,\n    type: string,\n    id: number,\n  ): Promise;\n\n  /**\n   * Retrieves a private media file by its ID, applies any requested format transformations,\n   * and sends it as a response.\n   * @param res - The HTTP response object used to send the media file.\n   * @param id - The ID of the media to be retrieved.\n   * @param format - An optional format for transforming the media before sending.\n   * @param webp - A boolean indicating whether to convert the media to WebP format.\n   * @returns A promise that resolves when the media file is sent.\n   */\n  getPrivateMedia(\n    res: Response,\n    id: number,\n    format: string,\n    webp: boolean,\n  ): Promise;\n\n  /**\n   * Retrieves a public media file by its ID.\n   * @param id - The ID of the media to be retrieved.\n   * @returns A promise that resolves to the retrieved media entity.\n   */\n  getMedia(id: number): Promise;\n\n  /**\n   * Removes a media file by its ID from the system.\n   * @param id - The ID of the media to be removed.\n   * @returns A promise that resolves to the removed media entity.\n   */\n  removeMedia(id: number): Promise;\n\n  /**\n   * Recreates a media file by regenerating it.\n   * @param id - The ID of the media to be recreated.\n   * @returns A promise that resolves to the recreated media entity.\n   */\n  recreateMedia(id: number): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaTypeEntity.html":{"url":"entities/MediaTypeEntity.html","title":"entity - MediaTypeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaTypeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media-type.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the types of media objects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                ext\n                            \n                            \n                                    \n                                    \n                                formats\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                private\n                            \n                            \n                                    \n                                quality\n                            \n                            \n                                    \n                                vp6\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaExtEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, e => e.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        formats\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFormatEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        vp6\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { MediaFormatEntity } from \"./media-format.entity\";\nimport { MediaType } from \"../media.types\";\nimport { MediaExtEntity } from \"./media-ext.entity\";\n\n/**\n * The entity stores the types of media objects\n */\n@Entity(\"medias_types\")\nexport class MediaTypeEntity implements MediaType {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  name: string;\n\n  @Column(\"boolean\", { default: false })\n  vp6: boolean;\n\n  @Column(\"boolean\", { default: false })\n  private: boolean;\n\n  @Column(\"int\", { nullable: true })\n  quality: number;\n\n  @ManyToOne(() => MediaExtEntity, (e) => e.code)\n  ext: MediaExtEntity;\n\n  @ManyToMany(() => MediaFormatEntity)\n  @JoinTable()\n  formats: MediaFormatEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageBus.html":{"url":"interfaces/MessageBus.html","title":"interface - MessageBus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageBus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/ms-client/ms-client.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface defining the contract for the message bus.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        dispatch\n                                    \n                                \n                                \n                                    \n                                        emit\n                                    \n                                \n                                \n                                    \n                                        send\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dispatch\n                        \n                    \n                \n            \n            \n                \ndispatch(pattern: any, data?: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.types.ts:30\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emit\n                        \n                    \n                \n            \n            \n                \nemit(pattern: any, data?: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.types.ts:42\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        send\n                        \n                    \n                \n            \n            \n                \nsend(pattern: any, data?: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.types.ts:36\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\n\n/**\n * Type definition for microservices client options.\n */\nexport type MsClientOptions = {\n  timeout: number;\n};\n\n/**\n * Interface defining the contract for the message bus.\n */\nexport interface MessageBus {\n  dispatch(\n    pattern: any,\n    data?: TInput,\n    opts?: MsClientOptions,\n  ): Promise;\n\n  send(\n    pattern: any,\n    data?: TInput,\n    opts?: MsClientOptions,\n  ): Observable;\n\n  emit(\n    pattern: any,\n    data?: TInput,\n    opts?: MsClientOptions,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessagesBroker.html":{"url":"interfaces/MessagesBroker.html","title":"interface - MessagesBroker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessagesBroker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/messages-broker/messages-broker.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface defining the contract for message brokering.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        emit\n                                    \n                                \n                                \n                                    \n                                        subscribe\n                                    \n                                \n                                \n                                    \n                                        unsubscribe\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        emit\n                        \n                    \n                \n            \n            \n                \nemit(chanel: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.types.ts:26\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Emits a message to a specific channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to emit the message to.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to emit.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(chanel: string, handler: (data: T) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.types.ts:33\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Subscribes to a specific channel with a handler function.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to subscribe to.\n\n\n                                            \n                                        \n                                        \n                                                handler\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe handler function to handle the data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe(chanel: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.types.ts:39\n                        \n                    \n\n\n            \n                \n                        Unsubscribes from a specific channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to unsubscribe from.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface MessagesBroker {\n  /**\n   * Emits a message to a specific channel.\n   * @param chanel - The channel to emit the message to.\n   * @param data - The data to emit.\n   */\n  emit(chanel: string, data: T): Promise;\n\n  /**\n   * Subscribes to a specific channel with a handler function.\n   * @param chanel - The channel to subscribe to.\n   * @param handler - The handler function to handle the data.\n   */\n  subscribe(chanel: string, handler: (data: T) => void);\n\n  /**\n   * Unsubscribes from a specific channel.\n   * @param chanel - The channel to unsubscribe from.\n   */\n  unsubscribe(chanel: string);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessagesBrokerModule.html":{"url":"modules/MessagesBrokerModule.html","title":"module - MessagesBrokerModule","body":"\n                   \n\n\n\n\n    Modules\n    MessagesBrokerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MessagesBrokerModule\n\n\n\ncluster_MessagesBrokerModule_imports\n\n\n\n\nRedisModule\n\nRedisModule\n\n\n\nMessagesBrokerModule\n\nMessagesBrokerModule\n\nMessagesBrokerModule -->\n\nRedisModule->MessagesBrokerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/messages-broker/messages-broker.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides message brokering functionality using Redis.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            RedisModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Logger, Module } from \"@nestjs/common\";\nimport { MESSAGES_BROKER } from \"./messages-broker.constants\";\nimport { RedisModule } from \"../cache/redis.module\";\nimport { LogModule } from \"../log/log.module\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\nimport { MessagesBrokerService } from \"./messages-broker.service\";\n\n/**\n * A module that provides message brokering functionality using Redis.\n */\n@Module({\n  imports: [\n    RedisModule.forRootAsync({\n      imports: [LogModule],\n      inject: [LOGGER],\n      useFactory: (logger: Logger) => {\n        EnvLoader.loadEnvironment(logger);\n        return {\n          config: {\n            host: process.env.REDIS_HOST,\n            port: parseInt(process.env.REDIS_PORT),\n            db: parseInt(process.env.REDIS_DB),\n            username: process.env.REDIS_USER,\n            password: process.env.REDIS_PASSWORD,\n          },\n        };\n      },\n    }),\n  ],\n  providers: [\n    {\n      provide: MESSAGES_BROKER,\n      useClass: MessagesBrokerService,\n    },\n  ],\n  exports: [MESSAGES_BROKER],\n})\nexport class MessagesBrokerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessagesBrokerService.html":{"url":"injectables/MessagesBrokerService.html","title":"injectable - MessagesBrokerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessagesBrokerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/messages-broker/messages-broker.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A service that implements the MessagesBroker interface for message brokering using Redis.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                subClient\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscribers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                emit\n                            \n                            \n                                    Private\n                                safeDeSerialize\n                            \n                            \n                                    Private\n                                safeSerialize\n                            \n                            \n                                subscribe\n                            \n                            \n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pubClient: Redis)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pubClient\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        emit\n                        \n                    \n                \n            \n            \n                \n                        \n                    emit(chanel: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:47\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Emits a message to a specific channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to emit the message to.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to emit.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        safeDeSerialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    safeDeSerialize(data: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Safely deserializes a JSON string to an object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe JSON string to deserialize.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The deserialized object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        safeSerialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    safeSerialize(data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:75\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Safely serializes data to a JSON string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to serialize.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The serialized JSON string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(chanel: string, handler: (data: T) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:56\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Subscribes to a specific channel with a handler function.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to subscribe to.\n\n\n                                            \n                                        \n                                        \n                                                handler\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe handler function to handle the data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe(chanel: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Unsubscribes from a specific channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to unsubscribe from.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Redis\n\n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscribers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@nestjs/common\";\nimport Redis from \"ioredis\";\nimport { MessagesBroker } from \"./messages-broker.types\";\nimport { REDIS_CLIENT } from \"../cache/cache.constants\";\n\n/**\n * A service that implements the MessagesBroker interface for message brokering using Redis.\n */\n@Injectable()\nexport class MessagesBrokerService implements MessagesBroker {\n  private readonly subClient: Redis;\n  private readonly subscribers: Map void> =\n    new Map();\n\n  constructor(@Inject(REDIS_CLIENT) private readonly pubClient: Redis) {\n    this.subClient = this.pubClient.duplicate();\n    this.subClient.on(\"message\", (chanel, data) => {\n      if (!this.subscribers.has(chanel)) {\n        return;\n      }\n      const fun = this.subscribers.get(chanel);\n      fun(this.safeDeSerialize(data));\n    });\n  }\n\n  /**\n   * Emits a message to a specific channel.\n   * @param chanel - The channel to emit the message to.\n   * @param data - The data to emit.\n   */\n  async emit(chanel: string, data: T) {\n    await this.pubClient.publish(chanel, this.safeSerialize(data));\n  }\n\n  /**\n   * Subscribes to a specific channel with a handler function.\n   * @param chanel - The channel to subscribe to.\n   * @param handler - The handler function to handle the data.\n   */\n  subscribe(chanel: string, handler: (data: T) => void) {\n    this.subClient.subscribe(chanel);\n    this.subscribers.set(chanel, handler);\n  }\n\n  /**\n   * Unsubscribes from a specific channel.\n   * @param chanel - The channel to unsubscribe from.\n   */\n  unsubscribe(chanel: string) {\n    this.subClient.unsubscribe(chanel);\n    this.subscribers.delete(chanel);\n  }\n\n  /**\n   * Safely serializes data to a JSON string.\n   * @param data - The data to serialize.\n   * @returns The serialized JSON string.\n   */\n  private safeSerialize(data: T) {\n    try {\n      return JSON.stringify(data);\n    } catch (error) {\n      return data.toString();\n    }\n  }\n\n  /**\n   * Safely deserializes a JSON string to an object.\n   * @param data - The JSON string to deserialize.\n   * @returns The deserialized object.\n   */\n  private safeDeSerialize(data: string) {\n    try {\n      return JSON.parse(data);\n    } catch (error) {\n      return data;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MsClient.html":{"url":"classes/MsClient.html","title":"class - MsClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MsClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/ms-client/ms-client.ts\n        \n\n\n            \n                Description\n            \n            \n                Microservices client for dispatching messages between microservices.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MessageBus\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dispatch\n                            \n                            \n                                emit\n                            \n                            \n                                    Private\n                                handleRequest\n                            \n                            \n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, proxy: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/ms-client/ms-client.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        proxy\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dispatch\n                        \n                    \n                \n            \n            \n                \ndispatch(pattern: any, data: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.ts:43\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n                        Dispatches a message with the given pattern and data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    Object()\n                                            \n\n                                            \n                                                    \nThe message data.\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nOptional configuration options for the client.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise resolving to the result of the dispatched message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emit\n                        \n                    \n                \n            \n            \n                \nemit(pattern: any, data: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.ts:80\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n                        Emits a message with the given pattern and data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message data.\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional configuration options for the client.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the result of the emitted message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRequest(source: Observable, pattern: any, data: any, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.ts:97\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Handles the request by logging and managing errors and timeouts.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                source\n                                            \n                                                        Observable\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe observable source.\n\n\n                                            \n                                        \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message data.\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional configuration options for the client.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the result.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        send\n                        \n                    \n                \n            \n            \n                \nsend(pattern: any, data: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.ts:64\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n                        Sends a message with the given pattern and data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message data.\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional configuration options for the client.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the result of the send message.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ClientProxy } from \"@nestjs/microservices\";\nimport { catchError, Observable, throwError, timeout } from \"rxjs\";\nimport { HttpException, HttpStatus, Inject, Logger } from \"@nestjs/common\";\nimport { ObjectUtils } from \"../../utils/object.utils\";\nimport { MessageBus, MsClientOptions } from \"./ms-client.types\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { MS_EXCEPTION_ID } from \"../../constants\";\nimport { MsException } from \"../../exceptions/ms.exception\";\nimport inspect = ObjectUtils.inspect;\n\n/**\n * Microservices client for dispatching messages between microservices.\n */\nexport class MsClient implements MessageBus {\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    private readonly proxy: ClientProxy,\n  ) {}\n\n  /**\n   * Dispatches a message with the given pattern and data.\n   * @param pattern - The message pattern.\n   * @param data - The message data.\n   * @param opts - Optional configuration options for the client.\n   * @returns A promise resolving to the result of the dispatched message.\n   */\n  dispatch(\n    pattern: any,\n    data: TInput = Object(),\n    opts?: MsClientOptions,\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      const source = this.proxy.send(pattern, data);\n      this.handleRequest(source, pattern, data, opts).subscribe({\n        next: (result) => resolve(result),\n        error: (error) => reject(error),\n      });\n    });\n  }\n\n  /**\n   * Sends a message with the given pattern and data.\n   * @param pattern - The message pattern.\n   * @param data - The message data.\n   * @param opts - Optional configuration options for the client.\n   * @returns An observable of the result of the send message.\n   */\n  send(\n    pattern: any,\n    data: TInput,\n    opts?: MsClientOptions,\n  ) {\n    const source = this.proxy.send(pattern, data);\n    return this.handleRequest(source, pattern, data, opts);\n  }\n\n  /**\n   * Emits a message with the given pattern and data.\n   * @param pattern - The message pattern.\n   * @param data - The message data.\n   * @param opts - Optional configuration options for the client.\n   * @returns An observable of the result of the emitted message.\n   */\n  emit(\n    pattern: any,\n    data: TInput,\n    opts?: MsClientOptions,\n  ) {\n    const source = this.proxy.emit(pattern, data);\n    return this.handleRequest(source, pattern, data, opts);\n  }\n\n  /**\n   * Handles the request by logging and managing errors and timeouts.\n   * @param source - The observable source.\n   * @param pattern - The message pattern.\n   * @param data - The message data.\n   * @param opts - Optional configuration options for the client.\n   * @returns An observable of the result.\n   */\n  private handleRequest(\n    source: Observable,\n    pattern: any,\n    data: any,\n    opts?: MsClientOptions,\n  ): Observable {\n    this.logger.debug(`Sending request with pattern: ${inspect(pattern)}`);\n    return source.pipe(\n      timeout(opts?.timeout || parseInt(process.env.TRANSPORT_TIMEOUT)),\n      catchError((error) => {\n        if (error?.type === MS_EXCEPTION_ID) {\n          const err = error as MsException;\n          this.logger.error(\n            `Microservice exception: ${err.message}`,\n            err.stack,\n          );\n          throw new HttpException(err.message, err.code);\n        }\n        if (error.name === \"TimeoutError\") {\n          this.logger.warn(`Request timeout for pattern: ${inspect(pattern)}`);\n          throw new HttpException(\n            \"Request Timeout\",\n            HttpStatus.REQUEST_TIMEOUT,\n          );\n        }\n        this.logger.error(\n          `Unknown error for pattern: ${inspect(pattern)}`,\n          error,\n        );\n        return throwError(error);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MsClientModule.html":{"url":"modules/MsClientModule.html","title":"module - MsClientModule","body":"\n                   \n\n\n\n\n    Modules\n    MsClientModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MsClientModule\n\n\n\ncluster_MsClientModule_imports\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nMsClientModule\n\nMsClientModule\n\nMsClientModule -->\n\nLogModule->MsClientModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/ms-client/ms-client.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides microservices client functionality for dispatching messages between microservices.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            LogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Logger, Module } from \"@nestjs/common\";\nimport { ClientProxy, ClientsModule } from \"@nestjs/microservices\";\nimport { LogModule } from \"../log/log.module\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { MS_CLIENT, MSG_BUS } from \"./ms-client.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\nimport { MsClient } from \"./ms-client\";\n\n/**\n * A module that provides microservices client functionality for dispatching messages between microservices.\n */\n@Module({\n  imports: [\n    LogModule,\n    ClientsModule.registerAsync([\n      {\n        imports: [LogModule],\n        inject: [LOGGER],\n        name: MS_CLIENT,\n        useFactory: (logger: Logger) => {\n          EnvLoader.loadEnvironment(logger);\n          return {\n            transport: parseInt(process.env.TRANSPORT_TYPE),\n            options: {\n              host: process.env.TRANSPORT_HOST,\n              port: parseInt(process.env.TRANSPORT_PORT),\n              timeout: parseInt(process.env.TRANSPORT_TIMEOUT),\n            },\n          };\n        },\n      },\n    ]),\n  ],\n  providers: [\n    {\n      provide: MSG_BUS,\n      useFactory: (logger: Logger, client: ClientProxy) =>\n        new MsClient(logger, client),\n      inject: [LOGGER, MS_CLIENT],\n    },\n  ],\n  exports: [MSG_BUS],\n})\nexport class MsClientModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MsException.html":{"url":"classes/MsException.html","title":"class - MsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Base class for custom microservice exceptions, extending RpcException.\n\n            \n\n            \n                Extends\n            \n            \n                        RpcException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(code: number, message: string, stack?: any)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stack\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RpcException } from \"@nestjs/microservices\";\nimport { MS_EXCEPTION_ID } from \"../constants\";\n\n/**\n * Base class for custom microservice exceptions, extending RpcException.\n */\nexport class MsException extends RpcException {\n  constructor(\n    readonly code: number,\n    readonly message: string = undefined,\n    readonly stack?: any,\n  ) {\n    super({ type: MS_EXCEPTION_ID, message, code, stack });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotEmptyPipe.html":{"url":"injectables/NotEmptyPipe.html","title":"injectable - NotEmptyPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotEmptyPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/pipes/not-empty.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Pipe to ensure a value is not empty.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fieldName: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/pipes/not-empty.pipe.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fieldName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/pipes/not-empty.pipe.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, PipeTransform } from \"@nestjs/common\";\n\n/**\n * Pipe to ensure a value is not empty.\n */\n@Injectable()\nexport class NotEmptyPipe implements PipeTransform {\n  constructor(private readonly fieldName: string) {}\n\n  transform(value: any) {\n    if (!value || Object.keys(value).length === 0) {\n      throw new BadRequestException(`${this.fieldName} cannot be empty`);\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundMsException.html":{"url":"classes/NotFoundMsException.html","title":"class - NotFoundMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/not-found-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for not found requests, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/not-found-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for not found requests, extending MsException.\n */\nexport class NotFoundMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.NOT_FOUND, message || \"Not found\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageableData.html":{"url":"classes/PageableData.html","title":"class - PageableData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageableData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/pageable/pageable.types.ts\n        \n\n\n            \n                Description\n            \n            \n                A class that represents paginated data.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: T[], totalCount: number, currentPage: number, pageSize: number)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:56\n                            \n                        \n\n                \n                    \n                            Creates an instance of PageableData.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe items for the current page.\n\n\n                                                        \n                                                \n                                                \n                                                        totalCount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe total number of items available.\n\n\n                                                        \n                                                \n                                                \n                                                        currentPage\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe current page number.\n\n\n                                                        \n                                                \n                                                \n                                                        pageSize\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe number of items per page.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { Max, Min } from \"class-validator\";\n\n/**\n * A class that defines the parameters for pagination.\n */\nexport class PageableParams {\n  @Min(1)\n  @Max(1000)\n  @Type(() => Number)\n  /**\n   * The maximum number of items to return per page.\n   * @type {number}\n   * @default 20\n   */\n  limit = 20;\n\n  @Min(1)\n  @Type(() => Number)\n  /**\n   * The page number to return.\n   * @type {number}\n   * @default 1\n   */\n  page = 1;\n\n  @Type(() => String)\n  /**\n   * The field by which to sort the items.\n   * @type {string}\n   * @optional\n   */\n  sort?: string;\n\n  @Type(() => String)\n  /**\n   * The order in which to sort the items.\n   * @type {SortOrder}\n   * @optional\n   */\n  order?: SortOrder;\n\n  @Type(() => String)\n  /**\n   * The filter criteria to apply to the items.\n   * @type {string}\n   * @optional\n   */\n  filter?: string;\n}\n\n/**\n * A class that represents paginated data.\n * @template T - The type of items in the paginated data.\n */\nexport class PageableData {\n  /**\n   * Creates an instance of PageableData.\n   * @param {T[]} items - The items for the current page.\n   * @param {number} totalCount - The total number of items available.\n   * @param {number} currentPage - The current page number.\n   * @param {number} pageSize - The number of items per page.\n   */\n  constructor(\n    readonly items: T[],\n    readonly totalCount: number,\n    readonly currentPage: number,\n    readonly pageSize: number,\n  ) {}\n}\n\n/**\n * @enum SortOrder\n * Enumeration for the sort order.\n */\nexport enum SortOrder {\n  ASC = \"ASC\",\n  DESC = \"DESC\",\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageableParams.html":{"url":"classes/PageableParams.html","title":"class - PageableParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageableParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/pageable/pageable.types.ts\n        \n\n\n            \n                Description\n            \n            \n                A class that defines the parameters for pagination.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                filter\n                            \n                            \n                                    \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    Optional\n                                order\n                            \n                            \n                                    \n                                    \n                                page\n                            \n                            \n                                    \n                                    Optional\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(1)@Max(1000)@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SortOrder\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(1)@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { Max, Min } from \"class-validator\";\n\n/**\n * A class that defines the parameters for pagination.\n */\nexport class PageableParams {\n  @Min(1)\n  @Max(1000)\n  @Type(() => Number)\n  /**\n   * The maximum number of items to return per page.\n   * @type {number}\n   * @default 20\n   */\n  limit = 20;\n\n  @Min(1)\n  @Type(() => Number)\n  /**\n   * The page number to return.\n   * @type {number}\n   * @default 1\n   */\n  page = 1;\n\n  @Type(() => String)\n  /**\n   * The field by which to sort the items.\n   * @type {string}\n   * @optional\n   */\n  sort?: string;\n\n  @Type(() => String)\n  /**\n   * The order in which to sort the items.\n   * @type {SortOrder}\n   * @optional\n   */\n  order?: SortOrder;\n\n  @Type(() => String)\n  /**\n   * The filter criteria to apply to the items.\n   * @type {string}\n   * @optional\n   */\n  filter?: string;\n}\n\n/**\n * A class that represents paginated data.\n * @template T - The type of items in the paginated data.\n */\nexport class PageableData {\n  /**\n   * Creates an instance of PageableData.\n   * @param {T[]} items - The items for the current page.\n   * @param {number} totalCount - The total number of items available.\n   * @param {number} currentPage - The current page number.\n   * @param {number} pageSize - The number of items per page.\n   */\n  constructor(\n    readonly items: T[],\n    readonly totalCount: number,\n    readonly currentPage: number,\n    readonly pageSize: number,\n  ) {}\n}\n\n/**\n * @enum SortOrder\n * Enumeration for the sort order.\n */\nexport enum SortOrder {\n  ASC = \"ASC\",\n  DESC = \"DESC\",\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProcessController.html":{"url":"controllers/ProcessController.html","title":"controller - ProcessController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProcessController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                process\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                getLogs\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getStats\n                            \n                            \n                                    \n                                    \n                                    Async\n                                startProcess\n                            \n                            \n                                    \n                                    \n                                    Async\n                                stopProcess\n                            \n                            \n                                    \n                                    \n                                    Async\n                                toggleProcess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getLogs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLogs(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/log/:id')@ForRoles(Roles.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/process/process.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getStats\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStats(code: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/stats/:code')@ForRoles(Roles.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/process/process.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        startProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    startProcess(code: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/start/:code')@ForRoles(Roles.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/process/process.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        stopProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    stopProcess(code: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/stop/:code')@ForRoles(Roles.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/process/process.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        toggleProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleProcess(code: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/toggle/:code')@ForRoles(Roles.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/process/process.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Controller,\n  Get,\n  NotFoundException,\n  Param,\n  UseGuards,\n} from \"@nestjs/common\";\nimport { CommonUtils } from \"../../shared/utils/common.utils\";\nimport { AuthGuard } from \"../../shared/guards/auth.guard\";\nimport { ProcessManagerService } from \"./process-manager.service\";\nimport { ForRoles } from \"../../shared/decorators/for-roles.decorator\";\nimport { Roles } from \"../../shared/constants\";\nimport sleep = CommonUtils.sleep;\n\n@Controller(\"process\")\n@UseGuards(AuthGuard)\nexport class ProcessController {\n  constructor(private readonly pmService: ProcessManagerService) {}\n\n  @Get(\"/start/:code\")\n  @ForRoles(Roles.ADMIN)\n  async startProcess(@Param(\"code\") code: string) {\n    await this.pmService.startProcess(code);\n  }\n\n  @Get(\"/stop/:code\")\n  @ForRoles(Roles.ADMIN)\n  async stopProcess(@Param(\"code\") code: string) {\n    await this.pmService.stopProcess(code);\n  }\n\n  @Get(\"/toggle/:code\")\n  @ForRoles(Roles.ADMIN)\n  async toggleProcess(@Param(\"code\") code: string) {\n    await this.pmService.toggleProcess(code);\n  }\n\n  @Get(\"/stats/:code\")\n  @ForRoles(Roles.ADMIN)\n  async getStats(@Param(\"code\") code: string) {\n    const processData = await this.pmService.getProcessData(code, true);\n    if (!processData) {\n      throw new NotFoundException();\n    }\n    processData.logs = await this.pmService.getLastLogsByProcess(\n      processData.code,\n    );\n    return processData;\n  }\n\n  @Get(\"/log/:id\")\n  @ForRoles(Roles.ADMIN)\n  async getLogs(@Param(\"id\") id: number) {\n    const logData = await this.pmService.getProcessLogById(id);\n    if (!logData) {\n      throw new NotFoundException();\n    }\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessLog.html":{"url":"interfaces/ProcessLog.html","title":"interface - ProcessLog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a process log entry.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            process\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                                \n                                        \n                                            tsUpdated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        process\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        process:         ProcessUnit\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProcessUnit\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsUpdated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsUpdated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Process } from \"./process.constants\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\n/**\n * Interface representing a process log entry.\n */\nexport interface ProcessLog {\n  id: number;\n  content: string;\n  tsCreated: Date;\n  tsUpdated: Date;\n  process: ProcessUnit;\n}\n\n/**\n * Interface representing a process unit.\n */\nexport interface ProcessUnit {\n  code: string;\n  status: Process.Status;\n  enabled: boolean;\n  description: LocalizedString[];\n  cronTab: string;\n  logs: ProcessLog[];\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProcessLogEntity.html":{"url":"entities/ProcessLogEntity.html","title":"entity - ProcessLogEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProcessLogEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/entity/process.log.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores logs of system processes\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                process\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                            \n                                    \n                                    \n                                tsUpdated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        process\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessUnitEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@UpdateDateColumn({name: 'ts_updated', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:46\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from \"typeorm\";\nimport { ProcessUnitEntity } from \"./process.unit.entity\";\nimport { ProcessLog } from \"../process.types\";\n\n/**\n * The entity stores logs of system processes\n */\n@Entity(\"process_logs\")\nexport class ProcessLogEntity implements ProcessLog {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Column(\"text\", { nullable: true })\n  content: string;\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n\n  @Index()\n  @UpdateDateColumn({ name: \"ts_updated\", type: \"timestamp\" })\n  tsUpdated: Date;\n\n  @ManyToOne(() => ProcessUnitEntity, (t) => t.code)\n  process: ProcessUnitEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessManagerService.html":{"url":"injectables/ProcessManagerService.html","title":"injectable - ProcessManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProcessManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process-manager.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing processes.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                pmInitStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLogInstance\n                            \n                            \n                                getLastLogsByProcess\n                            \n                            \n                                getProcessData\n                            \n                            \n                                getProcessLogById\n                            \n                            \n                                    Async\n                                getProcessUnitStatus\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Private\n                                    Async\n                                resetAllProcessStatuses\n                            \n                            \n                                    Async\n                                setProcessUnitStatus\n                            \n                            \n                                    Async\n                                startProcess\n                            \n                            \n                                    Async\n                                stopProcess\n                            \n                            \n                                    Async\n                                toggleProcess\n                            \n                            \n                                updateLogInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lockExec: WarlockFn, logger: Logger, broker: MessagesBroker, processUnitRep: Repository, processLogRep: Repository)\n                    \n                \n                        \n                            \n                                Defined in lib/common/process/process-manager.service.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lockExec\n                                                  \n                                                        \n                                                                        WarlockFn\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        broker\n                                                  \n                                                        \n                                                                        MessagesBroker\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processUnitRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processLogRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createLogInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLogInstance(processCode: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:151\n                        \n                    \n\n\n            \n                \n                        Creates a log instance for a process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The created ProcessLogEntity instance.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLastLogsByProcess\n                        \n                    \n                \n            \n            \n                \ngetLastLogsByProcess(processCode: string, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:197\n                        \n                    \n\n\n            \n                \n                        Gets the last logs of a process by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe code of the process.\n\n\n                                            \n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3\n                                            \n\n                                            \n                                                    \nThe maximum number of logs to retrieve (default is 3).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An array of ProcessLogEntity instances.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProcessData\n                        \n                    \n                \n            \n            \n                \ngetProcessData(code: string, force)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:174\n                        \n                    \n\n\n            \n                \n                        Gets process data by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe code of the process.\n\n\n                                            \n                                        \n                                        \n                                                force\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    \nWhether to force getting the process data regardless of its enabled status.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The ProcessUnitEntity instance.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProcessLogById\n                        \n                    \n                \n            \n            \n                \ngetProcessLogById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:184\n                        \n                    \n\n\n            \n                \n                        Gets a process log by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the process log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The ProcessLogEntity instance.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProcessUnitStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProcessUnitStatus(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:141\n                        \n                    \n\n\n            \n                \n                        Gets the status of a process unit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process unit.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The current status of the process unit.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Initializes the process manager service, resets process statuses, and registers processes.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        resetAllProcessStatuses\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetAllProcessStatuses()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:208\n                        \n                    \n\n\n            \n                \n                        Resets the statuses of all enabled processes to \"Ready\".\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setProcessUnitStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    setProcessUnitStatus(code: string, status: Process.Status)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:130\n                        \n                    \n\n\n            \n                \n                        Sets the status of a process unit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process unit.\n\n\n                                            \n                                        \n                                        \n                                                status\n                                            \n                                                            Process.Status\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new status to set.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        startProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    startProcess(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:83\n                        \n                    \n\n\n            \n                \n                        Starts a process by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process to start.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stopProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    stopProcess(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:97\n                        \n                    \n\n\n            \n                \n                        Stops a process by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process to stop.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        toggleProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleProcess(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:111\n                        \n                    \n\n\n            \n                \n                        Toggles the enabled status of a process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process to toggle.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateLogInstance\n                        \n                    \n                \n            \n            \n                \nupdateLogInstance(logInstance: ProcessLogEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:164\n                        \n                    \n\n\n            \n                \n                        Updates a log instance.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                logInstance\n                                            \n                                                            ProcessLogEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ProcessLogEntity instance to update.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The updated ProcessLogEntity instance.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        pmInitStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/process-manager.service.ts:42\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n  Logger,\n} from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { ProcessUnitEntity } from \"./entity/process.unit.entity\";\nimport { Process } from \"./process.constants\";\nimport { ProcessLogEntity } from \"./entity/process.log.entity\";\nimport { WARLOCK } from \"../../shared/modules/warlock/warlock.constants\";\nimport { WarlockFn } from \"../../shared/modules/warlock/warlock.types\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { MESSAGES_BROKER } from \"../../shared/modules/messages-broker/messages-broker.constants\";\nimport { MessagesBroker } from \"../../shared/modules/messages-broker/messages-broker.types\";\nimport Status = Process.Status;\nimport Command = Process.Command;\nimport hasProcessInstance = Process.hasProcessInstance;\n\n/**\n * Service for managing processes.\n */\n@Injectable()\nexport class ProcessManagerService {\n  private static pmInitStatus: boolean;\n\n  constructor(\n    @Inject(WARLOCK) private readonly lockExec: WarlockFn,\n    @Inject(LOGGER) private readonly logger: Logger,\n    @Inject(MESSAGES_BROKER) private readonly broker: MessagesBroker,\n    @InjectRepository(ProcessUnitEntity)\n    private readonly processUnitRep: Repository,\n    @InjectRepository(ProcessLogEntity)\n    private readonly processLogRep: Repository,\n  ) {}\n\n  /**\n   * Initializes the process manager service, resets process statuses, and registers processes.\n   */\n  async init() {\n    if (ProcessManagerService.pmInitStatus) {\n      this.logger.warn(\"Autostart processes has been executed\");\n      return;\n    }\n    await this.resetAllProcessStatuses();\n    this.logger.log(\"Init process manager\");\n    ProcessManagerService.pmInitStatus = true;\n    const processList = await this.processUnitRep.find({\n      where: { enabled: true },\n    });\n    for (const processData of processList) {\n      if (!processData.cronTab?.length) {\n        this.logger.warn(\n          `Process ${processData.code} hasn't cron-tab, skip job registration`,\n        );\n        continue;\n      }\n      this.broker.emit(Command.Register, processData);\n    }\n  }\n\n  /**\n   * Starts a process by its code.\n   * @param code - The code of the process to start.\n   */\n  async startProcess(code: string) {\n    const processData = await this.getProcessData(code, true);\n    if (!processData) {\n      throw new InternalServerErrorException(\n        `Process ${code} hasn't options-data`,\n      );\n    }\n    this.broker.emit(Command.Start, processData);\n  }\n\n  /**\n   * Stops a process by its code.\n   * @param code - The code of the process to stop.\n   */\n  async stopProcess(code: string) {\n    const processData = await this.getProcessData(code, true);\n    if (!processData) {\n      throw new InternalServerErrorException(\n        `Process ${code} hasn't options-data`,\n      );\n    }\n    this.broker.emit(Command.Stop, processData);\n  }\n\n  /**\n   * Toggles the enabled status of a process.\n   * @param code - The code of the process to toggle.\n   */\n  async toggleProcess(code: string) {\n    if (!hasProcessInstance(code)) {\n      throw new InternalServerErrorException(`Process ${code} not exists`);\n    }\n    const processData = await this.processUnitRep.findOne({ where: { code } });\n    processData.enabled = !processData.enabled;\n    await this.processUnitRep.save(processData);\n    if (processData.enabled) {\n      this.broker.emit(Command.Register, processData);\n    } else {\n      this.broker.emit(Command.Unregister, processData);\n    }\n  }\n\n  /**\n   * Sets the status of a process unit.\n   * @param code - The code of the process unit.\n   * @param status - The new status to set.\n   */\n  async setProcessUnitStatus(code: string, status: Process.Status) {\n    const processData = await this.getProcessData(code, true);\n    processData.status = status;\n    return this.processUnitRep.save(processData);\n  }\n\n  /**\n   * Gets the status of a process unit.\n   * @param code - The code of the process unit.\n   * @returns The current status of the process unit.\n   */\n  async getProcessUnitStatus(code: string) {\n    const processData = await this.getProcessData(code, true);\n    return processData.status;\n  }\n\n  /**\n   * Creates a log instance for a process.\n   * @param processCode - The code of the process.\n   * @returns The created ProcessLogEntity instance.\n   */\n  async createLogInstance(processCode: string) {\n    const process = await this.getProcessData(processCode);\n    return this.processLogRep.save({\n      process,\n      content: \"\",\n    } as ProcessLogEntity);\n  }\n\n  /**\n   * Updates a log instance.\n   * @param logInstance - The ProcessLogEntity instance to update.\n   * @returns The updated ProcessLogEntity instance.\n   */\n  updateLogInstance(logInstance: ProcessLogEntity) {\n    return this.processLogRep.save(logInstance);\n  }\n\n  /**\n   * Gets process data by its code.\n   * @param code - The code of the process.\n   * @param force - Whether to force getting the process data regardless of its enabled status.\n   * @returns The ProcessUnitEntity instance.\n   */\n  getProcessData(code: string, force = false) {\n    const params = { code, enabled: true };\n    return this.processUnitRep.findOne({ where: force ? { code } : params });\n  }\n\n  /**\n   * Gets a process log by its ID.\n   * @param id - The ID of the process log.\n   * @returns The ProcessLogEntity instance.\n   */\n  getProcessLogById(id: number) {\n    return this.processLogRep.findOne({\n      where: { id },\n      relations: [\"process\"],\n    });\n  }\n\n  /**\n   * Gets the last logs of a process by its code.\n   * @param processCode - The code of the process.\n   * @param limit - The maximum number of logs to retrieve (default is 3).\n   * @returns An array of ProcessLogEntity instances.\n   */\n  getLastLogsByProcess(processCode: string, limit = 3) {\n    return this.processLogRep.find({\n      where: { process: { code: processCode } },\n      take: limit,\n      order: { tsUpdated: \"DESC\" },\n    });\n  }\n\n  /**\n   * Resets the statuses of all enabled processes to \"Ready\".\n   */\n  private async resetAllProcessStatuses() {\n    const entities = await this.processUnitRep.find({\n      where: { enabled: true },\n    });\n    for (const processData of entities) {\n      await this.setProcessUnitStatus(processData.code, Status.Ready);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProcessModule.html":{"url":"modules/ProcessModule.html","title":"module - ProcessModule","body":"\n                   \n\n\n\n\n    Modules\n    ProcessModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProcessModule\n\n\n\ncluster_ProcessModule_imports\n\n\n\ncluster_ProcessModule_providers\n\n\n\ncluster_ProcessModule_exports\n\n\n\n\nCacheModule\n\nCacheModule\n\n\n\nProcessModule\n\nProcessModule\n\nProcessModule -->\n\nCacheModule->ProcessModule\n\n\n\n\n\nLogModule\n\nLogModule\n\nProcessModule -->\n\nLogModule->ProcessModule\n\n\n\n\n\nMessagesBrokerModule\n\nMessagesBrokerModule\n\nProcessModule -->\n\nMessagesBrokerModule->ProcessModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nProcessModule -->\n\nUserModule->ProcessModule\n\n\n\n\n\nWarlockModule\n\nWarlockModule\n\nProcessModule -->\n\nWarlockModule->ProcessModule\n\n\n\n\n\nProcessManagerService \n\nProcessManagerService \n\nProcessManagerService  -->\n\nProcessModule->ProcessManagerService \n\n\n\n\n\nProcessManagerService\n\nProcessManagerService\n\nProcessModule -->\n\nProcessManagerService->ProcessModule\n\n\n\n\n\nProcessRegisterService\n\nProcessRegisterService\n\nProcessModule -->\n\nProcessRegisterService->ProcessModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/process/process.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module is responsible for initializing and managing processes in the application.\nIt uses the NestJS lifecycle hook onApplicationBootstrap to initialize processes on startup.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProcessManagerService\n                        \n                        \n                            ProcessRegisterService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProcessController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CacheModule\n                        \n                        \n                            LogModule\n                        \n                        \n                            MessagesBrokerModule\n                        \n                        \n                            UserModule\n                        \n                        \n                            WarlockModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProcessManagerService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onApplicationBootstrap\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationBootstrap()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process.module.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Global, Module, OnApplicationBootstrap } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { ProcessUnitEntity } from \"./entity/process.unit.entity\";\nimport { ProcessManagerService } from \"./process-manager.service\";\nimport { ScheduleModule } from \"@nestjs/schedule\";\nimport { ProcessRegisterService } from \"./process-register.service\";\nimport { ProcessLogEntity } from \"./entity/process.log.entity\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { MessagesBrokerModule } from \"../../shared/modules/messages-broker/messages-broker.module\";\nimport { WarlockModule } from \"../../shared/modules/warlock/warlock.module\";\nimport { ProcessController } from \"./process.controller\";\nimport { UserModule } from \"../user/user.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\n\n/**\n * Module is responsible for initializing and managing processes in the application.\n * It uses the NestJS lifecycle hook `onApplicationBootstrap` to initialize processes on startup.\n */\n@Global()\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([ProcessUnitEntity, ProcessLogEntity]),\n    ScheduleModule.forRoot(),\n    LogModule,\n    MessagesBrokerModule,\n    WarlockModule,\n    UserModule.forRoot(),\n    CacheModule,\n  ],\n  controllers: [ProcessController],\n  providers: [ProcessManagerService, ProcessRegisterService],\n  exports: [ProcessManagerService],\n})\nexport class ProcessModule implements OnApplicationBootstrap {\n  constructor(private readonly pmService: ProcessManagerService) {}\n\n  async onApplicationBootstrap() {\n    await this.pmService.init();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessRegisterService.html":{"url":"injectables/ProcessRegisterService.html","title":"injectable - ProcessRegisterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProcessRegisterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process-register.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for registering and managing cron jobs for processes.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                registerCronJob\n                            \n                            \n                                    Private\n                                startProcess\n                            \n                            \n                                    Private\n                                stopProcess\n                            \n                            \n                                    Private\n                                    Async\n                                unregisterCronJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, lockExec: WarlockFn, broker: MessagesBrokerService, pmService: ProcessManagerService, schedulerRegistry: SchedulerRegistry)\n                    \n                \n                        \n                            \n                                Defined in lib/common/process/process-register.service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockExec\n                                                  \n                                                        \n                                                                        WarlockFn\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        broker\n                                                  \n                                                        \n                                                                        MessagesBrokerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pmService\n                                                  \n                                                        \n                                                                        ProcessManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schedulerRegistry\n                                                  \n                                                        \n                                                                    SchedulerRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        registerCronJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerCronJob(processData: ProcessUnit)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-register.service.ts:91\n                        \n                    \n\n\n            \n                \n                        Registers a cron job for a process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processData\n                                            \n                                                            ProcessUnit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the process to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                True if the cron job was registered, otherwise false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    startProcess(processData: ProcessUnit)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-register.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Starts a registered process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processData\n                                            \n                                                            ProcessUnit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the process to start.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stopProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    stopProcess(processData: ProcessUnit)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-register.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Stops a registered process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processData\n                                            \n                                                            ProcessUnit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the process to stop.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        unregisterCronJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    unregisterCronJob(processData: ProcessUnit)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-register.service.ts:126\n                        \n                    \n\n\n            \n                \n                        Unregisters a cron job for a process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processData\n                                            \n                                                            ProcessUnit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the process to unregister.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                True if the cron job was unregistered, otherwise false.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { SchedulerRegistry } from \"@nestjs/schedule\";\nimport { CronJob } from \"cron/dist/job\";\nimport { ProcessManagerService } from \"./process-manager.service\";\nimport { Process } from \"./process.constants\";\nimport { ProcessUnit } from \"./process.types\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { WARLOCK } from \"../../shared/modules/warlock/warlock.constants\";\nimport { WarlockFn } from \"../../shared/modules/warlock/warlock.types\";\nimport { MESSAGES_BROKER } from \"../../shared/modules/messages-broker/messages-broker.constants\";\nimport { MessagesBrokerService } from \"../../shared/modules/messages-broker/messages-broker.service\";\nimport getProcessInstance = Process.getProcessInstance;\nimport Command = Process.Command;\nimport Status = Process.Status;\n\n/**\n * Service for registering and managing cron jobs for processes.\n */\n@Injectable()\nexport class ProcessRegisterService {\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    @Inject(WARLOCK) private readonly lockExec: WarlockFn,\n    @Inject(MESSAGES_BROKER) private readonly broker: MessagesBrokerService,\n    private readonly pmService: ProcessManagerService,\n    private readonly schedulerRegistry: SchedulerRegistry,\n  ) {\n    broker.subscribe(Command.Register, (data) =>\n      this.registerCronJob(data),\n    );\n    broker.subscribe(Command.Unregister, (data) =>\n      this.unregisterCronJob(data),\n    );\n    broker.subscribe(Command.Start, (data) =>\n      this.startProcess(data),\n    );\n    broker.subscribe(Command.Stop, (data) =>\n      this.stopProcess(data),\n    );\n  }\n\n  /**\n   * Starts a registered process.\n   * @param processData - The data of the process to start.\n   */\n  private startProcess(processData: ProcessUnit) {\n    const processInstance = getProcessInstance(processData.code);\n    if (!processInstance) {\n      this.logger.error(`Process ${processData.code} not registered`);\n      return;\n    }\n    this.lockExec(`${processData.code}_start`, async () =>\n      processInstance.start(),\n    );\n  }\n\n  /**\n   * Stops a registered process.\n   * @param processData - The data of the process to stop.\n   */\n  private stopProcess(processData: ProcessUnit) {\n    const processInstance = getProcessInstance(processData.code);\n    if (!processInstance) {\n      this.logger.error(`Process ${processData.code} not registered`);\n      return;\n    }\n    processInstance.stop();\n  }\n\n  /**\n   * Registers a cron job for a process.\n   * @param processData - The data of the process to register.\n   * @returns True if the cron job was registered, otherwise false.\n   */\n  private async registerCronJob(processData: ProcessUnit) {\n    if (this.schedulerRegistry.doesExist(\"cron\", processData.code)) {\n      this.logger.warn(\n        `Can't register cron job with code ${processData.code}, that already exists`,\n      );\n      return false;\n    }\n    await this.pmService.setProcessUnitStatus(processData.code, Status.Ready);\n    const processInstance = getProcessInstance(processData.code);\n    if (!processInstance) {\n      this.logger.error(`Process ${processData.code} not registered`);\n      return;\n    }\n    if (!processData.cronTab?.length) {\n      this.logger.warn(\n        `Process ${processData.code} hasn't cron-tab, skip job registration`,\n      );\n      return false;\n    }\n    const job = new CronJob(processData.cronTab, () => {\n      this.lockExec(\n        processData.code,\n        async () => await processInstance.start(),\n      );\n    });\n    job.start();\n    this.schedulerRegistry.addCronJob(processData.code, job);\n    return true;\n  }\n\n  /**\n   * Unregisters a cron job for a process.\n   * @param processData - The data of the process to unregister.\n   * @returns True if the cron job was unregistered, otherwise false.\n   */\n  private async unregisterCronJob(processData: ProcessUnit) {\n    if (!this.schedulerRegistry.doesExist(\"cron\", processData.code)) {\n      this.logger.warn(\n        `Can't unregister cron job with code ${processData.code}`,\n      );\n      return false;\n    }\n    const job = this.schedulerRegistry.getCronJob(processData.code);\n    job.stop();\n    this.schedulerRegistry.deleteCronJob(processData.code);\n    this.pmService.stopProcess(processData.code);\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessUnit.html":{"url":"interfaces/ProcessUnit.html","title":"interface - ProcessUnit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessUnit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a process unit.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            cronTab\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            enabled\n                                        \n                                \n                                \n                                        \n                                            logs\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cronTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cronTab:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logs:         ProcessLog[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProcessLog[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         Process.Status\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Process.Status\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Process } from \"./process.constants\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\n/**\n * Interface representing a process log entry.\n */\nexport interface ProcessLog {\n  id: number;\n  content: string;\n  tsCreated: Date;\n  tsUpdated: Date;\n  process: ProcessUnit;\n}\n\n/**\n * Interface representing a process unit.\n */\nexport interface ProcessUnit {\n  code: string;\n  status: Process.Status;\n  enabled: boolean;\n  description: LocalizedString[];\n  cronTab: string;\n  logs: ProcessLog[];\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProcessUnitEntity.html":{"url":"entities/ProcessUnitEntity.html","title":"entity - ProcessUnitEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProcessUnitEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/entity/process.unit.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores system processes, their configuration and state\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                cronTab\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                enabled\n                            \n                            \n                                    \n                                logs\n                            \n                            \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        cronTab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'cron_tab', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        enabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessLogEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, c => c.process, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Process.Status\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({type: 'enum', enum: undefined, default: undefined, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:70\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  OneToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { Process } from \"../process.constants\";\nimport { ProcessUnit } from \"../process.types\";\nimport { ProcessLogEntity } from \"./process.log.entity\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\n\n/**\n * The entity stores system processes, their configuration and state\n */\n@Entity(\"process_units\")\nexport class ProcessUnitEntity implements ProcessUnit {\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @Index()\n  @Column({\n    type: \"enum\",\n    enum: [\n      Process.Status.Ready,\n      Process.Status.Execute,\n      Process.Status.Crashed,\n    ],\n    default: null,\n    nullable: true,\n  })\n  status: Process.Status;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  enabled: boolean;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @Index()\n  @Column(\"varchar\", { name: \"cron_tab\", nullable: true })\n  cronTab: string;\n\n  @OneToMany(() => ProcessLogEntity, (c) => c.process, { cascade: true })\n  logs: ProcessLogEntity[];\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /profile\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createUserProfile\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getUserProfile\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                removeUserProfile\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateUserProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        createUserProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUserProfile(profile: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseDto(UserDto)@Post('/')@ForRoles(Roles.ADMIN, Roles.MANAGER)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/user/profile.controller.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                profile\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getUserProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserProfile(id: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseDto(UserDto)@Get('/:id?')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/user/profile.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        removeUserProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeUserProfile(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseDto(UserDto)@Delete('/:id')@ForRoles(Roles.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/user/profile.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updateUserProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserProfile(id: string, profile: User, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseDto(UserDto)@Patch('/:id?')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/user/profile.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                profile\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Body,\n  Controller,\n  Delete,\n  ForbiddenException,\n  Get,\n  NotFoundException,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from \"@nestjs/common\";\nimport { UserUtils } from \"../../shared/utils/user.utils\";\nimport { AuthGuard } from \"../../shared/guards/auth.guard\";\nimport { RolesGuard } from \"../../shared/guards/roles.guard\";\nimport { BasicUserController, User, UserDto, UserService } from \"./user.types\";\nimport { ResponseDto } from \"../../shared/decorators/response-dto.decorator\";\nimport { CurrentUser } from \"../../shared/decorators/current-user.decorator\";\nimport { UserEntity } from \"./entity/user.entity\";\nimport { Roles } from \"../../shared/constants\";\nimport { ForRoles } from \"../../shared/decorators/for-roles.decorator\";\nimport hasSomeRole = UserUtils.hasSomeRole;\n\n@Controller(\"/profile\")\n@UseGuards(AuthGuard, RolesGuard)\nexport class ProfileController implements BasicUserController {\n  constructor(private readonly userService: UserService) {}\n\n  @ResponseDto(UserDto)\n  @Get(\"/:id?\")\n  async getUserProfile(\n    @Param(\"id\") id: string,\n    @CurrentUser() user: User,\n  ): Promise {\n    if (!id) {\n      return user;\n    }\n    if (!hasSomeRole(user.roles, Roles.ADMIN, Roles.MANAGER)) {\n      throw new ForbiddenException();\n    }\n    const data = await this.userService.findById(id);\n    if (!data) {\n      throw new NotFoundException();\n    }\n    return data;\n  }\n\n  @ResponseDto(UserDto)\n  @Patch(\"/:id?\")\n  async updateUserProfile(\n    @Param(\"id\") id: string,\n    @Body() profile: User,\n    @CurrentUser() user: User,\n  ): Promise {\n    if (id && !hasSomeRole(user.roles, Roles.ADMIN)) {\n      throw new ForbiddenException();\n    }\n    return await this.userService.updateById(id ?? user.id, profile);\n  }\n\n  @ResponseDto(UserDto)\n  @Delete(\"/:id\")\n  @ForRoles(Roles.ADMIN)\n  async removeUserProfile(@Param(\"id\") id: string): Promise {\n    return await this.userService.removeById(id);\n  }\n\n  @ResponseDto(UserDto)\n  @Post(\"/\")\n  @ForRoles(Roles.ADMIN, Roles.MANAGER)\n  async createUserProfile(@Body() profile: User): Promise {\n    return await this.userService.create(profile);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RedisCacheService.html":{"url":"injectables/RedisCacheService.html","title":"injectable - RedisCacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RedisCacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/cache/redis-cache.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A service class that provides cache storage functionality implementing the CacheService interface.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                del\n                            \n                            \n                                    Async\n                                expire\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getBoolean\n                            \n                            \n                                getFromPattern\n                            \n                            \n                                    Async\n                                getNumber\n                            \n                            \n                                    Async\n                                incr\n                            \n                            \n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, client: Redis)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/cache/redis-cache.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        del\n                        \n                    \n                \n            \n            \n                \n                        \n                    del(...keys: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:102\n                        \n                    \n\n\n            \n                \n                        Deletes the specified keys from the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe keys to delete from the cache.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to true if the operation is successful, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        expire\n                        \n                    \n                \n            \n            \n                \n                        \n                    expire(key: string, expiresIn: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:139\n                        \n                    \n\n\n            \n                \n                        Sets the expiration time for the given key in the Redis cache.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to set the expiration time for.\n\n\n                                            \n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe expiration time in seconds.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                True if the operation succeeded, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Retrieves the value of the specified key from the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to retrieve from the cache.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to the value of the key or null if an error occurs.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getBoolean\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBoolean(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:54\n                        \n                    \n\n\n            \n                \n                        Retrieves the boolean value of the specified key from the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to retrieve from the cache.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A Promise that resolves to the boolean value of the key.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFromPattern\n                        \n                    \n                \n            \n            \n                \ngetFromPattern(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:157\n                        \n                    \n\n\n            \n                \n                        Retrieves keys that match a given pattern from the Redis cache.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe pattern to match keys against.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                An array of matching keys.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNumber(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Retrieves the numeric value of the specified key from the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to retrieve from the cache.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A Promise that resolves to the numeric value of the key.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        incr\n                        \n                    \n                \n            \n            \n                \n                        \n                    incr(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:121\n                        \n                    \n\n\n            \n                \n                        Increments the value of the specified key in the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to increment.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to the new value of the key or null if an error occurs.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: string | number, expiresIn?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Sets the value of the specified key in the cache storage with an optional expiration time.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to set in the cache.\n\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to set for the key.\n\n\n                                            \n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional expiration time in seconds.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to true if the operation is successful, false otherwise.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport Redis from \"ioredis\";\nimport { CacheService } from \"./cache.types\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { REDIS_CLIENT } from \"./cache.constants\";\n\n/**\n * A service class that provides cache storage functionality implementing the CacheService interface.\n */\n@Injectable()\nexport class RedisCacheService implements CacheService {\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    @Inject(REDIS_CLIENT) private readonly client: Redis,\n  ) {}\n\n  /**\n   * Retrieves the value of the specified key from the cache storage.\n   *\n   * @param key - The key to retrieve from the cache.\n   * @returns A Promise that resolves to the value of the key or null if an error occurs.\n   */\n  async get(key: string): Promise {\n    try {\n      return await this.client.get(key);\n    } catch (error) {\n      this.logger.error(`Error while getting key \"${key}\" from Redis:`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Retrieves the boolean value of the specified key from the cache storage.\n   *\n   * @param key - The key to retrieve from the cache.\n   * @returns A Promise that resolves to the boolean value of the key.\n   */\n  async getBoolean(key: string) {\n    const val = await this.get(key);\n    return val === \"true\";\n  }\n\n  /**\n   * Retrieves the numeric value of the specified key from the cache storage.\n   *\n   * @param key - The key to retrieve from the cache.\n   * @returns A Promise that resolves to the numeric value of the key.\n   */\n  async getNumber(key: string) {\n    const val = await this.get(key);\n    return +val;\n  }\n\n  /**\n   * Sets the value of the specified key in the cache storage with an optional expiration time.\n   *\n   * @param key - The key to set in the cache.\n   * @param value - The value to set for the key.\n   * @param expiresIn - Optional expiration time in seconds.\n   * @returns A Promise that resolves to true if the operation is successful, false otherwise.\n   */\n  async set(\n    key: string,\n    value: string | number,\n    expiresIn?: number,\n  ): Promise {\n    try {\n      if (expiresIn) {\n        await this.client.set(key, value, \"EX\", expiresIn);\n      } else {\n        await this.client.set(key, value);\n      }\n      return true;\n    } catch (error) {\n      this.logger.error(`Error while setting key \"${key}\" in Redis:`, error);\n      return false;\n    }\n  }\n\n  /**\n   * Deletes the specified keys from the cache storage.\n   *\n   * @param keys - The keys to delete from the cache.\n   * @returns A Promise that resolves to true if the operation is successful, false otherwise.\n   */\n  async del(...keys: string[]): Promise {\n    try {\n      await this.client.del(...keys);\n      return true;\n    } catch (error) {\n      this.logger.error(\n        `Error while deleting keys \"${keys.join(\", \")}\" from Redis:`,\n        error,\n      );\n      return false;\n    }\n  }\n\n  /**\n   * Increments the value of the specified key in the cache storage.\n   *\n   * @param key - The key to increment.\n   * @returns A Promise that resolves to the new value of the key or null if an error occurs.\n   */\n  async incr(key: string): Promise {\n    try {\n      return await this.client.incr(key);\n    } catch (error) {\n      this.logger.error(\n        `Error while incrementing key \"${key}\" in Redis:`,\n        error,\n      );\n      return null;\n    }\n  }\n\n  /**\n   * Sets the expiration time for the given key in the Redis cache.\n   * @param key - The key to set the expiration time for.\n   * @param expiresIn - The expiration time in seconds.\n   * @returns True if the operation succeeded, false otherwise.\n   */\n  async expire(key: string, expiresIn: number): Promise {\n    try {\n      await this.client.expire(key, expiresIn);\n      return true;\n    } catch (error) {\n      this.logger.error(\n        `Error while setting expiration for key \"${key}\" in Redis:`,\n        error,\n      );\n      return false;\n    }\n  }\n\n  /**\n   * Retrieves keys that match a given pattern from the Redis cache.\n   * @param pattern - The pattern to match keys against.\n   * @returns An array of matching keys.\n   */\n  getFromPattern(pattern: string): Promise {\n    return new Promise((resolve, reject) => {\n      const keys: string[] = [];\n      const stream = this.client.scanStream({ match: pattern });\n      stream.on(\"data\", (chunk: string[]) => {\n        keys.push(...chunk);\n      });\n      stream.on(\"end\", () => {\n        resolve(keys);\n      });\n      stream.on(\"error\", (err: Error) => {\n        this.logger.error(err);\n        reject(err);\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RedisModule.html":{"url":"modules/RedisModule.html","title":"module - RedisModule","body":"\n                   \n\n\n\n\n    Modules\n    RedisModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/cache/redis.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides Redis client configuration and setup.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRootAsync\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRootAsync(options: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis.module.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Logger, Module } from \"@nestjs/common\";\nimport { Redis } from \"ioredis\";\nimport { REDIS_CLIENT } from \"./cache.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\n\n/**\n * A module that provides Redis client configuration and setup.\n */\n@Module({})\nexport class RedisModule {\n  private static redisInstance: Redis | null = null;\n\n  static forRootAsync(options: {\n    inject?: any[];\n    imports?: any[];\n    useFactory: (...args) => {\n      config: {\n        host: string;\n        port: number;\n        db: number;\n        username: string;\n        password: string;\n      };\n    };\n  }): DynamicModule {\n    const { inject, imports, useFactory } = options;\n    return {\n      module: RedisModule,\n      imports: [...(imports || [])],\n      providers: [\n        {\n          provide: REDIS_CLIENT,\n          useFactory: async (...args: any[]) => {\n            if (!RedisModule.redisInstance) {\n              const logger = args.find((arg) => arg instanceof Logger);\n              EnvLoader.loadEnvironment(logger);\n              const redisOptions = useFactory(...args).config;\n              RedisModule.redisInstance = new Redis(redisOptions);\n            }\n            return RedisModule.redisInstance;\n          },\n          inject,\n        },\n      ],\n      exports: [REDIS_CLIENT],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Roles.html":{"url":"classes/Roles.html","title":"class - Roles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Roles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/constants.ts\n        \n\n\n            \n                Description\n            \n            \n                A class containing static constants representing different user roles.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ADMIN\n                            \n                            \n                                    Static\n                                    Readonly\n                                MANAGER\n                            \n                            \n                                    Static\n                                    Readonly\n                                ROOT\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ADMIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"admin\"\n                    \n                \n                    \n                        \n                                Defined in lib/shared/constants.ts:30\n                        \n                    \n\n            \n                \n                    Represents the admin role with administrative access.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MANAGER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"manager\"\n                    \n                \n                    \n                        \n                                Defined in lib/shared/constants.ts:35\n                        \n                    \n\n            \n                \n                    Represents the manager role.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ROOT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"root\"\n                    \n                \n                    \n                        \n                                Defined in lib/shared/constants.ts:25\n                        \n                    \n\n            \n                \n                    Represents the root role with the highest level of access.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Roles {\n  /**\n   * @constant ROOT\n   * Represents the root role with the highest level of access.\n   */\n  static readonly ROOT = \"root\";\n  /**\n   * @constant ADMIN\n   * Represents the admin role with administrative access.\n   */\n  static readonly ADMIN = \"admin\";\n  /**\n   * @constant MANAGER\n   * Represents the manager role.\n   */\n  static readonly MANAGER = \"manager\";\n}\n\n/**\n * An object containing properties used for request handling.\n */\nexport const REQUEST_PROPS = {\n  /**\n   * @property accessToken\n   * The property name for storing the access token in the request.\n   */\n  accessToken: \"accessToken\",\n\n  /**\n   * @property currentUser\n   * The property name for storing the current user in the request.\n   */\n  currentUser: \"currentUser\",\n};\n\n/**\n * A constant representing the exception identifier for microservices.\n */\nexport const MS_EXCEPTION_ID = \"MsException\";\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                lib/shared/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    A guard for role-based access control.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/guards/roles.guard.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/guards/roles.guard.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\nimport { UserUtils } from \"../utils/user.utils\";\nimport { AllowedForMetadataKey } from \"../decorators/for-roles.decorator\";\nimport { UserRole } from \"../../common/user/user.types\";\nimport { REQUEST_PROPS, Roles } from \"../constants\";\nimport hasSomeRole = UserUtils.hasSomeRole;\n\n/**\n * A guard for role-based access control.\n */\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private readonly reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const roles = this.reflector.get(\n      AllowedForMetadataKey,\n      context.getHandler(),\n    );\n    if (!roles) {\n      return true;\n    }\n    const req = context.switchToHttp().getRequest();\n    const userRoles: UserRole[] = req[REQUEST_PROPS.currentUser]?.roles || [];\n    if (hasSomeRole(userRoles, Roles.ROOT)) {\n      return true;\n    }\n    for (const role of userRoles) {\n      if (roles.indexOf(role.code) !== -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TargetData.html":{"url":"interfaces/TargetData.html","title":"interface - TargetData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TargetData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the data of an explorer target.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entity\n                                        \n                                \n                                \n                                        \n                                            namedColumn\n                                        \n                                \n                                \n                                        \n                                            primaryColumn\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entity:         ExplorerTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namedColumn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namedColumn:         ExplorerColumn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumn\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryColumn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primaryColumn:         ExplorerColumn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumn\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface BasicExplorerController {\n  getTargetList(): Promise;\n\n  saveTarget(target: ExplorerTarget): Promise;\n\n  getTarget(\n    target: string,\n    type: \"section\" | \"object\",\n    user: User,\n  ): Promise;\n\n  getEntity(target: string, id: string, user: User): Promise;\n\n  getEntityList(\n    target: string,\n    params: PageableParams,\n    user: User,\n  ): Promise>;\n\n  saveEntity(target: string, body: T, user: User): Promise;\n\n  removeEntity(target: string, id: string, user: User): Promise;\n}\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n  controller?: Class;\n  saveHandlers?: Class[];\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TmpDirCleanerProcess.html":{"url":"classes/TmpDirCleanerProcess.html","title":"class - TmpDirCleanerProcess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TmpDirCleanerProcess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/default/tmp-dir-cleaner.process.ts\n        \n\n\n            \n                Description\n            \n            \n                Process class for cleaning the temporary directory.\n\n            \n\n            \n                Extends\n            \n            \n                            AbstractProcess\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                logInstance\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                pmService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                getDeleteStats\n                            \n                            \n                                    Private\n                                    Async\n                                getStatus\n                            \n                            \n                                    Protected\n                                    Async\n                                onCrash\n                            \n                            \n                                    Protected\n                                    Async\n                                onFinish\n                            \n                            \n                                    Protected\n                                    Async\n                                onStop\n                            \n                            \n                                    Private\n                                    Async\n                                setStatus\n                            \n                            \n                                    Async\n                                start\n                            \n                            \n                                    Async\n                                stop\n                            \n                            \n                                    Protected\n                                    Async\n                                writeLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, pmService: ProcessManagerService, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/common/process/default/tmp-dir-cleaner.process.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pmService\n                                                  \n                                                        \n                                                                        ProcessManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractProcess\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractProcess:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessLogEntity\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractProcess\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractProcess:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        pmService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessManagerService\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractProcess\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractProcess:32\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:42\n\n                        \n                    \n\n\n            \n                \n                        Executes the process to clean the temporary directory.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getDeleteStats\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDeleteStats(dirStruct: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/default/tmp-dir-cleaner.process.ts:63\n                        \n                    \n\n\n            \n                \n                        Gets statistics on the number of files and folders to be deleted.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dirStruct\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe structure of the directory.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { filesCount: number; foldersCount: number; }\n\n                        \n                            \n                                An object containing the file and folder counts.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStatus()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:165\n\n                        \n                    \n\n\n            \n                \n                        Gets the current status of the process.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The current process status.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onCrash\n                        \n                    \n                \n            \n            \n                \n                        \n                    onCrash(error: Error)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:157\n\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process crashes.\nCan be overridden by subclasses if needed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error that caused the crash.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onFinish\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFinish()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:140\n\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process finishes.\nCan be overridden by subclasses if needed.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onStop\n                        \n                    \n                \n            \n            \n                \n                        \n                    onStop()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:148\n\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process stops.\nCan be overridden by subclasses if needed.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    setStatus(status: Status)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:173\n\n                        \n                    \n\n\n            \n                \n                        Sets the status of the process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            Status\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new status to set.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:44\n\n                        \n                    \n\n\n            \n                \n                        Starts the process and handles its execution.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:80\n\n                        \n                    \n\n\n            \n                \n                        Stops the process and updates its status.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        writeLog\n                        \n                    \n                \n            \n            \n                \n                        \n                    writeLog(message: string, data?, level)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:94\n\n                        \n                    \n\n\n            \n                \n                        Writes a log entry with the specified message, data, and log level.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe log message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nOptional additional data.\n\n\n                                            \n                                        \n                                        \n                                                level\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    LogLevel.Log\n                                            \n\n                                            \n                                                    \nThe log level (default: LogLevel.Log).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractProcess } from \"../abstract-process\";\nimport { Inject, Logger } from \"@nestjs/common\";\nimport { ProcessManagerService } from \"../process-manager.service\";\nimport * as fs from \"fs\";\nimport { KpConfig } from \"../../../../gen-src/kp.config\";\nimport { FilesUtils } from \"../../../shared/utils/files.utils\";\nimport { LOGGER } from \"../../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../../shared/modules/cache/cache.types\";\nimport readDirectoryRecursively = FilesUtils.readDirectoryRecursively;\n\n/**\n * Process class for cleaning the temporary directory.\n */\nexport class TmpDirCleanerProcess extends AbstractProcess {\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    protected readonly pmService: ProcessManagerService,\n    private readonly cacheService: CacheService,\n  ) {\n    super();\n  }\n\n  /**\n   * Executes the process to clean the temporary directory.\n   */\n  protected async execute() {\n    const tmpDir =\n      process.cwd() + (await this.cacheService.get(KpConfig.TMP_DIR));\n    if (!fs.existsSync(tmpDir)) {\n      await this.writeLog(`Nothing to delete`);\n      return;\n    }\n    const dirStruct = await readDirectoryRecursively(tmpDir);\n    const stats = this.getDeleteStats(dirStruct as { [k: string]: string[] });\n    await this.writeLog(\n      `Try to delete ${stats.filesCount} files and ${stats.foldersCount} folders...`,\n    );\n    await fs.promises.rm(tmpDir, { recursive: true, force: true });\n    await this.writeLog(`Tmp dir was cleaned`);\n  }\n\n  /**\n   * Gets statistics on the number of files and folders to be deleted.\n   * @param dirStruct - The structure of the directory.\n   * @returns An object containing the file and folder counts.\n   */\n  private getDeleteStats(dirStruct: { [k: string]: string[] }) {\n    let filesCount = 0;\n    let foldersCount = 0;\n    for (const key in dirStruct) {\n      filesCount += dirStruct[key].length;\n      if (!key.length) {\n        continue;\n      }\n      foldersCount++;\n    }\n    return { filesCount, foldersCount };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyRequestsMsException.html":{"url":"classes/TooManyRequestsMsException.html","title":"class - TooManyRequestsMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyRequestsMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/too-many-requests-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for too many requests, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/too-many-requests-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for too many requests, extending MsException.\n */\nexport class TooManyRequestsMsException extends MsException {\n  constructor(message?: string) {\n    super(\n      HttpStatus.TOO_MANY_REQUESTS,\n      message || \"You have made too many requests. Please try again later.\",\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedMsException.html":{"url":"classes/UnauthorizedMsException.html","title":"class - UnauthorizedMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/unauthorized-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for unauthorized requests, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/unauthorized-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for unauthorized requests, extending MsException.\n */\nexport class UnauthorizedMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.UNAUTHORIZED, message || \"Unauthorized request\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpsertMediaRequest.html":{"url":"interfaces/UpsertMediaRequest.html","title":"interface - UpsertMediaRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpsertMediaRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the request to upsert a media object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entityIdForPatch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entityName\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityIdForPatch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entityIdForPatch:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entityName:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     Buffer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Buffer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  /** This field contains the identification number of the file  */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file in all languages involved */\n  name: LocalizedString[];\n  /** This field contains a list of unique settings and functions that the file contains */\n  type: MediaType;\n  /** This field contains a link to the original file and all its thumbnails */\n  files: MediaFile[];\n  /** This field contains a link to the meta data container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  /** A unique code representing the media file type */\n  code: string;\n  /** This field contains a unique character identifier */\n  name: string;\n  /** This field defines the possibility to create a duplicate file in WEBP format */\n  vp6: boolean;\n  /** This field indicates the type of access to the file, public or private */\n  private: boolean;\n  /** A numeric value reflecting the quality level of the media (defines the compression rate or overall quality) */\n  quality: number;\n  /** A file extension associated with the media type and which defines the file format  */\n  ext: MediaExt;\n  /** An array of supported media formats for this media type */\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media format */\n  name: string;\n  /** The width of the media file in pixels, represented as a string  */\n  width: string;\n  /** The height of the media file in pixels, represented as a string  */\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  /** A unique code or identifier for the media file*/\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media file */\n  name: string;\n  /** The width of the media file in pixels */\n  width: number;\n  /** The height of the media file in pixels */\n  height: number;\n  /** The size of the media file in bytes */\n  size: number;\n  /** The format of the media file, represented by the MediaFormat type */\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** A unique code or identifier for the media file*/\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(id: number, privateMedia?: boolean): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Interface representing the basic functionality for a media management controller.\n */\nexport interface BasicMediaController {\n  /**\n   * Handles the uploading of media, saving it to the system, and associating it with a specific type and ID.\n   * @param file - The media file to be uploaded.\n   * @param type - The type of media being uploaded (e.g., image, video).\n   * @param id - An optional ID for associating the media with an existing entity.\n   * @returns A promise that resolves to the saved media entity.\n   */\n  createMedia(\n    file: Express.Multer.File,\n    type: string,\n    id: number,\n  ): Promise;\n\n  /**\n   * Retrieves a private media file by its ID, applies any requested format transformations,\n   * and sends it as a response.\n   * @param res - The HTTP response object used to send the media file.\n   * @param id - The ID of the media to be retrieved.\n   * @param format - An optional format for transforming the media before sending.\n   * @param webp - A boolean indicating whether to convert the media to WebP format.\n   * @returns A promise that resolves when the media file is sent.\n   */\n  getPrivateMedia(\n    res: Response,\n    id: number,\n    format: string,\n    webp: boolean,\n  ): Promise;\n\n  /**\n   * Retrieves a public media file by its ID.\n   * @param id - The ID of the media to be retrieved.\n   * @returns A promise that resolves to the retrieved media entity.\n   */\n  getMedia(id: number): Promise;\n\n  /**\n   * Removes a media file by its ID from the system.\n   * @param id - The ID of the media to be removed.\n   * @returns A promise that resolves to the removed media entity.\n   */\n  removeMedia(id: number): Promise;\n\n  /**\n   * Recreates a media file by regenerating it.\n   * @param id - The ID of the media to be recreated.\n   * @returns A promise that resolves to the recreated media entity.\n   */\n  recreateMedia(id: number): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a user object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            login\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\n/**\n * Interface representing the basic functionality for a user profile management controller.\n */\nexport interface BasicUserController {\n  /**\n   * Retrieves the profile of a user by ID or returns the profile of the current user if no ID is provided.\n   * @param id - The ID of the user profile to be retrieved. If not provided, the current user's profile is returned.\n   * @param user - The current authenticated user.\n   * @returns A promise that resolves to the retrieved user entity.\n   */\n  getUserProfile(id: string, user: User): Promise;\n\n  /**\n   * Updates the profile of a user by ID or updates the profile of the current user if no ID is provided.\n   * @param id - The ID of the user profile to be updated. If not provided, the current user's profile is updated.\n   * @param profile - The new profile data.\n   * @param user - The current authenticated user.\n   * @returns A promise that resolves to the updated user entity.\n   */\n  updateUserProfile(id: string, profile: User, user: User): Promise;\n\n  /**\n   * Removes a user profile by ID from the system.\n   * @param id - The ID of the user profile to be removed.\n   * @returns A promise that resolves to the removed user entity.\n   */\n  removeUserProfile(id: string): Promise;\n\n  /**\n   * Creates a new user profile in the system.\n   * @param profile - The profile data for the new user.\n   * @returns A promise that resolves to the created user entity.\n   */\n  createUserProfile(profile: User): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for user.\n\n            \n\n\n            \n                Implements\n            \n            \n                            User\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                active\n                            \n                            \n                                    \n                                avatar\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Media\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:98\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\n/**\n * Interface representing the basic functionality for a user profile management controller.\n */\nexport interface BasicUserController {\n  /**\n   * Retrieves the profile of a user by ID or returns the profile of the current user if no ID is provided.\n   * @param id - The ID of the user profile to be retrieved. If not provided, the current user's profile is returned.\n   * @param user - The current authenticated user.\n   * @returns A promise that resolves to the retrieved user entity.\n   */\n  getUserProfile(id: string, user: User): Promise;\n\n  /**\n   * Updates the profile of a user by ID or updates the profile of the current user if no ID is provided.\n   * @param id - The ID of the user profile to be updated. If not provided, the current user's profile is updated.\n   * @param profile - The new profile data.\n   * @param user - The current authenticated user.\n   * @returns A promise that resolves to the updated user entity.\n   */\n  updateUserProfile(id: string, profile: User, user: User): Promise;\n\n  /**\n   * Removes a user profile by ID from the system.\n   * @param id - The ID of the user profile to be removed.\n   * @returns A promise that resolves to the removed user entity.\n   */\n  removeUserProfile(id: string): Promise;\n\n  /**\n   * Creates a new user profile in the system.\n   * @param profile - The profile data for the new user.\n   * @returns A promise that resolves to the created user entity.\n   */\n  createUserProfile(profile: User): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/entity/user.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the users of the system\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                active\n                            \n                            \n                                    \n                                avatar\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'first_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'last_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:78\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  TableInheritance,\n} from \"typeorm\";\nimport { UserRoleEntity } from \"./user-role.entity\";\nimport { User } from \"../user.types\";\nimport { MediaEntity } from \"../../media/entity/media.entity\";\n\n/**\n * The entity stores the users of the system\n */\n@Entity(\"users\")\n@TableInheritance({\n  column: { type: \"varchar\", name: \"class\", nullable: true },\n})\nexport class UserEntity implements User {\n  @PrimaryGeneratedColumn()\n  id: string;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  avatar: MediaEntity;\n\n  @Column(\"varchar\", { nullable: false })\n  password: string;\n\n  @Column(\"varchar\", { nullable: false, unique: true })\n  login: string;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  email: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  phone: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"first_name\", nullable: true })\n  firstName: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"last_name\", nullable: true })\n  lastName: string;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  active: boolean;\n\n  @ManyToMany(() => UserRoleEntity)\n  @JoinTable()\n  roles: UserRoleEntity[];\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserEntityPwdAndRolesSaveHandler.html":{"url":"injectables/UserEntityPwdAndRolesSaveHandler.html","title":"injectable - UserEntityPwdAndRolesSaveHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserEntityPwdAndRolesSaveHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/handlers/user-entity-pwd-and-roles.save-handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Handler for saving user entities, ensuring appropriate permissions and roles are applied.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(target: string, payload: User, currentUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/handlers/user-entity-pwd-and-roles.save-handler.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { EntitySaveHandler } from \"../explorer.types\";\nimport { User } from \"../../user/user.types\";\nimport { Roles } from \"../../../shared/constants\";\n\n/**\n * Handler for saving user entities, ensuring appropriate permissions and roles are applied.\n */\n@Injectable()\nexport class UserEntityPwdAndRolesSaveHandler\n  implements EntitySaveHandler\n{\n  handle(target: string, payload: User, currentUser: User) {\n    if (!currentUser.roles.find((v) => v.code === Roles.ROOT)) {\n      if (payload.id) {\n        delete payload.password;\n        delete payload.login;\n      }\n      delete payload.roles;\n    }\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/user/user.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module is responsible for managing system users\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: UserModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.module.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            UserModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      service: BasicUserService,\n      controller: ProfileController,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { BasicUserService } from \"./user-service-basic.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { UserEntity } from \"./entity/user.entity\";\nimport { UserModuleOptions, UserService } from \"./user.types\";\nimport { ProfileController } from \"./profile.controller\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\n\n/**\n * Module is responsible for managing system users\n */\n@Module({})\nexport class UserModule {\n  static forRoot(\n    options: UserModuleOptions = {\n      service: BasicUserService,\n      controller: ProfileController,\n    },\n  ): DynamicModule {\n    return {\n      module: UserModule,\n      imports: [LogModule, CacheModule, TypeOrmModule.forFeature([UserEntity])],\n      controllers: [options.controller],\n      providers: [\n        {\n          provide: UserService,\n          useClass: options.service,\n        },\n      ],\n      exports: [UserService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRole.html":{"url":"interfaces/UserRole.html","title":"interface - UserRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a user role.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\n/**\n * Interface representing the basic functionality for a user profile management controller.\n */\nexport interface BasicUserController {\n  /**\n   * Retrieves the profile of a user by ID or returns the profile of the current user if no ID is provided.\n   * @param id - The ID of the user profile to be retrieved. If not provided, the current user's profile is returned.\n   * @param user - The current authenticated user.\n   * @returns A promise that resolves to the retrieved user entity.\n   */\n  getUserProfile(id: string, user: User): Promise;\n\n  /**\n   * Updates the profile of a user by ID or updates the profile of the current user if no ID is provided.\n   * @param id - The ID of the user profile to be updated. If not provided, the current user's profile is updated.\n   * @param profile - The new profile data.\n   * @param user - The current authenticated user.\n   * @returns A promise that resolves to the updated user entity.\n   */\n  updateUserProfile(id: string, profile: User, user: User): Promise;\n\n  /**\n   * Removes a user profile by ID from the system.\n   * @param id - The ID of the user profile to be removed.\n   * @returns A promise that resolves to the removed user entity.\n   */\n  removeUserProfile(id: string): Promise;\n\n  /**\n   * Creates a new user profile in the system.\n   * @param profile - The profile data for the new user.\n   * @returns A promise that resolves to the created user entity.\n   */\n  createUserProfile(profile: User): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRoleDto.html":{"url":"classes/UserRoleDto.html","title":"class - UserRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for user role.\n\n            \n\n\n            \n                Implements\n            \n            \n                            UserRole\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedString[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:59\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\n/**\n * Interface representing the basic functionality for a user profile management controller.\n */\nexport interface BasicUserController {\n  /**\n   * Retrieves the profile of a user by ID or returns the profile of the current user if no ID is provided.\n   * @param id - The ID of the user profile to be retrieved. If not provided, the current user's profile is returned.\n   * @param user - The current authenticated user.\n   * @returns A promise that resolves to the retrieved user entity.\n   */\n  getUserProfile(id: string, user: User): Promise;\n\n  /**\n   * Updates the profile of a user by ID or updates the profile of the current user if no ID is provided.\n   * @param id - The ID of the user profile to be updated. If not provided, the current user's profile is updated.\n   * @param profile - The new profile data.\n   * @param user - The current authenticated user.\n   * @returns A promise that resolves to the updated user entity.\n   */\n  updateUserProfile(id: string, profile: User, user: User): Promise;\n\n  /**\n   * Removes a user profile by ID from the system.\n   * @param id - The ID of the user profile to be removed.\n   * @returns A promise that resolves to the removed user entity.\n   */\n  removeUserProfile(id: string): Promise;\n\n  /**\n   * Creates a new user profile in the system.\n   * @param profile - The profile data for the new user.\n   * @returns A promise that resolves to the created user entity.\n   */\n  createUserProfile(profile: User): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserRoleEntity.html":{"url":"entities/UserRoleEntity.html","title":"entity - UserRoleEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserRoleEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/entity/user-role.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the roles of the system users\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user-role.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user-role.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user-role.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { UserRole } from \"../user.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\n\n/**\n * The entity stores the roles of the system users\n */\n@Entity(\"users_roles\")\nexport class UserRoleEntity implements UserRole {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserService.html":{"url":"classes/UserService.html","title":"class - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing the user service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                findByLogin\n                            \n                            \n                                    Abstract\n                                removeById\n                            \n                            \n                                    Abstract\n                                updateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByLogin(login: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                login\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        removeById\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        updateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateById(id: string, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\n/**\n * Interface representing the basic functionality for a user profile management controller.\n */\nexport interface BasicUserController {\n  /**\n   * Retrieves the profile of a user by ID or returns the profile of the current user if no ID is provided.\n   * @param id - The ID of the user profile to be retrieved. If not provided, the current user's profile is returned.\n   * @param user - The current authenticated user.\n   * @returns A promise that resolves to the retrieved user entity.\n   */\n  getUserProfile(id: string, user: User): Promise;\n\n  /**\n   * Updates the profile of a user by ID or updates the profile of the current user if no ID is provided.\n   * @param id - The ID of the user profile to be updated. If not provided, the current user's profile is updated.\n   * @param profile - The new profile data.\n   * @param user - The current authenticated user.\n   * @returns A promise that resolves to the updated user entity.\n   */\n  updateUserProfile(id: string, profile: User, user: User): Promise;\n\n  /**\n   * Removes a user profile by ID from the system.\n   * @param id - The ID of the user profile to be removed.\n   * @returns A promise that resolves to the removed user entity.\n   */\n  removeUserProfile(id: string): Promise;\n\n  /**\n   * Creates a new user profile in the system.\n   * @param profile - The profile data for the new user.\n   * @returns A promise that resolves to the created user entity.\n   */\n  createUserProfile(profile: User): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserSubscriber.html":{"url":"classes/UserSubscriber.html","title":"class - UserSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/entity/user.subscriber.ts\n        \n\n\n            \n                Description\n            \n            \n                A subscriber for UserEntity that handles entity events such as insert and update.\nIt validates the login and hashes the password before these events.\n\n            \n\n\n            \n                Implements\n            \n            \n                        EntitySubscriberInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                beforeInsert\n                            \n                            \n                                    Async\n                                beforeUpdate\n                            \n                            \n                                listenTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Default value : UserEntity\n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.subscriber.ts:35\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        beforeInsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    beforeInsert(event: InsertEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/entity/user.subscriber.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            InsertEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        beforeUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    beforeUpdate(event: UpdateEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/entity/user.subscriber.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            UpdateEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listenTo\n                        \n                    \n                \n            \n            \n                \nlistenTo()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/entity/user.subscriber.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  EntitySubscriberInterface,\n  EventSubscriber,\n  UpdateEvent,\n} from \"typeorm\";\nimport { UserEntity } from \"./user.entity\";\nimport { InsertEvent } from \"typeorm/subscriber/event/InsertEvent\";\nimport { AbstractUserSubscriber } from \"../abstract-user-subscriber\";\n\n/**\n * A subscriber for UserEntity that handles entity events such as insert and update.\n * It validates the login and hashes the password before these events.\n */\n@EventSubscriber()\nexport class UserSubscriber\n  extends AbstractUserSubscriber\n  implements EntitySubscriberInterface\n{\n  protected readonly type = UserEntity;\n\n  listenTo() {\n    return UserEntity;\n  }\n\n  async beforeInsert(event: InsertEvent) {\n    await this.validateLogin(event.entity.login);\n    await this.hashPasswordIfNeeded(event);\n  }\n\n  async beforeUpdate(event: UpdateEvent) {\n    if (event.entity.login) {\n      await this.validateLogin(event.entity.login);\n    }\n    await this.hashPasswordIfNeeded(event);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserUpdateRequest.html":{"url":"interfaces/UserUpdateRequest.html","title":"interface - UserUpdateRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserUpdateRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a request to update a user.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\n/**\n * Interface representing the basic functionality for a user profile management controller.\n */\nexport interface BasicUserController {\n  /**\n   * Retrieves the profile of a user by ID or returns the profile of the current user if no ID is provided.\n   * @param id - The ID of the user profile to be retrieved. If not provided, the current user's profile is returned.\n   * @param user - The current authenticated user.\n   * @returns A promise that resolves to the retrieved user entity.\n   */\n  getUserProfile(id: string, user: User): Promise;\n\n  /**\n   * Updates the profile of a user by ID or updates the profile of the current user if no ID is provided.\n   * @param id - The ID of the user profile to be updated. If not provided, the current user's profile is updated.\n   * @param profile - The new profile data.\n   * @param user - The current authenticated user.\n   * @returns A promise that resolves to the updated user entity.\n   */\n  updateUserProfile(id: string, profile: User, user: User): Promise;\n\n  /**\n   * Removes a user profile by ID from the system.\n   * @param id - The ID of the user profile to be removed.\n   * @returns A promise that resolves to the removed user entity.\n   */\n  removeUserProfile(id: string): Promise;\n\n  /**\n   * Creates a new user profile in the system.\n   * @param profile - The profile data for the new user.\n   * @returns A promise that resolves to the created user entity.\n   */\n  createUserProfile(profile: User): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VideoFileMetadata.html":{"url":"interfaces/VideoFileMetadata.html","title":"interface - VideoFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VideoFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing video file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bitrate\n                                        \n                                \n                                \n                                        \n                                            codec\n                                        \n                                \n                                \n                                        \n                                            colorRange\n                                        \n                                \n                                \n                                        \n                                            colorSpace\n                                        \n                                \n                                \n                                        \n                                            container\n                                        \n                                \n                                \n                                        \n                                            displayAspectRatio\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            frameRate\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            rotate\n                                        \n                                \n                                \n                                        \n                                            sampleAspectRatio\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bitrate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bitrate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The bitrate of the video file, indicating the amount of data processed per second\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        codec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codec:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A codec ( algorithm or method ) used to compress and decompress a video file\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorRange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Video color range, indicating the set of colors used in the video file\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorSpace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorSpace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The color space of the video, indicating how colors are represented and interpreted\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        container\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        container:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The container format of the video file, indicating how video, audio, and other data streams are packaged together\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAspectRatio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAspectRatio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The display aspect ratio of the video, indicating the ratio of width to height for playback.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The duration of the video file in seconds\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        frameRate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        frameRate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The frame rate of the video, indicating the number of frames displayed per second\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The height of the video in pixels\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the identification number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The rotation angle of the video in degrees, indicating its orientation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleAspectRatio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleAspectRatio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A sample video aspect ratio indicating how pixels are distributed in a video stream\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The width of the video in pixels\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  /** This field contains the identification number */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file */\n  name: string;\n  /** This field stores the path to the file on the server */\n  path: string;\n  /** This field specifies the type of access to the file, public or private */\n  public: boolean;\n  /** This field stores the size of the file in bytes */\n  size: number;\n  /** This field stores the icon of the file */\n  icon: Media;\n  /** This field stores the media preview of the file  */\n  preview: Media;\n  /** This field contains a reference to the FileMetadata container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The MIME type of the file, indicating the nature and format of the file content */\n  mime: string;\n  /** The file extension, indicating the file format */\n  ext: string;\n  /** The cryptographic hash of the file content, used for integrity verification and identification */\n  hash: string;\n  /** The ICC (International Color Consortium) profile data associated with the file, used for color management */\n  icc: IccFileMetadata;\n  /** GPS data associated with the location where the file was created, including latitude, longitude and elevation */\n  gps: GpsFileMetadata;\n  /** This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics */\n  image: ImageFileMetadata;\n  /** This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created */\n  exif: ExifFileMetadata;\n  /** This field is used to store information about the structure and properties of the audio file */\n  audio: AudioFileMetadata;\n  /** This field is used to store information about the structure and properties of the video recording*/\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The number of bits used to represent the color of a single pixel in the image */\n  bps: number;\n  /** The width of the image in pixels */\n  width: number;\n  /** The height of the image in pixels */\n  height: number;\n  /** The number of color components used to represent the color of the image */\n  colorComponents: number;\n  /** The subsampling method used for the image, indicating how color information is sampled */\n  subsampling: string;\n  /** The date and time when the image was created or last modified */\n  dateTime: Date;\n  /** The bit depth of the image, indicating the number of bits used for color representation */\n  bitDepth: number;\n  /** The color type of the image, indicating the color model used */\n  colorType: string;\n  /** Contains the compression method used to reduce the size of the image */\n  compression: string;\n  /** Specifies the filtering method used to process the image data before compressing it */\n  filter: string;\n  /**  Indicates whether interlacing is used in the image, allowing for progressive display */\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The version of the ICC profile, indicating the specification version used to create the color profile. */\n  profileVersion: string;\n  /** The class of the ICC profile, indicating its primary purpose and type */\n  profileClassValue: string;\n  /** The name of the ICC profile class, describing its primary purpose */\n  profileClassName: string;\n  /** The connection space of the ICC profile, representing the intermediate color space used for color conversions. */\n  connectionSpace: string;\n  /** The date and time when the ICC profile was created or last modified */\n  iccProfileDate: Date;\n  /** A unique signature of the ICC profile used to confirm its authenticity and validity */\n  iccSignature: string;\n  /** The primary platform or operating system for which the ICC profile was created or optimized */\n  primaryPlatform: string;\n  /** The manufacturer of the device for which the ICC profile was created */\n  deviceManufacturer: string;\n  /** The model number of the device for which the ICC profile was created */\n  deviceModelNumber: string;\n  /**  Indicates the type of rendering to be used when converting colors between color spaces */\n  renderingIntentValue: string;\n  /** Specifies the name of the rendering type that is used when converting colors between color spaces */\n  renderingIntentName: string;\n  /** The name or identifier of the creator of the ICC profile */\n  profileCreator: string;\n  /** A description of the ICC profile, explaining its purpose and characteristics */\n  iccDescription: string;\n  /** The copyright information for the ICC profile, indicating ownership and usage rights */\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** This field specifies the manufacturer of the camera */\n  make: string;\n  /** This field specifies the model of the camera  */\n  model: string;\n  /** Indicates image display orientation based on EXIF metadata */\n  orientation: string;\n  /** X-side resolution of the photo*/\n  resolutionX: string;\n  /** Y-side resolution of the photo*/\n  resolutionY: string;\n  /** Unit of image resolution */\n  resolutionUnit: string;\n  /** The field contains information about the software that was used to create or edit the image */\n  software: string;\n  /** This field is responsible for specifying the method of placing these color components Y, Cb and Cr relative to the image pixels */\n  ycbCrPositioning: string;\n  /** Pointer to the beginning of an EXIF IFD block in a file inside a TIFF file */\n  exifIfdPointer: string;\n  /** Contains information about the location where the image was taken */\n  gpsInfoIfdPointer: string;\n  /** Exposure time (shutter speed) when capturing an image */\n  exposureTime: string;\n  /** Contains data on the aperture number (aperture) when capturing an image */\n  fNumber: string;\n  /** Contains data on the exposure mode (shutter speed and aperture) used to capture the image */\n  exposureProgram: string;\n  /** Contains data on the ISO value (the sensitivity of the camera sensor to light) */\n  isoSpeedRatings: string;\n  /** Contains EXIF specification version data */\n  exifVersion: string;\n  /** Contains time offset data relative to UTC (Coordinated Universal Time) for the date and time when the image was taken */\n  offsetTime: string;\n  /** Contains data on the shutter speed of the camera */\n  shutterSpeedValue: string;\n  /** Contains data on the aperture (aperture) value used to capture the image */\n  aperture: string;\n  /** Contains data on the brightness level of the image */\n  brightness: string;\n  /** Contains exposure compensation data  */\n  exposureBias: string;\n  /** Contains data on the maximum aperture (aperture) value  */\n  maxAperture: string;\n  /** Contains data on the distance to the subject in millimeters */\n  subjectDistance: string;\n  /** Contains data on the light sensing mode used by the camera when capturing an image */\n  meteringMode: string;\n  /** Contains data on the status and operation of the flash during image capture */\n  flash: string;\n  /** Contains data about the focal length of the camera lens */\n  focalLength: string;\n  /** The Flashpix format version used for the image */\n  flashpixVersion: string;\n  /** The color space of the image data */\n  colorSpace: string;\n  /** Width (horizontal resolution) of the image in pixels */\n  pixelXDimension: string;\n  /** Contains data about the vertical resolution (height) of the image in pixels */\n  pixelYDimension: string;\n  /** Pointer to the start of the Interoperability IFD block for compatibility metadata */\n  interoperabilityIfdPointer: string;\n  /** Indicates the method used by the camera sensor to capture the image */\n  sensingMethod: string;\n  /** The type of scene captured in the image, indicating if it was taken with a digital camera */\n  sceneType: string;\n  /** Indicates whether the image was processed with custom rendering */\n  customRendered: string;\n  /** The exposure mode used by the camera during the shot */\n  exposureMode: string;\n  /** The white balance setting used during the shot */\n  whiteBalance: string;\n  /** The digital zoom ratio applied during the shot */\n  digitalZoomRatio: string;\n  /** The type of scene capture mode used during the shot */\n  sceneCaptureType: string;\n  /** The level of contrast applied to the image */\n  contrast: string;\n  /** The level of color saturation applied to the image */\n  saturation: string;\n  /** The level of sharpness applied to the image */\n  sharpness: string;\n  /** The distance range to the subject during the shot */\n  subjectDistanceRange: string;\n  /** The manufacturer of the lens used to capture the image */\n  lensMake: string;\n  /** The model of the lens used to capture the image */\n  lensModel: string;\n  /** Indicates whether the image is a composite, created by combining multiple images or applying effects */\n  compositeImage: string;\n  /** The interoperability index indicating the standard used for ensuring image compatibility */\n  interoperabilityIndex: string;\n  /** The version of the interoperability standard used for the image */\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  /** Representing identifier of meta-data object */\n  id: number;\n  /** Representing gps-latitude parameter */\n  latitude: number;\n  /** Representing gps-longitude parameter */\n  longitude: number;\n  /** Representing gps-altitude parameter */\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** A codec ( algorithm or method ) used to compress and decompress a video file */\n  codec: string;\n  /** The container format of the video file, indicating how video, audio, and other data streams are packaged together */\n  container: string;\n  /** The width of the video in pixels */\n  width: number;\n  /** The height of the video in pixels */\n  height: number;\n  /**  The bitrate of the video file, indicating the amount of data processed per second */\n  bitrate: number;\n  /** The duration of the video file in seconds */\n  duration: number;\n  /** A sample video aspect ratio indicating how pixels are distributed in a video stream */\n  sampleAspectRatio: string;\n  /** The display aspect ratio of the video, indicating the ratio of width to height for playback.*/\n  displayAspectRatio: string;\n  /** Video color range, indicating the set of colors used in the video file */\n  colorRange: string;\n  /** The color space of the video, indicating how colors are represented and interpreted */\n  colorSpace: string;\n  /** The frame rate of the video, indicating the number of frames displayed per second */\n  frameRate: string;\n  /** The rotation angle of the video in degrees, indicating its orientation */\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The format of the audio file container, which encapsulates audio streams and metadata */\n  container: string;\n  /** The audio codec used for encoding or decoding the audio data */\n  codec: string;\n  /** The sample rate of the audio file, indicating the number of samples per second */\n  sampleRate: number;\n  /**  The number of audio channels in the file, indicating the sound configuration (e.g., mono, stereo) */\n  numberOfChannels: number;\n  /**  The bitrate of the audio file, indicating the amount of data processed per second. */\n  bitrate: number;\n  /** The codec profile used for encoding the audio data, indicating specific settings and capabilities */\n  codecProfile: string;\n  /** The tool or software used to encode or process the audio file */\n  tool: string;\n  /** The duration of the audio file in seconds */\n  duration: number;\n  /** The title of the audio file or track */\n  title: string;\n  /** The name of the artist or band who performed the audio track. */\n  artist: string;\n  /** The name of the album that the audio track belongs to */\n  album: string;\n  /** The year the audio track was release */\n  year: number;\n  /** The genre of the audio track */\n  genre: string;\n  /** The music label or company that released the audio trac */\n  label: string;\n}\n\n/**\n * Interface representing the basic functionality for a file management controller.\n */\nexport interface BasicFileController {\n  /**\n   * Handles the uploading of a file, saving it to the system, and optionally marking it as public.\n   * @param file - The file to be uploaded.\n   * @param isPublic - A string indicating whether the file should be public (\"true\") or private (\"false\").\n   * @returns A promise that resolves to the saved file entity.\n   */\n  createFile(file: Express.Multer.File, isPublic: string): Promise;\n\n  /**\n   * Retrieves a private file by its ID and sends it as a response.\n   * @param res - The HTTP response object used to send the file.\n   * @param id - The ID of the file to be retrieved.\n   * @returns A promise that resolves when the file is sent.\n   */\n  getPrivateFile(res: Response, id: number): Promise;\n\n  /**\n   * Retrieves a public file by its ID.\n   * @param id - The ID of the file to be retrieved.\n   * @returns A promise that resolves to the retrieved file entity.\n   */\n  getFile(id: number): Promise;\n\n  /**\n   * Removes a file by its ID from the system.\n   * @param id - The ID of the file to be removed.\n   * @returns A promise that resolves to the removed file entity.\n   */\n  removeFile(id: number): Promise;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/VideoFileMetadataEntity.html":{"url":"entities/VideoFileMetadataEntity.html","title":"entity - VideoFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  VideoFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/video-file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the video metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                bitrate\n                            \n                            \n                                    \n                                    \n                                codec\n                            \n                            \n                                    \n                                    \n                                colorRange\n                            \n                            \n                                    \n                                    \n                                colorSpace\n                            \n                            \n                                    \n                                    \n                                container\n                            \n                            \n                                    \n                                    \n                                displayAspectRatio\n                            \n                            \n                                    \n                                    \n                                duration\n                            \n                            \n                                    \n                                    \n                                frameRate\n                            \n                            \n                                    \n                                    \n                                height\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                rotate\n                            \n                            \n                                    \n                                    \n                                sampleAspectRatio\n                            \n                            \n                                    \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bitrate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        codec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        colorRange\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'color_range', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        colorSpace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'color_space', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        displayAspectRatio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'display_aspect_ratio', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        frameRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'frame_rate', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        rotate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sampleAspectRatio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'sample_aspect_ratio', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { VideoFileMetadata } from \"../file.types\";\n\n/**\n * The entity stores the video metadata of the file\n */\n@Entity(\"file_metadata_video\")\nexport class VideoFileMetadataEntity implements VideoFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  codec: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  container: string;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  width: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  height: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true })\n  bitrate: number;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  duration: number;\n\n  @Index()\n  @Column(\"varchar\", { name: \"sample_aspect_ratio\", nullable: true })\n  sampleAspectRatio: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"display_aspect_ratio\", nullable: true })\n  displayAspectRatio: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"color_range\", nullable: true })\n  colorRange: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"color_space\", nullable: true })\n  colorSpace: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"frame_rate\", nullable: true })\n  frameRate: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  rotate: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WarlockModule.html":{"url":"modules/WarlockModule.html","title":"module - WarlockModule","body":"\n                   \n\n\n\n\n    Modules\n    WarlockModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WarlockModule\n\n\n\ncluster_WarlockModule_imports\n\n\n\n\nRedisModule\n\nRedisModule\n\n\n\nWarlockModule\n\nWarlockModule\n\nWarlockModule -->\n\nRedisModule->WarlockModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/warlock/warlock.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides functionality for locking mechanisms using Redis.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            RedisModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Logger, Module } from \"@nestjs/common\";\nimport Redis from \"ioredis\";\nimport * as Warlock from \"node-redis-warlock\";\nimport { RedisModule } from \"../cache/redis.module\";\nimport { LogModule } from \"../log/log.module\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\nimport { WARLOCK } from \"./warlock.constants\";\nimport { REDIS_CLIENT } from \"../cache/cache.constants\";\nimport { WarlockFn } from \"./warlock.types\";\n\n/**\n * A module that provides functionality for locking mechanisms using Redis.\n */\n@Module({\n  imports: [\n    RedisModule.forRootAsync({\n      imports: [LogModule],\n      inject: [LOGGER],\n      useFactory: (logger: Logger) => {\n        EnvLoader.loadEnvironment(logger);\n        return {\n          config: {\n            host: process.env.REDIS_HOST,\n            port: parseInt(process.env.REDIS_PORT),\n            db: parseInt(process.env.REDIS_DB),\n            username: process.env.REDIS_USER,\n            password: process.env.REDIS_PASSWORD,\n          },\n        };\n      },\n    }),\n  ],\n  providers: [\n    {\n      provide: WARLOCK,\n      inject: [REDIS_CLIENT],\n      useFactory: (\n        client: Redis,\n        lockLifeTime = 10000,\n        lockKey = \"lock\",\n      ): WarlockFn => {\n        const warlock = Warlock(client);\n        return function (lockCode: string, caller: () => Promise) {\n          warlock.lock(\n            `${lockKey}:${lockCode}`,\n            lockLifeTime,\n            async (err, unlock) => {\n              if (err) {\n                return;\n              }\n              if (typeof unlock === \"function\") {\n                await caller();\n                unlock();\n              }\n            },\n          );\n        };\n      },\n    },\n  ],\n  exports: [WARLOCK],\n})\nexport class WarlockModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/XdbExportService.html":{"url":"classes/XdbExportService.html","title":"class - XdbExportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  XdbExportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class for XML data export services.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                exportXml\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        exportXml\n                        \n                    \n                \n            \n            \n                \n                        \n                    exportXml(params: XdbExportParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.constants.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            XdbExportParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  XdbAction,\n  XdbDecomposedEntity,\n  XdbExportDto,\n  XdbExportParams,\n  XdbObject,\n  XdbRowData,\n} from \"./xml-data-bridge.types\";\nimport * as xml2js from \"xml2js\";\nimport { Parser } from \"yargs-parser\";\nimport { ObjectLiteral } from \"typeorm\";\n\n/**\n * Abstract class for XML data import services.\n */\nexport abstract class XdbImportService {\n  abstract importXml(xml: XdbObject): Promise;\n\n  abstract importFromFile(fileData: Buffer): Promise;\n}\n/**\n * Abstract class for XML data export services.\n */\nexport abstract class XdbExportService {\n  abstract exportXml(params: XdbExportParams): Promise;\n}\n\nexport namespace Xdb {\n  /**\n   * Representing root-node identifier\n   */\n  export const rootToken = \"@root\";\n\n  /**\n   * Stored xml-parser instance\n   */\n  let parser: Parser & {\n    parseString: (\n      xmlData: string | Buffer,\n      callback: (err: Error | null, result: unknown) => void,\n    ) => void;\n  };\n\n  /**\n   * Regex for detect read-operator in xml-schema\n   */\n  export const ReadOperatorRe = /\\$\\{@read:([^}]*)}/;\n\n  /**\n   * Returns the XML parser instance.\n   * @returns The XML parser instance.\n   */\n  export function getXmlParser() {\n    if (parser) {\n      return parser;\n    }\n    parser = new xml2js.Parser({\n      explicitArray: false,\n      preserveChildrenOrder: true,\n      explicitChildren: true,\n    });\n    return parser;\n  }\n\n  /**\n   * Parses the XML body into an XdbObject.\n   * @param body - The body containing the XML schema.\n   * @returns The parsed XdbObject.\n   */\n  export function parseXmlBody(body: { schema }) {\n    const schema = body.schema;\n    const actions = schema.$$;\n    const result: XdbObject = {\n      schema: [],\n    };\n    for (const action of actions) {\n      const tagName = action[\"#name\"];\n      const target = action?.$?.target;\n      const read = action?.$?.read;\n      const content = action?.$?.content;\n      const rows = action.$$ ?? [];\n      const obj: XdbAction = {\n        action: tagName,\n        attrs: { target, read, content },\n        rows: [],\n      };\n      for (const row of rows) {\n        const rowObj: XdbRowData = {};\n        for (const item of row.$$) {\n          const itemName = item[\"#name\"];\n          if (item.$) {\n            rowObj[itemName] = {\n              attrs: item.$,\n              value: item._,\n            };\n            if (item.$.key && item.$$) {\n              rowObj[itemName].values = item.$$.map((r) => r._);\n            }\n          } else {\n            rowObj[itemName] = item._;\n          }\n        }\n        obj.rows.push(rowObj);\n      }\n      result.schema.push(obj);\n    }\n    return result;\n  }\n\n  /**\n   * Parses an XML file into an XdbObject.\n   * @param xmlData - The XML data buffer.\n   * @returns A promise that resolves to the parsed XdbObject.\n   */\n  export async function parseXmlFile(xmlData: Buffer): Promise {\n    return new Promise((resolve, reject) => {\n      getXmlParser().parseString(xmlData, async (err, result) => {\n        if (err) {\n          reject(err);\n        } else {\n          const body = parseXmlBody(result as { schema });\n          resolve(body);\n        }\n      });\n    });\n  }\n\n  /**\n   * Removes duplicate objects from an array of XdbDecomposedEntity.\n   * @param array - The array of XdbDecomposedEntity.\n   * @returns The array with duplicates removed.\n   */\n  export function removeDuplicateObjects(\n    array: XdbDecomposedEntity[],\n  ): XdbDecomposedEntity[] {\n    const uniqueObjects: XdbDecomposedEntity[] = [];\n    array.reverse().forEach((obj) => {\n      if (!uniqueObjects.some((uniqueObj) => deepEqual(uniqueObj, obj))) {\n        uniqueObjects.push(obj);\n      }\n    });\n    return uniqueObjects.reverse();\n  }\n\n  /**\n   * Checks if two objects are deeply equal.\n   * @param obj1 - The first object.\n   * @param obj2 - The second object.\n   * @returns A boolean indicating whether the objects are deeply equal.\n   */\n  function deepEqual(obj1: ObjectLiteral, obj2: ObjectLiteral): boolean {\n    if (obj1 === obj2) {\n      return true;\n    }\n    if (\n      typeof obj1 !== \"object\" ||\n      typeof obj2 !== \"object\" ||\n      obj1 === null ||\n      obj2 === null\n    ) {\n      return false;\n    }\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (const key of keys1) {\n      if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/XdbImportService.html":{"url":"classes/XdbImportService.html","title":"class - XdbImportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  XdbImportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class for XML data import services.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                importFromFile\n                            \n                            \n                                    Abstract\n                                importXml\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        importFromFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    importFromFile(fileData: Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.constants.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        importXml\n                        \n                    \n                \n            \n            \n                \n                        \n                    importXml(xml: XdbObject)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.constants.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                xml\n                                            \n                                                            XdbObject\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  XdbAction,\n  XdbDecomposedEntity,\n  XdbExportDto,\n  XdbExportParams,\n  XdbObject,\n  XdbRowData,\n} from \"./xml-data-bridge.types\";\nimport * as xml2js from \"xml2js\";\nimport { Parser } from \"yargs-parser\";\nimport { ObjectLiteral } from \"typeorm\";\n\n/**\n * Abstract class for XML data import services.\n */\nexport abstract class XdbImportService {\n  abstract importXml(xml: XdbObject): Promise;\n\n  abstract importFromFile(fileData: Buffer): Promise;\n}\n/**\n * Abstract class for XML data export services.\n */\nexport abstract class XdbExportService {\n  abstract exportXml(params: XdbExportParams): Promise;\n}\n\nexport namespace Xdb {\n  /**\n   * Representing root-node identifier\n   */\n  export const rootToken = \"@root\";\n\n  /**\n   * Stored xml-parser instance\n   */\n  let parser: Parser & {\n    parseString: (\n      xmlData: string | Buffer,\n      callback: (err: Error | null, result: unknown) => void,\n    ) => void;\n  };\n\n  /**\n   * Regex for detect read-operator in xml-schema\n   */\n  export const ReadOperatorRe = /\\$\\{@read:([^}]*)}/;\n\n  /**\n   * Returns the XML parser instance.\n   * @returns The XML parser instance.\n   */\n  export function getXmlParser() {\n    if (parser) {\n      return parser;\n    }\n    parser = new xml2js.Parser({\n      explicitArray: false,\n      preserveChildrenOrder: true,\n      explicitChildren: true,\n    });\n    return parser;\n  }\n\n  /**\n   * Parses the XML body into an XdbObject.\n   * @param body - The body containing the XML schema.\n   * @returns The parsed XdbObject.\n   */\n  export function parseXmlBody(body: { schema }) {\n    const schema = body.schema;\n    const actions = schema.$$;\n    const result: XdbObject = {\n      schema: [],\n    };\n    for (const action of actions) {\n      const tagName = action[\"#name\"];\n      const target = action?.$?.target;\n      const read = action?.$?.read;\n      const content = action?.$?.content;\n      const rows = action.$$ ?? [];\n      const obj: XdbAction = {\n        action: tagName,\n        attrs: { target, read, content },\n        rows: [],\n      };\n      for (const row of rows) {\n        const rowObj: XdbRowData = {};\n        for (const item of row.$$) {\n          const itemName = item[\"#name\"];\n          if (item.$) {\n            rowObj[itemName] = {\n              attrs: item.$,\n              value: item._,\n            };\n            if (item.$.key && item.$$) {\n              rowObj[itemName].values = item.$$.map((r) => r._);\n            }\n          } else {\n            rowObj[itemName] = item._;\n          }\n        }\n        obj.rows.push(rowObj);\n      }\n      result.schema.push(obj);\n    }\n    return result;\n  }\n\n  /**\n   * Parses an XML file into an XdbObject.\n   * @param xmlData - The XML data buffer.\n   * @returns A promise that resolves to the parsed XdbObject.\n   */\n  export async function parseXmlFile(xmlData: Buffer): Promise {\n    return new Promise((resolve, reject) => {\n      getXmlParser().parseString(xmlData, async (err, result) => {\n        if (err) {\n          reject(err);\n        } else {\n          const body = parseXmlBody(result as { schema });\n          resolve(body);\n        }\n      });\n    });\n  }\n\n  /**\n   * Removes duplicate objects from an array of XdbDecomposedEntity.\n   * @param array - The array of XdbDecomposedEntity.\n   * @returns The array with duplicates removed.\n   */\n  export function removeDuplicateObjects(\n    array: XdbDecomposedEntity[],\n  ): XdbDecomposedEntity[] {\n    const uniqueObjects: XdbDecomposedEntity[] = [];\n    array.reverse().forEach((obj) => {\n      if (!uniqueObjects.some((uniqueObj) => deepEqual(uniqueObj, obj))) {\n        uniqueObjects.push(obj);\n      }\n    });\n    return uniqueObjects.reverse();\n  }\n\n  /**\n   * Checks if two objects are deeply equal.\n   * @param obj1 - The first object.\n   * @param obj2 - The second object.\n   * @returns A boolean indicating whether the objects are deeply equal.\n   */\n  function deepEqual(obj1: ObjectLiteral, obj2: ObjectLiteral): boolean {\n    if (obj1 === obj2) {\n      return true;\n    }\n    if (\n      typeof obj1 !== \"object\" ||\n      typeof obj2 !== \"object\" ||\n      obj1 === null ||\n      obj2 === null\n    ) {\n      return false;\n    }\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (const key of keys1) {\n      if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/XdbRequest.html":{"url":"interfaces/XdbRequest.html","title":"interface - XdbRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  XdbRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an XML data bridge request.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type, Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { DynamicModule } from \"@nestjs/common/interfaces/modules/dynamic-module.interface\";\nimport { ForwardReference } from \"@nestjs/common/interfaces/modules/forward-reference.interface\";\nimport { ObjectLiteral } from \"typeorm\";\nimport {\n  XdbExportService,\n  XdbImportService,\n} from \"./xml-data-bridge.constants\";\nimport { User } from \"../user/user.types\";\n\n/**\n * Interface representing an XML data bridge request.\n */\nexport interface XdbRequest {\n  target: string;\n  id: string;\n}\n\n/**\n * Type representing a row data value in the XML data bridge.\n */\nexport type XdbRowDataValue = {\n  attrs?: {\n    key?: string;\n    uri?: string;\n    mode?: \"push\";\n  };\n  value?: string;\n  values?: string[];\n};\n\n/**\n * Type representing a row of data in the XML data bridge.\n */\nexport type XdbRowData = {\n  [key: string]: XdbRowDataValue;\n};\n\n/**\n * Type representing a media row in the XML data bridge.\n */\nexport type MediaRow = {\n  name: XdbRowDataValue;\n  code: string;\n  type: string;\n  file: string;\n};\n\n/**\n * Type representing a file row in the XML data bridge.\n */\nexport type FileRow = {\n  name: string;\n  code: string;\n  public: boolean;\n  file: string;\n};\n\n/**\n * Type representing an action in the XML data bridge.\n */\nexport type XdbAction = {\n  action: \"InsertUpdate\" | \"Media\" | \"File\" | \"Remove\" | \"Include\" | \"Query\";\n  attrs: {\n    target?: string;\n    read?: string;\n    content?: string;\n  };\n  rows: Array;\n};\n\n/**\n * Type representing an XML data bridge object.\n */\nexport type XdbObject = {\n  schema: XdbAction[];\n};\n\n/**\n * Options for configuring the XmlDataBridgeModule.\n */\nexport type XdbModuleOptions = {\n  importService: Class;\n  exportService: Class;\n  imports: Array | DynamicModule | Promise | ForwardReference\n  >;\n};\n\n/**\n * Type representing export parameters for the XML data bridge.\n */\nexport type XdbExportParams = {\n  target: string;\n  id: string;\n  depth: number;\n  useFiles: boolean;\n  excludeProperties: string[];\n  user: User;\n};\n\n/**\n * Type representing the export DTO for the XML data bridge.\n */\nexport type XdbExportDto = {\n  file: string;\n};\n\n/**\n * Type representing a decomposed entity in the XML data bridge.\n */\nexport type XdbDecomposedEntity = {\n  metadata: { type: string; fieldName: string; path: string };\n  data: ObjectLiteral | Array;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/XmlDataBridgeController.html":{"url":"controllers/XmlDataBridgeController.html","title":"controller - XmlDataBridgeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  XmlDataBridgeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                xdb\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                export\n                            \n                            \n                                    \n                                    \n                                    Async\n                                import\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                importFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        export\n                        \n                    \n                \n            \n            \n                \n                        \n                    export(body: XdbExportParams, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/export')@ForRoles(Roles.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            XdbExportParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        import\n                        \n                    \n                \n            \n            \n                \n                        \n                    import(body: XdbObject)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/import')@ForRoles(Roles.ROOT)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            XdbObject\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        importFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    importFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/import-file')@UseInterceptors(undefined)@ForRoles(Roles.ROOT)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Body,\n  Controller,\n  Post,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from \"@nestjs/common\";\nimport { FileInterceptor } from \"@nestjs/platform-express\";\nimport { AuthGuard } from \"../../shared/guards/auth.guard\";\nimport {\n  XdbExportService,\n  XdbImportService,\n} from \"./xml-data-bridge.constants\";\nimport { Roles } from \"../../shared/constants\";\nimport { ForRoles } from \"../../shared/decorators/for-roles.decorator\";\nimport { XdbExportParams, XdbObject } from \"./xml-data-bridge.types\";\nimport { NotEmptyPipe } from \"../../shared/pipes/not-empty.pipe\";\nimport { CurrentUser } from \"../../shared/decorators/current-user.decorator\";\nimport { User } from \"../user/user.types\";\n\n@Controller(\"xdb\")\n@UseGuards(AuthGuard)\nexport class XmlDataBridgeController {\n  constructor(\n    private readonly xdbImportService: XdbImportService,\n    private readonly xdbExportService: XdbExportService,\n  ) {}\n\n  @Post(\"/import\")\n  @ForRoles(Roles.ROOT)\n  async import(@Body() body: XdbObject) {\n    return await this.xdbImportService.importXml(body);\n  }\n\n  @Post(\"/import-file\")\n  @UseInterceptors(FileInterceptor(\"file\"))\n  @ForRoles(Roles.ROOT)\n  async importFile(\n    @UploadedFile(\"file\", new NotEmptyPipe(\"file\")) file: Express.Multer.File,\n  ) {\n    return await this.xdbImportService.importFromFile(file.buffer);\n  }\n\n  @Post(\"/export\")\n  @ForRoles(Roles.ADMIN)\n  async export(@Body() body: XdbExportParams, @CurrentUser() user: User) {\n    body.user = user;\n    if (!body.depth) {\n      body.depth = undefined;\n    }\n    return await this.xdbExportService.exportXml(body);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/XmlDataBridgeMiddleware.html":{"url":"injectables/XmlDataBridgeMiddleware.html","title":"injectable - XmlDataBridgeMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  XmlDataBridgeMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.middleware.ts\n        \n\n\n            \n                Description\n            \n            \n                Middleware for parsing XML data from requests.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                parser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                parseXMLFromRequest\n                            \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parseXMLFromRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseXMLFromRequest(req: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.middleware.ts:47\n                        \n                    \n\n\n            \n                \n                        Parses XML data from the request.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe request object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the parsed XML data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                        \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.middleware.ts:34\n                        \n                    \n\n\n            \n                \n                        Parses XML data from the request and modifies the request body.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe request object.\n\n\n                                            \n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe response object.\n\n\n                                            \n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe next function to call.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        parser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Xdb.getXmlParser()\n                    \n                \n                    \n                        \n                                Defined in lib/common/xml-data-bridge/xml-data-bridge.middleware.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from \"@nestjs/common\";\nimport { NextFunction, Request, Response } from \"express\";\nimport { Xdb } from \"./xml-data-bridge.constants\";\n\n/**\n * Middleware for parsing XML data from requests.\n */\n@Injectable()\nexport class XmlDataBridgeMiddleware implements NestMiddleware {\n  private readonly parser = Xdb.getXmlParser();\n\n  /**\n   * Parses XML data from the request and modifies the request body.\n   * @param req - The request object.\n   * @param res - The response object.\n   * @param next - The next function to call.\n   */\n  async use(req: Request, res: Response, next: NextFunction) {\n    if (req.headers[\"content-type\"] === \"application/xml\") {\n      req.body = await this.parseXMLFromRequest(req);\n      req.body = Xdb.parseXmlBody(req.body);\n    }\n    next();\n  }\n\n  /**\n   * Parses XML data from the request.\n   * @param req - The request object.\n   * @returns A promise that resolves to the parsed XML data.\n   */\n  private parseXMLFromRequest(req: Request): Promise {\n    return new Promise((resolve, reject) => {\n      let xmlData = \"\";\n      req.on(\"data\", (chunk) => {\n        xmlData += chunk;\n      });\n      req.on(\"end\", () => {\n        this.parser.parseString(xmlData, (err, result) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(result as object);\n          }\n        });\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/XmlDataBridgeModule.html":{"url":"modules/XmlDataBridgeModule.html","title":"module - XmlDataBridgeModule","body":"\n                   \n\n\n\n\n    Modules\n    XmlDataBridgeModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module responsible for import and export XML-configuration.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.module.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forInitializer\n                        \n                    \n                \n            \n            \n                \n                        \n                    forInitializer(TypeormRootModule: DynamicModule)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.module.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                TypeormRootModule\n                                            \n                                                        DynamicModule\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: XdbModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.module.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            XdbModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      importService: XmlDataBridgeImportService,\n      exportService: XmlDataBridgeExportService,\n      imports: [\n        LogModule,\n        CacheModule,\n        ExplorerModule.forRoot(),\n        FileModule.forRoot(),\n        MediaModule.forRoot(),\n        UserModule.forRoot(),\n      ],\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  DynamicModule,\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n} from \"@nestjs/common\";\nimport { XdbModuleOptions } from \"./xml-data-bridge.types\";\nimport { XmlDataBridgeImportService } from \"./xml-data-bridge-import.service\";\nimport { XmlDataBridgeExportService } from \"./xml-data-bridge-export.service\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { ExplorerModule } from \"../explorer/explorer.module\";\nimport { FileModule } from \"../file/file.module\";\nimport { MediaModule } from \"../media/media.module\";\nimport {\n  XdbExportService,\n  XdbImportService,\n} from \"./xml-data-bridge.constants\";\nimport { XmlDataBridgeController } from \"./xml-data-bridge.controller\";\nimport { XmlDataBridgeMiddleware } from \"./xml-data-bridge.middleware\";\nimport { UserModule } from \"../user/user.module\";\n\n/**\n * Module responsible for import and export XML-configuration.\n */\n@Module({})\nexport class XmlDataBridgeModule implements NestModule {\n  static forRoot(\n    options: XdbModuleOptions = {\n      importService: XmlDataBridgeImportService,\n      exportService: XmlDataBridgeExportService,\n      imports: [\n        LogModule,\n        CacheModule,\n        ExplorerModule.forRoot(),\n        FileModule.forRoot(),\n        MediaModule.forRoot(),\n        UserModule.forRoot(),\n      ],\n    },\n  ): DynamicModule {\n    return {\n      module: XmlDataBridgeModule,\n      imports: options.imports,\n      controllers: [XmlDataBridgeController],\n      providers: [\n        {\n          provide: XdbImportService,\n          useClass: options.importService,\n        },\n        {\n          provide: XdbExportService,\n          useClass: options.exportService,\n        },\n      ],\n      exports: [XdbImportService, XdbExportService],\n    };\n  }\n\n  static forInitializer(TypeormRootModule: DynamicModule): DynamicModule {\n    return {\n      module: XmlDataBridgeModule,\n      imports: [\n        LogModule,\n        CacheModule,\n        ExplorerModule.forRoot(),\n        FileModule.forRoot(),\n        MediaModule.forRoot(),\n        TypeormRootModule,\n      ],\n      providers: [\n        {\n          provide: XdbImportService,\n          useClass: XmlDataBridgeImportService,\n        },\n        {\n          provide: XdbExportService,\n          useClass: XmlDataBridgeExportService,\n        },\n      ],\n      exports: [XdbImportService, XdbExportService],\n    };\n  }\n\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(XmlDataBridgeMiddleware).forRoutes(XmlDataBridgeController);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @nestjs/axios : 3.*\n        \n            @nestjs/common : 10.*\n        \n            @nestjs/core : 10.*\n        \n            @nestjs/jwt : 10.*\n        \n            @nestjs/microservices : 10.*\n        \n            @nestjs/passport : 10.*\n        \n            @nestjs/schedule : 4.*\n        \n            adm-zip : 0.5.*\n        \n            axios : 1.*\n        \n            bcrypt : 5.*\n        \n            canvas : 2.11.*\n        \n            class-transformer : 0.5.*\n        \n            class-validator : 0.14.*\n        \n            dotenv : 16.*\n        \n            exifreader : 4.*\n        \n            ffprobe : 1.*\n        \n            ffprobe-static : 3.*\n        \n            file-type : 19.*\n        \n            heic-convert : 2.*\n        \n            imagemin : 7.*\n        \n            imagemin-mozjpeg : 9.*\n        \n            imagemin-pngquant : 9.*\n        \n            ioredis : 5.*\n        \n            music-metadata : 7.*\n        \n            node-redis-warlock : 1.*\n        \n            object-hash : 3.*\n        \n            reflect-metadata : 0.2.*\n        \n            rxjs : 7.*\n        \n            sharp : 0.33.*\n        \n            typeorm : 0.3.*\n        \n            uuid : 9.*\n        \n            xml2js : 0.6.*\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Command   (lib/.../process.constants.ts)\n                        \n                        \n                            LogLevel   (lib/.../process.constants.ts)\n                        \n                        \n                            SortOrder   (lib/.../pageable.types.ts)\n                        \n                        \n                            Status   (lib/.../process.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/common/process/process.constants.ts\n    \n        \n            \n                \n                    \n                        \n                        Command\n                    \n                \n                    \n                        \n                            Enum of possible process commands.\n\n                        \n                    \n                        \n                            \n                                 Register\n                            \n                        \n                        \n                            \n                                Value : process:register\n                            \n                        \n                        \n                            \n                                 Unregister\n                            \n                        \n                        \n                            \n                                Value : process:unregister\n                            \n                        \n                        \n                            \n                                 Start\n                            \n                        \n                        \n                            \n                                Value : process:start\n                            \n                        \n                        \n                            \n                                 Stop\n                            \n                        \n                        \n                            \n                                Value : process:stop\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                    \n                        \n                            Enum of process log levels.\n\n                        \n                    \n                        \n                            \n                                 Log\n                            \n                        \n                        \n                            \n                                Value : LOG\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value : ERROR\n                            \n                        \n                        \n                            \n                                 Warn\n                            \n                        \n                        \n                            \n                                Value : WARN\n                            \n                        \n                        \n                            \n                                 Verbose\n                            \n                        \n                        \n                            \n                                Value : VERBOSE\n                            \n                        \n                        \n                            \n                                 Debug\n                            \n                        \n                        \n                            \n                                Value : DEBUG\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Status\n                    \n                \n                    \n                        \n                            Enum of possible process statuses.\n\n                        \n                    \n                        \n                            \n                                 Execute\n                            \n                        \n                        \n                            \n                                Value : execute\n                            \n                        \n                        \n                            \n                                 Ready\n                            \n                        \n                        \n                            \n                                Value : ready\n                            \n                        \n                        \n                            \n                                 Crashed\n                            \n                        \n                        \n                            \n                                Value : crashed\n                            \n                        \n            \n        \n\n    lib/shared/modules/pageable/pageable.types.ts\n    \n        \n            \n                \n                    \n                        \n                        SortOrder\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n     K-Platform is a framework for the rapid development of modern applications\n\n\nEmbedded platform's modules\n\nExplorer: analyzes the database schema and dynamically updates the admin-panel UI for CRUD operations, paginated displaying of entity data with their relationships etc., providing flexibility and extensibility with TypeORM integration.\nXML data-bridge: automates the data management process, simplifying the tasks of importing and exporting data. Uses specific XML-markup to transfer the state of the database or pinpoint transfer of certain records in tables between different servers.\nBackground processes: module for management of background tasks, providing features like automatic startup, dynamic control, and comprehensive logging. Enabling efficient and reliable handling of recurring tasks through advanced cron-job scheduling and inter-module communication.\nMedia: provides powerful capabilities for working with various types of media files. It supports uploading, thumbnail slicing, automatic creation of optimized copies, as well as storing copies in modern formats such as WEBP. It is able to work with vector images. Stores metadata of files, including extend metadata such as GPS, ICC, EXIF etc.\nFiles: provides easy integration and powerful file management, including uploading, storing in public and private directories. Support storing extended metadata for images, audio and video files.\nUsers: provide scalable functionality for managing system users. Supports password encrypting, user profile management with role-based access control.\nAuthorization: provides a OAuth 2.0 mechanism for authentication and authorization of users in the system, as well as protection against brute-force attacks.\nCAPTCHA: represents two built-in CAPTCHA-types: Google reCAPTCHA and standard graphical CAPTCHA. You can also extend the module with your own CAPTCHA implementation.\nConfiguration: allows you to effectively manage the application settings using .properties files, supports real-time dynamic configuration change and type safety through automatic generation of TypeScript files. Also supports local and global overrides, which allow you to flexibly adapt the configuration for different environments.\n\n\nAdmin-panel of application is based on Angular,\nplease read more details about here.\n\nDocumentation\nPlease navigate to guides folder for read detailed documentations of application and also visit codebase documentations website\nFast start\nBefore installing the platform, make sure that you have Node.js, Redis installed and one of the supported DBMS.\nNow let's set up the configuration.\nThe connection settings to Redis are stored in the default.env, that file located in the root directory, use the properties REDIS_HOST, REDIS_PORT, REDIS_DB, REDIS_USER, REDIS_PASSWORD. You can change it or create a local.env file to override some properties on your local machine.\nNext, go to the ./examples/web-server directory, here you will find the db.properties file. Inside that, you will find the DBMS connection settings, you can change it or create a local.properties file to override some properties on your local machine (the names of all properties in the file match the TypeORM data source options).\nNow that all the preinstallation recommendations are done, you can install the platform.\n\nRun npm i command for install all dependencies\nRun npm run init:web-app for generate configuration files, build sources and fill cache DB, and import default state of DB from default XML-configuration\nRun  npm run start:web-app for start example web-application server\n\nNow you can proceed to the installation of the client application, which is an admin panel for system management. To do this, visit the repository @k-platform/client.\n\nRecommendation: use Postgres or MySQL as a DBMS, and in the future you can replace Radius with the desired to if necessary by writing your own custom interaction service.\n\n\nNote: all modules has been tested only with Postgres and MySQL database systems.\n\nBased on\n\n    \n\n       \n\n    \n\n       \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\nExample :  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.   Copyright 2023 Alexander Kiriliuk\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\nExample :   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CacheModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CaptchaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExplorerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocaleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LogModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessagesBrokerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MsClientModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProcessModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RedisModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WarlockModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        XmlDataBridgeModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CacheModule\n\n\n\ncluster_CacheModule_imports\n\n\n\ncluster_CacheModule_exports\n\n\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_exports\n\n\n\ncluster_CategoryModule_providers\n\n\n\ncluster_LocaleModule\n\n\n\ncluster_LocaleModule_exports\n\n\n\ncluster_LocaleModule_providers\n\n\n\ncluster_MessagesBrokerModule\n\n\n\ncluster_MsClientModule\n\n\n\ncluster_ProcessModule\n\n\n\ncluster_ProcessModule_imports\n\n\n\ncluster_ProcessModule_exports\n\n\n\ncluster_ProcessModule_providers\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nCacheModule\n\nCacheModule\n\nCacheModule -->\n\nLogModule->CacheModule\n\n\n\n\n\nCategoryModule\n\nCategoryModule\n\nCategoryModule -->\n\nLogModule->CategoryModule\n\n\n\n\n\nMsClientModule\n\nMsClientModule\n\nMsClientModule -->\n\nLogModule->MsClientModule\n\n\n\n\n\nProcessModule\n\nProcessModule\n\nProcessModule -->\n\nLogModule->ProcessModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nCacheModule -->\n\nRedisModule->CacheModule\n\n\n\n\n\nMessagesBrokerModule\n\nMessagesBrokerModule\n\nMessagesBrokerModule -->\n\nRedisModule->MessagesBrokerModule\n\n\n\n\n\nWarlockModule\n\nWarlockModule\n\nWarlockModule -->\n\nRedisModule->WarlockModule\n\n\n\n\n\nCacheService \n\nCacheService \n\nCacheService  -->\n\nCacheModule->CacheService \n\n\n\nProcessModule -->\n\nCacheModule->ProcessModule\n\n\n\n\n\nCategoryService \n\nCategoryService \n\nCategoryService  -->\n\nCategoryModule->CategoryService \n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\nLocaleService \n\nLocaleService \n\n\n\nLocaleModule\n\nLocaleModule\n\nLocaleService  -->\n\nLocaleModule->LocaleService \n\n\n\n\n\nLocaleService\n\nLocaleService\n\nLocaleModule -->\n\nLocaleService->LocaleModule\n\n\n\nProcessModule -->\n\nMessagesBrokerModule->ProcessModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nProcessModule -->\n\nUserModule->ProcessModule\n\n\n\nProcessModule -->\n\nWarlockModule->ProcessModule\n\n\n\n\n\nProcessManagerService \n\nProcessManagerService \n\nProcessManagerService  -->\n\nProcessModule->ProcessManagerService \n\n\n\n\n\nProcessManagerService\n\nProcessManagerService\n\nProcessModule -->\n\nProcessManagerService->ProcessModule\n\n\n\n\n\nProcessRegisterService\n\nProcessRegisterService\n\nProcessModule -->\n\nProcessRegisterService->ProcessModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    27 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    22 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    43 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    40 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.9.9\n        \n            Description : Framework for the rapid development of modern applications\n        \n            Keywords : nodejs framework, javascript framework, scalable platform, rapid application development, database management, typeorm integration, crud generator, data import export, background processes, cron jobs, media files management, role-based access control, oauth 2.0, authentication, authorization, captcha, configuration management, dynamic configuration, angular admin panel, node.js, redis, postgres, mysql, typescript\n        \n            License : Apache-2.0\n        \n            Repository : https://github.com/alexander-kiriliuk/k-platform-core\n        \n            Author : Alexander Kiriliuk\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthModuleOptions   (lib/.../auth.types.ts)\n                        \n                        \n                            CaptchaModuleOptions   (lib/.../captcha.types.ts)\n                        \n                        \n                            CaptchaResponse   (lib/.../captcha.types.ts)\n                        \n                        \n                            ColumnDataType   (lib/.../explorer.types.ts)\n                        \n                        \n                            ExplorerModuleOptions   (lib/.../explorer.types.ts)\n                        \n                        \n                            ExplorerSelectParams   (lib/.../explorer.types.ts)\n                        \n                        \n                            ExplorerTargetParams   (lib/.../explorer.types.ts)\n                        \n                        \n                            FileModuleOptions   (lib/.../file.types.ts)\n                        \n                        \n                            FileRow   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            MediaModuleOptions   (lib/.../media.types.ts)\n                        \n                        \n                            MediaRow   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            MsClientOptions   (lib/.../ms-client.types.ts)\n                        \n                        \n                            UserModuleOptions   (lib/.../user.types.ts)\n                        \n                        \n                            Variation   (lib/.../explorer.constants.ts)\n                        \n                        \n                            WarlockFn   (lib/.../warlock.types.ts)\n                        \n                        \n                            XdbAction   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbDecomposedEntity   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbExportDto   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbExportParams   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbModuleOptions   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbObject   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbRowData   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbRowDataValue   (lib/.../xml-data-bridge.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/common/auth/auth.types.ts\n    \n    \n        \n            \n                \n                    \n                    AuthModuleOptions\n                \n            \n            \n                \n                    Options for configuring the authentication module.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/captcha/captcha.types.ts\n    \n    \n        \n            \n                \n                    \n                    CaptchaModuleOptions\n                \n            \n            \n                \n                    Options for configuring the CAPTCHA module.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CaptchaResponse\n                \n            \n            \n                \n                    Type representing a CAPTCHA response for client side.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/explorer/explorer.types.ts\n    \n    \n        \n            \n                \n                    \n                    ColumnDataType\n                \n            \n            \n                \n                    Type representing embedded data types for a column.\n\n                \n            \n            \n                \n                        \"string\" | \"number\" | \"boolean\" | \"date\" | \"reference\" | \"unknown\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExplorerModuleOptions\n                \n            \n            \n                \n                    Options for configuring the Explorer module.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExplorerSelectParams\n                \n            \n            \n                \n                    Type representing selection parameters for an explorer entity.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExplorerTargetParams\n                \n            \n            \n                \n                    Type representing parameters for find explorer targets\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/file/file.types.ts\n    \n    \n        \n            \n                \n                    \n                    FileModuleOptions\n                \n            \n            \n                \n                    Options for configuring the FileModule.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/xml-data-bridge/xml-data-bridge.types.ts\n    \n    \n        \n            \n                \n                    \n                    FileRow\n                \n            \n            \n                \n                    Type representing a file row in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MediaRow\n                \n            \n            \n                \n                    Type representing a media row in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbAction\n                \n            \n            \n                \n                    Type representing an action in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbDecomposedEntity\n                \n            \n            \n                \n                    Type representing a decomposed entity in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbExportDto\n                \n            \n            \n                \n                    Type representing the export DTO for the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbExportParams\n                \n            \n            \n                \n                    Type representing export parameters for the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbModuleOptions\n                \n            \n            \n                \n                    Options for configuring the XmlDataBridgeModule.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbObject\n                \n            \n            \n                \n                    Type representing an XML data bridge object.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbRowData\n                \n            \n            \n                \n                    Type representing a row of data in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbRowDataValue\n                \n            \n            \n                \n                    Type representing a row data value in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/media/media.types.ts\n    \n    \n        \n            \n                \n                    \n                    MediaModuleOptions\n                \n            \n            \n                \n                    Options for configuring the MediaModule.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/shared/modules/ms-client/ms-client.types.ts\n    \n    \n        \n            \n                \n                    \n                    MsClientOptions\n                \n            \n            \n                \n                    Type definition for microservices client options.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/user/user.types.ts\n    \n    \n        \n            \n                \n                    \n                    UserModuleOptions\n                \n            \n            \n                \n                    Options for configuring the UserModule.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/explorer/explorer.constants.ts\n    \n    \n        \n            \n                \n                    \n                    Variation\n                \n            \n            \n                \n                    Type representing a fetch-mode for explorer entity.\n\n                \n            \n            \n                \n                        \"section\" | \"object\"\n\n                \n            \n        \n    \n    lib/shared/modules/warlock/warlock.types.ts\n    \n    \n        \n            \n                \n                    \n                    WarlockFn\n                \n            \n            \n                \n                    Type definition for the warlock function used for locking mechanisms.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCESS_TOKEN_ERROR_MSG   (lib/.../auth.constants.ts)\n                        \n                        \n                            AccessToken   (lib/.../access-token.decorator.ts)\n                        \n                        \n                            AllowedForMetadataKey   (lib/.../for-roles.decorator.ts)\n                        \n                        \n                            AUTH_ACCESS_TOKEN_PREFIX   (lib/.../auth.constants.ts)\n                        \n                        \n                            AUTH_JWT_CACHE_PREFIX   (lib/.../auth.constants.ts)\n                        \n                        \n                            AUTH_REFRESH_TOKEN_PREFIX   (lib/.../auth.constants.ts)\n                        \n                        \n                            BODY_TOKEN   (lib/.../xml-data-bridge-file-schema.ts)\n                        \n                        \n                            BRUTEFORCE_JWT_CACHE_PREFIX   (lib/.../auth.constants.ts)\n                        \n                        \n                            bruteForceIPKey   (lib/.../auth.constants.ts)\n                        \n                        \n                            bruteForceLoginKey   (lib/.../auth.constants.ts)\n                        \n                        \n                            CAPTCHA_CACHE_PREFIX   (lib/.../captcha.constants.ts)\n                        \n                        \n                            CATEGORY_RELATIONS   (lib/.../category.constants.ts)\n                        \n                        \n                            CONFIG_CACHE_PREFIX   (lib/.../config.constants.ts)\n                        \n                        \n                            CONFIG_FILE_EXT_PATTERN   (lib/.../config.constants.ts)\n                        \n                        \n                            CurrentUser   (lib/.../current-user.decorator.ts)\n                        \n                        \n                            DEFAULT_MEDIA_QUALITY   (lib/.../media.constants.ts)\n                        \n                        \n                            DEFAULT_MEDIA_TYPE   (lib/.../media.constants.ts)\n                        \n                        \n                            ENTITY_SAVE_HANDLER   (lib/.../explorer.constants.ts)\n                        \n                        \n                            FILES_ENCODING   (lib/.../config.constants.ts)\n                        \n                        \n                            fileTypeModule   (lib/.../files.utils.ts)\n                        \n                        \n                            ForRoles   (lib/.../for-roles.decorator.ts)\n                        \n                        \n                            GEN_SRC_DIR   (lib/.../config.constants.ts)\n                        \n                        \n                            InitConfig   (lib/.../config.init-fn.ts)\n                        \n                        \n                            jwtAccessTokenKey   (lib/.../auth.constants.ts)\n                        \n                        \n                            jwtRefreshTokenKey   (lib/.../auth.constants.ts)\n                        \n                        \n                            KP_PROPERTIES_FILE_NAME   (lib/.../config.constants.ts)\n                        \n                        \n                            LOCAL_PROPERTIES_FILE_NAME   (lib/.../config.constants.ts)\n                        \n                        \n                            LOGGER   (lib/.../log.constants.ts)\n                        \n                        \n                            MEDIA_RELATIONS   (lib/.../media.constants.ts)\n                        \n                        \n                            MEDIA_TYPE_RELATIONS   (lib/.../media.constants.ts)\n                        \n                        \n                            MESSAGES_BROKER   (lib/.../messages-broker.constants.ts)\n                        \n                        \n                            MS_CLIENT   (lib/.../ms-client.constants.ts)\n                        \n                        \n                            MS_EXCEPTION_ID   (lib/.../constants.ts)\n                        \n                        \n                            MSG_BUS   (lib/.../ms-client.constants.ts)\n                        \n                        \n                            ORIGINAL   (lib/.../media.constants.ts)\n                        \n                        \n                            parser   (lib/.../xml-data-bridge.constants.ts)\n                        \n                        \n                            PROPERTIES_FILE_EXT_PATTERN   (lib/.../config.constants.ts)\n                        \n                        \n                            ReadOperatorRe   (lib/.../xml-data-bridge.constants.ts)\n                        \n                        \n                            REDIS_CLIENT   (lib/.../cache.constants.ts)\n                        \n                        \n                            REFRESH_TOKEN_ERROR_MSG   (lib/.../auth.constants.ts)\n                        \n                        \n                            REGISTERED_PROCESSES   (lib/.../process.constants.ts)\n                        \n                        \n                            REQUEST_PROPS   (lib/.../constants.ts)\n                        \n                        \n                            rootToken   (lib/.../xml-data-bridge.constants.ts)\n                        \n                        \n                            SimpleJsonTransformer   (lib/.../simple-json.transformer.ts)\n                        \n                        \n                            SVG   (lib/.../media.constants.ts)\n                        \n                        \n                            TARGET_RELATIONS_BASIC   (lib/.../explorer.constants.ts)\n                        \n                        \n                            TARGET_RELATIONS_FULL   (lib/.../explorer.constants.ts)\n                        \n                        \n                            TARGET_RELATIONS_OBJECT   (lib/.../explorer.constants.ts)\n                        \n                        \n                            TARGET_RELATIONS_SECTION   (lib/.../explorer.constants.ts)\n                        \n                        \n                            THUMB   (lib/.../media.constants.ts)\n                        \n                        \n                            UNKNOWN_IP   (lib/.../auth.constants.ts)\n                        \n                        \n                            USER_RELATIONS   (lib/.../user.constants.ts)\n                        \n                        \n                            WARLOCK   (lib/.../warlock.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/common/auth/auth.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ACCESS_TOKEN_ERROR_MSG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"ERR_TOKEN_A\"\n                    \n                \n\n            \n                \n                    Error message for access token related errors.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_ACCESS_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"access_token\"\n                    \n                \n\n            \n                \n                    Prefix for access token cache keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_JWT_CACHE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"jwt\"\n                    \n                \n\n            \n                \n                    Prefix for JWT cache keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_REFRESH_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"refresh_token\"\n                    \n                \n\n            \n                \n                    Prefix for refresh token cache keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BRUTEFORCE_JWT_CACHE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"bruteforce\"\n                    \n                \n\n            \n                \n                    Prefix for brute force protection cache keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bruteForceIPKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (ipAddress: string) =>\n  `${BRUTEFORCE_JWT_CACHE_PREFIX}:ip:${ipAddress}`\n                    \n                \n\n            \n                \n                    Generates a cache key for tracking brute force login attempts by IP address.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bruteForceLoginKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (login: string) =>\n  `${BRUTEFORCE_JWT_CACHE_PREFIX}:login:${login}`\n                    \n                \n\n            \n                \n                    Generates a cache key for tracking brute force login attempts by login.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtAccessTokenKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (accessToken: string) => {\n  return `${AUTH_JWT_CACHE_PREFIX}:${AUTH_ACCESS_TOKEN_PREFIX}:${accessToken}`;\n}\n                    \n                \n\n            \n                \n                    Generates a cache key for an access token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtRefreshTokenKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  accessToken: string,\n  refreshToken: string,\n) => {\n  return `${AUTH_JWT_CACHE_PREFIX}:${AUTH_REFRESH_TOKEN_PREFIX}:${accessToken}:${refreshToken}`;\n}\n                    \n                \n\n            \n                \n                    Generates a cache key for a refresh token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REFRESH_TOKEN_ERROR_MSG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"ERR_TOKEN_R\"\n                    \n                \n\n            \n                \n                    Error message for refresh token related errors.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UNKNOWN_IP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"unknown\"\n                    \n                \n\n            \n                \n                    Placeholder for unknown IP addresses.\n\n                \n            \n\n        \n    \n\n    lib/shared/decorators/access-token.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AccessToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request[REQUEST_PROPS.accessToken];\n  },\n)\n                    \n                \n\n            \n                \n                    A custom decorator for extracting access token from a request.\n\n                \n            \n\n        \n    \n\n    lib/shared/decorators/for-roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AllowedForMetadataKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"for_roles\"\n                    \n                \n\n            \n                \n                    A constant string key used for role-based access control metadata.\nThis key is used to annotate routes or controllers with the roles allowed to access them.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ForRoles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: string[]) =>\n  SetMetadata(AllowedForMetadataKey, roles)\n                    \n                \n\n            \n                \n                    ForRoles custom decorator for defining roles allowed to access a route.\n\n                \n            \n\n        \n    \n\n    lib/common/xml-data-bridge/xml-data-bridge-file-schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BODY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `%%%body%%%`\n                    \n                \n\n            \n                \n                    A placeholder string used for tokenizing the body content within templates.\nThis token is used to dynamically replace or insert content in XML or other templated strings.\n\n                \n            \n\n        \n    \n\n    lib/common/captcha/captcha.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CAPTCHA_CACHE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"captcha\"\n                    \n                \n\n            \n                \n                    The prefix used for storing CAPTCHA data.\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/category/category.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CATEGORY_RELATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  \"icon\",\n  \"icon.name\",\n  \"icon.name.lang\",\n  \"icon.files\",\n  \"icon.files.format\",\n  \"icon.type\",\n  \"icon.type.ext\",\n  \"name\",\n  \"name.lang\",\n]\n                    \n                \n\n            \n                \n                    An array defining the relations to be loaded with the Category entity.\n\n                \n            \n\n        \n    \n\n    lib/common/config/config.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CONFIG_CACHE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"config\"\n                    \n                \n\n            \n                \n                    The prefix used for storing configuration items.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CONFIG_FILE_EXT_PATTERN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \".config.ts\"\n                    \n                \n\n            \n                \n                    The pattern for configuration file extensions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FILES_ENCODING\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"utf-8\"\n                    \n                \n\n            \n                \n                    The encoding used for reading and writing configuration files.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GEN_SRC_DIR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"gen-src\"\n                    \n                \n\n            \n                \n                    The directory where generated source files are stored.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        KP_PROPERTIES_FILE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"kp.properties\"\n                    \n                \n\n            \n                \n                    The name of the kp properties file.\nIt is assumed that this is the main configuration file, located in the root of the project\nand can override the properties of any .properties in the entire project\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LOCAL_PROPERTIES_FILE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"local.properties\"\n                    \n                \n\n            \n                \n                    The name of the local properties file\nIt is assumed that such files override neighboring ones .properties files and are out of version control.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROPERTIES_FILE_EXT_PATTERN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \".properties\"\n                    \n                \n\n            \n                \n                    The pattern for properties file extensions.\n\n                \n            \n\n        \n    \n\n    lib/shared/decorators/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request[REQUEST_PROPS.currentUser];\n  },\n)\n                    \n                \n\n            \n                \n                    A custom decorator for extracting the current user from a request.\n\n                \n            \n\n        \n    \n\n    lib/common/media/media.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_MEDIA_QUALITY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 78\n                    \n                \n\n            \n                \n                    Default media quality value.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_MEDIA_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"default\"\n                    \n                \n\n            \n                \n                    Default media type code.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MEDIA_RELATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  \"name\",\n  \"name.lang\",\n  \"type\",\n  \"type.formats\",\n  \"type.ext\",\n  \"files\",\n  \"files.format\",\n]\n                    \n                \n\n            \n                \n                    Array containing relations for media.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MEDIA_TYPE_RELATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"ext\", \"formats\"]\n                    \n                \n\n            \n                \n                    Array containing relations for media type.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ORIGINAL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"original\"\n                    \n                \n\n            \n                \n                    Represents the original media format.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SVG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"svg\"\n                    \n                \n\n            \n                \n                    Represents the SVG media extension.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        THUMB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"thumb\"\n                    \n                \n\n            \n                \n                    Represents the thumbnail media format.\n\n                \n            \n\n        \n    \n\n    lib/common/explorer/explorer.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENTITY_SAVE_HANDLER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"ENTITY_SAVE_HANDLER\")\n                    \n                \n\n            \n                \n                    Token for injecting entity save handler.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_RELATIONS_BASIC\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"name\",\n    \"name.lang\",\n    \"description\",\n    \"description.lang\",\n    \"icon\",\n    \"icon.name\",\n    \"icon.name.lang\",\n    \"icon.files\",\n    \"icon.files.format\",\n    \"icon.type\",\n    \"icon.type.ext\",\n  ]\n                    \n                \n\n            \n                \n                    Basic target relations for entities.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_RELATIONS_FULL\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"name\",\n    \"name.lang\",\n    \"description\",\n    \"description.lang\",\n    \"icon\",\n    \"icon.name\",\n    \"icon.name.lang\",\n    \"icon.files\",\n    \"icon.files.format\",\n    \"icon.type\",\n    \"icon.type.ext\",\n    \"columns\",\n    \"columns.name\",\n    \"columns.name.lang\",\n    \"columns.description\",\n    \"columns.description.lang\",\n    \"columns.objectRenderer\",\n    \"columns.objectRenderer.name\",\n    \"columns.objectRenderer.name.lang\",\n    \"columns.objectRenderer.description\",\n    \"columns.objectRenderer.description.lang\",\n    \"columns.sectionRenderer\",\n    \"columns.sectionRenderer.name\",\n    \"columns.sectionRenderer.name.lang\",\n    \"columns.sectionRenderer.description\",\n    \"columns.sectionRenderer.description.lang\",\n    \"columns.tab\",\n    \"columns.tab.name\",\n    \"columns.tab.name.lang\",\n    \"actions\",\n    \"actions.name\",\n    \"actions.name.lang\",\n    \"actions.description\",\n    \"actions.description.lang\",\n    \"canRead\",\n    \"canRead.name\",\n    \"canRead.name.lang\",\n    \"canWrite\",\n    \"canWrite.name\",\n    \"canWrite.name.lang\",\n  ]\n                    \n                \n\n            \n                \n                    Full target relations for entities.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_RELATIONS_OBJECT\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"name\",\n    \"name.lang\",\n    \"icon\",\n    \"icon.name\",\n    \"icon.name.lang\",\n    \"icon.files\",\n    \"icon.files.format\",\n    \"icon.type\",\n    \"icon.type.ext\",\n    \"columns\",\n    \"columns.name\",\n    \"columns.name.lang\",\n    \"columns.objectRenderer\",\n    \"columns.objectRenderer.name\",\n    \"columns.objectRenderer.name.lang\",\n    \"columns.objectRenderer.description\",\n    \"columns.objectRenderer.description.lang\",\n    \"columns.tab\",\n    \"columns.tab.name\",\n    \"columns.tab.name.lang\",\n    \"actions\",\n    \"actions.name\",\n    \"actions.name.lang\",\n    \"actions.description\",\n    \"actions.description.lang\",\n  ]\n                    \n                \n\n            \n                \n                    Target relations for object-entities.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_RELATIONS_SECTION\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"name\",\n    \"name.lang\",\n    \"icon\",\n    \"icon.name\",\n    \"icon.name.lang\",\n    \"icon.files\",\n    \"icon.files.format\",\n    \"icon.type\",\n    \"icon.type.ext\",\n    \"columns\",\n    \"columns.name\",\n    \"columns.name.lang\",\n    \"columns.sectionRenderer\",\n    \"columns.sectionRenderer.name\",\n    \"columns.sectionRenderer.name.lang\",\n    \"columns.sectionRenderer.description\",\n    \"columns.sectionRenderer.description.lang\",\n    \"actions\",\n    \"actions.name\",\n    \"actions.name.lang\",\n    \"actions.description\",\n    \"actions.description.lang\",\n  ]\n                    \n                \n\n            \n                \n                    Target relations for section-entities.\n\n                \n            \n\n        \n    \n\n    lib/shared/utils/files.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fileTypeModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {} as { lib: typeof import(\"file-type\") }\n                    \n                \n\n            \n                \n                    Object to hold the dynamically imported file-type module.\n\n                \n            \n\n        \n    \n\n    lib/common/config/config.init-fn.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        InitConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const mod = ConfigModule.forInitializer();\n  const app = await NestFactory.createApplicationContext(mod);\n  await app.init();\n  const logger: Logger = app.select(LogModule).get(LOGGER);\n  EnvLoader.loadEnvironment(logger);\n  const configService = app.select(mod).get(ConfigService);\n  const genCnfDir = `${process.cwd()}/${process.env.CONFIG_SRC_DIR}`;\n  await configService.initWithPropertiesFiles(genCnfDir);\n  await app.close();\n  process.exit(0);\n}\n                    \n                \n\n            \n                \n                    Asynchronously initializes the application context with the ConfigModule,\nloads environment variables, and initializes the configuration service with .properties files.\nThis function used for initialize config store\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/log/log.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOGGER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"LOGGER_SERVICE\")\n                    \n                \n\n            \n                \n                    Symbol used as a token for the LogService.\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/messages-broker/messages-broker.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MESSAGES_BROKER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"MSG_BROKER\")\n                    \n                \n\n            \n                \n                    Symbol used as a token for injecting the MessagesBrokerService.\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/ms-client/ms-client.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MS_CLIENT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"MS_CLIENT\")\n                    \n                \n\n            \n                \n                    Symbol used as a token for injecting the microservices' client.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MSG_BUS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"MSG_BUS\")\n                    \n                \n\n            \n                \n                    Symbol used as a token for injecting the message bus.\n\n                \n            \n\n        \n    \n\n    lib/shared/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MS_EXCEPTION_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"MsException\"\n                    \n                \n\n            \n                \n                    A constant representing the exception identifier for microservices.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REQUEST_PROPS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * @property accessToken\n   * The property name for storing the access token in the request.\n   */\n  accessToken: \"accessToken\",\n\n  /**\n   * @property currentUser\n   * The property name for storing the current user in the request.\n   */\n  currentUser: \"currentUser\",\n}\n                    \n                \n\n            \n                \n                    An object containing properties used for request handling.\n\n                \n            \n\n        \n    \n\n    lib/common/xml-data-bridge/xml-data-bridge.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parser\n                        \n                    \n                \n            \n\n            \n                \n                    Stored xml-parser instance\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReadOperatorRe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : /\\$\\{@read:([^}]*)}/\n                    \n                \n\n            \n                \n                    Regex for detect read-operator in xml-schema\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rootToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"@root\"\n                    \n                \n\n            \n                \n                    Representing root-node identifier\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/cache/cache.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REDIS_CLIENT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"REDIS_CLIENT\")\n                    \n                \n\n            \n                \n                    A symbol used for injecting the Redis client.\n\n                \n            \n\n        \n    \n\n    lib/common/process/process.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REGISTERED_PROCESSES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n\n            \n                \n                    Store for registered processes\n\n                \n            \n\n        \n    \n\n    lib/shared/transformers/simple-json.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SimpleJsonTransformer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValueTransformer\n\n                    \n                \n                \n                    \n                        Default value : {\n  from(value: string | object) {\n    if (typeof value === \"string\") {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return undefined;\n      }\n    }\n    return value;\n  },\n  to(value: object) {\n    return value;\n  },\n}\n                    \n                \n\n            \n                \n                    A ValueTransformer for transforming JSON data in a database column.\nThis transformer is used to automatically parse JSON strings from the database into JavaScript objects and vice versa.\n\n                \n            \n\n        \n    \n\n    lib/common/user/user.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USER_RELATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  \"avatar\",\n  \"avatar.name\",\n  \"avatar.name.lang\",\n  \"avatar.files\",\n  \"avatar.files.format\",\n  \"avatar.type\",\n  \"avatar.type.ext\",\n  \"roles\",\n  \"roles.name\",\n  \"roles.name.lang\",\n]\n                    \n                \n\n            \n                \n                    Array of user entity relations.\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/warlock/warlock.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        WARLOCK\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"WARLOCK\")\n                    \n                \n\n            \n                \n                    Symbol used as a token for injecting the warlock mechanism.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties.html":{"url":"additional-documentation/properties.html","title":"additional-page - Properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCommon configuration file\nThe kp.properties configuration file is the main configuration file that overrides any configuration properties in the project. No .config.ts file will be generated for this file.\nProperties\n\nkp.tmp.dir\n\nDescription: Path to the app temporary folder.\nType: string\nExample: /static/tmp\n\n\nkp.static.files\n\nDescription: Path to store static files (like media, files, etc.).\nType: string\nExample: /static\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/kp.properties.html":{"url":"additional-documentation/properties/kp.properties.html","title":"additional-page - kp.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCommon configuration file\nThe kp.properties configuration file is the main configuration file that overrides any configuration properties in the project. No .config.ts file will be generated for this file.\nProperties\n\nkp.tmp.dir\n\nDescription: Path to the app temporary folder.\nType: string\nExample: /static/tmp\n\n\nkp.static.files\n\nDescription: Path to store static files (like media, files, etc.).\nType: string\nExample: /static\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/auth.properties.html":{"url":"additional-documentation/properties/auth.properties.html","title":"additional-page - auth.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization configuration\nThe auth.properties configuration file contains settings for authentication and authorization using JSON Web Tokens (JWT).\n\nauth.jwt.secret\n\nDescription: The secret key used to sign the JWT.\nType: string\nExample: jwt_secret_key\n\n\nauth.access.token.expiration\n\nDescription: The lifetime of the access token.\nType: number\nExample: 600\n\n\nNote: The access token will be valid for 10 minutes (600 seconds).\n\nauth.refresh.token.expiration\n\nDescription: The lifetime of the update token.\nType: number\nExample: 3600\n\n\nNote: The upgrade token will be valid for 1 hour (600 seconds * 6).\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/bruteforce.properties.html":{"url":"additional-documentation/properties/bruteforce.properties.html","title":"additional-page - bruteforce.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBrute force protection configuration\nThe bruteforce.properties configuration file contains settings for protecting against brute force attacks.\n\nbruteforce.enabled\n\nDescription: Enables or disables brute force protection.\nType: boolean\nExample: true\n\n\nbruteforce.max.attempts\n\nDescription: Maximum number of login attempts before blocking.\nType: number\nExample: 3\n\n\nbruteforce.block.duration\n\nDescription: Duration for which a user is blocked after exceeding the maximum number of attempts.\nType: number\nExample: 300\nNote: The user will be blocked for 5 minutes (300 seconds).\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/captcha.properties.html":{"url":"additional-documentation/properties/captcha.properties.html","title":"additional-page - captcha.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCAPTCHA Configuration\nThe captcha.properties configuration file contains settings for CAPTCHA generation and validation.\n\ncaptcha.enabled\n\nDescription: Boolean flag indicating if CAPTCHA is enabled.\nType: boolean\nExample: true\n\n\ncaptcha.expiration\n\nDescription: Expiration time for CAPTCHA entries.\nType: number\nExample: 300\nNote: The CAPTCHA will be valid for 5 minutes (300 seconds).\n\n\ncaptcha.font.path\n\nDescription: Path to the font file used for graphical CAPTCHA.\nType: string\nExample: /lib/common/captcha/montserrat.ttf\n\n\ncaptcha.font.family\n\nDescription: Font family used for graphical CAPTCHA.\nType: string\nExample: Montserrat\n\n\ncaptcha.type\n\nDescription: Type of CAPTCHA to be used.\nType: string\nExample: default\n\n\ncaptcha.google.public.key\n\nDescription: Public key for Google reCAPTCHA.\nType: string\nExample: abc123456\n\n\ncaptcha.google.secret.key\n\nDescription: Secret key for Google reCAPTCHA.\nType: string\nExample: abc123456\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/file.properties.html":{"url":"additional-documentation/properties/file.properties.html","title":"additional-page - file.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFiles configuration\nThe file.properties configuration file contains settings for files store\n\nfile.public.dir\n\nDescription: Path stored public files\nType: string\nExample: /static/file\n\n\nfile.private.dir\n\nDescription: Path stored private files\nType: number\nExample: /static/private/file\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/media.properties.html":{"url":"additional-documentation/properties/media.properties.html","title":"additional-page - media.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMedia Configuration\nThe media.properties configuration file contains settings for managing the directories where public and private media files are stored.\n\nmedia.public.dir\n\nDescription: The directory where public media files are stored.\nType: string\nExample: /static/media\nNote: This directory is accessible to all users and serves public media content.\n\n\nmedia.private.dir\n\nDescription: The directory where private media files are stored.\nType: string\nExample: /static/private/media\nNote: This directory is restricted and serves private media content only accessible to authorized users.\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AbstractAuthGuard.html",[0,3.374,1,3.578]],["body/guards/AbstractAuthGuard.html",[1,5.395,2,5.781,3,0.111,4,0.097,5,0.029,6,7.66,7,3.926,8,0.073,9,2.563,10,0.148,11,6.153,12,3.69,13,1.335,14,7.163,15,0.29,16,0.545,17,5.236,18,2.893,19,3.892,20,5.471,21,3.09,22,4.139,23,1.515,24,3.016,25,2.67,26,6.153,27,6.153,28,5.471,29,5.836,30,0.656,31,4.415,32,6.153,33,4.428,34,3.839,35,3.288,36,6.812,37,7.66,38,3.126,39,6.153,40,6.153,41,3.986,42,5.676,43,1.214,44,0.007,45,0.425,46,0.166,47,1.192,48,5.502,49,5.023,50,1.778,51,2.272,52,1.265,53,3.839,54,6.153,55,4.415,56,6.153,57,5.781,58,1.243,59,4.42,60,5.836,61,3.898,62,6.153,63,0.425,64,4.415,65,3.839,66,3.222,67,6.153,68,4.197,69,4.197,70,4.687,71,2.63,72,6.153,73,4.006,74,0.25,75,4.415,76,0.976,77,3.604,78,3.604,79,3.604,80,4.415,81,1.442,82,3.604,83,3.364,84,3.364,85,3.171,86,0.104,87,1.571,88,2.139,89,2.893,90,3.926,91,4.415,92,6.153,93,2.373,94,4.415,95,4.415,96,3.926,97,3.839,98,2.134,99,6.153,100,4.415,101,4.415,102,4.415,103,2.21,104,3.926,105,4.415,106,4.415,107,4.415,108,4.415,109,4.415,110,4.415,111,4.415,112,4.415,113,4.415,114,4.415,115,0.004,116,0.004]],["title/classes/AbstractProcess.html",[10,0.091,117,3.834]],["body/classes/AbstractProcess.html",[3,0.081,4,0.071,5,0.021,8,0.063,9,2.457,10,0.144,15,0.212,16,0.604,17,5.567,18,2.593,21,3.016,23,1.206,24,3.368,25,2.623,30,0.807,34,4.122,43,1.014,44,0.007,45,0.355,46,0.176,47,1.195,49,3.999,50,1.781,51,1.809,63,0.355,74,0.246,76,0.713,86,0.076,88,2.145,89,1.699,93,3.497,98,2.053,103,1.568,115,0.004,116,0.004,117,3.999,118,0.921,119,8.799,120,3.229,121,1.228,122,5.218,123,3.732,124,2.735,125,2.832,126,4.832,127,4.509,128,5.393,129,5.875,130,4.356,131,5.875,132,5.875,133,4.356,134,4.844,135,5.102,136,5.263,137,2.096,138,4.899,139,3.229,140,3.853,141,3.229,142,3.853,143,3.229,144,1.122,145,3.229,146,3.732,147,5.469,148,4.356,149,4.067,150,3.229,151,6.243,152,5.695,153,6.648,154,4.356,155,6.648,156,6.648,157,6.648,158,4.356,159,4.356,160,3.229,161,4.356,162,3.229,163,5.033,164,4.356,165,3.229,166,3.341,167,3.056,168,3.229,169,3.732,170,3.732,171,3.229,172,2.735,173,2.871,174,1.98,175,6.365,176,3.229,177,4.356,178,5.21,179,3.732,180,2.352,181,3.537,182,1.788,183,0.975,184,1.302,185,2.735,186,6.316,187,2.202,188,2.46,189,2.636,190,2.46,191,3.229,192,3.229,193,3.229,194,2.202,195,2.636,196,2.636,197,2.871,198,3.229,199,3.229,200,3.229,201,3.229,202,2.636,203,1.235,204,7.768,205,3.229,206,2.636,207,2.871,208,7.103,209,3.229,210,3.229,211,3.229,212,1.936,213,3.229,214,4.899,215,3.229,216,4.356,217,3.229,218,2.563,219,2.014,220,3.518,221,3.229,222,3.229,223,2.871,224,4.899,225,3.229,226,3.229,227,3.229,228,3.229,229,3.229,230,7.103,231,3.229,232,6.316,233,3.229,234,3.229,235,3.229,236,3.229,237,3.229,238,3.229,239,3.229,240,1.185,241,7.476,242,2.871,243,4.899,244,4.899,245,3.229,246,3.229,247,1.866,248,2.871,249,3.229,250,3.229,251,3.229,252,3.229,253,3.229,254,2.871,255,3.229,256,5.919,257,5.919,258,5.919,259,3.229,260,3.229]],["title/classes/AbstractUserSubscriber.html",[10,0.091,261,3.834]],["body/classes/AbstractUserSubscriber.html",[3,0.117,4,0.102,5,0.031,8,0.075,9,2.423,10,0.141,15,0.308,16,0.79,17,5.545,18,2.533,23,1.577,24,3.247,30,0.727,43,1.252,44,0.007,45,0.438,46,0.213,47,1.229,50,1.674,51,1.728,63,0.531,65,3.996,70,4.88,71,2.966,74,0.255,76,1.034,86,0.11,88,2.206,89,2.533,93,3.172,97,2.92,98,1.623,103,1.697,115,0.005,116,0.005,118,1.335,203,0.773,261,5.229,262,8.225,263,4.162,264,1.14,265,5.229,266,4.17,267,2.011,268,5.229,269,6.405,270,6.405,271,6.405,272,4.68,273,6.405,274,4.68,275,6.983,276,4.361,277,3.996,278,6.983,279,3.576,280,6.405,281,6.405,282,6.983,283,6.983,284,4.68,285,3.703,286,6.265,287,5.229,288,3.576,289,6.405,290,4.68,291,4.25,292,3.605,293,5.961,294,4.162,295,1.174,296,1.441,297,2.528,298,2.807,299,3.82,300,3.82,301,4.68,302,4.162,303,4.162,304,4.68,305,4.68,306,4.68,307,4.68,308,4.68,309,4.68,310,4.68,311,3.82,312,3.047,313,8.493,314,0.759,315,4.68,316,4.68,317,3.192,318,6.405,319,1.559,320,4.68,321,4.162,322,4.68,323,6.405,324,6.405,325,4.68,326,3.192]],["title/interfaces/AudioFileMetadata.html",[327,0.653,328,2.817]],["body/interfaces/AudioFileMetadata.html",[3,0.097,4,0.084,5,0.058,8,0.037,10,0.127,15,0.254,16,0.689,44,0.007,45,0.231,46,0.217,52,0.793,63,0.599,74,0.197,86,0.202,115,0.004,116,0.004,121,2.154,203,1.459,240,1.59,279,2.154,296,1.188,314,1.577,327,1.288,328,3.942,329,1.211,330,2.406,331,3.8,332,2.697,333,4.497,334,4.497,335,4.589,336,4.589,337,4.497,338,4.589,339,4.423,340,4.497,341,4.497,342,4.497,343,4.497,344,4.323,345,4.497,346,4.497,347,1.561,348,1.63,349,3.02,350,2.926,351,2.23,352,0.724,353,1.712,354,1.96,355,1.366,356,1.521,357,2.313,358,2.42,359,1.285,360,2.406,361,1.63,362,3.352,363,3.352,364,3.352,365,3.352,366,2.926,367,3.352,368,3.487,369,3.639,370,3.231,371,3.352,372,2.406,373,2.307,374,2.307,375,2.406,376,2.406,377,2.406,378,2.406,379,2.406,380,2.406,381,2.084,382,2.406,383,2.406,384,2.406,385,2.406,386,2.406,387,2.406,388,2.406,389,2.406,390,2.406,391,2.406,392,2.406,393,2.406,394,2.406,395,2.406,396,2.406,397,2.406,398,2.406,399,2.511,400,2.511,401,2.511,402,2.511,403,1.143,404,2.511,405,2.511,406,2.511,407,2.511,408,2.511,409,2.511,410,2.511,411,2.511,412,2.511,413,2.511,414,2.511,415,2.511,416,2.511,417,2.511,418,2.511,419,2.511,420,2.511,421,2.511,422,2.511,423,3.487,424,2.511,425,2.511,426,2.511,427,2.511,428,2.511,429,2.511,430,2.511,431,2.511,432,2.511,433,2.511,434,2.511,435,2.511,436,2.511,437,2.511,438,2.511,439,2.511,440,2.511,441,2.511,442,2.511,443,2.406,444,2.406,445,2.406,446,2.406,447,2.406,448,2.406,449,2.406,450,2.406,451,0.884,452,1.122,453,2.019,454,2.313]],["title/entities/AudioFileMetadataEntity.html",[264,0.733,455,3.578]],["body/entities/AudioFileMetadataEntity.html",[3,0.108,4,0.095,5,0.062,8,0.041,10,0.083,13,0.938,15,0.615,16,0.748,30,0.862,44,0.007,45,0.497,46,0.219,61,2.02,63,0.566,74,0.182,86,0.102,87,2.48,115,0.004,116,0.004,182,1.831,203,1.156,218,1.872,264,1.093,295,1.084,314,1.479,326,4.135,328,3.636,331,3.504,332,1.903,333,4.368,334,4.368,335,4.199,336,4.199,337,4.368,338,4.199,339,4.047,340,4.368,341,4.368,342,4.368,343,4.368,344,4.199,345,4.368,346,4.368,455,4.618,456,1.211,457,9.358,458,2.948,459,2.192,460,2.812,461,4.768,462,3.733,463,3.528,464,3.844,465,4.735,466,3.293,467,3.293,468,6.062,469,3.528,470,3.293,471,3.528,472,4.948,473,4.948,474,4.948,475,3.844,476,4.322,477,2.196,478,3.105,479,4.322,480,6.062,481,3.293,482,6.062,483,3.105,484,3.844,485,3.293,486,3.844,487,1.357,488,2.992,489,2.413,490,4.322,491,2.196,492,3.821,493,4.238,494,3.528]],["title/injectables/AuthGuard.html",[495,1.475,496,4.177]],["body/injectables/AuthGuard.html",[0,5.608,1,6.902,3,0.159,4,0.139,5,0.042,8,0.061,9,1.811,10,0.151,12,5.293,17,5.073,18,2.933,19,4.749,21,3.77,22,5.049,30,0.588,43,1.088,44,0.007,45,0.381,46,0.149,47,1.068,71,2.549,74,0.272,76,1.402,82,5.18,83,4.834,86,0.149,115,0.006,116,0.006,137,2.765,495,2.451,496,7.521,497,2.889,498,6.346,499,4.124,500,4.683,501,6.374,502,4.218,503,6.943,504,3.543,505,6.346,506,2.682,507,5.643,508,5.643,509,3.322,510,3.806]],["title/modules/AuthModule.html",[511,1.096,512,3.834]],["body/modules/AuthModule.html",[3,0.133,4,0.116,5,0.046,8,0.051,10,0.102,19,3.952,23,1.306,24,1.917,30,0.491,43,0.909,44,0.007,45,0.318,46,0.125,47,0.892,50,1.13,74,0.281,76,1.172,81,1.731,86,0.125,93,2.686,103,1.845,115,0.005,116,0.005,122,3.889,182,1.602,183,1.602,267,1.665,403,1.571,451,1.596,506,2.241,511,2.001,512,6.349,513,2.296,514,5.303,515,5.306,516,6.965,517,3.539,518,4.535,519,3.452,520,5.933,521,5.303,522,1.596,523,7.778,524,4.665,525,1.802,526,1.802,527,1.766,528,1.766,529,1.802,530,2.643,531,1.766,532,2.93,533,1.731,534,2.32,535,1.665,536,1.802,537,1.802,538,1.802,539,1.802,540,1.802,541,1.802,542,1.698,543,1.802,544,1.802,545,1.802,546,1.766,547,2.367,548,1.802,549,1.766,550,1.802,551,1.802,552,1.802,553,1.802,554,1.802,555,1.633,556,1.802,557,1.766,558,1.802,559,5.303,560,4.716,561,6.965,562,4.716,563,5.303,564,4.716,565,4.496,566,3.617,567,3.255,568,3.308,569,2.961,570,5.303,571,3.617,572,5.303,573,3.617,574,5.303,575,5.305,576,4.04,577,3.255,578,5.303,579,5.303,580,3.452,581,5.303,582,4.329,583,5.303,584,5.303,585,4.329,586,5.303,587,5.303,588,2.414,589,2.694,590,3.065,591,3.809,592,2.414]],["title/classes/AuthService.html",[10,0.091,575,3.204]],["body/classes/AuthService.html",[3,0.1,4,0.087,5,0.026,8,0.07,9,2.565,10,0.129,12,3.436,15,0.262,23,1.803,30,0.621,41,4.083,42,5.669,43,1.149,44,0.007,45,0.402,46,0.157,47,1.128,50,1.874,51,2.116,58,1.157,63,0.534,71,2.532,74,0.12,77,3.258,78,3.258,79,3.258,86,0.211,87,1.463,88,2.569,89,3.086,98,2.54,103,1.518,115,0.004,116,0.004,118,1.139,144,2.014,149,3.834,174,1.289,180,2.75,181,2.608,291,4.22,299,4.676,522,1.677,564,3.549,575,3.907,593,3.549,594,5.094,595,4.676,596,5.729,597,5.094,598,7.323,599,5.729,600,5.729,601,5.729,602,5.797,603,3.991,604,5.26,605,4.115,606,3.907,607,3.332,608,4.813,609,3.095,610,6.458,611,5.26,612,5.729,613,3.991,614,5.578,615,5.26,616,5.729,617,5.729,618,3.991,619,7.323,620,5.505,621,5.729,622,5.729,623,4.364,624,4.364,625,6.787,626,3.549,627,3.549,628,3.549,629,3.549,630,4.813,631,3.549,632,3.549,633,4.089,634,3.907,635,6.132,636,5.26,637,3.549,638,3.549,639,3.549,640,5.47,641,4.571,642,3.258,643,3.549,644,3.549,645,4.569,646,4.083,647,4.994,648,3.549,649,3.549,650,3.549,651,3.549,652,4.676,653,4.676,654,3.549,655,3.549,656,3.549,657,4.115,658,4.115,659,3.549,660,3.549]],["title/classes/BadRequestMsException.html",[10,0.091,661,4.177]],["body/classes/BadRequestMsException.html",[3,0.17,4,0.149,5,0.045,8,0.065,10,0.131,30,0.629,35,3.084,43,1.163,44,0.007,45,0.407,46,0.159,47,1.142,63,0.523,74,0.244,76,1.5,86,0.159,115,0.006,116,0.006,118,1.937,137,2.403,181,3.703,184,2.738,499,3.801,661,7.232,662,8.133,663,4.629,664,5.074,665,5.074,666,4.702,667,7.745,668,5.547,669,5.295,670,5.155,671,5.547,672,4.629,673,4.419,674,4.629,675,6.787]],["title/injectables/BasicUserService.html",[495,1.475,676,3.834]],["body/injectables/BasicUserService.html",[3,0.102,4,0.089,5,0.027,8,0.078,10,0.112,15,0.268,16,0.717,18,1.413,22,4.621,23,1.82,24,3.414,25,1.304,30,0.753,43,1.393,44,0.007,45,0.488,46,0.191,47,1.367,50,1.882,58,1.493,59,6.342,63,0.557,71,3.202,74,0.244,76,0.9,86,0.096,87,1.041,88,2.455,89,2.017,93,3.226,97,2.542,98,2.351,103,2.071,115,0.004,116,0.004,137,2.059,144,2.114,180,1.956,203,1.574,218,3.201,288,3.246,291,4.016,295,1.022,297,3.662,298,2.444,299,3.326,317,2.779,321,3.623,495,1.825,497,1.855,499,2.717,510,2.444,522,1.332,654,7.605,676,5.533,677,5.814,678,4.074,679,3.141,680,5.814,681,6.191,682,6.191,683,5.17,684,5.17,685,5.17,686,5.17,687,4.074,688,4.074,689,5.814,690,3.785,691,5.331,692,4.074,693,4.429,694,3.785,695,4.074,696,4.127,697,3.785,698,4.074,699,3.785,700,4.074,701,3.785,702,3.044,703,3.785,704,4.074,705,4.127,706,5.17,707,3.104,708,2.927,709,2.133,710,6.028,711,4.074,712,4.074,713,5.814,714,2.542,715,3.141,716,5.814,717,4.074,718,5.814,719,4.074,720,4.074,721,4.074,722,4.074,723,4.074]],["title/modules/CacheModule.html",[511,1.096,565,2.715]],["body/modules/CacheModule.html",[3,0.137,4,0.119,5,0.046,8,0.052,10,0.105,19,4.652,21,3.49,44,0.007,74,0.271,76,1.203,81,1.777,86,0.128,103,1.442,115,0.005,116,0.005,267,1.709,276,2.613,277,4.42,403,1.613,506,2.301,511,2.018,513,2.357,525,1.85,526,1.85,527,1.813,528,1.813,529,1.85,530,2.677,531,1.813,532,2.949,533,1.777,534,2.36,535,1.709,536,1.85,537,1.85,538,1.85,539,1.85,540,1.85,541,1.85,542,1.743,543,1.85,544,1.85,545,1.85,546,1.813,547,2.408,548,1.85,549,1.813,550,1.85,551,1.85,552,1.85,553,1.85,554,1.85,555,1.676,556,1.85,557,1.813,558,1.85,565,5.351,567,4.22,577,3.681,580,3.544,588,3.226,589,2.766,590,3.147,592,3.586,679,3.828,724,3.039,725,3.265,726,3.265,727,3.265,728,4.84,729,4.84,730,4.84,731,5.632,732,4.25,733,3.265,734,3.039,735,5.443,736,7.085,737,4.613,738,4.915,739,5.443,740,3.91,741,3.396,742,3.91,743,3.91,744,4.84,745,5.784,746,5.443,747,4.443,748,3.713,749,3.713,750,3.713,751,4.443,752,3.91,753,4.443,754,4.147,755,4.443,756,4.147,757,4.443,758,4.443]],["title/classes/CacheService.html",[10,0.091,19,2.387]],["body/classes/CacheService.html",[3,0.134,4,0.117,5,0.035,8,0.051,9,2.799,10,0.135,15,0.352,19,3.561,23,1.924,30,0.845,43,1.564,44,0.007,45,0.547,46,0.214,47,1.535,50,1.945,63,0.589,86,0.126,115,0.005,116,0.005,118,1.528,144,2.201,167,4.875,183,2.36,184,2.16,314,1.496,585,6.379,635,3.652,636,3.845,646,4.318,759,5.354,760,4.078,761,4.761,762,6.233,763,6.233,764,6.233,765,6.233,766,6.233,767,6.233,768,6.233,769,5.354,770,6.233,771,5.354,772,6.233,773,5.354,774,6.233,775,5.354,776,6.233,777,5.354,778,3.845,779,6.233,780,5.354,781,6.233,782,5.354,783,4.761,784,5.087,785,5.354]],["title/modules/CaptchaModule.html",[511,1.096,786,3.834]],["body/modules/CaptchaModule.html",[3,0.133,4,0.116,5,0.046,8,0.051,10,0.102,23,1.308,30,0.646,43,1.195,44,0.007,45,0.418,46,0.194,47,1.173,50,1.486,74,0.257,76,1.173,81,1.734,86,0.125,89,1.842,103,1.847,115,0.005,116,0.005,144,1.216,182,1.604,183,1.604,267,1.667,403,1.574,451,1.893,506,3.29,511,2.055,513,2.299,517,4.199,518,4.539,519,3.457,522,1.597,524,5.148,525,1.805,526,1.805,527,1.769,528,1.769,529,1.805,530,2.645,531,1.769,532,2.931,533,1.734,534,2.322,535,1.667,536,1.805,537,1.805,538,1.805,539,1.805,540,1.805,541,1.805,542,1.7,543,1.805,544,1.805,545,1.805,546,1.769,547,2.369,548,1.805,549,1.769,550,1.805,551,1.805,552,1.805,553,1.805,554,1.805,555,1.635,556,1.805,557,1.769,558,1.805,565,4.03,566,3.622,567,3.258,568,3.313,577,4.011,580,5.067,588,3.174,589,3.542,590,3.07,591,3.814,592,3.174,786,6.746,787,5.31,788,5.691,789,3.892,790,6.296,791,5.31,792,6.353,793,4.722,794,6.199,795,4.755,796,5.31,797,4.722,798,5.31,799,6.008,800,4.335,801,4.722]],["title/classes/CaptchaRequest.html",[10,0.091,802,3.374]],["body/classes/CaptchaRequest.html",[3,0.134,4,0.117,5,0.035,8,0.051,9,2.362,10,0.173,15,0.351,16,0.862,30,0.648,33,3.082,35,2.761,44,0.007,46,0.219,50,1.49,52,1.096,58,1.412,63,0.516,65,3.326,70,5.941,73,3.471,74,0.21,86,0.194,87,1.362,88,1.61,115,0.005,116,0.005,118,1.521,121,1.753,144,2.02,174,2.123,203,1.367,296,1.642,319,2.598,366,3.66,451,1.221,452,1.55,460,2.111,511,1.244,515,4.062,522,1.787,607,2.886,645,3.326,789,5.431,790,4.062,799,3.637,802,5.946,803,4.352,804,2.82,805,5.946,806,5.332,807,5.021,808,4.741,809,5.332,810,2.943,811,5.077,812,5.021,813,3.326,814,3.66,815,4.741,816,4.741,817,4.352,818,4.062,819,3.83,820,3.198,821,4.062,822,3.637,823,3.082,824,4.352,825,3.83,826,4.551,827,2.151]],["title/classes/CaptchaService.html",[10,0.091,799,3.204]],["body/classes/CaptchaService.html",[3,0.13,4,0.114,5,0.034,8,0.066,9,2.617,10,0.175,15,0.341,23,1.691,30,0.636,33,3,35,2.725,43,0.89,44,0.007,45,0.311,46,0.215,47,0.873,50,1.746,52,1.067,58,1.048,63,0.491,65,4.284,70,5.863,73,4.471,74,0.206,86,0.192,87,1.754,88,1.568,115,0.005,116,0.005,118,1.481,121,1.93,144,2.122,174,2.084,203,1.134,296,1.598,319,2.287,366,3.595,451,1.189,452,1.509,511,1.211,515,3.954,522,1.876,607,3.381,645,4.284,789,5.448,790,3.954,799,4.684,802,6.119,803,4.237,804,2.094,805,5.528,807,3.728,810,2.591,811,4.471,812,4.933,813,3.238,814,3.595,815,4.615,816,4.615,817,4.237,818,6.24,819,4.933,820,4.119,821,5.231,822,3.54,823,3,824,4.237,825,3.728,826,4.471,827,2.094,828,5.606,829,5.19,830,5.19]],["title/entities/CategoryEntity.html",[264,0.733,831,3.374]],["body/entities/CategoryEntity.html",[3,0.121,4,0.105,5,0.043,8,0.046,10,0.093,15,0.522,16,0.805,30,0.837,44,0.007,45,0.445,46,0.212,58,1.318,61,2.249,63,0.477,74,0.238,81,1.571,86,0.113,87,2.372,115,0.005,116,0.005,167,3.003,182,2.4,203,1.224,218,2.084,264,1.157,267,1.511,295,1.207,314,1.288,319,2.174,352,1.392,356,2.922,403,1.426,456,1.348,459,2.36,460,2.729,462,3.303,465,3.003,477,2.445,487,1.511,488,3.223,491,2.445,492,2.827,493,2.687,525,1.636,526,1.636,527,1.603,528,1.603,529,1.636,530,2.518,531,1.603,532,2.86,533,1.571,534,2.174,535,1.511,536,1.636,537,1.636,538,1.636,539,1.636,540,1.636,541,1.636,542,1.541,543,1.636,544,1.636,545,1.636,546,1.603,547,2.219,548,1.636,549,1.603,550,1.636,551,1.636,552,1.636,553,1.636,554,1.636,555,1.482,556,1.636,557,1.603,558,1.636,810,1.816,831,6.151,832,4.813,833,4.973,834,6.529,835,6.588,836,3.764,837,7.409,838,4.003,839,7.409,840,7.409,841,4.813,842,2.31,843,2.782,844,4.813,845,3.358,846,2.445,847,4.073,848,4.813,849,4.813,850,4.037,851,2.886,852,3.527,853,2.886,854,4.813,855,3.457,856,4.073,857,2.264,858,5.053,859,4.813,860,7.409,861,4.813,862,3.774,863,4.973,864,4.813,865,3.666,866,4.813,867,3.418,868,3.418,869,3.317,870,4.28,871,4.813,872,2.6,873,4.813,874,3.457,875,3.928,876,4.813,877,4.813,878,3.457]],["title/modules/CategoryModule.html",[511,1.096,879,3.578]],["body/modules/CategoryModule.html",[3,0.146,4,0.128,5,0.049,8,0.056,10,0.112,44,0.007,74,0.265,76,1.287,81,1.902,86,0.137,115,0.005,116,0.005,267,1.829,403,1.726,511,2.061,513,2.522,525,1.98,526,1.98,527,1.94,528,1.94,529,1.98,530,2.765,531,1.94,532,2.995,533,1.902,534,2.465,535,1.829,536,1.98,537,1.98,538,1.98,539,1.98,540,1.98,541,1.98,542,1.865,543,1.98,544,1.98,545,1.98,546,1.94,547,2.515,548,1.98,549,1.94,550,1.98,551,1.98,552,1.98,553,1.98,554,1.98,555,1.794,556,1.98,557,1.94,558,1.98,567,4.22,577,3.458,588,3.703,592,3.703,679,3.998,709,3.05,724,3.252,725,3.494,726,3.494,727,3.494,732,4.439,733,3.494,734,3.252,740,4.184,831,4.184,879,7.141,880,5.18,881,5.825,882,5.18,883,5.18,884,7.279,885,5.825,886,5.638,887,6.041,888,6.581,889,6.041,890,5.825,891,3.792,892,5.18,893,5.825]],["title/entities/CategoryRestrictionEntity.html",[264,0.733,894,4.177]],["body/entities/CategoryRestrictionEntity.html",[3,0.138,4,0.121,5,0.047,8,0.053,10,0.106,15,0.521,16,0.88,30,0.776,41,3.168,44,0.007,46,0.197,63,0.428,71,2.33,74,0.237,81,1.797,86,0.129,87,2.217,115,0.005,116,0.005,203,1.308,264,1.236,267,1.728,295,1.38,314,1.157,319,2.377,352,1.488,403,1.631,456,1.542,459,2.58,460,2.531,462,2.753,477,2.797,487,1.728,488,3.523,491,2.797,492,2.384,525,1.871,526,1.871,527,1.833,528,1.833,529,1.871,530,2.692,531,1.833,532,2.957,533,1.797,534,2.377,535,1.728,536,1.871,537,1.871,538,1.871,539,1.871,540,1.871,541,1.871,542,1.762,543,1.871,544,1.871,545,1.871,546,1.833,547,2.426,548,1.871,549,1.833,550,1.871,551,1.871,552,1.871,553,1.871,554,1.871,555,1.695,556,1.871,557,1.833,558,1.871,810,2.077,831,6.019,833,6.033,842,2.643,843,3.182,846,2.797,867,3.737,868,3.737,869,3.626,889,5.826,894,6.347,895,8.682,896,5.505,897,4.868,898,7.137,899,3.626,900,7.92,901,4.387,902,4.193,903,5.505,904,4.646,905,5.505,906,5.505,907,5.505,908,5.505,909,5.505,910,3.074,911,5.505]],["title/injectables/CategoryService.html",[495,1.475,884,3.578]],["body/injectables/CategoryService.html",[3,0.13,4,0.114,5,0.034,8,0.073,10,0.1,15,0.342,18,2.384,21,3.657,23,1.693,24,2.784,25,2.728,30,0.713,43,1.32,44,0.007,45,0.462,46,0.181,47,1.434,50,1.642,51,1.919,63,0.462,74,0.268,76,1.148,86,0.122,88,2.326,89,2.384,93,2.651,103,1.377,115,0.005,116,0.005,137,2.434,144,1.575,184,2.096,190,3.959,264,1.073,295,1.303,314,1.248,352,1.678,495,2.158,497,2.366,506,2.197,509,2.721,522,1.575,607,2.837,708,3.733,709,2.721,715,3.713,741,3.242,831,5.886,833,7.057,835,7.287,838,4.161,870,7.287,884,5.236,888,6.112,889,5.611,892,4.621,912,5.197,913,6.873,914,5.236,915,5.197,916,8.195,917,5.197,918,6.873,919,6.873,920,5.163,921,5.197,922,8.195,923,4.937,924,3.599,925,6.873,926,6.873,927,5.197,928,6.873,929,7.701,930,6.873,931,6.873,932,6.873,933,3.117,934,6.848,935,5.197,936,4.242,937,5.197,938,5.197,939,5.611,940,5.197,941,5.197,942,5.197,943,5.197,944,5.197,945,2.145]],["title/interfaces/ConfigItem.html",[327,0.653,946,3.834]],["body/interfaces/ConfigItem.html",[3,0.168,4,0.146,5,0.044,8,0.064,15,0.439,16,0.994,44,0.007,46,0.189,63,0.56,86,0.157,115,0.006,116,0.006,183,2.898,327,0.93,329,2.098,646,4.605,807,5.788,811,5.246,827,3.891,946,6.577,947,6.683,948,4.169,949,5.046,950,5.942,951,6.683,952,5.942,953,5.455,954,6.577]],["title/modules/ConfigModule.html",[511,1.096,955,3.374]],["body/modules/ConfigModule.html",[3,0.147,4,0.128,5,0.049,8,0.056,10,0.113,44,0.007,74,0.257,76,1.291,81,1.908,86,0.137,115,0.005,116,0.005,267,1.834,403,1.731,511,2.063,513,2.53,525,1.986,526,1.986,527,1.946,528,1.946,529,1.986,530,2.768,531,1.946,532,2.997,533,1.908,534,2.47,535,1.834,536,1.986,537,1.986,538,1.986,539,1.986,540,1.986,541,1.986,542,1.87,543,1.986,544,1.986,545,1.986,546,1.946,547,2.52,548,1.986,549,1.946,550,1.986,551,1.986,552,1.986,553,1.986,554,1.986,555,1.799,556,1.986,557,1.946,558,1.986,565,5.224,566,3.985,567,4.223,568,3.645,577,3.465,588,3.708,592,3.708,724,3.262,725,3.504,726,3.504,727,3.504,732,4.447,733,3.504,734,3.262,788,6.053,827,2.991,955,6.83,956,5.195,957,5.843,958,5.195,959,5.195,960,6.866,961,5.843,962,4.447,963,5.843]],["title/injectables/ConfigService.html",[495,1.475,960,3.374]],["body/injectables/ConfigService.html",[3,0.047,4,0.07,5,0.057,8,0.067,10,0.036,15,0.124,16,1.116,18,2.274,19,3.172,21,2.518,23,1.193,24,3.102,25,2.857,30,0.728,33,2.8,38,2.98,43,1.346,44,0.007,45,0.455,46,0.192,47,1.221,50,1.74,51,0.697,52,0.996,53,3.022,58,1.185,59,1.355,61,2.917,63,0.559,65,1.985,69,2.17,74,0.197,76,0.417,86,0.097,87,1.382,88,2.335,89,3.241,93,3.287,97,1.177,98,1.104,103,1.923,115,0.002,116,0.002,124,1.777,134,2.17,137,1.127,144,1.703,166,2.17,167,1.985,174,1.475,180,2.326,182,1.246,183,2.437,184,0.761,212,1.132,219,1.177,220,1.355,232,1.678,247,2.385,254,2.829,302,2.829,303,1.678,353,2.771,381,1.719,459,1.15,495,0.999,497,0.859,504,1.053,506,0.797,509,0.988,522,1.344,535,0.999,571,1.287,604,2.285,607,2.422,609,2.479,633,1.777,635,2.17,645,3.022,646,3.77,647,3.69,679,1.719,701,3.154,749,3.69,795,3.304,817,2.597,827,3.413,836,2.461,862,2.385,887,2.597,914,2.424,945,0.779,946,4.416,949,1.719,960,3.48,964,1.887,965,2.285,966,2.597,967,2.829,968,3.33,969,2.424,970,3.182,971,3.182,972,4.126,973,4.126,974,4.126,975,3.182,976,4.845,977,4.126,978,4.126,979,3.182,980,4.126,981,3.182,982,4.126,983,3.182,984,4.126,985,3.182,986,3.182,987,3.182,988,1.887,989,2.597,990,3.182,991,3.69,992,5.503,993,4.845,994,1.887,995,6.558,996,1.887,997,6.242,998,1.887,999,5.2,1000,2.597,1001,5.866,1002,2.597,1003,4.759,1004,1.887,1005,2.617,1006,1.887,1007,1.617,1008,3.021,1009,3.518,1010,3.182,1011,3.182,1012,2.597,1013,3.182,1014,1.887,1015,2.424,1016,3.182,1017,3.182,1018,2.829,1019,1.887,1020,4.845,1021,1.887,1022,3.182,1023,3.48,1024,4.308,1025,4.126,1026,3.182,1027,3.182,1028,1.887,1029,2.424,1030,3.483,1031,2.829,1032,2.424,1033,1.887,1034,5.866,1035,1.887,1036,3.154,1037,3.819,1038,3.182,1039,1.887,1040,1.719,1041,4.308,1042,4.308,1043,1.887,1044,7.057,1045,1.887,1046,3.182,1047,2.829,1048,2.829,1049,3.182,1050,1.887,1051,1.887,1052,1.887,1053,2.424,1054,1.678,1055,1.678,1056,4.811,1057,3.669,1058,2.829,1059,4.308,1060,4.811,1061,1.887,1062,1.887,1063,1.228,1064,1.019,1065,1.132,1066,3.182,1067,1.887,1068,1.437,1069,1.887,1070,3.182,1071,1.887,1072,1.887,1073,1.678,1074,1.887,1075,1.887,1076,1.887,1077,1.887,1078,1.887,1079,1.887,1080,1.887,1081,1.887,1082,3.69,1083,3.143,1084,1.887,1085,1.887,1086,1.887,1087,1.887,1088,1.887,1089,1.678,1090,1.887,1091,1.887,1092,1.887,1093,1.887,1094,1.437,1095,1.887,1096,1.887,1097,1.887,1098,2.597,1099,1.887,1100,2.829,1101,1.887,1102,1.887,1103,1.887,1104,1.887,1105,1.887,1106,1.678,1107,1.887,1108,1.887,1109,3.182,1110,1.887,1111,1.887,1112,1.887,1113,1.887,1114,1.887,1115,3.182,1116,4.126,1117,2.424,1118,3.182,1119,5.41,1120,1.887,1121,4.126,1122,1.887,1123,4.845,1124,2.829,1125,3.182,1126,4.845,1127,3.182,1128,4.126,1129,5.41,1130,3.182,1131,1.887,1132,1.887,1133,6.558,1134,1.887,1135,1.887,1136,1.887,1137,1.887,1138,2.829,1139,1.887,1140,3.669,1141,1.887,1142,1.887,1143,3.954,1144,1.887,1145,4.126,1146,1.887,1147,1.887,1148,4.126,1149,1.887,1150,1.887,1151,1.887,1152,1.887,1153,1.887,1154,1.887,1155,1.887,1156,1.887,1157,1.887,1158,3.182,1159,1.887,1160,3.182,1161,1.887,1162,1.887,1163,1.887,1164,1.887,1165,7.057,1166,1.887,1167,1.887,1168,1.887,1169,1.887,1170,4.845,1171,1.887,1172,1.887,1173,1.887,1174,1.887,1175,3.182,1176,1.887,1177,1.887,1178,1.437,1179,1.887,1180,1.887,1181,1.887,1182,1.887,1183,3.182,1184,1.887,1185,1.887,1186,1.887,1187,3.182,1188,1.887,1189,1.678,1190,1.887,1191,1.887,1192,1.887,1193,3.182,1194,3.182,1195,1.887,1196,3.182,1197,1.887,1198,1.887,1199,1.887,1200,1.887,1201,3.182,1202,1.887,1203,1.887,1204,1.437,1205,1.887,1206,1.887,1207,3.182,1208,1.887,1209,3.182,1210,1.887,1211,1.887,1212,1.887,1213,1.887,1214,1.887,1215,1.887,1216,1.887]],["title/classes/DbExceptionFilter.html",[10,0.091,1217,4.177]],["body/classes/DbExceptionFilter.html",[3,0.157,4,0.137,5,0.041,8,0.06,10,0.121,13,1.683,15,0.413,23,1.909,30,0.581,43,1.075,44,0.007,45,0.376,46,0.147,47,1.056,50,1.794,74,0.252,76,1.386,86,0.147,89,2.176,115,0.006,116,0.006,118,1.79,149,4.06,181,3.831,219,5.25,266,5.048,295,2.11,381,4.749,624,6.696,666,5.221,667,6.895,750,5.74,822,5.74,933,3.763,1217,7.816,1218,7.754,1219,6.274,1220,3.939,1221,5.288,1222,6.895,1223,7.754,1224,7.754,1225,7.754,1226,7.754,1227,7.754,1228,8.79,1229,8.79,1230,6.274,1231,6.274,1232,6.274,1233,6.274,1234,6.274,1235,6.274,1236,6.274]],["title/interfaces/DirectoryStructure.html",[327,0.653,1237,4.177]],["body/interfaces/DirectoryStructure.html",[3,0.111,4,0.096,5,0.06,8,0.042,24,2.91,30,0.408,44,0.007,46,0.196,47,0.741,50,1.716,58,1.428,61,2.871,63,0.532,74,0.256,86,0.196,87,1.125,88,2.518,89,3.026,93,3.418,103,2.132,115,0.004,116,0.004,121,1.541,144,1.753,146,3.356,149,2.307,212,2.642,218,2.66,219,2.748,279,3.949,312,2.868,327,0.984,329,1.383,353,3.796,451,1.62,511,1.877,607,1.819,636,4.413,645,2.748,646,2.949,682,3.356,820,3.685,967,5.463,968,2.728,969,4.68,992,5.685,999,3.356,1037,2.868,1053,4.68,1189,5.463,1204,3.356,1237,7.606,1238,3.917,1239,6.805,1240,6.29,1241,6.805,1242,6.143,1243,3.685,1244,2.727,1245,4.405,1246,4.405,1247,6.143,1248,6.143,1249,4.405,1250,6.143,1251,4.405,1252,3.596,1253,5.463,1254,3.917,1255,6.29,1256,3.917,1257,3.917,1258,4.405,1259,4.405,1260,5.13,1261,4.405,1262,4.405,1263,6.143,1264,6.143,1265,4.405,1266,4.405,1267,4.405,1268,3.356,1269,3.917,1270,4.405,1271,6.143,1272,6.143,1273,3.484,1274,4.405,1275,4.405,1276,4.405,1277,4.405,1278,4.405,1279,4.405,1280,4.405,1281,2.868,1282,4.405,1283,4.405,1284,4.405,1285,4.405,1286,4.405,1287,5.081,1288,3.917,1289,4.405,1290,3.917,1291,3.596,1292,4.405,1293,4.405,1294,3.917,1295,4.405,1296,4.405,1297,4.405,1298,4.405,1299,4.405,1300,4.405,1301,4.405,1302,3.917,1303,4.405,1304,6.143,1305,4.405,1306,4.405,1307,4.405,1308,4.405,1309,7.653,1310,4.405,1311,4.405,1312,4.405]],["title/injectables/DtoInterceptor.html",[495,1.475,1313,4.177]],["body/injectables/DtoInterceptor.html",[3,0.157,4,0.137,5,0.041,8,0.06,10,0.177,13,1.36,15,0.412,18,2.173,23,1.908,29,6.692,30,0.718,43,1.328,44,0.007,45,0.465,46,0.147,47,1.303,48,4.5,50,1.335,74,0.252,76,1.384,86,0.147,98,2.173,103,1.66,115,0.006,116,0.006,137,2.218,174,1.409,180,3.719,266,4.078,319,2.58,495,2.432,497,2.852,535,1.967,814,3.28,857,2.173,1221,5.283,1244,3.438,1313,7.478,1314,6.264,1315,7.746,1316,7.746,1317,6.888,1318,6.323,1319,6.864,1320,7.746,1321,6.264,1322,6.264,1323,7.746,1324,7.746,1325,7.171,1326,8.785,1327,6.264,1328,7.746,1329,5.113,1330,4.5,1331,6.264,1332,5.571,1333,4.5,1334,6.264,1335,6.264]],["title/interfaces/EntitySaveHandler.html",[327,0.653,1336,2.715]],["body/interfaces/EntitySaveHandler.html",[3,0.078,4,0.068,5,0.02,8,0.067,9,2.364,10,0.125,15,0.205,23,1.176,30,0.289,38,1.587,41,3.106,43,1.391,44,0.007,45,0.513,46,0.203,47,0.804,50,1.688,51,1.153,52,1.884,58,1.673,63,0.565,66,1.635,71,2.285,74,0.237,86,0.201,88,2.687,115,0.004,116,0.003,121,2.143,144,2.109,172,1.744,174,1.895,180,2.293,203,1.268,240,0.755,264,1.488,266,3.109,285,1.805,295,0.783,296,0.962,314,1.385,319,2.558,327,1.227,329,0.98,347,1.134,348,1.32,352,0.897,355,1.691,356,1.231,451,0.715,452,0.908,456,0.875,487,1.82,502,1.687,511,0.728,522,1.094,607,3.17,609,2.019,633,1.744,696,1.744,702,2.5,705,2.666,715,3.133,810,1.178,814,1.635,836,3.3,838,2.58,901,3.036,910,1.744,920,2.761,924,1.635,949,1.687,1005,3.133,1007,3.3,1009,1.873,1030,1.541,1040,1.687,1064,2.58,1065,1.873,1220,1.587,1243,1.873,1244,1.386,1336,2.761,1337,1.873,1338,2.58,1339,2.864,1340,2.58,1341,2.979,1342,2.864,1343,2.979,1344,2.864,1345,2.864,1346,3.238,1347,3.123,1348,4.541,1349,1.744,1350,2.759,1351,1.153,1352,1.873,1353,4.341,1354,1.805,1355,1.635,1356,1.873,1357,1.744,1358,2.864,1359,1.873,1360,4.439,1361,1.873,1362,1.744,1363,3.754,1364,1.635,1365,2.666,1366,1.873,1367,1.873,1368,1.873,1369,1.873,1370,1.805,1371,1.805,1372,1.873,1373,1.873,1374,1.873,1375,1.873,1376,1.873,1377,1.873,1378,1.873,1379,1.873,1380,1.873,1381,1.873,1382,1.873,1383,1.873,1384,1.873,1385,3.352,1386,1.873,1387,2.666,1388,2.761,1389,1.948,1390,2.761,1391,1.687,1392,2.864,1393,1.386,1394,1.948,1395,2.864,1396,5.052,1397,2.5,1398,1.948,1399,1.948,1400,1.948,1401,1.948,1402,1.873,1403,1.873,1404,1.805,1405,1.948,1406,1.948,1407,1.805,1408,1.873,1409,1.635,1410,1.805,1411,1.948,1412,1.873,1413,1.948,1414,1.948,1415,2.761,1416,1.873,1417,5.168,1418,4.605,1419,4.366,1420,1.948,1421,1.873,1422,2.864,1423,1.948,1424,1.948,1425,3.618,1426,1.873,1427,1.948,1428,1.687,1429,2.979,1430,1.948,1431,1.948,1432,1.948,1433,1.948,1434,1.948,1435,1.805,1436,1.873,1437,1.541,1438,1.948,1439,1.948,1440,1.948]],["title/classes/ExchangeTokenPayload.html",[10,0.091,1441,3.578]],["body/classes/ExchangeTokenPayload.html",[3,0.124,4,0.108,5,0.032,8,0.047,10,0.173,12,4.501,15,0.324,16,0.819,30,0.457,41,3.331,42,5.685,44,0.007,46,0.197,47,1.263,58,1.692,63,0.545,71,2.878,74,0.259,76,1.09,86,0.189,98,2.303,115,0.005,116,0.005,118,1.408,174,1.885,203,0.815,240,1.941,276,3.187,291,3.853,451,1.13,452,1.435,460,1.49,511,1.151,520,3.544,522,1.719,542,1.58,575,3.365,576,3.759,602,3.544,605,5.765,606,4.529,608,5.39,610,6.017,611,4.769,614,5.058,615,3.544,620,3.365,630,3.544,634,3.365,657,3.544,658,3.544,784,4.885,789,3.707,804,3.238,805,5.39,812,6.197,813,3.078,857,1.711,991,5.716,1030,2.436,1221,3.365,1355,2.583,1441,5.058,1442,3.759,1443,5.008,1444,6.552,1445,5.42,1446,4.388,1447,4.934,1448,5.42,1449,6.838,1450,3.475,1451,4.338,1452,4.028,1453,4.028,1454,4.054,1455,3.759,1456,4.028,1457,4.028,1458,4.028,1459,4.028,1460,3.759,1461,4.028,1462,5.42,1463,4.028,1464,4.028]],["title/interfaces/ExplorerAction.html",[327,0.653,1365,2.623]],["body/interfaces/ExplorerAction.html",[3,0.078,4,0.068,5,0.02,8,0.075,9,2.357,10,0.125,15,0.203,16,0.584,38,1.57,41,3.092,43,1.353,44,0.007,45,0.523,46,0.215,47,0.52,50,1.631,51,1.141,52,1.882,58,1.721,63,0.564,66,1.618,71,1.881,74,0.237,86,0.2,88,2.682,115,0.004,116,0.003,121,2.138,144,2.106,172,1.726,174,1.821,180,2.275,203,1.264,240,0.747,264,1.484,285,1.787,295,0.775,296,0.952,314,1.414,319,2.151,327,1.225,329,0.97,347,1.125,348,1.306,352,1.308,355,1.678,356,1.219,451,0.708,452,0.899,456,0.866,487,1.809,502,1.67,511,0.721,522,1.085,607,3.158,609,2.003,633,1.726,696,1.726,702,2.481,705,2.645,715,3.113,810,1.166,814,1.618,836,3.887,838,3.763,901,3.017,910,1.726,920,2.739,924,1.618,949,1.67,1005,3.113,1007,3.282,1009,1.854,1030,1.526,1040,1.67,1064,2.56,1065,1.854,1220,1.57,1243,1.854,1244,1.372,1336,1.787,1337,1.854,1338,1.67,1339,1.854,1340,1.67,1341,1.928,1342,1.854,1343,1.928,1344,1.854,1345,1.854,1346,1.726,1348,4.537,1349,1.726,1350,2.906,1351,1.141,1352,1.854,1353,4.385,1354,1.787,1355,1.618,1356,1.854,1357,1.726,1358,2.842,1359,1.854,1360,4.423,1361,1.854,1362,1.726,1363,3.734,1364,1.618,1365,3.217,1366,1.854,1367,1.854,1368,1.854,1369,1.854,1370,1.787,1371,1.787,1372,1.854,1373,1.854,1374,1.854,1375,1.854,1376,1.854,1377,1.854,1378,1.854,1379,1.854,1380,1.854,1381,1.854,1382,1.854,1383,1.854,1384,1.854,1385,3.331,1386,1.854,1387,2.645,1388,2.739,1389,1.928,1390,3.734,1391,2.56,1392,2.842,1393,1.372,1394,1.928,1395,2.842,1396,5.039,1397,2.481,1398,1.928,1399,1.928,1400,1.928,1401,1.928,1402,1.854,1403,1.854,1404,1.787,1405,1.928,1406,1.928,1407,1.787,1408,1.854,1409,1.618,1410,1.787,1411,1.928,1412,1.854,1413,1.928,1414,1.928,1415,2.739,1416,1.854,1417,5.153,1418,4.589,1419,4.346,1420,1.928,1421,1.854,1422,2.842,1423,1.928,1424,1.928,1425,3.595,1426,1.854,1427,1.928,1428,1.67,1429,2.956,1430,1.928,1431,1.928,1432,1.928,1433,1.928,1434,1.928,1435,1.787,1436,1.854,1437,1.526,1438,1.928,1439,1.928,1440,1.928]],["title/entities/ExplorerActionEntity.html",[264,0.733,1465,3.834]],["body/entities/ExplorerActionEntity.html",[3,0.124,4,0.108,5,0.044,8,0.077,10,0.095,13,1.07,15,0.528,16,0.818,30,0.799,44,0.007,45,0.45,46,0.215,58,1.514,61,3.1,63,0.398,74,0.251,81,1.609,86,0.116,87,2.288,115,0.005,116,0.005,182,2.605,218,3.247,264,1.171,267,1.547,295,1.236,314,1.075,352,1.409,403,1.46,456,2.1,459,2.398,460,2.605,462,3.094,465,3.075,487,2.083,493,2.752,525,1.675,526,1.675,527,1.641,528,1.641,529,1.675,530,2.549,531,1.641,532,2.877,533,1.609,534,2.21,535,1.547,536,1.675,537,1.675,538,1.675,539,1.675,540,1.675,541,1.675,542,1.578,543,1.675,544,1.675,545,1.675,546,1.641,547,2.255,548,1.675,549,1.641,550,1.675,551,1.675,552,1.675,553,1.675,554,1.675,555,1.517,556,1.675,557,1.641,558,1.675,836,3.81,838,4.051,850,4.478,851,3.979,852,4.334,853,3.979,855,3.54,856,4.139,857,2.301,858,5.115,862,3.835,863,5.054,867,3.926,868,3.926,872,2.662,874,3.54,878,3.54,952,5.899,962,3.979,1353,2.504,1354,2.849,1364,3.473,1365,3.704,1390,3.835,1393,2.187,1397,2.58,1465,5.415,1466,6.33,1467,4.928,1468,4.525,1469,5.054,1470,5.415,1471,5.899,1472,5.415,1473,3.754,1474,4.928,1475,4.928,1476,4.928,1477,4.928,1478,4.928,1479,4.023,1480,5.472,1481,4.928,1482,3.208,1483,3.075,1484,3.754,1485,4.928,1486,2.752]],["title/interfaces/ExplorerColumn.html",[327,0.653,1363,2.715]],["body/interfaces/ExplorerColumn.html",[3,0.071,4,0.062,5,0.019,8,0.073,9,2.301,10,0.119,15,0.186,16,0.546,38,1.438,41,2.969,43,1.314,44,0.007,45,0.514,46,0.223,47,0.476,50,1.58,51,1.045,52,1.957,58,1.628,63,0.569,66,1.482,71,1.78,74,0.23,86,0.196,88,2.638,115,0.004,116,0.003,121,2.094,144,2.08,172,1.58,174,1.773,180,2.125,203,1.332,240,0.685,264,1.472,285,1.636,295,0.71,296,0.872,314,1.416,319,2.053,327,1.204,329,0.889,347,1.051,348,1.196,352,0.831,355,1.567,356,1.116,451,0.648,452,0.823,456,0.793,487,1.935,502,1.529,511,0.66,522,1.014,607,3.059,609,1.871,633,1.58,696,1.58,702,2.318,705,2.471,715,2.945,810,2.326,814,1.482,836,3.132,838,2.391,901,2.854,910,1.58,920,2.559,924,1.482,949,1.529,1005,2.945,1007,3.132,1009,1.698,1030,3.043,1040,1.529,1064,2.391,1065,1.698,1220,1.438,1243,1.698,1244,1.256,1336,1.636,1337,1.698,1338,1.529,1339,1.698,1340,1.529,1341,1.766,1342,1.698,1343,1.766,1344,1.698,1345,1.698,1346,1.58,1348,4.527,1349,1.58,1350,2.853,1351,1.045,1352,1.698,1353,4.3,1354,1.636,1355,1.482,1356,1.698,1357,1.58,1358,3.697,1359,1.698,1360,4.557,1361,1.698,1362,1.58,1363,3.867,1364,1.482,1365,2.471,1366,1.698,1367,1.698,1368,1.698,1369,1.698,1370,1.636,1371,1.636,1372,3.697,1373,3.697,1374,3.697,1375,3.697,1376,3.697,1377,3.697,1378,3.697,1379,3.697,1380,3.697,1381,3.697,1382,3.697,1383,3.697,1384,3.697,1385,4.284,1386,3.697,1387,3.735,1388,3.563,1389,1.766,1390,2.559,1391,1.529,1392,2.655,1393,1.256,1394,1.766,1395,2.655,1396,4.928,1397,2.318,1398,1.766,1399,1.766,1400,1.766,1401,1.766,1402,1.698,1403,1.698,1404,1.636,1405,1.766,1406,1.766,1407,1.636,1408,1.698,1409,1.482,1410,1.636,1411,1.766,1412,1.698,1413,1.766,1414,1.766,1415,2.559,1416,1.698,1417,5.03,1418,4.444,1419,4.173,1420,1.766,1421,1.698,1422,2.655,1423,1.766,1424,1.766,1425,3.401,1426,1.698,1427,1.766,1428,1.529,1429,2.762,1430,1.766,1431,1.766,1432,1.766,1433,1.766,1434,1.766,1435,1.636,1436,1.698,1437,1.397,1438,1.766,1439,1.766,1440,1.766]],["title/entities/ExplorerColumnEntity.html",[264,0.733,1487,3.578]],["body/entities/ExplorerColumnEntity.html",[3,0.079,4,0.069,5,0.031,8,0.062,10,0.061,13,0.682,15,0.597,16,0.592,30,0.86,44,0.007,45,0.555,46,0.22,52,1.856,58,1.316,61,2.243,63,0.498,74,0.231,81,1.026,86,0.074,87,2.362,115,0.003,116,0.003,182,2.823,203,0.962,218,2.078,264,0.909,267,0.987,295,0.788,314,1.056,319,2.643,332,1.507,403,0.931,456,0.88,459,2.356,460,2.804,461,3.145,462,3.3,465,2.994,487,1.507,492,2.521,493,2.68,525,1.068,526,1.068,527,1.047,528,1.047,529,1.068,530,1.979,531,1.047,532,2.513,533,1.026,534,1.598,535,0.987,536,1.068,537,1.068,538,1.068,539,1.068,540,1.068,541,1.068,542,1.006,543,1.068,544,1.068,545,1.068,546,1.047,547,1.631,548,1.068,549,1.047,550,1.068,551,1.068,552,1.068,553,1.068,554,1.068,555,0.968,556,1.068,557,1.047,558,1.068,810,2.459,827,1.936,842,1.509,846,2.438,847,4.065,850,3.91,851,2.878,852,3.52,853,2.878,855,3.447,856,4.065,857,2.26,858,4.787,862,3.767,863,4.964,867,3.048,868,3.048,869,3.566,872,1.698,874,2.257,878,3.447,904,3.124,945,3.613,1030,2.874,1220,2.438,1348,2.795,1353,2.958,1362,2.68,1363,2.774,1372,3.492,1373,3.492,1374,3.492,1375,3.492,1376,3.492,1377,3.492,1378,3.492,1379,3.492,1380,3.492,1381,3.492,1382,3.492,1383,3.492,1384,3.492,1386,3.492,1387,3.251,1393,1.395,1416,2.878,1466,6.691,1469,3.656,1470,3.917,1472,3.917,1482,2.046,1483,1.961,1484,2.394,1486,1.755,1487,3.656,1488,3.143,1489,3.917,1490,3.447,1491,5.822,1492,5.822,1493,3.143,1494,2.046,1495,3.143,1496,6.195,1497,3.143,1498,3.143,1499,3.143,1500,4.799,1501,3.143,1502,4.799,1503,3.143,1504,6.282,1505,4.799,1506,3.143,1507,4.799,1508,3.143,1509,4.799,1510,3.143,1511,3.143,1512,3.143,1513,4.799,1514,3.143,1515,4.799,1516,3.143,1517,4.799,1518,3.143,1519,4.799,1520,3.143,1521,3.143,1522,4.799,1523,3.143,1524,4.799,1525,3.143,1526,5.319,1527,3.143,1528,4.68,1529,4.268,1530,3.143,1531,2.565,1532,3.143,1533,3.143,1534,3.143,1535,2.565,1536,3.143,1537,3.143,1538,3.143,1539,2.565,1540,5.547]],["title/interfaces/ExplorerColumnRenderer.html",[327,0.653,1385,2.715]],["body/interfaces/ExplorerColumnRenderer.html",[3,0.078,4,0.068,5,0.02,8,0.075,9,2.361,10,0.125,15,0.205,16,0.587,38,1.58,41,3.1,43,1.356,44,0.007,45,0.524,46,0.214,47,0.523,50,1.635,51,1.149,52,1.883,58,1.724,63,0.565,66,1.628,71,1.889,74,0.237,86,0.2,88,2.685,115,0.004,116,0.003,121,2.141,144,2.108,172,1.737,174,1.824,180,2.286,203,1.266,240,0.752,264,1.482,285,1.798,295,0.78,296,0.958,314,1.384,319,2.159,327,1.226,329,0.976,347,1.131,348,1.315,352,1.312,355,1.686,356,1.227,451,0.713,452,0.904,456,0.871,487,2.035,502,1.68,511,0.725,522,1.091,607,3.165,609,2.012,633,1.737,696,1.737,702,2.493,705,2.658,715,3.125,810,1.174,814,1.628,836,3.896,838,2.572,901,3.029,910,1.737,920,2.752,924,1.628,949,1.68,1005,3.125,1007,3.293,1009,1.865,1030,1.535,1040,1.68,1064,2.572,1065,1.865,1220,1.58,1243,1.865,1244,1.38,1336,1.798,1337,1.865,1338,1.68,1339,1.865,1340,1.68,1341,1.94,1342,1.865,1343,1.94,1344,1.865,1345,1.865,1346,1.737,1348,4.529,1349,1.737,1350,2.909,1351,1.149,1352,1.865,1353,4.391,1354,1.798,1355,1.628,1356,1.865,1357,1.737,1358,2.856,1359,1.865,1360,4.433,1361,1.865,1362,1.737,1363,3.746,1364,1.628,1365,2.658,1366,1.865,1367,1.865,1368,1.865,1369,1.865,1370,1.798,1371,1.798,1372,1.865,1373,1.865,1374,1.865,1375,1.865,1376,1.865,1377,1.865,1378,1.865,1379,1.865,1380,1.865,1381,1.865,1382,1.865,1383,1.865,1384,1.865,1385,3.746,1386,1.865,1387,2.658,1388,2.752,1389,2.97,1390,3.746,1391,1.68,1392,2.856,1393,1.38,1394,1.94,1395,2.856,1396,5.047,1397,2.493,1398,1.94,1399,1.94,1400,1.94,1401,1.94,1402,1.865,1403,1.865,1404,1.798,1405,1.94,1406,1.94,1407,1.798,1408,1.865,1409,1.628,1410,1.798,1411,1.94,1412,1.865,1413,1.94,1414,1.94,1415,2.752,1416,1.865,1417,5.162,1418,4.599,1419,4.358,1420,1.94,1421,1.865,1422,2.856,1423,1.94,1424,1.94,1425,3.609,1426,1.865,1427,1.94,1428,1.68,1429,2.97,1430,1.94,1431,1.94,1432,1.94,1433,1.94,1434,1.94,1435,1.798,1436,1.865,1437,1.535,1438,1.94,1439,1.94,1440,1.94]],["title/entities/ExplorerColumnRendererEntity.html",[264,0.733,1504,3.834]],["body/entities/ExplorerColumnRendererEntity.html",[3,0.127,4,0.111,5,0.044,8,0.077,10,0.098,13,1.099,15,0.5,16,0.833,30,0.783,43,1.158,44,0.007,45,0.456,46,0.214,58,1.535,61,3.156,63,0.405,74,0.253,81,1.653,86,0.119,87,2.22,115,0.005,116,0.005,182,2.449,218,3.291,264,1.319,267,2.652,295,1.27,327,0.94,352,1.428,403,1.5,456,1.418,459,2.442,460,2.552,462,3.128,487,2.894,525,1.72,526,1.72,527,1.686,528,1.686,529,1.72,530,2.583,531,1.686,532,2.897,533,1.653,534,2.25,535,1.589,536,1.72,537,1.72,538,1.72,539,1.72,540,1.72,541,1.72,542,1.621,543,1.72,544,1.72,545,1.72,546,1.686,547,2.295,548,1.72,549,1.686,550,1.72,551,1.72,552,1.72,553,1.72,554,1.72,555,1.559,556,1.72,557,1.686,558,1.72,836,3.862,850,4.508,851,4.051,852,4.381,853,4.051,855,3.636,856,4.214,857,2.343,858,5.185,867,3.98,868,3.98,872,2.735,874,3.636,878,3.636,1353,2.572,1354,2.926,1385,3.904,1390,3.904,1393,2.247,1397,2.65,1466,6.243,1473,3.856,1479,4.132,1480,5.531,1482,3.296,1483,3.158,1484,3.856,1486,2.826,1504,5.514,1541,5.062,1542,6.754,1543,6.754,1544,5.062,1545,5.062,1546,5.062,1547,5.062,1548,5.062,1549,5.062]],["title/modules/ExplorerModule.html",[511,1.096,1550,3.578]],["body/modules/ExplorerModule.html",[3,0.135,4,0.118,5,0.046,8,0.051,10,0.104,13,1.165,18,1.862,23,1.322,24,2.539,30,0.65,43,0.92,44,0.007,45,0.322,46,0.126,47,0.903,50,1.497,74,0.27,76,1.186,81,1.753,86,0.126,93,2.07,103,1.422,115,0.005,116,0.005,182,1.622,183,1.622,267,1.685,403,1.591,451,1.609,511,2.1,513,2.325,517,3.568,518,4.571,519,3.495,522,1.793,524,4.693,525,1.824,526,1.824,527,1.788,528,1.788,529,1.824,530,2.659,531,1.788,532,2.939,533,1.753,534,2.339,535,1.685,536,1.824,537,1.824,538,1.824,539,1.824,540,1.824,541,1.824,542,1.719,543,1.824,544,1.824,545,1.824,546,1.788,547,2.386,548,1.824,549,1.788,550,1.824,551,1.824,552,1.824,553,1.824,554,1.824,555,1.653,556,1.824,557,1.788,558,1.824,567,3.281,568,3.349,577,2.509,588,2.444,589,2.728,590,3.103,591,3.856,592,2.444,709,2.811,891,3.495,1015,5.349,1220,4.217,1333,3.856,1404,4.798,1407,4.798,1408,4.211,1409,3.676,1410,4.059,1482,3.495,1487,5.349,1528,3.856,1535,4.382,1550,5.961,1551,5.369,1552,7.022,1553,7.022,1554,5.369,1555,7.825,1556,8.613,1557,5.369,1558,4.382,1559,5.369,1560,7.022,1561,4.774,1562,5.369,1563,5.369]],["title/classes/ExplorerService.html",[10,0.091,1407,2.715]],["body/classes/ExplorerService.html",[3,0.063,4,0.055,5,0.016,8,0.076,9,2.6,10,0.121,15,0.164,23,0.987,30,0.68,38,2.037,41,3.447,43,1.518,44,0.007,45,0.537,46,0.205,47,1.235,50,1.796,51,0.922,52,1.821,58,1.701,63,0.566,66,2.099,71,1.639,74,0.22,86,0.19,88,2.572,115,0.004,116,0.003,118,0.713,121,2.027,144,2.147,172,2.238,174,1.896,180,2.759,184,2.847,203,1.335,240,0.604,264,1.503,285,2.317,295,0.626,296,0.769,314,1.406,319,2.351,327,1.158,347,0.952,348,1.056,352,0.753,355,1.419,356,0.985,451,0.572,452,0.726,456,1.123,487,1.576,502,2.166,511,0.583,522,1.15,607,3.437,609,2.429,633,1.394,696,1.394,702,3.009,705,3.208,715,3.629,810,0.942,814,1.308,836,3.413,838,2.166,901,2.629,910,1.394,920,3.322,924,2.099,949,2.166,1005,3.399,1007,3.728,1009,2.404,1030,1.233,1040,2.166,1064,2.713,1065,1.498,1220,2.037,1243,2.404,1244,1.779,1336,1.444,1337,1.498,1338,1.349,1339,1.498,1340,1.349,1341,1.558,1342,1.498,1343,1.558,1344,1.498,1345,1.498,1346,1.394,1348,4.573,1349,1.394,1350,2.587,1351,0.922,1352,1.498,1353,4.23,1354,1.444,1355,1.308,1356,1.498,1357,1.394,1358,2.404,1359,1.498,1360,4.49,1361,1.498,1362,1.394,1363,3.322,1364,1.308,1365,2.238,1366,1.498,1367,1.498,1368,1.498,1369,1.498,1370,1.444,1371,1.444,1372,1.498,1373,1.498,1374,1.498,1375,1.498,1376,1.498,1377,1.498,1378,1.498,1379,1.498,1380,1.498,1381,1.498,1382,1.498,1383,1.498,1384,1.498,1385,2.902,1386,1.498,1387,2.238,1388,2.317,1389,1.558,1390,2.317,1391,1.349,1392,3.011,1393,1.108,1394,1.558,1395,3.011,1396,5.311,1397,2.099,1398,1.558,1399,1.558,1400,1.558,1401,1.558,1402,1.498,1403,1.498,1404,1.444,1405,1.558,1406,1.558,1407,2.317,1408,2.404,1409,2.099,1410,2.317,1411,2.501,1412,2.404,1413,2.501,1414,3.585,1415,3.322,1416,2.404,1417,5.489,1418,4.993,1419,4.846,1420,3.132,1421,2.404,1422,3.447,1423,3.132,1424,3.132,1425,4.191,1426,2.404,1427,2.501,1428,2.166,1429,3.585,1430,2.501,1431,2.501,1432,3.132,1433,3.132,1434,2.501,1435,2.317,1436,2.404,1437,1.979,1438,3.585,1439,2.501,1440,2.501,1564,4.008,1565,2.498,1566,2.498,1567,2.498,1568,2.498,1569,2.498,1570,2.498,1571,2.498,1572,2.498,1573,2.498,1574,2.498,1575,2.498,1576,2.498,1577,2.498]],["title/interfaces/ExplorerTab.html",[327,0.653,1388,2.715]],["body/interfaces/ExplorerTab.html",[3,0.078,4,0.068,5,0.02,8,0.067,9,2.361,10,0.125,15,0.204,16,0.587,38,1.579,41,3.099,43,1.355,44,0.007,45,0.524,46,0.21,47,0.523,50,1.634,51,1.148,52,1.883,58,1.724,63,0.565,66,1.627,71,1.888,74,0.237,86,0.2,88,2.685,115,0.004,116,0.003,121,2.14,144,2.107,172,1.735,174,1.824,180,2.284,203,1.366,240,0.752,264,1.485,285,1.797,295,0.779,296,0.957,314,1.416,319,2.158,327,1.226,329,0.976,347,1.13,348,1.314,352,0.894,355,2.473,356,1.226,451,0.712,452,0.904,456,0.87,487,1.815,502,1.679,511,0.725,522,1.09,607,3.165,609,2.011,633,1.735,696,1.735,702,2.491,705,2.657,715,3.124,810,1.173,814,1.627,836,3.291,838,3.773,901,3.027,910,1.735,920,2.751,924,1.627,949,1.679,1005,3.124,1007,3.291,1009,1.864,1030,1.534,1040,1.679,1064,2.571,1065,1.864,1220,1.579,1243,1.864,1244,1.379,1336,1.797,1337,1.864,1338,1.679,1339,1.864,1340,1.679,1341,1.939,1342,1.864,1343,1.939,1344,1.864,1345,1.864,1346,1.735,1348,4.566,1349,1.735,1350,2.843,1351,1.148,1352,1.864,1353,4.39,1354,1.797,1355,1.627,1356,1.864,1357,1.735,1358,2.854,1359,1.864,1360,4.686,1361,1.864,1362,1.735,1363,3.745,1364,1.627,1365,2.657,1366,1.864,1367,1.864,1368,1.864,1369,1.864,1370,1.797,1371,1.797,1372,1.864,1373,1.864,1374,1.864,1375,1.864,1376,1.864,1377,1.864,1378,1.864,1379,1.864,1380,1.864,1381,1.864,1382,1.864,1383,1.864,1384,1.864,1385,3.342,1386,1.864,1387,3.228,1388,3.342,1389,1.939,1390,2.751,1391,1.679,1392,2.854,1393,1.379,1394,1.939,1395,2.854,1396,5.046,1397,2.491,1398,1.939,1399,1.939,1400,1.939,1401,1.939,1402,1.864,1403,1.864,1404,1.797,1405,1.939,1406,1.939,1407,1.797,1408,1.864,1409,1.627,1410,1.797,1411,1.939,1412,1.864,1413,1.939,1414,1.939,1415,2.751,1416,1.864,1417,5.161,1418,4.598,1419,4.357,1420,1.939,1421,1.864,1422,2.854,1423,1.939,1424,1.939,1425,3.607,1426,1.864,1427,1.939,1428,1.679,1429,2.969,1430,1.939,1431,1.939,1432,1.939,1433,1.939,1434,1.939,1435,1.797,1436,1.864,1437,1.534,1438,1.939,1439,1.939,1440,1.939]],["title/entities/ExplorerTabEntity.html",[264,0.733,1526,3.834]],["body/entities/ExplorerTabEntity.html",[3,0.129,4,0.112,5,0.045,8,0.049,10,0.099,13,1.115,15,0.536,16,0.841,30,0.786,43,1.169,44,0.007,45,0.459,46,0.199,58,1.377,61,2.4,63,0.409,74,0.255,81,1.677,86,0.121,87,2.229,115,0.005,116,0.005,182,2.464,203,1.264,218,2.224,264,1.325,267,1.612,295,1.288,314,1.105,319,2.271,327,0.949,355,2.711,403,1.522,456,1.438,459,2.465,460,2.564,462,2.63,465,3.204,487,1.612,493,2.867,525,1.745,526,1.745,527,1.71,528,1.71,529,1.745,530,2.602,531,1.71,532,2.907,533,1.677,534,2.271,535,1.612,536,1.745,537,1.745,538,1.745,539,1.745,540,1.745,541,1.745,542,1.644,543,1.745,544,1.745,545,1.745,546,1.71,547,2.318,548,1.745,549,1.71,550,1.745,551,1.745,552,1.745,553,1.745,554,1.745,555,1.581,556,1.745,557,1.71,558,1.745,810,1.938,838,4.136,842,2.465,846,2.609,850,4.144,851,3.08,852,3.684,853,3.08,855,3.689,856,4.254,857,2.365,858,5.222,862,3.942,863,5.195,867,3.57,868,3.57,869,3.465,872,2.774,874,3.689,878,3.689,1348,3.675,1353,2.609,1388,3.942,1393,2.279,1466,6.268,1471,6.064,1482,3.343,1483,3.204,1484,3.912,1486,2.867,1490,4.898,1494,3.343,1526,5.566,1528,5.859,1529,6.064,1535,4.192,1578,5.136,1579,6.819,1580,5.136,1581,5.136,1582,5.136,1583,5.136,1584,5.136,1585,5.136]],["title/interfaces/ExplorerTarget.html",[327,0.653,1360,2.715]],["body/interfaces/ExplorerTarget.html",[3,0.074,4,0.065,5,0.019,8,0.074,9,2.329,10,0.122,15,0.194,16,0.565,38,1.502,41,3.03,43,1.334,44,0.007,45,0.519,46,0.218,47,0.943,50,1.605,51,1.092,52,1.925,58,1.648,63,0.564,66,1.548,71,1.83,74,0.233,86,0.198,88,2.66,115,0.004,116,0.003,121,2.116,144,2.093,172,1.651,174,1.797,180,2.198,203,1.244,240,0.715,264,1.478,285,1.709,295,0.742,296,0.911,314,1.401,319,2.102,327,1.215,329,0.928,347,1.499,348,1.25,352,0.86,355,2.417,356,2.489,451,0.677,452,0.86,456,0.828,487,1.759,502,1.598,511,0.69,522,1.049,607,3.109,609,1.936,633,1.651,696,1.651,702,2.398,705,2.557,715,3.028,810,1.116,814,1.548,836,3.206,838,2.474,901,3.943,910,1.651,920,2.647,924,1.548,949,1.598,1005,3.028,1007,3.206,1009,1.774,1030,1.46,1040,1.598,1064,2.474,1065,1.774,1220,1.502,1243,1.774,1244,1.313,1336,1.709,1337,1.774,1338,1.598,1339,1.774,1340,1.598,1341,1.845,1342,1.774,1343,1.845,1344,1.774,1345,1.774,1346,1.651,1348,4.546,1349,1.651,1350,2.879,1351,1.092,1352,1.774,1353,4.343,1354,1.709,1355,1.548,1356,1.774,1357,1.651,1358,2.747,1359,1.774,1360,4.498,1361,3.785,1362,3.524,1363,4.174,1364,3.304,1365,3.524,1366,3.785,1367,3.785,1368,3.785,1369,3.785,1370,3.648,1371,3.648,1372,1.774,1373,1.774,1374,1.774,1375,1.774,1376,1.774,1377,1.774,1378,1.774,1379,1.774,1380,1.774,1381,1.774,1382,1.774,1383,1.774,1384,1.774,1385,3.24,1386,1.774,1387,2.557,1388,2.647,1389,1.845,1390,2.647,1391,1.598,1392,2.747,1393,1.313,1394,1.845,1395,2.747,1396,4.984,1397,2.398,1398,1.845,1399,1.845,1400,1.845,1401,1.845,1402,1.774,1403,1.774,1404,1.709,1405,1.845,1406,1.845,1407,1.709,1408,1.774,1409,1.548,1410,1.709,1411,1.845,1412,1.774,1413,1.845,1414,1.845,1415,2.647,1416,1.774,1417,5.092,1418,4.517,1419,4.259,1420,1.845,1421,1.774,1422,2.747,1423,1.845,1424,1.845,1425,3.497,1426,1.774,1427,1.845,1428,1.598,1429,2.857,1430,1.845,1431,1.845,1432,1.845,1433,1.845,1434,1.845,1435,1.709,1436,1.774,1437,1.46,1438,1.845,1439,1.845,1440,1.845]],["title/entities/ExplorerTargetEntity.html",[264,0.733,1528,3.374]],["body/entities/ExplorerTargetEntity.html",[3,0.098,4,0.085,5,0.037,8,0.076,10,0.075,13,0.845,15,0.556,16,0.694,30,0.843,44,0.007,45,0.542,46,0.214,52,1.738,58,1.137,63,0.48,74,0.247,81,1.272,86,0.091,87,2.429,115,0.004,116,0.004,182,2.553,264,1.199,267,1.223,295,0.977,319,1.875,332,1.767,356,2.607,403,1.154,456,1.091,459,2.618,460,2.749,462,3.451,487,1.223,492,2.438,525,1.324,526,1.324,527,1.297,528,1.297,529,1.324,530,2.247,531,1.297,532,2.695,533,1.272,534,1.875,535,1.223,536,1.324,537,1.324,538,1.324,539,1.324,540,1.324,541,1.324,542,1.247,543,1.324,544,1.324,545,1.324,546,1.297,547,1.913,548,1.324,549,1.297,550,1.324,551,1.324,552,1.324,553,1.324,554,1.324,555,1.199,556,1.324,557,1.297,558,1.324,810,2.124,827,2.271,842,2.703,843,3.254,845,3.061,846,1.979,847,3.512,850,4.194,851,3.376,852,4.325,853,3.376,867,4.191,868,4.191,869,2.86,872,2.105,901,4.322,902,5.036,910,2.175,945,2.324,1220,2.86,1348,3.173,1352,2.336,1353,2.86,1360,3.254,1361,3.965,1362,3.691,1364,3.461,1365,3.691,1366,3.965,1367,3.965,1368,3.965,1369,3.965,1370,3.821,1371,3.821,1393,1.729,1412,3.376,1465,4.595,1466,6.583,1469,4.289,1470,5.911,1472,4.595,1473,2.968,1482,2.536,1483,2.43,1486,2.175,1487,5.516,1490,4.044,1496,5.516,1528,4.044,1540,4.939,1561,3.464,1586,3.896,1587,5.006,1588,6.61,1589,3.896,1590,3.896,1591,3.896,1592,3.896,1593,3.18,1594,4.595,1595,5.63,1596,3.896,1597,5.63,1598,3.896,1599,5.63,1600,3.896,1601,5.63,1602,3.896,1603,5.63,1604,3.896,1605,3.896,1606,3.896,1607,3.896,1608,5.63,1609,3.896,1610,3.896,1611,4.595,1612,3.18,1613,3.896,1614,3.896]],["title/interfaces/File.html",[5,0.031,327,0.653]],["body/interfaces/File.html",[3,0.1,4,0.088,5,0.059,8,0.038,10,0.13,15,0.263,16,0.708,44,0.007,45,0.44,46,0.211,52,1.38,63,0.599,74,0.201,86,0.204,115,0.004,116,0.004,121,2.174,203,1.471,240,1.878,279,2.235,296,1.233,314,1.565,327,1.295,328,3.443,329,1.257,330,2.498,331,3.319,332,2.795,333,2.498,334,2.498,335,3.443,336,3.443,337,2.498,338,3.443,339,3.319,340,2.498,341,2.498,342,2.498,343,2.498,344,2.401,345,2.498,346,2.498,347,1.976,348,1.692,349,3.102,350,3.006,351,2.314,352,1.377,353,3.255,354,3.726,355,2.596,356,2.892,357,4.398,358,3.175,359,2.442,360,2.498,361,1.692,362,3.443,363,3.443,364,3.443,365,3.443,366,3.006,367,3.443,368,3.582,369,3.738,370,3.319,371,3.443,372,2.498,373,2.37,374,2.37,375,2.498,376,2.498,377,2.498,378,2.498,379,2.498,380,2.498,381,2.163,382,2.498,383,2.498,384,2.498,385,2.498,386,2.498,387,2.498,388,2.498,389,2.498,390,2.498,391,2.498,392,2.498,393,2.498,394,2.498,395,2.498,396,2.498,397,2.498,398,2.498,399,2.606,400,2.606,401,2.606,402,2.606,403,1.186,404,2.606,405,2.606,406,2.606,407,2.606,408,2.606,409,2.606,410,2.606,411,2.606,412,2.606,413,2.606,414,2.606,415,2.606,416,2.606,417,2.606,418,2.606,419,2.606,420,2.606,421,2.606,422,2.606,423,3.582,424,2.606,425,2.606,426,2.606,427,2.606,428,2.606,429,2.606,430,2.606,431,2.606,432,2.606,433,2.606,434,2.606,435,2.606,436,2.606,437,2.606,438,2.606,439,2.606,440,2.606,441,2.606,442,2.606,443,2.498,444,2.498,445,2.498,446,2.498,447,2.498,448,2.498,449,2.498,450,2.498,451,0.917,452,1.164,453,2.096,454,2.401]],["title/entities/FileEntity.html",[264,0.733,1615,3.204]],["body/entities/FileEntity.html",[3,0.124,4,0.108,5,0.053,8,0.047,10,0.128,13,1.072,15,0.528,16,0.82,30,0.85,44,0.007,45,0.503,46,0.22,52,1.366,63,0.518,74,0.241,86,0.116,87,2.41,115,0.005,116,0.005,174,1.495,182,2.007,203,1.24,240,1.607,264,1.172,295,1.239,314,1.302,319,2.875,332,2.357,352,1.41,353,3.333,354,3.815,355,2.659,356,2.961,357,4.504,359,2.501,456,1.384,459,2.403,460,2.772,462,3.503,477,2.51,487,2.086,488,3.28,489,2.758,491,2.51,492,3.251,493,2.758,810,1.864,842,2.372,843,2.856,845,3.727,846,3.376,847,5.01,852,4.057,865,5.062,869,3.815,904,4.326,945,2.743,968,2.563,1540,3.37,1612,4.033,1615,4.532,1616,4.941,1617,6.645,1618,4.941,1619,4.941,1620,4.941,1621,5.228,1622,4.033,1623,5.424,1624,4.033,1625,4.941,1626,4.941,1627,4.941,1628,4.941,1629,4.393,1630,4.941,1631,4.033,1632,4.941,1633,3.37,1634,4.532,1635,4.532,1636,4.941,1637,4.532,1638,5.424,1639,5.424,1640,5.424,1641,3.37,1642,4.941,1643,4.033]],["title/classes/FileManager.html",[10,0.091,349,2.538]],["body/classes/FileManager.html",[3,0.128,4,0.112,5,0.061,8,0.049,9,2.793,10,0.163,15,0.335,23,1.672,30,0.824,43,1.524,44,0.007,45,0.554,46,0.209,47,1.496,50,1.895,52,1.569,63,0.566,74,0.229,86,0.159,115,0.005,116,0.005,118,1.456,121,1.914,144,2.181,184,3.078,203,1.344,314,1.543,332,1.602,349,3.668,350,2.671,352,1.528,489,2.849,522,1.748,701,4.42,1037,3.321,1273,3.704,1615,3.48,1621,3.321,1641,3.48,1644,4.537,1645,3.351,1646,6.229,1647,5.542,1648,6.038,1649,5.542,1650,5.542,1651,6.038,1652,4.537,1653,3.767,1654,6.229,1655,3.877,1656,5.102,1657,3.45,1658,5.102,1659,5.542,1660,5.102,1661,3.45,1662,5.102,1663,3.45,1664,5.102,1665,5.542,1666,5.102,1667,3.45,1668,5.102,1669,3.887,1670,4.165,1671,4.165,1672,4.165]],["title/classes/FileMd.html",[10,0.091,350,2.459]],["body/classes/FileMd.html",[3,0.153,4,0.134,5,0.061,8,0.058,9,2.773,10,0.173,15,0.402,23,1.878,30,0.566,43,1.047,44,0.007,45,0.457,46,0.143,47,1.028,50,1.302,52,1.256,63,0.556,74,0.249,86,0.179,115,0.005,116,0.005,118,1.743,121,2.085,144,2.165,184,2.464,314,1.453,332,2.394,349,3.3,350,3.992,352,1.147,489,3.41,522,1.904,1037,5.412,1273,3.964,1615,4.166,1621,3.976,1641,4.166,1644,5.431,1645,3.015,1646,4.985,1653,3.015,1654,4.985,1655,3.103,1657,3.103,1659,4.985,1661,3.103,1663,3.103,1665,4.985,1667,3.103,1669,4.653,1670,4.985,1671,6.786,1672,6.224,1673,5.431,1674,6.108]],["title/interfaces/FileMetadata.html",[327,0.653,358,2.034]],["body/interfaces/FileMetadata.html",[3,0.1,4,0.088,5,0.058,8,0.038,10,0.129,15,0.263,16,0.708,44,0.007,45,0.24,46,0.211,52,0.822,63,0.599,74,0.201,86,0.204,115,0.004,116,0.004,121,2.173,203,1.47,240,1.622,279,4.092,296,1.231,314,1.559,327,1.294,328,4.396,329,1.255,330,2.495,331,4.486,332,2.72,333,2.495,334,2.495,335,3.441,336,3.441,337,2.495,338,3.441,339,3.316,340,2.495,341,2.495,342,2.495,343,2.495,344,2.399,345,2.495,346,2.495,347,1.593,348,1.69,349,3.1,350,3.004,351,2.312,352,0.751,353,1.775,354,2.032,355,1.416,356,1.577,357,2.399,358,2.905,359,1.332,360,4.573,361,3.098,362,4.654,363,4.396,364,4.654,365,4.396,366,4.063,367,4.396,368,4.842,369,4.772,370,4.486,371,4.396,372,2.495,373,2.368,374,2.368,375,2.495,376,2.495,377,2.495,378,2.495,379,2.495,380,2.495,381,2.161,382,2.495,383,2.495,384,2.495,385,2.495,386,2.495,387,2.495,388,2.495,389,2.495,390,2.495,391,2.495,392,2.495,393,2.495,394,2.495,395,2.495,396,2.495,397,2.495,398,2.495,399,2.604,400,2.604,401,2.604,402,2.604,403,1.185,404,2.604,405,2.604,406,2.604,407,2.604,408,2.604,409,2.604,410,2.604,411,2.604,412,2.604,413,2.604,414,2.604,415,2.604,416,2.604,417,2.604,418,2.604,419,2.604,420,2.604,421,2.604,422,2.604,423,3.579,424,2.604,425,2.604,426,2.604,427,2.604,428,2.604,429,2.604,430,2.604,431,2.604,432,2.604,433,2.604,434,2.604,435,2.604,436,2.604,437,2.604,438,2.604,439,2.604,440,2.604,441,2.604,442,2.604,443,2.495,444,2.495,445,2.495,446,2.495,447,2.495,448,2.495,449,2.495,450,2.495,451,0.916,452,1.163,453,2.094,454,2.399]],["title/entities/FileMetadataEntity.html",[264,0.733,1621,3.058]],["body/entities/FileMetadataEntity.html",[3,0.113,4,0.098,5,0.058,8,0.043,10,0.087,13,0.974,15,0.295,16,0.767,30,0.835,44,0.007,46,0.212,63,0.503,74,0.263,86,0.105,87,2.437,115,0.004,116,0.004,203,1.18,264,1.115,279,3.988,295,1.125,314,1.009,319,3.058,331,4.459,332,1.953,358,2.694,360,4.456,361,3.019,362,4.626,364,4.626,366,4.038,368,4.812,370,4.459,455,5.876,456,1.256,458,3.06,459,2.249,460,2.721,462,3.233,463,3.662,477,2.279,483,3.222,485,3.418,487,1.408,488,3.071,489,2.505,491,2.279,492,3.093,852,5.122,865,5.441,904,5.977,1558,5.079,1621,4.05,1622,6.843,1623,7.494,1624,6.843,1638,7.017,1639,7.017,1641,5.718,1675,9.102,1676,3.989,1677,6.859,1678,3.989,1679,5.876,1680,4.486,1681,4.486,1682,5.876,1683,4.486,1684,5.876,1685,4.486,1686,5.876,1687,4.486,1688,4.486]],["title/injectables/FileMetadataService.html",[495,1.475,1689,3.834]],["body/injectables/FileMetadataService.html",[3,0.1,4,0.055,5,0.059,8,0.064,10,0.048,15,0.164,16,0.708,23,0.985,24,2.735,25,2.586,30,0.582,43,1.15,44,0.007,45,0.377,46,0.158,47,1.186,50,1.503,51,0.92,58,1.424,63,0.423,66,3.838,74,0.255,76,0.55,86,0.059,87,1.022,88,2.284,89,2.692,93,2.424,98,2.623,103,2.004,115,0.003,116,0.003,124,2.233,144,0.916,166,4.576,167,4.186,174,1.51,183,1.514,184,1.005,212,1.494,218,1.732,219,1.554,220,1.789,240,0.602,247,1.44,300,3.265,312,2.604,319,2.585,331,3.633,332,2.697,350,3.004,351,1.44,353,3.357,366,3.004,370,3.633,398,1.554,455,3.818,495,1.256,497,1.134,499,1.869,502,2.161,517,1.266,522,0.916,607,1.651,609,2.836,646,1.196,691,1.699,693,3.047,820,2.399,862,2.312,933,1.494,954,3.265,969,3.047,1037,5.053,1268,1.898,1269,2.215,1273,4.029,1281,2.604,1621,5.93,1641,4.809,1670,2.033,1671,3.265,1672,6.594,1673,3.557,1677,3.557,1679,3.047,1682,3.047,1684,3.047,1686,3.047,1689,3.265,1690,6.284,1691,2.491,1692,4,1693,4,1694,4,1695,4,1696,4,1697,2.491,1698,4,1699,2.491,1700,7.33,1701,4,1702,2.491,1703,4,1704,2.491,1705,4,1706,2.491,1707,4,1708,3.265,1709,3.557,1710,5.984,1711,4,1712,4,1713,2.491,1714,2.215,1715,3.557,1716,4.457,1717,2.491,1718,2.033,1719,2.491,1720,2.491,1721,2.491,1722,2.491,1723,2.491,1724,2.491,1725,2.491,1726,2.491,1727,2.491,1728,4,1729,2.491,1730,2.491,1731,2.491,1732,2.491,1733,2.491,1734,2.491,1735,2.491,1736,2.491,1737,2.491,1738,2.491,1739,2.491,1740,2.491,1741,2.491,1742,2.491,1743,4,1744,2.491,1745,2.491,1746,2.491,1747,2.033,1748,2.491,1749,2.491,1750,2.491,1751,4,1752,2.491,1753,2.491,1754,4,1755,4,1756,4,1757,4,1758,4,1759,2.491,1760,4,1761,2.491,1762,4,1763,2.491,1764,4,1765,2.491,1766,4,1767,2.491,1768,4,1769,2.491,1770,2.491,1771,2.491,1772,2.491,1773,2.491,1774,2.491,1775,2.491,1776,2.491,1777,2.491,1778,2.491,1779,2.491,1780,2.491,1781,2.491,1782,2.491,1783,2.491,1784,2.491,1785,2.491,1786,2.491,1787,2.491,1788,2.491,1789,2.491,1790,2.491,1791,2.491,1792,2.491,1793,2.491,1794,4,1795,2.491,1796,2.491,1797,2.491,1798,2.491,1799,2.491,1800,2.491,1801,2.491,1802,2.491,1803,2.491,1804,2.491,1805,2.491,1806,2.491,1807,2.491,1808,2.491,1809,2.491,1810,2.491,1811,2.491,1812,2.491,1813,2.491,1814,2.491,1815,2.491,1816,2.491,1817,2.491,1818,2.491,1819,4,1820,2.491,1821,2.491,1822,2.491,1823,2.491,1824,2.491,1825,2.491,1826,2.033,1827,2.491,1828,4,1829,4,1830,4,1831,4,1832,4,1833,2.491,1834,2.491,1835,2.491,1836,2.491,1837,2.491,1838,2.491,1839,4,1840,2.491,1841,2.491,1842,2.491,1843,2.491,1844,2.491,1845,2.491,1846,2.491,1847,2.491,1848,2.491,1849,2.491,1850,2.491,1851,2.491,1852,2.491,1853,2.491,1854,2.491,1855,2.491,1856,2.491,1857,2.491,1858,2.491,1859,2.491,1860,2.491,1861,2.491,1862,2.491,1863,4,1864,2.491,1865,2.491,1866,4,1867,2.491,1868,2.491,1869,2.491,1870,2.491,1871,2.491,1872,2.491,1873,4,1874,2.491,1875,4,1876,4,1877,5.738,1878,2.491,1879,2.491,1880,2.491,1881,2.491,1882,2.491,1883,2.491,1884,2.491,1885,4,1886,2.491,1887,2.491,1888,2.491,1889,2.491,1890,4,1891,2.491,1892,2.491,1893,2.491,1894,2.491,1895,2.491,1896,2.491,1897,2.491,1898,2.491,1899,2.491,1900,2.491,1901,2.491,1902,2.491,1903,2.491,1904,2.491,1905,2.491,1906,2.491,1907,2.491,1908,2.491,1909,2.491,1910,2.491,1911,2.491,1912,2.491,1913,2.491,1914,2.491,1915,2.491,1916,2.491,1917,2.491,1918,2.491,1919,2.491,1920,5.012,1921,5.012,1922,2.491,1923,2.491,1924,2.491,1925,2.491,1926,2.491,1927,2.491,1928,2.491,1929,2.491,1930,2.491,1931,2.491,1932,2.491,1933,2.491,1934,2.491,1935,2.491,1936,2.491,1937,2.491,1938,2.491,1939,2.491,1940,2.491,1941,2.491,1942,2.491,1943,2.491,1944,2.491,1945,2.491,1946,2.491,1947,2.491,1948,2.491,1949,2.491,1950,2.491,1951,2.491,1952,2.491,1953,2.491,1954,2.491,1955,2.491,1956,2.491,1957,2.491,1958,2.491,1959,2.491,1960,2.491,1961,2.491,1962,2.491,1963,2.491,1964,2.491,1965,2.491,1966,2.491,1967,2.491,1968,2.491,1969,2.491,1970,2.491,1971,2.491,1972,2.491,1973,2.491,1974,2.491,1975,2.491,1976,2.491,1977,2.491,1978,2.491,1979,2.491,1980,2.491,1981,2.491,1982,2.491,1983,2.491,1984,2.491,1985,2.491,1986,2.491,1987,2.491,1988,2.491,1989,2.491,1990,2.491,1991,2.491,1992,2.491,1993,2.491,1994,2.491,1995,2.491]],["title/modules/FileModule.html",[453,2.459,511,1.096]],["body/modules/FileModule.html",[3,0.139,4,0.121,5,0.052,8,0.053,10,0.107,23,1.361,30,0.512,43,0.948,44,0.007,45,0.332,46,0.13,47,0.93,50,1.178,74,0.278,76,1.222,81,1.805,86,0.13,103,1.465,115,0.005,116,0.005,124,3.996,182,1.67,183,1.67,267,1.735,349,4.697,350,4.552,351,3.196,403,1.638,451,1.639,453,4.155,454,5.034,489,3.087,511,2.028,513,2.394,517,3.636,518,4.659,519,3.599,524,4.76,525,1.879,526,1.879,527,1.841,528,1.841,529,1.879,530,2.697,531,1.841,532,2.959,533,1.805,534,2.384,535,1.735,536,1.879,537,1.879,538,1.879,539,1.879,540,1.879,541,1.879,542,1.77,543,1.879,544,1.879,545,1.879,546,1.841,547,2.432,548,1.879,549,1.841,550,1.879,551,1.879,552,1.879,553,1.879,554,1.879,555,1.702,556,1.879,557,1.841,558,1.879,565,4.137,566,3.77,567,3.344,568,3.449,577,2.583,588,2.517,589,3.636,590,4.137,592,2.517,709,2.894,891,3.599,968,2.76,1615,3.77,1669,4.211,1689,6.478,1996,5.528,1997,5.528,1998,6.478,1999,5.528,2000,5.528,2001,5.528,2002,5.528,2003,5.528]],["title/injectables/FileService.html",[495,1.475,1998,3.834]],["body/injectables/FileService.html",[3,0.051,4,0.044,5,0.063,8,0.069,10,0.039,15,0.133,17,1.212,18,1.755,19,3.274,21,2.599,23,0.83,24,3.27,25,2.964,30,0.718,38,1.712,43,1.24,44,0.007,45,0.511,46,0.17,47,1.218,50,1.852,51,1.868,52,1.687,53,4.212,58,1.022,59,5.037,63,0.498,66,1.764,74,0.24,76,0.446,86,0.047,87,2.043,88,2.449,89,2.636,93,3.436,97,3.157,98,2.235,103,2.013,115,0.002,116,0.002,124,1.882,125,1.948,137,1.193,144,2.065,147,3.643,152,5.144,180,2.916,182,1.018,183,1.018,184,1.749,203,1.515,218,2.191,264,1.365,267,1.058,293,2.751,295,0.507,314,1.297,317,2.299,332,1.765,349,3.909,350,2.649,351,1.168,352,1.503,353,3.599,354,4.12,356,0.797,357,1.212,456,0.944,489,1.128,495,1.058,497,0.92,499,1.575,501,4.13,502,1.821,504,1.128,506,0.854,509,1.058,510,1.212,522,0.772,535,1.058,571,1.378,573,1.378,607,3.423,609,1.424,623,2.567,641,2.299,681,3.854,682,4.628,691,4.395,693,4.909,696,3.77,701,3.294,702,2.27,705,1.128,706,1.797,708,1.451,709,1.058,827,2.041,945,2.787,968,2.931,989,2.751,992,5.993,1007,2.571,1037,2.194,1040,1.821,1053,2.567,1063,1.315,1117,2.567,1124,3.855,1178,5.144,1204,2.567,1220,1.712,1268,1.539,1273,2.56,1281,2.194,1291,5.512,1421,3.035,1422,2.021,1615,5.808,1646,3.539,1647,2.751,1648,2.997,1649,2.751,1650,2.751,1651,2.997,1652,1.797,1653,3.462,1654,6.835,1655,3.431,1657,1.712,1659,2.751,1661,1.712,1663,1.712,1665,2.751,1667,1.712,1669,1.539,1708,2.751,1718,1.649,1998,2.751,2004,2.021,2005,3.37,2006,6.075,2007,5.06,2008,4.335,2009,3.37,2010,5.06,2011,5.06,2012,4.335,2013,4.335,2014,2.021,2015,2.021,2016,6.752,2017,4.499,2018,5.06,2019,2.021,2020,5.623,2021,2.021,2022,6.075,2023,3.37,2024,2.021,2025,2.021,2026,3.37,2027,5.06,2028,2.997,2029,4.335,2030,2.021,2031,6.075,2032,2.021,2033,2.021,2034,2.021,2035,2.021,2036,2.997,2037,2.021,2038,3.451,2039,4.499,2040,2.021,2041,2.021,2042,3.37,2043,3.855,2044,2.021,2045,2.021,2046,2.021,2047,2.021,2048,2.021,2049,2.021,2050,2.021,2051,2.021,2052,2.021,2053,3.37,2054,3.37,2055,2.021,2056,1.649,2057,4.335,2058,5.06,2059,4.335,2060,4.335,2061,3.37,2062,3.37,2063,3.37,2064,3.37,2065,2.194,2066,2.021,2067,2.021,2068,2.021,2069,3.37,2070,2.021,2071,2.021,2072,2.021,2073,2.021,2074,2.021,2075,2.021,2076,2.021,2077,2.021,2078,2.021,2079,2.021,2080,2.021,2081,2.021,2082,2.021,2083,2.021,2084,2.021,2085,2.021,2086,2.021,2087,2.021,2088,2.021,2089,2.021,2090,4.335,2091,3.37,2092,2.021,2093,2.021,2094,2.021,2095,2.021,2096,2.021,2097,2.021,2098,2.021,2099,2.021,2100,2.021,2101,2.021,2102,2.021,2103,2.021,2104,2.021,2105,2.021,2106,2.021,2107,2.021,2108,2.021,2109,2.021,2110,2.021,2111,2.021,2112,2.021,2113,2.021,2114,2.021,2115,2.021,2116,2.021,2117,2.021,2118,2.021,2119,2.021,2120,2.021,2121,2.021,2122,2.021,2123,2.021,2124,2.021,2125,2.021,2126,2.021,2127,2.021,2128,2.021,2129,2.021,2130,2.021,2131,2.021,2132,2.021,2133,2.021,2134,2.021,2135,2.021,2136,2.021,2137,2.021,2138,2.021,2139,2.021,2140,2.021,2141,2.021,2142,2.021,2143,2.021,2144,2.021,2145,2.021,2146,2.997,2147,2.021]],["title/classes/ForbiddenMsException.html",[10,0.091,2148,4.177]],["body/classes/ForbiddenMsException.html",[3,0.171,4,0.149,5,0.045,8,0.065,10,0.132,30,0.632,43,1.169,44,0.007,45,0.409,46,0.16,47,1.148,63,0.524,74,0.245,76,1.508,86,0.16,115,0.006,116,0.006,118,1.947,137,2.416,181,3.714,184,2.752,499,3.813,663,4.653,664,5.09,665,5.09,666,4.716,668,5.565,669,5.312,670,5.162,671,5.565,672,4.653,673,4.442,674,4.653,2148,7.255,2149,8.159,2150,8.729,2151,6.823]],["title/classes/GoogleCaptchaService.html",[10,0.091,2152,4.177]],["body/classes/GoogleCaptchaService.html",[3,0.121,4,0.105,5,0.032,8,0.062,10,0.16,15,0.317,18,2.571,19,4.452,21,3.534,23,1.609,24,3.097,25,2.373,30,0.77,33,3.777,35,3.033,43,1.12,44,0.007,45,0.392,46,0.195,47,1.099,50,1.694,52,1.343,53,4.076,58,1.319,65,4.076,68,4.457,73,4.254,74,0.263,76,1.065,86,0.113,88,1.455,89,2.882,93,3.204,98,2.266,103,1.964,104,4.285,115,0.005,116,0.005,118,1.375,137,2.313,144,2.093,203,1.313,218,2.086,354,3.32,499,3.715,504,2.69,506,2.037,509,2.523,510,2.89,522,1.497,571,3.287,573,3.287,604,4.693,609,2.762,645,4.076,646,3.137,691,4.457,789,4.977,799,5.976,800,3.933,802,5.968,818,6.055,819,4.693,821,4.978,822,4.457,825,5.325,827,2.636,828,5.334,1007,3.32,1063,3.137,1222,6.593,1330,3.461,2152,7.068,2153,6.534,2154,4.285,2155,5.81,2156,7.792,2157,7.618,2158,5.81,2159,5.334,2160,6.534,2161,7.949,2162,4.819,2163,4.819,2164,6.489,2165,4.819,2166,6.534,2167,6.534,2168,5.81,2169,4.285,2170,4.819,2171,4.285,2172,4.285,2173,5.81,2174,4.285,2175,4.285,2176,4.819,2177,4.819,2178,4.819,2179,4.819,2180,4.819,2181,4.819,2182,4.819]],["title/interfaces/GpsFileMetadata.html",[327,0.653,365,2.817]],["body/interfaces/GpsFileMetadata.html",[3,0.105,4,0.091,5,0.059,8,0.04,10,0.133,15,0.275,16,0.73,44,0.007,45,0.25,46,0.192,52,0.858,63,0.599,74,0.206,86,0.206,115,0.004,116,0.004,121,2.195,203,1.483,240,1.661,279,2.331,296,1.285,314,1.578,327,1.302,328,3.548,329,1.31,330,2.604,331,3.419,332,2.748,333,2.604,334,2.604,335,3.548,336,3.548,337,2.604,338,3.548,339,3.419,340,2.604,341,2.604,342,2.604,343,2.604,344,2.504,345,2.604,346,2.604,347,1.632,348,1.764,349,3.196,350,3.097,351,2.413,352,0.784,353,1.853,354,2.121,355,1.478,356,1.646,357,2.504,358,2.561,359,1.39,360,2.604,361,1.764,362,3.548,363,3.548,364,4.121,365,4.121,366,3.097,367,3.548,368,3.69,369,3.851,370,3.419,371,3.548,372,2.604,373,2.442,374,2.442,375,2.604,376,2.604,377,2.604,378,2.604,379,2.604,380,2.604,381,2.255,382,2.604,383,2.604,384,2.604,385,2.604,386,2.604,387,2.604,388,2.604,389,2.604,390,2.604,391,2.604,392,2.604,393,2.604,394,2.604,395,2.604,396,2.604,397,2.604,398,2.604,399,2.718,400,2.718,401,2.718,402,2.718,403,1.237,404,2.718,405,2.718,406,2.718,407,2.718,408,2.718,409,2.718,410,2.718,411,2.718,412,2.718,413,2.718,414,2.718,415,2.718,416,2.718,417,2.718,418,2.718,419,2.718,420,2.718,421,2.718,422,2.718,423,3.69,424,2.718,425,2.718,426,2.718,427,2.718,428,2.718,429,2.718,430,2.718,431,2.718,432,2.718,433,2.718,434,2.718,435,2.718,436,2.718,437,2.718,438,2.718,439,2.718,440,2.718,441,2.718,442,2.718,443,4.663,444,4.663,445,4.663,446,2.604,447,2.604,448,2.604,449,2.604,450,2.604,451,0.956,452,1.214,453,2.186,454,2.504]],["title/entities/GpsFileMetadataEntity.html",[264,0.733,1679,3.578]],["body/entities/GpsFileMetadataEntity.html",[3,0.146,4,0.127,5,0.061,8,0.055,10,0.112,13,1.259,15,0.58,16,0.91,30,0.792,44,0.007,46,0.201,61,3.793,74,0.221,86,0.136,87,2.369,115,0.005,116,0.005,182,2.724,203,1.341,218,3.515,264,1.267,295,1.454,314,1.504,326,6.152,332,2.317,364,4.426,365,4.426,443,5.064,444,5.064,445,5.064,456,1.624,458,3.955,459,2.668,460,2.581,462,3.478,471,6.626,472,7.362,473,7.362,474,7.362,477,2.946,478,4.165,487,1.82,488,3.643,489,3.238,491,2.946,494,6.626,1678,5.157,1679,5.622,2183,8.823,2184,5.799,2185,5.799,2186,5.799]],["title/classes/GraphicCaptchaService.html",[10,0.091,792,3.834]],["body/classes/GraphicCaptchaService.html",[3,0.086,4,0.075,5,0.022,8,0.065,10,0.14,15,0.224,18,1.771,19,4.371,21,3.47,23,1.258,24,3.306,25,2.891,30,0.816,33,2.952,35,2.703,43,1.049,44,0.007,45,0.367,46,0.16,47,1.03,50,1.857,51,2.509,52,1.05,53,3.186,58,1.031,63,0.458,65,3.186,68,3.483,73,3.325,74,0.264,76,0.754,86,0.08,87,0.871,88,2.052,89,3.022,93,3.268,96,3.034,98,1.771,103,2.156,115,0.004,116,0.004,118,0.974,125,3.927,137,1.808,144,2.125,182,1.031,183,2.052,203,1.344,218,1.477,353,3.389,366,4.437,459,1.846,499,3.175,504,1.905,506,1.442,509,1.786,510,2.046,571,2.327,573,2.327,604,4.88,609,2.158,635,3.483,645,4.538,646,1.638,691,3.483,784,3.984,789,5.234,792,5.546,797,4.541,799,5.398,800,2.785,802,5.225,818,5.176,819,3.668,821,3.89,825,2.451,827,2.934,828,4.169,862,2.952,945,2.108,1007,3.696,1063,2.221,1106,3.034,1117,2.599,1178,2.599,2039,4.541,2146,3.034,2154,3.034,2155,4.541,2158,4.541,2159,4.169,2164,7.112,2168,4.541,2171,3.034,2172,3.034,2173,4.541,2174,3.034,2175,3.034,2187,7.915,2188,6.041,2189,6.794,2190,6.12,2191,6.794,2192,6.794,2193,6.794,2194,5.107,2195,3.412,2196,3.412,2197,5.107,2198,3.412,2199,3.412,2200,5.107,2201,5.107,2202,3.412,2203,4.996,2204,3.412,2205,7.237,2206,6.469,2207,3.412,2208,5.107,2209,5.107,2210,3.412,2211,6.789,2212,5.107,2213,5.107,2214,5.107,2215,3.412,2216,5.107,2217,3.412,2218,5.107,2219,3.034,2220,3.412,2221,3.412,2222,4.541,2223,3.034,2224,3.412,2225,3.412,2226,3.412,2227,3.412,2228,3.412,2229,3.412,2230,3.412,2231,3.412,2232,3.412,2233,6.789,2234,3.412,2235,3.034,2236,3.412,2237,5.107,2238,3.412,2239,3.412,2240,3.412,2241,3.412,2242,3.412,2243,3.412,2244,5.107,2245,3.412,2246,3.412,2247,3.412,2248,3.034,2249,2.785,2250,3.412,2251,6.12,2252,3.412,2253,3.412,2254,3.412,2255,3.412,2256,3.412,2257,3.412,2258,3.412,2259,3.412,2260,3.412,2261,3.412,2262,3.412,2263,3.412,2264,3.412,2265,3.412,2266,3.412,2267,3.412]],["title/interfaces/IccFileMetadata.html",[327,0.653,363,2.817]],["body/interfaces/IccFileMetadata.html",[3,0.097,4,0.084,5,0.058,8,0.037,10,0.127,15,0.254,16,0.689,44,0.007,45,0.231,46,0.217,52,0.793,63,0.6,74,0.197,86,0.202,115,0.004,116,0.004,121,2.154,203,1.459,240,1.85,279,2.154,296,1.188,314,1.554,327,1.288,328,3.352,329,1.211,330,2.406,331,3.231,332,2.697,333,2.406,334,2.406,335,3.352,336,3.352,337,2.406,338,3.352,339,3.231,340,2.406,341,2.406,342,2.406,343,2.406,344,2.313,345,2.406,346,2.406,347,1.561,348,1.63,349,3.02,350,2.926,351,2.23,352,0.724,353,1.712,354,1.96,355,1.366,356,1.521,357,2.313,358,2.42,359,1.285,360,2.406,361,1.63,362,3.942,363,3.942,364,3.352,365,3.352,366,2.926,367,3.352,368,3.487,369,3.639,370,3.231,371,3.352,372,2.406,373,2.307,374,2.307,375,2.406,376,2.406,377,2.406,378,2.406,379,2.406,380,2.406,381,2.084,382,2.406,383,4.497,384,4.497,385,4.497,386,4.497,387,4.497,388,4.497,389,4.497,390,4.497,391,4.497,392,4.497,393,4.497,394,4.497,395,4.497,396,4.497,397,2.406,398,2.406,399,2.511,400,2.511,401,2.511,402,2.511,403,1.143,404,2.511,405,2.511,406,2.511,407,2.511,408,2.511,409,2.511,410,2.511,411,2.511,412,2.511,413,2.511,414,2.511,415,2.511,416,2.511,417,2.511,418,2.511,419,2.511,420,2.511,421,2.511,422,2.511,423,3.487,424,2.511,425,2.511,426,2.511,427,2.511,428,2.511,429,2.511,430,2.511,431,2.511,432,2.511,433,2.511,434,2.511,435,2.511,436,2.511,437,2.511,438,2.511,439,2.511,440,2.511,441,2.511,442,2.511,443,2.406,444,2.406,445,2.406,446,2.406,447,2.406,448,2.406,449,2.406,450,2.406,451,0.884,452,1.122,453,2.019,454,2.313]],["title/entities/IccFileMetadataEntity.html",[264,0.733,1682,3.578]],["body/entities/IccFileMetadataEntity.html",[3,0.105,4,0.091,5,0.062,8,0.04,10,0.081,13,0.906,15,0.612,16,0.73,30,0.858,44,0.007,45,0.579,46,0.218,63,0.577,74,0.177,86,0.098,87,2.473,115,0.004,116,0.004,203,1.135,240,1.431,264,1.073,295,1.047,314,0.959,332,1.857,362,3.548,363,3.548,383,4.286,384,4.286,385,4.286,386,4.286,387,4.286,388,4.286,389,4.286,390,4.286,391,4.286,392,4.286,393,4.286,394,4.286,395,4.286,396,4.286,456,1.169,458,2.847,459,2.139,460,2.798,461,4.898,462,3.723,465,2.604,466,3.18,467,3.18,469,3.408,470,3.18,477,2.121,478,2.998,481,3.18,483,2.998,485,3.18,487,1.31,488,2.92,489,2.331,491,2.121,492,3.925,493,2.331,1676,3.712,1682,4.506,2268,9.313,2269,5.915,2270,5.915,2271,3.712,2272,5.915,2273,3.712,2274,5.915,2275,5.915,2276,4.175,2277,3.712,2278,5.915,2279,5.915,2280,5.915,2281,5.915,2282,5.915,2283,5.915,2284,4.175,2285,5.915,2286,5.915,2287,3.712,2288,5.915,2289,3.712,2290,4.175,2291,3.712]],["title/interfaces/ImageFileMetadata.html",[327,0.653,367,2.817]],["body/interfaces/ImageFileMetadata.html",[3,0.099,4,0.086,5,0.058,8,0.038,10,0.128,15,0.259,16,0.7,44,0.007,45,0.236,46,0.214,52,0.81,63,0.599,74,0.199,86,0.203,115,0.004,116,0.004,121,2.165,203,1.466,240,1.866,279,2.199,296,1.213,314,1.579,327,1.292,328,3.403,329,1.236,330,2.457,331,3.28,332,2.71,333,2.457,334,2.457,335,3.403,336,3.403,337,2.457,338,3.403,339,3.28,340,2.457,341,2.457,342,2.457,343,2.457,344,2.362,345,2.457,346,2.457,347,1.58,348,1.665,349,3.066,350,2.971,351,2.277,352,0.74,353,1.748,354,2.001,355,1.395,356,1.553,357,2.362,358,2.457,359,1.312,360,2.457,361,1.665,362,3.403,363,3.403,364,3.403,365,3.403,366,3.483,367,3.989,368,3.54,369,3.694,370,3.28,371,3.403,372,4.541,373,3.185,374,3.185,375,4.541,376,4.541,377,4.541,378,4.541,379,4.541,380,4.541,381,3.932,382,4.541,383,2.457,384,2.457,385,2.457,386,2.457,387,2.457,388,2.457,389,2.457,390,2.457,391,2.457,392,2.457,393,2.457,394,2.457,395,2.457,396,2.457,397,2.457,398,2.457,399,2.564,400,2.564,401,2.564,402,2.564,403,1.167,404,2.564,405,2.564,406,2.564,407,2.564,408,2.564,409,2.564,410,2.564,411,2.564,412,2.564,413,2.564,414,2.564,415,2.564,416,2.564,417,2.564,418,2.564,419,2.564,420,2.564,421,2.564,422,2.564,423,3.54,424,2.564,425,2.564,426,2.564,427,2.564,428,2.564,429,2.564,430,2.564,431,2.564,432,2.564,433,2.564,434,2.564,435,2.564,436,2.564,437,2.564,438,2.564,439,2.564,440,2.564,441,2.564,442,2.564,443,2.457,444,2.457,445,2.457,446,2.457,447,2.457,448,2.457,449,2.457,450,2.457,451,0.902,452,1.145,453,2.062,454,2.362]],["title/entities/ImageFileMetadataEntity.html",[264,0.733,1684,3.578]],["body/entities/ImageFileMetadataEntity.html",[3,0.117,4,0.102,5,0.062,8,0.044,10,0.09,13,1.012,15,0.612,16,0.788,30,0.856,44,0.007,45,0.47,46,0.217,61,3.664,63,0.545,74,0.192,86,0.11,87,2.47,115,0.005,116,0.005,182,2.672,203,1.204,218,3.395,240,1.545,264,1.138,295,1.169,314,1.498,332,2.006,366,3.345,367,3.832,372,4.548,373,3.009,374,3.009,375,4.548,376,4.548,377,4.548,378,4.548,379,4.548,380,4.548,381,3.938,382,4.548,456,1.306,458,3.181,459,2.31,460,2.791,461,4.583,462,3.714,465,4.892,466,3.552,467,3.552,469,3.806,470,3.552,477,2.369,478,3.349,481,3.552,483,3.349,485,3.552,487,1.464,488,3.154,489,2.604,491,2.369,492,3.673,493,4.378,1684,4.868,2271,4.147,2273,4.147,2277,4.147,2287,4.147,2289,4.147,2291,4.147,2292,9.304,2293,6.39,2294,6.39,2295,4.663]],["title/classes/InvalidTokenMsException.html",[10,0.091,2296,4.177]],["body/classes/InvalidTokenMsException.html",[3,0.17,4,0.149,5,0.045,8,0.065,10,0.131,30,0.629,42,5.537,43,1.163,44,0.007,45,0.407,46,0.159,47,1.142,63,0.523,74,0.244,76,1.5,86,0.159,115,0.006,116,0.006,118,1.937,137,2.403,181,3.703,184,2.738,300,7.109,499,3.801,663,4.629,664,5.074,665,5.074,666,4.702,669,5.295,670,5.155,671,5.547,672,4.629,673,4.419,674,4.629,2296,7.232,2297,8.133,2298,6.035]],["title/classes/JwtDto.html",[10,0.091,608,3.374]],["body/classes/JwtDto.html",[3,0.116,4,0.101,5,0.03,8,0.044,10,0.17,12,4.353,15,0.304,16,0.784,30,0.759,41,3.756,42,5.573,44,0.007,46,0.21,47,1.221,58,1.709,63,0.544,71,2.988,74,0.254,76,1.022,86,0.184,98,1.604,115,0.005,116,0.005,118,1.32,174,1.904,203,0.764,240,2.135,276,3.05,291,3.751,451,1.059,452,1.345,460,2.474,511,1.079,520,3.322,522,1.663,542,1.48,575,3.154,576,3.523,602,3.322,605,5.213,606,4.95,608,5.213,610,6.226,611,5.612,614,3.523,615,5.213,620,4.95,630,3.322,634,4.333,657,3.322,658,3.322,784,5.509,789,3.547,804,3.152,805,5.213,812,6.078,813,2.885,857,1.604,991,5.529,1030,2.283,1221,3.154,1355,2.421,1441,3.523,1442,3.523,1443,4.875,1444,5.186,1445,3.775,1448,5.186,1449,6.686,1450,3.664,1451,4.517,1452,3.775,1453,3.775,1454,3.921,1455,3.523,1456,3.775,1457,3.775,1458,3.775,1459,3.775,1460,4.84,1461,5.186,1462,6.378,1463,5.924,1464,5.924,2299,4.625,2300,4.625,2301,4.625,2302,4.625,2303,3.322,2304,4.625]],["title/interfaces/Language.html",[327,0.653,555,1.446]],["body/interfaces/Language.html",[3,0.162,4,0.141,5,0.042,8,0.061,15,0.423,16,0.972,44,0.007,45,0.532,46,0.2,63,0.576,74,0.193,86,0.2,115,0.006,116,0.006,183,2.38,203,1.529,264,1.385,314,1.277,327,1.304,329,2.022,347,2.199,352,1.48,356,3.498,555,2.851,948,5.534,1350,2.145,2305,5.257,2306,5.257,2307,5.659,2308,5.659,2309,4.626]],["title/entities/LanguageEntity.html",[264,0.733,2310,3.204]],["body/entities/LanguageEntity.html",[3,0.14,4,0.122,5,0.047,8,0.053,10,0.108,13,1.21,15,0.573,16,0.888,30,0.78,44,0.007,45,0.478,46,0.198,63,0.536,74,0.239,81,1.82,86,0.131,87,2.151,115,0.005,116,0.005,203,1.316,264,1.244,267,1.75,295,1.398,319,2.397,352,1.497,356,3.142,403,1.652,456,1.561,459,2.602,460,2.543,461,3.012,462,3.247,487,1.75,492,3.116,525,1.895,526,1.895,527,1.857,528,1.857,529,1.895,530,2.708,531,1.857,532,2.965,533,1.82,534,2.397,535,1.75,536,1.895,537,1.895,538,1.895,539,1.895,540,1.895,541,1.895,542,1.785,543,1.895,544,1.895,545,1.895,546,1.857,547,2.446,548,1.895,549,1.857,550,1.895,551,1.895,552,1.895,553,1.895,554,1.895,555,2.454,556,1.895,557,1.857,558,1.895,810,2.715,842,3.455,843,3.223,845,3.559,846,2.833,847,4.49,869,3.656,875,4.551,945,2.971,962,4.316,1393,2.475,1486,3.113,1494,3.63,2310,4.908,2311,5.576,2312,6.399,2313,5.576,2314,5.576,2315,5.576,2316,5.576,2317,4.551,2318,5.576]],["title/injectables/LiteAuthGuard.html",[495,1.475,2319,4.177]],["body/injectables/LiteAuthGuard.html",[0,5.498,1,6.839,3,0.154,4,0.135,5,0.04,7,5.465,8,0.059,9,1.754,10,0.148,12,5.234,15,0.404,16,0.944,17,5.49,18,2.892,19,4.716,20,7.414,21,3.744,22,5.015,30,0.709,43,1.053,44,0.007,45,0.369,46,0.144,47,1.034,71,2.499,74,0.269,76,1.358,82,5.017,83,4.682,86,0.144,115,0.006,116,0.006,137,2.71,182,1.856,183,1.856,495,2.403,497,2.798,499,4.078,500,4.591,503,6.807,504,3.432,506,2.598,507,5.465,508,5.465,509,3.218,510,3.686,549,2.55,945,3.16,2319,7.414,2320,8.337,2321,7.655,2322,7.655]],["title/modules/LocaleModule.html",[511,1.096,2323,3.578]],["body/modules/LocaleModule.html",[3,0.146,4,0.127,5,0.048,8,0.055,10,0.112,44,0.007,74,0.27,76,1.281,81,1.893,86,0.136,115,0.005,116,0.005,267,1.82,403,1.718,511,2.058,513,2.511,525,1.971,526,1.971,527,1.931,528,1.931,529,1.971,530,2.759,531,1.931,532,2.992,533,1.893,534,2.458,535,1.82,536,1.971,537,1.971,538,1.971,539,1.971,540,1.971,541,1.971,542,1.856,543,1.971,544,1.971,545,1.971,546,1.931,547,2.508,548,1.971,549,1.931,550,1.971,551,1.971,552,1.971,553,1.971,554,1.971,555,1.786,556,1.971,557,1.931,558,1.971,577,2.71,588,3.696,592,3.696,679,3.987,709,3.036,724,3.238,725,3.478,726,3.478,727,3.478,732,4.426,733,3.478,734,3.238,850,3.75,872,3.133,886,5.622,887,6.024,891,3.775,2310,5.034,2323,6.981,2324,5.157,2325,5.157,2326,5.157,2327,7.275,2328,5.799,2329,5.622,2330,6.563,2331,5.157,2332,6.563,2333,5.301,2334,4.418,2335,5.799,2336,5.157]],["title/injectables/LocaleService.html",[495,1.475,2327,3.578]],["body/injectables/LocaleService.html",[3,0.134,4,0.117,5,0.035,8,0.067,10,0.103,15,0.351,18,2.705,23,1.721,24,2.82,25,2.497,30,0.648,43,1.198,44,0.007,45,0.419,46,0.164,47,1.393,50,1.49,63,0.529,74,0.264,76,1.178,86,0.125,88,2.111,89,2.981,93,3.008,98,1.849,103,1.413,115,0.005,116,0.005,137,2.475,144,1.896,183,2.664,184,2.151,295,1.337,352,1.712,495,2.194,497,2.427,500,4.192,522,1.601,555,2.152,607,2.886,681,7.089,708,3.83,709,2.792,761,6.216,850,4.366,872,2.881,939,5.706,953,6.757,1244,3.102,1281,4.551,1437,3.45,1468,4.768,2307,6.334,2310,3.637,2312,7.361,2327,5.325,2329,5.325,2330,6.216,2331,4.741,2332,6.216,2333,3.83,2334,4.062,2337,5.332,2338,7.799,2339,5.332,2340,7.799,2341,7.799,2342,5.332,2343,6.99,2344,5.332,2345,5.332,2346,5.332,2347,5.332,2348,5.332,2349,5.332,2350,5.332,2351,5.332,2352,5.332,2353,6.99,2354,5.332,2355,5.332,2356,5.332,2357,5.332,2358,5.332,2359,5.332,2360,5.332]],["title/injectables/LocaleSubscriber.html",[495,1.475,2361,4.177]],["body/injectables/LocaleSubscriber.html",[3,0.102,4,0.089,5,0.027,8,0.065,10,0.131,13,0.884,15,0.268,17,2.444,18,2.017,21,3.562,23,1.432,24,2.451,25,1.304,30,0.539,41,2.58,43,0.996,44,0.007,45,0.349,46,0.137,47,0.978,50,1.239,74,0.244,76,0.9,86,0.096,87,1.485,88,2.047,89,3.019,93,2.242,98,2.564,103,1.796,115,0.004,116,0.004,125,4.944,137,2.059,144,1.693,203,1.342,263,3.623,264,1.379,265,4.746,268,4.746,286,5.631,295,1.022,456,2.07,495,1.825,497,1.855,500,4.433,504,2.275,506,1.722,509,2.133,606,3.965,607,2.4,609,2.457,623,6.515,701,4.812,702,4.725,709,2.133,741,2.542,807,4.176,850,4.828,852,3.141,862,4.273,867,3.044,868,3.044,872,2.201,1318,7.208,1340,3.141,1342,3.487,1410,4.273,1454,3.141,1708,6.034,1747,4.746,2036,5.17,2307,4.176,2333,6.342,2334,3.104,2361,7.852,2362,6.779,2363,5.814,2364,5.814,2365,7.392,2366,8.127,2367,3.627,2368,5.814,2369,5.814,2370,7.392,2371,8.83,2372,4.074,2373,4.746,2374,3.965,2375,5.814,2376,5.814,2377,8.127,2378,4.074,2379,5.814,2380,5.17,2381,5.17,2382,5.814,2383,4.074,2384,4.074,2385,5.814,2386,5.814,2387,5.814,2388,5.814,2389,5.814,2390,4.074,2391,8.127,2392,5.814,2393,5.814,2394,7.392,2395,5.814,2396,7.392,2397,5.814,2398,5.814,2399,4.074]],["title/interfaces/LocalizedMedia.html",[327,0.653,2309,3.374]],["body/interfaces/LocalizedMedia.html",[3,0.159,4,0.139,5,0.042,8,0.061,15,0.418,16,0.964,44,0.007,45,0.381,46,0.207,63,0.567,74,0.191,86,0.199,115,0.006,116,0.006,183,2.738,203,1.524,264,1.379,314,1.431,327,1.301,329,1.995,347,2.221,352,1.703,356,2.506,555,2.842,948,5.509,1350,2.117,2305,5.188,2306,5.188,2307,6.079,2308,6.511,2309,5.614]],["title/entities/LocalizedMediaEntity.html",[264,0.733,2333,3.374]],["body/entities/LocalizedMediaEntity.html",[3,0.138,4,0.12,5,0.047,8,0.052,10,0.106,13,1.19,15,0.52,16,0.878,30,0.775,44,0.007,46,0.196,63,0.427,74,0.251,81,1.79,86,0.129,87,2.019,115,0.005,116,0.005,183,2.387,203,1.305,264,1.234,267,1.721,295,1.375,314,1.154,319,2.787,347,1.69,352,1.485,403,1.624,456,1.535,459,2.573,460,2.527,462,2.745,477,2.785,487,1.721,488,3.513,491,2.785,492,2.373,525,1.863,526,1.863,527,1.826,528,1.826,529,1.863,530,2.686,531,1.826,532,2.954,533,1.79,534,2.371,535,1.721,536,1.863,537,1.863,538,1.863,539,1.863,540,1.863,541,1.863,542,1.755,543,1.863,544,1.863,545,1.863,546,1.826,547,2.419,548,1.863,549,1.826,550,1.863,551,1.863,552,1.863,553,1.863,554,1.863,555,1.688,556,1.863,557,1.826,558,1.863,810,2.068,842,2.631,843,3.169,845,3.536,846,3.616,847,4.441,869,4.016,875,4.475,904,4.634,945,2.938,1244,3.159,2308,5.677,2309,5.112,2310,5.706,2317,4.475,2333,5.112,2400,7.71,2401,5.482,2402,7.118,2403,5.482,2404,5.482,2405,5.482,2406,5.482,2407,4.874,2408,5.482]],["title/interfaces/LocalizedString.html",[327,0.653,1350,1.565]],["body/interfaces/LocalizedString.html",[3,0.159,4,0.139,5,0.042,8,0.061,15,0.418,16,0.964,44,0.007,45,0.381,46,0.207,63,0.577,74,0.191,86,0.199,115,0.006,116,0.006,183,2.738,203,1.524,264,1.379,314,1.431,327,1.301,329,1.995,347,2.097,352,1.703,356,2.506,555,2.842,948,5.509,1350,2.603,2305,5.188,2306,5.188,2307,6.079,2308,6.511,2309,4.565]],["title/entities/LocalizedStringEntity.html",[264,0.733,850,2.387]],["body/entities/LocalizedStringEntity.html",[3,0.139,4,0.122,5,0.047,8,0.053,10,0.107,13,1.205,15,0.523,16,0.885,30,0.779,44,0.007,46,0.197,63,0.504,74,0.238,81,1.813,86,0.13,87,2.223,115,0.005,116,0.005,183,2.402,203,1.313,264,1.242,267,1.743,295,1.392,314,1.163,319,2.39,352,1.494,403,1.645,456,1.555,459,2.595,460,2.539,462,3.242,477,2.821,487,1.743,488,3.542,491,2.821,492,2.404,525,1.887,526,1.887,527,1.849,528,1.849,529,1.887,530,2.703,531,1.849,532,2.962,533,1.813,534,2.39,535,1.743,536,1.887,537,1.887,538,1.887,539,1.887,540,1.887,541,1.887,542,1.777,543,1.887,544,1.887,545,1.887,546,1.849,547,2.439,548,1.887,549,1.849,550,1.887,551,1.887,552,1.887,553,1.887,554,1.887,555,1.709,556,1.887,557,1.849,558,1.887,810,2.095,842,2.665,843,3.209,846,2.821,850,3.646,869,3.646,904,4.672,945,2.963,1350,2.39,1531,4.532,1539,4.532,2308,5.712,2310,5.734,2317,4.532,2400,7.741,2407,4.937,2409,5.552,2410,7.177,2411,6.382,2412,5.552,2413,5.552,2414,5.552,2415,5.552,2416,5.552]],["title/modules/LogModule.html",[511,1.096,567,2.195]],["body/modules/LogModule.html",[3,0.175,4,0.153,5,0.046,8,0.066,10,0.135,21,3.553,44,0.007,74,0.264,76,1.54,86,0.164,115,0.006,116,0.006,277,5.155,511,2.124,513,3.017,567,3.861,588,3.173,589,3.541,590,4.028,592,3.173,679,4.464,737,5.379,2373,6.744,2417,6.969,2418,6.938,2419,6.969,2420,6.969]],["title/classes/LogService.html",[10,0.091,2418,3.578]],["body/classes/LogService.html",[3,0.082,4,0.071,5,0.047,8,0.077,10,0.063,15,0.215,21,2.879,23,1.216,25,2.631,30,0.744,43,1.479,44,0.007,45,0.511,46,0.207,47,1.383,48,6.198,50,1.815,51,2.2,58,1.342,63,0.565,74,0.179,76,0.721,86,0.077,88,2.637,89,2.953,98,1.132,103,1.76,115,0.004,116,0.004,118,0.931,121,1.239,149,3.931,152,5.061,174,2.16,175,3.762,178,6.11,181,4.388,184,1.992,185,4.923,190,2.486,195,2.664,196,2.664,218,1.413,242,2.902,247,1.887,248,2.902,314,1.077,319,3.057,353,3.167,499,3.105,515,3.762,522,1.131,609,2.087,737,3.215,795,3.369,933,4.28,936,2.664,1007,2.509,1023,4.772,1037,4.646,1138,2.902,1140,6.676,1490,3.547,2249,6.365,2374,3.369,2418,3.762,2421,3.264,2422,4.939,2423,4.939,2424,6.676,2425,6.644,2426,4.939,2427,4.939,2428,6.676,2429,4.392,2430,4.939,2431,3.264,2432,5.715,2433,4.939,2434,8.379,2435,3.264,2436,6.346,2437,3.264,2438,8.22,2439,7.136,2440,7.136,2441,4.939,2442,3.264,2443,4.939,2444,3.264,2445,4.939,2446,4.939,2447,4.939,2448,3.264,2449,4.939,2450,4.939,2451,4.939,2452,4.939,2453,3.264,2454,4.939,2455,3.264,2456,6.644,2457,7.136,2458,3.264,2459,3.264,2460,3.264,2461,6.644,2462,3.264,2463,3.264,2464,3.264,2465,6.644,2466,3.264,2467,3.264,2468,3.264,2469,6.644,2470,4.939,2471,4.939,2472,3.264,2473,3.264,2474,4.939,2475,3.264,2476,3.264,2477,2.902,2478,3.264,2479,3.264,2480,2.902,2481,4.939,2482,3.264,2483,3.264,2484,2.486,2485,3.264,2486,3.264,2487,3.264,2488,3.264,2489,3.264]],["title/classes/LoginPayload.html",[10,0.091,602,3.374]],["body/classes/LoginPayload.html",[3,0.115,4,0.101,5,0.03,8,0.044,10,0.17,12,4.672,15,0.302,16,0.78,30,0.757,41,3.209,42,5.364,44,0.007,46,0.21,47,1.523,58,1.65,63,0.557,71,2.984,74,0.253,76,1.015,86,0.183,98,1.593,115,0.005,116,0.005,118,1.31,174,1.838,203,1.044,240,1.884,276,3.922,291,4.294,451,1.052,452,1.335,460,2.468,511,1.071,520,3.298,522,1.656,542,2.024,575,3.132,576,3.498,602,4.541,605,5.868,606,4.932,608,4.541,610,5.596,611,4.541,614,3.498,615,3.298,620,3.132,630,4.541,634,3.132,657,4.541,658,5.194,784,4.707,789,4.35,804,3.142,805,5.194,808,5.622,812,6.065,813,2.865,857,1.593,991,5.508,1030,2.267,1221,3.132,1355,2.404,1441,3.498,1442,3.498,1443,4.86,1444,5.161,1445,3.748,1446,5.622,1448,5.161,1449,6.669,1450,3.373,1451,4.18,1452,3.748,1453,3.748,1454,4.562,1455,4.816,1456,5.161,1457,5.161,1458,5.902,1459,5.902,1460,3.498,1461,3.748,1462,5.161,1463,3.748,1464,3.748,2490,4.592,2491,4.592,2492,4.592,2493,4.592,2494,4.592,2495,4.592]],["title/interfaces/Media.html",[327,0.653,347,1.116]],["body/interfaces/Media.html",[3,0.101,4,0.088,5,0.051,8,0.038,9,2.514,10,0.168,13,1.597,15,0.265,16,0.712,25,1.847,35,1.428,44,0.007,45,0.545,46,0.224,52,1.665,58,1.684,63,0.577,74,0.233,86,0.212,115,0.004,116,0.004,121,2.139,144,1.954,174,1.655,203,1.409,240,1.779,292,3.843,296,1.242,314,1.534,327,1.264,329,1.266,332,2.444,347,2.247,352,1.72,355,2.043,358,3.371,359,2.593,361,2.439,373,3.037,374,3.037,451,0.924,452,1.172,522,1.322,804,2.968,845,1.704,857,1.399,968,3.002,1273,2.627,1350,2.778,1351,1.489,1450,4.151,1645,1.99,1653,1.99,1655,2.049,1657,2.049,1661,2.049,1663,2.049,1667,2.049,2496,2.178,2497,4.241,2498,4.241,2499,2.697,2500,2.251,2501,2.178,2502,3.118,2503,3.022,2504,3.529,2505,2.932,2506,3.852,2507,2.251,2508,2.178,2509,2.251,2510,2.251,2511,3.118,2512,4.206,2513,2.178,2514,3.118,2515,2.111,2516,2.251,2517,2.251,2518,2.251,2519,2.251,2520,2.251,2521,2.251,2522,1.936,2523,2.111]],["title/classes/MediaDto.html",[10,0.091,2513,2.538]],["body/classes/MediaDto.html",[3,0.099,4,0.086,5,0.051,8,0.038,9,2.501,10,0.167,13,1.674,15,0.259,16,0.7,25,1.817,30,0.767,35,1.395,44,0.007,45,0.538,46,0.222,52,1.652,58,1.672,63,0.575,74,0.231,86,0.211,115,0.004,116,0.004,118,1.124,121,2.077,144,1.942,174,1.736,203,1.368,240,1.609,292,3.808,296,1.213,314,1.525,327,1.248,332,2.285,347,2.241,352,1.7,355,2.009,358,3.151,359,2.424,361,2.398,373,3.005,374,3.005,451,0.902,452,1.145,460,2.501,522,1.3,804,3.112,845,1.665,857,1.366,968,2.807,1273,2.583,1350,2.676,1351,1.455,1450,4.181,1645,1.944,1653,1.944,1655,2.001,1657,2.001,1661,2.001,1663,2.001,1667,2.001,2303,4.076,2496,2.128,2497,4.039,2498,4.039,2499,2.652,2500,2.199,2501,2.128,2502,3.066,2503,2.971,2504,3.483,2505,2.883,2506,3.811,2507,2.199,2508,2.128,2509,2.199,2510,2.199,2511,3.066,2512,4.168,2513,3.066,2514,3.066,2515,2.062,2516,2.199,2517,2.199,2518,2.199,2519,2.199,2520,2.199,2521,2.199,2522,1.891,2523,2.062,2524,3.939,2525,3.939,2526,3.939,2527,3.939,2528,3.939,2529,3.939,2530,3.939]],["title/entities/MediaEntity.html",[264,0.733,845,1.985]],["body/entities/MediaEntity.html",[3,0.129,4,0.113,5,0.034,8,0.049,10,0.132,13,1.117,15,0.537,16,0.842,30,0.825,44,0.007,45,0.51,46,0.224,63,0.41,74,0.262,86,0.121,87,2.381,115,0.005,116,0.005,203,1.266,240,1.652,264,1.197,295,1.291,314,1.107,319,2.275,332,2.407,347,2.074,352,1.44,359,2.553,456,1.442,459,2.47,460,2.691,462,2.957,477,2.616,487,2.144,488,3.372,491,2.616,492,2.229,810,1.943,842,2.472,843,2.976,845,2.887,846,2.616,850,4.148,851,3.088,852,4.814,853,3.088,867,3.577,868,3.577,869,3.471,872,2.782,904,4.447,968,2.957,1244,3.032,1483,3.212,1593,4.203,1611,5.576,1621,5.316,1622,4.203,1623,5.576,1624,4.203,1633,3.512,1634,4.659,1635,4.659,1637,4.659,1638,5.576,1639,5.576,1640,5.576,1641,3.512,1643,4.203,2411,6.075,2531,5.149,2532,5.149,2533,6.22,2534,6.831,2535,6.831,2536,5.149,2537,5.149,2538,5.149,2539,5.149,2540,5.149,2541,6.22,2542,6.075,2543,5.149,2544,4.579,2545,4.579,2546,3.512,2547,5.149,2548,5.149]],["title/interfaces/MediaExt.html",[327,0.653,2504,2.459]],["body/interfaces/MediaExt.html",[3,0.105,4,0.092,5,0.052,8,0.04,9,2.534,10,0.169,13,1.624,15,0.275,16,0.731,25,1.896,35,1.481,44,0.007,45,0.549,46,0.218,52,1.686,58,1.656,63,0.581,74,0.237,86,0.213,115,0.004,116,0.004,121,2.16,144,1.973,174,1.683,203,1.304,240,1.433,292,3.897,296,1.288,314,1.53,327,1.272,329,1.313,332,1.86,347,2.249,352,1.73,355,2.098,358,2.978,359,1.973,361,2.504,373,3.088,374,3.088,451,0.958,452,1.216,522,1.357,804,3.017,845,1.768,857,1.451,968,2.285,1273,2.697,1350,2.63,1351,1.545,1450,4.165,1645,2.065,1653,2.924,1655,2.126,1657,2.126,1661,2.126,1663,2.126,1667,2.126,2496,2.26,2497,3.917,2498,3.917,2499,2.768,2500,2.336,2501,2.26,2502,3.201,2503,3.102,2504,3.917,2505,3.01,2506,3.917,2507,2.336,2508,2.26,2509,2.336,2510,2.336,2511,3.201,2512,4.266,2513,2.26,2514,3.201,2515,2.19,2516,2.336,2517,2.336,2518,2.336,2519,2.336,2520,2.336,2521,2.336,2522,2.008,2523,2.19]],["title/entities/MediaExtEntity.html",[264,0.733,2549,3.834]],["body/entities/MediaExtEntity.html",[3,0.166,4,0.145,5,0.043,8,0.063,10,0.127,13,1.433,15,0.588,16,0.987,30,0.741,44,0.007,45,0.516,46,0.188,63,0.537,74,0.24,86,0.155,87,1.686,115,0.006,116,0.006,264,1.344,295,1.656,347,1.9,352,1.617,456,1.849,459,2.892,460,2.416,461,3.568,462,3.085,487,2.073,492,2.859,810,2.492,842,3.17,945,3.302,1244,3.551,1393,2.931,1486,3.687,1494,4.299,2504,4.189,2546,4.504,2549,6.53,2550,6.557,2551,6.603,2552,7.114,2553,6.603,2554,6.603,2555,6.603]],["title/interfaces/MediaFile.html",[327,0.653,2497,2.459]],["body/interfaces/MediaFile.html",[3,0.1,4,0.088,5,0.053,8,0.038,9,2.51,10,0.167,13,1.591,15,0.263,16,0.708,25,1.838,35,1.417,44,0.007,45,0.544,46,0.222,52,1.661,58,1.632,63,0.579,74,0.233,86,0.211,115,0.004,116,0.004,121,2.135,144,1.95,174,1.65,203,1.406,240,1.388,292,4.202,296,1.233,314,1.556,327,1.262,329,1.257,332,1.802,347,2.27,352,1.717,355,2.749,358,2.907,359,1.912,361,2.427,373,3.435,374,3.435,451,0.917,452,1.164,522,1.315,804,2.958,845,1.692,857,1.389,968,2.214,1273,2.614,1350,2.586,1351,1.478,1450,4.148,1645,1.976,1653,1.976,1655,2.034,1657,2.034,1661,2.034,1663,2.034,1667,2.034,2496,2.163,2497,4.065,2498,3.839,2499,2.683,2500,2.235,2501,2.163,2502,3.102,2503,3.006,2504,3.515,2505,2.917,2506,4.23,2507,2.235,2508,2.163,2509,2.235,2510,2.235,2511,3.102,2512,4.194,2513,2.163,2514,3.102,2515,2.096,2516,2.235,2517,2.235,2518,2.235,2519,2.235,2520,2.235,2521,2.235,2522,1.922,2523,2.096]],["title/classes/MediaFileDto.html",[10,0.091,2514,2.538]],["body/classes/MediaFileDto.html",[3,0.098,4,0.085,5,0.053,8,0.037,9,2.495,10,0.166,13,1.667,15,0.256,16,0.694,25,1.802,30,0.783,35,1.379,44,0.007,45,0.537,46,0.221,52,1.646,58,1.667,63,0.576,74,0.23,86,0.21,115,0.004,116,0.004,118,1.112,121,2.07,144,1.936,174,1.728,203,1.363,240,1.361,292,4.074,296,1.199,314,1.537,327,1.245,332,1.767,347,2.253,352,1.696,355,2.564,358,2.862,359,1.875,361,2.379,373,3.305,374,3.305,451,0.892,452,1.133,460,2.553,522,1.29,804,3.098,845,1.646,857,1.351,968,2.171,1273,2.563,1350,2.558,1351,1.439,1450,4.183,1645,1.923,1653,1.923,1655,1.979,1657,1.979,1661,1.979,1663,1.979,1667,1.979,2303,2.798,2496,2.105,2497,4.022,2498,3.791,2499,3.089,2500,2.175,2501,2.105,2502,3.041,2503,2.947,2504,3.461,2505,2.86,2506,3.791,2507,2.175,2508,2.105,2509,2.175,2510,2.175,2511,3.041,2512,4.325,2513,2.105,2514,3.571,2515,2.04,2516,2.175,2517,2.175,2518,2.175,2519,2.175,2520,2.175,2521,2.175,2522,1.87,2523,2.04,2556,3.896,2557,3.896,2558,3.896,2559,3.896,2560,3.896,2561,3.896,2562,3.896,2563,3.896]],["title/entities/MediaFileEntity.html",[264,0.733,2533,3.578]],["body/entities/MediaFileEntity.html",[3,0.135,4,0.118,5,0.035,8,0.051,10,0.104,13,1.165,15,0.546,16,0.866,30,0.846,44,0.007,45,0.469,46,0.219,58,1.418,63,0.498,74,0.249,86,0.126,87,2.425,115,0.005,116,0.005,203,1.292,264,1.222,292,3.862,295,1.346,314,1.48,347,2.098,352,1.47,355,2.771,373,3.23,374,3.23,456,1.504,459,2.539,460,2.758,461,2.9,462,3.593,477,2.728,487,1.685,488,3.466,491,2.728,492,3.04,493,2.997,810,2.026,842,2.577,843,3.103,845,3.508,846,3.568,869,3.976,968,2.708,1631,4.382,2334,4.09,2497,3.676,2533,5.349,2542,6.244,2546,3.662,2550,7.034,2564,5.369,2565,7.022,2566,5.369,2567,5.961,2568,5.369,2569,6.244,2570,5.369,2571,5.369,2572,5.369,2573,5.369,2574,5.369,2575,5.369,2576,4.382,2577,5.369,2578,6.244]],["title/interfaces/MediaFormat.html",[327,0.653,2506,2.459]],["body/interfaces/MediaFormat.html",[3,0.103,4,0.09,5,0.052,8,0.039,9,2.526,10,0.168,13,1.613,15,0.271,16,0.723,25,1.877,35,1.459,44,0.007,45,0.547,46,0.219,52,1.678,58,1.648,63,0.584,74,0.235,86,0.212,115,0.004,116,0.004,121,2.151,144,1.965,174,1.672,203,1.297,240,1.418,292,4.027,296,1.269,314,1.527,327,1.269,329,1.294,332,1.84,347,2.246,352,1.726,355,2.076,358,2.954,359,1.952,361,2.478,373,3.465,374,3.465,451,0.944,452,1.198,522,1.343,804,2.997,845,1.742,857,1.43,968,2.261,1273,2.669,1350,2.615,1351,1.522,1450,4.159,1645,2.035,1653,2.035,1655,2.094,1657,2.094,1661,2.094,1663,2.094,1667,2.094,2496,2.227,2497,3.891,2498,3.891,2499,2.739,2500,2.301,2501,2.227,2502,3.167,2503,3.069,2504,3.572,2505,2.978,2506,4.111,2507,2.301,2508,2.227,2509,2.301,2510,2.301,2511,3.167,2512,4.242,2513,2.227,2514,3.167,2515,2.158,2516,2.301,2517,2.301,2518,2.301,2519,2.301,2520,2.301,2521,2.301,2522,1.979,2523,2.158]],["title/classes/MediaFormatDto.html",[10,0.091,2512,2.538]],["body/classes/MediaFormatDto.html",[3,0.102,4,0.089,5,0.051,8,0.039,9,2.517,10,0.168,13,1.694,15,0.267,16,0.715,25,1.856,30,0.683,35,1.437,44,0.007,45,0.541,46,0.219,52,1.669,58,1.687,63,0.58,74,0.234,86,0.212,115,0.004,116,0.004,118,1.158,121,2.095,144,1.957,174,1.756,203,1.289,240,1.402,292,4.006,296,1.249,314,1.524,327,1.254,332,1.82,347,2.241,352,1.709,355,2.052,358,2.928,359,1.931,361,2.45,373,3.35,374,3.35,451,0.929,452,1.18,460,2.228,522,1.328,804,3.148,845,1.715,857,1.407,968,2.236,1273,2.639,1350,2.599,1351,1.498,1450,4.184,1645,2.003,1653,2.003,1655,2.061,1657,2.061,1661,2.061,1663,2.061,1667,2.061,2496,2.192,2497,3.863,2498,3.863,2499,2.709,2500,2.265,2501,2.192,2502,3.132,2503,3.035,2504,3.541,2505,2.945,2506,4.086,2507,2.265,2508,2.192,2509,2.265,2510,2.265,2511,3.132,2512,4.385,2513,2.192,2514,3.132,2515,2.124,2516,2.265,2517,2.265,2518,2.265,2519,2.265,2520,2.265,2521,2.265,2522,1.948,2523,2.124,2579,4.057,2580,4.057,2581,4.057,2582,4.057]],["title/entities/MediaFormatEntity.html",[264,0.733,2567,3.374]],["body/entities/MediaFormatEntity.html",[3,0.155,4,0.135,5,0.041,8,0.059,10,0.119,13,1.342,15,0.575,16,0.948,30,0.81,44,0.007,45,0.502,46,0.205,63,0.564,74,0.23,86,0.145,87,2.297,115,0.006,116,0.006,264,1.305,295,1.551,347,1.825,352,1.57,373,3.451,374,3.451,456,1.732,459,2.779,460,2.642,461,3.341,462,3.536,487,1.942,492,2.678,810,2.334,842,2.969,945,3.172,1244,3.411,1393,2.745,1486,3.453,1494,4.027,2505,3.905,2506,4.024,2546,4.218,2550,6.851,2567,5.52,2569,6.834,2578,6.834,2583,6.185,2584,6.185,2585,6.185,2586,6.185,2587,6.185,2588,6.185]],["title/classes/MediaManager.html",[10,0.091,2515,2.459]],["body/classes/MediaManager.html",[3,0.089,4,0.078,5,0.051,8,0.034,9,2.709,10,0.165,13,1.504,15,0.234,23,1.296,25,1.684,30,0.763,35,1.258,43,1.411,44,0.007,45,0.557,46,0.22,47,1.386,50,1.755,52,1.759,58,1.565,63,0.577,74,0.222,86,0.206,115,0.004,116,0.004,118,1.013,121,2.065,144,2.083,174,1.559,184,3.125,203,1.413,240,1.272,292,3.958,296,1.094,314,1.552,327,1.222,332,1.652,347,2.23,352,1.683,355,1.863,358,2.714,359,1.752,361,2.224,373,2.861,374,2.861,451,0.814,452,1.033,522,1.436,701,3.425,804,2.795,845,1.501,857,1.232,968,2.029,1273,3.155,1350,2.671,1351,1.312,1450,4.1,1645,2.597,1647,4.295,1649,4.295,1650,4.295,1653,1.753,1655,3.184,1657,2.673,1661,2.673,1663,2.673,1667,2.673,2496,1.919,2497,3.628,2498,3.628,2499,2.459,2500,1.983,2501,1.919,2502,2.843,2503,2.755,2504,3.281,2505,2.673,2506,3.628,2507,1.983,2508,1.919,2509,1.983,2510,1.983,2511,2.843,2512,3.997,2513,1.919,2514,2.843,2515,2.755,2516,3.499,2517,3.499,2518,2.938,2519,3.499,2520,3.499,2521,3.499,2522,1.705,2523,1.86,2589,5.262,2590,3.552,2591,3.552,2592,3.552,2593,3.552,2594,3.552,2595,3.552,2596,3.552,2597,3.552,2598,3.552,2599,3.552,2600,3.552]],["title/modules/MediaModule.html",[511,1.096,2522,2.255]],["body/modules/MediaModule.html",[3,0.137,4,0.119,5,0.046,8,0.052,10,0.105,23,1.341,30,0.504,43,0.933,44,0.007,45,0.327,46,0.128,47,0.916,50,1.16,74,0.282,76,1.203,81,1.777,86,0.128,103,1.442,115,0.005,116,0.005,182,1.644,183,1.644,267,1.709,347,1.683,403,1.613,451,1.623,453,2.85,511,2.018,513,2.357,517,3.6,518,4.613,519,3.544,522,1.623,524,4.725,525,1.85,526,1.85,527,1.813,528,1.813,529,1.85,530,2.677,531,1.813,532,2.949,533,1.777,534,2.36,535,1.709,536,1.85,537,1.85,538,1.85,539,1.85,540,1.85,541,1.85,542,1.743,543,1.85,544,1.85,545,1.85,546,1.813,547,2.408,548,1.85,549,1.813,550,1.85,551,1.85,552,1.85,553,1.85,554,1.85,555,1.676,556,1.85,557,1.813,558,1.85,565,4.096,566,3.713,567,3.311,568,3.396,577,2.544,588,2.478,589,2.766,590,3.147,591,3.91,592,2.478,709,2.85,845,2.995,891,3.544,962,4.25,1645,3.497,2336,4.84,2501,2.941,2515,4.124,2522,3.782,2523,4.369,2533,5.398,2541,5.398,2544,4.84,2545,4.84,2546,3.713,2567,5.089,2576,4.443,2601,5.443,2602,5.443,2603,7.878,2604,5.443,2605,7.878,2606,4.84,2607,4.84]],["title/interfaces/MediaType.html",[327,0.653,2498,2.459]],["body/interfaces/MediaType.html",[3,0.101,4,0.088,5,0.051,8,0.038,9,2.514,10,0.168,13,1.597,15,0.265,16,0.712,25,2.492,35,1.428,44,0.007,45,0.545,46,0.222,52,1.812,58,1.636,63,0.579,74,0.233,86,0.212,115,0.004,116,0.004,121,2.139,144,1.954,174,1.655,203,1.286,240,1.396,292,3.843,296,1.242,314,1.534,327,1.264,329,1.266,332,1.812,347,2.24,352,1.72,355,2.043,358,2.918,359,1.922,361,3.291,373,3.037,374,3.037,451,0.924,452,1.172,522,1.322,804,2.968,845,1.704,857,1.399,968,2.226,1273,2.627,1350,2.593,1351,1.489,1450,4.151,1645,1.99,1653,1.99,1655,2.049,1657,2.049,1661,2.049,1663,2.049,1667,2.049,2496,2.178,2497,3.852,2498,4.076,2499,2.697,2500,2.251,2501,2.178,2502,4.206,2503,4.076,2504,4.076,2505,3.955,2506,4.241,2507,2.251,2508,2.178,2509,2.251,2510,2.251,2511,3.118,2512,4.206,2513,2.178,2514,3.118,2515,2.111,2516,2.251,2517,2.251,2518,2.251,2519,2.251,2520,2.251,2521,2.251,2522,1.936,2523,2.111]],["title/classes/MediaTypeDto.html",[10,0.091,2511,2.538]],["body/classes/MediaTypeDto.html",[3,0.099,4,0.086,5,0.051,8,0.038,9,2.5,10,0.167,13,1.674,15,0.259,16,0.699,25,2.329,30,0.767,35,1.393,44,0.007,45,0.538,46,0.222,52,1.742,58,1.672,63,0.576,74,0.231,86,0.211,115,0.004,116,0.004,118,1.123,121,2.076,144,1.941,174,1.735,203,1.274,240,1.371,292,3.806,296,1.212,314,1.524,327,1.247,332,1.78,347,2.233,352,1.699,355,2.008,358,2.878,359,1.889,361,3.075,373,3.003,374,3.003,451,0.901,452,1.144,460,2.501,522,1.299,804,3.111,845,1.663,857,1.365,968,2.187,1273,2.581,1350,2.568,1351,1.453,1450,4.187,1645,1.942,1653,1.942,1655,1.999,1657,1.999,1661,1.999,1663,1.999,1667,1.999,2303,2.826,2496,2.126,2497,3.809,2498,4.037,2499,2.65,2500,2.197,2501,2.126,2502,3.93,2503,3.809,2504,3.809,2505,3.696,2506,3.809,2507,2.197,2508,2.126,2509,2.197,2510,2.197,2511,3.592,2512,4.34,2513,2.126,2514,3.063,2515,2.06,2516,2.197,2517,2.197,2518,2.197,2519,2.197,2520,2.197,2521,2.197,2522,1.889,2523,2.06,2608,3.935,2609,3.935,2610,3.935,2611,3.935,2612,3.935,2613,3.935,2614,3.935]],["title/entities/MediaTypeEntity.html",[264,0.733,2541,3.578]],["body/entities/MediaTypeEntity.html",[3,0.139,4,0.121,5,0.036,8,0.053,10,0.107,13,1.201,15,0.552,16,0.883,25,2.542,30,0.84,44,0.007,45,0.476,46,0.213,52,1.727,63,0.504,74,0.252,86,0.13,87,2.028,115,0.005,116,0.005,182,2.536,220,5.145,264,1.24,295,1.388,314,1.161,347,1.994,352,1.492,361,3.357,456,1.55,459,2.59,460,2.739,461,2.991,462,3.239,487,1.738,492,2.397,493,3.091,810,2.089,842,2.658,846,2.813,867,3.751,868,3.751,869,3.64,902,4.217,945,3.678,1244,3.179,1357,4,1393,2.457,1486,3.091,1494,3.604,1540,4.886,1629,6.37,1631,4.519,2498,3.751,2502,4.29,2503,4.158,2505,4.035,2541,5.457,2546,3.776,2549,6.855,2550,7,2567,6.032,2576,4.519,2615,5.536,2616,5.536,2617,7.163,2618,5.536,2619,5.536,2620,5.536,2621,5.536,2622,5.536,2623,5.536,2624,5.536,2625,5.536]],["title/interfaces/MessageBus.html",[327,0.653,2626,3.834]],["body/interfaces/MessageBus.html",[3,0.145,4,0.127,5,0.038,8,0.055,15,0.381,23,1.816,30,0.751,43,1.545,44,0.007,45,0.487,46,0.218,47,1.365,50,1.729,74,0.174,86,0.173,115,0.005,116,0.005,144,1.689,174,2.107,181,3.357,184,3.637,314,0.939,327,1.128,329,1.818,451,1.326,760,5.617,778,6.476,823,3.347,1330,4.159,2626,6.018,2627,6.134,2628,6.134,2629,5.149,2630,6.018,2631,6.556,2632,7.214,2633,6.18,2634,7.214,2635,5.149,2636,8.49,2637,8.326,2638,7.703,2639,5.791,2640,7.214,2641,5.149,2642,5.791,2643,7.842,2644,5.149,2645,5.791,2646,4.727,2647,3.949,2648,4.727]],["title/interfaces/MessagesBroker.html",[327,0.653,2649,3.578]],["body/interfaces/MessagesBroker.html",[3,0.142,4,0.124,5,0.037,8,0.081,15,0.372,23,1.789,30,0.743,43,1.501,44,0.007,45,0.481,46,0.206,47,1.35,50,1.71,63,0.559,86,0.133,88,2.645,115,0.005,116,0.005,144,1.664,174,2.115,181,3.986,266,4.729,267,2.813,319,3.035,327,1.01,329,1.776,760,4.309,933,4.356,1260,5.252,1338,4.987,2630,4.617,2633,6.826,2649,5.533,2650,6.449,2651,5.512,2652,5.656,2653,4.617,2654,7.528,2655,7.528,2656,6.459,2657,5.656,2658,5.929,2659,8.462,2660,7.968,2661,6.459,2662,5.656,2663,6.459,2664,6.459,2665,5.656,2666,6.459]],["title/modules/MessagesBrokerModule.html",[511,1.096,2667,3.374]],["body/modules/MessagesBrokerModule.html",[3,0.139,4,0.121,5,0.047,8,0.053,10,0.107,21,3.508,44,0.007,74,0.272,76,1.223,81,1.807,86,0.13,103,1.467,115,0.005,116,0.005,181,3.261,267,1.738,276,2.658,277,4.469,403,1.64,506,2.34,511,2.029,513,2.397,525,1.881,526,1.881,527,1.844,528,1.844,529,1.881,530,2.699,531,1.844,532,2.96,533,1.807,534,2.386,535,1.738,536,1.881,537,1.881,538,1.881,539,1.881,540,1.881,541,1.881,542,1.772,543,1.881,544,1.881,545,1.881,546,1.844,547,2.434,548,1.881,549,1.844,550,1.881,551,1.881,552,1.881,553,1.881,554,1.881,555,1.705,556,1.881,557,1.844,558,1.881,567,3.347,577,3.711,580,3.604,588,3.261,589,2.813,590,3.2,592,3.261,679,3.87,724,3.091,725,3.32,726,3.32,727,3.32,731,5.662,732,4.296,733,3.32,734,3.091,737,4.664,738,4.469,740,3.976,741,3.454,742,3.976,743,3.976,747,4.519,748,3.776,749,3.776,750,3.776,751,4.519,752,3.976,753,4.519,754,4.217,755,4.519,756,4.217,757,4.519,758,4.519,2374,4.886,2650,4.217,2651,3.604,2653,5.847,2667,6.399,2668,4.923,2669,5.536,2670,5.536,2671,6.05,2672,4.519,2673,4.923,2674,5.145,2675,4.923]],["title/injectables/MessagesBrokerService.html",[495,1.475,2674,3.374]],["body/injectables/MessagesBrokerService.html",[3,0.102,4,0.089,5,0.027,8,0.077,10,0.078,13,1.469,15,0.267,16,0.716,18,2.9,23,1.43,24,2.448,25,2.913,30,0.792,43,1.491,44,0.007,45,0.487,46,0.21,47,1.367,50,1.782,58,1.491,63,0.566,74,0.221,76,0.898,86,0.095,88,2.525,89,1.41,93,1.568,98,2.014,103,2.069,115,0.004,116,0.004,137,1.44,149,3.039,174,2.124,181,3.697,182,1.228,183,1.228,212,3.482,219,3.622,265,5.527,266,3.779,267,2.55,277,3.622,319,2.975,327,0.808,495,1.822,497,1.851,506,1.718,522,1.33,738,5.333,856,5.333,933,4.684,1260,4.684,1329,6.028,1338,4.7,2374,2.773,2633,6.187,2649,5.626,2650,6.628,2651,5.664,2653,4.739,2654,6.567,2655,6.567,2656,5.162,2658,4.739,2659,8.022,2660,7.434,2661,5.162,2663,5.162,2664,5.162,2666,5.162,2674,4.17,2676,4.066,2677,6.771,2678,5.805,2679,5.805,2680,4.066,2681,4.066,2682,5.805,2683,4.066,2684,5.805,2685,4.066,2686,7.385,2687,5.805,2688,5.805,2689,5.805,2690,5.805,2691,4.066,2692,5.805,2693,5.805,2694,5.805,2695,4.066,2696,4.066,2697,4.066,2698,4.066,2699,2.92,2700,3.616,2701,2.92,2702,3.616,2703,4.066,2704,4.066,2705,4.066,2706,4.066,2707,4.066,2708,4.066,2709,4.066,2710,4.066,2711,4.066,2712,4.066,2713,4.066,2714,4.066,2715,4.066,2716,4.066,2717,4.066,2718,4.066,2719,4.066]],["title/classes/MsClient.html",[10,0.091,2720,3.834]],["body/classes/MsClient.html",[3,0.089,4,0.184,5,0.023,8,0.071,10,0.069,13,1.142,15,0.234,18,1.825,21,3.235,23,1.296,25,2.368,30,0.685,35,2.454,43,1.442,44,0.007,45,0.444,46,0.198,47,1.494,50,1.755,51,1.312,58,1.063,66,4.057,74,0.252,76,0.785,85,2.551,86,0.083,88,2.682,89,2.403,97,3.283,98,2.174,103,1.96,115,0.004,116,0.004,118,1.013,124,2.938,137,1.863,144,1.587,149,3.874,170,4.008,174,2.171,181,4.332,182,1.073,183,1.073,184,2.795,190,2.706,195,2.899,196,2.899,319,1.183,451,1.886,504,1.983,506,1.501,509,1.86,624,4.008,665,2.216,666,2.053,670,2.938,673,2.312,741,2.216,778,6.899,820,5.045,823,4.947,827,3.322,936,2.899,1325,2.899,1330,2.551,2065,2.312,2164,4.295,2373,4.295,2374,3.589,2626,5.116,2627,5.565,2628,5.565,2632,5.573,2633,4.774,2634,6.579,2635,3.158,2636,7.813,2637,8.179,2638,7.247,2640,5.573,2641,3.158,2643,8.084,2644,3.158,2647,4.726,2648,5.116,2658,4.295,2720,4.295,2721,3.552,2722,4.679,2723,4.679,2724,6.267,2725,6.267,2726,6.162,2727,3.552,2728,3.552,2729,5.262,2730,5.262,2731,3.552,2732,5.262,2733,3.552,2734,3.552,2735,5.262,2736,3.552,2737,5.262,2738,2.706,2739,3.552,2740,3.552,2741,5.262,2742,3.158,2743,3.552,2744,4.008,2745,3.552,2746,2.551,2747,2.551,2748,5.262,2749,6.267,2750,3.552,2751,3.158,2752,3.552,2753,3.552,2754,3.552,2755,6.267,2756,3.552,2757,3.552,2758,3.158,2759,3.552,2760,3.552,2761,4.679,2762,3.552,2763,3.552,2764,3.552,2765,3.552,2766,3.552,2767,3.552,2768,3.552,2769,3.552,2770,3.552]],["title/modules/MsClientModule.html",[511,1.096,2771,3.578]],["body/modules/MsClientModule.html",[3,0.135,4,0.118,5,0.046,8,0.051,10,0.104,21,3.686,44,0.007,45,0.323,74,0.27,76,1.191,81,1.76,86,0.127,98,1.87,103,1.428,115,0.005,116,0.005,267,1.692,403,1.597,451,1.235,506,2.976,511,2.012,513,2.334,525,1.832,526,1.832,527,1.795,528,1.795,529,1.832,530,2.665,531,1.795,532,2.942,533,1.76,534,2.345,535,1.692,536,1.832,537,1.832,538,1.832,539,1.832,540,1.832,541,1.832,542,1.726,543,1.832,544,1.832,545,1.832,546,1.795,547,2.393,548,1.832,549,1.795,550,1.832,551,1.832,552,1.832,553,1.832,554,1.832,555,1.66,556,1.832,557,1.795,558,1.832,567,4.211,577,3.664,580,4.584,588,3.205,589,2.739,592,3.205,679,3.804,724,3.01,725,3.233,726,3.233,727,3.233,732,4.223,733,3.233,734,3.01,737,4.584,740,3.872,741,3.363,742,3.872,743,3.872,748,3.677,750,3.677,752,3.872,823,4.985,2374,4.802,2627,3.872,2628,3.872,2647,5.67,2648,4.4,2720,4.4,2722,6.261,2723,6.261,2726,6.261,2738,4.107,2742,6.261,2758,4.794,2771,6.738,2772,4.794,2773,5.391,2774,5.391,2775,5.391,2776,6.972,2777,6.972,2778,5.391,2779,5.391,2780,5.391,2781,5.391,2782,5.391,2783,5.391,2784,5.391]],["title/classes/MsException.html",[10,0.091,670,2.623]],["body/classes/MsException.html",[3,0.166,4,0.145,5,0.043,8,0.063,10,0.166,18,2.99,30,0.614,43,1.136,44,0.007,45,0.398,46,0.188,47,1.115,63,0.517,74,0.24,85,4.759,86,0.156,115,0.006,116,0.006,118,1.891,137,2.838,181,4.077,184,2.673,218,2.869,314,1.397,352,1.619,499,3.746,510,3.974,664,5.001,665,5.001,669,5.219,670,4.476,2436,7.964,2738,5.047,2744,6.107,2785,6.626,2786,8.016,2787,8.016,2788,9.171,2789,6.626,2790,6.626]],["title/injectables/NotEmptyPipe.html",[495,1.475,2791,4.177]],["body/injectables/NotEmptyPipe.html",[3,0.166,4,0.145,5,0.043,8,0.063,10,0.127,13,1.433,15,0.434,18,2.29,23,1.97,30,0.741,43,1.371,44,0.007,45,0.48,46,0.188,47,1.346,50,1.408,63,0.516,74,0.198,76,1.459,86,0.155,97,4.12,98,2.29,103,1.749,115,0.006,116,0.006,137,2.338,183,2.768,293,5.39,495,2.511,497,3.006,862,3.817,1221,5.456,1333,4.743,1709,7.654,2791,7.114,2792,8.607,2793,6.603,2794,8,2795,8,2796,6.603,2797,6.603,2798,7.114,2799,8,2800,6.603,2801,8,2802,6.603,2803,6.603]],["title/classes/NotFoundMsException.html",[10,0.091,2804,4.177]],["body/classes/NotFoundMsException.html",[3,0.171,4,0.149,5,0.045,8,0.065,10,0.131,30,0.63,43,1.165,44,0.007,45,0.408,46,0.16,47,1.144,59,6.634,63,0.523,74,0.244,76,1.502,86,0.16,115,0.006,116,0.006,118,1.94,137,2.407,181,3.707,184,2.742,499,3.805,663,4.637,664,5.08,665,5.08,666,4.706,668,5.553,669,5.301,670,5.157,671,5.553,672,4.637,673,4.426,674,4.637,2804,7.24,2805,8.142,2806,6.799]],["title/classes/PageableData.html",[10,0.091,1064,2.538]],["body/classes/PageableData.html",[3,0.128,4,0.112,5,0.033,8,0.065,10,0.172,18,2.822,30,0.473,34,5.075,43,1.164,44,0.007,45,0.306,46,0.221,47,1.369,63,0.533,74,0.204,86,0.179,88,2.457,103,1.799,115,0.005,116,0.005,118,1.456,125,3.925,137,2.404,174,1.717,182,2.051,247,3.925,314,1.58,319,2.821,381,3.668,595,4.165,813,3.183,814,2.671,857,1.77,914,6.197,924,2.671,948,4.236,1005,2.756,1008,5.104,1012,4.165,1064,4.395,1082,3.887,1083,5.813,1094,5.172,1098,6.641,1281,4.42,1415,4.411,1468,4.631,1480,4.631,1489,4.165,1826,6.229,2807,4.165,2808,5.102,2809,7.234,2810,7.234,2811,5.102,2812,7.736,2813,6.038,2814,4.537,2815,4.537,2816,6.038,2817,4.537,2818,6.038,2819,6.641,2820,4.537,2821,4.165,2822,4.537,2823,5.172]],["title/classes/PageableParams.html",[10,0.091,1005,2.538]],["body/classes/PageableParams.html",[3,0.124,4,0.108,5,0.032,8,0.047,10,0.17,15,0.325,16,0.82,18,2.785,30,0.776,34,4.146,43,1.139,44,0.007,46,0.224,47,1.528,63,0.545,74,0.199,86,0.176,88,2.426,103,1.76,115,0.005,116,0.005,118,1.41,125,2.856,137,1.749,174,1.495,182,2.426,183,2.007,247,4.341,314,1.549,319,2.501,381,4.339,460,2.531,595,5.424,813,3.082,814,2.587,857,1.714,914,6.575,924,2.587,948,3.082,1005,3.59,1008,5.006,1012,5.424,1064,3.59,1082,5.72,1083,6.384,1094,5.062,1098,5.424,1281,3.216,1415,3.841,1468,3.37,1480,4.532,1489,4.033,1826,5.424,2807,4.033,2809,5.909,2810,5.909,2812,7.493,2813,4.393,2814,4.393,2815,4.393,2816,5.909,2817,4.393,2818,6.677,2819,6.84,2820,4.393,2821,4.033,2822,4.393,2823,5.062,2824,7.509,2825,4.941,2826,4.941,2827,4.941,2828,4.941,2829,4.941,2830,4.941,2831,4.941]],["title/interfaces/ProcessLog.html",[327,0.653,2832,3.578]],["body/interfaces/ProcessLog.html",[3,0.159,4,0.139,5,0.042,8,0.074,15,0.417,16,0.963,44,0.007,46,0.213,52,1.305,63,0.544,74,0.234,86,0.183,115,0.006,116,0.006,121,2.121,122,5.27,123,4.834,147,3.806,178,5.083,179,5.948,187,4.328,194,4.328,203,1.457,240,2.26,314,1.371,327,1.26,329,1.992,352,1.192,359,3.018,826,4.131,1003,4.927,1350,2.601,1351,2.343,2432,4.328,2832,6.443,2833,5.643,2834,6.723,2835,6.339,2836,5.18]],["title/entities/ProcessLogEntity.html",[140,3.058,264,0.733]],["body/entities/ProcessLogEntity.html",[3,0.136,4,0.118,5,0.046,8,0.052,10,0.104,13,1.173,15,0.547,16,0.87,30,0.8,44,0.007,45,0.423,46,0.217,63,0.423,74,0.235,81,1.765,86,0.127,87,2.125,115,0.005,116,0.005,122,4.384,140,4.592,203,1.297,240,2.012,264,1.226,267,1.697,295,1.356,314,1.143,319,2.349,359,2.615,403,1.602,456,1.514,459,2.55,460,2.607,462,2.72,477,2.746,487,1.697,488,3.482,491,2.746,525,1.837,526,1.837,527,1.8,528,1.8,529,1.837,530,2.668,531,1.8,532,2.944,533,1.765,534,2.349,535,1.697,536,1.837,537,1.837,538,1.837,539,1.837,540,1.837,541,1.837,542,1.73,543,1.837,544,1.837,545,1.837,546,1.8,547,2.397,548,1.837,549,1.8,550,1.837,551,1.837,552,1.837,553,1.837,554,1.837,555,1.664,556,1.837,557,1.8,558,1.837,846,2.746,847,4.4,869,3.584,962,4.23,1003,4.384,1036,4.592,1531,4.413,1539,4.413,1633,3.687,1634,4.811,1635,5.676,1637,4.811,2432,4.811,2832,5.373,2834,5.981,2837,5.406,2838,5.406,2839,5.406,2840,5.977,2841,5.406,2842,5.406,2843,5.406,2844,7.053,2845,5.406,2846,7.053,2847,5.406,2848,4.413,2849,5.406]],["title/injectables/ProcessManagerService.html",[142,3.058,495,1.475]],["body/injectables/ProcessManagerService.html",[3,0.066,4,0.057,5,0.017,8,0.077,10,0.051,15,0.172,16,0.513,18,2.234,21,3.011,23,1.025,24,3.276,25,2.575,30,0.78,33,2.406,34,2.597,43,1.379,44,0.007,45,0.483,46,0.192,47,1.353,50,1.865,51,1.913,52,0.856,63,0.544,74,0.252,76,0.579,86,0.061,87,1.906,88,2.509,89,2.79,93,3.102,97,3.232,98,2.234,103,1.977,115,0.003,116,0.003,122,5.373,123,6.003,124,2.324,125,4.866,126,3.398,134,2.839,135,2.99,137,1.474,140,5.543,142,2.71,146,5.686,147,5.247,163,3.171,166,2.839,167,2.597,169,3.171,172,2.324,174,1.543,178,4.859,182,1.783,183,1.257,187,1.786,189,2.137,194,4.026,202,2.137,203,1.188,206,2.137,288,2.324,295,0.657,311,4.229,314,1.166,352,1.786,451,0.953,456,1.166,495,1.307,497,1.192,506,1.107,509,1.371,517,2.632,522,1.352,641,4.905,681,5.479,693,3.171,705,2.324,708,1.881,709,1.371,715,1.414,826,5.006,836,2.115,924,2.179,945,1.718,1003,1.462,1015,3.171,1036,4.682,1063,1.704,1082,4.907,1083,1.994,1143,2.137,1281,2.71,1318,3.398,1387,1.462,1437,2.055,2043,4.607,2056,2.137,2432,4.026,2484,4.497,2649,4.497,2651,2.71,2671,1.994,2672,2.137,2700,2.328,2823,1.994,2834,1.994,2840,3.721,2850,7.571,2851,2.618,2852,5.181,2853,4.162,2854,4.162,2855,4.162,2856,4.162,2857,4.162,2858,5.903,2859,5.903,2860,4.162,2861,3.701,2862,3.701,2863,4.162,2864,4.162,2865,2.618,2866,4.497,2867,4.607,2868,5.181,2869,5.181,2870,4.162,2871,3.701,2872,4.162,2873,2.618,2874,6.442,2875,4.162,2876,2.618,2877,4.162,2878,3.701,2879,4.162,2880,2.618,2881,3.171,2882,4.162,2883,4.162,2884,2.618,2885,4.162,2886,2.618,2887,2.618,2888,5.903,2889,5.249,2890,3.701,2891,2.618,2892,3.701,2893,4.162,2894,2.618,2895,4.162,2896,2.618,2897,4.162,2898,2.618,2899,4.162,2900,2.618,2901,4.162,2902,4.162,2903,4.162,2904,2.618,2905,2.328,2906,1.786,2907,2.328,2908,2.328,2909,3.398,2910,2.137,2911,2.328,2912,2.618,2913,2.618,2914,2.328,2915,2.328,2916,2.618,2917,2.618,2918,4.162,2919,2.618,2920,2.618,2921,2.618,2922,4.162,2923,4.162,2924,7.485,2925,2.328,2926,2.328,2927,4.607,2928,2.328,2929,2.328,2930,2.328,2931,2.328,2932,4.162,2933,5.903,2934,2.618,2935,2.618,2936,2.618,2937,2.618,2938,4.162,2939,5.181,2940,4.162,2941,2.618,2942,4.162,2943,2.618,2944,2.618,2945,2.618,2946,2.618,2947,2.618,2948,2.618,2949,2.618,2950,2.328]],["title/modules/ProcessModule.html",[511,1.096,2951,3.578]],["body/modules/ProcessModule.html",[3,0.127,4,0.111,5,0.044,8,0.048,10,0.098,13,1.102,18,1.76,23,1.25,24,2.446,30,0.47,44,0.007,50,1.082,74,0.277,76,1.122,81,1.657,86,0.119,93,1.957,115,0.005,116,0.005,122,3.778,124,3.778,127,3.866,140,4.405,142,6.134,188,3.866,189,4.143,267,1.593,403,1.504,511,1.972,513,2.198,525,1.725,526,1.725,527,1.69,528,1.69,529,1.725,530,2.587,531,1.69,532,2.899,533,1.657,534,2.254,535,1.593,536,1.725,537,1.725,538,1.725,539,1.725,540,1.725,541,1.725,542,1.625,543,1.725,544,1.725,545,1.725,546,1.69,547,2.299,548,1.725,549,1.69,550,1.725,551,1.725,552,1.725,553,1.725,554,1.725,555,1.563,556,1.725,557,1.69,558,1.725,567,4.064,568,3.166,577,3.162,588,3.465,592,3.465,709,2.657,724,2.834,725,3.044,726,3.044,727,3.044,732,4.058,733,3.044,734,2.834,891,3.304,965,4.86,966,5.523,1036,5.285,1047,6.017,1333,3.646,2651,3.304,2667,6.247,2840,3.646,2905,4.513,2909,4.143,2951,7.246,2952,4.513,2953,4.513,2954,4.513,2955,4.513,2956,6.247,2957,6.626,2958,5.075,2959,6.766,2960,6.766,2961,6.766,2962,6.766,2963,6.766,2964,8.879,2965,6.017,2966,6.766,2967,5.075,2968,5.075,2969,4.143,2970,5.075,2971,5.075,2972,5.075,2973,5.075,2974,5.075,2975,5.075]],["title/injectables/ProcessRegisterService.html",[495,1.475,2957,3.578]],["body/injectables/ProcessRegisterService.html",[3,0.096,4,0.084,5,0.025,8,0.073,10,0.074,15,0.252,18,2.648,21,3.314,23,1.372,24,3.043,25,2.962,30,0.707,43,1.309,44,0.007,45,0.458,46,0.179,47,1.285,50,1.698,51,2.057,60,5.478,74,0.272,76,0.848,86,0.09,87,2.034,88,2.172,89,2.648,93,2.148,98,1.331,103,2.23,115,0.004,116,0.004,122,5.214,124,3.11,127,4.993,134,3.799,135,4,137,1.972,142,4.682,147,2.302,163,4.243,169,4.243,174,2.008,187,2.618,188,2.924,194,2.618,202,5.351,207,4.952,352,1.046,495,1.748,497,1.747,504,2.143,506,1.622,509,2.009,522,1.276,933,3.34,945,3.392,1036,3.626,1063,2.499,1387,2.143,1435,4.959,2056,3.133,2651,3.626,2671,2.924,2672,3.133,2674,5.165,2675,3.413,2835,6.47,2848,3.133,2850,7.082,2861,4.952,2862,4.952,2866,5.478,2867,5.829,2871,5.829,2890,4.952,2906,2.618,2907,3.413,2908,3.413,2909,4.546,2910,3.133,2911,3.413,2914,3.413,2915,3.413,2924,7.485,2925,3.413,2926,7.629,2927,3.413,2928,8.01,2929,3.413,2930,8.074,2931,3.413,2950,3.413,2957,4.243,2969,3.133,2976,3.838,2977,5.569,2978,5.569,2979,5.569,2980,5.569,2981,8.217,2982,3.838,2983,5.569,2984,3.838,2985,5.829,2986,5.569,2987,3.838,2988,5.569,2989,3.838,2990,5.569,2991,3.838,2992,5.569,2993,5.829,2994,5.569,2995,3.838,2996,3.838,2997,3.838,2998,3.838,2999,3.838,3000,3.838,3001,3.838,3002,3.838,3003,3.838,3004,3.838,3005,3.838,3006,3.838,3007,7.964,3008,6.555,3009,6.555,3010,3.838,3011,5.569,3012,3.838,3013,5.569,3014,3.838,3015,3.838,3016,3.838,3017,3.838,3018,3.838,3019,3.838,3020,3.838,3021,3.838,3022,3.838,3023,3.838]],["title/interfaces/ProcessUnit.html",[327,0.653,2835,3.374]],["body/interfaces/ProcessUnit.html",[3,0.156,4,0.136,5,0.041,8,0.086,15,0.409,16,0.951,44,0.007,46,0.219,52,1.723,63,0.558,74,0.231,86,0.181,115,0.006,116,0.006,121,2.101,122,5.029,123,5.872,147,5.254,178,4.046,179,4.734,187,4.239,194,5.715,203,1.026,240,2.178,314,1.007,327,1.253,329,1.951,352,1.645,359,3,826,5.703,1003,3.47,1350,2.918,1351,2.295,2432,5.975,2832,6.674,2833,5.526,2834,4.734,2835,6.018,2836,7.151]],["title/entities/ProcessUnitEntity.html",[264,0.733,2840,3.374]],["body/entities/ProcessUnitEntity.html",[3,0.123,4,0.107,5,0.043,8,0.076,10,0.095,13,1.063,15,0.566,16,0.815,30,0.815,44,0.007,45,0.449,46,0.215,52,1.358,61,2.288,63,0.48,74,0.251,81,1.599,86,0.115,87,2.247,115,0.005,116,0.005,122,2.734,140,5.209,147,4.483,182,2.417,187,3.34,194,4.506,218,2.86,240,1.598,264,1.167,267,1.537,295,1.228,352,1.404,359,2.49,403,1.451,456,1.372,459,2.388,460,2.658,461,2.646,462,3.086,487,2.074,492,2.12,525,1.664,526,1.664,527,1.631,528,1.631,529,1.664,530,2.54,531,1.631,532,2.873,533,1.599,534,2.2,535,1.537,536,1.664,537,1.664,538,1.664,539,1.664,540,1.664,541,1.664,542,1.568,543,1.664,544,1.664,545,1.664,546,1.631,547,2.245,548,1.664,549,1.631,550,1.664,551,1.664,552,1.664,553,1.664,554,1.664,555,1.508,556,1.664,557,1.631,558,1.664,826,4.867,827,2.665,850,4.066,851,2.937,852,4.323,853,2.937,867,3.459,868,3.459,872,2.646,945,2.727,962,3.962,1036,4.301,1393,2.174,1473,3.731,1479,3.997,1480,5.458,1483,3.055,1486,2.734,1496,3.731,1540,3.34,1593,3.997,1594,5.392,1611,5.392,1633,3.34,1634,4.506,1635,4.506,1637,4.506,2432,5.099,2835,4.745,2836,6.102,2840,4.745,2848,3.997,3024,4.897,3025,5.874,3026,4.897,3027,6.606,3028,4.897,3029,4.897,3030,4.897,3031,6.606,3032,4.897,3033,4.897,3034,4.897,3035,4.897,3036,4.897,3037,4.897,3038,4.897,3039,4.897]],["title/injectables/RedisCacheService.html",[495,1.475,745,3.834]],["body/injectables/RedisCacheService.html",[3,0.073,4,0.063,5,0.019,8,0.076,10,0.107,13,0.628,15,0.19,18,1.562,19,3.169,21,3.014,23,1.109,24,3.277,25,1.442,30,0.735,43,1.36,44,0.007,45,0.476,46,0.186,47,1.431,50,1.87,51,1.663,52,1.283,60,5.452,61,3.344,63,0.56,66,3.266,68,3.071,74,0.203,76,0.639,86,0.068,87,2.072,88,2.496,89,2.163,93,2.979,98,1.917,103,2.253,115,0.003,116,0.004,137,1.594,144,2.104,149,4.663,166,4.254,167,4.951,180,4.029,183,2.795,184,1.167,212,4.053,219,4.216,314,1.286,317,3.071,327,0.626,495,1.414,497,1.317,504,1.616,506,1.223,509,1.515,522,1.032,585,6.745,607,3.465,635,6.352,636,6.181,646,4.658,679,2.433,737,2.932,738,5.307,741,1.805,744,2.573,745,3.676,762,4.004,763,4.004,764,4.004,765,4.004,766,4.004,767,4.004,768,4.004,770,4.004,772,4.004,774,4.004,776,4.004,778,5.366,779,4.004,781,4.004,783,2.573,784,5.38,823,3.195,945,3.276,954,3.676,989,3.676,1007,3.925,1041,6.364,1042,5.547,1073,7.652,1344,3.741,1437,2.223,2065,1.884,2203,6.622,2233,5.547,2699,2.078,2701,2.078,2746,2.078,2747,2.078,2761,4.916,2878,6.364,2881,2.204,3040,8.113,3041,2.894,3042,4.503,3043,2.894,3044,2.894,3045,2.894,3046,4.752,3047,4.503,3048,2.894,3049,2.894,3050,2.894,3051,6.758,3052,2.894,3053,6.238,3054,2.894,3055,4.503,3056,4.503,3057,2.894,3058,2.573,3059,2.894,3060,2.894,3061,4.503,3062,4.503,3063,4.503,3064,2.894,3065,2.894,3066,2.894,3067,2.894,3068,2.894,3069,2.894,3070,2.894,3071,2.894,3072,2.894,3073,2.894,3074,2.573,3075,2.894,3076,2.894,3077,2.894,3078,2.894,3079,2.894,3080,2.204]],["title/modules/RedisModule.html",[511,1.096,731,3.058]],["body/modules/RedisModule.html",[3,0.135,4,0.117,5,0.046,8,0.051,10,0.103,21,3.154,23,1.32,24,1.938,25,1.716,30,0.497,43,0.919,44,0.007,45,0.322,46,0.184,47,0.902,50,1.143,61,3.278,63,0.469,74,0.249,76,1.185,81,1.75,86,0.126,89,2.712,98,1.859,103,1.859,115,0.005,116,0.005,267,1.683,276,2.574,314,1.137,403,1.589,451,1.607,506,3.305,511,2.008,513,2.321,517,3.973,524,4.69,525,1.822,526,1.822,527,1.786,528,1.786,529,1.822,530,2.657,531,1.786,532,2.938,533,1.75,534,2.337,535,1.683,536,1.822,537,1.822,538,1.822,539,1.822,540,1.822,541,1.822,542,1.716,543,1.822,544,1.822,545,1.822,546,1.786,547,2.384,548,1.822,549,1.786,550,1.822,551,1.822,552,1.822,553,1.822,554,1.822,555,1.651,556,1.822,557,1.786,558,1.822,577,3.876,580,5.091,588,2.441,589,2.724,592,2.441,679,3.79,731,5.091,738,5.175,742,3.851,743,3.851,748,3.657,749,3.657,750,3.657,752,3.851,754,4.084,756,4.084,793,4.767,794,6.238,795,4.785,801,6.238,823,4.055,827,2.83,1747,4.376,2699,3.851,2701,5.617,3058,4.767,3081,5.361,3082,7.015,3083,5.361,3084,5.361,3085,7.82,3086,5.361,3087,5.361,3088,5.361,3089,5.361,3090,5.361]],["title/classes/Roles.html",[10,0.091,899,2.387]],["body/classes/Roles.html",[3,0.142,4,0.124,5,0.037,8,0.054,10,0.14,15,0.371,16,0.989,18,3.233,30,0.743,34,3.524,35,2.839,41,3.884,42,3.388,44,0.007,45,0.435,46,0.188,58,1.141,63,0.481,71,2.369,84,4.303,85,4.057,86,0.188,89,2.517,115,0.005,116,0.005,118,1.612,121,1.82,175,5.528,182,2.422,183,2.422,311,7.532,500,3.388,517,4.775,609,3.067,620,5.468,625,6.907,666,3.265,670,3.154,811,3.677,899,4.074,923,6.628,948,5.588,1030,4.177,1346,4.477,1455,7.029,2329,4.303,2647,3.852,2744,4.303,3091,5.023,3092,5.023,3093,5.648,3094,5.372,3095,7.257,3096,5.648,3097,5.648,3098,7.257,3099,6.453]],["title/guards/RolesGuard.html",[0,3.374,3100,4.177]],["body/guards/RolesGuard.html",[0,5.372,2,4.834,3,0.149,4,0.13,5,0.039,8,0.057,10,0.144,13,1.285,14,7.657,15,0.389,18,2.054,23,1.842,28,6.651,29,6.56,30,0.693,38,3.8,41,3.319,43,1.282,44,0.007,45,0.449,46,0.176,47,1.258,48,4.254,50,1.262,52,1.538,57,4.834,74,0.276,76,1.309,83,4.512,84,4.512,85,4.254,86,0.139,87,2.094,89,2.987,90,5.266,103,2.281,115,0.005,116,0.005,137,2.097,247,3.423,495,2.348,899,4.165,945,2.445,1333,4.254,3094,4.916,3100,7.289,3101,5.922,3102,6.105,3103,5.922,3104,9.068,3105,5.922,3106,5.922,3107,5.266,3108,5.922,3109,5.922,3110,6.651,3111,5.922,3112,5.922,3113,4.486,3114,5.922,3115,5.922,3116,5.922,3117,5.922,3118,7.479,3119,5.922,3120,5.922,3121,5.266,3122,5.922]],["title/interfaces/TargetData.html",[327,0.653,1392,2.817]],["body/interfaces/TargetData.html",[3,0.079,4,0.069,5,0.021,8,0.067,9,2.368,10,0.126,15,0.207,16,0.592,38,1.598,41,3.116,43,1.36,44,0.007,45,0.506,46,0.207,47,0.529,50,1.641,51,1.162,52,1.886,58,1.676,63,0.562,66,1.647,71,1.902,74,0.238,86,0.201,88,2.69,115,0.004,116,0.003,121,2.146,144,2.111,172,1.756,174,1.867,180,2.305,203,1.271,240,0.761,264,1.492,285,1.818,295,0.789,296,0.968,314,1.387,319,2.171,327,1.229,329,0.987,347,1.141,348,1.329,352,0.902,355,1.7,356,1.24,451,0.721,452,0.915,456,0.881,487,1.829,502,1.699,511,0.734,522,1.1,607,3.178,609,2.03,633,1.756,696,1.756,702,2.514,705,2.681,715,3.147,810,1.187,814,1.647,836,3.312,838,2.594,901,3.05,910,1.756,920,2.776,924,1.647,949,1.699,1005,3.147,1007,3.312,1009,1.887,1030,1.553,1040,1.699,1064,2.594,1065,1.887,1220,1.598,1243,1.887,1244,1.396,1336,1.818,1337,1.887,1338,1.699,1339,1.887,1340,1.699,1341,1.962,1342,1.887,1343,1.962,1344,1.887,1345,1.887,1346,1.756,1348,4.544,1349,1.756,1350,2.764,1351,1.162,1352,1.887,1353,4.401,1354,1.818,1355,1.647,1356,1.887,1357,1.756,1358,2.88,1359,1.887,1360,4.702,1361,1.887,1362,1.756,1363,4.588,1364,1.647,1365,2.681,1366,1.887,1367,1.887,1368,1.887,1369,1.887,1370,1.818,1371,1.818,1372,1.887,1373,1.887,1374,1.887,1375,1.887,1376,1.887,1377,1.887,1378,1.887,1379,1.887,1380,1.887,1381,1.887,1382,1.887,1383,1.887,1384,1.887,1385,3.367,1386,1.887,1387,2.681,1388,2.776,1389,1.962,1390,2.776,1391,1.699,1392,3.493,1393,2.893,1394,4.067,1395,2.88,1396,5.061,1397,2.514,1398,1.962,1399,1.962,1400,1.962,1401,1.962,1402,1.887,1403,1.887,1404,1.818,1405,1.962,1406,1.962,1407,1.818,1408,1.887,1409,1.647,1410,1.818,1411,1.962,1412,1.887,1413,1.962,1414,1.962,1415,2.776,1416,1.887,1417,5.178,1418,4.617,1419,4.38,1420,1.962,1421,1.887,1422,2.88,1423,1.962,1424,1.962,1425,3.634,1426,1.887,1427,1.962,1428,1.699,1429,2.996,1430,1.962,1431,1.962,1432,1.962,1433,1.962,1434,1.962,1435,1.818,1436,1.887,1437,1.553,1438,1.962,1439,1.962,1440,1.962]],["title/classes/TmpDirCleanerProcess.html",[10,0.091,3123,4.177]],["body/classes/TmpDirCleanerProcess.html",[3,0.094,4,0.082,5,0.042,8,0.072,9,2.154,10,0.124,15,0.245,16,0.673,17,5.526,18,2.825,19,4.139,21,3.492,23,1.344,24,3.364,25,2.772,30,0.837,34,3.404,43,1.294,44,0.007,45,0.453,46,0.203,47,1.327,49,3.046,50,1.87,51,1.378,58,1.102,63,0.473,74,0.255,76,0.825,86,0.088,87,1.394,88,1.127,89,2.461,93,3.042,98,1.294,103,1.446,115,0.004,116,0.004,117,7.43,118,1.065,122,5.045,126,4.454,127,5.752,128,5.793,129,5.736,130,4.852,131,5.736,132,5.736,133,4.852,134,4.399,135,4.633,136,4.852,137,1.932,140,2.429,142,4.915,146,4.914,147,5.009,148,3.318,149,3.715,151,4.914,152,4.914,153,5.736,154,3.318,155,5.736,156,5.736,157,5.736,158,3.318,159,3.318,161,3.318,163,4.157,164,3.318,166,2.545,167,2.328,169,2.843,170,2.843,172,2.084,173,3.318,174,1.597,175,5.406,177,3.318,178,4.62,179,2.843,180,1.791,181,2.936,182,1.648,183,1.127,184,1.505,185,2.084,186,4.852,188,2.843,212,2.238,216,3.318,314,1.15,317,3.722,499,2.55,504,2.084,506,1.577,509,1.954,510,2.238,571,2.545,573,2.545,609,2.306,641,2.545,646,1.791,691,6.053,795,3.722,862,3.154,968,2.488,992,5.379,1053,4.157,1063,2.429,1117,2.843,1143,3.046,1178,5.406,1204,2.843,1239,4.852,1268,2.843,1294,3.318,1302,3.318,1436,3.273,1718,3.046,3123,4.852,3124,6.45,3125,3.732,3126,5.457,3127,5.793,3128,5.457,3129,3.732,3130,3.732,3131,3.732,3132,3.732,3133,3.732,3134,5.457,3135,5.457,3136,5.457,3137,3.732,3138,5.457,3139,6.45,3140,5.457,3141,7.097,3142,7.097,3143,7.097,3144,4.454,3145,3.732,3146,3.732,3147,3.732,3148,3.732,3149,3.732,3150,3.732,3151,3.732,3152,3.732,3153,3.732,3154,3.732,3155,3.732,3156,3.732,3157,3.732,3158,3.732,3159,3.732,3160,3.732,3161,3.732,3162,5.457,3163,3.732,3164,3.732,3165,3.732,3166,3.732,3167,3.732,3168,3.732,3169,3.732]],["title/classes/TooManyRequestsMsException.html",[10,0.091,3170,4.177]],["body/classes/TooManyRequestsMsException.html",[3,0.168,4,0.146,5,0.044,8,0.064,10,0.129,30,0.619,43,1.145,44,0.007,45,0.401,46,0.157,47,1.124,63,0.519,74,0.242,76,1.477,86,0.157,115,0.006,116,0.006,118,1.907,137,2.366,181,3.668,184,2.696,212,4.008,499,3.765,510,4.008,663,4.558,664,5.027,665,5.027,666,4.658,668,6.27,669,5.246,670,5.133,671,5.496,672,4.558,673,4.35,674,4.558,3170,7.165,3171,8.058,3172,9.193,3173,6.683,3174,5.942,3175,6.683,3176,6.683,3177,6.683]],["title/classes/UnauthorizedMsException.html",[10,0.091,3178,4.177]],["body/classes/UnauthorizedMsException.html",[3,0.171,4,0.149,5,0.045,8,0.065,10,0.131,30,0.631,35,2.411,43,1.167,44,0.007,45,0.409,46,0.16,47,1.146,63,0.523,74,0.244,76,1.505,86,0.16,115,0.006,116,0.006,118,1.943,137,2.411,181,3.71,184,2.747,499,3.809,663,4.645,664,5.085,665,5.085,666,4.711,668,5.559,669,5.306,670,5.16,671,5.559,672,4.645,673,4.434,674,4.645,2298,6.056,3178,7.248,3179,8.15,3180,8.722]],["title/interfaces/UpsertMediaRequest.html",[327,0.653,2508,2.538]],["body/interfaces/UpsertMediaRequest.html",[3,0.102,4,0.089,5,0.056,8,0.039,9,2.517,10,0.168,13,1.601,15,0.267,16,0.715,25,1.856,35,2.052,44,0.007,45,0.529,46,0.222,47,1.366,52,1.669,58,1.687,63,0.58,74,0.234,86,0.212,115,0.004,116,0.004,121,2.143,144,1.957,174,1.66,203,1.289,240,1.402,292,3.852,296,1.249,314,1.535,327,1.265,329,1.274,332,1.82,347,2.241,352,1.721,355,2.052,358,2.928,359,1.931,361,2.45,373,3.046,374,3.046,451,0.929,452,1.18,522,1.328,804,2.976,845,1.715,857,1.407,968,2.236,1273,3.359,1350,2.783,1351,1.498,1450,4.153,1645,2.003,1653,2.003,1655,2.061,1657,2.061,1661,2.061,1663,2.061,1667,2.061,2496,2.192,2497,3.863,2498,3.863,2499,2.709,2500,2.265,2501,2.192,2502,3.132,2503,3.035,2504,3.541,2505,2.945,2506,3.863,2507,3.237,2508,3.132,2509,4.119,2510,4.119,2511,3.132,2512,4.216,2513,2.192,2514,3.132,2515,2.124,2516,2.265,2517,2.265,2518,2.265,2519,2.265,2520,2.265,2521,2.265,2522,1.948,2523,2.124]],["title/interfaces/User.html",[71,1.534,327,0.653]],["body/interfaces/User.html",[3,0.12,4,0.104,5,0.031,8,0.045,9,2.493,10,0.169,13,1.407,15,0.313,16,0.8,22,2.575,35,1.687,44,0.007,45,0.389,46,0.222,52,1.627,58,1.598,63,0.59,71,3.081,74,0.248,86,0.205,115,0.005,116,0.005,121,2.076,144,1.896,174,1.459,203,1.41,240,2.065,276,3.973,288,2.661,291,3.973,296,1.467,297,2.575,298,2.858,327,1.215,329,1.496,347,1.966,348,2.014,352,1.218,359,2.91,451,1.092,452,1.386,522,1.486,569,2.661,690,3.103,694,3.103,697,3.103,699,3.103,703,3.103,714,5.164,804,2.616,857,1.653,899,4.205,1350,2.455,1351,1.76,1450,4.015,1451,2.755,2367,5.164,2499,3.698,3094,3.89,3113,4.964,3181,3.103,3182,5.164,3183,5.389,3184,5.389,3185,5.389,3186,4.799,3187,3.103,3188,2.973]],["title/classes/UserDto.html",[10,0.091,1451,2.715]],["body/classes/UserDto.html",[3,0.115,4,0.1,5,0.03,8,0.044,9,2.465,10,0.167,13,1.565,15,0.301,16,0.777,22,2.469,30,0.846,35,1.618,44,0.007,45,0.378,46,0.22,52,1.483,58,1.57,63,0.583,71,3.063,74,0.245,86,0.203,115,0.005,116,0.005,118,1.304,121,1.95,144,1.868,174,1.623,203,1.347,240,1.972,276,3.732,288,2.552,291,3.732,296,1.407,297,2.469,298,2.741,327,1.173,347,1.847,348,1.932,352,1.184,359,2.808,451,1.047,452,1.329,460,2.759,522,1.444,569,2.552,690,2.975,694,2.975,697,2.975,699,2.975,703,2.975,714,4.851,804,2.909,857,1.585,899,3.95,1350,2.402,1351,1.688,1450,4.141,1451,3.643,2303,3.283,2367,4.851,2499,3.94,3094,3.78,3113,4.326,3181,2.975,3182,4.851,3183,5.062,3184,5.062,3185,5.062,3186,5.062,3187,2.975,3188,2.851,3189,4.57,3190,4.57,3191,4.57,3192,4.57,3193,4.57,3194,4.57,3195,4.57,3196,4.57,3197,4.57,3198,4.57,3199,4.57]],["title/entities/UserEntity.html",[264,0.733,297,2.538]],["body/entities/UserEntity.html",[3,0.113,4,0.099,5,0.041,8,0.043,10,0.121,13,0.98,15,0.577,16,0.771,30,0.844,44,0.007,45,0.504,46,0.219,52,1.285,63,0.559,71,2.341,74,0.232,81,1.475,86,0.106,87,2.347,115,0.004,116,0.004,182,1.888,203,1.184,240,1.512,264,1.119,267,1.418,276,3.441,291,3.441,295,1.133,297,3.377,319,2.082,359,2.388,403,1.339,456,1.265,459,2.26,460,2.753,461,3.873,462,3.571,487,1.962,488,3.539,492,3.638,525,1.535,526,1.535,527,1.505,528,1.505,529,1.535,530,2.436,531,1.505,532,2.812,533,1.475,534,2.082,535,1.418,536,1.535,537,1.535,538,1.535,539,1.535,540,1.535,541,1.535,542,1.446,543,1.535,544,1.535,545,1.535,546,1.505,547,2.125,548,1.535,549,1.505,550,1.535,551,1.535,552,1.535,553,1.535,554,1.535,555,1.391,556,1.535,557,1.505,558,1.535,707,3.441,714,4.472,810,2.705,842,2.169,843,2.611,845,3.27,846,2.295,847,3.9,865,4.762,867,3.273,868,3.273,869,3.176,899,3.642,901,4.05,902,3.441,910,2.522,945,3.468,962,3.749,1496,3.441,1540,3.081,1612,3.688,1633,3.081,1634,4.264,1635,4.264,1637,4.264,1640,5.103,1643,3.688,2367,4.472,3182,4.472,3183,4.667,3184,4.667,3185,4.667,3200,4.518,3201,4.762,3202,4.518,3203,4.518,3204,4.518,3205,6.252,3206,4.518,3207,4.518,3208,6.252,3209,4.518,3210,4.518,3211,4.518,3212,4.518,3213,4.518,3214,4.518,3215,4.518]],["title/injectables/UserEntityPwdAndRolesSaveHandler.html",[495,1.475,3216,4.177]],["body/injectables/UserEntityPwdAndRolesSaveHandler.html",[3,0.157,4,0.137,5,0.041,8,0.06,10,0.121,13,1.36,15,0.412,23,1.908,30,0.58,43,1.074,44,0.007,45,0.376,46,0.147,47,1.054,50,1.335,63,0.505,71,3.119,74,0.263,76,1.384,86,0.147,103,1.66,115,0.006,116,0.006,264,1.209,266,5.043,317,5.735,456,2.169,495,2.432,497,2.852,557,2.58,605,6.31,899,4.272,1336,4.478,1338,4.185,1339,4.646,1345,4.646,1346,4.695,1348,3.007,1355,3.28,1482,4.078,3121,5.571,3216,6.888,3217,7.746,3218,7.746,3219,7.746,3220,6.264,3221,7.746,3222,6.888,3223,7.746,3224,6.264,3225,6.264,3226,6.264,3227,6.264,3228,6.264,3229,6.264,3230,6.264,3231,6.264]],["title/modules/UserModule.html",[511,1.096,569,2.623]],["body/modules/UserModule.html",[3,0.144,4,0.126,5,0.048,8,0.055,10,0.111,22,4.37,23,1.418,30,0.533,43,0.987,44,0.007,45,0.345,46,0.135,47,0.969,50,1.227,71,1.879,74,0.264,76,1.272,81,1.879,86,0.135,103,1.525,115,0.005,116,0.005,124,4.101,182,1.739,183,1.739,267,1.807,297,3.11,298,3.452,403,1.706,451,1.683,511,2.053,513,2.492,517,3.732,518,4.782,519,3.748,522,1.853,524,4.852,525,1.956,526,1.956,527,1.917,528,1.917,529,1.956,530,2.749,531,1.917,532,2.987,533,1.879,534,2.446,535,1.807,536,1.956,537,1.956,538,1.956,539,1.956,540,1.956,541,1.956,542,1.843,543,1.956,544,1.956,545,1.956,546,1.917,547,2.496,548,1.956,549,1.917,550,1.956,551,1.956,552,1.956,553,1.956,554,1.956,555,1.772,556,1.956,557,1.917,558,1.956,569,4.517,577,2.69,588,2.621,589,2.925,590,3.328,591,4.135,592,2.621,676,6.603,707,4.385,709,3.014,891,3.748,962,4.405,965,5.276,3188,5.316,3201,5.596,3232,5.756,3233,5.756,3234,5.756,3235,5.756]],["title/interfaces/UserRole.html",[327,0.653,3113,2.817]],["body/interfaces/UserRole.html",[3,0.128,4,0.112,5,0.034,8,0.049,9,2.539,10,0.172,13,1.476,15,0.336,16,0.839,22,2.764,35,1.811,44,0.007,45,0.509,46,0.209,52,1.398,58,1.543,63,0.584,71,3.095,74,0.254,86,0.209,115,0.005,116,0.005,121,2.126,144,1.942,174,1.53,203,1.262,240,2.108,276,3.265,288,2.856,291,3.265,296,1.575,297,2.764,298,3.068,327,1.237,329,1.606,347,1.815,348,2.162,352,1.593,359,2.963,451,1.172,452,1.487,522,1.558,569,2.856,690,3.33,694,3.33,697,3.33,699,3.33,703,3.33,714,4.243,804,2.744,857,1.774,899,3.456,1350,2.824,1351,1.889,1450,4.06,1451,2.957,2367,4.243,2499,3.806,3094,4.583,3113,4.884,3181,3.33,3182,4.243,3183,4.428,3184,4.428,3185,4.428,3186,4.975,3187,3.33,3188,3.191]],["title/classes/UserRoleDto.html",[10,0.091,3186,3.058]],["body/classes/UserRoleDto.html",[3,0.126,4,0.11,5,0.033,8,0.048,9,2.529,10,0.171,13,1.645,15,0.331,16,0.83,22,2.721,30,0.702,35,1.783,44,0.007,45,0.486,46,0.208,52,1.384,58,1.634,63,0.582,71,3.089,74,0.253,86,0.208,115,0.005,116,0.005,118,1.437,121,2.03,144,1.932,174,1.706,203,1.252,240,2.04,276,3.231,288,2.812,291,3.231,296,1.551,297,2.721,298,3.02,327,1.207,347,1.801,348,2.129,352,1.52,359,2.89,451,1.154,452,1.464,460,2.29,522,1.542,569,2.812,690,3.279,694,3.279,697,3.279,699,3.279,703,3.279,714,4.199,804,3.058,857,1.747,899,3.42,1350,2.696,1351,1.86,1450,4.096,1451,2.911,2367,4.199,2499,3.941,3094,4.547,3113,4.854,3181,3.279,3182,4.199,3183,4.382,3184,4.382,3185,4.382,3186,5.269,3187,3.279,3188,3.142,3236,5.036,3237,5.036,3238,5.036]],["title/entities/UserRoleEntity.html",[264,0.733,901,2.459]],["body/entities/UserRoleEntity.html",[3,0.143,4,0.124,5,0.048,8,0.054,10,0.11,13,1.233,15,0.558,16,0.898,30,0.745,44,0.007,45,0.509,46,0.206,63,0.437,74,0.241,81,1.855,86,0.133,87,1.86,115,0.005,116,0.005,240,1.761,264,1.255,267,1.783,295,1.425,352,1.51,359,2.678,403,1.683,456,1.591,459,2.633,460,2.428,525,1.931,526,1.931,527,1.892,528,1.892,529,1.931,530,2.732,531,1.892,532,2.978,533,1.855,534,2.426,535,1.783,536,1.931,537,1.931,538,1.931,539,1.931,540,1.931,541,1.931,542,1.819,543,1.931,544,1.931,545,1.931,546,1.892,547,2.475,548,1.931,549,1.892,550,1.931,551,1.931,552,1.931,553,1.931,554,1.931,555,1.749,556,1.931,557,1.892,558,1.931,707,4.328,810,2.144,842,2.727,850,4.308,851,3.407,852,3.935,853,3.407,867,3.813,868,3.813,872,3.069,899,3.701,901,3.813,962,4.368,1393,2.521,1483,3.544,1486,3.172,1494,3.698,1633,3.875,1634,4.968,1635,4.968,1637,4.968,3113,4.368,3201,5.549,3239,8.48,3240,5.681,3241,5.681,3242,5.681,3243,5.681,3244,5.681]],["title/classes/UserService.html",[10,0.091,22,2.538]],["body/classes/UserService.html",[3,0.117,4,0.102,5,0.031,8,0.044,9,2.718,10,0.171,13,1.387,15,0.307,22,3.452,23,1.574,30,0.761,35,1.651,43,1.408,44,0.007,45,0.521,46,0.211,47,1.382,50,1.751,52,1.314,58,1.472,63,0.585,71,3.137,74,0.246,86,0.204,115,0.005,116,0.005,118,1.331,121,2.06,144,2.08,174,1.438,203,1.401,240,1.896,276,3.067,288,2.604,291,3.499,296,1.436,297,2.519,298,2.797,327,1.18,347,1.731,348,1.971,352,1.2,359,2.612,451,1.068,452,1.356,522,1.67,569,2.604,682,4.868,683,5.682,684,5.682,685,5.682,686,5.682,690,4.16,694,4.16,697,4.16,699,4.16,703,4.16,714,3.986,804,2.577,857,1.617,899,3.246,1350,2.428,1351,1.722,1450,4.001,1451,2.696,2367,3.986,2499,3.664,3094,3.832,3113,4.372,3181,3.036,3182,3.986,3183,4.16,3184,4.16,3185,4.16,3186,4.745,3187,3.036,3188,2.909,3245,4.663,3246,4.663,3247,4.663,3248,4.663,3249,4.663]],["title/classes/UserSubscriber.html",[10,0.091,3250,4.177]],["body/classes/UserSubscriber.html",[3,0.146,4,0.128,5,0.038,8,0.056,9,1.662,10,0.112,13,1.606,15,0.383,16,0.913,17,4.879,18,2.821,23,1.823,24,3.265,30,0.793,43,1.269,44,0.007,45,0.444,46,0.207,47,1.245,50,1.734,65,4.617,71,1.902,74,0.257,86,0.137,93,3.301,103,1.543,115,0.005,116,0.005,118,1.662,170,5.638,182,1.759,183,1.759,261,6.041,264,1.155,268,6.986,275,6.581,276,3.553,282,7.611,283,7.611,286,5.638,287,6.041,288,4.132,291,3.553,294,5.18,295,1.461,297,4.878,499,2.722,1340,3.998,2380,7.234,2381,6.581,3250,6.581,3251,5.825,3252,8.135,3253,6.581,3254,7.401,3255,7.401,3256,8.559,3257,5.825,3258,7.401,3259,5.825,3260,7.401,3261,5.825,3262,5.825,3263,5.825,3264,7.401,3265,7.401,3266,5.825]],["title/interfaces/UserUpdateRequest.html",[327,0.653,3187,3.058]],["body/interfaces/UserUpdateRequest.html",[3,0.129,4,0.113,5,0.034,8,0.049,9,2.543,10,0.172,13,1.484,15,0.339,16,0.843,22,2.785,35,2.421,44,0.007,45,0.41,46,0.205,52,1.406,58,1.549,63,0.584,71,3.152,74,0.255,86,0.209,115,0.005,116,0.005,121,2.132,144,1.947,174,1.538,203,1.443,240,1.976,276,3.282,288,3.817,291,3.282,296,1.587,297,2.785,298,3.092,327,1.24,329,1.619,347,1.822,348,2.179,352,1.284,359,2.721,451,1.181,452,1.499,522,1.566,569,2.879,690,3.357,694,3.357,697,3.357,699,3.357,703,3.357,714,4.266,804,2.758,857,1.788,899,3.474,1350,2.555,1351,1.904,1450,4.065,1451,2.98,2367,4.266,2499,3.817,3094,4.101,3113,4.601,3181,3.357,3182,4.266,3183,4.451,3184,4.451,3185,4.451,3186,4.994,3187,4.451,3188,3.217]],["title/interfaces/VideoFileMetadata.html",[327,0.653,371,2.817]],["body/interfaces/VideoFileMetadata.html",[3,0.098,4,0.086,5,0.058,8,0.037,10,0.128,15,0.257,16,0.696,44,0.007,45,0.235,46,0.215,52,0.804,63,0.599,74,0.199,86,0.202,115,0.004,116,0.004,121,2.162,203,1.464,240,1.602,279,2.184,296,1.204,314,1.575,327,1.29,328,3.386,329,1.228,330,2.44,331,3.264,332,2.706,333,2.44,334,2.44,335,4.614,336,4.614,337,2.44,338,4.614,339,4.447,340,2.44,341,2.44,342,2.44,343,2.44,344,2.346,345,2.44,346,2.44,347,1.574,348,1.653,349,3.05,350,2.956,351,2.261,352,0.735,353,1.736,354,1.987,355,1.385,356,1.542,357,2.346,358,2.445,359,1.303,360,2.44,361,1.653,362,3.386,363,3.386,364,3.386,365,3.386,366,2.956,367,3.386,368,3.522,369,3.676,370,3.83,371,3.974,372,2.44,373,3.176,374,3.176,375,2.44,376,2.44,377,2.44,378,2.44,379,2.44,380,2.44,381,2.113,382,2.44,383,2.44,384,2.44,385,2.44,386,2.44,387,2.44,388,2.44,389,2.44,390,2.44,391,2.44,392,2.44,393,2.44,394,2.44,395,2.44,396,2.44,397,2.44,398,2.44,399,2.546,400,2.546,401,2.546,402,2.546,403,1.159,404,2.546,405,2.546,406,2.546,407,2.546,408,2.546,409,2.546,410,2.546,411,2.546,412,2.546,413,2.546,414,2.546,415,2.546,416,2.546,417,2.546,418,2.546,419,2.546,420,2.546,421,2.546,422,2.546,423,4.8,424,2.546,425,2.546,426,2.546,427,2.546,428,2.546,429,2.546,430,2.546,431,2.546,432,2.546,433,2.546,434,2.546,435,2.546,436,2.546,437,2.546,438,2.546,439,2.546,440,2.546,441,2.546,442,2.546,443,2.44,444,2.44,445,2.44,446,4.526,447,4.526,448,4.526,449,4.526,450,4.526,451,0.896,452,1.137,453,2.048,454,2.346]],["title/entities/VideoFileMetadataEntity.html",[264,0.733,1686,3.578]],["body/entities/VideoFileMetadataEntity.html",[3,0.112,4,0.098,5,0.062,8,0.043,10,0.086,13,0.968,15,0.611,16,0.764,30,0.856,44,0.007,45,0.54,46,0.217,61,3.328,63,0.564,74,0.186,86,0.105,87,2.47,115,0.004,116,0.004,182,2.528,203,1.176,218,3.083,264,1.112,295,1.119,314,1.459,326,4.227,332,1.945,335,4.271,336,4.271,338,4.271,339,4.116,370,3.582,371,3.717,373,2.939,374,2.939,423,4.443,446,4.443,447,4.443,448,4.443,449,4.443,450,4.443,456,1.249,458,3.042,459,2.24,460,2.791,461,4.728,462,3.716,463,3.641,464,3.967,465,4.443,466,3.398,467,3.398,470,3.398,471,3.641,472,5.058,473,5.058,474,5.058,475,3.967,477,2.266,478,3.204,481,3.398,483,3.204,484,3.967,486,3.967,487,1.4,488,3.059,489,2.491,491,2.266,492,3.789,493,3.976,494,3.641,1686,4.721,3267,9.299,3268,6.197,3269,6.197,3270,6.197,3271,4.461,3272,6.197,3273,6.197,3274,4.461,3275,4.461]],["title/modules/WarlockModule.html",[511,1.096,2956,3.374]],["body/modules/WarlockModule.html",[3,0.128,4,0.111,5,0.044,8,0.049,10,0.098,21,3.414,24,1.84,44,0.007,63,0.305,74,0.277,76,1.124,81,1.661,86,0.12,89,1.765,93,1.963,103,2.019,115,0.005,116,0.005,144,1.166,267,1.597,276,2.443,277,4.229,312,3.313,403,1.508,506,2.865,511,1.974,513,2.203,525,1.729,526,1.729,527,1.695,528,1.695,529,1.729,530,2.59,531,1.695,532,2.901,533,1.661,534,2.257,535,1.597,536,1.729,537,1.729,538,1.729,539,1.729,540,1.729,541,1.729,542,1.629,543,1.729,544,1.729,545,1.729,546,1.695,547,2.303,548,1.729,549,1.695,550,1.729,551,1.729,552,1.729,553,1.729,554,1.729,555,1.567,556,1.729,557,1.695,558,1.729,567,3.167,577,3.561,580,4.413,588,3.086,589,2.585,592,3.086,679,3.662,724,2.841,725,3.052,726,3.052,727,3.052,731,5.51,732,4.065,733,3.052,734,2.841,737,4.413,738,5.28,740,3.655,741,3.175,742,3.655,743,3.655,747,4.154,748,3.471,749,3.471,750,3.471,751,4.154,752,3.655,753,4.154,754,3.876,755,4.154,756,3.876,757,4.154,758,4.154,823,2.942,1260,4.065,2065,4.413,2673,4.525,2699,3.655,2701,4.868,2702,4.525,2866,5.163,2906,5.937,2956,6.252,3276,5.089,3277,5.089,3278,5.089,3279,6.027,3280,6.027,3281,3.655,3282,5.089,3283,5.089,3284,6.778,3285,5.089,3286,5.089,3287,5.089,3288,5.089,3289,5.089,3290,6.778,3291,5.089,3292,5.089,3293,7.621]],["title/classes/XdbExportService.html",[10,0.091,3294,3.374]],["body/classes/XdbExportService.html",[3,0.094,4,0.082,5,0.036,8,0.036,9,2.473,10,0.146,15,0.247,23,1.348,24,1.98,30,0.347,33,2.168,43,0.643,44,0.007,45,0.225,46,0.088,47,0.631,50,1.739,51,1.385,52,1.126,53,2.339,58,1.436,61,3.023,63,0.225,74,0.227,86,0.206,87,1.817,88,2.285,89,3.255,98,1.899,103,2.296,115,0.004,116,0.004,118,1.07,121,0.94,125,3.739,144,1.81,149,1.963,151,2.856,174,1.919,183,1.133,295,0.94,312,3.565,607,1.548,609,1.585,646,1.8,702,1.963,811,2.441,820,4.266,836,1.905,886,4.927,923,3.933,933,3.284,945,2.936,949,3.843,999,2.856,1003,3.057,1029,4.171,1032,4.171,1040,2.026,1244,2.871,1260,4.537,1273,3.238,1287,5.109,1348,2.629,1349,3.611,1364,2.867,1391,3.494,1409,4.271,1428,2.958,1437,3.734,1710,4.47,2038,2.557,2065,4.211,2746,2.693,2747,2.693,3080,2.856,3281,2.693,3294,3.933,3295,3.565,3296,3.565,3297,3.061,3298,5.783,3299,5.476,3300,4.869,3301,5.418,3302,3.75,3303,4.171,3304,6.018,3305,2.856,3306,6.215,3307,4.171,3308,3.061,3309,4.47,3310,6.691,3311,3.334,3312,2.693,3313,3.334,3314,3.334,3315,3.061,3316,3.061,3317,3.334,3318,4.47,3319,3.061,3320,3.061,3321,3.061,3322,3.061,3323,3.334,3324,3.334,3325,3.334,3326,3.334,3327,3.334,3328,5.418,3329,3.334,3330,3.334,3331,4.869,3332,3.334,3333,3.334,3334,3.334,3335,3.334,3336,5.28,3337,4.47,3338,3.334,3339,3.334,3340,3.334,3341,4.869,3342,4.869,3343,3.334,3344,3.334,3345,3.334,3346,3.334,3347,3.334,3348,3.334,3349,3.334,3350,3.334,3351,3.334,3352,3.334,3353,3.334,3354,3.334,3355,3.334,3356,3.334,3357,3.334,3358,3.334,3359,3.334,3360,3.334,3361,3.334,3362,3.334,3363,3.334,3364,4.869,3365,4.869,3366,6.325,3367,3.334,3368,6.727,3369,3.334,3370,3.334,3371,4.869,3372,3.334,3373,3.334,3374,3.334,3375,3.334,3376,3.334,3377,3.334,3378,3.334,3379,3.334]],["title/classes/XdbImportService.html",[10,0.091,3312,3.374]],["body/classes/XdbImportService.html",[3,0.092,4,0.08,5,0.035,8,0.035,9,2.524,10,0.145,15,0.241,23,1.328,24,1.95,30,0.5,33,2.123,43,0.924,44,0.007,45,0.324,46,0.127,47,0.907,50,1.772,51,1.356,52,1.109,53,2.291,58,1.422,61,2.986,63,0.22,74,0.235,86,0.203,87,1.799,88,2.266,89,3.246,98,1.87,103,2.285,115,0.004,116,0.004,118,1.048,121,0.921,125,3.694,144,1.857,149,1.923,151,2.797,174,1.967,183,1.109,295,0.921,312,3.511,607,1.516,609,1.552,646,1.763,702,1.923,811,2.391,820,4.224,886,4.868,923,3.873,933,3.234,945,2.907,949,3.805,999,2.797,1003,3.011,1029,4.108,1032,4.108,1040,1.984,1244,2.836,1260,4.499,1273,3.57,1287,5.058,1348,2.589,1349,3.568,1364,2.823,1391,3.452,1409,4.243,1428,2.913,1437,3.703,1710,4.402,2038,2.505,2065,4.16,2746,2.638,2747,2.638,3080,2.797,3281,2.638,3294,2.638,3295,4.16,3296,4.16,3297,2.997,3298,5.816,3300,3.265,3301,4.108,3303,4.108,3304,5.974,3305,2.797,3306,6.463,3307,4.108,3308,2.997,3309,4.402,3310,6.661,3311,3.265,3312,3.873,3313,4.795,3314,4.795,3315,2.997,3316,2.997,3317,3.265,3318,4.402,3319,2.997,3320,2.997,3321,2.997,3322,2.997,3323,3.265,3324,3.265,3325,3.265,3326,3.265,3327,3.265,3328,5.365,3329,3.265,3330,3.265,3331,4.795,3332,3.265,3333,3.265,3334,3.265,3335,3.265,3336,5.216,3337,4.402,3338,3.265,3339,3.265,3340,3.265,3341,4.795,3342,4.795,3343,3.265,3344,3.265,3345,3.265,3346,3.265,3347,3.265,3348,3.265,3349,3.265,3350,3.265,3351,3.265,3352,3.265,3353,3.265,3354,3.265,3355,3.265,3356,3.265,3357,3.265,3358,3.265,3359,3.265,3360,3.265,3361,3.265,3362,3.265,3363,3.265,3364,4.795,3365,4.795,3366,6.262,3367,3.265,3368,6.67,3369,3.265,3370,3.265,3371,4.795,3372,3.265,3373,3.265,3374,3.265,3375,3.265,3376,3.265,3377,3.265,3378,3.265,3379,3.265,3380,5.392,3381,5.392,3382,3.672,3383,3.672,3384,3.672]],["title/interfaces/XdbRequest.html",[327,0.653,3385,4.177]],["body/interfaces/XdbRequest.html",[3,0.116,4,0.101,5,0.055,8,0.044,10,0.14,15,0.303,16,0.782,35,2.244,43,0.79,44,0.007,45,0.38,46,0.227,52,1.303,58,0.931,63,0.583,71,2.365,74,0.253,86,0.218,115,0.005,116,0.005,121,2.294,144,1.056,174,2.132,183,1.914,203,1.351,264,0.719,295,1.156,296,1.419,314,0.747,327,1.008,329,1.447,332,1.447,347,1.505,352,1.19,353,2.045,354,2.341,451,1.056,452,1.34,524,3.801,577,2.153,646,3.042,701,3,920,2.664,969,3.51,1002,3.762,1003,2.573,1287,3.31,1319,3.762,1348,4.058,1349,3.539,1355,2.413,1391,3.424,1409,2.413,1428,4.215,1437,3.576,2017,4.098,2798,4.098,3294,3.31,3295,3,3296,3,3298,6.004,3301,3.51,3303,4.828,3304,3.51,3305,3.51,3306,3.51,3307,3.51,3312,3.31,3336,3.762,3337,5.173,3385,5.636,3386,4.098,3387,6.968,3388,4.608,3389,4.608,3390,6.338,3391,4.608,3392,4.608,3393,3.762,3394,6.442,3395,4.608,3396,4.098,3397,4.608,3398,4.098,3399,4.098,3400,4.608,3401,3.31,3402,3.762,3403,4.098,3404,4.098,3405,4.608,3406,4.608,3407,4.098]],["title/injectables/XmlDataBridgeMiddleware.html",[495,1.475,3408,4.177]],["body/injectables/XmlDataBridgeMiddleware.html",[3,0.127,4,0.111,5,0.033,8,0.072,10,0.097,13,1.096,15,0.332,16,0.832,18,2.633,23,1.66,24,2.745,25,2.78,30,0.703,35,3.391,43,1.156,44,0.007,45,0.405,46,0.178,47,1.134,50,1.618,57,6.613,58,1.791,74,0.228,76,1.116,81,1.649,86,0.119,88,2.447,93,1.947,98,1.751,103,1.338,115,0.005,116,0.005,144,1.856,174,2.155,182,1.525,183,1.525,495,2.117,497,2.299,535,2.117,607,2.783,668,4.599,820,3.028,822,5.923,939,6.613,1029,6.172,1032,5.137,1260,4.044,1325,7.238,2065,4.39,2746,3.627,2747,3.627,2751,4.49,3074,5.996,3080,3.846,3295,5.274,3296,5.274,3298,5.939,3310,5.783,3315,4.122,3318,5.504,3328,5.137,3393,4.122,3408,5.996,3409,5.049,3410,6.743,3411,6.743,3412,6.743,3413,6.743,3414,5.049,3415,6.743,3416,8.102,3417,5.049,3418,6.743,3419,6.743,3420,6.743,3421,5.049,3422,6.743,3423,5.049,3424,5.049,3425,6.743,3426,5.049,3427,5.049,3428,5.049,3429,5.049,3430,5.049]],["title/modules/XmlDataBridgeModule.html",[511,1.096,3401,3.374]],["body/modules/XmlDataBridgeModule.html",[3,0.131,4,0.114,5,0.045,8,0.05,10,0.101,23,1.285,30,0.483,43,0.894,44,0.007,45,0.313,46,0.123,47,0.878,50,1.112,74,0.282,76,1.153,81,1.704,86,0.181,103,1.382,115,0.005,116,0.005,174,2.042,182,1.576,183,1.576,267,1.638,403,1.546,451,1.579,453,2.732,511,1.991,513,2.259,517,3.501,518,4.487,519,3.397,524,4.628,525,1.773,526,1.773,527,1.738,528,1.738,529,1.773,530,2.622,531,1.738,532,2.919,533,1.704,534,2.295,535,1.638,536,1.773,537,1.773,538,1.773,539,1.773,540,1.773,541,1.773,542,1.67,543,1.773,544,1.773,545,1.773,546,1.738,547,2.342,548,1.773,549,1.738,550,1.773,551,1.773,552,1.773,553,1.773,554,1.773,555,1.607,556,1.773,557,1.738,558,1.773,565,4.461,566,3.559,567,3.606,568,3.255,577,3.606,588,2.375,589,3.501,590,3.984,592,2.375,827,2.78,965,4.95,1550,3.975,2522,2.505,2606,4.64,2607,6.128,3294,5.543,3295,4.487,3296,4.487,3298,5.707,3308,4.259,3312,5.543,3387,5.25,3393,4.259,3401,5.543,3402,6.7,3403,6.128,3404,6.128,3431,5.218,3432,5.218,3433,7.717,3434,7.717,3435,6.892,3436,6.892,3437,5.218,3438,5.218,3439,5.218,3440,5.218,3441,5.218,3442,5.218,3443,5.218]],["title/dependencies.html",[724,3.156,3444,3.484]],["body/dependencies.html",[5,0.041,10,0.15,44,0.007,46,0.149,58,1.277,76,1.398,115,0.006,116,0.006,247,4.882,278,5.625,279,3.532,295,1.586,326,6.174,332,2.446,517,3.214,560,5.625,562,5.625,724,3.532,738,3.946,813,3.946,857,2.194,1330,4.543,1714,5.625,1715,5.625,1716,6.929,2169,5.625,2219,5.625,2222,5.625,2235,7.51,2480,6.929,2484,6.434,2699,4.543,2738,4.818,2906,4.314,2969,5.163,3107,5.625,3281,4.543,3309,5.163,3445,6.325,3446,6.325,3447,6.325,3448,7.792,3449,6.325,3450,6.361,3451,6.325,3452,6.325,3453,6.325,3454,6.325,3455,6.325,3456,6.325,3457,6.325,3458,5.625,3459,8.446,3460,6.325,3461,7.51,3462,6.325,3463,6.325,3464,6.325,3465,6.325,3466,6.325,3467,6.325,3468,6.325]],["title/miscellaneous/enumerations.html",[3469,2.672,3470,5.027]],["body/miscellaneous/enumerations.html",[15,0.435,44,0.007,115,0.006,116,0.006,122,4.471,128,6.537,134,4.511,135,4.751,147,4.803,149,4.193,178,5.607,183,2.952,197,7.121,223,7.121,1094,6.101,1480,5.875,2424,7.121,2428,7.121,2429,7.121,2807,5.399,2819,6.537,2823,6.101,2889,5.882,2892,7.121,2910,6.537,2985,5.882,2993,5.882,3469,4.511,3470,5.882,3471,7.659,3472,6.615,3473,5.882,3474,8.008,3475,6.615,3476,6.615,3477,6.615,3478,6.615,3479,6.615,3480,6.615]],["title/index.html",[15,0.258,2881,2.984,3481,3.484]],["body/index.html",[44,0.006,115,0.006,116,0.006,3482,6.844]],["title/license.html",[532,1.279,2881,2.984,3481,3.484]],["body/license.html",[4,0.182,5,0.05,8,0.026,10,0.054,30,0.257,33,3.523,38,1.409,44,0.005,45,0.261,58,1.42,60,5.355,68,2.97,74,0.083,81,1.422,115,0.003,116,0.003,185,3.698,206,2.263,240,0.67,247,1.603,264,1.251,267,0.87,277,1.73,285,1.603,286,2.112,292,1.369,329,0.87,344,1.663,347,0.658,352,1.01,397,1.73,403,1.29,456,0.776,502,4.231,522,0.635,525,2.822,526,0.942,527,0.923,528,0.923,529,0.942,530,2.662,531,2.03,532,3.072,533,1.756,534,1.791,535,2.516,536,1.828,537,0.942,538,0.942,539,1.828,540,0.942,541,2.071,542,1.951,543,1.828,544,1.828,545,1.828,546,2.03,547,1.828,548,1.48,549,2.206,550,1.828,551,2.862,552,1.48,553,1.48,554,0.942,555,0.854,556,0.942,557,1.791,558,0.942,589,1.409,597,2.465,604,4.757,606,1.891,647,2.97,652,2.263,679,2.353,734,1.548,788,7.681,804,1.118,807,1.991,820,1.663,827,1.118,950,5.419,965,1.991,968,2.074,1002,4.39,1003,1.548,1008,1.548,1089,2.465,1100,2.465,1241,3.873,1252,2.263,1288,2.465,1332,2.465,1340,4.776,1357,1.548,1397,1.452,1426,1.663,1454,3.292,1460,2.112,1468,1.891,1469,2.112,1490,3.128,1587,7.49,1594,2.263,1645,1.369,2028,2.465,2211,5.419,2248,2.465,2630,3.555,2646,3.555,2821,3.555,3025,2.465,3092,2.465,3102,4.974,3174,3.873,3222,2.465,3461,2.465,3483,2.772,3484,2.772,3485,2.772,3486,7.832,3487,6.094,3488,6.623,3489,2.772,3490,8.618,3491,8.014,3492,2.772,3493,2.772,3494,2.772,3495,8.014,3496,6.623,3497,3.873,3498,2.772,3499,6.623,3500,2.772,3501,2.772,3502,2.772,3503,2.263,3504,6.094,3505,4.355,3506,2.772,3507,5.378,3508,4.355,3509,4.355,3510,2.772,3511,2.772,3512,4.355,3513,2.772,3514,2.772,3515,2.772,3516,2.772,3517,2.772,3518,2.772,3519,2.772,3520,5.378,3521,2.772,3522,4.355,3523,2.772,3524,2.772,3525,7.03,3526,6.094,3527,5.378,3528,2.772,3529,2.772,3530,2.772,3531,2.772,3532,2.772,3533,5.378,3534,2.772,3535,7.832,3536,4.355,3537,4.355,3538,2.772,3539,8.84,3540,8.9,3541,2.772,3542,2.772,3543,2.772,3544,2.772,3545,2.772,3546,4.355,3547,3.873,3548,2.772,3549,2.772,3550,2.772,3551,2.772,3552,2.772,3553,6.094,3554,6.623,3555,2.772,3556,4.355,3557,6.094,3558,4.355,3559,2.772,3560,6.623,3561,4.355,3562,2.772,3563,2.772,3564,5.378,3565,2.772,3566,2.772,3567,2.772,3568,4.355,3569,2.772,3570,2.772,3571,5.378,3572,2.772,3573,2.772,3574,5.378,3575,2.772,3576,2.772,3577,2.772,3578,8.014,3579,2.772,3580,2.772,3581,4.355,3582,6.771,3583,5.378,3584,4.355,3585,4.355,3586,4.355,3587,4.355,3588,4.355,3589,5.378,3590,4.355,3591,5.378,3592,4.355,3593,4.355,3594,4.355,3595,4.355,3596,2.772,3597,4.355,3598,2.772,3599,2.772,3600,6.623,3601,7.352,3602,4.355,3603,4.355,3604,4.355,3605,2.772,3606,5.378,3607,4.355,3608,2.772,3609,2.772,3610,2.772,3611,5.378,3612,2.772,3613,2.772,3614,2.772,3615,4.355,3616,2.772,3617,2.772,3618,2.772,3619,2.772,3620,2.772,3621,2.772,3622,2.772,3623,4.355,3624,2.772,3625,2.772,3626,2.772,3627,2.772,3628,2.772,3629,2.772,3630,2.772,3631,5.378,3632,2.772,3633,2.772,3634,2.772,3635,2.772,3636,2.772,3637,7.615,3638,2.772,3639,2.772,3640,2.772,3641,6.094,3642,4.355,3643,6.094,3644,2.772,3645,2.772,3646,2.772,3647,2.772,3648,2.772,3649,2.772,3650,2.772,3651,4.355,3652,4.355,3653,2.772,3654,2.772,3655,2.772,3656,4.355,3657,4.355,3658,2.772,3659,2.772,3660,2.772,3661,2.772,3662,2.772,3663,2.772,3664,2.772,3665,5.378,3666,2.772,3667,2.772,3668,2.772,3669,2.772,3670,2.772,3671,2.772,3672,2.772,3673,2.772,3674,2.772,3675,4.355,3676,2.772,3677,2.772,3678,2.772,3679,2.772,3680,2.772,3681,2.772,3682,2.772,3683,2.772,3684,2.772,3685,2.772,3686,6.094,3687,4.355,3688,2.772,3689,2.772,3690,2.772,3691,2.772,3692,2.772,3693,2.772,3694,4.355,3695,2.772,3696,2.772,3697,2.772,3698,6.623,3699,2.772,3700,2.772,3701,2.772,3702,2.772,3703,2.772,3704,2.772,3705,2.772,3706,2.772,3707,6.623,3708,2.772,3709,2.772,3710,2.772,3711,2.772,3712,2.772,3713,2.772,3714,2.772,3715,2.772,3716,2.772,3717,2.772,3718,2.772,3719,2.772,3720,2.772,3721,2.772,3722,2.772,3723,2.772,3724,2.772,3725,5.378,3726,2.772,3727,2.772,3728,2.772,3729,2.465,3730,2.772,3731,4.355,3732,2.772,3733,2.772,3734,2.772,3735,2.772,3736,2.772,3737,2.772,3738,2.772,3739,2.772,3740,2.772,3741,2.772,3742,2.772,3743,2.772,3744,2.772,3745,2.772,3746,2.772,3747,2.772,3748,4.355,3749,4.355,3750,2.772,3751,2.772,3752,2.772,3753,2.772,3754,2.772,3755,2.772,3756,2.772,3757,2.772,3758,2.772,3759,2.772]],["title/modules.html",[513,2.781]],["body/modules.html",[44,0.006,115,0.006,116,0.006,453,3.505,512,5.464,513,2.898,565,3.87,567,3.128,569,3.737,731,4.358,786,5.464,879,5.099,955,4.808,1468,6.545,1550,5.099,2323,5.099,2522,3.213,2667,4.808,2771,5.099,2951,5.099,2956,4.808,3401,4.808,3729,8.476,3760,9.596,3761,9.847,3762,9.532,3763,8.476]],["title/overview.html",[3764,5.71]],["body/overview.html",[2,4.741,19,4.344,44,0.007,115,0.005,116,0.005,118,1.657,142,5.968,329,1.823,456,1.627,497,2.644,511,1.355,513,2.515,565,5.364,567,4.284,588,2.644,592,2.644,724,3.243,725,3.483,726,3.483,727,3.483,728,5.164,729,5.164,730,5.164,731,5.747,732,4.43,733,3.483,734,3.243,879,6.984,880,5.164,882,5.164,883,5.164,884,6.984,955,6.729,956,5.164,958,5.164,959,5.164,960,6.585,2323,6.724,2324,5.164,2325,5.164,2326,5.164,2327,6.984,2667,6.34,2668,5.164,2771,6.513,2772,5.164,2951,7.309,2952,5.164,2953,5.164,2954,5.164,2955,5.164,2956,6.34,2957,6.188,3458,5.164,3764,5.164,3765,5.808,3766,5.808,3767,5.808,3768,5.808,3769,5.808]],["title/properties.html",[16,0.697,3444,3.484]],["body/properties.html",[8,0.082,16,0.922,44,0.007,115,0.006,116,0.006,527,2.49,528,2.49,531,2.49,532,2.441,533,2.441,534,2.49,3482,6.648,3770,7.476,3771,7.476]],["title/miscellaneous/typealiases.html",[3469,2.672,3772,5.653]],["body/miscellaneous/typealiases.html",[5,0.032,12,2.93,15,0.321,43,1.28,44,0.006,46,0.232,51,1.804,52,1.004,58,1.332,63,0.293,86,0.155,115,0.005,116,0.005,121,2.363,174,2.185,183,1.475,240,1.181,264,1.166,314,0.792,330,3.048,347,1.16,451,2.048,452,2.557,453,2.558,454,3.955,487,1.533,500,2.93,511,1.741,520,4.737,569,2.727,696,2.727,789,3.682,790,5.024,795,6.566,803,3.987,822,3.332,823,3.812,824,3.987,825,4.737,1260,3.955,1319,3.987,1337,2.93,1353,4.061,1356,2.93,1357,2.727,1358,3.955,1359,2.93,1391,2.639,1395,2.93,1396,3.955,1397,2.558,1402,2.93,1403,3.955,1404,3.812,1418,2.93,1428,4.319,1442,3.721,2496,2.639,2522,2.345,2523,3.453,2627,3.509,2628,3.509,2629,5.864,2638,5.383,2646,5.383,2647,3.332,2866,5.024,2906,3.332,3181,3.18,3188,4.114,3279,4.344,3280,4.344,3295,3.18,3296,3.18,3298,5.899,3301,5.024,3303,5.024,3304,5.024,3305,5.024,3306,5.024,3307,5.024,3386,8.218,3387,6.903,3394,5.864,3396,4.344,3398,5.864,3399,5.864,3401,3.509,3402,5.383,3407,4.344,3469,3.332,3773,4.885,3774,4.885,3775,6.595,3776,7.994,3777,4.885,3778,8.145,3779,4.885,3780,4.344,3781,4.885,3782,6.595,3783,4.344,3784,4.885,3785,4.344,3786,4.885]],["title/miscellaneous/variables.html",[1000,4.614,3469,2.672]],["body/miscellaneous/variables.html",[4,0.051,5,0.047,8,0.036,15,0.154,16,0.914,21,2.234,24,0.848,29,2.902,34,2.376,35,2.435,36,3.387,38,1.191,41,3.18,42,4.98,44,0.007,45,0.457,46,0.22,48,1.684,51,2.045,58,1.318,63,0.551,69,1.599,71,1.571,77,3.109,78,3.109,79,3.109,84,2.902,89,2.264,93,2.136,98,0.813,103,1.898,115,0.003,116,0.003,121,0.955,125,1.355,149,1.994,174,1.787,181,2.19,182,2.89,183,2.893,212,1.406,218,1.015,219,1.463,220,1.684,264,0.751,287,1.914,291,2.659,292,1.88,312,2.48,314,0.38,332,0.736,347,1.633,352,0.44,356,2.402,361,0.991,456,1.551,487,0.736,500,5.038,501,1.914,511,0.547,522,0.537,533,0.765,546,0.781,573,1.599,593,2.085,609,2.033,610,3.455,615,1.684,620,4.69,623,2.902,624,2.902,625,3.109,626,2.085,627,3.387,628,2.085,629,3.387,630,2.736,631,2.085,632,3.387,633,3.644,634,2.598,635,4.887,636,3.978,637,2.085,638,3.387,639,2.085,640,3.927,641,3.281,642,1.914,643,3.387,644,2.085,645,3.455,646,3.133,647,1.599,648,3.387,649,2.085,650,3.387,651,2.085,652,3.109,653,3.109,655,3.387,656,2.085,657,1.684,658,1.684,659,3.387,660,2.085,664,3.001,666,1.355,670,1.309,710,3.387,715,3.871,734,1.309,738,1.463,748,1.599,749,2.598,760,2.902,778,2.736,789,2.127,811,2.48,823,2.202,827,2.457,833,1.786,856,2.376,857,0.813,858,2.598,899,3.095,923,3.455,934,3.387,948,3.001,953,3.109,955,1.684,960,1.684,966,1.914,968,2.517,992,1.599,1000,3.109,1003,2.127,1015,2.902,1018,2.085,1023,1.684,1024,2.085,1030,2.734,1031,2.085,1036,1.526,1048,2.085,1054,3.387,1055,3.387,1056,3.387,1057,3.387,1058,3.387,1059,3.387,1060,3.387,1068,2.902,1220,1.935,1238,2.085,1244,1.041,1252,1.914,1253,3.387,1254,2.085,1255,3.387,1256,2.085,1257,2.085,1260,1.406,1287,2.736,1290,2.085,1317,2.085,1329,3.109,1338,1.267,1340,1.267,1346,3.401,1348,2.659,1362,2.686,1364,2.519,1370,1.355,1371,1.355,1397,1.228,1409,1.228,1435,1.355,1437,2.734,1558,1.914,1653,1.157,2038,2.598,2223,3.387,2249,3.109,2329,1.786,2418,1.786,2477,2.085,2503,1.228,2505,1.191,2552,3.387,2627,1.684,2628,1.684,2631,2.085,2647,2.598,2650,1.786,2651,1.526,2671,2.902,2674,1.684,2701,2.736,2744,2.902,2776,3.387,2777,3.387,2812,1.914,2906,3.281,2965,2.085,3091,2.085,3094,1.406,3099,4.925,3102,3.109,3110,3.387,3182,1.463,3281,1.684,3295,2.48,3296,2.48,3297,4.521,3298,3.132,3310,3.665,3316,3.109,3319,1.914,3320,1.914,3321,1.914,3322,3.109,3328,2.902,3387,2.902,3469,1.599,3471,2.085,3473,2.085,3547,4.925,3582,2.085,3763,4.925,3778,4.925,3780,3.387,3783,5.417,3785,2.085,3787,7.79,3788,2.345,3789,3.809,3790,3.809,3791,4.81,3792,3.809,3793,3.809,3794,2.345,3795,2.345,3796,6.877,3797,2.345,3798,3.809,3799,3.809,3800,6.877,3801,3.809,3802,3.809,3803,2.345,3804,4.81,3805,3.809,3806,2.345,3807,3.809,3808,2.345,3809,3.809,3810,3.809,3811,2.345,3812,3.809,3813,4.81,3814,3.809,3815,2.345,3816,3.809,3817,2.345,3818,3.809,3819,3.809,3820,3.809,3821,3.809,3822,3.809,3823,4.81,3824,2.345,3825,2.345,3826,2.345,3827,3.809,3828,3.809,3829,2.345,3830,4.81,3831,3.809,3832,2.345,3833,2.345,3834,2.345,3835,2.345,3836,2.345,3837,2.345,3838,2.345,3839,2.345,3840,2.345,3841,2.345,3842,2.345,3843,2.345,3844,2.345,3845,6.092,3846,6.092,3847,6.092,3848,6.092,3849,6.092,3850,6.092,3851,6.527,3852,2.345,3853,2.345,3854,1.914,3855,2.345,3856,2.345,3857,2.345,3858,2.345,3859,1.786,3860,3.809,3861,3.809,3862,2.345,3863,2.345,3864,2.345,3865,2.345,3866,2.345,3867,2.345,3868,2.345,3869,2.345,3870,2.345,3871,2.345,3872,2.345,3873,2.345,3874,2.345,3875,6.527,3876,2.345,3877,3.809,3878,4.81,3879,4.81,3880,2.345,3881,2.345,3882,3.809,3883,3.809,3884,3.809,3885,3.809,3886,3.809,3887,3.809,3888,3.809,3889,3.809,3890,3.809,3891,3.809,3892,3.809,3893,3.809,3894,3.809,3895,4.81,3896,4.81,3897,4.81,3898,4.81,3899,2.345,3900,2.345,3901,2.345,3902,2.345,3903,2.345,3904,1.914,3905,2.345,3906,2.345,3907,2.345,3908,2.345,3909,2.345,3910,2.345,3911,2.345,3912,2.345,3913,2.345,3914,2.345,3915,2.345,3916,2.345,3917,2.345,3918,6.527,3919,2.345,3920,2.345,3921,2.345,3922,2.345,3923,2.345,3924,2.345,3925,2.345,3926,3.809,3927,2.345,3928,2.345,3929,2.345,3930,2.345,3931,2.345,3932,2.345,3933,2.345,3934,2.345,3935,2.345,3936,2.345,3937,2.345,3938,2.345,3939,2.345,3940,2.345,3941,2.345,3942,2.345,3943,2.345,3944,2.345,3945,2.345]],["title/additional-documentation/properties.html",[16,0.483,185,2.187,1008,2.187]],["body/additional-documentation/properties.html",[5,0.061,8,0.08,16,1.033,44,0.006,46,0.197,63,0.503,69,4.866,115,0.006,116,0.006,347,1.694,353,3.718,517,4.256,647,4.866,827,3.702,968,3.231,1023,5.124,1068,5.435,1454,4.526,3127,5.824,3144,5.824,3503,5.824,3854,5.824,3859,5.435,3904,5.824,3946,6.344,3947,6.344,3948,6.344,3949,6.344,3950,6.344]],["title/additional-documentation/properties/kp.properties.html",[185,2.187,1008,2.187,3859,2.984]],["body/additional-documentation/properties/kp.properties.html",[5,0.061,8,0.08,16,1.033,44,0.006,46,0.197,63,0.503,69,4.866,115,0.006,116,0.006,347,1.694,353,3.718,517,4.256,647,4.866,827,3.702,968,3.231,1023,5.124,1068,5.435,1454,4.526,3127,5.824,3144,5.824,3503,5.824,3854,5.824,3859,5.435,3904,5.824,3946,6.344,3947,6.344,3948,6.344,3949,6.344,3950,6.344]],["title/additional-documentation/properties/auth.properties.html",[185,2.187,1008,2.187,3951,3.484]],["body/additional-documentation/properties/auth.properties.html",[5,0.045,8,0.084,12,4.128,41,3.64,42,5.44,44,0.006,46,0.206,63,0.413,73,5.339,115,0.006,116,0.006,247,3.979,277,4.294,288,3.843,314,1.33,326,4.694,500,4.128,582,5.618,594,7.293,611,4.944,634,5.594,646,3.304,827,3.308,856,4.294,897,4.694,1443,4.294,1454,4.733,3046,6.248,3951,6.12,3952,6.883,3953,6.883,3954,6.883,3955,6.883,3956,6.883,3957,8.202,3958,8.761,3959,6.248,3960,5.618,3961,6.883,3962,6.883,3963,6.883,3964,6.883,3965,6.883]],["title/additional-documentation/properties/bruteforce.properties.html",[185,2.187,1008,2.187,3966,3.484]],["body/additional-documentation/properties/bruteforce.properties.html",[5,0.045,8,0.084,44,0.006,46,0.206,52,1.425,68,4.728,71,2.689,87,1.77,115,0.006,116,0.006,291,3.328,314,1.474,339,4.007,640,7.173,641,5.994,642,6.723,653,6.723,827,3.322,897,4.728,924,4.312,1443,4.325,1454,4.748,2484,5.28,3046,5.28,3253,6.164,3450,5.658,3959,5.28,3960,5.658,3966,6.164,3967,6.932,3968,6.932,3969,6.932,3970,6.932,3971,6.932,3972,6.932,3973,6.932,3974,6.932,3975,8.236,3976,6.932,3977,7.324]],["title/additional-documentation/properties/captcha.properties.html",[185,2.187,1008,2.187,3978,3.484]],["body/additional-documentation/properties/captcha.properties.html",[5,0.052,8,0.09,44,0.006,46,0.223,52,1.637,53,4.085,63,0.548,73,4.263,87,1.672,115,0.006,116,0.006,182,1.978,314,1.061,353,2.906,354,3.327,500,5.143,582,5.345,646,3.821,784,4.263,789,5.301,819,4.703,826,4.263,827,3.211,897,4.466,1291,5.345,1443,4.085,1454,5.082,2156,7.078,2157,7.078,2159,5.345,2188,7.078,2203,5.345,2205,7.078,2206,5.823,3046,4.988,3450,5.345,3959,4.988,3960,5.345,3977,7.078,3978,5.823,3979,6.548,3980,6.548,3981,6.548,3982,6.548,3983,6.548,3984,6.548,3985,6.548,3986,6.548,3987,6.548,3988,7.959,3989,6.548]],["title/additional-documentation/properties/file.properties.html",[185,2.187,1008,2.187,3990,3.484]],["body/additional-documentation/properties/file.properties.html",[5,0.048,8,0.081,25,2.335,44,0.006,46,0.199,63,0.438,69,4.975,115,0.006,116,0.006,314,1.182,353,3.767,354,3.706,827,3.423,897,4.975,968,3.565,1443,4.551,1454,4.585,2038,5.789,3990,6.486,3991,7.294,3992,7.294,3993,7.294,3994,7.294]],["title/additional-documentation/properties/media.properties.html",[185,2.187,1008,2.187,3995,3.484]],["body/additional-documentation/properties/media.properties.html",[5,0.046,8,0.079,25,2.819,44,0.006,46,0.194,63,0.496,115,0.006,116,0.006,124,3.891,347,2.24,354,4.475,827,3.333,897,4.753,968,3.397,992,6.212,1003,4.613,1240,6.197,1443,4.348,1454,4.464,2038,6.007,3201,6.294,3497,6.197,3959,6.294,3995,6.197,3996,6.969,3997,6.969,3998,8.262,3999,8.262,4000,6.969,4001,6.969,4002,6.969]]],"invertedIndex":[["",{"_index":44,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["0",{"_index":862,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"injectables/FileMetadataService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/NotEmptyPipe.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["0.0.1",{"_index":3770,"title":{},"body":{"properties.html":{}}}],["0.14",{"_index":3452,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":3464,"title":{},"body":{"dependencies.html":{}}}],["0.3",{"_index":3467,"title":{},"body":{"dependencies.html":{}}}],["0.33",{"_index":3466,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":3448,"title":{},"body":{"dependencies.html":{}}}],["0.6",{"_index":3468,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":247,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"classes/LogService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"guards/RolesGuard.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["10",{"_index":326,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"dependencies.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["10000",{"_index":3285,"title":{},"body":{"modules/WarlockModule.html":{}}}],["15",{"_index":473,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["16",{"_index":3454,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":3765,"title":{},"body":{"overview.html":{}}}],["19",{"_index":3455,"title":{},"body":{"dependencies.html":{}}}],["192.168.0.1",{"_index":1457,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["2",{"_index":3458,"title":{},"body":{"dependencies.html":{},"overview.html":{}}}],["2).join",{"_index":2486,"title":{},"body":{"classes/LogService.html":{}}}],["2.0",{"_index":534,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["2.11",{"_index":3451,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":2818,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["2004",{"_index":3484,"title":{},"body":{"license.html":{}}}],["2023",{"_index":526,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["22",{"_index":3767,"title":{},"body":{"overview.html":{}}}],["256",{"_index":1272,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["27",{"_index":3766,"title":{},"body":{"overview.html":{}}}],["3",{"_index":2484,"title":{},"body":{"classes/LogService.html":{},"injectables/ProcessManagerService.html":{},"dependencies.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["300",{"_index":3977,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["30px",{"_index":2262,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["34",{"_index":3769,"title":{},"body":{"overview.html":{}}}],["3600",{"_index":3962,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["4",{"_index":2480,"title":{},"body":{"classes/LogService.html":{},"dependencies.html":{}}}],["43",{"_index":3768,"title":{},"body":{"overview.html":{}}}],["5",{"_index":3450,"title":{},"body":{"dependencies.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["50",{"_index":2248,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"license.html":{}}}],["502",{"_index":1225,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["6",{"_index":3965,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["600",{"_index":3958,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["7",{"_index":2235,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"dependencies.html":{}}}],["78",{"_index":3869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":3856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":3461,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["9]*$/.test(variablename",{"_index":1155,"title":{},"body":{"injectables/ConfigService.html":{}}}],["9_",{"_index":304,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["_a",{"_index":1153,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a.localecompare(b",{"_index":1097,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a[sort",{"_index":1091,"title":{},"body":{"injectables/ConfigService.html":{}}}],["abc123456",{"_index":3988,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["abortable",{"_index":1250,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["above",{"_index":3668,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":9,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"classes/AuthService.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/LiteAuthGuard.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["abstractauthguard",{"_index":1,"title":{"guards/AbstractAuthGuard.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["abstractprocess",{"_index":117,"title":{"classes/AbstractProcess.html":{}},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:140",{"_index":3147,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:148",{"_index":3148,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:157",{"_index":3146,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:165",{"_index":3145,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:173",{"_index":3149,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:31",{"_index":3130,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:32",{"_index":3132,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:33",{"_index":3131,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:42",{"_index":3133,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:44",{"_index":3150,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:80",{"_index":3151,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:94",{"_index":3152,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractusersubscriber",{"_index":261,"title":{"classes/AbstractUserSubscriber.html":{}},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["acceptance",{"_index":3728,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":3725,"title":{},"body":{"license.html":{}}}],["access",{"_index":41,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/JwtDto.html":{},"injectables/LocaleSubscriber.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["access_token",{"_index":637,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["access_token_error_msg",{"_index":77,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["accessible",{"_index":3998,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["accesstoken",{"_index":620,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["act",{"_index":3735,"title":{},"body":{"license.html":{}}}],["acting",{"_index":3501,"title":{},"body":{"license.html":{}}}],["action",{"_index":1391,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["action.entity",{"_index":1613,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["action.entity.ts",{"_index":1467,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:36",{"_index":1474,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:40",{"_index":1476,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:44",{"_index":1475,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:53",{"_index":1481,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:60",{"_index":1477,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:63",{"_index":1478,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action?.$?.content",{"_index":3335,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["action?.$?.read",{"_index":3334,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["action?.$?.target",{"_index":3333,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["action[\"#name",{"_index":3332,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["actions",{"_index":1364,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["actions.description",{"_index":3897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.description.lang",{"_index":3898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.name",{"_index":3895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.name.lang",{"_index":3896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["active",{"_index":714,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["acts",{"_index":3705,"title":{},"body":{"license.html":{}}}],["add",{"_index":3657,"title":{},"body":{"license.html":{}}}],["addendum",{"_index":3659,"title":{},"body":{"license.html":{}}}],["additional",{"_index":185,"title":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{},"classes/TmpDirCleanerProcess.html":{},"license.html":{}}}],["additions",{"_index":3555,"title":{},"body":{"license.html":{}}}],["address",{"_index":657,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["addresses",{"_index":631,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["adm",{"_index":3446,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":1455,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{}}}],["administrative",{"_index":3095,"title":{},"body":{"classes/Roles.html":{}}}],["advised",{"_index":3723,"title":{},"body":{"license.html":{}}}],["afterremove",{"_index":2370,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["afterremove(event",{"_index":2376,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["again",{"_index":3176,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["against",{"_index":68,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/RedisCacheService.html":{},"license.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["agree",{"_index":3738,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":545,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["agreement",{"_index":3673,"title":{},"body":{"license.html":{}}}],["album",{"_index":333,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["alexander",{"_index":527,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["alias",{"_index":1588,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["aliases",{"_index":3773,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alleging",{"_index":3620,"title":{},"body":{"license.html":{}}}],["allowed",{"_index":36,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["allowedformetadatakey",{"_index":3110,"title":{},"body":{"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["allowfor",{"_index":900,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["alone",{"_index":3612,"title":{},"body":{"license.html":{}}}],["along",{"_index":1460,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"license.html":{}}}],["alongside",{"_index":3658,"title":{},"body":{"license.html":{}}}],["already",{"_index":3014,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["altitude",{"_index":445,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["analysis",{"_index":1413,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["analyzedatabase",{"_index":1414,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["analyzes",{"_index":1408,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["analyzing",{"_index":1553,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["and/or",{"_index":3732,"title":{},"body":{"license.html":{}}}],["annotate",{"_index":3834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["annotations",{"_index":3543,"title":{},"body":{"license.html":{}}}],["anonymous",{"_index":2489,"title":{},"body":{"classes/LogService.html":{}}}],["apache",{"_index":531,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["aperture",{"_index":414,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["app",{"_index":3904,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["app.close",{"_index":3911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.init",{"_index":3906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.select(configmodule).get(configservice",{"_index":3908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.select(logmodule).get(logger",{"_index":3907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appear",{"_index":3654,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":3537,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":543,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["application",{"_index":966,"title":{},"body":{"injectables/ConfigService.html":{},"modules/ProcessModule.html":{},"miscellaneous/variables.html":{}}}],["application/xml",{"_index":3424,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["applied",{"_index":3223,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["applies",{"_index":3605,"title":{},"body":{"license.html":{}}}],["apply",{"_index":2821,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"license.html":{}}}],["appropriate",{"_index":3222,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"license.html":{}}}],["appropriateness",{"_index":3693,"title":{},"body":{"license.html":{}}}],["archives",{"_index":3759,"title":{},"body":{"license.html":{}}}],["arg",{"_index":3087,"title":{},"body":{"modules/RedisModule.html":{}}}],["args",{"_index":801,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/RedisModule.html":{}}}],["args.find((arg",{"_index":3086,"title":{},"body":{"modules/RedisModule.html":{}}}],["argumentshost",{"_index":1229,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["arising",{"_index":3712,"title":{},"body":{"license.html":{}}}],["array",{"_index":1437,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/LocaleService.html":{},"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(obj",{"_index":1745,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["array.isarray(value",{"_index":2387,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["array.reverse().foreach((obj",{"_index":3357,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["arrays",{"_index":1242,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["artist",{"_index":334,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["asc",{"_index":1094,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"miscellaneous/enumerations.html":{}}}],["asserted",{"_index":3743,"title":{},"body":{"license.html":{}}}],["associated",{"_index":807,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/ConfigItem.html":{},"injectables/LocaleSubscriber.html":{},"license.html":{}}}],["assume",{"_index":3695,"title":{},"body":{"license.html":{}}}],["assumed",{"_index":3860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":24,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"modules/AuthModule.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"modules/ExplorerModule.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["asynchronously",{"_index":3913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["atexp",{"_index":1463,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["attach",{"_index":3745,"title":{},"body":{"license.html":{}}}],["attached",{"_index":1426,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"license.html":{}}}],["attacks",{"_index":3968,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["attempts",{"_index":653,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["attribution",{"_index":3641,"title":{},"body":{"license.html":{}}}],["attrs",{"_index":3337,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{}}}],["audio",{"_index":331,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["audiofilemetadata",{"_index":328,"title":{"interfaces/AudioFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["audiofilemetadataentity",{"_index":455,"title":{"entities/AudioFileMetadataEntity.html":{}},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{}}}],["audiomd",{"_index":1754,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["audiomd.bit_rate",{"_index":1767,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["audiomd.channels",{"_index":1765,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["audiomd.codec_long_name",{"_index":1761,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["audiomd.codec_name?.touppercase",{"_index":1759,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["auth",{"_index":516,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.access.token.expiration",{"_index":3956,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["auth.constants",{"_index":576,"title":{},"body":{"modules/AuthModule.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["auth.guard",{"_index":507,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["auth.guard.ts",{"_index":7,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["auth.guard.ts:29",{"_index":2322,"title":{},"body":{"injectables/LiteAuthGuard.html":{}}}],["auth.guard.ts:49",{"_index":31,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["auth.guard.ts:74",{"_index":64,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["auth.guard.ts:85",{"_index":55,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["auth.jwt.secret",{"_index":3953,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["auth.properties",{"_index":3951,"title":{"additional-documentation/properties/auth.properties.html":{}},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["auth.refresh.token.expiration",{"_index":3961,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["auth.types",{"_index":564,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthService.html":{}}}],["auth_access_token_prefix",{"_index":78,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth_jwt_cache_prefix",{"_index":79,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth_jwt_cache_prefix}:${auth_access_token_prefix}:${accesstoken",{"_index":649,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth_jwt_cache_prefix}:${auth_access_token_prefix}:${token",{"_index":105,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["auth_jwt_cache_prefix}:${auth_refresh_token_prefix}:${accesstoken}:${refreshtoken",{"_index":651,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth_refresh_token_prefix",{"_index":638,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["authconfig",{"_index":572,"title":{},"body":{"modules/AuthModule.html":{}}}],["authconfig.access_token_expiration",{"_index":587,"title":{},"body":{"modules/AuthModule.html":{}}}],["authenticate",{"_index":598,"title":{},"body":{"classes/AuthService.html":{}}}],["authenticate(data",{"_index":601,"title":{},"body":{"classes/AuthService.html":{}}}],["authentication",{"_index":12,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"injectables/LiteAuthGuard.html":{},"classes/LoginPayload.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["authguard",{"_index":496,"title":{"injectables/AuthGuard.html":{}},"body":{"injectables/AuthGuard.html":{}}}],["authmodule",{"_index":512,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{}}}],["authmoduleoptions",{"_index":520,"title":{},"body":{"modules/AuthModule.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/typealiases.html":{}}}],["author",{"_index":3771,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":594,"title":{},"body":{"classes/AuthService.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["authorization.service",{"_index":563,"title":{},"body":{"modules/AuthModule.html":{}}}],["authorizationheader",{"_index":109,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["authorizationheader.match(/bearer\\s+(\\s+)\\s",{"_index":112,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["authorizationservice",{"_index":523,"title":{},"body":{"modules/AuthModule.html":{}}}],["authorized",{"_index":3497,"title":{},"body":{"license.html":{},"additional-documentation/properties/media.properties.html":{}}}],["authorship",{"_index":3533,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":575,"title":{"classes/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["automatically",{"_index":3931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":1468,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"injectables/LocaleService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"license.html":{},"modules.html":{}}}],["avalue",{"_index":1090,"title":{},"body":{"injectables/ConfigService.html":{}}}],["avalue.localecompare(bvalue",{"_index":1095,"title":{},"body":{"injectables/ConfigService.html":{}}}],["avatar",{"_index":3182,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/variables.html":{}}}],["avatar.files",{"_index":3937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.files.format",{"_index":3938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.name",{"_index":3935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.name.lang",{"_index":3936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.type",{"_index":3939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.type.ext",{"_index":3940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["await",{"_index":93,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"modules/AuthModule.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"modules/ExplorerModule.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{},"modules/WarlockModule.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["axios",{"_index":3449,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":1089,"title":{},"body":{"injectables/ConfigService.html":{},"license.html":{}}}],["b[sort",{"_index":1093,"title":{},"body":{"injectables/ConfigService.html":{}}}],["bad",{"_index":667,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/DbExceptionFilter.html":{}}}],["badrequestexception",{"_index":293,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/FileService.html":{},"injectables/NotEmptyPipe.html":{}}}],["badrequestexception(`${this.fieldname",{"_index":2803,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["badrequestmsexception",{"_index":661,"title":{"classes/BadRequestMsException.html":{}},"body":{"classes/BadRequestMsException.html":{}}}],["base",{"_index":2786,"title":{},"body":{"classes/MsException.html":{}}}],["base64",{"_index":2213,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["based",{"_index":38,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["basename(filepath",{"_index":1194,"title":{},"body":{"injectables/ConfigService.html":{}}}],["basic",{"_index":1558,"title":{},"body":{"modules/ExplorerModule.html":{},"entities/FileMetadataEntity.html":{},"miscellaneous/variables.html":{}}}],["basic.service",{"_index":3234,"title":{},"body":{"modules/UserModule.html":{}}}],["basic.service.ts",{"_index":678,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["basic.service.ts:29",{"_index":688,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["basicexplorerservice",{"_index":1555,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["basicuserservice",{"_index":676,"title":{"injectables/BasicUserService.html":{}},"body":{"injectables/BasicUserService.html":{},"modules/UserModule.html":{}}}],["basis",{"_index":548,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["bcrypt",{"_index":278,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"dependencies.html":{}}}],["bcrypt.compare(user.password",{"_index":322,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["bcrypt.hash(password",{"_index":325,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["before",{"_index":3253,"title":{},"body":{"classes/UserSubscriber.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["beforeinsert",{"_index":3254,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beforeinsert(event",{"_index":3258,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beforeupdate",{"_index":3255,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beforeupdate(event",{"_index":3260,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["behalf",{"_index":3560,"title":{},"body":{"license.html":{}}}],["being",{"_index":1405,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["below",{"_index":3538,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":3519,"title":{},"body":{"license.html":{}}}],["between",{"_index":2723,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["bind",{"_index":3552,"title":{},"body":{"license.html":{}}}],["bitdepth",{"_index":378,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["bitrate",{"_index":335,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["blocked",{"_index":3975,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["blocking",{"_index":3973,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["body",{"_index":3328,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["body.schema",{"_index":3330,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["body_token",{"_index":3792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boilerplate",{"_index":3746,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":52,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["bootstrap",{"_index":727,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}],["both",{"_index":952,"title":{},"body":{"interfaces/ConfigItem.html":{},"entities/ExplorerActionEntity.html":{}}}],["bps",{"_index":372,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["brackets",{"_index":3749,"title":{},"body":{"license.html":{}}}],["break",{"_index":232,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{}}}],["bridge",{"_index":3387,"title":{},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bridge.constants",{"_index":3393,"title":{},"body":{"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["bridge.constants.ts",{"_index":3297,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["bridge.constants.ts:33",{"_index":3384,"title":{},"body":{"classes/XdbImportService.html":{}}}],["bridge.constants.ts:35",{"_index":3382,"title":{},"body":{"classes/XdbImportService.html":{}}}],["bridge.constants.ts:41",{"_index":3302,"title":{},"body":{"classes/XdbExportService.html":{}}}],["bridge.middleware.ts",{"_index":3409,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["bridge.middleware.ts:26",{"_index":3421,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["bridge.middleware.ts:34",{"_index":3417,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["bridge.middleware.ts:47",{"_index":3414,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["bridge.module.ts",{"_index":3431,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["bridge.module.ts:36",{"_index":3432,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["bridge.types",{"_index":3308,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"modules/XmlDataBridgeModule.html":{}}}],["bridge.types.ts",{"_index":3386,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["bridge/xml",{"_index":3296,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["brightness",{"_index":415,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["broker",{"_index":2867,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["broker.constants",{"_index":2672,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["broker.constants.ts",{"_index":3812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["broker.module",{"_index":2971,"title":{},"body":{"modules/ProcessModule.html":{}}}],["broker.module.ts",{"_index":2670,"title":{},"body":{"modules/MessagesBrokerModule.html":{}}}],["broker.service",{"_index":2675,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"injectables/ProcessRegisterService.html":{}}}],["broker.service.ts",{"_index":2676,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:27",{"_index":2697,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:28",{"_index":2698,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:29",{"_index":2681,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:47",{"_index":2683,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:56",{"_index":2695,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:65",{"_index":2696,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:75",{"_index":2691,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:88",{"_index":2685,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.subscribe(command.register",{"_index":2999,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["broker.subscribe(command.start",{"_index":3003,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["broker.subscribe(command.stop",{"_index":3005,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["broker.subscribe(command.unregister",{"_index":3001,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["broker.types",{"_index":2700,"title":{},"body":{"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{}}}],["broker.types.ts",{"_index":2652,"title":{},"body":{"interfaces/MessagesBroker.html":{}}}],["broker.types.ts:26",{"_index":2657,"title":{},"body":{"interfaces/MessagesBroker.html":{}}}],["broker.types.ts:33",{"_index":2662,"title":{},"body":{"interfaces/MessagesBroker.html":{}}}],["broker.types.ts:39",{"_index":2665,"title":{},"body":{"interfaces/MessagesBroker.html":{}}}],["broker/messages",{"_index":2651,"title":{},"body":{"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"miscellaneous/variables.html":{}}}],["brokering",{"_index":2653,"title":{},"body":{"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{}}}],["browse",{"_index":3761,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3762,"title":{},"body":{"modules.html":{}}}],["brute",{"_index":640,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce",{"_index":644,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforce.block.duration",{"_index":3974,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce.enabled",{"_index":3969,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce.max.attempts",{"_index":3972,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce.properties",{"_index":3966,"title":{"additional-documentation/properties/bruteforce.properties.html":{}},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce_jwt_cache_prefix",{"_index":643,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforce_jwt_cache_prefix}:ip:${ipaddress",{"_index":660,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforce_jwt_cache_prefix}:login:${login",{"_index":656,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforceipkey",{"_index":659,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforceloginkey",{"_index":655,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["buf",{"_index":1672,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{}}}],["buffer",{"_index":1273,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["builder",{"_index":2018,"title":{},"body":{"injectables/FileService.html":{}}}],["built",{"_index":2422,"title":{},"body":{"classes/LogService.html":{}}}],["bus",{"_index":2631,"title":{},"body":{"interfaces/MessageBus.html":{},"miscellaneous/variables.html":{}}}],["bvalue",{"_index":1092,"title":{},"body":{"injectables/ConfigService.html":{}}}],["bvalue.localecompare(avalue",{"_index":1096,"title":{},"body":{"injectables/ConfigService.html":{}}}],["c",{"_index":1594,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"entities/ProcessUnitEntity.html":{},"license.html":{}}}],["c.process",{"_index":3031,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["c.target",{"_index":1595,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["cache",{"_index":635,"title":{},"body":{"classes/AuthService.html":{},"classes/CacheService.html":{},"injectables/ConfigService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/RedisCacheService.html":{},"miscellaneous/variables.html":{}}}],["cache.constants",{"_index":3058,"title":{},"body":{"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{}}}],["cache.service",{"_index":746,"title":{},"body":{"modules/CacheModule.html":{}}}],["cache.service.ts",{"_index":3041,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:102",{"_index":3044,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:121",{"_index":3054,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:139",{"_index":3045,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:157",{"_index":3050,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:27",{"_index":3043,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:39",{"_index":3048,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:54",{"_index":3049,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:65",{"_index":3052,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:78",{"_index":3057,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.types",{"_index":744,"title":{},"body":{"modules/CacheModule.html":{},"injectables/RedisCacheService.html":{}}}],["cache/cache.constants",{"_index":2702,"title":{},"body":{"injectables/MessagesBrokerService.html":{},"modules/WarlockModule.html":{}}}],["cache/redis.module",{"_index":2673,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["cached",{"_index":2216,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["cachemodule",{"_index":565,"title":{"modules/CacheModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"overview.html":{}}}],["cacheservice",{"_index":19,"title":{"classes/CacheService.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"overview.html":{}}}],["caching",{"_index":736,"title":{},"body":{"modules/CacheModule.html":{}}}],["call",{"_index":3419,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["callback",{"_index":151,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["called",{"_index":153,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["caller",{"_index":3290,"title":{},"body":{"modules/WarlockModule.html":{}}}],["callhandler",{"_index":1326,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["calling",{"_index":2438,"title":{},"body":{"classes/LogService.html":{}}}],["can't",{"_index":207,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessRegisterService.html":{}}}],["canactivate",{"_index":14,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":28,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canread",{"_index":1370,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["canread.name",{"_index":3899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canread.name.lang",{"_index":3900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvas",{"_index":2222,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"dependencies.html":{}}}],["canvas.getcontext(\"2d",{"_index":2250,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["canvas.height",{"_index":2260,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["canvas.width",{"_index":2259,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["canwrite",{"_index":1371,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["canwrite.name",{"_index":3901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canwrite.name.lang",{"_index":3902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capex",{"_index":2237,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["capfontfamily",{"_index":2251,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["capfontpath",{"_index":2253,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha",{"_index":789,"title":{},"body":{"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.constants",{"_index":2224,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.enabled",{"_index":3979,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.expiration",{"_index":3980,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.font.family",{"_index":3984,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.font.path",{"_index":3982,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.google.public.key",{"_index":3987,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.google.secret.key",{"_index":3989,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.properties",{"_index":3978,"title":{"additional-documentation/properties/captcha.properties.html":{}},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.service",{"_index":798,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["captcha.service.ts",{"_index":2154,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:129",{"_index":2198,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:137",{"_index":2202,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:145",{"_index":2204,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:153",{"_index":2207,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:33",{"_index":2162,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["captcha.service.ts:39",{"_index":2195,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:96",{"_index":2210,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.type",{"_index":3986,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.types",{"_index":800,"title":{},"body":{"modules/CaptchaModule.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captcha_cache_prefix",{"_index":2223,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"miscellaneous/variables.html":{}}}],["captcha_cache_prefix}:${request.id",{"_index":2242,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captchabody",{"_index":815,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["captchaconfig",{"_index":2171,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captchaconfig.enabled",{"_index":2175,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captchaconfig.google_secret_key",{"_index":2178,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["captchaenabled",{"_index":2173,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captchaid",{"_index":1458,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["captchamodule",{"_index":786,"title":{"modules/CaptchaModule.html":{}},"body":{"modules/CaptchaModule.html":{},"modules.html":{}}}],["captchamoduleoptions",{"_index":790,"title":{},"body":{"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"miscellaneous/typealiases.html":{}}}],["captchapayload",{"_index":1459,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["captcharequest",{"_index":802,"title":{"classes/CaptchaRequest.html":{}},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captcharesponse",{"_index":825,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"miscellaneous/typealiases.html":{}}}],["captchas",{"_index":2189,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captchaservice",{"_index":799,"title":{"classes/CaptchaService.html":{}},"body":{"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captchaservice:46",{"_index":2163,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["captchaservice:55",{"_index":2196,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captchaservice:62",{"_index":2165,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["captchaservice:76",{"_index":2215,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["carry",{"_index":3635,"title":{},"body":{"license.html":{}}}],["cascade",{"_index":852,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["cascade'})@joincolumn",{"_index":1624,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["case",{"_index":230,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["cat",{"_index":929,"title":{},"body":{"injectables/CategoryService.html":{}}}],["catch",{"_index":219,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"miscellaneous/variables.html":{}}}],["catch((err",{"_index":2063,"title":{},"body":{"injectables/FileService.html":{}}}],["catch(exception",{"_index":1227,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["catch(typeormerror",{"_index":1233,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["catcherror",{"_index":2739,"title":{},"body":{"classes/MsClient.html":{}}}],["catcherror((error",{"_index":2759,"title":{},"body":{"classes/MsClient.html":{}}}],["catches",{"_index":1224,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["categories",{"_index":889,"title":{},"body":{"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{}}}],["category",{"_index":833,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"miscellaneous/variables.html":{}}}],["category.constants",{"_index":935,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category.entity",{"_index":908,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["category.service",{"_index":890,"title":{},"body":{"modules/CategoryModule.html":{}}}],["category_relations",{"_index":934,"title":{},"body":{"injectables/CategoryService.html":{},"miscellaneous/variables.html":{}}}],["categoryentity",{"_index":831,"title":{"entities/CategoryEntity.html":{}},"body":{"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{}}}],["categorymodule",{"_index":879,"title":{"modules/CategoryModule.html":{}},"body":{"modules/CategoryModule.html":{},"modules.html":{},"overview.html":{}}}],["categoryrestrictionentity",{"_index":894,"title":{"entities/CategoryRestrictionEntity.html":{}},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["categoryservice",{"_index":884,"title":{"injectables/CategoryService.html":{}},"body":{"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"overview.html":{}}}],["catrep",{"_index":918,"title":{},"body":{"injectables/CategoryService.html":{}}}],["cause",{"_index":3509,"title":{},"body":{"license.html":{}}}],["caused",{"_index":158,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["chanel",{"_index":2660,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["changed",{"_index":285,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"license.html":{}}}],["changes",{"_index":1439,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["changetarget",{"_index":1564,"title":{},"body":{"classes/ExplorerService.html":{}}}],["changetarget(target",{"_index":1440,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["channel",{"_index":2659,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["character",{"_index":3711,"title":{},"body":{"license.html":{}}}],["charat(0",{"_index":1198,"title":{},"body":{"injectables/ConfigService.html":{}}}],["charge",{"_index":3591,"title":{},"body":{"license.html":{}}}],["check",{"_index":1419,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["checking",{"_index":67,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["checks",{"_index":3362,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["checkuseraccess",{"_index":1401,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["child",{"_index":257,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["children",{"_index":835,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/CategoryService.html":{}}}],["choose",{"_index":3726,"title":{},"body":{"license.html":{}}}],["chunk",{"_index":3074,"title":{},"body":{"injectables/RedisCacheService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["claim",{"_index":3617,"title":{},"body":{"license.html":{}}}],["claims",{"_index":3607,"title":{},"body":{"license.html":{}}}],["class",{"_index":10,"title":{"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/DbExceptionFilter.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerService.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"classes/MediaDto.html":{},"classes/MediaFileDto.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"classes/MediaTypeDto.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"license.html":{}}}],["class\"]?.description",{"_index":1867,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["class\"]?.value",{"_index":1869,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["classes",{"_index":118,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/DbExceptionFilter.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerService.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"classes/MediaDto.html":{},"classes/MediaFileDto.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"classes/MediaTypeDto.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"overview.html":{}}}],["clean",{"_index":3135,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaned",{"_index":3167,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaner.process.ts",{"_index":3125,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaner.process.ts:30",{"_index":3129,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaner.process.ts:63",{"_index":3137,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaning",{"_index":3126,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["client",{"_index":823,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["client.constants",{"_index":2778,"title":{},"body":{"modules/MsClientModule.html":{}}}],["client.constants.ts",{"_index":3813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["client.module.ts",{"_index":2774,"title":{},"body":{"modules/MsClientModule.html":{}}}],["client.ts",{"_index":2721,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:30",{"_index":2727,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:43",{"_index":2728,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:64",{"_index":2736,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:80",{"_index":2731,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:97",{"_index":2734,"title":{},"body":{"classes/MsClient.html":{}}}],["client.types",{"_index":2743,"title":{},"body":{"classes/MsClient.html":{}}}],["client.types.ts",{"_index":2629,"title":{},"body":{"interfaces/MessageBus.html":{},"miscellaneous/typealiases.html":{}}}],["client.types.ts:30",{"_index":2639,"title":{},"body":{"interfaces/MessageBus.html":{}}}],["client.types.ts:36",{"_index":2645,"title":{},"body":{"interfaces/MessageBus.html":{}}}],["client.types.ts:42",{"_index":2642,"title":{},"body":{"interfaces/MessageBus.html":{}}}],["client/ms",{"_index":2628,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["clientproxy",{"_index":2726,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["clientsmodule",{"_index":2775,"title":{},"body":{"modules/MsClientModule.html":{}}}],["clientsmodule.registerasync",{"_index":2779,"title":{},"body":{"modules/MsClientModule.html":{}}}],["cluster_cachemodule",{"_index":728,"title":{},"body":{"modules/CacheModule.html":{},"overview.html":{}}}],["cluster_cachemodule_exports",{"_index":729,"title":{},"body":{"modules/CacheModule.html":{},"overview.html":{}}}],["cluster_cachemodule_imports",{"_index":730,"title":{},"body":{"modules/CacheModule.html":{},"overview.html":{}}}],["cluster_categorymodule",{"_index":880,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_categorymodule_exports",{"_index":882,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_categorymodule_imports",{"_index":881,"title":{},"body":{"modules/CategoryModule.html":{}}}],["cluster_categorymodule_providers",{"_index":883,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":956,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":958,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_imports",{"_index":957,"title":{},"body":{"modules/ConfigModule.html":{}}}],["cluster_configmodule_providers",{"_index":959,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_localemodule",{"_index":2324,"title":{},"body":{"modules/LocaleModule.html":{},"overview.html":{}}}],["cluster_localemodule_exports",{"_index":2325,"title":{},"body":{"modules/LocaleModule.html":{},"overview.html":{}}}],["cluster_localemodule_providers",{"_index":2326,"title":{},"body":{"modules/LocaleModule.html":{},"overview.html":{}}}],["cluster_messagesbrokermodule",{"_index":2668,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"overview.html":{}}}],["cluster_messagesbrokermodule_imports",{"_index":2669,"title":{},"body":{"modules/MessagesBrokerModule.html":{}}}],["cluster_msclientmodule",{"_index":2772,"title":{},"body":{"modules/MsClientModule.html":{},"overview.html":{}}}],["cluster_msclientmodule_imports",{"_index":2773,"title":{},"body":{"modules/MsClientModule.html":{}}}],["cluster_processmodule",{"_index":2952,"title":{},"body":{"modules/ProcessModule.html":{},"overview.html":{}}}],["cluster_processmodule_exports",{"_index":2953,"title":{},"body":{"modules/ProcessModule.html":{},"overview.html":{}}}],["cluster_processmodule_imports",{"_index":2955,"title":{},"body":{"modules/ProcessModule.html":{},"overview.html":{}}}],["cluster_processmodule_providers",{"_index":2954,"title":{},"body":{"modules/ProcessModule.html":{},"overview.html":{}}}],["cluster_warlockmodule",{"_index":3276,"title":{},"body":{"modules/WarlockModule.html":{}}}],["cluster_warlockmodule_imports",{"_index":3277,"title":{},"body":{"modules/WarlockModule.html":{}}}],["code",{"_index":352,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleService.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"classes/MsException.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["codec",{"_index":336,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["codec_profile",{"_index":468,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["codecprofile",{"_index":337,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["code}_${language.id",{"_index":2354,"title":{},"body":{"injectables/LocaleService.html":{}}}],["color",{"_index":2201,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["color_components",{"_index":2293,"title":{},"body":{"entities/ImageFileMetadataEntity.html":{}}}],["color_range",{"_index":3268,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["color_space",{"_index":3269,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["colorcomponents",{"_index":375,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["colorrange",{"_index":448,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["colorspace",{"_index":423,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["colortype",{"_index":379,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["column",{"_index":487,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["column(\"boolean",{"_index":1540,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{}}}],["column(\"date",{"_index":2291,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["column(\"decimal",{"_index":494,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["column(\"int",{"_index":493,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/FileEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["column(\"simple",{"_index":878,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["column(\"smallint",{"_index":2578,"title":{},"body":{"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{}}}],["column(\"text",{"_index":1539,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/ProcessLogEntity.html":{}}}],["column(\"varchar",{"_index":492,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["column('boolean",{"_index":1629,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaTypeEntity.html":{}}}],["column('int",{"_index":1631,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaTypeEntity.html":{}}}],["column('simple",{"_index":855,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["column('smallint",{"_index":2569,"title":{},"body":{"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{}}}],["column('text",{"_index":1531,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/ProcessLogEntity.html":{}}}],["column('varchar",{"_index":865,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/UserEntity.html":{}}}],["column.entity",{"_index":1561,"title":{},"body":{"modules/ExplorerModule.html":{},"entities/ExplorerTargetEntity.html":{}}}],["column.entity.ts",{"_index":1488,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:103",{"_index":1501,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:107",{"_index":1525,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:111",{"_index":1510,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:115",{"_index":1521,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:119",{"_index":1506,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:127",{"_index":1523,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:135",{"_index":1508,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:138",{"_index":1527,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:41",{"_index":1495,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:45",{"_index":1512,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:49",{"_index":1498,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:53",{"_index":1493,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:56",{"_index":1530,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:59",{"_index":1532,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:63",{"_index":1534,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:67",{"_index":1511,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:71",{"_index":1533,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:75",{"_index":1497,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:79",{"_index":1499,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:83",{"_index":1514,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:87",{"_index":1516,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:91",{"_index":1520,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:95",{"_index":1503,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:99",{"_index":1518,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["columndatatype",{"_index":1358,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["columns",{"_index":1362,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["columns.description",{"_index":3880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.description.lang",{"_index":3881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.name",{"_index":3878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.name.lang",{"_index":3879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer",{"_index":3882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer.description",{"_index":3885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer.description.lang",{"_index":3886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer.name",{"_index":3883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer.name.lang",{"_index":3884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer",{"_index":3887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer.description",{"_index":3890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer.description.lang",{"_index":3891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer.name",{"_index":3888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer.name.lang",{"_index":3889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.tab",{"_index":3892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.tab.name",{"_index":3893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.tab.name.lang",{"_index":3894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["combination",{"_index":3613,"title":{},"body":{"license.html":{}}}],["combining",{"_index":2450,"title":{},"body":{"classes/LogService.html":{}}}],["command",{"_index":2910,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"miscellaneous/enumerations.html":{}}}],["commands",{"_index":3475,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["comment",{"_index":3753,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":3720,"title":{},"body":{"license.html":{}}}],["common",{"_index":3503,"title":{},"body":{"license.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["common/auth/auth.constants",{"_index":80,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["common/media/entity/media.entity",{"_index":875,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{}}}],["common/media/media.types",{"_index":2306,"title":{},"body":{"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{}}}],["common/user/entity/user",{"_index":909,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["common/user/user.types",{"_index":83,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["communication",{"_index":3564,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":3531,"title":{},"body":{"license.html":{}}}],["complete",{"_index":2379,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["compliance",{"_index":537,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["complies",{"_index":3663,"title":{},"body":{"license.html":{}}}],["components\"]?.value",{"_index":1835,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["compositeimage",{"_index":440,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["compression",{"_index":380,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["computer",{"_index":3717,"title":{},"body":{"license.html":{}}}],["concat(config_file_ext_pattern",{"_index":1195,"title":{},"body":{"injectables/ConfigService.html":{}}}],["conditions",{"_index":551,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["config",{"_index":749,"title":{},"body":{"modules/CacheModule.html":{},"injectables/ConfigService.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"miscellaneous/variables.html":{}}}],["config.constants",{"_index":1061,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config.service",{"_index":963,"title":{},"body":{"modules/ConfigModule.html":{}}}],["config.ts",{"_index":3854,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["config.types",{"_index":1062,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_cache_prefix",{"_index":1054,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["config_cache_prefix}:${!filter",{"_index":1086,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_cache_prefix}:${filenameprefix}.${keywithoutprefix",{"_index":1159,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_cache_prefix}:${item.key",{"_index":1110,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_cache_prefix}:${key",{"_index":1113,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_file_ext_pattern",{"_index":1055,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["configfilename",{"_index":1193,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configfilepath",{"_index":1196,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configitem",{"_index":946,"title":{"interfaces/ConfigItem.html":{}},"body":{"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{}}}],["configmodule",{"_index":955,"title":{"modules/ConfigModule.html":{}},"body":{"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":960,"title":{"injectables/ConfigService.html":{}},"body":{"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["configservice.initwithpropertiesfiles(gencnfdir",{"_index":3910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":827,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/MsClient.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["configurations",{"_index":887,"title":{},"body":{"modules/CategoryModule.html":{},"injectables/ConfigService.html":{},"modules/LocaleModule.html":{}}}],["configuring",{"_index":452,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["connection",{"_index":2375,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["connection_space",{"_index":2269,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["connectionspace",{"_index":386,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["consequential",{"_index":3710,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":3734,"title":{},"body":{"license.html":{}}}],["consists",{"_index":951,"title":{},"body":{"interfaces/ConfigItem.html":{}}}],["conspicuously",{"_index":3575,"title":{},"body":{"license.html":{}}}],["const",{"_index":89,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"modules/CaptchaModule.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":625,"title":{},"body":{"classes/AuthService.html":{},"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":85,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{}}}],["constitutes",{"_index":3621,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":137,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/AuthGuard.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["constructor(@inject(redis_client",{"_index":2703,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["constructor(catrep",{"_index":915,"title":{},"body":{"injectables/CategoryService.html":{}}}],["constructor(code",{"_index":2789,"title":{},"body":{"classes/MsException.html":{}}}],["constructor(fieldname",{"_index":2796,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["constructor(items",{"_index":2808,"title":{},"body":{"classes/PageableData.html":{}}}],["constructor(languagerep",{"_index":2339,"title":{},"body":{"injectables/LocaleService.html":{}}}],["constructor(lockexec",{"_index":2865,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["constructor(logger",{"_index":504,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"classes/MsClient.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["constructor(message",{"_index":671,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["constructor(private",{"_index":1333,"title":{},"body":{"injectables/DtoInterceptor.html":{},"modules/ExplorerModule.html":{},"injectables/NotEmptyPipe.html":{},"modules/ProcessModule.html":{},"guards/RolesGuard.html":{}}}],["constructor(pubclient",{"_index":2680,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["constructor(reflector",{"_index":3103,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(serializer",{"_index":1321,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["constructor(userrep",{"_index":687,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["constructs",{"_index":2036,"title":{},"body":{"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{}}}],["construed",{"_index":3660,"title":{},"body":{"license.html":{}}}],["contain",{"_index":306,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["contained",{"_index":3647,"title":{},"body":{"license.html":{}}}],["container",{"_index":338,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["containing",{"_index":609,"title":{},"body":{"classes/AuthService.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["contains",{"_index":1443,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["content",{"_index":1003,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/media.properties.html":{}}}],["content.split(\"\\n",{"_index":1139,"title":{},"body":{"injectables/ConfigService.html":{}}}],["contents",{"_index":1288,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"license.html":{}}}],["context",{"_index":48,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/DtoInterceptor.html":{},"classes/LogService.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["context.gethandler",{"_index":3117,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":90,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["continue",{"_index":1143,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ProcessManagerService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["contract",{"_index":2630,"title":{},"body":{"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"license.html":{}}}],["contrast",{"_index":434,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["contribution",{"_index":3554,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":3611,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":3665,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":3578,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":3622,"title":{},"body":{"license.html":{}}}],["control",{"_index":3102,"title":{},"body":{"guards/RolesGuard.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["controlled",{"_index":3502,"title":{},"body":{"license.html":{}}}],["controllers",{"_index":3836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conversions",{"_index":3532,"title":{},"body":{"license.html":{}}}],["convert",{"_index":3457,"title":{},"body":{"dependencies.html":{}}}],["copies",{"_index":3628,"title":{},"body":{"license.html":{}}}],["copy",{"_index":539,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["copyright",{"_index":525,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["copyright\"]?.description",{"_index":1899,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["corresponding",{"_index":2042,"title":{},"body":{"injectables/FileService.html":{}}}],["counterclaim",{"_index":3618,"title":{},"body":{"license.html":{}}}],["counts",{"_index":1436,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["crash",{"_index":159,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["crashed",{"_index":223,"title":{},"body":{"classes/AbstractProcess.html":{},"miscellaneous/enumerations.html":{}}}],["crashes",{"_index":154,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["create",{"_index":682,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"classes/UserService.html":{}}}],["create(user",{"_index":690,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["createbasicfindqb",{"_index":2007,"title":{},"body":{"injectables/FileService.html":{}}}],["createcanvas",{"_index":2220,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["createcanvas(200",{"_index":2247,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["created",{"_index":693,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/ProcessManagerService.html":{}}}],["createdatecolumn",{"_index":1637,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["createdirectoriesifnotexist",{"_index":2050,"title":{},"body":{"injectables/FileService.html":{}}}],["createdirectoriesifnotexist(dir",{"_index":2143,"title":{},"body":{"injectables/FileService.html":{}}}],["createdirectoriesifnotexist(directorypath",{"_index":1284,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["createfiledirectory",{"_index":2008,"title":{},"body":{"injectables/FileService.html":{}}}],["createfiledirectory(ispublic",{"_index":2019,"title":{},"body":{"injectables/FileService.html":{}}}],["createfileentity",{"_index":2009,"title":{},"body":{"injectables/FileService.html":{}}}],["createfileentity(ispublic",{"_index":2023,"title":{},"body":{"injectables/FileService.html":{}}}],["createfilemetadataentity",{"_index":1671,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{}}}],["createfilemetadataentity(buf",{"_index":1673,"title":{},"body":{"classes/FileMd.html":{},"injectables/FileMetadataService.html":{}}}],["createlocalizedstrings",{"_index":2338,"title":{},"body":{"injectables/LocaleService.html":{}}}],["createlocalizedstrings(value",{"_index":2344,"title":{},"body":{"injectables/LocaleService.html":{}}}],["createloginstance",{"_index":2853,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["createloginstance(processcode",{"_index":2872,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["createorupdatefile",{"_index":1646,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{}}}],["createorupdatefile(file",{"_index":1652,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{}}}],["createorupdatemedia",{"_index":2519,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["createorupdatemedia(file",{"_index":2590,"title":{},"body":{"classes/MediaManager.html":{}}}],["createparamdecorator",{"_index":3827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createquerybuilder(\"file",{"_index":2107,"title":{},"body":{"injectables/FileService.html":{}}}],["creates",{"_index":1281,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LocaleService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{}}}],["creating",{"_index":11,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["creation",{"_index":1692,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["creator\"]?.description",{"_index":1895,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["criteria",{"_index":2820,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["cron",{"_index":2928,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["cron/dist/job",{"_index":2996,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["cron_tab",{"_index":3027,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["cronjob",{"_index":2995,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["cronjob(processdata.crontab",{"_index":3016,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["crontab",{"_index":2836,"title":{},"body":{"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["cross",{"_index":3616,"title":{},"body":{"license.html":{}}}],["crutch",{"_index":1265,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["crypto",{"_index":1247,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["crypto.createhash(\"sha256",{"_index":1278,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["cs",{"_index":581,"title":{},"body":{"modules/AuthModule.html":{}}}],["cs.get(authconfig.jwt_secret",{"_index":583,"title":{},"body":{"modules/AuthModule.html":{}}}],["cs.getnumber",{"_index":586,"title":{},"body":{"modules/AuthModule.html":{}}}],["ctx",{"_index":2249,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"classes/LogService.html":{},"miscellaneous/variables.html":{}}}],["ctx.fillrect(0",{"_index":2258,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["ctx.fillstyle",{"_index":2256,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["ctx.font",{"_index":2261,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["ctx.methodname",{"_index":2459,"title":{},"body":{"classes/LogService.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":3828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.textbaseline",{"_index":2263,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["ctx?.filepath}:${ctx?.linenumber",{"_index":2466,"title":{},"body":{"classes/LogService.html":{}}}],["ctx?.methodname",{"_index":2467,"title":{},"body":{"classes/LogService.html":{}}}],["current",{"_index":34,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/variables.html":{}}}],["currentpage",{"_index":2809,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["currentpath",{"_index":1296,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["currentuser",{"_index":1346,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"miscellaneous/variables.html":{}}}],["currentuser.roles.find((v",{"_index":3226,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["custom",{"_index":664,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"miscellaneous/variables.html":{}}}],["customary",{"_index":3681,"title":{},"body":{"license.html":{}}}],["customrendered",{"_index":429,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["d",{"_index":3644,"title":{},"body":{"license.html":{}}}],["d\\s()]*$/.test(processedvalue",{"_index":1168,"title":{},"body":{"injectables/ConfigService.html":{}}}],["damages",{"_index":3707,"title":{},"body":{"license.html":{}}}],["data",{"_index":174,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AuthService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/FileEntity.html":{},"injectables/FileMetadataService.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data.tostring",{"_index":2718,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["data:image/png;base64,${image",{"_index":2241,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["database",{"_index":1220,"title":{},"body":{"classes/DbExceptionFilter.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/FileService.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["datasource",{"_index":2371,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["datasource.manager.connection.subscribers.push(this",{"_index":2383,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["date",{"_index":240,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["date\"]?.value",{"_index":1876,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["date(exifdata.icc[\"icc",{"_index":1874,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["date.tolocalestring",{"_index":253,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["date_time",{"_index":2294,"title":{},"body":{"entities/ImageFileMetadataEntity.html":{}}}],["dates",{"_index":1461,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["datetime",{"_index":377,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["db",{"_index":754,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["dbexceptionfilter",{"_index":1217,"title":{"classes/DbExceptionFilter.html":{}},"body":{"classes/DbExceptionFilter.html":{}}}],["debug",{"_index":2424,"title":{},"body":{"classes/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["debug(message",{"_index":2430,"title":{},"body":{"classes/LogService.html":{}}}],["declarations",{"_index":726,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}],["decomposed",{"_index":3407,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["decorator",{"_index":3830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":460,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"classes/CaptchaRequest.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"classes/ExchangeTokenPayload.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"classes/PageableParams.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["decorators/for",{"_index":3111,"title":{},"body":{"guards/RolesGuard.html":{}}}],["deepequal(obj1",{"_index":3370,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["deepequal(obj1[key",{"_index":3378,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["deepequal(uniqueobj",{"_index":3359,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["deeply",{"_index":3364,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["default",{"_index":182,"title":{},"body":{"classes/AbstractProcess.html":{},"entities/AudioFileMetadataEntity.html":{},"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/ImageFileMetadataEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"entities/ProcessUnitEntity.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserSubscriber.html":{},"entities/VideoFileMetadataEntity.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["default_action_create",{"_index":1597,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["default_action_delete",{"_index":1599,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["default_action_duplicate",{"_index":1601,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["default_action_save",{"_index":1603,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["default_media_quality",{"_index":3799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_media_type",{"_index":3801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultactioncreate",{"_index":1366,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["defaultactiondelete",{"_index":1368,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["defaultactionduplicate",{"_index":1369,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["defaultactionsave",{"_index":1367,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["defaults",{"_index":1430,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["defend",{"_index":3740,"title":{},"body":{"license.html":{}}}],["defined",{"_index":30,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["defines",{"_index":595,"title":{},"body":{"classes/AuthService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["defining",{"_index":760,"title":{},"body":{"classes/CacheService.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"miscellaneous/variables.html":{}}}],["definition",{"_index":2646,"title":{},"body":{"interfaces/MessageBus.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["definitions",{"_index":3489,"title":{},"body":{"license.html":{}}}],["del",{"_index":762,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["del(...keys",{"_index":768,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["delete",{"_index":317,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"injectables/FileService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["deleted",{"_index":3140,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["deleteexistingconfigtsfiles",{"_index":975,"title":{},"body":{"injectables/ConfigService.html":{}}}],["deleteexistingconfigtsfiles(directory",{"_index":987,"title":{},"body":{"injectables/ConfigService.html":{}}}],["deletes",{"_index":989,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{},"injectables/RedisCacheService.html":{}}}],["deleting",{"_index":3066,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["deliberate",{"_index":3702,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":724,"title":{"dependencies.html":{}},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depth",{"_index":920,"title":{},"body":{"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"interfaces/XdbRequest.html":{}}}],["depth\"]?.value",{"_index":1842,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["derivative",{"_index":3539,"title":{},"body":{"license.html":{}}}],["derived",{"_index":597,"title":{},"body":{"classes/AuthService.html":{},"license.html":{}}}],["desc",{"_index":2823,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"miscellaneous/enumerations.html":{}}}],["descendants",{"_index":922,"title":{},"body":{"injectables/CategoryService.html":{}}}],["describing",{"_index":3682,"title":{},"body":{"license.html":{}}}],["description",{"_index":8,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["description\"]?.description",{"_index":1897,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["description.lang",{"_index":3877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deserialize",{"_index":2688,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["deserialized",{"_index":2689,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["deserializes",{"_index":2687,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["designated",{"_index":3577,"title":{},"body":{"license.html":{}}}],["detailed",{"_index":1470,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{}}}],["detect",{"_index":3320,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["determines",{"_index":32,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["determining",{"_index":3692,"title":{},"body":{"license.html":{}}}],["device_manufacturer",{"_index":2270,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["device_model_number",{"_index":2272,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["devicemanufacturer",{"_index":390,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["devicemodelnumber",{"_index":391,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["different",{"_index":3092,"title":{},"body":{"classes/Roles.html":{},"license.html":{}}}],["digitalzoomratio",{"_index":432,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["dir",{"_index":1178,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["direct",{"_index":3507,"title":{},"body":{"license.html":{}}}],["direction",{"_index":3510,"title":{},"body":{"license.html":{}}}],["directories",{"_index":1240,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"additional-documentation/properties/media.properties.html":{}}}],["directory",{"_index":992,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/media.properties.html":{}}}],["directorypath",{"_index":1283,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["directorystructure",{"_index":1237,"title":{"interfaces/DirectoryStructure.html":{}},"body":{"interfaces/DirectoryStructure.html":{}}}],["dirpath",{"_index":1189,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{}}}],["dirs",{"_index":1071,"title":{},"body":{"injectables/ConfigService.html":{}}}],["dirstruct",{"_index":3141,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["dirstruct[key].length",{"_index":3168,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["disables",{"_index":3971,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["disclaimer",{"_index":3685,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":3572,"title":{},"body":{"license.html":{}}}],["dispatch",{"_index":2632,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["dispatch(pattern",{"_index":2635,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["dispatched",{"_index":2730,"title":{},"body":{"classes/MsClient.html":{}}}],["dispatches",{"_index":2729,"title":{},"body":{"classes/MsClient.html":{}}}],["dispatching",{"_index":2722,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["display",{"_index":1490,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"classes/LogService.html":{},"license.html":{}}}],["display_aspect_ratio",{"_index":3270,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["displayaspectratio",{"_index":447,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["distribute",{"_index":3600,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":547,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["distribution",{"_index":3488,"title":{},"body":{"license.html":{}}}],["document",{"_index":3494,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":3527,"title":{},"body":{"license.html":{}}}],["don't",{"_index":3752,"title":{},"body":{"license.html":{}}}],["dotenv",{"_index":3453,"title":{},"body":{"dependencies.html":{}}}],["drawn",{"_index":2212,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["dto",{"_index":1319,"title":{},"body":{"injectables/DtoInterceptor.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["dtointerceptor",{"_index":1313,"title":{"injectables/DtoInterceptor.html":{}},"body":{"injectables/DtoInterceptor.html":{}}}],["duplicate",{"_index":3353,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["duplicates",{"_index":3354,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["duration",{"_index":339,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["dynamically",{"_index":1253,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["dynamicmodule",{"_index":524,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["e",{"_index":220,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"entities/MediaTypeEntity.html":{},"miscellaneous/variables.html":{}}}],["e.code",{"_index":2617,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["each",{"_index":950,"title":{},"body":{"interfaces/ConfigItem.html":{},"license.html":{}}}],["easier",{"_index":3758,"title":{},"body":{"license.html":{}}}],["editing",{"_index":1471,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["editorial",{"_index":3541,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":3544,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":3561,"title":{},"body":{"license.html":{}}}],["email",{"_index":3183,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["embedded",{"_index":1356,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["emit",{"_index":2633,"title":{},"body":{"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{}}}],["emit(chanel",{"_index":2656,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["emit(pattern",{"_index":2641,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["emits",{"_index":2658,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{}}}],["emitted",{"_index":2732,"title":{},"body":{"classes/MsClient.html":{}}}],["empty",{"_index":1709,"title":{},"body":{"injectables/FileMetadataService.html":{},"injectables/NotEmptyPipe.html":{}}}],["empty.pipe.ts",{"_index":2793,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["empty.pipe.ts:23",{"_index":2797,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["empty.pipe.ts:26",{"_index":2800,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["enabled",{"_index":826,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["enables",{"_index":3970,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["enclosed",{"_index":3748,"title":{},"body":{"license.html":{}}}],["encoded",{"_index":2214,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["encoding",{"_index":1290,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":1100,"title":{},"body":{"injectables/ConfigService.html":{},"license.html":{}}}],["ensure",{"_index":2795,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["ensuring",{"_index":3221,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["entire",{"_index":3862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entities",{"_index":456,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":264,"title":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{}},"body":{"classes/AbstractUserSubscriber.html":{},"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"entities/UserRoleEntity.html":{},"classes/UserSubscriber.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["entity(\"categories",{"_index":876,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["entity(\"category_restriction",{"_index":911,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["entity(\"explorer_actions",{"_index":1485,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["entity(\"explorer_column_renderers",{"_index":1549,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["entity(\"explorer_columns",{"_index":1538,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["entity(\"explorer_tabs",{"_index":1585,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["entity(\"explorer_targets",{"_index":1614,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["entity(\"file_metadata",{"_index":1688,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["entity(\"file_metadata_audio",{"_index":490,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["entity(\"file_metadata_gps",{"_index":2186,"title":{},"body":{"entities/GpsFileMetadataEntity.html":{}}}],["entity(\"file_metadata_icc",{"_index":2290,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["entity(\"file_metadata_image",{"_index":2295,"title":{},"body":{"entities/ImageFileMetadataEntity.html":{}}}],["entity(\"file_metadata_video",{"_index":3275,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["entity(\"files",{"_index":1642,"title":{},"body":{"entities/FileEntity.html":{}}}],["entity(\"languages",{"_index":2318,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["entity(\"localized_medias",{"_index":2408,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["entity(\"localized_strings",{"_index":2416,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["entity(\"medias",{"_index":2548,"title":{},"body":{"entities/MediaEntity.html":{}}}],["entity(\"medias_ext",{"_index":2555,"title":{},"body":{"entities/MediaExtEntity.html":{}}}],["entity(\"medias_files",{"_index":2577,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["entity(\"medias_format",{"_index":2588,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["entity(\"medias_types",{"_index":2625,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["entity(\"process_logs",{"_index":2849,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["entity(\"process_units",{"_index":3036,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["entity(\"users",{"_index":3215,"title":{},"body":{"entities/UserEntity.html":{}}}],["entity(\"users_roles",{"_index":3244,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["entity.code",{"_index":2074,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.constructor.name",{"_index":2392,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["entity.id",{"_index":2081,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.id.tostring",{"_index":2060,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.metadata",{"_index":2076,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.name",{"_index":2073,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.path",{"_index":2072,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.public",{"_index":2057,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.size",{"_index":2070,"title":{},"body":{"injectables/FileService.html":{}}}],["entity/audio",{"_index":1719,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/category.entity",{"_index":892,"title":{},"body":{"modules/CategoryModule.html":{},"injectables/CategoryService.html":{}}}],["entity/exif",{"_index":1723,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/explorer",{"_index":1560,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["entity/file",{"_index":1670,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{}}}],["entity/file.entity",{"_index":1669,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{}}}],["entity/gps",{"_index":1722,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/icc",{"_index":1724,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/image",{"_index":1721,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/language.entity",{"_index":2331,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{}}}],["entity/localized",{"_index":2332,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{}}}],["entity/media",{"_index":2605,"title":{},"body":{"modules/MediaModule.html":{}}}],["entity/media.entity",{"_index":2501,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["entity/process.log.entity",{"_index":189,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{}}}],["entity/process.unit.entity",{"_index":2905,"title":{},"body":{"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{}}}],["entity/user.entity",{"_index":298,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["entity/video",{"_index":1720,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity_save_handler",{"_index":3802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entityid",{"_index":2020,"title":{},"body":{"injectables/FileService.html":{}}}],["entityidforpatch",{"_index":2509,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["entitymanager.remove(myentity",{"_index":2368,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["entityname",{"_index":2510,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["entitysavehandler",{"_index":1336,"title":{"interfaces/EntitySaveHandler.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["entitysubscriber",{"_index":2363,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["entitysubscriberinterface",{"_index":2380,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["entries",{"_index":3981,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["entry",{"_index":179,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["enum",{"_index":1480,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"entities/ProcessUnitEntity.html":{},"miscellaneous/enumerations.html":{}}}],["enumeration",{"_index":2822,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["enumerations",{"_index":3470,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":3915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["envloader",{"_index":742,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["envloader.loadenvironment(logger",{"_index":748,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":3365,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["err",{"_index":2065,"title":{},"body":{"injectables/FileService.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["err.code",{"_index":2765,"title":{},"body":{"classes/MsClient.html":{}}}],["err.message",{"_index":2762,"title":{},"body":{"classes/MsClient.html":{}}}],["err.stack",{"_index":2763,"title":{},"body":{"classes/MsClient.html":{}}}],["err_token_a",{"_index":626,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["err_token_r",{"_index":628,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":149,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AuthService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"classes/LogService.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error().stack",{"_index":2475,"title":{},"body":{"classes/LogService.html":{}}}],["error(`invalid",{"_index":1157,"title":{},"body":{"injectables/ConfigService.html":{}}}],["error(message",{"_index":2433,"title":{},"body":{"classes/LogService.html":{}}}],["error.name",{"_index":2766,"title":{},"body":{"classes/MsClient.html":{}}}],["error?.type",{"_index":2760,"title":{},"body":{"classes/MsClient.html":{}}}],["errors",{"_index":624,"title":{},"body":{"classes/AuthService.html":{},"classes/DbExceptionFilter.html":{},"classes/MsClient.html":{},"miscellaneous/variables.html":{}}}],["es",{"_index":1263,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["etc",{"_index":3950,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["eval('import(\"file",{"_index":1267,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["eval(processedvalue",{"_index":1169,"title":{},"body":{"injectables/ConfigService.html":{}}}],["even",{"_index":3722,"title":{},"body":{"license.html":{}}}],["event",{"_index":286,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/LocaleSubscriber.html":{},"classes/UserSubscriber.html":{},"license.html":{}}}],["event.entity",{"_index":2384,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["event.entity.login",{"_index":3266,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["event.entityid",{"_index":2393,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["event.manager.remove(relatedentity",{"_index":2397,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["events",{"_index":268,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/LocaleSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["eventsubscriber",{"_index":2381,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["ex",{"_index":3064,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["example",{"_index":1454,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"injectables/LocaleSubscriber.html":{},"classes/LoginPayload.html":{},"license.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["exceeding",{"_index":3976,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["except",{"_index":536,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["exception",{"_index":666,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/DbExceptionFilter.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsClient.html":{},"classes/NotFoundMsException.html":{},"classes/Roles.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":1236,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["exceptions",{"_index":2787,"title":{},"body":{"classes/MsException.html":{}}}],["exceptions/ms.exception",{"_index":2745,"title":{},"body":{"classes/MsClient.html":{}}}],["exchange",{"_index":614,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["exchanged",{"_index":1444,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["exchangetoken",{"_index":599,"title":{},"body":{"classes/AuthService.html":{}}}],["exchangetoken(refreshtoken",{"_index":612,"title":{},"body":{"classes/AuthService.html":{}}}],["exchangetokenpayload",{"_index":1441,"title":{"classes/ExchangeTokenPayload.html":{}},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["exclude",{"_index":2499,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["excludeproperties",{"_index":3406,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["excluding",{"_index":3574,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":3590,"title":{},"body":{"license.html":{}}}],["execute",{"_index":128,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/enumerations.html":{}}}],["executed",{"_index":206,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"license.html":{}}}],["executes",{"_index":3134,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["execution",{"_index":49,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["executioncontext",{"_index":29,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/DtoInterceptor.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["exercise",{"_index":3697,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":3521,"title":{},"body":{"license.html":{}}}],["exif",{"_index":368,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exifdata",{"_index":1819,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif",{"_index":1900,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.aperturevalue?.description",{"_index":1939,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.brightnessvalue?.description",{"_index":1941,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.colorspace?.description",{"_index":1957,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.contrast?.description",{"_index":1979,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.customrendered?.description",{"_index":1969,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.digitalzoomratio?.description",{"_index":1975,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exifversion?.description",{"_index":1933,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exposurebiasvalue?.description",{"_index":1943,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exposuremode?.description",{"_index":1971,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exposureprogram?.description",{"_index":1929,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exposuretime?.description",{"_index":1925,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.flash?.description",{"_index":1951,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.flashpixversion?.description",{"_index":1955,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.fnumber?.description",{"_index":1927,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.focallength?.description",{"_index":1953,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.interoperabilityindex?.description",{"_index":1993,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.isospeedratings?.description",{"_index":1931,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.lensmake?.description",{"_index":1987,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.lensmodel?.description",{"_index":1989,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.make?.description",{"_index":1903,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.maxaperturevalue?.description",{"_index":1945,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.meteringmode?.description",{"_index":1949,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.model?.description",{"_index":1905,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.offsettime?.description",{"_index":1935,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.orientation?.description",{"_index":1907,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.pixelxdimension?.description",{"_index":1959,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.pixelydimension?.description",{"_index":1961,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.resolutionunit?.description",{"_index":1913,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.saturation?.description",{"_index":1981,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.scenecapturetype?.description",{"_index":1977,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.scenetype?.description",{"_index":1967,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.sensingmethod?.description",{"_index":1965,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.sharpness?.description",{"_index":1983,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.shutterspeedvalue?.description",{"_index":1937,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.software?.description",{"_index":1915,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.subjectdistance?.description",{"_index":1947,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.subjectdistancerange?.description",{"_index":1985,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.whitebalance?.description",{"_index":1973,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.xresolution?.description",{"_index":1909,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.ycbcrpositioning?.description",{"_index":1917,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.yresolution?.description",{"_index":1911,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"compositeimage\"]?.description",{"_index":1991,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"exif",{"_index":1919,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"gps",{"_index":1923,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"interoperability",{"_index":1963,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"interoperabilityversion\"]?.description",{"_index":1995,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.file[\"bits",{"_index":1825,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.file[\"color",{"_index":1834,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.file[\"image",{"_index":1829,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.file[\"subsampling\"]?.description",{"_index":1837,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.gps",{"_index":1852,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.gps?.altitude",{"_index":1855,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.gps?.latitude",{"_index":1859,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.gps?.longitude",{"_index":1857,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc",{"_index":1860,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"connection",{"_index":1871,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"device",{"_index":1885,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"icc",{"_index":1877,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"primary",{"_index":1882,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"profile",{"_index":1863,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"profile/device",{"_index":1866,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"rendering",{"_index":1890,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png",{"_index":1838,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"bit",{"_index":1841,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"color",{"_index":1844,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"compression\"]?.description",{"_index":1847,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"filter\"]?.description",{"_index":1849,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"image",{"_index":1839,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"interlace\"]?.description",{"_index":1851,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exiffilemetadata",{"_index":369,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exiffilemetadataentity",{"_index":1677,"title":{},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{}}}],["exififdpointer",{"_index":405,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exifreader",{"_index":1715,"title":{},"body":{"injectables/FileMetadataService.html":{},"dependencies.html":{}}}],["exifreader.load(buf",{"_index":1820,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifversion",{"_index":411,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exist",{"_index":1282,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["existed",{"_index":2355,"title":{},"body":{"injectables/LocaleService.html":{}}}],["existed?.id",{"_index":2358,"title":{},"body":{"injectables/LocaleService.html":{}}}],["existedentityid",{"_index":1655,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["existing",{"_index":990,"title":{},"body":{"injectables/ConfigService.html":{}}}],["exists",{"_index":2056,"title":{},"body":{"injectables/FileService.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["expanded",{"_index":1821,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["expiration",{"_index":784,"title":{},"body":{"classes/CacheService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"injectables/RedisCacheService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["expire",{"_index":763,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["expire(key",{"_index":770,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["expiresin",{"_index":585,"title":{},"body":{"modules/AuthModule.html":{},"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["explicitarray",{"_index":3325,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["explicitchildren",{"_index":3327,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["explicitly",{"_index":3666,"title":{},"body":{"license.html":{}}}],["explorer",{"_index":1353,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["explorer.constants",{"_index":1354,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorer.service",{"_index":1559,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["explorer.types",{"_index":1482,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["explorer.variation",{"_index":1390,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorer/explorer.module",{"_index":3439,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["exploreraction",{"_index":1365,"title":{"interfaces/ExplorerAction.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["exploreractionentity",{"_index":1465,"title":{"entities/ExplorerActionEntity.html":{}},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerTargetEntity.html":{}}}],["explorercolumn",{"_index":1363,"title":{"interfaces/ExplorerColumn.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorercolumnentity",{"_index":1487,"title":{"entities/ExplorerColumnEntity.html":{}},"body":{"entities/ExplorerColumnEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTargetEntity.html":{}}}],["explorercolumnrenderer",{"_index":1385,"title":{"interfaces/ExplorerColumnRenderer.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorercolumnrendererentity",{"_index":1504,"title":{"entities/ExplorerColumnRendererEntity.html":{}},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{}}}],["explorermodule",{"_index":1550,"title":{"modules/ExplorerModule.html":{}},"body":{"modules/ExplorerModule.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{}}}],["explorermodule.forroot",{"_index":3435,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["explorermoduleoptions",{"_index":1404,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["explorerselectparams",{"_index":1403,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["explorerservice",{"_index":1407,"title":{"classes/ExplorerService.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorertab",{"_index":1388,"title":{"interfaces/ExplorerTab.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorertabentity",{"_index":1526,"title":{"entities/ExplorerTabEntity.html":{}},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["explorertarget",{"_index":1360,"title":{"interfaces/ExplorerTarget.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["explorertargetentity",{"_index":1528,"title":{"entities/ExplorerTargetEntity.html":{}},"body":{"entities/ExplorerColumnEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{}}}],["explorertargetparams",{"_index":1396,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["exploring",{"_index":1552,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["export",{"_index":86,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{}}}],["export.service",{"_index":3438,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["exports",{"_index":592,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"overview.html":{}}}],["exportservice",{"_index":3404,"title":{},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["exportxml",{"_index":3299,"title":{},"body":{"classes/XdbExportService.html":{}}}],["exportxml(params",{"_index":3300,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["expose",{"_index":1450,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["expose()@type(undefined",{"_index":2303,"title":{},"body":{"classes/JwtDto.html":{},"classes/MediaDto.html":{},"classes/MediaFileDto.html":{},"classes/MediaTypeDto.html":{},"classes/UserDto.html":{}}}],["exposurebias",{"_index":416,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exposuremode",{"_index":430,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exposureprogram",{"_index":409,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exposuretime",{"_index":407,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["express",{"_index":81,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["expression",{"_index":1261,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["ext",{"_index":361,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/variables.html":{}}}],["ext.entity",{"_index":2624,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["ext.entity.ts",{"_index":2551,"title":{},"body":{"entities/MediaExtEntity.html":{}}}],["ext.entity.ts:11",{"_index":2553,"title":{},"body":{"entities/MediaExtEntity.html":{}}}],["ext.entity.ts:15",{"_index":2554,"title":{},"body":{"entities/MediaExtEntity.html":{}}}],["extending",{"_index":669,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["extends",{"_index":499,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"injectables/LiteAuthGuard.html":{},"classes/LogService.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"classes/UserSubscriber.html":{}}}],["extension",{"_index":1653,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"miscellaneous/variables.html":{}}}],["extensions",{"_index":2552,"title":{},"body":{"entities/MediaExtEntity.html":{},"miscellaneous/variables.html":{}}}],["extracting",{"_index":3831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extracts",{"_index":56,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["f",{"_index":2534,"title":{},"body":{"entities/MediaEntity.html":{}}}],["f.media",{"_index":2535,"title":{},"body":{"entities/MediaEntity.html":{}}}],["failed",{"_index":2064,"title":{},"body":{"injectables/FileService.html":{}}}],["failure",{"_index":3718,"title":{},"body":{"license.html":{}}}],["false",{"_index":945,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"entities/UserEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["family",{"_index":2206,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["fast",{"_index":970,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fee",{"_index":3727,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":1418,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["fetching",{"_index":503,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["fetchuser",{"_index":20,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["ffprobe",{"_index":1716,"title":{},"body":{"injectables/FileMetadataService.html":{},"dependencies.html":{}}}],["ffprobe(filepath",{"_index":1752,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ffprobemd",{"_index":1751,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ffprobemd.streams.find((v",{"_index":1755,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ffprobestatic",{"_index":1717,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ffprobestatic.path",{"_index":1753,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["field",{"_index":1489,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["fieldname",{"_index":2798,"title":{},"body":{"injectables/NotEmptyPipe.html":{},"interfaces/XdbRequest.html":{}}}],["fields",{"_index":3747,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":3513,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{"interfaces/File.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["file's",{"_index":2027,"title":{},"body":{"injectables/FileService.html":{}}}],["file.constants",{"_index":351,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["file.entity",{"_index":2545,"title":{},"body":{"entities/MediaEntity.html":{},"modules/MediaModule.html":{}}}],["file.entity.ts",{"_index":2564,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:18",{"_index":2571,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:22",{"_index":2566,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:26",{"_index":2573,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:29",{"_index":2575,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:32",{"_index":2570,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:35",{"_index":2574,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:38",{"_index":2568,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:41",{"_index":2572,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.id.tostring",{"_index":2094,"title":{},"body":{"injectables/FileService.html":{}}}],["file.isdirectory",{"_index":1130,"title":{},"body":{"injectables/ConfigService.html":{}}}],["file.isfile",{"_index":1118,"title":{},"body":{"injectables/ConfigService.html":{}}}],["file.length",{"_index":2071,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata",{"_index":2095,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata.audio",{"_index":2100,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata.gps",{"_index":2098,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata.image",{"_index":2096,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata.video",{"_index":2102,"title":{},"body":{"injectables/FileService.html":{}}}],["file.name",{"_index":1119,"title":{},"body":{"injectables/ConfigService.html":{}}}],["file.path",{"_index":2093,"title":{},"body":{"injectables/FileService.html":{}}}],["file.private.dir",{"_index":3993,"title":{},"body":{"additional-documentation/properties/file.properties.html":{}}}],["file.properties",{"_index":3990,"title":{"additional-documentation/properties/file.properties.html":{}},"body":{"additional-documentation/properties/file.properties.html":{}}}],["file.public",{"_index":2091,"title":{},"body":{"injectables/FileService.html":{}}}],["file.public.dir",{"_index":3991,"title":{},"body":{"additional-documentation/properties/file.properties.html":{}}}],["file.service",{"_index":1999,"title":{},"body":{"modules/FileModule.html":{}}}],["file.types",{"_index":489,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"entities/FileMetadataEntity.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["file/entity/file",{"_index":2547,"title":{},"body":{"entities/MediaEntity.html":{}}}],["file/file.module",{"_index":2606,"title":{},"body":{"modules/MediaModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["file/file.types",{"_index":2500,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["filebuffer",{"_index":1274,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fileconfig",{"_index":2044,"title":{},"body":{"injectables/FileService.html":{}}}],["fileconfig.private_dir",{"_index":2047,"title":{},"body":{"injectables/FileService.html":{}}}],["fileconfig.public_dir",{"_index":2049,"title":{},"body":{"injectables/FileService.html":{}}}],["filecontent",{"_index":1133,"title":{},"body":{"injectables/ConfigService.html":{}}}],["filed",{"_index":3626,"title":{},"body":{"license.html":{}}}],["filedata",{"_index":3383,"title":{},"body":{"classes/XdbImportService.html":{}}}],["fileentity",{"_index":1615,"title":{"entities/FileEntity.html":{}},"body":{"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{}}}],["filemanager",{"_index":349,"title":{"classes/FileManager.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["filemanager:131",{"_index":2032,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:148",{"_index":2030,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:159",{"_index":2034,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:168",{"_index":2033,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:177",{"_index":2035,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:187",{"_index":2041,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:66",{"_index":2025,"title":{},"body":{"injectables/FileService.html":{}}}],["filemd",{"_index":350,"title":{"classes/FileMd.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["filemd:45",{"_index":1697,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filemetadata",{"_index":358,"title":{"interfaces/FileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["filemetadataentity",{"_index":1621,"title":{"entities/FileMetadataEntity.html":{}},"body":{"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/MediaEntity.html":{}}}],["filemetadataservice",{"_index":1689,"title":{"injectables/FileMetadataService.html":{}},"body":{"injectables/FileMetadataService.html":{},"modules/FileModule.html":{}}}],["filemodule",{"_index":453,"title":{"modules/FileModule.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"modules/MediaModule.html":{},"interfaces/VideoFileMetadata.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["filemodule.forroot",{"_index":2607,"title":{},"body":{"modules/MediaModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["filemoduleoptions",{"_index":454,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["filename",{"_index":2069,"title":{},"body":{"injectables/FileService.html":{}}}],["filenameprefix",{"_index":1034,"title":{},"body":{"injectables/ConfigService.html":{}}}],["filepath",{"_index":1037,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/LogService.html":{}}}],["filepromises",{"_index":1299,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["filerep",{"_index":2012,"title":{},"body":{"injectables/FileService.html":{}}}],["filerow",{"_index":3399,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["files",{"_index":968,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"entities/FileEntity.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["files.format",{"_index":3872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files.map(async",{"_index":1300,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["files_encoding",{"_index":1056,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["filescount",{"_index":3142,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["fileservice",{"_index":1998,"title":{"injectables/FileService.html":{}},"body":{"modules/FileModule.html":{},"injectables/FileService.html":{}}}],["filesutils",{"_index":1268,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["filesutils.createdirectoriesifnotexist",{"_index":2051,"title":{},"body":{"injectables/FileService.html":{}}}],["filesutils.filetype",{"_index":1727,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filesutils.gethashfrombuffer",{"_index":1726,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filesutils.readdirectoryrecursively",{"_index":3155,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["filetype",{"_index":1269,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{}}}],["filetype().filetypefrombuffer(buf",{"_index":1729,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filetypedata",{"_index":1728,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filetypedata.ext",{"_index":1735,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filetypedata.mime",{"_index":1733,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filetypemodule",{"_index":1255,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["filetypemodule.lib",{"_index":1270,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fill",{"_index":1411,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["filter",{"_index":381,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/VideoFileMetadata.html":{}}}],["filter.ts",{"_index":1219,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["filter.ts:27",{"_index":1230,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["filtering",{"_index":1011,"title":{},"body":{"injectables/ConfigService.html":{}}}],["find",{"_index":696,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["findbycode",{"_index":1647,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{},"classes/MediaManager.html":{}}}],["findbycode(code",{"_index":1657,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["findbyid",{"_index":683,"title":{},"body":{"injectables/BasicUserService.html":{},"classes/UserService.html":{}}}],["findbyid(id",{"_index":694,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["findbylogin",{"_index":684,"title":{},"body":{"injectables/BasicUserService.html":{},"classes/UserService.html":{}}}],["findbylogin(login",{"_index":697,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["findfilebyid",{"_index":1648,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{}}}],["findfilebyid(id",{"_index":1659,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{}}}],["finding",{"_index":2006,"title":{},"body":{"injectables/FileService.html":{}}}],["findmediabyid",{"_index":2516,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["findmediabyid(id",{"_index":2593,"title":{},"body":{"classes/MediaManager.html":{}}}],["findprivatebyid",{"_index":1649,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{},"classes/MediaManager.html":{}}}],["findprivatebyid(id",{"_index":1661,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["findpublicbyid",{"_index":1650,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{},"classes/MediaManager.html":{}}}],["findpublicbyid(id",{"_index":1663,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["finds",{"_index":2031,"title":{},"body":{"injectables/FileService.html":{}}}],["finished",{"_index":217,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["finishes",{"_index":161,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["first",{"_index":3367,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["first_name",{"_index":3205,"title":{},"body":{"entities/UserEntity.html":{}}}],["firstname",{"_index":2367,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["fitness",{"_index":3689,"title":{},"body":{"license.html":{}}}],["flag",{"_index":1291,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["flash",{"_index":420,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["flashpixversion",{"_index":422,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["fn.ts",{"_index":3807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fnumber",{"_index":408,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["focallength",{"_index":421,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["folder",{"_index":3144,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["folders",{"_index":3139,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["folderscount",{"_index":3143,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["following",{"_index":3631,"title":{},"body":{"license.html":{}}}],["font",{"_index":2205,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["for_roles",{"_index":3833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidden",{"_index":2150,"title":{},"body":{"classes/ForbiddenMsException.html":{}}}],["forbiddenexception",{"_index":75,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["forbiddenexception(access_token_error_msg",{"_index":99,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["forbiddenmsexception",{"_index":2148,"title":{"classes/ForbiddenMsException.html":{}},"body":{"classes/ForbiddenMsException.html":{}}}],["force",{"_index":641,"title":{},"body":{"classes/AuthService.html":{},"injectables/FileService.html":{},"injectables/ProcessManagerService.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["form",{"_index":1587,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"license.html":{}}}],["format",{"_index":292,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["format.entity",{"_index":2576,"title":{},"body":{"entities/MediaFileEntity.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{}}}],["format.entity.ts",{"_index":2583,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["format.entity.ts:11",{"_index":2584,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["format.entity.ts:15",{"_index":2586,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["format.entity.ts:18",{"_index":2587,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["format.entity.ts:21",{"_index":2585,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["formats",{"_index":2505,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{},"miscellaneous/variables.html":{}}}],["formatted",{"_index":2446,"title":{},"body":{"classes/LogService.html":{}}}],["forroles",{"_index":3804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forroot",{"_index":518,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["forroot(options",{"_index":519,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["forrootasync",{"_index":793,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/RedisModule.html":{}}}],["forrootasync(options",{"_index":794,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/RedisModule.html":{}}}],["forwardreference",{"_index":3390,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["found",{"_index":59,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/NotFoundMsException.html":{}}}],["founduser",{"_index":318,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["founduser.password",{"_index":323,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["fourth",{"_index":2478,"title":{},"body":{"classes/LogService.html":{}}}],["frame_rate",{"_index":3272,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["framerate",{"_index":449,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["free",{"_index":3593,"title":{},"body":{"license.html":{}}}],["from(value",{"_index":3927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fs",{"_index":1053,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["fs.existssync(localpropertiespath",{"_index":1125,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.existssync(tmpdir",{"_index":3158,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["fs.promises",{"_index":2061,"title":{},"body":{"injectables/FileService.html":{}}}],["fs.promises.access(directorypath",{"_index":1285,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.mkdir(directorypath",{"_index":1286,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.mkdir(gensrcpath",{"_index":1203,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readdir(currentpath",{"_index":1298,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.readdir(directory",{"_index":1115,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readdir(fullpath",{"_index":1176,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readfile",{"_index":1127,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readfile(fullpath",{"_index":1134,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readfile(kppath",{"_index":1122,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readfile(path",{"_index":1292,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.rm(tmpdir",{"_index":3165,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["fs.promises.stat(filepath",{"_index":1303,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.unlink(path.join(fullpath",{"_index":1184,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.writefile(`${outputpath}/${filename",{"_index":2075,"title":{},"body":{"injectables/FileService.html":{}}}],["fs.promises.writefile(configfilepath",{"_index":1205,"title":{},"body":{"injectables/ConfigService.html":{}}}],["ft",{"_index":1264,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["ft.lib",{"_index":1266,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["full",{"_index":501,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/FileService.html":{},"miscellaneous/variables.html":{}}}],["fullkey",{"_index":1109,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fullpath",{"_index":1129,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fullrelations",{"_index":1398,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["fun",{"_index":2708,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["fun(this.safedeserialize(data",{"_index":2710,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["function",{"_index":1260,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["functionality",{"_index":737,"title":{},"body":{"modules/CacheModule.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"injectables/RedisCacheService.html":{},"modules/WarlockModule.html":{}}}],["gateway",{"_index":1226,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["gen",{"_index":573,"title":{},"body":{"modules/AuthModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/variables.html":{}}}],["gen_src_dir",{"_index":1057,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["gencnfdir",{"_index":1018,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["generatecaptcha",{"_index":818,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["generatecolor",{"_index":2190,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["generateconfigtsfiles",{"_index":976,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generated",{"_index":647,"title":{},"body":{"classes/AuthService.html":{},"injectables/ConfigService.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["generatedcontent",{"_index":1170,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generatedfilecontent",{"_index":1201,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generatedtsoutput",{"_index":972,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generatenamespacewithvariables",{"_index":977,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generatenamespacewithvariables(namespacename",{"_index":996,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generaterandomint",{"_index":2231,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["generaterandomstring",{"_index":2229,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["generaterandomstring(5",{"_index":2234,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["generates",{"_index":645,"title":{},"body":{"classes/AuthService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"miscellaneous/variables.html":{}}}],["generating",{"_index":817,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{}}}],["generation",{"_index":2159,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["genre",{"_index":340,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["gensrcfile",{"_index":1179,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcfile.isfile",{"_index":1180,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcfile.name",{"_index":1183,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcfile.name.endswith(config_file_ext_pattern",{"_index":1181,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcfiles",{"_index":1175,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcpath",{"_index":1191,"title":{},"body":{"injectables/ConfigService.html":{}}}],["get(key",{"_index":772,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getaccesstokenfromrequest",{"_index":26,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["getaccesstokenfromrequest(req",{"_index":54,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["getboolean",{"_index":764,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getboolean(key",{"_index":774,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getcallingcontext",{"_index":2425,"title":{},"body":{"classes/LogService.html":{}}}],["getcaptchaexp",{"_index":2191,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["getcaptchafontfamily",{"_index":2192,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["getcaptchafontpath",{"_index":2193,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["getdeletestats",{"_index":3128,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["getdeletestats(dirstruct",{"_index":3136,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["getdescendantsbycodeofroot",{"_index":913,"title":{},"body":{"injectables/CategoryService.html":{}}}],["getdescendantsbycodeofroot(code",{"_index":919,"title":{},"body":{"injectables/CategoryService.html":{}}}],["getentitydata",{"_index":1432,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["getentitydata(target",{"_index":1567,"title":{},"body":{"classes/ExplorerService.html":{}}}],["getfilepath",{"_index":1651,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{}}}],["getfilepath(file",{"_index":1665,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{}}}],["getfrompattern",{"_index":765,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getfrompattern(pattern",{"_index":776,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["gethashfrombuffer",{"_index":1725,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["gethashfrombuffer(buf",{"_index":1731,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["gethashfrombuffer(filebuffer",{"_index":1276,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["getlastlogsbyprocess",{"_index":2854,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getlastlogsbyprocess(processcode",{"_index":2875,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getmediapath",{"_index":2520,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["getmediapath(media",{"_index":2597,"title":{},"body":{"classes/MediaManager.html":{}}}],["getnumber",{"_index":766,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getnumber(key",{"_index":779,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getone",{"_index":2089,"title":{},"body":{"injectables/FileService.html":{}}}],["getpageableentitydata",{"_index":1420,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["getpageableentitydata(target",{"_index":1569,"title":{},"body":{"classes/ExplorerService.html":{}}}],["getprivatedir",{"_index":2010,"title":{},"body":{"injectables/FileService.html":{}}}],["getprocessdata",{"_index":2855,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocessdata(code",{"_index":2879,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocessinstance",{"_index":2997,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["getprocessinstance(processdata.code",{"_index":3008,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["getprocesslogbyid",{"_index":2856,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocesslogbyid(id",{"_index":2883,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocessunitstatus",{"_index":2857,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocessunitstatus(code",{"_index":2885,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getpropertiespage",{"_index":978,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getpropertiespage(params",{"_index":1004,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getpublicdir",{"_index":2011,"title":{},"body":{"injectables/FileService.html":{}}}],["gets",{"_index":146,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/DirectoryStructure.html":{},"injectables/ProcessManagerService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["getstatus",{"_index":129,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["gettargetdata",{"_index":1433,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["gettargetdata(target",{"_index":1571,"title":{},"body":{"classes/ExplorerService.html":{}}}],["gettargetlist",{"_index":1438,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["getting",{"_index":2881,"title":{"index.html":{},"license.html":{}},"body":{"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{}}}],["getxmlparser",{"_index":3323,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["getxmlparser().parsestring(xmldata",{"_index":3350,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["give",{"_index":3632,"title":{},"body":{"license.html":{}}}],["given",{"_index":66,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{}}}],["global",{"_index":1047,"title":{},"body":{"injectables/ConfigService.html":{},"modules/ProcessModule.html":{}}}],["globalkpcontent",{"_index":1044,"title":{},"body":{"injectables/ConfigService.html":{}}}],["goodwill",{"_index":3715,"title":{},"body":{"license.html":{}}}],["google",{"_index":2156,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["google's",{"_index":2166,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["googlecaptchaservice",{"_index":2152,"title":{"classes/GoogleCaptchaService.html":{}},"body":{"classes/GoogleCaptchaService.html":{}}}],["governing",{"_index":556,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["gps",{"_index":364,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["gpsfilemetadata",{"_index":365,"title":{"interfaces/GpsFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["gpsfilemetadataentity",{"_index":1679,"title":{"entities/GpsFileMetadataEntity.html":{}},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/GpsFileMetadataEntity.html":{}}}],["gpsinfoifdpointer",{"_index":406,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["grant",{"_index":3583,"title":{},"body":{"license.html":{}}}],["granted",{"_index":3522,"title":{},"body":{"license.html":{}}}],["granting",{"_index":3498,"title":{},"body":{"license.html":{}}}],["grants",{"_index":3586,"title":{},"body":{"license.html":{}}}],["graph",{"_index":3760,"title":{},"body":{"modules.html":{}}}],["graphic",{"_index":797,"title":{},"body":{"modules/CaptchaModule.html":{},"classes/GraphicCaptchaService.html":{}}}],["graphical",{"_index":2188,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["graphiccaptcharesponse",{"_index":2197,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["graphiccaptchaservice",{"_index":792,"title":{"classes/GraphicCaptchaService.html":{}},"body":{"modules/CaptchaModule.html":{},"classes/GraphicCaptchaService.html":{}}}],["grossly",{"_index":3703,"title":{},"body":{"license.html":{}}}],["guard",{"_index":0,"title":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["handle",{"_index":266,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["handle(target",{"_index":1345,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["handled",{"_index":1406,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["handler",{"_index":1338,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"miscellaneous/variables.html":{}}}],["handler.ts",{"_index":3220,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["handler.ts:29",{"_index":3224,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["handlerequest",{"_index":2724,"title":{},"body":{"classes/MsClient.html":{}}}],["handlerequest(source",{"_index":2733,"title":{},"body":{"classes/MsClient.html":{}}}],["handlers",{"_index":1341,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["handles",{"_index":170,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/MsClient.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{}}}],["handling",{"_index":2329,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["harmless",{"_index":3741,"title":{},"body":{"license.html":{}}}],["hash",{"_index":279,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"dependencies.html":{}}}],["hashed",{"_index":280,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashes",{"_index":275,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["hashpassword",{"_index":269,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashpassword(password",{"_index":273,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashpasswordifneeded",{"_index":270,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashpasswordifneeded(event",{"_index":281,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashsum",{"_index":1277,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["hashsum.digest(\"hex",{"_index":1280,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["hashsum.update(filebuffer",{"_index":1279,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["hasn't",{"_index":2927,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["hasprocessinstance",{"_index":2912,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["hasprocessinstance(code",{"_index":2936,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["hassomerole",{"_index":3114,"title":{},"body":{"guards/RolesGuard.html":{}}}],["hassomerole(userroles",{"_index":3120,"title":{},"body":{"guards/RolesGuard.html":{}}}],["heic",{"_index":3456,"title":{},"body":{"dependencies.html":{}}}],["height",{"_index":374,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["height\"]?.value",{"_index":1830,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["helper",{"_index":2016,"title":{},"body":{"injectables/FileService.html":{}}}],["hereby",{"_index":3585,"title":{},"body":{"license.html":{}}}],["herein",{"_index":3670,"title":{},"body":{"license.html":{}}}],["hex",{"_index":1275,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["highest",{"_index":3098,"title":{},"body":{"classes/Roles.html":{}}}],["hold",{"_index":1252,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["hook",{"_index":2963,"title":{},"body":{"modules/ProcessModule.html":{}}}],["host",{"_index":750,"title":{},"body":{"modules/CacheModule.html":{},"classes/DbExceptionFilter.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["host.switchtohttp().getresponse",{"_index":1234,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["hour",{"_index":3964,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["http",{"_index":1222,"title":{},"body":{"classes/DbExceptionFilter.html":{},"classes/GoogleCaptchaService.html":{}}}],["http://www.apache.org/licenses",{"_index":3485,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":540,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["httpexception",{"_index":2741,"title":{},"body":{"classes/MsClient.html":{}}}],["httpexception(err.message",{"_index":2764,"title":{},"body":{"classes/MsClient.html":{}}}],["https://www.google.com/recaptcha/api/siteverify?secret=${secretkey}&response=${request.data",{"_index":2180,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["httpservice",{"_index":2161,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["httpstatus",{"_index":673,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsClient.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["httpstatus.request_timeout",{"_index":2769,"title":{},"body":{"classes/MsClient.html":{}}}],["httpstatus.too_many_requests",{"_index":3173,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["icc",{"_index":362,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["icc_copyright",{"_index":2274,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["icc_description",{"_index":2275,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["icc_profile_date",{"_index":2278,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["icc_signature",{"_index":2279,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["icccopyright",{"_index":396,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["iccdescription",{"_index":395,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["iccfilemetadata",{"_index":363,"title":{"interfaces/IccFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["iccfilemetadataentity",{"_index":1682,"title":{"entities/IccFileMetadataEntity.html":{}},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/IccFileMetadataEntity.html":{}}}],["iccprofiledate",{"_index":387,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["iccsignature",{"_index":388,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["icon",{"_index":356,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/CategoryEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/variables.html":{}}}],["icon.files",{"_index":3847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.files.format",{"_index":3848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.name",{"_index":3845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.name.lang",{"_index":3846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.type",{"_index":3849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.type.ext",{"_index":3850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconfiles",{"_index":2123,"title":{},"body":{"injectables/FileService.html":{}}}],["iconfilesformat",{"_index":2125,"title":{},"body":{"injectables/FileService.html":{}}}],["iconlang",{"_index":2121,"title":{},"body":{"injectables/FileService.html":{}}}],["iconname",{"_index":2119,"title":{},"body":{"injectables/FileService.html":{}}}],["icontype",{"_index":2127,"title":{},"body":{"injectables/FileService.html":{}}}],["icontypeext",{"_index":2129,"title":{},"body":{"injectables/FileService.html":{}}}],["id",{"_index":203,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{}}}],["identification",{"_index":2028,"title":{},"body":{"injectables/FileService.html":{},"license.html":{}}}],["identifier",{"_index":811,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/ConfigItem.html":{},"classes/Roles.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["identifying",{"_index":3751,"title":{},"body":{"license.html":{}}}],["identity",{"_index":72,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["ifd",{"_index":1920,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ii",{"_index":3511,"title":{},"body":{"license.html":{}}}],["iife",{"_index":1262,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["iii",{"_index":3518,"title":{},"body":{"license.html":{}}}],["image",{"_index":366,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["imagefilemetadata",{"_index":367,"title":{"interfaces/ImageFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["imagefilemetadataentity",{"_index":1684,"title":{"entities/ImageFileMetadataEntity.html":{}},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["imagemin",{"_index":3459,"title":{},"body":{"dependencies.html":{}}}],["immediately",{"_index":1258,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["implement",{"_index":256,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["implemented",{"_index":596,"title":{},"body":{"classes/AuthService.html":{}}}],["implementing",{"_index":3042,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["implements",{"_index":13,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"entities/AudioFileMetadataEntity.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"entities/VideoFileMetadataEntity.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["implied",{"_index":553,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["import",{"_index":74,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["import(\"file",{"_index":1257,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["import.service",{"_index":3437,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["imported",{"_index":1254,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["importfromfile",{"_index":3380,"title":{},"body":{"classes/XdbImportService.html":{}}}],["importfromfile(filedata",{"_index":3314,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["imports",{"_index":577,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["importservice",{"_index":3403,"title":{},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["importxml",{"_index":3381,"title":{},"body":{"classes/XdbImportService.html":{}}}],["importxml(xml",{"_index":3313,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["improving",{"_index":3573,"title":{},"body":{"license.html":{}}}],["inability",{"_index":3713,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":3709,"title":{},"body":{"license.html":{}}}],["include",{"_index":1002,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/XdbRequest.html":{},"license.html":{}}}],["included",{"_index":3536,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3645,"title":{},"body":{"license.html":{}}}],["includeunknown",{"_index":1822,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["including",{"_index":502,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/TargetData.html":{},"license.html":{}}}],["inclusion",{"_index":3558,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":3581,"title":{},"body":{"license.html":{}}}],["incr",{"_index":767,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["incr(key",{"_index":781,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["increment",{"_index":3056,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["incrementing",{"_index":3069,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["increments",{"_index":3055,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["incurred",{"_index":3742,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":3739,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":3730,"title":{},"body":{"license.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index()@column('boolean",{"_index":1496,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{}}}],["index()@column('date",{"_index":2277,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["index()@column('decimal",{"_index":471,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["index()@column('int",{"_index":465,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["index()@column('varchar",{"_index":461,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["index()@column({type",{"_index":1479,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ProcessUnitEntity.html":{}}}],["index()@createdatecolumn({name",{"_index":1633,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["index()@manytoone(undefined",{"_index":1505,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["index()@updatedatecolumn({name",{"_index":2843,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["index({unique",{"_index":842,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["indexable",{"_index":1245,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["indicated",{"_index":3534,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":53,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["indirect",{"_index":3508,"title":{},"body":{"license.html":{}}}],["individual",{"_index":3520,"title":{},"body":{"license.html":{}}}],["infinity",{"_index":1431,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["information",{"_index":606,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"injectables/LocaleSubscriber.html":{},"classes/LoginPayload.html":{},"license.html":{}}}],["informational",{"_index":3655,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":3610,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3623,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":691,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["init",{"_index":2858,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["initconfig",{"_index":3805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initial",{"_index":1172,"title":{},"body":{"injectables/ConfigService.html":{}}}],["initialize",{"_index":2965,"title":{},"body":{"modules/ProcessModule.html":{},"miscellaneous/variables.html":{}}}],["initializes",{"_index":1015,"title":{},"body":{"injectables/ConfigService.html":{},"modules/ExplorerModule.html":{},"injectables/ProcessManagerService.html":{},"miscellaneous/variables.html":{}}}],["initializing",{"_index":2959,"title":{},"body":{"modules/ProcessModule.html":{}}}],["initwithpropertiesfiles",{"_index":979,"title":{},"body":{"injectables/ConfigService.html":{}}}],["initwithpropertiesfiles(gencnfdir",{"_index":1013,"title":{},"body":{"injectables/ConfigService.html":{}}}],["inject",{"_index":506,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"modules/WarlockModule.html":{}}}],["inject(logger",{"_index":509,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["inject(messages_broker",{"_index":2915,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["inject(redis_client",{"_index":3059,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["inject(warlock",{"_index":2914,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["injectable",{"_index":495,"title":{"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"injectables/XmlDataBridgeMiddleware.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["injectables",{"_index":497,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"overview.html":{}}}],["injectdatasource",{"_index":2382,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["injecting",{"_index":3875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectrepository",{"_index":708,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/FileService.html":{},"injectables/LocaleService.html":{},"injectables/ProcessManagerService.html":{}}}],["injectrepository(categoryentity",{"_index":937,"title":{},"body":{"injectables/CategoryService.html":{}}}],["injectrepository(fileentity",{"_index":2052,"title":{},"body":{"injectables/FileService.html":{}}}],["injectrepository(languageentity",{"_index":2346,"title":{},"body":{"injectables/LocaleService.html":{}}}],["injectrepository(localizedmediaentity",{"_index":2348,"title":{},"body":{"injectables/LocaleService.html":{}}}],["injectrepository(localizedstringentity",{"_index":2347,"title":{},"body":{"injectables/LocaleService.html":{}}}],["injectrepository(processlogentity",{"_index":2917,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["injectrepository(processunitentity",{"_index":2916,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["injectrepository(userentity",{"_index":712,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["insert",{"_index":287,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{},"miscellaneous/variables.html":{}}}],["insertevent",{"_index":282,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["insertupdate",{"_index":3400,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["inspect",{"_index":195,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{},"classes/MsClient.html":{}}}],["inspect(data",{"_index":248,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{}}}],["inspect(message",{"_index":242,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{}}}],["inspect(pattern",{"_index":2755,"title":{},"body":{"classes/MsClient.html":{}}}],["instance",{"_index":125,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleSubscriber.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":1747,"title":{},"body":{"injectables/FileMetadataService.html":{},"injectables/LocaleSubscriber.html":{},"modules/RedisModule.html":{}}}],["instances",{"_index":1318,"title":{},"body":{"injectables/DtoInterceptor.html":{},"injectables/LocaleSubscriber.html":{},"injectables/ProcessManagerService.html":{}}}],["institute",{"_index":3614,"title":{},"body":{"license.html":{}}}],["intent\"]?.description",{"_index":1891,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["intent\"]?.value",{"_index":1893,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["intentionally",{"_index":3556,"title":{},"body":{"license.html":{}}}],["interact",{"_index":680,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["intercept",{"_index":1320,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["intercept(context",{"_index":1324,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["interceptor",{"_index":1315,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["interface",{"_index":327,"title":{"interfaces/AudioFileMetadata.html":{},"interfaces/ConfigItem.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"interfaces/Media.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaFormat.html":{},"interfaces/MediaType.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"interfaces/UserRole.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/ConfigItem.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{}}}],["interfaces",{"_index":329,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/ConfigItem.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"interfaces/Media.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaFormat.html":{},"interfaces/MediaType.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"interfaces/UserRole.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"license.html":{},"overview.html":{}}}],["interlace",{"_index":382,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["internalservererrorexception",{"_index":2043,"title":{},"body":{"injectables/FileService.html":{},"injectables/ProcessManagerService.html":{}}}],["internalservererrorexception(`process",{"_index":2937,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["internationalized",{"_index":2402,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["interoperabilityifdpointer",{"_index":426,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["interoperabilityindex",{"_index":441,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["interoperabilityversion",{"_index":442,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["invalid",{"_index":300,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/FileMetadataService.html":{},"classes/InvalidTokenMsException.html":{}}}],["invalidate",{"_index":619,"title":{},"body":{"classes/AuthService.html":{}}}],["invalidated",{"_index":621,"title":{},"body":{"classes/AuthService.html":{}}}],["invalidatetoken",{"_index":600,"title":{},"body":{"classes/AuthService.html":{}}}],["invalidatetoken(accesstoken",{"_index":617,"title":{},"body":{"classes/AuthService.html":{}}}],["invalidtokenmsexception",{"_index":2296,"title":{"classes/InvalidTokenMsException.html":{}},"body":{"classes/InvalidTokenMsException.html":{}}}],["invoked",{"_index":1259,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["ioredis",{"_index":2699,"title":{},"body":{"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"dependencies.html":{}}}],["ip",{"_index":630,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["ipaddress",{"_index":658,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["irrevocable",{"_index":3594,"title":{},"body":{"license.html":{}}}],["isip",{"_index":1448,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["isip()@isoptional",{"_index":2492,"title":{},"body":{"classes/LoginPayload.html":{}}}],["isnotempty",{"_index":805,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["isoptional",{"_index":1449,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["isospeedratings",{"_index":410,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["ispublic",{"_index":1654,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{}}}],["isstring",{"_index":812,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["isstring()@isnotempty",{"_index":808,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/LoginPayload.html":{}}}],["isstring()@isoptional",{"_index":1446,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/LoginPayload.html":{}}}],["issue",{"_index":3569,"title":{},"body":{"license.html":{}}}],["item",{"_index":949,"title":{},"body":{"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["item.$$.map((r",{"_index":3345,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["item.$.key",{"_index":3343,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["item._",{"_index":3342,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["item.value",{"_index":1112,"title":{},"body":{"injectables/ConfigService.html":{}}}],["item[\"#name",{"_index":3340,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["itemname",{"_index":3339,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["items",{"_index":2812,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"miscellaneous/variables.html":{}}}],["itself",{"_index":2411,"title":{},"body":{"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{}}}],["january",{"_index":3483,"title":{},"body":{"license.html":{}}}],["javascript",{"_index":1317,"title":{},"body":{"injectables/DtoInterceptor.html":{},"miscellaneous/variables.html":{}}}],["job",{"_index":2930,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["job.start",{"_index":3018,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["job.stop",{"_index":3021,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["jobs",{"_index":2978,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["join(\"_",{"_index":1152,"title":{},"body":{"injectables/ConfigService.html":{}}}],["joincolumn",{"_index":1638,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["jointable",{"_index":867,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["json",{"_index":856,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"injectables/MessagesBrokerService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["json.parse(data",{"_index":2719,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["json.parse(processedvalue",{"_index":1167,"title":{},"body":{"injectables/ConfigService.html":{}}}],["json.parse(value",{"_index":3928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json.stringify(data",{"_index":2717,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["json.transformer",{"_index":874,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["json.transformer.ts",{"_index":3818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt",{"_index":634,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["jwt_secret_key",{"_index":3955,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["jwtaccesstokenkey",{"_index":648,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["jwtdto",{"_index":608,"title":{"classes/JwtDto.html":{}},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["jwtmodule",{"_index":559,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":579,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtrefreshtokenkey",{"_index":650,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["k",{"_index":3162,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["key",{"_index":646,"title":{},"body":{"classes/AuthService.html":{},"classes/CacheService.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["key.length",{"_index":3169,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["key.replace(`${config_cache_prefix",{"_index":1107,"title":{},"body":{"injectables/ConfigService.html":{}}}],["key.slice(filenameprefix.length",{"_index":1147,"title":{},"body":{"injectables/ConfigService.html":{}}}],["key.startswith(filenameprefix",{"_index":1146,"title":{},"body":{"injectables/ConfigService.html":{}}}],["keys",{"_index":636,"title":{},"body":{"classes/AuthService.html":{},"classes/CacheService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/RedisCacheService.html":{},"miscellaneous/variables.html":{}}}],["keys.join",{"_index":3067,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["keys.push(...chunk",{"_index":3075,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["keys1",{"_index":3371,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keys1.length",{"_index":3375,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keys2",{"_index":3373,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keys2.includes(key",{"_index":3377,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keys2.length",{"_index":3376,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keystoretrieve",{"_index":1101,"title":{},"body":{"injectables/ConfigService.html":{}}}],["keystoretrieve.map(async",{"_index":1105,"title":{},"body":{"injectables/ConfigService.html":{}}}],["keywithoutprefix",{"_index":1145,"title":{},"body":{"injectables/ConfigService.html":{}}}],["kind",{"_index":552,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["kiriliuk",{"_index":528,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["kp",{"_index":1048,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["kp.properties",{"_index":3859,"title":{"additional-documentation/properties/kp.properties.html":{}},"body":{"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["kp.static.files",{"_index":3949,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["kp.tmp.dir",{"_index":3947,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["kp_properties_file_name",{"_index":1058,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["kpconfig",{"_index":3153,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["kppath",{"_index":1120,"title":{},"body":{"injectables/ConfigService.html":{}}}],["label",{"_index":341,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["lang",{"_index":2308,"title":{},"body":{"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{}}}],["language",{"_index":555,"title":{"interfaces/Language.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["language.entity",{"_index":2407,"title":{},"body":{"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{}}}],["languageentity",{"_index":2310,"title":{"entities/LanguageEntity.html":{}},"body":{"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{}}}],["languagerep",{"_index":2343,"title":{},"body":{"injectables/LocaleService.html":{}}}],["languages",{"_index":2312,"title":{},"body":{"entities/LanguageEntity.html":{},"injectables/LocaleService.html":{}}}],["last",{"_index":2877,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["last_name",{"_index":3208,"title":{},"body":{"entities/UserEntity.html":{}}}],["lastname",{"_index":3184,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["lastvaluefrom",{"_index":2170,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["lastvaluefrom(response",{"_index":2181,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["later",{"_index":3177,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["latin",{"_index":307,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["latitude",{"_index":443,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["law",{"_index":544,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["lawsuit",{"_index":3619,"title":{},"body":{"license.html":{}}}],["leftjoinandselect(\"file.icon",{"_index":2108,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"file.metadata",{"_index":2109,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"file.preview",{"_index":2130,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"icon.files",{"_index":2122,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"icon.name",{"_index":2118,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"icon.type",{"_index":2126,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"iconfiles.format",{"_index":2124,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"iconname.lang",{"_index":2120,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"icontype.ext",{"_index":2128,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"metadata.audio",{"_index":2114,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"metadata.gps",{"_index":2110,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"metadata.image",{"_index":2112,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"metadata.video",{"_index":2116,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"preview.files",{"_index":2135,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"preview.name",{"_index":2131,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"preview.type",{"_index":2139,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"previewfiles.format",{"_index":2137,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"previewname.lang",{"_index":2133,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"previewtype.ext",{"_index":2141,"title":{},"body":{"injectables/FileService.html":{}}}],["legal",{"_index":3499,"title":{},"body":{"license.html":{}}}],["legend",{"_index":725,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}],["lensmake",{"_index":438,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["lensmodel",{"_index":439,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["letters",{"_index":308,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["level",{"_index":175,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["levels",{"_index":3480,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["liability",{"_index":3698,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3706,"title":{},"body":{"license.html":{}}}],["lib",{"_index":1256,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["lib/.../access",{"_index":3788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../auth.constants.ts",{"_index":3787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../auth.types.ts",{"_index":3774,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../cache.constants.ts",{"_index":3815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../captcha.constants.ts",{"_index":3794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../captcha.types.ts",{"_index":3775,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../category.constants.ts",{"_index":3795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../config.constants.ts",{"_index":3796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../config.init",{"_index":3806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../constants.ts",{"_index":3814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../current",{"_index":3797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../explorer.constants.ts",{"_index":3783,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/.../explorer.types.ts",{"_index":3776,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../file.types.ts",{"_index":3777,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../files.utils.ts",{"_index":3803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../for",{"_index":3790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../log.constants.ts",{"_index":3808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../media.constants.ts",{"_index":3800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../media.types.ts",{"_index":3779,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../messages",{"_index":3811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../ms",{"_index":3780,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/.../pageable.types.ts",{"_index":3472,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lib/.../process.constants.ts",{"_index":3471,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lib/.../simple",{"_index":3817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../user.constants.ts",{"_index":3824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../user.types.ts",{"_index":3781,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../warlock.constants.ts",{"_index":3825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../warlock.types.ts",{"_index":3784,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../xml",{"_index":3778,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/common/auth/auth.constants.ts",{"_index":593,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["lib/common/auth/auth.constants.ts:109",{"_index":603,"title":{},"body":{"classes/AuthService.html":{}}}],["lib/common/auth/auth.constants.ts:116",{"_index":618,"title":{},"body":{"classes/AuthService.html":{}}}],["lib/common/auth/auth.constants.ts:123",{"_index":613,"title":{},"body":{"classes/AuthService.html":{}}}],["lib/common/auth/auth.module.ts",{"_index":514,"title":{},"body":{"modules/AuthModule.html":{}}}],["lib/common/auth/auth.module.ts:34",{"_index":521,"title":{},"body":{"modules/AuthModule.html":{}}}],["lib/common/auth/auth.types.ts",{"_index":1442,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/auth/auth.types.ts:103",{"_index":2299,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/auth/auth.types.ts:109",{"_index":2301,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/auth/auth.types.ts:115",{"_index":2300,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/auth/auth.types.ts:121",{"_index":2302,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/auth/auth.types.ts:36",{"_index":2494,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:45",{"_index":2495,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:55",{"_index":2493,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:63",{"_index":2490,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:71",{"_index":2491,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:84",{"_index":1447,"title":{},"body":{"classes/ExchangeTokenPayload.html":{}}}],["lib/common/auth/auth.types.ts:97",{"_index":2304,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/captcha/captcha.constants.ts",{"_index":3843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/captcha/captcha.module.ts",{"_index":787,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["lib/common/captcha/captcha.module.ts:28",{"_index":791,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["lib/common/captcha/captcha.module.ts:44",{"_index":796,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["lib/common/captcha/captcha.types.ts",{"_index":803,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/captcha/captcha.types.ts:29",{"_index":829,"title":{},"body":{"classes/CaptchaService.html":{}}}],["lib/common/captcha/captcha.types.ts:36",{"_index":830,"title":{},"body":{"classes/CaptchaService.html":{}}}],["lib/common/captcha/captcha.types.ts:49",{"_index":809,"title":{},"body":{"classes/CaptchaRequest.html":{}}}],["lib/common/captcha/captcha.types.ts:55",{"_index":806,"title":{},"body":{"classes/CaptchaRequest.html":{}}}],["lib/common/captcha/google",{"_index":2153,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["lib/common/captcha/graphic",{"_index":2187,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["lib/common/captcha/montserrat.ttf",{"_index":3983,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["lib/common/config/config.constants.ts",{"_index":3853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/config/config.init",{"_index":3903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/config/config.module.ts",{"_index":961,"title":{},"body":{"modules/ConfigModule.html":{}}}],["lib/common/config/config.service.ts",{"_index":964,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:113",{"_index":1050,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:123",{"_index":1039,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:133",{"_index":1045,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:211",{"_index":1035,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:251",{"_index":1028,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:273",{"_index":998,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:290",{"_index":988,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:322",{"_index":994,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:357",{"_index":1021,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:44",{"_index":1051,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:46",{"_index":1052,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:47",{"_index":986,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:57",{"_index":1014,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:78",{"_index":1006,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.types.ts",{"_index":947,"title":{},"body":{"interfaces/ConfigItem.html":{}}}],["lib/common/explorer/entity/explorer",{"_index":1466,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{}}}],["lib/common/explorer/explorer.constants.ts",{"_index":3785,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/common/explorer/explorer.module.ts",{"_index":1551,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["lib/common/explorer/explorer.module.ts:30",{"_index":1554,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["lib/common/explorer/explorer.module.ts:56",{"_index":1557,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["lib/common/explorer/explorer.types.ts",{"_index":1337,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/explorer/explorer.types.ts:165",{"_index":1347,"title":{},"body":{"interfaces/EntitySaveHandler.html":{}}}],["lib/common/explorer/explorer.types.ts:176",{"_index":1565,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:185",{"_index":1570,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:198",{"_index":1577,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:211",{"_index":1575,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:225",{"_index":1568,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:238",{"_index":1572,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:247",{"_index":1573,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:254",{"_index":1566,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/handlers/user",{"_index":3217,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["lib/common/file/entity/audio",{"_index":457,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["lib/common/file/entity/file",{"_index":1675,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["lib/common/file/entity/file.entity.ts",{"_index":1616,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:25",{"_index":1620,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:29",{"_index":1618,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:32",{"_index":1626,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:35",{"_index":1627,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:38",{"_index":1630,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:41",{"_index":1632,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:44",{"_index":1619,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:47",{"_index":1628,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:54",{"_index":1625,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:58",{"_index":1636,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/gps",{"_index":2183,"title":{},"body":{"entities/GpsFileMetadataEntity.html":{}}}],["lib/common/file/entity/icc",{"_index":2268,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["lib/common/file/entity/image",{"_index":2292,"title":{},"body":{"entities/ImageFileMetadataEntity.html":{}}}],["lib/common/file/entity/video",{"_index":3267,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["lib/common/file/file",{"_index":1690,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["lib/common/file/file.constants.ts",{"_index":1644,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{}}}],["lib/common/file/file.constants.ts:25",{"_index":1656,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:34",{"_index":1658,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:36",{"_index":1660,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:38",{"_index":1664,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:40",{"_index":1662,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:42",{"_index":1666,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:44",{"_index":1668,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:51",{"_index":1674,"title":{},"body":{"classes/FileMd.html":{}}}],["lib/common/file/file.module.ts",{"_index":1996,"title":{},"body":{"modules/FileModule.html":{}}}],["lib/common/file/file.module.ts:32",{"_index":1997,"title":{},"body":{"modules/FileModule.html":{}}}],["lib/common/file/file.service.ts",{"_index":2004,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:226",{"_index":2015,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:256",{"_index":2021,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:273",{"_index":2024,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:283",{"_index":2040,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:292",{"_index":2037,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:44",{"_index":2014,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.types.ts",{"_index":330,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/media/entity/media",{"_index":2550,"title":{},"body":{"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{}}}],["lib/common/media/entity/media.entity.ts",{"_index":2531,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:30",{"_index":2537,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:34",{"_index":2532,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:38",{"_index":2539,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:41",{"_index":2543,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:44",{"_index":2536,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:51",{"_index":2538,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:55",{"_index":2540,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/media.constants.ts",{"_index":3868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/media/media.module.ts",{"_index":2601,"title":{},"body":{"modules/MediaModule.html":{}}}],["lib/common/media/media.module.ts:34",{"_index":2602,"title":{},"body":{"modules/MediaModule.html":{}}}],["lib/common/media/media.types.ts",{"_index":2496,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/media/media.types.ts:100",{"_index":2609,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:104",{"_index":2610,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:107",{"_index":2611,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:110",{"_index":2612,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:113",{"_index":2614,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:116",{"_index":2613,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:124",{"_index":2579,"title":{},"body":{"classes/MediaFormatDto.html":{}}}],["lib/common/media/media.types.ts:127",{"_index":2580,"title":{},"body":{"classes/MediaFormatDto.html":{}}}],["lib/common/media/media.types.ts:130",{"_index":2581,"title":{},"body":{"classes/MediaFormatDto.html":{}}}],["lib/common/media/media.types.ts:133",{"_index":2582,"title":{},"body":{"classes/MediaFormatDto.html":{}}}],["lib/common/media/media.types.ts:141",{"_index":2526,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:144",{"_index":2524,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:147",{"_index":2528,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:151",{"_index":2530,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:155",{"_index":2525,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:158",{"_index":2527,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:161",{"_index":2529,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:169",{"_index":2559,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:172",{"_index":2556,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:176",{"_index":2557,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:179",{"_index":2558,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:182",{"_index":2560,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:185",{"_index":2561,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:188",{"_index":2562,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:191",{"_index":2563,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:198",{"_index":2592,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:200",{"_index":2594,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:205",{"_index":2596,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:207",{"_index":2595,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:209",{"_index":2600,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:211",{"_index":2599,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:213",{"_index":2591,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:221",{"_index":2598,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:97",{"_index":2608,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/process/abstract",{"_index":119,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["lib/common/process/default/tmp",{"_index":3124,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["lib/common/process/entity/process.log.entity.ts",{"_index":2837,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:35",{"_index":2839,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:38",{"_index":2838,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:42",{"_index":2842,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:46",{"_index":2845,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:49",{"_index":2841,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts",{"_index":3024,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:38",{"_index":3026,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:51",{"_index":3033,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:55",{"_index":3030,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:59",{"_index":3029,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:63",{"_index":3028,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:66",{"_index":3032,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:70",{"_index":3034,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/process",{"_index":2850,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["lib/common/process/process.constants.ts",{"_index":3473,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lib/common/process/process.module.ts",{"_index":2958,"title":{},"body":{"modules/ProcessModule.html":{}}}],["lib/common/process/process.module.ts:47",{"_index":2967,"title":{},"body":{"modules/ProcessModule.html":{}}}],["lib/common/process/process.types.ts",{"_index":2833,"title":{},"body":{"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{}}}],["lib/common/user/abstract",{"_index":262,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["lib/common/user/entity/user",{"_index":3239,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["lib/common/user/entity/user.entity.ts",{"_index":3200,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:41",{"_index":3207,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:44",{"_index":3203,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:47",{"_index":3211,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:50",{"_index":3210,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:54",{"_index":3204,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:58",{"_index":3212,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:62",{"_index":3206,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:66",{"_index":3209,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:70",{"_index":3202,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:74",{"_index":3213,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:78",{"_index":3214,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.subscriber.ts",{"_index":3251,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/entity/user.subscriber.ts:35",{"_index":3257,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/entity/user.subscriber.ts:37",{"_index":3262,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/entity/user.subscriber.ts:41",{"_index":3259,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/entity/user.subscriber.ts:46",{"_index":3261,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/user",{"_index":677,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["lib/common/user/user.constants.ts",{"_index":3934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/user/user.module.ts",{"_index":3232,"title":{},"body":{"modules/UserModule.html":{}}}],["lib/common/user/user.module.ts:28",{"_index":3233,"title":{},"body":{"modules/UserModule.html":{}}}],["lib/common/user/user.types.ts",{"_index":3181,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/user/user.types.ts:114",{"_index":3247,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:116",{"_index":3246,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:118",{"_index":3249,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:120",{"_index":3245,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:122",{"_index":3248,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:54",{"_index":3236,"title":{},"body":{"classes/UserRoleDto.html":{}}}],["lib/common/user/user.types.ts:57",{"_index":3237,"title":{},"body":{"classes/UserRoleDto.html":{}}}],["lib/common/user/user.types.ts:60",{"_index":3238,"title":{},"body":{"classes/UserRoleDto.html":{}}}],["lib/common/user/user.types.ts:68",{"_index":3193,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:71",{"_index":3195,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:74",{"_index":3191,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:77",{"_index":3192,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:80",{"_index":3194,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:83",{"_index":3196,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:87",{"_index":3198,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:90",{"_index":3189,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:93",{"_index":3190,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:96",{"_index":3197,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:99",{"_index":3199,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/xml",{"_index":3295,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/constants.ts",{"_index":3091,"title":{},"body":{"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/constants.ts:25",{"_index":3097,"title":{},"body":{"classes/Roles.html":{}}}],["lib/shared/constants.ts:30",{"_index":3093,"title":{},"body":{"classes/Roles.html":{}}}],["lib/shared/constants.ts:35",{"_index":3096,"title":{},"body":{"classes/Roles.html":{}}}],["lib/shared/decorators/access",{"_index":3826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/decorators/current",{"_index":3866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/decorators/for",{"_index":3832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/exceptions/bad",{"_index":662,"title":{},"body":{"classes/BadRequestMsException.html":{}}}],["lib/shared/exceptions/forbidden",{"_index":2149,"title":{},"body":{"classes/ForbiddenMsException.html":{}}}],["lib/shared/exceptions/invalid",{"_index":2297,"title":{},"body":{"classes/InvalidTokenMsException.html":{}}}],["lib/shared/exceptions/ms.exception.ts",{"_index":2785,"title":{},"body":{"classes/MsException.html":{}}}],["lib/shared/exceptions/ms.exception.ts:23",{"_index":2790,"title":{},"body":{"classes/MsException.html":{}}}],["lib/shared/exceptions/not",{"_index":2805,"title":{},"body":{"classes/NotFoundMsException.html":{}}}],["lib/shared/exceptions/too",{"_index":3171,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["lib/shared/exceptions/unauthorized",{"_index":3179,"title":{},"body":{"classes/UnauthorizedMsException.html":{}}}],["lib/shared/filters/db",{"_index":1218,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["lib/shared/guards/abstract",{"_index":6,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["lib/shared/guards/auth.guard.ts",{"_index":498,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["lib/shared/guards/auth.guard.ts:28",{"_index":505,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["lib/shared/guards/lite",{"_index":2320,"title":{},"body":{"injectables/LiteAuthGuard.html":{}}}],["lib/shared/guards/roles.guard.ts",{"_index":3101,"title":{},"body":{"guards/RolesGuard.html":{}}}],["lib/shared/guards/roles.guard.ts:30",{"_index":3105,"title":{},"body":{"guards/RolesGuard.html":{}}}],["lib/shared/guards/roles.guard.ts:33",{"_index":3106,"title":{},"body":{"guards/RolesGuard.html":{}}}],["lib/shared/interceptors/dto.interceptor.ts",{"_index":1314,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["lib/shared/interceptors/dto.interceptor.ts:32",{"_index":1322,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["lib/shared/interceptors/dto.interceptor.ts:35",{"_index":1327,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["lib/shared/modules/cache/cache.constants.ts",{"_index":3922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/modules/cache/cache.module.ts",{"_index":735,"title":{},"body":{"modules/CacheModule.html":{}}}],["lib/shared/modules/cache/cache.types.ts",{"_index":759,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:21",{"_index":773,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:23",{"_index":780,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:25",{"_index":775,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:27",{"_index":785,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:33",{"_index":769,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:35",{"_index":782,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:37",{"_index":771,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:39",{"_index":777,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/redis",{"_index":3040,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["lib/shared/modules/cache/redis.module.ts",{"_index":3081,"title":{},"body":{"modules/RedisModule.html":{}}}],["lib/shared/modules/cache/redis.module.ts:29",{"_index":3083,"title":{},"body":{"modules/RedisModule.html":{}}}],["lib/shared/modules/category/category.constants.ts",{"_index":3844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/modules/category/category.module.ts",{"_index":885,"title":{},"body":{"modules/CategoryModule.html":{}}}],["lib/shared/modules/category/category.service.ts",{"_index":912,"title":{},"body":{"injectables/CategoryService.html":{}}}],["lib/shared/modules/category/category.service.ts:29",{"_index":917,"title":{},"body":{"injectables/CategoryService.html":{}}}],["lib/shared/modules/category/category.service.ts:42",{"_index":921,"title":{},"body":{"injectables/CategoryService.html":{}}}],["lib/shared/modules/category/category.service.ts:60",{"_index":927,"title":{},"body":{"injectables/CategoryService.html":{}}}],["lib/shared/modules/category/entity/category",{"_index":895,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts",{"_index":832,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:40",{"_index":849,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:44",{"_index":844,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:47",{"_index":866,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:51",{"_index":854,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:58",{"_index":859,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:61",{"_index":848,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:65",{"_index":864,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:68",{"_index":861,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:71",{"_index":841,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts",{"_index":2311,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts:28",{"_index":2315,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts:32",{"_index":2313,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts:36",{"_index":2316,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts:39",{"_index":2314,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/locale",{"_index":2362,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["lib/shared/modules/locale/entity/localized",{"_index":2400,"title":{},"body":{"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{}}}],["lib/shared/modules/locale/locale.module.ts",{"_index":2328,"title":{},"body":{"modules/LocaleModule.html":{}}}],["lib/shared/modules/locale/locale.service.ts",{"_index":2337,"title":{},"body":{"injectables/LocaleService.html":{}}}],["lib/shared/modules/locale/locale.service.ts:28",{"_index":2342,"title":{},"body":{"injectables/LocaleService.html":{}}}],["lib/shared/modules/locale/locale.service.ts:44",{"_index":2345,"title":{},"body":{"injectables/LocaleService.html":{}}}],["lib/shared/modules/locale/locale.types.ts",{"_index":2305,"title":{},"body":{"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{}}}],["lib/shared/modules/log/log.constants.ts",{"_index":3916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/modules/log/log.module.ts",{"_index":2417,"title":{},"body":{"modules/LogModule.html":{}}}],["lib/shared/modules/log/log.service.ts",{"_index":2421,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:100",{"_index":2437,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:14",{"_index":2442,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:24",{"_index":2435,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:34",{"_index":2455,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:44",{"_index":2453,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:54",{"_index":2431,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:64",{"_index":2444,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:82",{"_index":2448,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/messages",{"_index":2650,"title":{},"body":{"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/modules/ms",{"_index":2627,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts",{"_index":2807,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"miscellaneous/enumerations.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:16",{"_index":2827,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:25",{"_index":2830,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:33",{"_index":2831,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:41",{"_index":2828,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:49",{"_index":2825,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:56",{"_index":2811,"title":{},"body":{"classes/PageableData.html":{}}}],["lib/shared/modules/warlock/warlock.constants.ts",{"_index":3943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/modules/warlock/warlock.module.ts",{"_index":3278,"title":{},"body":{"modules/WarlockModule.html":{}}}],["lib/shared/modules/warlock/warlock.types.ts",{"_index":3786,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/shared/pipes/not",{"_index":2792,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["lib/shared/transformers/simple",{"_index":3925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/utils/files.utils.ts",{"_index":1238,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/utils/files.utils.ts:43",{"_index":1246,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["licensable",{"_index":3608,"title":{},"body":{"license.html":{}}}],["license",{"_index":532,"title":{"license.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":529,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["licenses",{"_index":3624,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":3495,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":2962,"title":{},"body":{"modules/ProcessModule.html":{}}}],["lifetime",{"_index":3957,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["lightweight",{"_index":2321,"title":{},"body":{"injectables/LiteAuthGuard.html":{}}}],["limit",{"_index":1082,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{}}}],["limitation",{"_index":3687,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":558,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["limited",{"_index":3526,"title":{},"body":{"license.html":{}}}],["line",{"_index":1140,"title":{},"body":{"injectables/ConfigService.html":{},"classes/LogService.html":{}}}],["line.split",{"_index":1144,"title":{},"body":{"injectables/ConfigService.html":{}}}],["line.trim().length",{"_index":1142,"title":{},"body":{"injectables/ConfigService.html":{}}}],["line.trim().startswith",{"_index":1141,"title":{},"body":{"injectables/ConfigService.html":{}}}],["linenumber",{"_index":2440,"title":{},"body":{"classes/LogService.html":{}}}],["lines",{"_index":1138,"title":{},"body":{"injectables/ConfigService.html":{},"classes/LogService.html":{}}}],["lines.length",{"_index":2479,"title":{},"body":{"classes/LogService.html":{}}}],["lines[3].match(/at\\s+(.+?)\\s+\\((.+):(\\d+):\\d",{"_index":2482,"title":{},"body":{"classes/LogService.html":{}}}],["link",{"_index":3551,"title":{},"body":{"license.html":{}}}],["links",{"_index":2565,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["list",{"_index":1434,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["listens",{"_index":2364,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["listento",{"_index":3256,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lists",{"_index":1469,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"license.html":{}}}],["liteauthguard",{"_index":2319,"title":{"injectables/LiteAuthGuard.html":{}},"body":{"injectables/LiteAuthGuard.html":{}}}],["literal",{"_index":795,"title":{},"body":{"modules/CaptchaModule.html":{},"injectables/ConfigService.html":{},"classes/LogService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/typealiases.html":{}}}],["litigation",{"_index":3615,"title":{},"body":{"license.html":{}}}],["loaded",{"_index":3852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loads",{"_index":3914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":1024,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["local.properties",{"_index":3863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local_properties_file_name",{"_index":1059,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["localcontent",{"_index":1020,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localcontent.split(\"\\n",{"_index":1210,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localcontentlines",{"_index":1209,"title":{},"body":{"injectables/ConfigService.html":{}}}],["locale.service",{"_index":2335,"title":{},"body":{"modules/LocaleModule.html":{}}}],["locale.types",{"_index":2317,"title":{},"body":{"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{}}}],["locale/entity/localized",{"_index":871,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["localemodule",{"_index":2323,"title":{"modules/LocaleModule.html":{}},"body":{"modules/LocaleModule.html":{},"modules.html":{},"overview.html":{}}}],["localeservice",{"_index":2327,"title":{"injectables/LocaleService.html":{}},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"overview.html":{}}}],["localesubscriber",{"_index":2361,"title":{"injectables/LocaleSubscriber.html":{}},"body":{"injectables/LocaleSubscriber.html":{}}}],["localization",{"_index":2330,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{}}}],["localized",{"_index":2307,"title":{},"body":{"interfaces/Language.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{}}}],["localizedmedia",{"_index":2309,"title":{"interfaces/LocalizedMedia.html":{}},"body":{"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{}}}],["localizedmediaentity",{"_index":2333,"title":{"entities/LocalizedMediaEntity.html":{}},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{}}}],["localizedmediaproperties",{"_index":2398,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["localizedmediaproperties.length",{"_index":2399,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["localizedmediarep",{"_index":2341,"title":{},"body":{"injectables/LocaleService.html":{}}}],["localizedstring",{"_index":1350,"title":{"interfaces/LocalizedString.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["localizedstringentity",{"_index":850,"title":{"entities/LocalizedStringEntity.html":{}},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["localizedstringproperties",{"_index":2385,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["localizedstringproperties.length",{"_index":2390,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["localizedstringrep",{"_index":2340,"title":{},"body":{"injectables/LocaleService.html":{}}}],["localkey",{"_index":1215,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localline",{"_index":1212,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localline.split",{"_index":1216,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localline.trim().length",{"_index":1214,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localline.trim().startswith",{"_index":1213,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localpropertiescontent",{"_index":1126,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localpropertiespath",{"_index":1123,"title":{},"body":{"injectables/ConfigService.html":{}}}],["located",{"_index":2477,"title":{},"body":{"classes/LogService.html":{},"miscellaneous/variables.html":{}}}],["lock",{"_index":3287,"title":{},"body":{"modules/WarlockModule.html":{}}}],["lockcode",{"_index":3289,"title":{},"body":{"modules/WarlockModule.html":{}}}],["lockexec",{"_index":2871,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["locking",{"_index":3279,"title":{},"body":{"modules/WarlockModule.html":{},"miscellaneous/typealiases.html":{}}}],["lockkey",{"_index":3286,"title":{},"body":{"modules/WarlockModule.html":{}}}],["lockkey}:${lockcode",{"_index":3292,"title":{},"body":{"modules/WarlockModule.html":{}}}],["locklifetime",{"_index":3284,"title":{},"body":{"modules/WarlockModule.html":{}}}],["log",{"_index":178,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/enumerations.html":{}}}],["log(message",{"_index":2441,"title":{},"body":{"classes/LogService.html":{}}}],["log.constants",{"_index":2420,"title":{},"body":{"modules/LogModule.html":{}}}],["log.service",{"_index":2419,"title":{},"body":{"modules/LogModule.html":{}}}],["log/log.constants",{"_index":741,"title":{},"body":{"modules/CacheModule.html":{},"injectables/CategoryService.html":{},"injectables/LocaleSubscriber.html":{},"modules/MessagesBrokerModule.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/RedisCacheService.html":{},"modules/WarlockModule.html":{}}}],["log/log.module",{"_index":740,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/WarlockModule.html":{}}}],["logger",{"_index":21,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"injectables/AuthGuard.html":{},"modules/CacheModule.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"modules/MessagesBrokerModule.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"modules/WarlockModule.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":2373,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"modules/LogModule.html":{},"classes/MsClient.html":{}}}],["login",{"_index":291,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["loginpayload",{"_index":602,"title":{"classes/LoginPayload.html":{}},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["loginregex",{"_index":301,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["loginregex.test(login",{"_index":305,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["loginstance",{"_index":126,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["loglevel",{"_index":197,"title":{},"body":{"classes/AbstractProcess.html":{},"miscellaneous/enumerations.html":{}}}],["loglevel.debug",{"_index":236,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["loglevel.error",{"_index":224,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["loglevel.log",{"_index":186,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["loglevel.verbose",{"_index":238,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["loglevel.warn",{"_index":234,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["logmodule",{"_index":567,"title":{"modules/LogModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"overview.html":{}}}],["logs",{"_index":2432,"title":{},"body":{"classes/LogService.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["logservice",{"_index":2418,"title":{"classes/LogService.html":{}},"body":{"modules/LogModule.html":{},"classes/LogService.html":{},"miscellaneous/variables.html":{}}}],["longitude",{"_index":444,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["loss",{"_index":3714,"title":{},"body":{"license.html":{}}}],["losses",{"_index":3721,"title":{},"body":{"license.html":{}}}],["ls",{"_index":2350,"title":{},"body":{"injectables/LocaleService.html":{}}}],["ls.code",{"_index":2353,"title":{},"body":{"injectables/LocaleService.html":{}}}],["ls.id",{"_index":2357,"title":{},"body":{"injectables/LocaleService.html":{}}}],["ls.lang",{"_index":2351,"title":{},"body":{"injectables/LocaleService.html":{}}}],["ls.value",{"_index":2352,"title":{},"body":{"injectables/LocaleService.html":{}}}],["m",{"_index":2469,"title":{},"body":{"classes/LogService.html":{}}}],["m.endswith",{"_index":2471,"title":{},"body":{"classes/LogService.html":{}}}],["m.length",{"_index":2473,"title":{},"body":{"classes/LogService.html":{}}}],["m.startswith",{"_index":2470,"title":{},"body":{"classes/LogService.html":{}}}],["m.substring(1",{"_index":2472,"title":{},"body":{"classes/LogService.html":{}}}],["made",{"_index":3174,"title":{},"body":{"classes/TooManyRequestsMsException.html":{},"license.html":{}}}],["mailing",{"_index":3567,"title":{},"body":{"license.html":{}}}],["main",{"_index":1023,"title":{},"body":{"injectables/ConfigService.html":{},"classes/LogService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["maincontent",{"_index":1025,"title":{},"body":{"injectables/ConfigService.html":{}}}],["maincontent.split(\"\\n",{"_index":1208,"title":{},"body":{"injectables/ConfigService.html":{}}}],["maincontentlines",{"_index":1207,"title":{},"body":{"injectables/ConfigService.html":{}}}],["make",{"_index":397,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["makeimagefromtext",{"_index":2194,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["makeimagefromtext(text",{"_index":2209,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["making",{"_index":3524,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":3719,"title":{},"body":{"license.html":{}}}],["managed",{"_index":3570,"title":{},"body":{"license.html":{}}}],["management",{"_index":1645,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"license.html":{}}}],["manager",{"_index":311,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/ProcessManagerService.html":{},"classes/Roles.html":{}}}],["manager.findone(this.type",{"_index":320,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["manager.service",{"_index":188,"title":{},"body":{"classes/AbstractProcess.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["manager.service.ts",{"_index":2851,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:111",{"_index":2900,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:130",{"_index":2894,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:141",{"_index":2886,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:151",{"_index":2873,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:164",{"_index":2904,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:174",{"_index":2880,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:184",{"_index":2884,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:197",{"_index":2876,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:208",{"_index":2891,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:42",{"_index":2870,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:57",{"_index":2887,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:83",{"_index":2896,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:97",{"_index":2898,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manages",{"_index":2158,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["managing",{"_index":124,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"modules/UserModule.html":{},"additional-documentation/properties/media.properties.html":{}}}],["manufacturer\"]?.description",{"_index":1886,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["many",{"_index":3172,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["manytomany",{"_index":868,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["manytomany(undefined",{"_index":851,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["manytomany(undefined)@jointable",{"_index":902,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/UserEntity.html":{}}}],["manytoone",{"_index":869,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/UserEntity.html":{}}}],["manytoone(undefined",{"_index":846,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/UserEntity.html":{}}}],["map",{"_index":1329,"title":{},"body":{"injectables/DtoInterceptor.html":{},"injectables/MessagesBrokerService.html":{},"miscellaneous/variables.html":{}}}],["map((part",{"_index":1150,"title":{},"body":{"injectables/ConfigService.html":{}}}],["marked",{"_index":3576,"title":{},"body":{"license.html":{}}}],["marks",{"_index":3678,"title":{},"body":{"license.html":{}}}],["match",{"_index":3051,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["matches",{"_index":2481,"title":{},"body":{"classes/LogService.html":{}}}],["matches.length",{"_index":2483,"title":{},"body":{"classes/LogService.html":{}}}],["matches[1",{"_index":2487,"title":{},"body":{"classes/LogService.html":{}}}],["matches[2].split(\"/\").slice",{"_index":2485,"title":{},"body":{"classes/LogService.html":{}}}],["matches[3",{"_index":2488,"title":{},"body":{"classes/LogService.html":{}}}],["matching",{"_index":116,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["max",{"_index":2814,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["max(1000",{"_index":2817,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["maxaperture",{"_index":417,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["maxdepth",{"_index":1429,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["maximum",{"_index":924,"title":{},"body":{"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["md",{"_index":1700,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio",{"_index":1757,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.album",{"_index":1809,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.artist",{"_index":1811,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.bitrate",{"_index":1766,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.codec",{"_index":1760,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.codecprofile",{"_index":1802,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.container",{"_index":1758,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.duration",{"_index":1762,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.genre",{"_index":1815,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.label",{"_index":1817,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.numberofchannels",{"_index":1764,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.samplerate",{"_index":1798,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.title",{"_index":1807,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.tool",{"_index":1804,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.year",{"_index":1813,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif",{"_index":1901,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.aperture",{"_index":1938,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.brightness",{"_index":1940,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.colorspace",{"_index":1956,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.compositeimage",{"_index":1990,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.contrast",{"_index":1978,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.customrendered",{"_index":1968,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.digitalzoomratio",{"_index":1974,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exififdpointer",{"_index":1918,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exifversion",{"_index":1932,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exposurebias",{"_index":1942,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exposuremode",{"_index":1970,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exposureprogram",{"_index":1928,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exposuretime",{"_index":1924,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.flash",{"_index":1950,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.flashpixversion",{"_index":1954,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.fnumber",{"_index":1926,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.focallength",{"_index":1952,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.gpsinfoifdpointer",{"_index":1922,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.interoperabilityifdpointer",{"_index":1962,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.interoperabilityindex",{"_index":1992,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.interoperabilityversion",{"_index":1994,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.isospeedratings",{"_index":1930,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.lensmake",{"_index":1986,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.lensmodel",{"_index":1988,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.make",{"_index":1902,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.maxaperture",{"_index":1944,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.meteringmode",{"_index":1948,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.model",{"_index":1904,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.offsettime",{"_index":1934,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.orientation",{"_index":1906,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.pixelxdimension",{"_index":1958,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.pixelydimension",{"_index":1960,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.resolutionunit",{"_index":1912,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.resolutionx",{"_index":1908,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.resolutiony",{"_index":1910,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.saturation",{"_index":1980,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.scenecapturetype",{"_index":1976,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.scenetype",{"_index":1966,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.sensingmethod",{"_index":1964,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.sharpness",{"_index":1982,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.shutterspeedvalue",{"_index":1936,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.software",{"_index":1914,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.subjectdistance",{"_index":1946,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.subjectdistancerange",{"_index":1984,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.whitebalance",{"_index":1972,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.ycbcrpositioning",{"_index":1916,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.ext",{"_index":1734,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.gps",{"_index":1853,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.gps.altitude",{"_index":1854,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.gps.latitude",{"_index":1858,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.gps.longitude",{"_index":1856,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.hash",{"_index":1730,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc",{"_index":1861,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.connectionspace",{"_index":1870,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.devicemanufacturer",{"_index":1884,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.devicemodelnumber",{"_index":1887,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.icccopyright",{"_index":1898,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.iccdescription",{"_index":1896,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.iccprofiledate",{"_index":1873,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.iccsignature",{"_index":1879,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.primaryplatform",{"_index":1881,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.profileclassname",{"_index":1865,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.profileclassvalue",{"_index":1868,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.profilecreator",{"_index":1894,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.profileversion",{"_index":1862,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.renderingintentname",{"_index":1889,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.renderingintentvalue",{"_index":1892,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image",{"_index":1823,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.bitdepth",{"_index":1840,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.bps",{"_index":1824,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.colorcomponents",{"_index":1833,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.colortype",{"_index":1843,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.compression",{"_index":1846,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.datetime",{"_index":1878,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.filter",{"_index":1848,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.height",{"_index":1828,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.interlace",{"_index":1850,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.subsampling",{"_index":1836,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.width",{"_index":1831,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.mime",{"_index":1732,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.mime.startswith(\"audio",{"_index":1738,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.mime.startswith(\"image",{"_index":1736,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.mime.startswith(\"video",{"_index":1740,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video",{"_index":1769,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.bitrate",{"_index":1778,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.codec",{"_index":1770,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.colorrange",{"_index":1786,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.colorspace",{"_index":1788,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.container",{"_index":1772,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.displayaspectratio",{"_index":1784,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.duration",{"_index":1780,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.framerate",{"_index":1790,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.height",{"_index":1776,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.rotate",{"_index":1792,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.sampleaspectratio",{"_index":1782,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.width",{"_index":1774,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["mean",{"_index":3491,"title":{},"body":{"license.html":{}}}],["means",{"_index":3505,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":3529,"title":{},"body":{"license.html":{}}}],["mechanism",{"_index":3945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mechanisms",{"_index":3280,"title":{},"body":{"modules/WarlockModule.html":{},"miscellaneous/typealiases.html":{}}}],["media",{"_index":347,"title":{"interfaces/Media.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["media.entity",{"_index":2334,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaFileEntity.html":{}}}],["media.entity.ts",{"_index":2401,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.entity.ts:34",{"_index":2404,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.entity.ts:38",{"_index":2403,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.entity.ts:41",{"_index":2405,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.entity.ts:44",{"_index":2406,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.private.dir",{"_index":4000,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["media.properties",{"_index":3995,"title":{"additional-documentation/properties/media.properties.html":{}},"body":{"additional-documentation/properties/media.properties.html":{}}}],["media.public.dir",{"_index":3996,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["media.service",{"_index":2604,"title":{},"body":{"modules/MediaModule.html":{}}}],["media.types",{"_index":2546,"title":{},"body":{"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{}}}],["media/entity/media.entity",{"_index":1612,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/UserEntity.html":{}}}],["media/media.module",{"_index":3440,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["media/media.types",{"_index":348,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/TargetData.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["media_relations",{"_index":3809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media_type_relations",{"_index":3810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mediadto",{"_index":2513,"title":{"classes/MediaDto.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediaentity",{"_index":845,"title":{"entities/MediaEntity.html":{}},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"entities/UserEntity.html":{}}}],["mediaext",{"_index":2504,"title":{"interfaces/MediaExt.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediaextentity",{"_index":2549,"title":{"entities/MediaExtEntity.html":{}},"body":{"entities/MediaExtEntity.html":{},"entities/MediaTypeEntity.html":{}}}],["mediafile",{"_index":2497,"title":{"interfaces/MediaFile.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediafiledto",{"_index":2514,"title":{"classes/MediaFileDto.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediafileentity",{"_index":2533,"title":{"entities/MediaFileEntity.html":{}},"body":{"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"modules/MediaModule.html":{}}}],["mediaformat",{"_index":2506,"title":{"interfaces/MediaFormat.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediaformatdto",{"_index":2512,"title":{"classes/MediaFormatDto.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediaformatentity",{"_index":2567,"title":{"entities/MediaFormatEntity.html":{}},"body":{"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{}}}],["mediamanager",{"_index":2515,"title":{"classes/MediaManager.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediamodule",{"_index":2522,"title":{"modules/MediaModule.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["mediamodule.forroot",{"_index":3436,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["mediamoduleoptions",{"_index":2523,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"miscellaneous/typealiases.html":{}}}],["mediarow",{"_index":3398,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["mediaservice",{"_index":2603,"title":{},"body":{"modules/MediaModule.html":{}}}],["mediatype",{"_index":2498,"title":{"interfaces/MediaType.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediatypedto",{"_index":2511,"title":{"classes/MediaTypeDto.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediatypeentity",{"_index":2541,"title":{"entities/MediaTypeEntity.html":{}},"body":{"entities/MediaEntity.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{}}}],["medium",{"_index":3629,"title":{},"body":{"license.html":{}}}],["meet",{"_index":3630,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":3688,"title":{},"body":{"license.html":{}}}],["merely",{"_index":3550,"title":{},"body":{"license.html":{}}}],["merged",{"_index":1026,"title":{},"body":{"injectables/ConfigService.html":{}}}],["mergedcontent",{"_index":1211,"title":{},"body":{"injectables/ConfigService.html":{}}}],["mergepropertiescontent",{"_index":980,"title":{},"body":{"injectables/ConfigService.html":{}}}],["mergepropertiescontent(maincontent",{"_index":1019,"title":{},"body":{"injectables/ConfigService.html":{}}}],["merges",{"_index":1022,"title":{},"body":{"injectables/ConfigService.html":{}}}],["message",{"_index":181,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"classes/DbExceptionFilter.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/LogService.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"miscellaneous/variables.html":{}}}],["messagebus",{"_index":2626,"title":{"interfaces/MessageBus.html":{}},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["messages",{"_index":2374,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["messages_broker",{"_index":2671,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"miscellaneous/variables.html":{}}}],["messagesbroker",{"_index":2649,"title":{"interfaces/MessagesBroker.html":{}},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{}}}],["messagesbrokermodule",{"_index":2667,"title":{"modules/MessagesBrokerModule.html":{}},"body":{"modules/MessagesBrokerModule.html":{},"modules/ProcessModule.html":{},"modules.html":{},"overview.html":{}}}],["messagesbrokerservice",{"_index":2674,"title":{"injectables/MessagesBrokerService.html":{}},"body":{"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessRegisterService.html":{},"miscellaneous/variables.html":{}}}],["metaaudio",{"_index":2115,"title":{},"body":{"injectables/FileService.html":{}}}],["metadata",{"_index":332,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["metadata.entity",{"_index":1641,"title":{},"body":{"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/MediaEntity.html":{}}}],["metadata.entity.ts",{"_index":458,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:10",{"_index":478,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:14",{"_index":470,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:18",{"_index":467,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:19",{"_index":2184,"title":{},"body":{"entities/GpsFileMetadataEntity.html":{}}}],["metadata.entity.ts:22",{"_index":483,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:25",{"_index":1685,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.entity.ts:26",{"_index":481,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:28",{"_index":1678,"title":{},"body":{"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{}}}],["metadata.entity.ts:30",{"_index":466,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:31",{"_index":1681,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.entity.ts:34",{"_index":469,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:37",{"_index":2185,"title":{},"body":{"entities/GpsFileMetadataEntity.html":{}}}],["metadata.entity.ts:38",{"_index":485,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:39",{"_index":3271,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:42",{"_index":2271,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:43",{"_index":3274,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:45",{"_index":1680,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.entity.ts:46",{"_index":2273,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:47",{"_index":475,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:50",{"_index":2289,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:51",{"_index":484,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:52",{"_index":1683,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.entity.ts:54",{"_index":2287,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:55",{"_index":464,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:58",{"_index":2284,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["metadata.entity.ts:59",{"_index":463,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:62",{"_index":2276,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["metadata.entity.ts:63",{"_index":486,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:66",{"_index":1676,"title":{},"body":{"entities/FileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{}}}],["metadata.entity.ts:67",{"_index":476,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["metadata.entity.ts:71",{"_index":479,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["metadata.entity.ts:73",{"_index":1687,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.service",{"_index":2000,"title":{},"body":{"modules/FileModule.html":{}}}],["metadata.service.ts",{"_index":1691,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadata.service.ts:101",{"_index":1704,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadata.service.ts:139",{"_index":1699,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadata.service.ts:166",{"_index":1702,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadata.service.ts:72",{"_index":1706,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadataservice",{"_index":2013,"title":{},"body":{"injectables/FileService.html":{}}}],["metagps",{"_index":2111,"title":{},"body":{"injectables/FileService.html":{}}}],["metaimage",{"_index":2113,"title":{},"body":{"injectables/FileService.html":{}}}],["metavideo",{"_index":2117,"title":{},"body":{"injectables/FileService.html":{}}}],["meteringmode",{"_index":419,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["method",{"_index":152,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/FileService.html":{},"classes/LogService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["methodname",{"_index":2439,"title":{},"body":{"classes/LogService.html":{}}}],["methods",{"_index":23,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["microservice",{"_index":665,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["microservices",{"_index":2647,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/Roles.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["middle",{"_index":2264,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["middleware",{"_index":3410,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["mime",{"_index":360,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["min",{"_index":2815,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["min(1",{"_index":2816,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["min(1)@max(1000)@type(undefined",{"_index":2826,"title":{},"body":{"classes/PageableParams.html":{}}}],["min(1)@type(undefined",{"_index":2829,"title":{},"body":{"classes/PageableParams.html":{}}}],["minutes",{"_index":3960,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["miscellaneous",{"_index":3469,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":3396,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["model",{"_index":398,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["modifications",{"_index":3525,"title":{},"body":{"license.html":{}}}],["modified",{"_index":3634,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":3418,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["modify",{"_index":3656,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":3661,"title":{},"body":{"license.html":{}}}],["module",{"_index":511,"title":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"modules/FileModule.html":{},"classes/JwtDto.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"classes/LoginPayload.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"interfaces/TargetData.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module.interface",{"_index":3389,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["modules",{"_index":513,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/cache/cache.types",{"_index":82,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["modules/log/log.constants",{"_index":508,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["montserrat",{"_index":3985,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["more",{"_index":3515,"title":{},"body":{"license.html":{}}}],["mozjpeg",{"_index":3460,"title":{},"body":{"dependencies.html":{}}}],["ms",{"_index":2742,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["ms.exception",{"_index":674,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["ms.exception.ts",{"_index":663,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["ms.exception.ts:23",{"_index":672,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["ms_client",{"_index":2776,"title":{},"body":{"modules/MsClientModule.html":{},"miscellaneous/variables.html":{}}}],["ms_exception_id",{"_index":2744,"title":{},"body":{"classes/MsClient.html":{},"classes/MsException.html":{},"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["msclient",{"_index":2720,"title":{"classes/MsClient.html":{}},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["msclient(logger",{"_index":2784,"title":{},"body":{"modules/MsClientModule.html":{}}}],["msclientmodule",{"_index":2771,"title":{"modules/MsClientModule.html":{}},"body":{"modules/MsClientModule.html":{},"modules.html":{},"overview.html":{}}}],["msclientoptions",{"_index":2638,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"miscellaneous/typealiases.html":{}}}],["msexception",{"_index":670,"title":{"classes/MsException.html":{}},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/Roles.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":241,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.endswith",{"_index":244,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.length",{"_index":246,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.replace(/\\[/g",{"_index":249,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.replace(/]/g",{"_index":250,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.startswith",{"_index":243,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.substring(1",{"_index":245,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg_bus",{"_index":2777,"title":{},"body":{"modules/MsClientModule.html":{},"miscellaneous/variables.html":{}}}],["multiple",{"_index":1374,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["music",{"_index":1714,"title":{},"body":{"injectables/FileMetadataService.html":{},"dependencies.html":{}}}],["musicmd",{"_index":1794,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.album",{"_index":1810,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.artists?.join",{"_index":1812,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.genre?.join",{"_index":1816,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.label?.join",{"_index":1818,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.title",{"_index":1808,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.year",{"_index":1814,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.bitrate",{"_index":1801,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.codec",{"_index":1797,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.codecprofile",{"_index":1803,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.container",{"_index":1796,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.duration",{"_index":1806,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.numberofchannels",{"_index":1800,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.samplerate",{"_index":1799,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.tool",{"_index":1805,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["myentity",{"_index":2366,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["n",{"_index":254,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{}}}],["name",{"_index":45,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"classes/LogService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["name.lang",{"_index":3851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["named",{"_index":1375,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["namedcolumn",{"_index":1394,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["names",{"_index":1241,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"license.html":{}}}],["namespace",{"_index":999,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["namespacename",{"_index":1001,"title":{},"body":{"injectables/ConfigService.html":{}}}],["necessarily",{"_index":3609,"title":{},"body":{"license.html":{}}}],["need",{"_index":931,"title":{},"body":{"injectables/CategoryService.html":{}}}],["needed",{"_index":157,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["needs",{"_index":258,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["negligence",{"_index":3701,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":3704,"title":{},"body":{"license.html":{}}}],["neighboring",{"_index":3864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nest",{"_index":2423,"title":{},"body":{"classes/LogService.html":{}}}],["nested",{"_index":1243,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["nestfactory.createapplicationcontext(configmodule",{"_index":3905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestinterceptor",{"_index":1328,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["nestjs",{"_index":2961,"title":{},"body":{"modules/ProcessModule.html":{}}}],["nestjs/axios",{"_index":2169,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":76,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"classes/ExchangeTokenPayload.html":{},"modules/ExplorerModule.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces/modules/dynamic",{"_index":3388,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["nestjs/common/interfaces/modules/forward",{"_index":3391,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["nestjs/common/interfaces/type.interface",{"_index":296,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{}}}],["nestjs/core",{"_index":3107,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":560,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":2738,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":562,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":2969,"title":{},"body":{"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":709,"title":{},"body":{"injectables/BasicUserService.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"modules/MediaModule.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"modules/UserModule.html":{}}}],["nestmiddleware",{"_index":3422,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["new",{"_index":98,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"classes/ExchangeTokenPayload.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["newrelativepath",{"_index":1304,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["newuser",{"_index":719,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["next",{"_index":1325,"title":{},"body":{"injectables/DtoInterceptor.html":{},"classes/MsClient.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["nextfunction",{"_index":3416,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["node",{"_index":3281,"title":{},"body":{"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["node:events",{"_index":1251,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["node:fs",{"_index":1249,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["node_modules",{"_index":1174,"title":{},"body":{"injectables/ConfigService.html":{}}}],["non",{"_index":3589,"title":{},"body":{"license.html":{}}}],["normalized",{"_index":2039,"title":{},"body":{"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{}}}],["normalizes",{"_index":2208,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["normally",{"_index":3653,"title":{},"body":{"license.html":{}}}],["note",{"_index":3959,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["notemptypipe",{"_index":2791,"title":{"injectables/NotEmptyPipe.html":{}},"body":{"injectables/NotEmptyPipe.html":{}}}],["notfoundexception",{"_index":706,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/FileService.html":{}}}],["notfoundexception(`file",{"_index":2086,"title":{},"body":{"injectables/FileService.html":{}}}],["notfoundexception(`user",{"_index":722,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["notfoundmsexception",{"_index":2804,"title":{"classes/NotFoundMsException.html":{}},"body":{"classes/NotFoundMsException.html":{}}}],["nothing",{"_index":3669,"title":{},"body":{"license.html":{}}}],["notice",{"_index":3535,"title":{},"body":{"license.html":{}}}],["notices",{"_index":3637,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":3667,"title":{},"body":{"license.html":{}}}],["now",{"_index":205,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["null",{"_index":61,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["nullable",{"_index":462,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["number",{"_index":314,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"classes/CacheService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"classes/MsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{}}}],["number\"]?.description",{"_index":1888,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["number_of_channels",{"_index":480,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["numberofchannels",{"_index":342,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["numbers",{"_index":309,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["numberutils",{"_index":2227,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["numberutils.generaterandomint",{"_index":2232,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["numeric",{"_index":3053,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["obj",{"_index":1710,"title":{},"body":{"injectables/FileMetadataService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["obj.indexof",{"_index":1744,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["obj.map(this.trimproperties",{"_index":1746,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["obj.rows.push(rowobj",{"_index":3347,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["obj.trim",{"_index":1743,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["obj1",{"_index":3366,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["obj2",{"_index":3368,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["obj2[key",{"_index":3379,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["object",{"_index":58,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"dependencies.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object.keys(obj1",{"_index":3372,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["object.keys(obj2",{"_index":3374,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["object.keys(value).length",{"_index":2802,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["object.values(entity).filter((value",{"_index":2386,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["object_enabled",{"_index":1500,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["object_priority",{"_index":1502,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["object_renderer_params",{"_index":1507,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["object_visibility",{"_index":1509,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["objectenabled",{"_index":1381,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["objectliteral",{"_index":1349,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{}}}],["objectpriority",{"_index":1379,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["objectrenderer",{"_index":1386,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["objectrendererparams",{"_index":1491,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["objects",{"_index":1244,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/LocaleService.html":{},"entities/LocalizedMediaEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["objectutils",{"_index":190,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/CategoryService.html":{},"classes/LogService.html":{},"classes/MsClient.html":{}}}],["objectutils.inspect",{"_index":196,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{},"classes/MsClient.html":{}}}],["objectutils.sort(cat.children",{"_index":944,"title":{},"body":{"injectables/CategoryService.html":{}}}],["objectvisibility",{"_index":1383,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["obligations",{"_index":3731,"title":{},"body":{"license.html":{}}}],["observable",{"_index":2643,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["obtain",{"_index":538,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["occurs",{"_index":1344,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{}}}],["offer",{"_index":3603,"title":{},"body":{"license.html":{}}}],["offsettime",{"_index":412,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["onapplicationbootstrap",{"_index":2964,"title":{},"body":{"modules/ProcessModule.html":{}}}],["oncrash",{"_index":130,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["oncrash(error",{"_index":148,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["ondelete",{"_index":1623,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["one",{"_index":3648,"title":{},"body":{"license.html":{}}}],["ones",{"_index":3865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onetomany",{"_index":1611,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{}}}],["onetomany(undefined",{"_index":1593,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{}}}],["onetoone",{"_index":1639,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["onetoone(undefined",{"_index":1622,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["onfinish",{"_index":131,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["onmoduleinit",{"_index":1556,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["onstop",{"_index":132,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["openmode",{"_index":1248,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["operation",{"_index":1041,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/RedisCacheService.html":{}}}],["operations",{"_index":761,"title":{},"body":{"classes/CacheService.html":{},"injectables/LocaleService.html":{}}}],["operator",{"_index":3321,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":47,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["options",{"_index":451,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/ProcessManagerService.html":{},"modules/RedisModule.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{}}}],["options.exportservice",{"_index":3443,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["options.filemanager",{"_index":2002,"title":{},"body":{"modules/FileModule.html":{}}}],["options.filemd",{"_index":2003,"title":{},"body":{"modules/FileModule.html":{}}}],["options.imports",{"_index":3441,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["options.importservice",{"_index":3442,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["options.service",{"_index":591,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/MediaModule.html":{},"modules/UserModule.html":{}}}],["opts",{"_index":2637,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["opts).subscribe",{"_index":2750,"title":{},"body":{"classes/MsClient.html":{}}}],["order",{"_index":1083,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{}}}],["orientation",{"_index":399,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["origin",{"_index":3683,"title":{},"body":{"license.html":{}}}],["original",{"_index":3547,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":60,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"license.html":{}}}],["out",{"_index":734,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["outputpath",{"_index":2067,"title":{},"body":{"injectables/FileService.html":{}}}],["outputpath}/${filename",{"_index":2078,"title":{},"body":{"injectables/FileService.html":{}}}],["outstanding",{"_index":3516,"title":{},"body":{"license.html":{}}}],["overridden",{"_index":155,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["override",{"_index":3861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overrides",{"_index":3946,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["overview",{"_index":3764,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":3496,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":3512,"title":{},"body":{"license.html":{}}}],["p",{"_index":2465,"title":{},"body":{"classes/LogService.html":{}}}],["p@ssw0rd",{"_index":1456,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["package",{"_index":3444,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":1008,"title":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"license.html":{}}}],["pageable",{"_index":1009,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["pageabledata",{"_index":1064,"title":{"classes/PageableData.html":{}},"body":{"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/TargetData.html":{}}}],["pageabledata(propertieswithvalues",{"_index":1108,"title":{},"body":{"injectables/ConfigService.html":{}}}],["pageableparams",{"_index":1005,"title":{"classes/PageableParams.html":{}},"body":{"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/TargetData.html":{}}}],["pages",{"_index":1472,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{}}}],["pagesize",{"_index":2810,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["paginated",{"_index":1415,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/TargetData.html":{}}}],["pagination",{"_index":1012,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["pair",{"_index":1445,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["param",{"_index":88,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["parameters",{"_index":43,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{}}}],["params",{"_index":836,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{}}}],["parent",{"_index":837,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["parse",{"_index":1031,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["parsebuffer",{"_index":1713,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["parsebuffer(buf",{"_index":1795,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["parsed",{"_index":1032,"title":{},"body":{"injectables/ConfigService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["parsefloat(audiomd.duration",{"_index":1763,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["parsefloat(videomd.duration",{"_index":1781,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["parseint(process.env.redis_db",{"_index":755,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["parseint(process.env.redis_port",{"_index":753,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["parseint(process.env.transport_port",{"_index":2783,"title":{},"body":{"modules/MsClientModule.html":{}}}],["parseint(process.env.transport_timeout",{"_index":2758,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["parseint(process.env.transport_type",{"_index":2781,"title":{},"body":{"modules/MsClientModule.html":{}}}],["parser",{"_index":3310,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["parses",{"_index":1029,"title":{},"body":{"injectables/ConfigService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["parsestring",{"_index":3317,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["parsevalue",{"_index":981,"title":{},"body":{"injectables/ConfigService.html":{}}}],["parsevalue(value",{"_index":1027,"title":{},"body":{"injectables/ConfigService.html":{}}}],["parsexmlbody(body",{"_index":3329,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["parsexmlbody(result",{"_index":3351,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["parsexmlfile(xmldata",{"_index":3349,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["parsexmlfromrequest",{"_index":3412,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["parsexmlfromrequest(req",{"_index":3413,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["parsing",{"_index":3411,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["part",{"_index":3643,"title":{},"body":{"license.html":{}}}],["part.touppercase",{"_index":1151,"title":{},"body":{"injectables/ConfigService.html":{}}}],["partial",{"_index":616,"title":{},"body":{"classes/AuthService.html":{}}}],["particular",{"_index":3690,"title":{},"body":{"license.html":{}}}],["parts",{"_index":111,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["parts.length",{"_index":113,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["parts[1",{"_index":114,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["party",{"_index":3652,"title":{},"body":{"license.html":{}}}],["passportmodule",{"_index":561,"title":{},"body":{"modules/AuthModule.html":{}}}],["password",{"_index":276,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"modules/CacheModule.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"modules/WarlockModule.html":{}}}],["patch",{"_index":2029,"title":{},"body":{"injectables/FileService.html":{}}}],["patches",{"_index":2445,"title":{},"body":{"classes/LogService.html":{}}}],["patchfromctx",{"_index":2426,"title":{},"body":{"classes/LogService.html":{}}}],["patchfromctx(ctx",{"_index":2443,"title":{},"body":{"classes/LogService.html":{}}}],["patent",{"_index":3601,"title":{},"body":{"license.html":{}}}],["path",{"_index":353,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/LogService.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{}}}],["path.basename",{"_index":1135,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.basename(filepath",{"_index":1187,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.dirname(filepath",{"_index":1190,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.extname(file.name",{"_index":1132,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.join",{"_index":1124,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{}}}],["path.join(currentpath",{"_index":1301,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["path.join(directory",{"_index":1121,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.join(dirpath",{"_index":1192,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.join(gensrcpath",{"_index":1197,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.join(relativepath",{"_index":1305,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["path.normalize(dir",{"_index":2146,"title":{},"body":{"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{}}}],["pattern",{"_index":778,"title":{},"body":{"classes/CacheService.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":605,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload.id",{"_index":3228,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload.login",{"_index":3230,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload.password",{"_index":3229,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload.roles",{"_index":3231,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["peer",{"_index":3445,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":1826,"title":{},"body":{"injectables/FileMetadataService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["percent",{"_index":3514,"title":{},"body":{"license.html":{}}}],["perform",{"_index":3598,"title":{},"body":{"license.html":{}}}],["permission",{"_index":3676,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":557,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["perpetual",{"_index":3587,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":3642,"title":{},"body":{"license.html":{}}}],["phone",{"_index":3185,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["pipe",{"_index":2794,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["pipe(map((data",{"_index":1334,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["pipetransform",{"_index":2801,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["pixelxdimension",{"_index":424,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["pixelydimension",{"_index":425,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["placeholder",{"_index":629,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["places",{"_index":3649,"title":{},"body":{"license.html":{}}}],["plain",{"_index":1316,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["plaintoinstance",{"_index":1331,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["plaintoinstance(this.serializer",{"_index":1335,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["platform\"]?.description",{"_index":1883,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["please",{"_index":3175,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["pminitstatus",{"_index":2852,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["pmservice",{"_index":127,"title":{},"body":{"classes/AbstractProcess.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["pngquant",{"_index":3462,"title":{},"body":{"dependencies.html":{}}}],["pointer\"]?.description",{"_index":1921,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["port",{"_index":752,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["possibility",{"_index":3724,"title":{},"body":{"license.html":{}}}],["possible",{"_index":3474,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["power",{"_index":3506,"title":{},"body":{"license.html":{}}}],["precision",{"_index":472,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["preferred",{"_index":3523,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":633,"title":{},"body":{"classes/AuthService.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["prepare",{"_index":3596,"title":{},"body":{"license.html":{}}}],["prepared",{"_index":2451,"title":{},"body":{"classes/LogService.html":{}}}],["preparemessage",{"_index":2427,"title":{},"body":{"classes/LogService.html":{}}}],["preparemessage(message",{"_index":2447,"title":{},"body":{"classes/LogService.html":{}}}],["prepares",{"_index":2449,"title":{},"body":{"classes/LogService.html":{}}}],["presence",{"_index":39,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["preservechildrenorder",{"_index":3326,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["preview",{"_index":357,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["previewfiles",{"_index":2136,"title":{},"body":{"injectables/FileService.html":{}}}],["previewfilesformat",{"_index":2138,"title":{},"body":{"injectables/FileService.html":{}}}],["previewlang",{"_index":2134,"title":{},"body":{"injectables/FileService.html":{}}}],["previewname",{"_index":2132,"title":{},"body":{"injectables/FileService.html":{}}}],["previewtype",{"_index":2140,"title":{},"body":{"injectables/FileService.html":{}}}],["previewtypeext",{"_index":2142,"title":{},"body":{"injectables/FileService.html":{}}}],["primary",{"_index":1372,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["primary_platform",{"_index":2280,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["primarycolumn",{"_index":1393,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/LanguageEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserRoleEntity.html":{}}}],["primarycolumn(\"varchar",{"_index":1486,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/LanguageEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["primarycolumn('varchar",{"_index":1473,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/ProcessUnitEntity.html":{}}}],["primarygeneratedcolumn",{"_index":488,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["primarygeneratedcolumn({zerofill",{"_index":477,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["primaryplatform",{"_index":389,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["printed",{"_index":3757,"title":{},"body":{"license.html":{}}}],["priority",{"_index":838,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["private",{"_index":25,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["private_dir",{"_index":2046,"title":{},"body":{"injectables/FileService.html":{}}}],["privatemedia",{"_index":2517,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["proceed",{"_index":37,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["process",{"_index":122,"title":{},"body":{"classes/AbstractProcess.html":{},"modules/AuthModule.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/enumerations.html":{}}}],["process.command",{"_index":2911,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["process.constants",{"_index":187,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["process.cwd",{"_index":1117,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["process.cwd()}/${process.env.config_src_dir",{"_index":3909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.redis_host",{"_index":751,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["process.env.redis_password",{"_index":758,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["process.env.redis_user",{"_index":757,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["process.env.transport_host",{"_index":2782,"title":{},"body":{"modules/MsClientModule.html":{}}}],["process.exit(0",{"_index":3912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.getprocessinstance",{"_index":2998,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["process.hasprocessinstance",{"_index":2913,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["process.log.entity",{"_index":3035,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["process.loglevel",{"_index":198,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.pid",{"_index":252,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.registerprocess",{"_index":193,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.status",{"_index":194,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["process.status.crashed",{"_index":3039,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["process.status.execute",{"_index":3038,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["process.status.ready",{"_index":3037,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["process.ts",{"_index":120,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:140",{"_index":160,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:148",{"_index":162,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:157",{"_index":150,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:165",{"_index":145,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:173",{"_index":165,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:31",{"_index":139,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:32",{"_index":143,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:33",{"_index":141,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:35",{"_index":138,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:44",{"_index":168,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:80",{"_index":171,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:94",{"_index":176,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.types",{"_index":2848,"title":{},"body":{"entities/ProcessLogEntity.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{}}}],["process.unit.entity",{"_index":2847,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["process:register",{"_index":3476,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["process:start",{"_index":3478,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["process:stop",{"_index":3479,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["process:unregister",{"_index":3477,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["processandvalidatepropertiescontent",{"_index":982,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processandvalidatepropertiescontent(filepath",{"_index":1033,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processcode",{"_index":2874,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processdata",{"_index":2924,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["processdata.code",{"_index":2926,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["processdata.crontab?.length",{"_index":2925,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["processdata.enabled",{"_index":2939,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processdata.status",{"_index":2942,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processed",{"_index":995,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processeddata",{"_index":997,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processeddata[variablename",{"_index":1160,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processedvalue",{"_index":1165,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processedvalue};\\n",{"_index":1171,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processes",{"_index":1036,"title":{},"body":{"injectables/ConfigService.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"miscellaneous/variables.html":{}}}],["processinstance",{"_index":3007,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["processinstance.start",{"_index":3011,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["processinstance.stop",{"_index":3012,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["processlist",{"_index":2922,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processlog",{"_index":2832,"title":{"interfaces/ProcessLog.html":{}},"body":{"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"interfaces/ProcessUnit.html":{}}}],["processlogentity",{"_index":140,"title":{"entities/ProcessLogEntity.html":{}},"body":{"classes/AbstractProcess.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["processlogrep",{"_index":2869,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processmanagerservice",{"_index":142,"title":{"injectables/ProcessManagerService.html":{}},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{},"overview.html":{}}}],["processmanagerservice.pminitstatus",{"_index":2918,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processmodule",{"_index":2951,"title":{"modules/ProcessModule.html":{}},"body":{"modules/ProcessModule.html":{},"modules.html":{},"overview.html":{}}}],["processregisterservice",{"_index":2957,"title":{"injectables/ProcessRegisterService.html":{}},"body":{"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"overview.html":{}}}],["processunit",{"_index":2835,"title":{"interfaces/ProcessUnit.html":{}},"body":{"interfaces/ProcessLog.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["processunitentity",{"_index":2840,"title":{"entities/ProcessUnitEntity.html":{}},"body":{"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{}}}],["processunitrep",{"_index":2868,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["product",{"_index":3679,"title":{},"body":{"license.html":{}}}],["profile",{"_index":1875,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["profile_class_name",{"_index":2281,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["profile_class_value",{"_index":2282,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["profile_creator",{"_index":2283,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["profile_version",{"_index":2285,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["profileclassname",{"_index":385,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["profileclassvalue",{"_index":384,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["profilecreator",{"_index":394,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["profileversion",{"_index":383,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["project",{"_index":1068,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["prominent",{"_index":3636,"title":{},"body":{"license.html":{}}}],["promise",{"_index":144,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["promise((resolve",{"_index":2746,"title":{},"body":{"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["promise.all",{"_index":1104,"title":{},"body":{"injectables/ConfigService.html":{}}}],["promise.all(filepromises",{"_index":1311,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["properties",{"_index":16,"title":{"properties.html":{},"additional-documentation/properties.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"injectables/MessagesBrokerService.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["properties_file_ext_pattern",{"_index":1060,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["properties_file_ext_pattern).slice(1",{"_index":1200,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertiesfiles",{"_index":973,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertieswithvalues",{"_index":1103,"title":{},"body":{"injectables/ConfigService.html":{}}}],["property",{"_index":1030,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["propertykey",{"_index":1158,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertykey.startswith(\"kp",{"_index":1161,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertykey.startswith(\"local",{"_index":1162,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertykeys",{"_index":1084,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertykeys.sort((a",{"_index":1088,"title":{},"body":{"injectables/ConfigService.html":{}}}],["protected",{"_index":17,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"injectables/FileService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{}}}],["protecting",{"_index":3967,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["protection",{"_index":642,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["provide",{"_index":589,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["provided",{"_index":604,"title":{},"body":{"classes/AuthService.html":{},"injectables/ConfigService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"license.html":{}}}],["providers",{"_index":588,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"overview.html":{}}}],["provides",{"_index":679,"title":{},"body":{"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"injectables/ConfigService.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"license.html":{}}}],["providing",{"_index":515,"title":{},"body":{"modules/AuthModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/LogService.html":{}}}],["proxy",{"_index":2725,"title":{},"body":{"classes/MsClient.html":{}}}],["pubclient",{"_index":2682,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["public",{"_index":354,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["public/private",{"_index":2022,"title":{},"body":{"injectables/FileService.html":{}}}],["public_dir",{"_index":2048,"title":{},"body":{"injectables/FileService.html":{}}}],["publicly",{"_index":3597,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":3571,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3504,"title":{},"body":{"license.html":{}}}],["push",{"_index":3397,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["pwd",{"_index":3218,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["qb",{"_index":2082,"title":{},"body":{"injectables/FileService.html":{}}}],["qb.andwhere(`file.public",{"_index":2084,"title":{},"body":{"injectables/FileService.html":{}}}],["qb.getone",{"_index":2085,"title":{},"body":{"injectables/FileService.html":{}}}],["quality",{"_index":2503,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":2017,"title":{},"body":{"injectables/FileService.html":{},"interfaces/XdbRequest.html":{}}}],["queryfailederror",{"_index":1228,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["r._",{"_index":3346,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["random",{"_index":2199,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["read",{"_index":1287,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/variables.html":{}}}],["read/write",{"_index":1543,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["readable",{"_index":3646,"title":{},"body":{"license.html":{}}}],["readdir",{"_index":1295,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["readdir(dirpath",{"_index":1312,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["readdir(filepath",{"_index":1308,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["readdirectoryrecursively",{"_index":1294,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["readdirectoryrecursively(tmpdir",{"_index":3160,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["readfile",{"_index":1289,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["reading",{"_index":3857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":18,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"modules/ExplorerModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["readoperatorre",{"_index":3322,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["readrequest",{"_index":1399,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["reads",{"_index":967,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{}}}],["ready",{"_index":2892,"title":{},"body":{"injectables/ProcessManagerService.html":{},"miscellaneous/enumerations.html":{}}}],["reason",{"_index":3744,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":3680,"title":{},"body":{"license.html":{}}}],["recaptcha",{"_index":2157,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["recaptchas",{"_index":2160,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["received",{"_index":3579,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":3633,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":3755,"title":{},"body":{"license.html":{}}}],["record",{"_index":1748,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["recording",{"_index":1343,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["recreate",{"_index":2589,"title":{},"body":{"classes/MediaManager.html":{}}}],["recreate(id",{"_index":2518,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["recursive",{"_index":1204,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["recursively",{"_index":1293,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["redis",{"_index":738,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["redis(redisoptions",{"_index":3090,"title":{},"body":{"modules/RedisModule.html":{}}}],["redis.module",{"_index":739,"title":{},"body":{"modules/CacheModule.html":{}}}],["redis_client",{"_index":2701,"title":{},"body":{"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"miscellaneous/variables.html":{}}}],["rediscacheservice",{"_index":745,"title":{"injectables/RedisCacheService.html":{}},"body":{"modules/CacheModule.html":{},"injectables/RedisCacheService.html":{}}}],["redisinstance",{"_index":3084,"title":{},"body":{"modules/RedisModule.html":{}}}],["redismodule",{"_index":731,"title":{"modules/RedisModule.html":{}},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"modules.html":{},"overview.html":{}}}],["redismodule.forrootasync",{"_index":747,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["redismodule.redisinstance",{"_index":3085,"title":{},"body":{"modules/RedisModule.html":{}}}],["redisoptions",{"_index":3088,"title":{},"body":{"modules/RedisModule.html":{}}}],["redistributing",{"_index":3694,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":3627,"title":{},"body":{"license.html":{}}}],["reference",{"_index":1359,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["reference.interface",{"_index":3392,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["referenced_entity_name",{"_index":1513,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["referenced_table_name",{"_index":1515,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["referencedentityname",{"_index":1377,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["referencedtablename",{"_index":1376,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["reflect",{"_index":3463,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":3104,"title":{},"body":{"guards/RolesGuard.html":{}}}],["refresh",{"_index":610,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["refresh_token",{"_index":639,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["refresh_token_error_msg",{"_index":627,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["refreshtoken",{"_index":615,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["regarding",{"_index":3674,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":2882,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["regex",{"_index":3319,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["register",{"_index":2985,"title":{},"body":{"injectables/ProcessRegisterService.html":{},"miscellaneous/enumerations.html":{}}}],["register.service",{"_index":2970,"title":{},"body":{"modules/ProcessModule.html":{}}}],["register.service.ts",{"_index":2976,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:126",{"_index":2991,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:36",{"_index":2982,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:62",{"_index":2987,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:77",{"_index":2989,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:91",{"_index":2984,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["registercronjob",{"_index":2979,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["registercronjob(processdata",{"_index":2983,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["registered",{"_index":1435,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["registered_processes",{"_index":3816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registerfont",{"_index":2221,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["registerfont(capfontpath",{"_index":2255,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["registering",{"_index":2977,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["registerprocess",{"_index":192,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["registerprocess(this",{"_index":199,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["registers",{"_index":2890,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["registration",{"_index":2931,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["reject",{"_index":2747,"title":{},"body":{"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["reject(err",{"_index":3080,"title":{},"body":{"injectables/RedisCacheService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["reject(error",{"_index":2752,"title":{},"body":{"classes/MsClient.html":{}}}],["related",{"_index":623,"title":{},"body":{"classes/AuthService.html":{},"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{},"miscellaneous/variables.html":{}}}],["relatedentities",{"_index":2394,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["relatedentity",{"_index":2395,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["relatedentity.id",{"_index":2396,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["relations",{"_index":715,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["relationships",{"_index":1410,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/TargetData.html":{}}}],["relativepath",{"_index":1297,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["remain",{"_index":3548,"title":{},"body":{"license.html":{}}}],["removal",{"_index":2365,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["remove",{"_index":701,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"classes/FileManager.html":{},"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{},"classes/MediaManager.html":{},"interfaces/XdbRequest.html":{}}}],["remove(id",{"_index":1667,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["removebyid",{"_index":685,"title":{},"body":{"injectables/BasicUserService.html":{},"classes/UserService.html":{}}}],["removebyid(id",{"_index":699,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["removed",{"_index":702,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["removeduplicateobjects",{"_index":3355,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["removeentity",{"_index":1424,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["removeentity(target",{"_index":1574,"title":{},"body":{"classes/ExplorerService.html":{}}}],["removeevent",{"_index":2377,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["removeproperty",{"_index":983,"title":{},"body":{"injectables/ConfigService.html":{}}}],["removeproperty(key",{"_index":1038,"title":{},"body":{"injectables/ConfigService.html":{}}}],["removes",{"_index":1040,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["removing",{"_index":1708,"title":{},"body":{"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{}}}],["renderer",{"_index":1389,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["renderer.entity",{"_index":1536,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["renderer.entity.ts",{"_index":1541,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:36",{"_index":1544,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:40",{"_index":1546,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:44",{"_index":1545,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:53",{"_index":1548,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:60",{"_index":1547,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["rendering",{"_index":1542,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["rendering_intent_name",{"_index":2286,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["rendering_intent_value",{"_index":2288,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["renderingintentname",{"_index":393,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["renderingintentvalue",{"_index":392,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["replace",{"_index":3841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaced",{"_index":3750,"title":{},"body":{"license.html":{}}}],["repository",{"_index":681,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/FileService.html":{},"injectables/LocaleService.html":{},"injectables/ProcessManagerService.html":{}}}],["represent",{"_index":3545,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":3566,"title":{},"body":{"license.html":{}}}],["representing",{"_index":121,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/LogService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["represents",{"_index":948,"title":{},"body":{"interfaces/ConfigItem.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["reproduce",{"_index":3595,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":3684,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":3487,"title":{},"body":{"license.html":{}}}],["req",{"_index":57,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["req.body",{"_index":3425,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["req.cookies.accesstoken",{"_index":107,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req.cookies?.accesstoken",{"_index":106,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req.headers.authorization",{"_index":110,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req.headers?.authorization",{"_index":108,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req.headers[\"content",{"_index":3423,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["req.on(\"data",{"_index":3428,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["req.on(\"end",{"_index":3429,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["req[request_props.accesstoken",{"_index":95,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req[request_props.currentuser",{"_index":102,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req[request_props.currentuser]?.roles",{"_index":3119,"title":{},"body":{"guards/RolesGuard.html":{}}}],["request",{"_index":35,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/BadRequestMsException.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/MsClient.html":{},"classes/Roles.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["request.data",{"_index":2245,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["request.id",{"_index":2244,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["request[request_props.accesstoken",{"_index":3829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request[request_props.currentuser",{"_index":3867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request_props",{"_index":84,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":668,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["required",{"_index":542,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"classes/ExchangeTokenPayload.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["res",{"_index":939,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/LocaleService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["res.children?.foreach((cat",{"_index":941,"title":{},"body":{"injectables/CategoryService.html":{}}}],["res.push(ls",{"_index":2360,"title":{},"body":{"injectables/LocaleService.html":{}}}],["reset",{"_index":733,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}],["resetallprocessstatuses",{"_index":2859,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["resets",{"_index":2888,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["resolutionunit",{"_index":402,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["resolutionx",{"_index":400,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["resolutiony",{"_index":401,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["resolve(body",{"_index":3352,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["resolve(keys",{"_index":3077,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["resolve(result",{"_index":2751,"title":{},"body":{"classes/MsClient.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["resolves",{"_index":607,"title":{},"body":{"classes/AuthService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["resolving",{"_index":2164,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/MsClient.html":{}}}],["response",{"_index":822,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/DbExceptionFilter.html":{},"classes/GoogleCaptchaService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/typealiases.html":{}}}],["response.status(502).json",{"_index":1235,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["response?.data?.success",{"_index":2182,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["responses",{"_index":1223,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["responsibility",{"_index":3737,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":965,"title":{},"body":{"injectables/ConfigService.html":{},"modules/ProcessModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["restricted",{"_index":4002,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["restricting",{"_index":898,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts",{"_index":896,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts:35",{"_index":907,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts:39",{"_index":906,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts:43",{"_index":903,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts:46",{"_index":905,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["result",{"_index":820,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"classes/MsClient.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"license.html":{}}}],["result.schema.push(obj",{"_index":3348,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["result[key",{"_index":1750,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["result[newrelativepath",{"_index":1307,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["result[relativepath",{"_index":1309,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["resulting",{"_index":3528,"title":{},"body":{"license.html":{}}}],["results",{"_index":115,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["retain",{"_index":3639,"title":{},"body":{"license.html":{}}}],["retrieval",{"_index":971,"title":{},"body":{"injectables/ConfigService.html":{}}}],["retrieve",{"_index":2878,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{}}}],["retrieves",{"_index":1007,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/LogService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{}}}],["return",{"_index":103,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"modules/ExplorerModule.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/NotEmptyPipe.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserSubscriber.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":816,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["returns",{"_index":50,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["revisions",{"_index":3542,"title":{},"body":{"license.html":{}}}],["rgb",{"_index":2200,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["rights",{"_index":3733,"title":{},"body":{"license.html":{}}}],["risks",{"_index":3696,"title":{},"body":{"license.html":{}}}],["rm(dir",{"_index":2062,"title":{},"body":{"injectables/FileService.html":{}}}],["role",{"_index":3094,"title":{},"body":{"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/variables.html":{}}}],["role.entity",{"_index":910,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{}}}],["role.entity.ts",{"_index":3240,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["role.entity.ts:35",{"_index":3241,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["role.entity.ts:39",{"_index":3242,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["role.entity.ts:43",{"_index":3243,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["roles",{"_index":899,"title":{"classes/Roles.html":{}},"body":{"entities/CategoryRestrictionEntity.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/variables.html":{}}}],["roles.decorator",{"_index":3112,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles.decorator.ts",{"_index":3791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles.indexof(role.code",{"_index":3122,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles.name",{"_index":3941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles.name.lang",{"_index":3942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles.root",{"_index":3121,"title":{},"body":{"guards/RolesGuard.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["roles.save",{"_index":3219,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["rolesguard",{"_index":3100,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{}}}],["root",{"_index":923,"title":{},"body":{"injectables/CategoryService.html":{},"classes/Roles.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["roottoken",{"_index":3316,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["rotate",{"_index":450,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["route",{"_index":3838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routes",{"_index":3835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["row",{"_index":1428,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["rowid",{"_index":1425,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["rowobj",{"_index":3338,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["rowobj[itemname",{"_index":3341,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["rowobj[itemname].values",{"_index":3344,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["rows",{"_index":3336,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{}}}],["royalty",{"_index":3592,"title":{},"body":{"license.html":{}}}],["rpcexception",{"_index":2788,"title":{},"body":{"classes/MsException.html":{}}}],["rtexp",{"_index":1464,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["rxjs",{"_index":1330,"title":{},"body":{"injectables/DtoInterceptor.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"dependencies.html":{}}}],["safedeserialize",{"_index":2678,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safedeserialize(data",{"_index":2684,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safely",{"_index":2686,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safeserialize",{"_index":2679,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safeserialize(data",{"_index":2690,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["same",{"_index":3756,"title":{},"body":{"license.html":{}}}],["sample\"]?.value",{"_index":1827,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["sample_aspect_ratio",{"_index":3273,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["sample_rate",{"_index":482,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["sampleaspectratio",{"_index":446,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["samplerate",{"_index":343,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["saturation",{"_index":435,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["save",{"_index":3876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saved",{"_index":1422,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"interfaces/TargetData.html":{}}}],["saveentitydata",{"_index":1423,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["saveentitydata(target",{"_index":1576,"title":{},"body":{"classes/ExplorerService.html":{}}}],["saves",{"_index":1421,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"interfaces/TargetData.html":{}}}],["saving",{"_index":1339,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["scale",{"_index":474,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["scan",{"_index":993,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scanforpropertiesfiles",{"_index":984,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scanforpropertiesfiles(directory",{"_index":1043,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scanning",{"_index":1016,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scans",{"_index":1046,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scenecapturetype",{"_index":433,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["scenetype",{"_index":428,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["schedulemodule",{"_index":2968,"title":{},"body":{"modules/ProcessModule.html":{}}}],["schedulemodule.forroot",{"_index":2974,"title":{},"body":{"modules/ProcessModule.html":{}}}],["schedulerregistry",{"_index":2981,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["schema",{"_index":1409,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/variables.html":{}}}],["schema.ts",{"_index":3793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search",{"_index":925,"title":{},"body":{"injectables/CategoryService.html":{}}}],["second",{"_index":3369,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["seconds",{"_index":3046,"title":{},"body":{"injectables/RedisCacheService.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["secret",{"_index":582,"title":{},"body":{"modules/AuthModule.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["secretkey",{"_index":2177,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["section",{"_index":1397,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["section_enabled",{"_index":1517,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["section_priority",{"_index":1519,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["section_renderer_params",{"_index":1522,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["section_visibility",{"_index":1524,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["sectionenabled",{"_index":1380,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["sectionpriority",{"_index":1378,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["sectionrenderer",{"_index":1384,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["sectionrendererparams",{"_index":1492,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["sections",{"_index":3492,"title":{},"body":{"license.html":{}}}],["sectionvisibility",{"_index":1382,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["see",{"_index":554,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["selection",{"_index":1402,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["sell",{"_index":3604,"title":{},"body":{"license.html":{}}}],["send",{"_index":2634,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["send(pattern",{"_index":2644,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["sends",{"_index":2737,"title":{},"body":{"classes/MsClient.html":{}}}],["sensingmethod",{"_index":427,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["sent",{"_index":3565,"title":{},"body":{"license.html":{}}}],["separable",{"_index":3549,"title":{},"body":{"license.html":{}}}],["separate",{"_index":3672,"title":{},"body":{"license.html":{}}}],["serialize",{"_index":2693,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["serialized",{"_index":2694,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["serializer",{"_index":1323,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["serializes",{"_index":2692,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["serves",{"_index":3999,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["service",{"_index":522,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/JwtDto.html":{},"injectables/LocaleService.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["services",{"_index":886,"title":{},"body":{"modules/CategoryModule.html":{},"modules/LocaleModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["set",{"_index":167,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/CacheService.html":{},"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["set(key",{"_index":783,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["setaudiomd",{"_index":1693,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setaudiomd(md",{"_index":1698,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setimagemd",{"_index":1694,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setimagemd(md",{"_index":1701,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setmetadata(allowedformetadatakey",{"_index":3837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setprocessunitstatus",{"_index":2860,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["setprocessunitstatus(code",{"_index":2893,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["setproperty",{"_index":985,"title":{},"body":{"injectables/ConfigService.html":{}}}],["setproperty(item",{"_index":1049,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sets",{"_index":166,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["setstatus",{"_index":133,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["setstatus(status",{"_index":164,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["setting",{"_index":954,"title":{},"body":{"interfaces/ConfigItem.html":{},"injectables/FileMetadataService.html":{},"injectables/RedisCacheService.html":{}}}],["settings",{"_index":897,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["setup",{"_index":3082,"title":{},"body":{"modules/RedisModule.html":{}}}],["setvideomd",{"_index":1695,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setvideomd(md",{"_index":1703,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["sha",{"_index":1271,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["shall",{"_index":3490,"title":{},"body":{"license.html":{}}}],["shared/constants",{"_index":3225,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["shared/modules/cache/cache.module",{"_index":566,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["shared/modules/cache/cache.types",{"_index":571,"title":{},"body":{"modules/AuthModule.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["shared/modules/locale/entity/localized",{"_index":1483,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["shared/modules/locale/locale.types",{"_index":1351,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["shared/modules/log/log.constants",{"_index":1063,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["shared/modules/log/log.module",{"_index":568,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/ProcessModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["shared/modules/messages",{"_index":2909,"title":{},"body":{"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{}}}],["shared/modules/pageable/pageable.types",{"_index":1065,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["shared/modules/warlock/warlock.constants",{"_index":2907,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["shared/modules/warlock/warlock.module",{"_index":2972,"title":{},"body":{"modules/ProcessModule.html":{}}}],["shared/modules/warlock/warlock.types",{"_index":2908,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["shared/transformers/simple",{"_index":1484,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["shared/utils/files.utils",{"_index":1718,"title":{},"body":{"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["shared/utils/number.utils",{"_index":2228,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["shared/utils/object.utils",{"_index":191,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["shared/utils/string.utils",{"_index":2226,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["shared/utils/transform.utils",{"_index":1453,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["shares",{"_index":3517,"title":{},"body":{"license.html":{}}}],["sharp",{"_index":3465,"title":{},"body":{"dependencies.html":{}}}],["sharpness",{"_index":436,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["shutterspeedvalue",{"_index":413,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["side",{"_index":824,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"miscellaneous/typealiases.html":{}}}],["sign",{"_index":3954,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["signature\"]?.description",{"_index":1880,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["signoptions",{"_index":584,"title":{},"body":{"modules/AuthModule.html":{}}}],["simplejsontransformer",{"_index":858,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"miscellaneous/variables.html":{}}}],["size",{"_index":355,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["skip",{"_index":2929,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["software",{"_index":403,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["sole",{"_index":3736,"title":{},"body":{"license.html":{}}}],["solely",{"_index":3691,"title":{},"body":{"license.html":{}}}],["sore",{"_index":3924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sort",{"_index":914,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["sort(cat",{"_index":926,"title":{},"body":{"injectables/CategoryService.html":{}}}],["sorted",{"_index":932,"title":{},"body":{"injectables/CategoryService.html":{}}}],["sortedkeys",{"_index":1087,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sortedkeys.length",{"_index":1099,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sortedkeys.slice(start",{"_index":1102,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sorting",{"_index":1010,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sortorder",{"_index":2819,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"miscellaneous/enumerations.html":{}}}],["sorts",{"_index":928,"title":{},"body":{"injectables/CategoryService.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["source.pipe",{"_index":2756,"title":{},"body":{"classes/MsClient.html":{}}}],["space\"]?.description",{"_index":1872,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["special",{"_index":3708,"title":{},"body":{"license.html":{}}}],["specialization",{"_index":2155,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["specific",{"_index":267,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["specified",{"_index":180,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["split",{"_index":1149,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src",{"_index":3858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/auth.config",{"_index":574,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/captcha.config",{"_index":2172,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["src/file.config",{"_index":2045,"title":{},"body":{"injectables/FileService.html":{}}}],["src/kp.config",{"_index":3154,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["stack",{"_index":2436,"title":{},"body":{"classes/LogService.html":{},"classes/MsException.html":{}}}],["stacktrace",{"_index":2474,"title":{},"body":{"classes/LogService.html":{}}}],["stacktrace.split(\"\\n",{"_index":2476,"title":{},"body":{"classes/LogService.html":{}}}],["start",{"_index":134,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":3481,"title":{"index.html":{},"license.html":{}},"body":{}}],["startprocess",{"_index":2861,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["startprocess(code",{"_index":2895,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["startprocess(processdata",{"_index":2986,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["starts",{"_index":169,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["startup",{"_index":2966,"title":{},"body":{"modules/ProcessModule.html":{}}}],["state",{"_index":3025,"title":{},"body":{"entities/ProcessUnitEntity.html":{},"license.html":{}}}],["stated",{"_index":3602,"title":{},"body":{"license.html":{}}}],["statement",{"_index":3662,"title":{},"body":{"license.html":{}}}],["static",{"_index":517,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"injectables/ProcessManagerService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["static/file",{"_index":3992,"title":{},"body":{"additional-documentation/properties/file.properties.html":{}}}],["static/media",{"_index":3997,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["static/private/file",{"_index":3994,"title":{},"body":{"additional-documentation/properties/file.properties.html":{}}}],["static/private/media",{"_index":4001,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["static/tmp",{"_index":3948,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["stating",{"_index":3638,"title":{},"body":{"license.html":{}}}],["statistics",{"_index":3138,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["stats",{"_index":1302,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["stats.filescount",{"_index":3163,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["stats.folderscount",{"_index":3164,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["stats.isdirectory",{"_index":1306,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["status",{"_index":147,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/FileService.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/enumerations.html":{}}}],["status.execute",{"_index":201,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["status.ready",{"_index":2950,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["statuses",{"_index":2889,"title":{},"body":{"injectables/ProcessManagerService.html":{},"miscellaneous/enumerations.html":{}}}],["stop",{"_index":135,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/enumerations.html":{}}}],["stoppage",{"_index":3716,"title":{},"body":{"license.html":{}}}],["stopped",{"_index":228,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["stopprocess",{"_index":2862,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["stopprocess(code",{"_index":2897,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["stopprocess(processdata",{"_index":2988,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["stops",{"_index":163,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["storage",{"_index":1073,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/RedisCacheService.html":{}}}],["store",{"_index":69,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/ConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/file.properties.html":{}}}],["stored",{"_index":2038,"title":{},"body":{"injectables/FileService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["stores",{"_index":459,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/ConfigService.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["storing",{"_index":3099,"title":{},"body":{"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["stream",{"_index":3071,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["stream.on(\"data",{"_index":3073,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["stream.on(\"end",{"_index":3076,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["stream.on(\"error",{"_index":3078,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["string",{"_index":63,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleService.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["string.entity",{"_index":872,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["string.entity.ts",{"_index":2409,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string.entity.ts:33",{"_index":2413,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string.entity.ts:37",{"_index":2412,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string.entity.ts:40",{"_index":2414,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string.entity.ts:43",{"_index":2415,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string[]).push(file",{"_index":1310,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["strings",{"_index":953,"title":{},"body":{"interfaces/ConfigItem.html":{},"injectables/LocaleService.html":{},"miscellaneous/variables.html":{}}}],["stringutils",{"_index":2225,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["stringutils.generaterandomstring",{"_index":2230,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["structure",{"_index":1239,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["subclasses",{"_index":156,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["subclient",{"_index":2677,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["subject",{"_index":3584,"title":{},"body":{"license.html":{}}}],["subjectdistance",{"_index":418,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["subjectdistancerange",{"_index":437,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["sublicense",{"_index":3599,"title":{},"body":{"license.html":{}}}],["submission",{"_index":3664,"title":{},"body":{"license.html":{}}}],["submit",{"_index":3559,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":3557,"title":{},"body":{"license.html":{}}}],["subsampling",{"_index":376,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["subscribe",{"_index":2654,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["subscribe(chanel",{"_index":2661,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["subscriber",{"_index":3252,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["subscriber.ts",{"_index":263,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/LocaleSubscriber.html":{}}}],["subscriber.ts:28",{"_index":272,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["subscriber.ts:35",{"_index":290,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["subscriber.ts:47",{"_index":2372,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["subscriber.ts:48",{"_index":284,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["subscriber.ts:69",{"_index":2378,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["subscriber.ts:76",{"_index":274,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["subscribers",{"_index":265,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{}}}],["subscribes",{"_index":2663,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["subsequently",{"_index":3580,"title":{},"body":{"license.html":{}}}],["succeeded",{"_index":3047,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["successful",{"_index":1042,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/RedisCacheService.html":{}}}],["successfully",{"_index":622,"title":{},"body":{"classes/AuthService.html":{}}}],["such",{"_index":1340,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/TargetData.html":{},"classes/UserSubscriber.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":510,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"classes/MsException.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{}}}],["super(httpstatus.bad_request",{"_index":675,"title":{},"body":{"classes/BadRequestMsException.html":{}}}],["super(httpstatus.forbidden",{"_index":2151,"title":{},"body":{"classes/ForbiddenMsException.html":{}}}],["super(httpstatus.not_found",{"_index":2806,"title":{},"body":{"classes/NotFoundMsException.html":{}}}],["super(httpstatus.unauthorized",{"_index":2298,"title":{},"body":{"classes/InvalidTokenMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["super.debug(this.preparemessage(message",{"_index":2464,"title":{},"body":{"classes/LogService.html":{}}}],["super.error(this.preparemessage(message",{"_index":2460,"title":{},"body":{"classes/LogService.html":{}}}],["super.log(this.preparemessage(message",{"_index":2458,"title":{},"body":{"classes/LogService.html":{}}}],["super.verbose(this.preparemessage(message",{"_index":2463,"title":{},"body":{"classes/LogService.html":{}}}],["super.warn(this.preparemessage(message",{"_index":2462,"title":{},"body":{"classes/LogService.html":{}}}],["supersede",{"_index":3671,"title":{},"body":{"license.html":{}}}],["support",{"_index":3729,"title":{},"body":{"license.html":{},"modules.html":{}}}],["svg",{"_index":3763,"title":{},"body":{"modules.html":{},"miscellaneous/variables.html":{}}}],["switch",{"_index":229,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["symbol",{"_index":3918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"entity_save_handler",{"_index":3874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"logger_service",{"_index":3917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"ms_client",{"_index":3920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"msg_broker",{"_index":3919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"msg_bus",{"_index":3921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"redis_client",{"_index":3923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"warlock",{"_index":3944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":1081,"title":{},"body":{"injectables/ConfigService.html":{}}}],["synchronizing",{"_index":1017,"title":{},"body":{"injectables/ConfigService.html":{}}}],["syntax",{"_index":3754,"title":{},"body":{"license.html":{}}}],["system",{"_index":962,"title":{},"body":{"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/LanguageEntity.html":{},"modules/MediaModule.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{}}}],["systems",{"_index":3568,"title":{},"body":{"license.html":{}}}],["t",{"_index":319,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"entities/MediaEntity.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"entities/ProcessLogEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{}}}],["t.code",{"_index":847,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/UserEntity.html":{}}}],["t.id",{"_index":904,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{}}}],["t.target",{"_index":1529,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["tab",{"_index":1387,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/TargetData.html":{}}}],["tab.entity",{"_index":1537,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["tab.entity.ts",{"_index":1578,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:38",{"_index":1580,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:42",{"_index":1581,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:46",{"_index":1582,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:53",{"_index":1583,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:56",{"_index":1584,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tabbed",{"_index":1579,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["table",{"_index":1416,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["table_name",{"_index":1608,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["tableinheritance",{"_index":1640,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/UserEntity.html":{}}}],["tablename",{"_index":1361,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["tables",{"_index":1412,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["tagname",{"_index":3331,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["take",{"_index":2948,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["target",{"_index":1348,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/variables.html":{}}}],["target.entity",{"_index":1535,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{}}}],["target.entity.ts",{"_index":1586,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:103",{"_index":1591,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:107",{"_index":1592,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:41",{"_index":1610,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:45",{"_index":1609,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:49",{"_index":1590,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:53",{"_index":1607,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:57",{"_index":1605,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:60",{"_index":1606,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:63",{"_index":1596,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:67",{"_index":1589,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:75",{"_index":1598,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:83",{"_index":1604,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:91",{"_index":1600,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:99",{"_index":1602,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target_relations_basic",{"_index":3819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target_relations_full",{"_index":3820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target_relations_object",{"_index":3821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target_relations_section",{"_index":3822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["targetdata",{"_index":1392,"title":{"interfaces/TargetData.html":{}},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["targetparams",{"_index":1417,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["targets",{"_index":1395,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["template",{"_index":814,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/TargetData.html":{}}}],["templated",{"_index":3842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templates",{"_index":3840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["temporary",{"_index":3127,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["terminate",{"_index":3625,"title":{},"body":{"license.html":{}}}],["terms",{"_index":3486,"title":{},"body":{"license.html":{}}}],["text",{"_index":2211,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"license.html":{}}}],["theory",{"_index":3699,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":3553,"title":{},"body":{"license.html":{}}}],["third",{"_index":3651,"title":{},"body":{"license.html":{}}}],["this.broker.emit(command.register",{"_index":2932,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.broker.emit(command.start",{"_index":2934,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.broker.emit(command.stop",{"_index":2935,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.broker.emit(command.unregister",{"_index":2941,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.cacheservice.del(config_cache_prefix",{"_index":1074,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cacheservice.del(fullkey",{"_index":1114,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cacheservice.del(key",{"_index":2243,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.get",{"_index":104,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/GoogleCaptchaService.html":{}}}],["this.cacheservice.get(captchaconfig.font_family",{"_index":2266,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.get(captchaconfig.font_path",{"_index":2267,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.get(captchaconfig.google_public_key",{"_index":2176,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["this.cacheservice.get(key",{"_index":1106,"title":{},"body":{"injectables/ConfigService.html":{},"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.get(kpconfig.tmp_dir",{"_index":3157,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["this.cacheservice.get(private_dir",{"_index":2147,"title":{},"body":{"injectables/FileService.html":{}}}],["this.cacheservice.get(public_dir",{"_index":2145,"title":{},"body":{"injectables/FileService.html":{}}}],["this.cacheservice.getboolean",{"_index":2174,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.getfrompattern",{"_index":1085,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cacheservice.getnumber(captchaconfig.expiration",{"_index":2265,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.set(`${captcha_cache_prefix}:${id",{"_index":2239,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.set(`${key",{"_index":1078,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cacheservice.set(fullkey",{"_index":1111,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.catrep.finddescendantstree(cat",{"_index":940,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.catrep.findone",{"_index":938,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.client.del(...keys",{"_index":3065,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.expire(key",{"_index":3070,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.get(key",{"_index":3060,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.incr(key",{"_index":3068,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.scanstream",{"_index":3072,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.set(key",{"_index":3063,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.constructor.name",{"_index":204,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.createbasicfindqb",{"_index":2087,"title":{},"body":{"injectables/FileService.html":{}}}],["this.createbasicfindqb().where(\"file.id",{"_index":2083,"title":{},"body":{"injectables/FileService.html":{}}}],["this.createfiledirectory",{"_index":2068,"title":{},"body":{"injectables/FileService.html":{}}}],["this.createfileentity(ispublic",{"_index":2066,"title":{},"body":{"injectables/FileService.html":{}}}],["this.deleteexistingconfigtsfiles(fullpath",{"_index":1185,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.deleteexistingconfigtsfiles(process.cwd",{"_index":1072,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.execute",{"_index":213,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.fetchuser",{"_index":100,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["this.filerep",{"_index":2106,"title":{},"body":{"injectables/FileService.html":{}}}],["this.filerep.manager.transaction(async",{"_index":2053,"title":{},"body":{"injectables/FileService.html":{}}}],["this.filerep.save(entity",{"_index":2144,"title":{},"body":{"injectables/FileService.html":{}}}],["this.findbyid(id",{"_index":718,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.findfilebyid(existedentityid",{"_index":2055,"title":{},"body":{"injectables/FileService.html":{}}}],["this.findfilebyid(id",{"_index":2090,"title":{},"body":{"injectables/FileService.html":{}}}],["this.generatecolor",{"_index":2257,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.generateconfigtsfiles",{"_index":1076,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.generatedtsoutput",{"_index":1066,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.generatenamespacewithvariables",{"_index":1202,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.get(key",{"_index":3062,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.getaccesstokenfromrequest(req",{"_index":91,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["this.getcallingcontext",{"_index":2457,"title":{},"body":{"classes/LogService.html":{}}}],["this.getcaptchaexp",{"_index":2238,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.getcaptchafontfamily",{"_index":2252,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.getcaptchafontpath",{"_index":2254,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.getdeletestats(dirstruct",{"_index":3161,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["this.getprivatedir",{"_index":2058,"title":{},"body":{"injectables/FileService.html":{}}}],["this.getprocessdata(code",{"_index":2933,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.getprocessdata(processcode",{"_index":2943,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.getpublicdir",{"_index":2059,"title":{},"body":{"injectables/FileService.html":{}}}],["this.getpublicdir()}/${file.id",{"_index":2092,"title":{},"body":{"injectables/FileService.html":{}}}],["this.getstatus",{"_index":200,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.handlerequest(source",{"_index":2749,"title":{},"body":{"classes/MsClient.html":{}}}],["this.hashpassword(user.password",{"_index":324,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["this.hashpasswordifneeded(event",{"_index":3265,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["this.http.post",{"_index":2179,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["this.languagerep.find",{"_index":2349,"title":{},"body":{"injectables/LocaleService.html":{}}}],["this.localizedstringrep.findone",{"_index":2356,"title":{},"body":{"injectables/LocaleService.html":{}}}],["this.localizedstringrep.save(ls",{"_index":2359,"title":{},"body":{"injectables/LocaleService.html":{}}}],["this.lockexec",{"_index":3017,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.lockexec(`${processdata.code}_start",{"_index":3010,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.logger.debug(`generated",{"_index":2240,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.logger.debug(`sending",{"_index":2754,"title":{},"body":{"classes/MsClient.html":{}}}],["this.logger.debug(message",{"_index":237,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.logger.error",{"_index":2761,"title":{},"body":{"classes/MsClient.html":{},"injectables/RedisCacheService.html":{}}}],["this.logger.error(`error",{"_index":3061,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.logger.error(`invalid",{"_index":1156,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.error(`process",{"_index":3009,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.logger.error(err",{"_index":3079,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.logger.error(message",{"_index":233,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.logger.log",{"_index":2080,"title":{},"body":{"injectables/FileService.html":{}}}],["this.logger.log(\"init",{"_index":2921,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.logger.log(`clean",{"_index":1070,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.log(`config",{"_index":1080,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.log(`file",{"_index":2105,"title":{},"body":{"injectables/FileService.html":{}}}],["this.logger.log(`generate",{"_index":1075,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.log(`scan",{"_index":1067,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.log(message",{"_index":231,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.logger.verbose",{"_index":2391,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["this.logger.verbose(`delete",{"_index":1182,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.verbose(`generated",{"_index":1206,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.verbose(`read",{"_index":1177,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.verbose(message",{"_index":239,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.logger.warn",{"_index":202,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["this.logger.warn(\"autostart",{"_index":2919,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.logger.warn(`incorrect",{"_index":2246,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.logger.warn(`invalid",{"_index":96,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/GraphicCaptchaService.html":{}}}],["this.logger.warn(`request",{"_index":2768,"title":{},"body":{"classes/MsClient.html":{}}}],["this.logger.warn(message",{"_index":235,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.loginstance",{"_index":208,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.loginstance.content",{"_index":251,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.makeimagefromtext(val",{"_index":2236,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.mergepropertiescontent",{"_index":1128,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.metadataservice.createfilemetadataentity",{"_index":2077,"title":{},"body":{"injectables/FileService.html":{}}}],["this.oncrash(e",{"_index":222,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.onfinish",{"_index":215,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.onstop",{"_index":226,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.parser.parsestring(xmldata",{"_index":3430,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["this.parsevalue(value.trim",{"_index":1164,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.parsexmlfromrequest(req",{"_index":3426,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["this.patchfromctx(ctx",{"_index":2461,"title":{},"body":{"classes/LogService.html":{}}}],["this.pmservice.createloginstance",{"_index":209,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.pmservice.getprocessunitstatus(this.constructor.name",{"_index":259,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.pmservice.init",{"_index":2975,"title":{},"body":{"modules/ProcessModule.html":{}}}],["this.pmservice.setprocessunitstatus(processdata.code",{"_index":3015,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.pmservice.setprocessunitstatus(this.constructor.name",{"_index":260,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.pmservice.stopprocess(processdata.code",{"_index":3023,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.pmservice.updateloginstance(this.loginstance",{"_index":255,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.processandvalidatepropertiescontent",{"_index":1137,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.processlogrep.find",{"_index":2947,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processlogrep.findone",{"_index":2946,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processlogrep.save",{"_index":2944,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processlogrep.save(loginstance",{"_index":2945,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processunitrep.find",{"_index":2923,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processunitrep.findone",{"_index":2938,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processunitrep.save(processdata",{"_index":2940,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.propertiesfiles",{"_index":1186,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.propertiesfiles[filepath",{"_index":1188,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.propertiesfiles[fullpath",{"_index":1136,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.proxy.emit(pattern",{"_index":2753,"title":{},"body":{"classes/MsClient.html":{}}}],["this.proxy.send(pattern",{"_index":2748,"title":{},"body":{"classes/MsClient.html":{}}}],["this.pubclient.duplicate",{"_index":2705,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.pubclient.publish(chanel",{"_index":2711,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.reflector.get",{"_index":3116,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.registercronjob(data",{"_index":3000,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.resetallprocessstatuses",{"_index":2920,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.safeserialize(data",{"_index":2712,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.scanforpropertiesfiles(fullpath",{"_index":1131,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.scanforpropertiesfiles(process.cwd",{"_index":1069,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.schedulerregistry.addcronjob(processdata.code",{"_index":3019,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.schedulerregistry.deletecronjob(processdata.code",{"_index":3022,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.schedulerregistry.doesexist(\"cron",{"_index":3013,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.schedulerregistry.getcronjob(processdata.code",{"_index":3020,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.service.analyzedatabase",{"_index":1563,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["this.setaudiomd(md",{"_index":1739,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.setimagemd(md",{"_index":1737,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.setprocessunitstatus(processdata.code",{"_index":2949,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.setstatus(status.crashed",{"_index":221,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.setstatus(status.execute",{"_index":211,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.setstatus(status.ready",{"_index":214,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.setvideomd(md",{"_index":1741,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.sort(cat",{"_index":942,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.sort(res",{"_index":943,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.startprocess(data",{"_index":3004,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.stopprocess(data",{"_index":3006,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.subclient",{"_index":2704,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subclient.on(\"message",{"_index":2706,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subclient.subscribe(chanel",{"_index":2713,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subclient.unsubscribe(chanel",{"_index":2715,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subscribers.delete(chanel",{"_index":2716,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subscribers.get(chanel",{"_index":2709,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subscribers.has(chanel",{"_index":2707,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subscribers.set(chanel",{"_index":2714,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.trimproperties(md",{"_index":1742,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.trimproperties(obj[key",{"_index":1749,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.unregistercronjob(data",{"_index":3002,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.userrep.create(user",{"_index":720,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userrep.findone",{"_index":713,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userrep.remove(user",{"_index":723,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userrep.save(newuser",{"_index":721,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userrep.save(user",{"_index":717,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userservice.findbylogin(useridentity",{"_index":101,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["this.validatelogin(event.entity.login",{"_index":3264,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["this.validatetoken(token",{"_index":94,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["this.valuesofproperties",{"_index":1077,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.valuesofproperties[key",{"_index":1079,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.valuesofproperties[processedvalue.substring(1,processedvalue.length",{"_index":1173,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.valuesofproperties[propertykey",{"_index":1163,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.writelog",{"_index":216,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["this.writelog(`nothing",{"_index":3159,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["this.writelog(`process",{"_index":227,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.writelog(`start",{"_index":210,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.writelog(`tmp",{"_index":3166,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["this.writelog(`try",{"_index":225,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["those",{"_index":3606,"title":{},"body":{"license.html":{}}}],["through",{"_index":3493,"title":{},"body":{"license.html":{}}}],["throw",{"_index":97,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{}}}],["throwerror",{"_index":2740,"title":{},"body":{"classes/MsClient.html":{}}}],["throwerror(error",{"_index":2770,"title":{},"body":{"classes/MsClient.html":{}}}],["throws",{"_index":299,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{}}}],["thumb",{"_index":3823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thumbnail",{"_index":3873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":2203,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"injectables/RedisCacheService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["timeout",{"_index":2648,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["timeout(opts?.timeout",{"_index":2757,"title":{},"body":{"classes/MsClient.html":{}}}],["timeouterror",{"_index":2767,"title":{},"body":{"classes/MsClient.html":{}}}],["timeouts",{"_index":2735,"title":{},"body":{"classes/MsClient.html":{}}}],["timestamp",{"_index":1635,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["tinput",{"_index":2636,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["title",{"_index":344,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["tmpdir",{"_index":3156,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["tmpdircleanerprocess",{"_index":3123,"title":{"classes/TmpDirCleanerProcess.html":{}},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["to(value",{"_index":3929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todo",{"_index":3482,"title":{},"body":{"index.html":{},"properties.html":{}}}],["toggle",{"_index":2902,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["toggleprocess",{"_index":2863,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["toggleprocess(code",{"_index":2899,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["toggles",{"_index":2901,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["token",{"_index":42,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["token.decorator.ts",{"_index":3789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tokenizing",{"_index":3839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tokens",{"_index":611,"title":{},"body":{"classes/AuthService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["tool",{"_index":345,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["toomanyrequestsmsexception",{"_index":3170,"title":{"classes/TooManyRequestsMsException.html":{}},"body":{"classes/TooManyRequestsMsException.html":{}}}],["tort",{"_index":3700,"title":{},"body":{"license.html":{}}}],["total",{"_index":2813,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["totalcount",{"_index":1098,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["touppercase",{"_index":1199,"title":{},"body":{"injectables/ConfigService.html":{}}}],["trace",{"_index":2434,"title":{},"body":{"classes/LogService.html":{}}}],["tracking",{"_index":652,"title":{},"body":{"classes/AuthService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["trade",{"_index":3677,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":3640,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":3675,"title":{},"body":{"license.html":{}}}],["transactionmanager",{"_index":2054,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file",{"_index":2104,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file.metadata.audio",{"_index":2101,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file.metadata.gps",{"_index":2099,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file.metadata.image",{"_index":2097,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file.metadata.video",{"_index":2103,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.save(entity",{"_index":2079,"title":{},"body":{"injectables/FileService.html":{}}}],["transfer",{"_index":804,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"license.html":{}}}],["transform",{"_index":1221,"title":{},"body":{"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"injectables/NotEmptyPipe.html":{}}}],["transform(transformutils.datetotime",{"_index":1462,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["transform(value",{"_index":2799,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["transformation",{"_index":1332,"title":{},"body":{"injectables/DtoInterceptor.html":{},"license.html":{}}}],["transformer",{"_index":857,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/DtoInterceptor.html":{},"classes/ExchangeTokenPayload.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["transformers/simple",{"_index":873,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["transforming",{"_index":3930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformutils",{"_index":1452,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["translation",{"_index":3530,"title":{},"body":{"license.html":{}}}],["translations",{"_index":2410,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["transport",{"_index":2780,"title":{},"body":{"modules/MsClientModule.html":{}}}],["tree",{"_index":870,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/CategoryService.html":{}}}],["tree(\"nested",{"_index":877,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["treechildren",{"_index":840,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["treeparent",{"_index":860,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["treerepository",{"_index":916,"title":{},"body":{"injectables/CategoryService.html":{}}}],["trees",{"_index":834,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["tresult",{"_index":2640,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["trigger",{"_index":2369,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["triggered",{"_index":1342,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/TargetData.html":{}}}],["trim",{"_index":1711,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["trimmed",{"_index":1712,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["trimproperties",{"_index":1696,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["trimproperties(obj",{"_index":1705,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["trims",{"_index":1707,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["true",{"_index":87,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"entities/AudioFileMetadataEntity.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["true})@column('varchar",{"_index":843,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/UserEntity.html":{}}}],["true})@jointable",{"_index":853,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["true})@primarycolumn('varchar",{"_index":1494,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/LanguageEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/UserRoleEntity.html":{}}}],["try",{"_index":212,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"miscellaneous/variables.html":{}}}],["ts_created",{"_index":1634,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["ts_updated",{"_index":2844,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["tscreated",{"_index":359,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["tsupdated",{"_index":2834,"title":{},"body":{"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{}}}],["two",{"_index":3363,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["type",{"_index":46,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["type\"]?.description",{"_index":1845,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["type(undefined",{"_index":2824,"title":{},"body":{"classes/PageableParams.html":{}}}],["type.code",{"_index":2542,"title":{},"body":{"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{}}}],["type.entity",{"_index":2544,"title":{},"body":{"entities/MediaEntity.html":{},"modules/MediaModule.html":{}}}],["type.entity.ts",{"_index":2615,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:21",{"_index":2616,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:25",{"_index":2620,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:28",{"_index":2623,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:31",{"_index":2621,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:34",{"_index":2622,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:37",{"_index":2618,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:41",{"_index":2619,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.ext",{"_index":3871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type.formats",{"_index":3870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typealiases",{"_index":3772,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":312,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":295,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/BasicUserService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"classes/UserSubscriber.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"dependencies.html":{}}}],["typeorm/error/typeormerror",{"_index":1232,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["typeorm/subscriber/event/insertevent",{"_index":294,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["typeormerror",{"_index":1231,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["typeormmodule",{"_index":891,"title":{},"body":{"modules/CategoryModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/MediaModule.html":{},"modules/ProcessModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature",{"_index":2336,"title":{},"body":{"modules/LocaleModule.html":{},"modules/MediaModule.html":{}}}],["typeormmodule.forfeature([categoryentity",{"_index":893,"title":{},"body":{"modules/CategoryModule.html":{}}}],["typeormmodule.forfeature([explorertargetentity",{"_index":1562,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["typeormmodule.forfeature([fileentity",{"_index":2001,"title":{},"body":{"modules/FileModule.html":{}}}],["typeormmodule.forfeature([processunitentity",{"_index":2973,"title":{},"body":{"modules/ProcessModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":3235,"title":{},"body":{"modules/UserModule.html":{}}}],["types",{"_index":1357,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/MediaTypeEntity.html":{},"interfaces/TargetData.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["typescript",{"_index":991,"title":{},"body":{"injectables/ConfigService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["unauthorized",{"_index":3180,"title":{},"body":{"classes/UnauthorizedMsException.html":{}}}],["unauthorizedmsexception",{"_index":3178,"title":{"classes/UnauthorizedMsException.html":{}},"body":{"classes/UnauthorizedMsException.html":{}}}],["undefined",{"_index":218,"title":{},"body":{"classes/AbstractProcess.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/BasicUserService.html":{},"entities/CategoryEntity.html":{},"interfaces/DirectoryStructure.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/LogService.html":{},"classes/MsException.html":{},"entities/ProcessUnitEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"miscellaneous/variables.html":{}}}],["undefined:undefined",{"_index":2468,"title":{},"body":{"classes/LogService.html":{}}}],["under",{"_index":530,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["underscores",{"_index":310,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["union",{"_index":3500,"title":{},"body":{"license.html":{}}}],["unique",{"_index":810,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["uniqueobjects",{"_index":3356,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["uniqueobjects.push(obj",{"_index":3360,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["uniqueobjects.reverse",{"_index":3361,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["uniqueobjects.some((uniqueobj",{"_index":3358,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["unit",{"_index":123,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{}}}],["unknown",{"_index":51,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"classes/LogService.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["unknown_ip",{"_index":632,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["unless",{"_index":541,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["unlock",{"_index":3293,"title":{},"body":{"modules/WarlockModule.html":{}}}],["unregister",{"_index":2993,"title":{},"body":{"injectables/ProcessRegisterService.html":{},"miscellaneous/enumerations.html":{}}}],["unregistercronjob",{"_index":2980,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["unregistercronjob(processdata",{"_index":2990,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["unregistered",{"_index":2994,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["unregisters",{"_index":2992,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["unsigned",{"_index":863,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["unsubscribe",{"_index":2655,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["unsubscribe(chanel",{"_index":2664,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["unsubscribes",{"_index":2666,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["up",{"_index":1427,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["update",{"_index":288,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"injectables/ProcessManagerService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["updatebyid",{"_index":686,"title":{},"body":{"injectables/BasicUserService.html":{},"classes/UserService.html":{}}}],["updatebyid(id",{"_index":703,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["updated",{"_index":705,"title":{},"body":{"injectables/BasicUserService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{}}}],["updatedatecolumn",{"_index":2846,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["updateevent",{"_index":283,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["updateloginstance",{"_index":2864,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["updateloginstance(loginstance",{"_index":2903,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["updates",{"_index":172,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["upgrade",{"_index":3963,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["uploaded",{"_index":1617,"title":{},"body":{"entities/FileEntity.html":{}}}],["uploading",{"_index":2005,"title":{},"body":{"injectables/FileService.html":{}}}],["uploads",{"_index":2026,"title":{},"body":{"injectables/FileService.html":{}}}],["upsert",{"_index":2507,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["upsertmediarequest",{"_index":2508,"title":{"interfaces/UpsertMediaRequest.html":{}},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["uri",{"_index":3395,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["url",{"_index":839,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["use",{"_index":535,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["use(req",{"_index":3415,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["useclass",{"_index":590,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["used",{"_index":500,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/Roles.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["usefactory",{"_index":580,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["usefactory(...args).config",{"_index":3089,"title":{},"body":{"modules/RedisModule.html":{}}}],["usefiles",{"_index":3405,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["user",{"_index":71,"title":{"interfaces/User.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/JwtDto.html":{},"injectables/LiteAuthGuard.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["user's",{"_index":654,"title":{},"body":{"classes/AuthService.html":{},"injectables/BasicUserService.html":{}}}],["user.constants",{"_index":711,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["user.decorator.ts",{"_index":3798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.entity",{"_index":3263,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["user.id",{"_index":321,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{}}}],["user.login",{"_index":716,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["user.password",{"_index":313,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["user.password.tostring",{"_index":315,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["user.password?.length",{"_index":316,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["user.types",{"_index":707,"title":{},"body":{"injectables/BasicUserService.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{}}}],["user/entity/user",{"_index":1352,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["user/user.module",{"_index":570,"title":{},"body":{"modules/AuthModule.html":{}}}],["user/user.types",{"_index":1355,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/XdbRequest.html":{}}}],["user_relations",{"_index":710,"title":{},"body":{"injectables/BasicUserService.html":{},"miscellaneous/variables.html":{}}}],["userdto",{"_index":1451,"title":{"classes/UserDto.html":{}},"body":{"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userentity",{"_index":297,"title":{"entities/UserEntity.html":{}},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userentitypwdandrolessavehandler",{"_index":3216,"title":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["useridentity",{"_index":92,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["usermodule",{"_index":569,"title":{"modules/UserModule.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["usermodule.forroot",{"_index":578,"title":{},"body":{"modules/AuthModule.html":{}}}],["usermoduleoptions",{"_index":3188,"title":{},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/typealiases.html":{}}}],["username",{"_index":756,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["userrep",{"_index":689,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userrole",{"_index":3113,"title":{"interfaces/UserRole.html":{}},"body":{"guards/RolesGuard.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userroledto",{"_index":3186,"title":{"classes/UserRoleDto.html":{}},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userroleentity",{"_index":901,"title":{"entities/UserRoleEntity.html":{}},"body":{"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["userroles",{"_index":3118,"title":{},"body":{"guards/RolesGuard.html":{}}}],["users",{"_index":3201,"title":{},"body":{"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"additional-documentation/properties/media.properties.html":{}}}],["userservice",{"_index":22,"title":{"classes/UserService.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/LiteAuthGuard.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userservice:43",{"_index":698,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userservice:56",{"_index":695,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userservice:70",{"_index":704,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userservice:85",{"_index":692,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userservice:97",{"_index":700,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["usersubscriber",{"_index":3250,"title":{"classes/UserSubscriber.html":{}},"body":{"classes/UserSubscriber.html":{}}}],["userupdaterequest",{"_index":3187,"title":{"interfaces/UserUpdateRequest.html":{}},"body":{"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userutils",{"_index":3108,"title":{},"body":{"guards/RolesGuard.html":{}}}],["userutils.hassomerole",{"_index":3115,"title":{},"body":{"guards/RolesGuard.html":{}}}],["uses",{"_index":2960,"title":{},"body":{"modules/ProcessModule.html":{}}}],["using",{"_index":277,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"modules/CacheModule.html":{},"modules/LogModule.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"modules/WarlockModule.html":{},"license.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["utf",{"_index":3855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utils/env.loader",{"_index":743,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["utils/object.utils",{"_index":936,"title":{},"body":{"injectables/CategoryService.html":{},"classes/LogService.html":{},"classes/MsClient.html":{}}}],["utils/user.utils",{"_index":3109,"title":{},"body":{"guards/RolesGuard.html":{}}}],["uuid",{"_index":2219,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":2218,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["v.code",{"_index":3227,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["v.codec_type",{"_index":1756,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["v4",{"_index":2217,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["val",{"_index":2233,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"injectables/RedisCacheService.html":{}}}],["valid",{"_index":73,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["validate",{"_index":70,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractUserSubscriber.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["validatecaptcha",{"_index":828,"title":{},"body":{"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["validatecaptcha(request",{"_index":821,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["validated",{"_index":2168,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["validatelogin",{"_index":271,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["validatelogin(login",{"_index":289,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["validates",{"_index":65,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractUserSubscriber.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/UserSubscriber.html":{}}}],["validatetoken",{"_index":27,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["validatetoken(token",{"_index":62,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["validation",{"_index":819,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["validator",{"_index":813,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"dependencies.html":{}}}],["validity",{"_index":40,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["value",{"_index":183,"title":{},"body":{"classes/AbstractProcess.html":{},"modules/AuthModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"modules/ExplorerModule.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/Language.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"modules/UserModule.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":2388,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["value.trim",{"_index":1166,"title":{},"body":{"injectables/ConfigService.html":{}}}],["value[0",{"_index":2389,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["values",{"_index":969,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"interfaces/XdbRequest.html":{}}}],["valuesofproperties",{"_index":974,"title":{},"body":{"injectables/ConfigService.html":{}}}],["valuetransformer",{"_index":3926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["varchar",{"_index":1643,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/UserEntity.html":{}}}],["variablename",{"_index":1148,"title":{},"body":{"injectables/ConfigService.html":{}}}],["variables",{"_index":1000,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["variation",{"_index":3782,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["verbal",{"_index":3562,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":2428,"title":{},"body":{"classes/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["verbose(message",{"_index":2452,"title":{},"body":{"classes/LogService.html":{}}}],["verification",{"_index":2167,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["versa",{"_index":3933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":533,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["version\"]?.description",{"_index":1864,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["vice",{"_index":3932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["video",{"_index":370,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["videofilemetadata",{"_index":371,"title":{"interfaces/VideoFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["videofilemetadataentity",{"_index":1686,"title":{"entities/VideoFileMetadataEntity.html":{}},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["videomd",{"_index":1768,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.bit_rate",{"_index":1779,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.codec_long_name",{"_index":1773,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.codec_name?.touppercase",{"_index":1771,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.color_range",{"_index":1787,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.color_space",{"_index":1789,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.display_aspect_ratio",{"_index":1785,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.height",{"_index":1777,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.r_frame_rate",{"_index":1791,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.sample_aspect_ratio",{"_index":1783,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.tags?.rotate",{"_index":1793,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.width",{"_index":1775,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["virtual",{"_index":1373,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["void",{"_index":933,"title":{},"body":{"injectables/CategoryService.html":{},"classes/DbExceptionFilter.html":{},"injectables/FileMetadataService.html":{},"classes/LogService.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["vp6",{"_index":2502,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["warlock",{"_index":2906,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"modules/WarlockModule.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["warlock(client",{"_index":3288,"title":{},"body":{"modules/WarlockModule.html":{}}}],["warlock.constants",{"_index":3282,"title":{},"body":{"modules/WarlockModule.html":{}}}],["warlock.lock",{"_index":3291,"title":{},"body":{"modules/WarlockModule.html":{}}}],["warlock.types",{"_index":3283,"title":{},"body":{"modules/WarlockModule.html":{}}}],["warlockfn",{"_index":2866,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"modules/WarlockModule.html":{},"miscellaneous/typealiases.html":{}}}],["warlockmodule",{"_index":2956,"title":{"modules/WarlockModule.html":{}},"body":{"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"modules.html":{},"overview.html":{}}}],["warn",{"_index":2429,"title":{},"body":{"classes/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["warn(message",{"_index":2454,"title":{},"body":{"classes/LogService.html":{}}}],["warning",{"_index":2456,"title":{},"body":{"classes/LogService.html":{}}}],["warranties",{"_index":550,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["warranty",{"_index":3686,"title":{},"body":{"license.html":{}}}],["web",{"_index":3952,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["webpsupport",{"_index":2521,"title":{},"body":{"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["where(\"file.code",{"_index":2088,"title":{},"body":{"injectables/FileService.html":{}}}],["wherever",{"_index":3650,"title":{},"body":{"license.html":{}}}],["whether",{"_index":33,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/ProcessManagerService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"license.html":{}}}],["whitebalance",{"_index":431,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["whole",{"_index":3546,"title":{},"body":{"license.html":{}}}],["whose",{"_index":930,"title":{},"body":{"injectables/CategoryService.html":{}}}],["width",{"_index":373,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["width\"]?.value",{"_index":1832,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["withfiletypes",{"_index":1116,"title":{},"body":{"injectables/ConfigService.html":{}}}],["within",{"_index":3582,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":549,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["work",{"_index":788,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"license.html":{}}}],["working",{"_index":888,"title":{},"body":{"modules/CategoryModule.html":{},"injectables/CategoryService.html":{}}}],["works",{"_index":3540,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":3588,"title":{},"body":{"license.html":{}}}],["writelog",{"_index":136,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["writelog(message",{"_index":173,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["writerequest",{"_index":1400,"title":{},"body":{"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["writes",{"_index":177,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["writing",{"_index":546,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["written",{"_index":3563,"title":{},"body":{"license.html":{}}}],["xdb",{"_index":3315,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["xdb.getxmlparser",{"_index":3420,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["xdb.parsexmlbody(req.body",{"_index":3427,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["xdbaction",{"_index":3303,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbdecomposedentity",{"_index":3304,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbexportdto",{"_index":3305,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbexportparams",{"_index":3301,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbexportservice",{"_index":3294,"title":{"classes/XdbExportService.html":{}},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["xdbimportservice",{"_index":3312,"title":{"classes/XdbImportService.html":{}},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["xdbmoduleoptions",{"_index":3402,"title":{},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{}}}],["xdbobject",{"_index":3306,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbrequest",{"_index":3385,"title":{"interfaces/XdbRequest.html":{}},"body":{"interfaces/XdbRequest.html":{}}}],["xdbrowdata",{"_index":3307,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbrowdatavalue",{"_index":3394,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xml",{"_index":3298,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["xml2js",{"_index":3309,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"dependencies.html":{}}}],["xml2js.parser",{"_index":3324,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["xmldata",{"_index":3318,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["xmldatabridgeexportservice",{"_index":3434,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["xmldatabridgeimportservice",{"_index":3433,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["xmldatabridgemiddleware",{"_index":3408,"title":{"injectables/XmlDataBridgeMiddleware.html":{}},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["xmldatabridgemodule",{"_index":3401,"title":{"modules/XmlDataBridgeModule.html":{}},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["yargs",{"_index":3311,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["ycbcrpositioning",{"_index":404,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["year",{"_index":346,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["yes",{"_index":184,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/BadRequestMsException.html":{},"classes/CacheService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/ExplorerService.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"injectables/LocaleService.html":{},"classes/LogService.html":{},"classes/MediaManager.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["z0",{"_index":303,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/ConfigService.html":{}}}],["z][_a",{"_index":1154,"title":{},"body":{"injectables/ConfigService.html":{}}}],["za",{"_index":302,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/ConfigService.html":{}}}],["zerofill",{"_index":491,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["zip",{"_index":3447,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":732,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AbstractAuthGuard.html":{"url":"guards/AbstractAuthGuard.html","title":"guard - AbstractAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AbstractAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                lib/shared/guards/abstract-auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    An abstract class for creating authentication guards.\n\n                \n\n\n                \n                Implements\n                \n                \n                            CanActivate\n                \n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                cacheService\n                            \n                            \n                                    Protected\n                                fetchUser\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                logger\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                getAccessTokenFromRequest\n                            \n                            \n                                    Private\n                                    Async\n                                validateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/guards/abstract-auth.guard.ts:49\n                        \n                    \n\n\n            \n                \n                        Determines whether the current request is allowed to proceed based on the presence and validity of an access token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe execution context of the request.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A boolean indicating whether the request is allowed to proceed.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAccessTokenFromRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAccessTokenFromRequest(req: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/guards/abstract-auth.guard.ts:85\n                        \n                    \n\n\n            \n                \n                        Extracts the access token from the request.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe request object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The access token if found, otherwise null.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/guards/abstract-auth.guard.ts:74\n                        \n                    \n\n\n            \n                \n                        Validates the given access token by checking it against the store.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe access token to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The user identity if the token is valid, otherwise null.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  ForbiddenException,\n  Logger,\n} from \"@nestjs/common\";\nimport {\n  ACCESS_TOKEN_ERROR_MSG,\n  AUTH_ACCESS_TOKEN_PREFIX,\n  AUTH_JWT_CACHE_PREFIX,\n} from \"../../common/auth/auth.constants\";\nimport { Request } from \"express\";\nimport { CacheService } from \"../modules/cache/cache.types\";\nimport { UserService } from \"../../common/user/user.types\";\nimport { REQUEST_PROPS } from \"../constants\";\n\n/**\n * @abstract\n * @class AbstractAuthGuard\n * An abstract class for creating authentication guards.\n */\nexport abstract class AbstractAuthGuard implements CanActivate {\n  protected abstract readonly logger: Logger;\n  protected abstract readonly cacheService: CacheService;\n  protected abstract readonly userService: UserService;\n  protected fetchUser = true;\n\n  /**\n   * Determines whether the current request is allowed to proceed based on the presence and validity of an access token.\n   * @param context - The execution context of the request.\n   * @returns A boolean indicating whether the request is allowed to proceed.\n   */\n  async canActivate(context: ExecutionContext) {\n    const req = context.switchToHttp().getRequest();\n    const token = this.getAccessTokenFromRequest(req);\n    const userIdentity = await this.validateToken(token);\n    if (userIdentity) {\n      req[REQUEST_PROPS.accessToken] = token;\n    } else {\n      this.logger.warn(`Invalid token: ${token}`);\n      throw new ForbiddenException(ACCESS_TOKEN_ERROR_MSG);\n    }\n    if (this.fetchUser) {\n      const user = await this.userService.findByLogin(userIdentity);\n      if (!user) {\n        throw new ForbiddenException(ACCESS_TOKEN_ERROR_MSG);\n      }\n      req[REQUEST_PROPS.currentUser] = user;\n    }\n    return true;\n  }\n\n  /**\n   * Validates the given access token by checking it against the store.\n   * @param token - The access token to validate.\n   * @returns The user identity if the token is valid, otherwise null.\n   */\n  private async validateToken(token: string) {\n    return this.cacheService.get(\n      `${AUTH_JWT_CACHE_PREFIX}:${AUTH_ACCESS_TOKEN_PREFIX}:${token}`,\n    );\n  }\n\n  /**\n   * Extracts the access token from the request.\n   * @param req - The request object.\n   * @returns The access token if found, otherwise null.\n   */\n  private getAccessTokenFromRequest(req: Request) {\n    if (req.cookies?.accessToken) {\n      return req.cookies.accessToken;\n    }\n    if (req.headers?.authorization) {\n      const authorizationHeader = req.headers.authorization;\n      const parts = authorizationHeader.match(/Bearer\\s+(\\S+)\\s*(.+)?/);\n      if (!parts.length) {\n        return null;\n      }\n      return parts[1];\n    }\n    return null;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractProcess.html":{"url":"classes/AbstractProcess.html","title":"class - AbstractProcess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractProcess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/abstract-process.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing a process unit managing instance.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                logInstance\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                pmService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                execute\n                            \n                            \n                                    Private\n                                    Async\n                                getStatus\n                            \n                            \n                                    Protected\n                                    Async\n                                onCrash\n                            \n                            \n                                    Protected\n                                    Async\n                                onFinish\n                            \n                            \n                                    Protected\n                                    Async\n                                onStop\n                            \n                            \n                                    Private\n                                    Async\n                                setStatus\n                            \n                            \n                                    Async\n                                start\n                            \n                            \n                                    Async\n                                stop\n                            \n                            \n                                    Protected\n                                    Async\n                                writeLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in lib/common/process/abstract-process.ts:35\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/abstract-process.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessLogEntity\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/abstract-process.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        pmService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessManagerService\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/abstract-process.ts:32\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise<>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:165\n                        \n                    \n\n\n            \n                \n                        Gets the current status of the process.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The current process status.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onCrash\n                        \n                    \n                \n            \n            \n                \n                        \n                    onCrash(error: Error)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:157\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process crashes.\nCan be overridden by subclasses if needed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error that caused the crash.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onFinish\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFinish()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:140\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process finishes.\nCan be overridden by subclasses if needed.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onStop\n                        \n                    \n                \n            \n            \n                \n                        \n                    onStop()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:148\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process stops.\nCan be overridden by subclasses if needed.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    setStatus(status: Status)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:173\n                        \n                    \n\n\n            \n                \n                        Sets the status of the process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            Status\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new status to set.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:44\n                        \n                    \n\n\n            \n                \n                        Starts the process and handles its execution.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:80\n                        \n                    \n\n\n            \n                \n                        Stops the process and updates its status.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        writeLog\n                        \n                    \n                \n            \n            \n                \n                        \n                    writeLog(message: string, data?, level)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:94\n                        \n                    \n\n\n            \n                \n                        Writes a log entry with the specified message, data, and log level.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe log message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nOptional additional data.\n\n\n                                            \n                                        \n                                        \n                                                level\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    LogLevel.Log\n                                            \n\n                                            \n                                                    \nThe log level (default: LogLevel.Log).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Process } from \"./process.constants\";\nimport { Logger } from \"@nestjs/common\";\nimport { ProcessManagerService } from \"./process-manager.service\";\nimport { ProcessLogEntity } from \"./entity/process.log.entity\";\nimport { ObjectUtils } from \"../../shared/utils/object.utils\";\nimport registerProcess = Process.registerProcess;\nimport Status = Process.Status;\nimport inspect = ObjectUtils.inspect;\nimport LogLevel = Process.LogLevel;\n\n/**\n * Abstract class representing a process unit managing instance.\n */\nexport abstract class AbstractProcess {\n  protected abstract readonly logger: Logger;\n  protected abstract readonly pmService: ProcessManagerService;\n  private logInstance: ProcessLogEntity;\n\n  protected abstract execute(): Promise;\n\n  protected constructor() {\n    registerProcess(this);\n  }\n\n  /**\n   * Starts the process and handles its execution.\n   */\n  async start() {\n    const status = await this.getStatus();\n    if (status === Status.Execute) {\n      this.logger.warn(\n        `Process with id ${this.constructor.name} now executed, can't start that`,\n      );\n      return;\n    }\n    this.logInstance = await this.pmService.createLogInstance(\n      this.constructor.name,\n    );\n    await this.writeLog(`Start process with id ${this.constructor.name}`);\n    await this.setStatus(Status.Execute);\n    try {\n      await this.execute();\n      await this.setStatus(Status.Ready);\n      await this.onFinish();\n      await this.writeLog(\n        `Process with id ${this.constructor.name} was finished`,\n      );\n      this.logInstance = undefined;\n    } catch (e) {\n      await this.setStatus(Status.Crashed);\n      await this.onCrash(e);\n      await this.writeLog(\n        `Process with id ${this.constructor.name} was crashed`,\n        e,\n        LogLevel.Error,\n      );\n      this.logInstance = undefined;\n    }\n  }\n\n  /**\n   * Stops the process and updates its status.\n   */\n  async stop() {\n    await this.writeLog(`Try to stop process with id ${this.constructor.name}`);\n    await this.setStatus(Status.Ready);\n    await this.onStop();\n    await this.writeLog(`Process with id ${this.constructor.name} was stopped`);\n    this.logInstance = undefined;\n  }\n\n  /**\n   * Writes a log entry with the specified message, data, and log level.\n   * @param message - The log message.\n   * @param data - Optional additional data.\n   * @param level - The log level (default: LogLevel.Log).\n   */\n  protected async writeLog(\n    message: string,\n    data?: unknown,\n    level = LogLevel.Log,\n  ) {\n    switch (level) {\n      case LogLevel.Log:\n        this.logger.log(message, data);\n        break;\n      case LogLevel.Error:\n        this.logger.error(message, data);\n        break;\n      case LogLevel.Warn:\n        this.logger.warn(message, data);\n        break;\n      case LogLevel.Debug:\n        this.logger.debug(message, data);\n        break;\n      case LogLevel.Verbose:\n        this.logger.verbose(message, data);\n        break;\n    }\n    if (!this.logInstance) {\n      return;\n    }\n    const date = new Date();\n    let msg = inspect(message);\n    if (\n      (msg.startsWith(`'`) && msg.endsWith(`'`)) ||\n      (msg.startsWith(`\"`) && msg.endsWith(`\"`))\n    ) {\n      msg = msg.substring(1, msg.length - 1);\n    }\n    if (data) {\n      msg += inspect(data);\n    }\n    msg = msg.replace(/\\[/g, \"{\");\n    msg = msg.replace(/]/g, \"}\");\n    this.logInstance.content += `[${process.pid} | ${date.toLocaleString()} | ${level}] ${msg} >>>\\n`;\n    await this.pmService.updateLogInstance(this.logInstance);\n  }\n\n  /**\n   * Callback method that is called when the process finishes.\n   * Can be overridden by subclasses if needed.\n   */\n  protected async onFinish() {\n    // implement callback in child class if it needs\n  }\n\n  /**\n   * Callback method that is called when the process stops.\n   * Can be overridden by subclasses if needed.\n   */\n  protected async onStop() {\n    // implement callback in child class if it needs\n  }\n\n  /**\n   * Callback method that is called when the process crashes.\n   * Can be overridden by subclasses if needed.\n   * @param error - The error that caused the crash.\n   */\n  protected async onCrash(error: Error) {\n    // implement callback in child class if it needs\n  }\n\n  /**\n   * Gets the current status of the process.\n   * @returns The current process status.\n   */\n  private async getStatus() {\n    return await this.pmService.getProcessUnitStatus(this.constructor.name);\n  }\n\n  /**\n   * Sets the status of the process.\n   * @param status - The new status to set.\n   */\n  private async setStatus(status: Status) {\n    await this.pmService.setProcessUnitStatus(this.constructor.name, status);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractUserSubscriber.html":{"url":"classes/AbstractUserSubscriber.html","title":"class - AbstractUserSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractUserSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/abstract-user-subscriber.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class for user entity subscribers to handle specific events.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                hashPassword\n                            \n                            \n                                    Protected\n                                    Async\n                                hashPasswordIfNeeded\n                            \n                            \n                                    Protected\n                                    Async\n                                validateLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Type\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/user/abstract-user-subscriber.ts:28\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/abstract-user-subscriber.ts:76\n                        \n                    \n\n\n            \n                \n                        Hashes a password using bcrypt.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe password to hash.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The hashed password.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        hashPasswordIfNeeded\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPasswordIfNeeded(event: InsertEvent | UpdateEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/abstract-user-subscriber.ts:48\n                        \n                    \n\n\n            \n                \n                        Hashes the user password if it has changed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        InsertEvent | UpdateEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe insert or update event.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        validateLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateLogin(login: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/abstract-user-subscriber.ts:35\n                        \n                    \n\n\n            \n                \n                        Validates the login format.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                login\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe login string to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException } from \"@nestjs/common\";\nimport { InsertEvent } from \"typeorm/subscriber/event/InsertEvent\";\nimport { UpdateEvent } from \"typeorm\";\nimport * as bcrypt from \"bcrypt\";\nimport { Type } from \"@nestjs/common/interfaces/type.interface\";\nimport { UserEntity } from \"./entity/user.entity\";\n\n/**\n * Abstract class for user entity subscribers to handle specific events.\n */\nexport abstract class AbstractUserSubscriber {\n  protected abstract readonly type: Type;\n\n  /**\n   * Validates the login format.\n   * @param login - The login string to validate.\n   * @throws BadRequestException if the login format is invalid.\n   */\n  protected async validateLogin(login: string) {\n    const loginRegex = /^[A-Za-z0-9_]+$/;\n    if (!loginRegex.test(login)) {\n      throw new BadRequestException(\n        \"Login must contain only Latin letters, numbers, and underscores.\",\n      );\n    }\n  }\n\n  /**\n   * Hashes the user password if it has changed.\n   * @param event - The insert or update event.\n   */\n  protected async hashPasswordIfNeeded(event: InsertEvent | UpdateEvent) {\n    const { entity: user, manager } = event;\n    if (typeof user.password === \"number\") {\n      user.password = user.password.toString();\n    }\n    if (!user.password?.length) {\n      delete user.password;\n      return;\n    }\n    const foundUser: T = await manager.findOne(this.type, {\n      where: { id: user.id },\n    });\n    if (foundUser) {\n      if (await bcrypt.compare(user.password, foundUser.password)) {\n        user.password = foundUser.password;\n      } else {\n        user.password = await this.hashPassword(user.password);\n      }\n    } else {\n      user.password = await this.hashPassword(user.password);\n    }\n  }\n\n  /**\n   * Hashes a password using bcrypt.\n   * @param password - The password to hash.\n   * @returns The hashed password.\n   */\n  protected async hashPassword(password: string) {\n    return await bcrypt.hash(password, 10);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AudioFileMetadata.html":{"url":"interfaces/AudioFileMetadata.html","title":"interface - AudioFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AudioFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing audio file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                                \n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            bitrate\n                                        \n                                \n                                \n                                        \n                                            codec\n                                        \n                                \n                                \n                                        \n                                            codecProfile\n                                        \n                                \n                                \n                                        \n                                            container\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            genre\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            numberOfChannels\n                                        \n                                \n                                \n                                        \n                                            sampleRate\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            tool\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bitrate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bitrate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        codec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codec:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        codecProfile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codecProfile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        container\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        container:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfChannels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfChannels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleRate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleRate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tool\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tool:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  id: number;\n  mime: string;\n  ext: string;\n  hash: string;\n  icc: IccFileMetadata;\n  gps: GpsFileMetadata;\n  image: ImageFileMetadata;\n  exif: ExifFileMetadata;\n  audio: AudioFileMetadata;\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  id: number;\n  bps: number;\n  width: number;\n  height: number;\n  colorComponents: number;\n  subsampling: string;\n  dateTime: Date;\n  bitDepth: number;\n  colorType: string;\n  compression: string;\n  filter: string;\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  id: number;\n  profileVersion: string;\n  profileClassValue: string;\n  profileClassName: string;\n  connectionSpace: string;\n  iccProfileDate: Date;\n  iccSignature: string;\n  primaryPlatform: string;\n  deviceManufacturer: string;\n  deviceModelNumber: string;\n  renderingIntentValue: string;\n  renderingIntentName: string;\n  profileCreator: string;\n  iccDescription: string;\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  id: number;\n  make: string;\n  model: string;\n  orientation: string;\n  resolutionX: string;\n  resolutionY: string;\n  resolutionUnit: string;\n  software: string;\n  ycbCrPositioning: string;\n  exifIfdPointer: string;\n  gpsInfoIfdPointer: string;\n  exposureTime: string;\n  fNumber: string;\n  exposureProgram: string;\n  isoSpeedRatings: string;\n  exifVersion: string;\n  offsetTime: string;\n  shutterSpeedValue: string;\n  aperture: string;\n  brightness: string;\n  exposureBias: string;\n  maxAperture: string;\n  subjectDistance: string;\n  meteringMode: string;\n  flash: string;\n  focalLength: string;\n  flashpixVersion: string;\n  colorSpace: string;\n  pixelXDimension: string;\n  pixelYDimension: string;\n  interoperabilityIfdPointer: string;\n  sensingMethod: string;\n  sceneType: string;\n  customRendered: string;\n  exposureMode: string;\n  whiteBalance: string;\n  digitalZoomRatio: string;\n  sceneCaptureType: string;\n  contrast: string;\n  saturation: string;\n  sharpness: string;\n  subjectDistanceRange: string;\n  lensMake: string;\n  lensModel: string;\n  compositeImage: string;\n  interoperabilityIndex: string;\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  id: number;\n  latitude: number;\n  longitude: number;\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AudioFileMetadataEntity.html":{"url":"entities/AudioFileMetadataEntity.html","title":"entity - AudioFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AudioFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/audio-file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the audio metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                album\n                            \n                            \n                                    \n                                    \n                                artist\n                            \n                            \n                                    \n                                    \n                                bitrate\n                            \n                            \n                                    \n                                    \n                                codec\n                            \n                            \n                                    \n                                    \n                                codecProfile\n                            \n                            \n                                    \n                                    \n                                container\n                            \n                            \n                                    \n                                    \n                                duration\n                            \n                            \n                                    \n                                    \n                                genre\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                label\n                            \n                            \n                                    \n                                    \n                                numberOfChannels\n                            \n                            \n                                    \n                                    \n                                sampleRate\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                tool\n                            \n                            \n                                    \n                                    \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        album\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        artist\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bitrate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        codec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        codecProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'codec_profile', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        genre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        numberOfChannels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'number_of_channels', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'sample_rate', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:63\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { AudioFileMetadata } from \"../file.types\";\n\n/**\n * The entity stores the audio metadata of the file\n */\n@Entity(\"file_metadata_audio\")\nexport class AudioFileMetadataEntity implements AudioFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  container: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  codec: string;\n\n  @Index()\n  @Column(\"int\", { name: \"sample_rate\", nullable: true })\n  sampleRate: number;\n\n  @Index()\n  @Column(\"int\", { name: \"number_of_channels\", nullable: true })\n  numberOfChannels: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true })\n  bitrate: number;\n\n  @Index()\n  @Column(\"varchar\", { name: \"codec_profile\", nullable: true })\n  codecProfile: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  tool: string;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  duration: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  title: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  artist: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  album: string;\n\n  @Index()\n  @Column(\"int\", { nullable: true })\n  year: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  genre: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  label: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/guards/auth.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                An authentication guard that extends AbstractAuthGuard, used for full authentication including user fetching.\n\n            \n\n            \n                Extends\n            \n            \n                            AbstractAuthGuard\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, userService: UserService, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/guards/auth.guard.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { AbstractAuthGuard } from \"./abstract-auth.guard\";\nimport { LOGGER } from \"../modules/log/log.constants\";\nimport { UserService } from \"../../common/user/user.types\";\nimport { CacheService } from \"../modules/cache/cache.types\";\n\n/**\n * @class AuthGuard\n * An authentication guard that extends AbstractAuthGuard, used for full authentication including user fetching.\n */\n@Injectable()\nexport class AuthGuard extends AbstractAuthGuard {\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    protected readonly userService: UserService,\n    protected readonly cacheService: CacheService,\n  ) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/auth/auth.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module providing auth process.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: AuthModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.module.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            AuthModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    { service: AuthorizationService }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { JwtModule } from \"@nestjs/jwt\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { AuthorizationService } from \"./authorization.service\";\nimport { AuthModuleOptions } from \"./auth.types\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { UserModule } from \"../user/user.module\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport { AuthConfig } from \"../../../gen-src/auth.config\";\nimport { AuthService } from \"./auth.constants\";\n\n/**\n * Module providing auth process.\n */\n@Module({})\nexport class AuthModule {\n  static forRoot(\n    options: AuthModuleOptions = { service: AuthorizationService },\n  ): DynamicModule {\n    return {\n      module: AuthModule,\n      imports: [\n        PassportModule,\n        CacheModule,\n        LogModule,\n        UserModule.forRoot(),\n        JwtModule.registerAsync({\n          imports: [CacheModule],\n          inject: [CacheService],\n          useFactory: async (cs: CacheService) => {\n            return {\n              secret: await cs.get(AuthConfig.JWT_SECRET),\n              signOptions: {\n                expiresIn: await cs.getNumber(\n                  AuthConfig.ACCESS_TOKEN_EXPIRATION,\n                ),\n              },\n            };\n          },\n        }),\n      ],\n      providers: [\n        {\n          provide: AuthService,\n          useClass: options.service,\n        },\n      ],\n      exports: [AuthService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthService.html":{"url":"classes/AuthService.html","title":"class - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract service class for authentication and authorization.\nDefines the methods that must be implemented by any derived service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                authenticate\n                            \n                            \n                                    Abstract\n                                exchangeToken\n                            \n                            \n                                    Abstract\n                                invalidateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        authenticate\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticate(data: LoginPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.constants.ts:109\n                        \n                    \n\n\n            \n                \n                        Authenticate the user with the provided login payload.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLoginPayload object with user login information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A Promise that resolves to a JwtDto containing access and refresh tokens.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        exchangeToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    exchangeToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.constants.ts:123\n                        \n                    \n\n\n            \n                \n                        Exchange the provided refresh token for a new access token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe refresh token to exchange.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                A Promise that resolves to a Partial containing new access and refresh tokens.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        invalidateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    invalidateToken(accessToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.constants.ts:116\n                        \n                    \n\n\n            \n                \n                        Invalidate the specified access token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe access token to invalidate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                A Promise that resolves to true if the token was invalidated successfully, or throws an error.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { JwtDto, LoginPayload } from \"./auth.types\";\n\n/**\n * Error message for access token related errors.\n * @constant\n */\nexport const ACCESS_TOKEN_ERROR_MSG = \"ERR_TOKEN_A\";\n\n/**\n * Error message for refresh token related errors.\n * @constant\n */\nexport const REFRESH_TOKEN_ERROR_MSG = \"ERR_TOKEN_R\";\n\n/**\n * Placeholder for unknown IP addresses.\n * @constant\n */\nexport const UNKNOWN_IP = \"unknown\";\n\n/**\n * Prefix for JWT cache keys.\n * @constant\n */\nexport const AUTH_JWT_CACHE_PREFIX = \"jwt\";\n\n/**\n * Prefix for access token cache keys.\n * @constant\n */\nexport const AUTH_ACCESS_TOKEN_PREFIX = \"access_token\";\n\n/**\n * Prefix for refresh token cache keys.\n * @constant\n */\nexport const AUTH_REFRESH_TOKEN_PREFIX = \"refresh_token\";\n\n/**\n * Prefix for brute force protection cache keys.\n * @constant\n */\nexport const BRUTEFORCE_JWT_CACHE_PREFIX = \"bruteforce\";\n\n/**\n * Generates a cache key for an access token.\n * @param accessToken - The access token.\n * @returns The generated cache key.\n */\nexport const jwtAccessTokenKey = (accessToken: string) => {\n  return `${AUTH_JWT_CACHE_PREFIX}:${AUTH_ACCESS_TOKEN_PREFIX}:${accessToken}`;\n};\n\n/**\n * Generates a cache key for a refresh token.\n * @param accessToken - The access token.\n * @param refreshToken - The refresh token.\n * @returns The generated cache key.\n */\nexport const jwtRefreshTokenKey = (\n  accessToken: string,\n  refreshToken: string,\n) => {\n  return `${AUTH_JWT_CACHE_PREFIX}:${AUTH_REFRESH_TOKEN_PREFIX}:${accessToken}:${refreshToken}`;\n};\n\n/**\n * Generates a cache key for tracking brute force login attempts by login.\n * @param login - The user's login.\n * @returns The generated cache key.\n */\nexport const bruteForceLoginKey = (login: string) =>\n  `${BRUTEFORCE_JWT_CACHE_PREFIX}:login:${login}`;\n\n/**\n * Generates a cache key for tracking brute force login attempts by IP address.\n * @param ipAddress - The IP address of the user.\n * @returns The generated cache key.\n */\nexport const bruteForceIPKey = (ipAddress: string) =>\n  `${BRUTEFORCE_JWT_CACHE_PREFIX}:ip:${ipAddress}`;\n\n/**\n * Abstract service class for authentication and authorization.\n * Defines the methods that must be implemented by any derived service.\n */\nexport abstract class AuthService {\n  /**\n   * Authenticate the user with the provided login payload.\n   * @param data - LoginPayload object with user login information.\n   * @returns A Promise that resolves to a JwtDto containing access and refresh tokens.\n   */\n  abstract authenticate(data: LoginPayload): Promise;\n\n  /**\n   * Invalidate the specified access token.\n   * @param accessToken - The access token to invalidate.\n   * @returns A Promise that resolves to true if the token was invalidated successfully, or throws an error.\n   */\n  abstract invalidateToken(accessToken: string);\n\n  /**\n   * Exchange the provided refresh token for a new access token.\n   * @param refreshToken - The refresh token to exchange.\n   * @returns A Promise that resolves to a Partial containing new access and refresh tokens.\n   */\n  abstract exchangeToken(refreshToken: string): Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BadRequestMsException.html":{"url":"classes/BadRequestMsException.html","title":"class - BadRequestMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BadRequestMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/bad-request-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for bad requests, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/bad-request-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for bad requests, extending MsException.\n */\nexport class BadRequestMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.BAD_REQUEST, message || \"Bad request\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BasicUserService.html":{"url":"injectables/BasicUserService.html","title":"injectable - BasicUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BasicUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user-service-basic.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Provides methods to interact with the UserEntity repository.\n\n            \n\n            \n                Extends\n            \n            \n                            UserService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByLogin\n                            \n                            \n                                    Async\n                                removeById\n                            \n                            \n                                    Async\n                                updateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRep: Repository)\n                    \n                \n                        \n                            \n                                Defined in lib/common/user/user-service-basic.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: User)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:85\n\n                        \n                    \n\n\n            \n                \n                        Create a new user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user object to create.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The created user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:56\n\n                        \n                    \n\n\n            \n                \n                        Find a user by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The user found or undefined if not found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByLogin(login: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:43\n\n                        \n                    \n\n\n            \n                \n                        Find a user by their login.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                login\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's login.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The user found or undefined if not found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeById\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:97\n\n                        \n                    \n\n\n            \n                \n                        Remove a user by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The removed user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateById(id: string, user: User)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:70\n\n                        \n                    \n\n\n            \n                \n                        Update a user by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's ID.\n\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user object with updated properties.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The updated user.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { User, UserService } from \"./user.types\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { UserEntity } from \"./entity/user.entity\";\nimport { USER_RELATIONS } from \"./user.constants\";\n\n/**\n * @class BasicUserService\n * Provides methods to interact with the UserEntity repository.\n */\n@Injectable()\nexport class BasicUserService extends UserService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRep: Repository,\n  ) {\n    super();\n  }\n\n  /**\n   * Find a user by their login.\n   * @async\n   * @param {string} login - The user's login.\n   * @returns {Promise} The user found or undefined if not found.\n   */\n  async findByLogin(login: string): Promise {\n    return await this.userRep.findOne({\n      where: { login, active: true },\n      relations: USER_RELATIONS,\n    });\n  }\n\n  /**\n   * Find a user by their ID.\n   * @async\n   * @param {string} id - The user's ID.\n   * @returns {Promise} The user found or undefined if not found.\n   */\n  async findById(id: string): Promise {\n    return await this.userRep.findOne({\n      where: { id },\n      relations: USER_RELATIONS,\n    });\n  }\n\n  /**\n   * Update a user by their ID.\n   * @async\n   * @param {string} id - The user's ID.\n   * @param {User} user - The user object with updated properties.\n   * @returns {Promise} The updated user.\n   */\n  async updateById(id: string, user: User): Promise {\n    user.id = id;\n    if (user.login) {\n      delete user.login;\n    }\n    await this.userRep.save(user);\n    return await this.findById(id);\n  }\n\n  /**\n   * Create a new user.\n   * @async\n   * @param {User} user - The user object to create.\n   * @returns {Promise} The created user.\n   */\n  async create(user: User): Promise {\n    const newUser = this.userRep.create(user);\n    return await this.userRep.save(newUser);\n  }\n\n  /**\n   * Remove a user by their ID.\n   * @async\n   * @param {string} id - The user's ID.\n   * @returns {Promise} The removed user.\n   * @throws {NotFoundException} If the user with the specified ID is not found.\n   */\n  async removeById(id: string): Promise {\n    const user = await this.findById(id);\n    if (!user) {\n      throw new NotFoundException(`User with ID ${id} not found`);\n    }\n    await this.userRep.remove(user);\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CacheModule.html":{"url":"modules/CacheModule.html","title":"module - CacheModule","body":"\n                   \n\n\n\n\n    Modules\n    CacheModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CacheModule\n\n\n\ncluster_CacheModule_exports\n\n\n\ncluster_CacheModule_imports\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nCacheModule\n\nCacheModule\n\nCacheModule -->\n\nLogModule->CacheModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nCacheModule -->\n\nRedisModule->CacheModule\n\n\n\n\n\nCacheService \n\nCacheService \n\nCacheService  -->\n\nCacheModule->CacheService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/cache/cache.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides caching functionality using Redis.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            LogModule\n                        \n                        \n                            RedisModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CacheService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Logger, Module } from \"@nestjs/common\";\nimport { RedisModule } from \"./redis.module\";\nimport { LogModule } from \"../log/log.module\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\nimport { CacheService } from \"./cache.types\";\nimport { RedisCacheService } from \"./redis-cache.service\";\n\n/**\n * A module that provides caching functionality using Redis.\n */\n@Module({\n  imports: [\n    RedisModule.forRootAsync({\n      imports: [LogModule],\n      inject: [LOGGER],\n      useFactory: (logger: Logger) => {\n        EnvLoader.loadEnvironment(logger);\n        return {\n          config: {\n            host: process.env.REDIS_HOST,\n            port: parseInt(process.env.REDIS_PORT),\n            db: parseInt(process.env.REDIS_DB),\n            username: process.env.REDIS_USER,\n            password: process.env.REDIS_PASSWORD,\n          },\n        };\n      },\n    }),\n    LogModule,\n  ],\n  providers: [\n    {\n      provide: CacheService,\n      useClass: RedisCacheService,\n    },\n  ],\n  exports: [CacheService],\n})\nexport class CacheModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CacheService.html":{"url":"classes/CacheService.html","title":"class - CacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/cache/cache.types.ts\n        \n\n\n            \n                Description\n            \n            \n                An abstract class defining methods for cache operations.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                del\n                            \n                            \n                                    Abstract\n                                expire\n                            \n                            \n                                    Abstract\n                                get\n                            \n                            \n                                    Abstract\n                                getBoolean\n                            \n                            \n                                    Abstract\n                                getFromPattern\n                            \n                            \n                                    Abstract\n                                getNumber\n                            \n                            \n                                    Abstract\n                                incr\n                            \n                            \n                                    Abstract\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        del\n                        \n                    \n                \n            \n            \n                \n                        \n                    del(...keys: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        expire\n                        \n                    \n                \n            \n            \n                \n                        \n                    expire(key: string, expiresIn: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getBoolean\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBoolean(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getFromPattern\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFromPattern(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNumber(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        incr\n                        \n                    \n                \n            \n            \n                \n                        \n                    incr(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: string | number, expiration?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expiration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CacheService {\n  abstract get(key: string): Promise;\n\n  abstract getNumber(key: string): Promise;\n\n  abstract getBoolean(key: string): Promise;\n\n  abstract set(\n    key: string,\n    value: string | number,\n    expiration?: number,\n  ): Promise;\n\n  abstract del(...keys: string[]): Promise;\n\n  abstract incr(key: string): Promise;\n\n  abstract expire(key: string, expiresIn: number): Promise;\n\n  abstract getFromPattern(pattern: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CaptchaModule.html":{"url":"modules/CaptchaModule.html","title":"module - CaptchaModule","body":"\n                   \n\n\n\n\n    Modules\n    CaptchaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/captcha/captcha.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for work with captcha.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: CaptchaModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.module.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CaptchaModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    { service: GraphicCaptchaService }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRootAsync\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRootAsync(options: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.module.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { GraphicCaptchaService } from \"./graphic-captcha.service\";\nimport { CaptchaModuleOptions, CaptchaService } from \"./captcha.types\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\n\n/**\n * Module for work with captcha.\n */\n@Module({})\nexport class CaptchaModule {\n  static forRoot(\n    options: CaptchaModuleOptions = { service: GraphicCaptchaService },\n  ): DynamicModule {\n    return {\n      module: CaptchaModule,\n      imports: [CacheModule, LogModule],\n      providers: [\n        {\n          provide: CaptchaService,\n          useClass: options.service,\n        },\n      ],\n      exports: [CaptchaService],\n    };\n  }\n\n  static forRootAsync(options: {\n    inject?: any[];\n    imports?: any[];\n    useFactory: (...args) => Promise | CaptchaService;\n  }): DynamicModule {\n    const { inject, imports, useFactory } = options;\n    return {\n      module: CaptchaModule,\n      imports: [...(imports || [])],\n      providers: [\n        {\n          provide: CaptchaService,\n          useFactory,\n          inject,\n        },\n      ],\n      exports: [CaptchaService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CaptchaRequest.html":{"url":"classes/CaptchaRequest.html","title":"class - CaptchaRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CaptchaRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/captcha.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for validate the CAPTCHA.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                data\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/captcha/captcha.types.ts:55\n                        \n                    \n\n            \n                \n                    The data associated with the CAPTCHA request.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/captcha/captcha.types.ts:49\n                        \n                    \n\n            \n                \n                    The unique identifier for the CAPTCHA.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\n\n/**\n * Abstract class representing a CAPTCHA service.\n * @template CaptchaBody Type of data returned when generating CAPTCHA.\n */\nexport abstract class CaptchaService {\n  /**\n   * Generates a CAPTCHA.\n   * @returns {Promise} A promise that resolves with the CAPTCHA data.\n   */\n  abstract generateCaptcha(): Promise;\n\n  /**\n   * Validates a CAPTCHA.\n   * @param {CaptchaRequest} request The data for validate the CAPTCHA.\n   * @returns {Promise} A promise that resolves with the validation result (true if the CAPTCHA is valid).\n   */\n  abstract validateCaptcha(request: CaptchaRequest): Promise;\n}\n\n/**\n * Data transfer object for validate the CAPTCHA.\n * @template T Type of the CAPTCHA data.\n */\nexport class CaptchaRequest {\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  /**\n   * The data associated with the CAPTCHA request.\n   */\n  @IsNotEmpty()\n  data: T;\n}\n\n/**\n * Type representing a CAPTCHA response for client side.\n */\nexport type CaptchaResponse = {\n  /**\n   * The type of the CAPTCHA.\n   */\n  type?: string;\n\n  /**\n   * The image data for the CAPTCHA.\n   */\n  image?: string;\n\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  id?: string;\n\n  /**\n   * Whether the CAPTCHA is enabled in configuration.\n   */\n  enabled?: boolean;\n};\n\n/**\n * Options for configuring the CAPTCHA module.\n */\nexport type CaptchaModuleOptions = {\n  /**\n   * The class providing the CAPTCHA service.\n   */\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CaptchaService.html":{"url":"classes/CaptchaService.html","title":"class - CaptchaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CaptchaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/captcha.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing a CAPTCHA service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                generateCaptcha\n                            \n                            \n                                    Abstract\n                                validateCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        generateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateCaptcha()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.types.ts:29\n                        \n                    \n\n\n            \n                \n                        Generates a CAPTCHA.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves with the CAPTCHA data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        validateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateCaptcha(request: CaptchaRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.types.ts:36\n                        \n                    \n\n\n            \n                \n                        Validates a CAPTCHA.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            CaptchaRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data for validate the CAPTCHA.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves with the validation result (true if the CAPTCHA is valid).\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\n\n/**\n * Abstract class representing a CAPTCHA service.\n * @template CaptchaBody Type of data returned when generating CAPTCHA.\n */\nexport abstract class CaptchaService {\n  /**\n   * Generates a CAPTCHA.\n   * @returns {Promise} A promise that resolves with the CAPTCHA data.\n   */\n  abstract generateCaptcha(): Promise;\n\n  /**\n   * Validates a CAPTCHA.\n   * @param {CaptchaRequest} request The data for validate the CAPTCHA.\n   * @returns {Promise} A promise that resolves with the validation result (true if the CAPTCHA is valid).\n   */\n  abstract validateCaptcha(request: CaptchaRequest): Promise;\n}\n\n/**\n * Data transfer object for validate the CAPTCHA.\n * @template T Type of the CAPTCHA data.\n */\nexport class CaptchaRequest {\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  /**\n   * The data associated with the CAPTCHA request.\n   */\n  @IsNotEmpty()\n  data: T;\n}\n\n/**\n * Type representing a CAPTCHA response for client side.\n */\nexport type CaptchaResponse = {\n  /**\n   * The type of the CAPTCHA.\n   */\n  type?: string;\n\n  /**\n   * The image data for the CAPTCHA.\n   */\n  image?: string;\n\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  id?: string;\n\n  /**\n   * Whether the CAPTCHA is enabled in configuration.\n   */\n  enabled?: boolean;\n};\n\n/**\n * Options for configuring the CAPTCHA module.\n */\nexport type CaptchaModuleOptions = {\n  /**\n   * The class providing the CAPTCHA service.\n   */\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CategoryEntity.html":{"url":"entities/CategoryEntity.html","title":"entity - CategoryEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CategoryEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/category/entity/category.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores category trees\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                children\n                            \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                params\n                            \n                            \n                                    \n                                parent\n                            \n                            \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @TreeChildren()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @TreeParent()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  Tree,\n  TreeChildren,\n  TreeParent,\n} from \"typeorm\";\nimport { LocalizedStringEntity } from \"../../locale/entity/localized-string.entity\";\nimport { SimpleJsonTransformer } from \"../../../transformers/simple-json.transformer\";\nimport { MediaEntity } from \"../../../../common/media/entity/media.entity\";\n\n/**\n * The entity stores category trees\n */\n@Entity(\"categories\")\n@Tree(\"nested-set\")\nexport class CategoryEntity {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @Column(\"varchar\", { nullable: true })\n  url: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    nullable: true,\n    default: null,\n  })\n  params: object;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  icon: MediaEntity;\n\n  @Index()\n  @Column(\"int\", { default: 0, unsigned: true })\n  priority: number;\n\n  @TreeParent()\n  parent: CategoryEntity;\n\n  @TreeChildren()\n  children: CategoryEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoryModule.html":{"url":"modules/CategoryModule.html","title":"module - CategoryModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_imports\n\n\n\ncluster_CategoryModule_exports\n\n\n\ncluster_CategoryModule_providers\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nCategoryModule\n\nCategoryModule\n\nCategoryModule -->\n\nLogModule->CategoryModule\n\n\n\n\n\nCategoryService \n\nCategoryService \n\nCategoryService  -->\n\nCategoryModule->CategoryService \n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/category/category.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides services and configurations for working with categories.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoryService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CategoryService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Module } from \"@nestjs/common\";\nimport { CategoryService } from \"./category.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { CategoryEntity } from \"./entity/category.entity\";\nimport { LogModule } from \"../log/log.module\";\n\n/**\n * A module that provides services and configurations for working with categories.\n */\n@Module({\n  imports: [LogModule, TypeOrmModule.forFeature([CategoryEntity])],\n  providers: [CategoryService],\n  exports: [CategoryService],\n})\nexport class CategoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CategoryRestrictionEntity.html":{"url":"entities/CategoryRestrictionEntity.html","title":"entity - CategoryRestrictionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CategoryRestrictionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/category/entity/category-restriction.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the settings for restricting access by user roles for categories\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                allowFor\n                            \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        allowFor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category-restriction.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category-restriction.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category-restriction.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category-restriction.entity.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { CategoryEntity } from \"./category.entity\";\nimport { UserRoleEntity } from \"../../../../common/user/entity/user-role.entity\";\n\n/**\n * The entity stores the settings for restricting access by user roles for categories\n */\n@Entity(\"category_restriction\")\nexport class CategoryRestrictionEntity {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @ManyToMany(() => UserRoleEntity)\n  @JoinTable()\n  allowFor: UserRoleEntity[];\n\n  @ManyToOne(() => CategoryEntity, (t) => t.id)\n  category: CategoryEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/category/category.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for working with tree-categories.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getDescendantsByCodeOfRoot\n                            \n                            \n                                    Private\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(catRep: TreeRepository, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/category/category.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        catRep\n                                                  \n                                                        \n                                                                        TreeRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDescendantsByCodeOfRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDescendantsByCodeOfRoot(code: string, depth?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/category/category.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Get descendants of a category by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The code of the root category.\n\n                                            \n                                        \n                                        \n                                                depth\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    The maximum depth for the search (optional).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the tree of descendants of the category.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sort\n                        \n                    \n                \n            \n            \n                \n                        \n                    sort(cat: CategoryEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/category/category.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Sorts the children of a category by priority.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cat\n                                            \n                                                            CategoryEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe category entity whose children need to be sorted.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { TreeRepository } from \"typeorm\";\nimport { CategoryEntity } from \"./entity/category.entity\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { CATEGORY_RELATIONS } from \"./category.constants\";\nimport { ObjectUtils } from \"../../utils/object.utils\";\n\n/**\n * Service for working with tree-categories.\n */\n@Injectable()\nexport class CategoryService {\n  constructor(\n    @InjectRepository(CategoryEntity)\n    private readonly catRep: TreeRepository,\n    @Inject(LOGGER) private readonly logger: Logger,\n  ) {}\n\n  /**\n   * Get descendants of a category by its code.\n   * @param code The code of the root category.\n   * @param depth The maximum depth for the search (optional).\n   * @returns A promise that resolves to the tree of descendants of the category.\n   */\n  async getDescendantsByCodeOfRoot(code: string, depth?: number) {\n    const cat = await this.catRep.findOne({\n      where: { code },\n      relations: CATEGORY_RELATIONS,\n    });\n    const res = await this.catRep.findDescendantsTree(cat, {\n      depth,\n      relations: CATEGORY_RELATIONS,\n    });\n    res.children?.forEach((cat) => this.sort(cat));\n    this.sort(res);\n    return res;\n  }\n\n  /**\n   * Sorts the children of a category by priority.\n   * @param cat - The category entity whose children need to be sorted.\n   */\n  private sort(cat: CategoryEntity) {\n    ObjectUtils.sort(cat.children, \"priority\", false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigItem.html":{"url":"interfaces/ConfigItem.html","title":"interface - ConfigItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/config/config.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a configuration item.\nEach configuration item consists of a key and a value, both of which are strings.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key of the configuration item.\nThis is the identifier for the configuration setting.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The value of the configuration item.\nThis is the value associated with the configuration key.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ConfigItem {\n  /**\n   * The key of the configuration item.\n   * This is the identifier for the configuration setting.\n   */\n  key: string;\n\n  /**\n   * The value of the configuration item.\n   * This is the value associated with the configuration key.\n   */\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_imports\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_ConfigModule_providers\n\n\n\n\nCacheModule\n\nCacheModule\n\n\n\nConfigModule\n\nConfigModule\n\nConfigModule -->\n\nCacheModule->ConfigModule\n\n\n\n\n\nLogModule\n\nLogModule\n\nConfigModule -->\n\nLogModule->ConfigModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nConfigService\n\nConfigService\n\nConfigModule -->\n\nConfigService->ConfigModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/config/config.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for work with system configuration.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CacheModule\n                        \n                        \n                            LogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Module } from \"@nestjs/common\";\nimport { ConfigService } from \"./config.service\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\n\n/**\n * Module for work with system configuration.\n */\n@Module({\n  imports: [LogModule, CacheModule],\n  providers: [ConfigService],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/config/config.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ConfigService is a service responsible for managing configurations in application.\nIt reads configuration properties from .properties files and stores the values in a store for fast retrieval.\nThe service provides methods to get, set, and remove configuration properties.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generatedTsOutput\n                            \n                            \n                                    Private\n                                    Readonly\n                                propertiesFiles\n                            \n                            \n                                    Private\n                                    Readonly\n                                valuesOfProperties\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                deleteExistingConfigTsFiles\n                            \n                            \n                                    Private\n                                    Async\n                                generateConfigTsFiles\n                            \n                            \n                                    Private\n                                generateNamespaceWithVariables\n                            \n                            \n                                    Async\n                                getPropertiesPage\n                            \n                            \n                                    Async\n                                initWithPropertiesFiles\n                            \n                            \n                                    Private\n                                mergePropertiesContent\n                            \n                            \n                                    Private\n                                parseValue\n                            \n                            \n                                    Private\n                                    Async\n                                processAndValidatePropertiesContent\n                            \n                            \n                                    Async\n                                removeProperty\n                            \n                            \n                                    Private\n                                    Async\n                                scanForPropertiesFiles\n                            \n                            \n                                    Async\n                                setProperty\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/common/config/config.service.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        deleteExistingConfigTsFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteExistingConfigTsFiles(directory: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:290\n                        \n                    \n\n\n            \n                \n                        Deletes existing configuration TypeScript files in the specified directory.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                directory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe directory to scan for generated configuration files.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        generateConfigTsFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateConfigTsFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:322\n                        \n                    \n\n\n            \n                \n                        Generates TypeScript configuration files based on the processed properties files.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateNamespaceWithVariables\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateNamespaceWithVariables(namespaceName: string, processedData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:273\n                        \n                    \n\n\n            \n                \n                        Generates a namespace with variables based on the processed data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                namespaceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the namespace.\n\n\n                                            \n                                        \n                                        \n                                                processedData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe processed data to include in the namespace.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The generated namespace content as a string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPropertiesPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPropertiesPage(params: PageableParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Retrieves a page of configuration properties based on the provided pageable parameters.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            PageableParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nPageable parameters for sorting, filtering, and pagination.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                A promise that resolves to an object containing the pageable data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initWithPropertiesFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    initWithPropertiesFiles(genCnfDir?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Initializes the service by scanning for properties files, generating config files, and synchronizing the cache.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                genCnfDir\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mergePropertiesContent\n                        \n                    \n                \n            \n            \n                \n                        \n                    mergePropertiesContent(mainContent: string, localContent: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:357\n                        \n                    \n\n\n            \n                \n                        Merges the content of the main properties file with the content of the local properties file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mainContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe content of the main properties file.\n\n\n                                            \n                                        \n                                        \n                                                localContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe content of the local properties file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The merged content.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parseValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:251\n                        \n                    \n\n\n            \n                \n                        Parses the value of a configuration property.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to parse.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The parsed value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        processAndValidatePropertiesContent\n                        \n                    \n                \n            \n            \n                \n                        \n                    processAndValidatePropertiesContent(filePath: string, content: string, fileNamePrefix: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:211\n                        \n                    \n\n\n            \n                \n                        Processes and validates the content of a properties file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path to the properties file.\n\n\n                                            \n                                        \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe content of the properties file.\n\n\n                                            \n                                        \n                                        \n                                                fileNamePrefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe prefix to use for the properties in the file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                An object containing the processed data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeProperty\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeProperty(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:123\n                        \n                    \n\n\n            \n                \n                        Removes a configuration property.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key of the configuration property to remove.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to a boolean indicating whether the operation was successful.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        scanForPropertiesFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    scanForPropertiesFiles(directory: string, globalKpContent: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:133\n                        \n                    \n\n\n            \n                \n                        Scans the specified directory for properties files and processes them.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                directory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe directory to scan for properties files.\n\n\n                                            \n                                        \n                                        \n                                                globalKpContent\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    \nThe content of the global KP properties file, if any.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setProperty\n                        \n                    \n                \n            \n            \n                \n                        \n                    setProperty(item: ConfigItem)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:113\n                        \n                    \n\n\n            \n                \n                        Sets a configuration property.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            ConfigItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAn object containing the key and value of the configuration property.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to a boolean indicating whether the operation was successful.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generatedTsOutput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/config/config.service.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        propertiesFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in lib/common/config/config.service.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        valuesOfProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in lib/common/config/config.service.ts:46\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport * as fs from \"fs\";\nimport * as path from \"path\";\nimport {\n  CONFIG_CACHE_PREFIX,\n  CONFIG_FILE_EXT_PATTERN,\n  FILES_ENCODING,\n  GEN_SRC_DIR,\n  KP_PROPERTIES_FILE_NAME,\n  LOCAL_PROPERTIES_FILE_NAME,\n  PROPERTIES_FILE_EXT_PATTERN,\n} from \"./config.constants\";\nimport { ConfigItem } from \"./config.types\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * ConfigService is a service responsible for managing configurations in application.\n * It reads configuration properties from .properties files and stores the values in a store for fast retrieval.\n * The service provides methods to get, set, and remove configuration properties.\n */\n@Injectable()\nexport class ConfigService {\n  private readonly propertiesFiles: { [path: string]: { [key: string]: any } } =\n    {};\n  private readonly valuesOfProperties: { [key: string]: any } = {};\n  private generatedTsOutput: string;\n\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    private readonly cacheService: CacheService,\n  ) {}\n\n  /**\n   * Initializes the service by scanning for properties files, generating config files, and synchronizing the cache.\n   */\n  async initWithPropertiesFiles(genCnfDir?: string) {\n    this.generatedTsOutput = genCnfDir;\n    this.logger.log(`Scan project`);\n    await this.scanForPropertiesFiles(process.cwd());\n    this.logger.log(`Clean generated source dirs`);\n    await this.deleteExistingConfigTsFiles(process.cwd());\n    this.logger.log(`Clean config storage`);\n    await this.cacheService.del(CONFIG_CACHE_PREFIX + \":*\");\n    this.logger.log(`Generate config files`);\n    await this.generateConfigTsFiles();\n    for (const key in this.valuesOfProperties) {\n      await this.cacheService.set(`${key}`, this.valuesOfProperties[key]);\n    }\n    this.logger.log(`Config files was synchronize`);\n  }\n\n  /**\n   * Retrieves a page of configuration properties based on the provided pageable parameters.\n   * @param params - Pageable parameters for sorting, filtering, and pagination.\n   * @returns A promise that resolves to an object containing the pageable data.\n   */\n  async getPropertiesPage(\n    params: PageableParams,\n  ): Promise> {\n    const { limit, page, sort, order, filter } = params;\n    const propertyKeys = await this.cacheService.getFromPattern(\n      `${CONFIG_CACHE_PREFIX}:${!filter ? \"*\" : filter}`,\n    );\n    const sortedKeys = propertyKeys.sort((a, b) => {\n      if (sort && order) {\n        const aValue = a[sort] || \"\";\n        const bValue = b[sort] || \"\";\n        return order === \"ASC\"\n          ? aValue.localeCompare(bValue)\n          : bValue.localeCompare(aValue);\n      }\n      return a.localeCompare(b);\n    });\n    const totalCount = sortedKeys.length;\n    const start = (page - 1) * limit;\n    const end = start + limit;\n    const keysToRetrieve = sortedKeys.slice(start, end);\n    const propertiesWithValues: ConfigItem[] = await Promise.all(\n      keysToRetrieve.map(async (key) => {\n        const value = await this.cacheService.get(key);\n        return { key: key.replace(`${CONFIG_CACHE_PREFIX}:`, ``), value };\n      }),\n    );\n    return new PageableData(propertiesWithValues, totalCount, page, limit);\n  }\n\n  /**\n   * Sets a configuration property.\n   * @param item - An object containing the key and value of the configuration property.\n   * @returns A promise that resolves to a boolean indicating whether the operation was successful.\n   */\n  async setProperty(item: ConfigItem): Promise {\n    const fullKey = `${CONFIG_CACHE_PREFIX}:${item.key}`;\n    return await this.cacheService.set(fullKey, item.value);\n  }\n\n  /**\n   * Removes a configuration property.\n   * @param key - The key of the configuration property to remove.\n   * @returns A promise that resolves to a boolean indicating whether the operation was successful.\n   */\n  async removeProperty(key: string): Promise {\n    const fullKey = `${CONFIG_CACHE_PREFIX}:${key}`;\n    return await this.cacheService.del(fullKey);\n  }\n\n  /**\n   * Scans the specified directory for properties files and processes them.\n   * @param directory - The directory to scan for properties files.\n   * @param globalKpContent - The content of the global KP properties file, if any.\n   */\n  private async scanForPropertiesFiles(\n    directory: string,\n    globalKpContent: string | null = null,\n  ) {\n    const files = await fs.promises.readdir(directory, { withFileTypes: true });\n    if (directory === process.cwd()) {\n      for (const file of files) {\n        if (file.isFile() && file.name === KP_PROPERTIES_FILE_NAME) {\n          const kpPath = path.join(directory, file.name);\n          globalKpContent = await fs.promises.readFile(kpPath, FILES_ENCODING);\n          const localPropertiesPath = path.join(\n            directory,\n            LOCAL_PROPERTIES_FILE_NAME,\n          );\n          if (fs.existsSync(localPropertiesPath)) {\n            const localPropertiesContent = await fs.promises.readFile(\n              localPropertiesPath,\n              FILES_ENCODING,\n            );\n            globalKpContent = this.mergePropertiesContent(\n              globalKpContent,\n              localPropertiesContent,\n            );\n          }\n          break;\n        }\n      }\n    }\n    for (const file of files) {\n      const fullPath = path.join(directory, file.name);\n      if (file.isDirectory()) {\n        await this.scanForPropertiesFiles(fullPath, globalKpContent);\n      } else if (\n        file.isFile() &&\n        path.extname(file.name) === PROPERTIES_FILE_EXT_PATTERN\n      ) {\n        let fileContent = await fs.promises.readFile(fullPath, FILES_ENCODING);\n        const localPropertiesPath = path.join(\n          directory,\n          LOCAL_PROPERTIES_FILE_NAME,\n        );\n        if (fs.existsSync(localPropertiesPath)) {\n          const localPropertiesContent = await fs.promises.readFile(\n            localPropertiesPath,\n            FILES_ENCODING,\n          );\n          fileContent = this.mergePropertiesContent(\n            fileContent,\n            localPropertiesContent,\n          );\n        }\n        if (globalKpContent) {\n          fileContent = this.mergePropertiesContent(\n            fileContent,\n            globalKpContent,\n          );\n        }\n        const fileNamePrefix = path.basename(\n          fullPath,\n          PROPERTIES_FILE_EXT_PATTERN,\n        );\n        this.propertiesFiles[fullPath] =\n          await this.processAndValidatePropertiesContent(\n            fullPath,\n            fileContent,\n            fileNamePrefix,\n          );\n      }\n    }\n  }\n\n  /**\n   * Processes and validates the content of a properties file.\n   * @param filePath - The path to the properties file.\n   * @param content - The content of the properties file.\n   * @param fileNamePrefix - The prefix to use for the properties in the file.\n   * @returns An object containing the processed data.\n   */\n  private async processAndValidatePropertiesContent(\n    filePath: string,\n    content: string,\n    fileNamePrefix: string,\n  ) {\n    const lines = content.split(\"\\n\");\n    const processedData: { [key: string]: any } = {};\n    for (const line of lines) {\n      if (line.trim().startsWith(\"#\") || line.trim().length === 0) {\n        continue;\n      }\n      const [key, value] = line.split(\"=\");\n      let keyWithoutPrefix = key;\n      if (key.startsWith(fileNamePrefix + \".\")) {\n        keyWithoutPrefix = key.slice(fileNamePrefix.length + 1);\n      } else {\n        continue;\n      }\n      const variableName = keyWithoutPrefix\n        .split(\".\")\n        .map((part) => part.toUpperCase())\n        .join(\"_\");\n      if (!/^[_a-zA-Z][_a-zA-Z0-9]*$/.test(variableName)) {\n        this.logger.error(`Invalid line found: \"${line}\" in file ${filePath}`);\n        throw new Error(`Invalid content in file: \"${filePath}\"`);\n      }\n      const propertyKey = `${CONFIG_CACHE_PREFIX}:${fileNamePrefix}.${keyWithoutPrefix}`;\n      processedData[variableName] = `\"${propertyKey}\"`;\n      if (!propertyKey.startsWith(\"kp.\") && !propertyKey.startsWith(\"local.\")) {\n        this.valuesOfProperties[propertyKey] = this.parseValue(value.trim());\n      }\n    }\n    return processedData;\n  }\n\n  /**\n   * Parses the value of a configuration property.\n   * @param value - The value to parse.\n   * @returns The parsed value.\n   */\n  private parseValue(value: string) {\n    let processedValue = value.trim();\n    if (processedValue === \"true\" || processedValue === \"false\") {\n      processedValue = JSON.parse(processedValue);\n    } else if (processedValue === \"null\") {\n      processedValue = null;\n    } else if (/^[-+*/\\d\\s()]*$/.test(processedValue)) {\n      try {\n        processedValue = eval(processedValue);\n      } catch (e) {\n        return processedValue;\n      }\n    }\n    return processedValue;\n  }\n\n  /**\n   * Generates a namespace with variables based on the processed data.\n   * @param namespaceName - The name of the namespace.\n   * @param processedData - The processed data to include in the namespace.\n   * @returns The generated namespace content as a string.\n   */\n  private generateNamespaceWithVariables(\n    namespaceName: string,\n    processedData: { [key: string]: string },\n  ) {\n    let generatedContent = `export namespace ${namespaceName} {\\n`;\n    for (const variableName in processedData) {\n      const processedValue = processedData[variableName];\n      generatedContent += `  export const ${variableName} = ${processedValue};\\n`; // initial value: ${this.valuesOfProperties[processedValue.substring(1,processedValue.length-1)]}\n    }\n    generatedContent += \"}\\n\";\n    return generatedContent;\n  }\n\n  /**\n   * Deletes existing configuration TypeScript files in the specified directory.\n   * @param directory - The directory to scan for generated configuration files.\n   */\n  private async deleteExistingConfigTsFiles(directory: string) {\n    if (directory === process.cwd() + \"/node_modules\") {\n      return;\n    }\n    const files = await fs.promises.readdir(directory, { withFileTypes: true });\n    for (const file of files) {\n      const fullPath = path.join(directory, file.name);\n      if (file.isDirectory()) {\n        if (file.name === GEN_SRC_DIR) {\n          const genSrcFiles = await fs.promises.readdir(fullPath, {\n            withFileTypes: true,\n          });\n          this.logger.verbose(`Read dir: ${fullPath}`);\n          for (const genSrcFile of genSrcFiles) {\n            if (\n              genSrcFile.isFile() &&\n              genSrcFile.name.endsWith(CONFIG_FILE_EXT_PATTERN)\n            ) {\n              this.logger.verbose(`Delete file: ${genSrcFile.name}`);\n              await fs.promises.unlink(path.join(fullPath, genSrcFile.name));\n            }\n          }\n        } else {\n          await this.deleteExistingConfigTsFiles(fullPath);\n        }\n      }\n    }\n  }\n\n  /**\n   * Generates TypeScript configuration files based on the processed properties files.\n   */\n  private async generateConfigTsFiles() {\n    for (const filePath in this.propertiesFiles) {\n      if (path.basename(filePath) === LOCAL_PROPERTIES_FILE_NAME) {\n        continue;\n      }\n      const fileContent = this.propertiesFiles[filePath];\n      const dirPath = this.generatedTsOutput ?? path.dirname(filePath);\n      const genSrcPath = path.join(dirPath, GEN_SRC_DIR);\n      const configFileName = path\n        .basename(filePath, PROPERTIES_FILE_EXT_PATTERN)\n        .concat(CONFIG_FILE_EXT_PATTERN);\n      const configFilePath = path.join(genSrcPath, configFileName);\n      const namespaceName =\n        path\n          .basename(filePath, PROPERTIES_FILE_EXT_PATTERN)\n          .charAt(0)\n          .toUpperCase() +\n        path.basename(filePath, PROPERTIES_FILE_EXT_PATTERN).slice(1) +\n        \"Config\";\n      const generatedFileContent = this.generateNamespaceWithVariables(\n        namespaceName,\n        fileContent,\n      );\n      await fs.promises.mkdir(genSrcPath, { recursive: true });\n      await fs.promises.writeFile(configFilePath, generatedFileContent);\n      this.logger.verbose(`Generated ${configFilePath}`);\n    }\n  }\n\n  /**\n   * Merges the content of the main properties file with the content of the local properties file.\n   * @param mainContent - The content of the main properties file.\n   * @param localContent - The content of the local properties file.\n   * @returns The merged content.\n   */\n  private mergePropertiesContent(\n    mainContent: string,\n    localContent: string,\n  ): string {\n    const mainContentLines = mainContent.split(\"\\n\");\n    const localContentLines = localContent.split(\"\\n\");\n    const mergedContent = [...mainContentLines];\n    for (const localLine of localContentLines) {\n      if (localLine.trim().startsWith(\"#\") || localLine.trim().length === 0) {\n        continue;\n      }\n      const [localKey] = localLine.split(\"=\");\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DbExceptionFilter.html":{"url":"classes/DbExceptionFilter.html","title":"class - DbExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DbExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/filters/db-exception-filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Exception filter to handle database errors and transform them into HTTP responses.\nThis filter catches TypeORM errors and returns a 502 Bad Gateway response with the error message.\n\n            \n\n\n            \n                Implements\n            \n            \n                            DbExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: QueryFailedError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/filters/db-exception-filter.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        QueryFailedError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch } from \"@nestjs/common\";\nimport { QueryFailedError } from \"typeorm\";\nimport { TypeORMError } from \"typeorm/error/TypeORMError\";\n\n/**\n * Exception filter to handle database errors and transform them into HTTP responses.\n * This filter catches TypeORM errors and returns a 502 Bad Gateway response with the error message.\n */\n@Catch(TypeORMError)\nexport class DbExceptionFilter implements DbExceptionFilter {\n  catch(exception: QueryFailedError, host: ArgumentsHost) {\n    const response = host.switchToHttp().getResponse();\n    response.status(502).json({ message: exception.message });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DirectoryStructure.html":{"url":"interfaces/DirectoryStructure.html","title":"interface - DirectoryStructure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DirectoryStructure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/utils/files.utils.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a structure of directories and files.\nThe keys are directory names, and the values are either arrays of file names or nested DirectoryStructure objects.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        [] | DirectoryStructure\n\n                    \n                \n                        \n                            \n                                Defined in lib/shared/utils/files.utils.ts:43\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import * as fs from \"fs\";\nimport * as crypto from \"crypto\";\nimport { OpenMode } from \"node:fs\";\nimport { Abortable } from \"node:events\";\nimport * as path from \"path\";\n\n/**\n * Object to hold the dynamically imported file-type module.\n */\nconst fileTypeModule = {} as { lib: typeof import(\"file-type\") };\n\n/**\n * Immediately Invoked Function Expression (IIFE) to dynamically import the ES module 'file-type'.\n * @param {object} ft - The fileTypeModule object.\n */\n(async (ft) => {\n  // crutch for import ES module\n  ft.lib = await (eval('import(\"file-type\")') as Promise);\n})(fileTypeModule);\n\n/**\n * An interface representing a structure of directories and files.\n * The keys are directory names, and the values are either arrays of file names or nested DirectoryStructure objects.\n */\ninterface DirectoryStructure {\n  [key: string]: string[] | DirectoryStructure;\n}\n\nexport namespace FilesUtils {\n  /**\n   * Gets the file type module.\n   * @returns The file type module.\n   */\n  export function fileType() {\n    return fileTypeModule.lib;\n  }\n\n  /**\n   * Generates an SHA-256 hash from a buffer.\n   * @param fileBuffer - The buffer to hash.\n   * @returns The SHA-256 hash as a hex string.\n   */\n  export function getHashFromBuffer(fileBuffer: Buffer) {\n    const hashSum = crypto.createHash(\"sha256\");\n    hashSum.update(fileBuffer);\n    return hashSum.digest(\"hex\");\n  }\n\n  /**\n   * Creates directories if they do not exist.\n   * @param directoryPath - The path of the directory to create.\n   */\n  export async function createDirectoriesIfNotExist(directoryPath: string) {\n    try {\n      await fs.promises.access(directoryPath);\n    } catch (error) {\n      await fs.promises.mkdir(directoryPath, { recursive: true });\n    }\n  }\n\n  /**\n   * Reads a file.\n   * @param path - The path of the file to read.\n   * @param options - Optional read options.\n   * @returns The file contents as a buffer.\n   */\n  export async function readFile(\n    path: string,\n    options?:\n      | ({\n          encoding?: null | undefined;\n          flag?: OpenMode | undefined;\n        } & Abortable)\n      | null,\n  ) {\n    return await fs.promises.readFile(path);\n  }\n\n  /**\n   * Recursively reads a directory and returns its structure.\n   * @param dirPath - The path of the directory to read.\n   * @returns A promise that resolves to the directory structure.\n   */\n  export async function readDirectoryRecursively(\n    dirPath: string,\n  ): Promise {\n    const result: DirectoryStructure = {};\n\n    async function readDir(\n      currentPath: string,\n      relativePath: string,\n    ): Promise {\n      const files = await fs.promises.readdir(currentPath);\n      const filePromises = files.map(async (file) => {\n        const filePath = path.join(currentPath, file);\n        const stats = await fs.promises.stat(filePath);\n        const newRelativePath = path.join(relativePath, file);\n        if (stats.isDirectory()) {\n          result[newRelativePath] = await readDir(filePath, newRelativePath);\n        } else {\n          if (!result[relativePath]) {\n            result[relativePath] = [];\n          }\n          (result[relativePath] as string[]).push(file);\n        }\n      });\n      await Promise.all(filePromises);\n      return result[relativePath] || [];\n    }\n\n    await readDir(dirPath, \"\");\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DtoInterceptor.html":{"url":"injectables/DtoInterceptor.html","title":"injectable - DtoInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DtoInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/interceptors/dto.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                An interceptor to transform plain JavaScript objects into instances of a specified DTO class.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serializer)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/interceptors/dto.interceptor.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serializer\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/interceptors/dto.interceptor.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from \"@nestjs/common\";\nimport { map } from \"rxjs\";\nimport { plainToInstance } from \"class-transformer\";\n\n/**\n * @class DtoInterceptor\n * An interceptor to transform plain JavaScript objects into instances of a specified DTO class.\n * @template T - The DTO class to use for transformation.\n */\n@Injectable()\nexport class DtoInterceptor implements NestInterceptor {\n  constructor(private readonly serializer: new () => T) {}\n\n  intercept(context: ExecutionContext, next: CallHandler) {\n    return next\n      .handle()\n      .pipe(map((data) => plainToInstance(this.serializer, data)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntitySaveHandler.html":{"url":"interfaces/EntitySaveHandler.html","title":"interface - EntitySaveHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EntitySaveHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a handler for saving an entity.\nSuch handlers are triggered when entity recording occurs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        handle\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(target: string, data: T, currentUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExchangeTokenPayload.html":{"url":"classes/ExchangeTokenPayload.html","title":"class - ExchangeTokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExchangeTokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for token exchange payload.\nContains the token to be exchanged for a new token pair JwtDto.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:84\n                        \n                    \n\n            \n                \n                    The refresh token to be exchanged.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIP, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\nimport { Expose, Transform, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common\";\nimport { UserDto } from \"../user/user.types\";\nimport { TransformUtils } from \"../../shared/utils/transform.utils\";\nimport { AuthService } from \"./auth.constants\";\n\n/**\n * Data transfer object for login payload.\n * Contains user login information required for authentication.\n */\nexport class LoginPayload {\n  /**\n   * The login of the user.\n   * @example ```typescript\n   * \"admin\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  login: string;\n\n  /**\n   * The password of the user.\n   * @example ```typescript\n   * \"P@ssw0rd!\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  /**\n   * The IP address of the user.\n   * Optional.\n   * @example ```typescript\n   * \"192.168.0.1\"\n   */\n  @IsIP()\n  @IsOptional()\n  ipAddress: string;\n\n  /**\n   * The ID of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaId?: string;\n\n  /**\n   * The payload of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaPayload?: string;\n}\n\n/**\n * Data transfer object for token exchange payload.\n * Contains the token to be exchanged for a new token pair JwtDto.\n */\nexport class ExchangeTokenPayload {\n  /**\n   * The refresh token to be exchanged.\n   */\n  @IsString()\n  @IsOptional()\n  token: string;\n}\n\n/**\n * Data transfer object for JWT tokens.\n * Contains access and refresh tokens along with their expiration dates and user information.\n */\nexport class JwtDto {\n  /**\n   * The user-data object.\n   */\n  @Expose()\n  @Type(() => UserDto)\n  user: UserDto;\n\n  /**\n   * The access token.\n   */\n  @Expose()\n  accessToken: string;\n\n  /**\n   * The refresh token.\n   */\n  @Expose()\n  refreshToken: string;\n\n  /**\n   * The expiration date of the access token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  atExp: Date;\n\n  /**\n   * The expiration date of the refresh token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  rtExp: Date;\n}\n\n/**\n * Options for configuring the authentication module.\n * @property service - The authentication service class.\n */\nexport type AuthModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerAction.html":{"url":"interfaces/ExplorerAction.html","title":"interface - ExplorerAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an action in an explorer target entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            params\n                                        \n                                \n                                \n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         Explorer.Variation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Explorer.Variation\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerActionEntity.html":{"url":"entities/ExplorerActionEntity.html","title":"entity - ExplorerActionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerActionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-action.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the available actions on the entities of the system, both in the lists and in the detailed editing pages\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                params\n                            \n                            \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Explorer.Variation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({type: 'enum', enum: undefined, default: undefined, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerAction } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { Explorer } from \"../explorer.constants\";\nimport { SimpleJsonTransformer } from \"../../../shared/transformers/simple-json.transformer\";\n\n/**\n * The entity stores the available actions on the entities of the system, both in the lists and in the detailed editing pages\n */\n@Entity(\"explorer_actions\")\nexport class ExplorerActionEntity implements ExplorerAction {\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @Index()\n  @Column({\n    type: \"enum\",\n    enum: [\"section\", \"object\"],\n    default: null,\n    nullable: true,\n  })\n  type: Explorer.Variation;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    nullable: true,\n    default: null,\n  })\n  params: object;\n  @Index()\n  @Column(\"int\", { default: 0, unsigned: true })\n  priority: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerColumn.html":{"url":"interfaces/ExplorerColumn.html","title":"interface - ExplorerColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a column in an explorer target entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            multiple\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            named\n                                        \n                                \n                                \n                                        \n                                            objectEnabled\n                                        \n                                \n                                \n                                        \n                                            objectPriority\n                                        \n                                \n                                \n                                        \n                                            objectRenderer\n                                        \n                                \n                                \n                                        \n                                            objectVisibility\n                                        \n                                \n                                \n                                        \n                                            primary\n                                        \n                                \n                                \n                                        \n                                            property\n                                        \n                                \n                                \n                                        \n                                            referencedEntityName\n                                        \n                                \n                                \n                                        \n                                            referencedTableName\n                                        \n                                \n                                \n                                        \n                                            sectionEnabled\n                                        \n                                \n                                \n                                        \n                                            sectionPriority\n                                        \n                                \n                                \n                                        \n                                            sectionRenderer\n                                        \n                                \n                                \n                                        \n                                            sectionVisibility\n                                        \n                                \n                                \n                                        \n                                            tab\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            unique\n                                        \n                                \n                                \n                                        \n                                            virtual\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multiple\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multiple:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        named\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        named:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectEnabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectPriority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectPriority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectRenderer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectRenderer:         ExplorerColumnRenderer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumnRenderer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectVisibility\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectVisibility:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primary:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        referencedEntityName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        referencedEntityName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        referencedTableName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        referencedTableName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionEnabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionPriority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionPriority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionRenderer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionRenderer:         ExplorerColumnRenderer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumnRenderer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionVisibility\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionVisibility:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tab:         ExplorerTab\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerTab\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         ExplorerTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ColumnDataType | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColumnDataType | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unique\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unique:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        virtual\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        virtual:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerColumnEntity.html":{"url":"entities/ExplorerColumnEntity.html","title":"entity - ExplorerColumnEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerColumnEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-column.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the metadata of the field (columns in the database table)\nand stores the display configuration in lists and detailed pages\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                multiple\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                named\n                            \n                            \n                                    \n                                    \n                                objectEnabled\n                            \n                            \n                                    \n                                    \n                                objectPriority\n                            \n                            \n                                    \n                                    \n                                objectRenderer\n                            \n                            \n                                    \n                                objectRendererParams\n                            \n                            \n                                    \n                                    \n                                objectVisibility\n                            \n                            \n                                    \n                                    \n                                primary\n                            \n                            \n                                    \n                                    \n                                property\n                            \n                            \n                                    \n                                    \n                                referencedEntityName\n                            \n                            \n                                    \n                                    \n                                referencedTableName\n                            \n                            \n                                    \n                                    \n                                sectionEnabled\n                            \n                            \n                                    \n                                    \n                                sectionPriority\n                            \n                            \n                                    \n                                    \n                                sectionRenderer\n                            \n                            \n                                    \n                                sectionRendererParams\n                            \n                            \n                                    \n                                    \n                                sectionVisibility\n                            \n                            \n                                    \n                                tab\n                            \n                            \n                                    \n                                target\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                unique\n                            \n                            \n                                    \n                                    \n                                virtual\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        multiple\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        named\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'object_enabled', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectPriority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'object_priority', default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectRenderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerColumnRendererEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectRendererParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, name: 'object_renderer_params', nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectVisibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'object_visibility', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        primary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        property\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        referencedEntityName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'referenced_entity_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        referencedTableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'referenced_table_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sectionEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'section_enabled', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sectionPriority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'section_priority', default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sectionRenderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerColumnRendererEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sectionRendererParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, name: 'section_renderer_params', nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sectionVisibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'section_visibility', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerTabEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerTargetEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.target)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        unique\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        virtual\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:63\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerTargetEntity } from \"./explorer-target.entity\";\nimport { ExplorerColumn } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { ExplorerColumnRendererEntity } from \"./explorer-column-renderer.entity\";\nimport { SimpleJsonTransformer } from \"../../../shared/transformers/simple-json.transformer\";\nimport { ExplorerTabEntity } from \"./explorer-tab.entity\";\n\n/**\n * The entity stores the metadata of the field (columns in the database table)\n * and stores the display configuration in lists and detailed pages\n */\n@Entity(\"explorer_columns\")\nexport class ExplorerColumnEntity implements ExplorerColumn {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  id: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  property: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @ManyToOne(() => ExplorerTargetEntity, (t) => t.target)\n  target: ExplorerTargetEntity;\n\n  @Column(\"text\", { nullable: false })\n  type: string;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  virtual: boolean;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  primary: boolean;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  unique: boolean;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  multiple: boolean;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  named: boolean;\n\n  @Index()\n  @Column(\"varchar\", { name: \"referenced_entity_name\", nullable: true })\n  referencedEntityName: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"referenced_table_name\", nullable: true })\n  referencedTableName: string;\n\n  @Index()\n  @Column(\"int\", { name: \"section_priority\", default: 0, unsigned: true })\n  sectionPriority: number;\n\n  @Index()\n  @Column(\"int\", { name: \"object_priority\", default: 0, unsigned: true })\n  objectPriority: number;\n\n  @Index()\n  @Column(\"boolean\", { name: \"section_enabled\", default: true })\n  sectionEnabled: boolean;\n\n  @Index()\n  @Column(\"boolean\", { name: \"object_enabled\", default: true })\n  objectEnabled: boolean;\n\n  @Index()\n  @Column(\"boolean\", { name: \"section_visibility\", default: true })\n  sectionVisibility: boolean;\n\n  @Index()\n  @Column(\"boolean\", { name: \"object_visibility\", default: true })\n  objectVisibility: boolean;\n\n  @Index()\n  @ManyToOne(() => ExplorerColumnRendererEntity, (t) => t.code)\n  sectionRenderer: ExplorerColumnRendererEntity;\n\n  @Index()\n  @ManyToOne(() => ExplorerColumnRendererEntity, (t) => t.code)\n  objectRenderer: ExplorerColumnRendererEntity;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    name: \"section_renderer_params\",\n    nullable: true,\n    default: null,\n  })\n  sectionRendererParams: object;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    name: \"object_renderer_params\",\n    nullable: true,\n    default: null,\n  })\n  objectRendererParams: object;\n\n  @ManyToOne(() => ExplorerTabEntity, (t) => t.id)\n  tab: ExplorerTabEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerColumnRenderer.html":{"url":"interfaces/ExplorerColumnRenderer.html","title":"interface - ExplorerColumnRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerColumnRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a renderer for an explorer column.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            params\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         Explorer.Variation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Explorer.Variation\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerColumnRendererEntity.html":{"url":"entities/ExplorerColumnRendererEntity.html","title":"entity - ExplorerColumnRendererEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerColumnRendererEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-column-renderer.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                An entity stores parameters for rendering the read/write interface of a specific column of a specific entity\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                params\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Explorer.Variation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({type: 'enum', enum: undefined, default: undefined, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerColumnRenderer } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { SimpleJsonTransformer } from \"../../../shared/transformers/simple-json.transformer\";\nimport { Explorer } from \"../explorer.constants\";\n\n/**\n * An entity stores parameters for rendering the read/write interface of a specific column of a specific entity\n */\n@Entity(\"explorer_column_renderers\")\nexport class ExplorerColumnRendererEntity implements ExplorerColumnRenderer {\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @Index()\n  @Column({\n    type: \"enum\",\n    enum: [\"section\", \"object\"],\n    default: null,\n    nullable: true,\n  })\n  type: Explorer.Variation;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    nullable: true,\n    default: null,\n  })\n  params: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExplorerModule.html":{"url":"modules/ExplorerModule.html","title":"module - ExplorerModule","body":"\n                   \n\n\n\n\n    Modules\n    ExplorerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/explorer/explorer.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for exploring and analyzing the database schema and relationships.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: ExplorerModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.module.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            ExplorerModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      service: BasicExplorerService,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.module.ts:56\n                        \n                    \n\n\n            \n                \n                        Initializes the module and analyzes the database.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module, OnModuleInit } from \"@nestjs/common\";\nimport { BasicExplorerService } from \"./basic-explorer.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { ExplorerTargetEntity } from \"./entity/explorer-target.entity\";\nimport { ExplorerColumnEntity } from \"./entity/explorer-column.entity\";\nimport { ExplorerModuleOptions, ExplorerService } from \"./explorer.types\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\n\n/**\n * Module for exploring and analyzing the database schema and relationships.\n */\n@Module({})\nexport class ExplorerModule implements OnModuleInit {\n  static forRoot(\n    options: ExplorerModuleOptions = {\n      service: BasicExplorerService,\n    },\n  ): DynamicModule {\n    return {\n      module: ExplorerModule,\n      imports: [\n        TypeOrmModule.forFeature([ExplorerTargetEntity, ExplorerColumnEntity]),\n        LogModule,\n      ],\n      providers: [\n        {\n          provide: ExplorerService,\n          useClass: options.service,\n        },\n      ],\n      exports: [ExplorerService],\n    };\n  }\n\n  constructor(private readonly service: ExplorerService) {}\n\n  /**\n   * Initializes the module and analyzes the database.\n   */\n  async onModuleInit() {\n    await this.service.analyzeDatabase();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExplorerService.html":{"url":"classes/ExplorerService.html","title":"class - ExplorerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExplorerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing an explorer service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                analyzeDatabase\n                            \n                            \n                                    Abstract\n                                changeTarget\n                            \n                            \n                                    Abstract\n                                getEntityData\n                            \n                            \n                                    Abstract\n                                getPageableEntityData\n                            \n                            \n                                    Abstract\n                                getTargetData\n                            \n                            \n                                    Abstract\n                                getTargetList\n                            \n                            \n                                    Abstract\n                                removeEntity\n                            \n                            \n                                    Abstract\n                                saveEntityData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        analyzeDatabase\n                        \n                    \n                \n            \n            \n                \n                        \n                    analyzeDatabase()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:176\n                        \n                    \n\n\n            \n                \n                        Analyzes the database schema and relationships.\nFill data for explorer tables based on that analysis.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        changeTarget\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeTarget(target: ExplorerTarget)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:254\n                        \n                    \n\n\n            \n                \n                        Changes the target data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            ExplorerTarget\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the target entity.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the changed target entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getEntityData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntityData(target: string, rowId: string | number, maxDepth?: number, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:225\n                        \n                    \n\n\n            \n                \n                        Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe target entity name.\n\n\n                                            \n                                        \n                                        \n                                                rowId\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the row to fetch.\n\n\n                                            \n                                        \n                                        \n                                                maxDepth\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nThe maximum depth of relations to fetch. Defaults to Infinity.\n\n\n                                            \n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nParameters to fetch and check entity access.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the entity object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getPageableEntityData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPageableEntityData(target: string, params?: PageableParams, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:185\n                        \n                    \n\n\n            \n                \n                        Retrieves paginated entity data with relations.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the target entity or table.\n\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            PageableParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nAn optional object containing pageable parameters.\n\n\n                                            \n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nParameters to fetch and check entity access.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to a PageableData object containing the paginated results.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getTargetData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTargetData(target: string, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:238\n                        \n                    \n\n\n            \n                \n                        Retrieves target data for the specified target entity name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe target entity name.\n\n\n                                            \n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nParameters to fetch and check entity access.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the TargetData object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getTargetList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTargetList()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:247\n                        \n                    \n\n\n            \n                \n                        Retrieves a list of all registered targets with their item counts.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to an array of ExplorerTarget objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        removeEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeEntity(target: string, id: string | number, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:211\n                        \n                    \n\n\n            \n                \n                        Removes an entity by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the entity-target.\n\n\n                                            \n                                        \n                                        \n                                                id\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the entity to be removed.\n\n\n                                            \n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nParameters to fetch and check entity access.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the removed entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        saveEntityData\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveEntityData(target: string, entity: T, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:198\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Saves or updates an entity, including its nested entities.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the target entity.\n\n\n                                            \n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe entity object to be saved or updated.\n\n\n                                            \n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nParameters to fetch and check entity access.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the saved or updated entity.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerTab.html":{"url":"interfaces/ExplorerTab.html","title":"interface - ExplorerTab","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerTab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a tab in an explorer target entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         ExplorerTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerTabEntity.html":{"url":"entities/ExplorerTabEntity.html","title":"entity - ExplorerTabEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerTabEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-tab.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the tabbed display parameters in the entity editing interface.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerTargetEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.target)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:56\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerTab } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { SimpleJsonTransformer } from \"../../../shared/transformers/simple-json.transformer\";\nimport { ExplorerTargetEntity } from \"./explorer-target.entity\";\n\n/**\n * The entity stores the tabbed display parameters in the entity editing interface.\n */\n@Entity(\"explorer_tabs\")\nexport class ExplorerTabEntity implements ExplorerTab {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  id: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @Index()\n  @Column(\"int\", { default: 0, unsigned: true })\n  priority: number;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    nullable: true,\n    default: null,\n  })\n  size: object;\n\n  @ManyToOne(() => ExplorerTargetEntity, (t) => t.target)\n  target: ExplorerTargetEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerTarget.html":{"url":"interfaces/ExplorerTarget.html","title":"interface - ExplorerTarget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerTarget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an explorer target entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actions\n                                        \n                                \n                                \n                                        \n                                            canRead\n                                        \n                                \n                                \n                                        \n                                            canWrite\n                                        \n                                \n                                \n                                        \n                                            columns\n                                        \n                                \n                                \n                                        \n                                            defaultActionCreate\n                                        \n                                \n                                \n                                        \n                                            defaultActionDelete\n                                        \n                                \n                                \n                                        \n                                            defaultActionDuplicate\n                                        \n                                \n                                \n                                        \n                                            defaultActionSave\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            tableName\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actions:         ExplorerAction[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerAction[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canRead\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canRead:         UserRoleEntity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRoleEntity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canWrite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canWrite:         UserRoleEntity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRoleEntity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        columns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columns:         ExplorerColumn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumn[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultActionCreate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultActionCreate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultActionDelete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultActionDelete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultActionDuplicate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultActionDuplicate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultActionSave\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultActionSave:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tableName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tableName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerTargetEntity.html":{"url":"entities/ExplorerTargetEntity.html","title":"entity - ExplorerTargetEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerTargetEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-target.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores a detailed description of the entity (tables in the database) in the form of an object\nwith metadata and stores the display configuration in lists and detailed pages\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                actions\n                            \n                            \n                                    \n                                    \n                                alias\n                            \n                            \n                                    \n                                    \n                                canRead\n                            \n                            \n                                    \n                                    \n                                canWrite\n                            \n                            \n                                    \n                                columns\n                            \n                            \n                                    \n                                    \n                                defaultActionCreate\n                            \n                            \n                                    \n                                    \n                                defaultActionDelete\n                            \n                            \n                                    \n                                    \n                                defaultActionDuplicate\n                            \n                            \n                                    \n                                    \n                                defaultActionSave\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                tableName\n                            \n                            \n                                    \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerAction[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        alias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        canRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        canWrite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerColumnEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, c => c.target, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defaultActionCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'default_action_create', default: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defaultActionDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'default_action_delete', default: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defaultActionDuplicate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'default_action_duplicate', default: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defaultActionSave\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'default_action_save', default: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {name: 'table_name', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerColumnEntity } from \"./explorer-column.entity\";\nimport { ExplorerAction, ExplorerTarget } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { MediaEntity } from \"../../media/entity/media.entity\";\nimport { ExplorerActionEntity } from \"./explorer-action.entity\";\nimport { UserRoleEntity } from \"../../user/entity/user-role.entity\";\n\n/**\n * The entity stores a detailed description of the entity (tables in the database) in the form of an object\n * with metadata and stores the display configuration in lists and detailed pages\n */\n@Entity(\"explorer_targets\")\nexport class ExplorerTargetEntity implements ExplorerTarget {\n  @PrimaryColumn(\"varchar\")\n  target: string;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { name: \"table_name\", nullable: false })\n  tableName: string;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  alias: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  icon: MediaEntity;\n\n  @OneToMany(() => ExplorerColumnEntity, (c) => c.target, { cascade: true })\n  columns: ExplorerColumnEntity[];\n\n  @ManyToMany(() => ExplorerActionEntity)\n  @JoinTable()\n  actions: ExplorerAction[];\n\n  @Index()\n  @Column(\"boolean\", {\n    name: \"default_action_create\",\n    default: true,\n    nullable: true,\n  })\n  defaultActionCreate: boolean;\n\n  @Index()\n  @Column(\"boolean\", {\n    name: \"default_action_save\",\n    default: true,\n    nullable: true,\n  })\n  defaultActionSave: boolean;\n\n  @Index()\n  @Column(\"boolean\", {\n    name: \"default_action_delete\",\n    default: true,\n    nullable: true,\n  })\n  defaultActionDelete: boolean;\n\n  @Index()\n  @Column(\"boolean\", {\n    name: \"default_action_duplicate\",\n    default: true,\n    nullable: true,\n  })\n  defaultActionDuplicate: boolean;\n\n  @ManyToMany(() => UserRoleEntity)\n  @JoinTable()\n  canRead: UserRoleEntity[];\n\n  @ManyToMany(() => UserRoleEntity)\n  @JoinTable()\n  canWrite: UserRoleEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/File.html":{"url":"interfaces/File.html","title":"interface - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a file.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            preview\n                                        \n                                \n                                \n                                        \n                                            public\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         FileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preview\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preview:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        public\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        public:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  id: number;\n  mime: string;\n  ext: string;\n  hash: string;\n  icc: IccFileMetadata;\n  gps: GpsFileMetadata;\n  image: ImageFileMetadata;\n  exif: ExifFileMetadata;\n  audio: AudioFileMetadata;\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  id: number;\n  bps: number;\n  width: number;\n  height: number;\n  colorComponents: number;\n  subsampling: string;\n  dateTime: Date;\n  bitDepth: number;\n  colorType: string;\n  compression: string;\n  filter: string;\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  id: number;\n  profileVersion: string;\n  profileClassValue: string;\n  profileClassName: string;\n  connectionSpace: string;\n  iccProfileDate: Date;\n  iccSignature: string;\n  primaryPlatform: string;\n  deviceManufacturer: string;\n  deviceModelNumber: string;\n  renderingIntentValue: string;\n  renderingIntentName: string;\n  profileCreator: string;\n  iccDescription: string;\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  id: number;\n  make: string;\n  model: string;\n  orientation: string;\n  resolutionX: string;\n  resolutionY: string;\n  resolutionUnit: string;\n  software: string;\n  ycbCrPositioning: string;\n  exifIfdPointer: string;\n  gpsInfoIfdPointer: string;\n  exposureTime: string;\n  fNumber: string;\n  exposureProgram: string;\n  isoSpeedRatings: string;\n  exifVersion: string;\n  offsetTime: string;\n  shutterSpeedValue: string;\n  aperture: string;\n  brightness: string;\n  exposureBias: string;\n  maxAperture: string;\n  subjectDistance: string;\n  meteringMode: string;\n  flash: string;\n  focalLength: string;\n  flashpixVersion: string;\n  colorSpace: string;\n  pixelXDimension: string;\n  pixelYDimension: string;\n  interoperabilityIfdPointer: string;\n  sensingMethod: string;\n  sceneType: string;\n  customRendered: string;\n  exposureMode: string;\n  whiteBalance: string;\n  digitalZoomRatio: string;\n  sceneCaptureType: string;\n  contrast: string;\n  saturation: string;\n  sharpness: string;\n  subjectDistanceRange: string;\n  lensMake: string;\n  lensModel: string;\n  compositeImage: string;\n  interoperabilityIndex: string;\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  id: number;\n  latitude: number;\n  longitude: number;\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/FileEntity.html":{"url":"entities/FileEntity.html","title":"entity - FileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  FileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/file.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores data about uploaded files\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                path\n                            \n                            \n                                    \n                                preview\n                            \n                            \n                                    \n                                public\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        preview\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        public\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:58\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinColumn,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  TableInheritance,\n} from \"typeorm\";\nimport { File } from \"../file.types\";\nimport { MediaEntity } from \"../../media/entity/media.entity\";\nimport { FileMetadataEntity } from \"./file-metadata.entity\";\n\n/**\n * The entity stores data about uploaded files\n */\n@Entity(\"files\")\n@TableInheritance({\n  column: { type: \"varchar\", name: \"class\", nullable: true },\n})\nexport class FileEntity implements File {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @Column(\"varchar\", { nullable: true })\n  name: string;\n\n  @Column(\"varchar\", { nullable: true })\n  path: string;\n\n  @Column(\"boolean\", { default: false })\n  public: boolean;\n\n  @Column(\"int\", { nullable: true })\n  size: number;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  icon: MediaEntity;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  preview: MediaEntity;\n\n  @OneToOne(() => FileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  metadata: FileMetadataEntity;\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileManager.html":{"url":"classes/FileManager.html","title":"class - FileManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing the file management service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createOrUpdateFile\n                            \n                            \n                                    Abstract\n                                findByCode\n                            \n                            \n                                    Abstract\n                                findFileById\n                            \n                            \n                                    Abstract\n                                findPrivateById\n                            \n                            \n                                    Abstract\n                                findPublicById\n                            \n                            \n                                    Abstract\n                                getFilePath\n                            \n                            \n                                    Abstract\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createOrUpdateFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrUpdateFile(file: Buffer, extension: string, isPublic: boolean, code?: string, existedEntityId?: number, name?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extension\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isPublic\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                existedEntityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findFileById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findFileById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findPrivateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPrivateById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findPublicById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPublicById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getFilePath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFilePath(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileEntity } from \"./entity/file.entity\";\nimport { FileMetadataEntity } from \"./entity/file-metadata.entity\";\nimport { File } from \"./file.types\";\n\n/**\n * Abstract class representing the file management service.\n */\nexport abstract class FileManager {\n  abstract createOrUpdateFile(\n    file: Buffer,\n    extension: string,\n    isPublic: boolean,\n    code?: string,\n    existedEntityId?: number,\n    name?: string,\n  ): Promise;\n\n  abstract findByCode(code: string): Promise;\n\n  abstract findFileById(id: number): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract getFilePath(file: File): Promise;\n\n  abstract remove(id: number): Promise;\n}\n\n/**\n * Abstract class representing the file metadata service.\n */\nexport abstract class FileMd {\n  abstract createFileMetadataEntity(\n    buf: Buffer,\n    filePath?: string,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileMd.html":{"url":"classes/FileMd.html","title":"class - FileMd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileMd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing the file metadata service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createFileMetadataEntity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createFileMetadataEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFileMetadataEntity(buf: Buffer, filePath?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buf\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileEntity } from \"./entity/file.entity\";\nimport { FileMetadataEntity } from \"./entity/file-metadata.entity\";\nimport { File } from \"./file.types\";\n\n/**\n * Abstract class representing the file management service.\n */\nexport abstract class FileManager {\n  abstract createOrUpdateFile(\n    file: Buffer,\n    extension: string,\n    isPublic: boolean,\n    code?: string,\n    existedEntityId?: number,\n    name?: string,\n  ): Promise;\n\n  abstract findByCode(code: string): Promise;\n\n  abstract findFileById(id: number): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract getFilePath(file: File): Promise;\n\n  abstract remove(id: number): Promise;\n}\n\n/**\n * Abstract class representing the file metadata service.\n */\nexport abstract class FileMd {\n  abstract createFileMetadataEntity(\n    buf: Buffer,\n    filePath?: string,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileMetadata.html":{"url":"interfaces/FileMetadata.html","title":"interface - FileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            audio\n                                        \n                                \n                                \n                                        \n                                            exif\n                                        \n                                \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            gps\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            icc\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            video\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        audio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        audio:         AudioFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AudioFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exif\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exif:         ExifFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExifFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gps:         GpsFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GpsFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icc:         IccFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IccFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         ImageFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ImageFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        video\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        video:         VideoFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VideoFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  id: number;\n  mime: string;\n  ext: string;\n  hash: string;\n  icc: IccFileMetadata;\n  gps: GpsFileMetadata;\n  image: ImageFileMetadata;\n  exif: ExifFileMetadata;\n  audio: AudioFileMetadata;\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  id: number;\n  bps: number;\n  width: number;\n  height: number;\n  colorComponents: number;\n  subsampling: string;\n  dateTime: Date;\n  bitDepth: number;\n  colorType: string;\n  compression: string;\n  filter: string;\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  id: number;\n  profileVersion: string;\n  profileClassValue: string;\n  profileClassName: string;\n  connectionSpace: string;\n  iccProfileDate: Date;\n  iccSignature: string;\n  primaryPlatform: string;\n  deviceManufacturer: string;\n  deviceModelNumber: string;\n  renderingIntentValue: string;\n  renderingIntentName: string;\n  profileCreator: string;\n  iccDescription: string;\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  id: number;\n  make: string;\n  model: string;\n  orientation: string;\n  resolutionX: string;\n  resolutionY: string;\n  resolutionUnit: string;\n  software: string;\n  ycbCrPositioning: string;\n  exifIfdPointer: string;\n  gpsInfoIfdPointer: string;\n  exposureTime: string;\n  fNumber: string;\n  exposureProgram: string;\n  isoSpeedRatings: string;\n  exifVersion: string;\n  offsetTime: string;\n  shutterSpeedValue: string;\n  aperture: string;\n  brightness: string;\n  exposureBias: string;\n  maxAperture: string;\n  subjectDistance: string;\n  meteringMode: string;\n  flash: string;\n  focalLength: string;\n  flashpixVersion: string;\n  colorSpace: string;\n  pixelXDimension: string;\n  pixelYDimension: string;\n  interoperabilityIfdPointer: string;\n  sensingMethod: string;\n  sceneType: string;\n  customRendered: string;\n  exposureMode: string;\n  whiteBalance: string;\n  digitalZoomRatio: string;\n  sceneCaptureType: string;\n  contrast: string;\n  saturation: string;\n  sharpness: string;\n  subjectDistanceRange: string;\n  lensMake: string;\n  lensModel: string;\n  compositeImage: string;\n  interoperabilityIndex: string;\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  id: number;\n  latitude: number;\n  longitude: number;\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/FileMetadataEntity.html":{"url":"entities/FileMetadataEntity.html","title":"entity - FileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  FileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the basic metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                audio\n                            \n                            \n                                    \n                                    \n                                exif\n                            \n                            \n                                    \n                                ext\n                            \n                            \n                                    \n                                    \n                                gps\n                            \n                            \n                                    \n                                hash\n                            \n                            \n                                    \n                                    \n                                icc\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                image\n                            \n                            \n                                    \n                                mime\n                            \n                            \n                                    \n                                    \n                                video\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        audio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AudioFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        exif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExifFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gps\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GpsFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        icc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IccFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ImageFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        mime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        video\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VideoFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:73\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  JoinColumn,\n  OneToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { FileMetadata } from \"../file.types\";\nimport { ImageFileMetadataEntity } from \"./image-file-metadata.entity\";\nimport { GpsFileMetadataEntity } from \"./gps-file-metadata.entity\";\nimport { IccFileMetadataEntity } from \"./icc-file-metadata.entity\";\nimport { ExifFileMetadataEntity } from \"./exif-file-metadata.entity\";\nimport { VideoFileMetadataEntity } from \"./video-file-metadata.entity\";\nimport { AudioFileMetadataEntity } from \"./audio-file-metadata.entity\";\n\n/**\n * The entity stores the basic metadata of the file\n */\n@Entity(\"file_metadata\")\nexport class FileMetadataEntity implements FileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Column(\"varchar\", { nullable: true })\n  mime: string;\n\n  @Column(\"varchar\", { nullable: true })\n  ext: string;\n\n  @Column(\"varchar\", { nullable: true })\n  hash: string;\n\n  @OneToOne(() => ImageFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  image: ImageFileMetadataEntity;\n\n  @OneToOne(() => GpsFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  gps: GpsFileMetadataEntity;\n\n  @OneToOne(() => IccFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  icc: IccFileMetadataEntity;\n\n  @OneToOne(() => ExifFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  exif: ExifFileMetadataEntity;\n\n  @OneToOne(() => AudioFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  audio: AudioFileMetadataEntity;\n\n  @OneToOne(() => VideoFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  video: VideoFileMetadataEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileMetadataService.html":{"url":"injectables/FileMetadataService.html","title":"injectable - FileMetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileMetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file-metadata.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing file metadata, including creation and setting metadata properties.\n\n            \n\n            \n                Extends\n            \n            \n                            FileMd\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createFileMetadataEntity\n                            \n                            \n                                    Private\n                                    Async\n                                setAudioMd\n                            \n                            \n                                    Private\n                                setImageMd\n                            \n                            \n                                    Private\n                                    Async\n                                setVideoMd\n                            \n                            \n                                    Private\n                                trimProperties\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createFileMetadataEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFileMetadataEntity(buf: Buffer, filePath?: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileMd\n\n                        \n                    \n                    \n                        \n                                Defined in         FileMd:45\n\n                        \n                    \n\n\n            \n                \n                        Creates a FileMetadataEntity for the given buffer and file path.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                buf\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBuffer containing the file data.\n\n\n                                            \n                                        \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional file path for the file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the created FileMetadataEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setAudioMd\n                        \n                    \n                \n            \n            \n                \n                        \n                    setAudioMd(md: FileMetadataEntity, buf: Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file-metadata.service.ts:139\n                        \n                    \n\n\n            \n                \n                        Sets audio metadata for the given FileMetadataEntity and buffer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                md\n                                            \n                                                            FileMetadataEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe FileMetadataEntity to set the metadata for.\n\n\n                                            \n                                        \n                                        \n                                                buf\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe buffer containing the audio data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setImageMd\n                        \n                    \n                \n            \n            \n                \n                        \n                    setImageMd(md: FileMetadataEntity, buf: Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file-metadata.service.ts:166\n                        \n                    \n\n\n            \n                \n                        Sets image metadata for the given FileMetadataEntity and buffer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                md\n                                            \n                                                            FileMetadataEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe FileMetadataEntity to set the metadata for.\n\n\n                                            \n                                        \n                                        \n                                                buf\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe buffer containing the image data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setVideoMd\n                        \n                    \n                \n            \n            \n                \n                        \n                    setVideoMd(md: FileMetadataEntity, filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file-metadata.service.ts:101\n                        \n                    \n\n\n            \n                \n                        Sets video metadata for the given FileMetadataEntity and file path.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                md\n                                            \n                                                            FileMetadataEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe FileMetadataEntity to set the metadata for.\n\n\n                                            \n                                        \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe file path for the video file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        trimProperties\n                        \n                    \n                \n            \n            \n                \n                        \n                    trimProperties(obj: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file-metadata.service.ts:72\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Trims properties of an object, removing empty or invalid values.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe object to trim.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                The trimmed object.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { parseBuffer } from \"music-metadata\";\nimport * as ExifReader from \"exifreader\";\nimport * as ffprobe from \"ffprobe\";\nimport * as ffprobeStatic from \"ffprobe-static\";\nimport { FilesUtils } from \"../../shared/utils/files.utils\";\nimport { FileMd } from \"./file.constants\";\nimport { FileMetadataEntity } from \"./entity/file-metadata.entity\";\nimport { AudioFileMetadataEntity } from \"./entity/audio-file-metadata.entity\";\nimport { VideoFileMetadataEntity } from \"./entity/video-file-metadata.entity\";\nimport { ImageFileMetadataEntity } from \"./entity/image-file-metadata.entity\";\nimport { GpsFileMetadataEntity } from \"./entity/gps-file-metadata.entity\";\nimport { ExifFileMetadataEntity } from \"./entity/exif-file-metadata.entity\";\nimport { IccFileMetadataEntity } from \"./entity/icc-file-metadata.entity\";\nimport getHashFromBuffer = FilesUtils.getHashFromBuffer;\nimport fileType = FilesUtils.fileType;\n\n/**\n * Service for managing file metadata, including creation and setting metadata properties.\n */\n@Injectable()\nexport class FileMetadataService extends FileMd {\n  /**\n   * Creates a FileMetadataEntity for the given buffer and file path.\n   * @param buf - Buffer containing the file data.\n   * @param filePath - Optional file path for the file.\n   * @returns A promise that resolves to the created FileMetadataEntity.\n   */\n  async createFileMetadataEntity(buf: Buffer, filePath?: string) {\n    const fileTypeData = await fileType().fileTypeFromBuffer(buf);\n    const md = new FileMetadataEntity();\n    md.hash = getHashFromBuffer(buf);\n    if (fileTypeData) {\n      md.mime = fileTypeData.mime;\n      md.ext = fileTypeData.ext;\n    } else {\n      return md;\n    }\n    try {\n      if (md.mime.startsWith(\"image\")) {\n        this.setImageMd(md, buf);\n      } else if (md.mime.startsWith(\"audio\")) {\n        await this.setAudioMd(md, buf);\n      } else if (md.mime.startsWith(\"video\")) {\n        await this.setVideoMd(md, filePath);\n      }\n    } catch (e) {}\n    return this.trimProperties(md);\n  }\n\n  /**\n   * Trims properties of an object, removing empty or invalid values.\n   * @param obj - The object to trim.\n   * @returns The trimmed object.\n   */\n  private trimProperties(obj: T): T {\n    if (typeof obj === \"string\") {\n      return obj.trim() === \"\" || obj.indexOf(\"\") !== -1\n        ? undefined\n        : (obj.trim() as T);\n    } else if (Array.isArray(obj)) {\n      return obj.map(this.trimProperties) as T;\n    } else if (typeof obj === \"object\") {\n      if (obj instanceof Date) {\n        return obj as T;\n      }\n      const result: Record = {};\n      for (const key in obj) {\n        const value = this.trimProperties(obj[key]);\n        if (value !== undefined) {\n          result[key] = value;\n        }\n      }\n      return result as T;\n    } else {\n      return obj;\n    }\n  }\n\n  /**\n   * Sets video metadata for the given FileMetadataEntity and file path.\n   * @param md - The FileMetadataEntity to set the metadata for.\n   * @param filePath - The file path for the video file.\n   */\n  private async setVideoMd(md: FileMetadataEntity, filePath: string) {\n    if (filePath) {\n      const ffProbeMd = await ffprobe(filePath, { path: ffprobeStatic.path });\n      if (ffProbeMd) {\n        const audioMd = ffProbeMd.streams.find((v) => v.codec_type === \"audio\");\n        if (audioMd) {\n          md.audio = new AudioFileMetadataEntity();\n          md.audio.container = audioMd.codec_name?.toUpperCase();\n          md.audio.codec = audioMd.codec_long_name;\n          md.audio.duration = parseFloat(audioMd.duration || 0);\n          md.audio.numberOfChannels = audioMd.channels;\n          md.audio.bitrate = audioMd.bit_rate;\n        }\n        const videoMd = ffProbeMd.streams.find((v) => v.codec_type === \"video\");\n        if (videoMd) {\n          md.video = new VideoFileMetadataEntity();\n          md.video.codec = videoMd.codec_name?.toUpperCase();\n          md.video.container = videoMd.codec_long_name;\n          md.video.width = videoMd.width;\n          md.video.height = videoMd.height;\n          md.video.bitrate = videoMd.bit_rate;\n          md.video.duration = parseFloat(videoMd.duration || 0);\n          md.video.sampleAspectRatio = videoMd.sample_aspect_ratio;\n          md.video.displayAspectRatio = videoMd.display_aspect_ratio;\n          md.video.colorRange = videoMd.color_range;\n          md.video.colorSpace = videoMd.color_space;\n          md.video.frameRate = videoMd.r_frame_rate;\n          md.video.rotate = videoMd.tags?.rotate;\n        }\n      }\n    }\n  }\n\n  /**\n   * Sets audio metadata for the given FileMetadataEntity and buffer.\n   * @param md - The FileMetadataEntity to set the metadata for.\n   * @param buf - The buffer containing the audio data.\n   */\n  private async setAudioMd(md: FileMetadataEntity, buf: Buffer) {\n    const musicMd = await parseBuffer(buf);\n    if (!musicMd) {\n      return;\n    }\n    md.audio = new AudioFileMetadataEntity();\n    md.audio.container = musicMd.format.container;\n    md.audio.codec = musicMd.format.codec;\n    md.audio.sampleRate = musicMd.format.sampleRate;\n    md.audio.numberOfChannels = musicMd.format.numberOfChannels;\n    md.audio.bitrate = musicMd.format.bitrate;\n    md.audio.codecProfile = musicMd.format.codecProfile;\n    md.audio.tool = musicMd.format.tool;\n    md.audio.duration = musicMd.format.duration;\n    md.audio.title = musicMd.common.title;\n    md.audio.album = musicMd.common.album;\n    md.audio.artist = musicMd.common.artists?.join(\", \");\n    md.audio.year = musicMd.common.year;\n    md.audio.genre = musicMd.common.genre?.join(\", \");\n    md.audio.label = musicMd.common.label?.join(\", \");\n  }\n\n  /**\n   * Sets image metadata for the given FileMetadataEntity and buffer.\n   * @param md - The FileMetadataEntity to set the metadata for.\n   * @param buf - The buffer containing the image data.\n   */\n  private setImageMd(md: FileMetadataEntity, buf: Buffer) {\n    const exifData = ExifReader.load(buf, {\n      expanded: true,\n      includeUnknown: true,\n    });\n    if (!exifData) {\n      return;\n    }\n    md.image = new ImageFileMetadataEntity();\n    md.image.bps = exifData.file[\"Bits Per Sample\"]?.value;\n    md.image.height = exifData.file[\"Image Height\"]?.value;\n    md.image.width = exifData.file[\"Image Width\"]?.value;\n    md.image.colorComponents = exifData.file[\"Color Components\"]?.value;\n    md.image.subsampling = exifData.file[\"Subsampling\"]?.description;\n    if (exifData.png) {\n      md.image.height = exifData.png[\"Image Height\"]?.value;\n      md.image.width = exifData.png[\"Image Width\"]?.value;\n      md.image.bitDepth = exifData.png[\"Bit Depth\"]?.value;\n      md.image.colorType = exifData.png[\"Color Type\"]?.description;\n      md.image.compression = exifData.png[\"Compression\"]?.description;\n      md.image.filter = exifData.png[\"Filter\"]?.description;\n      md.image.interlace = exifData.png[\"Interlace\"]?.description;\n    }\n    if (exifData.gps) {\n      md.gps = new GpsFileMetadataEntity();\n      md.gps.altitude = exifData.gps?.Altitude;\n      md.gps.longitude = exifData.gps?.Longitude;\n      md.gps.latitude = exifData.gps?.Latitude;\n    }\n    if (exifData.icc) {\n      md.icc = new IccFileMetadataEntity();\n      md.icc.profileVersion = exifData.icc[\"Profile Version\"]?.description;\n      md.icc.profileClassName =\n        exifData.icc[\"Profile/Device class\"]?.description;\n      md.icc.profileClassValue = exifData.icc[\"Profile/Device class\"]?.value;\n      md.icc.connectionSpace = exifData.icc[\"Connection Space\"]?.description;\n      md.icc.iccProfileDate = new Date(exifData.icc[\"ICC Profile Date\"]?.value);\n      if (exifData.icc[\"ICC Profile Date\"]?.value) {\n        md.image.dateTime = md.icc.iccProfileDate;\n      }\n      md.icc.iccSignature = exifData.icc[\"ICC Signature\"]?.description;\n      md.icc.primaryPlatform = exifData.icc[\"Primary Platform\"]?.description;\n      md.icc.deviceManufacturer =\n        exifData.icc[\"Device Manufacturer\"]?.description;\n      md.icc.deviceModelNumber =\n        exifData.icc[\"Device Model Number\"]?.description;\n      md.icc.renderingIntentName =\n        exifData.icc[\"Rendering Intent\"]?.description;\n      md.icc.renderingIntentValue = exifData.icc[\"Rendering Intent\"]?.value;\n      md.icc.profileCreator = exifData.icc[\"Profile Creator\"]?.description;\n      md.icc.iccDescription = exifData.icc[\"ICC Description\"]?.description;\n      md.icc.iccCopyright = exifData.icc[\"ICC Copyright\"]?.description;\n    }\n    if (exifData.exif) {\n      md.exif = new ExifFileMetadataEntity();\n      md.exif.make = exifData.exif.Make?.description;\n      md.exif.model = exifData.exif.Model?.description;\n      md.exif.orientation = exifData.exif.Orientation?.description;\n      md.exif.resolutionX = exifData.exif.XResolution?.description;\n      md.exif.resolutionY = exifData.exif.YResolution?.description;\n      md.exif.resolutionUnit = exifData.exif.ResolutionUnit?.description;\n      md.exif.software = exifData.exif.Software?.description;\n      md.exif.ycbCrPositioning = exifData.exif.YCbCrPositioning?.description;\n      md.exif.exifIfdPointer = exifData.exif[\"Exif IFD Pointer\"]?.description;\n      md.exif.gpsInfoIfdPointer =\n        exifData.exif[\"GPS Info IFD Pointer\"]?.description;\n      md.exif.exposureTime = exifData.exif.ExposureTime?.description;\n      md.exif.fNumber = exifData.exif.FNumber?.description;\n      md.exif.exposureProgram = exifData.exif.ExposureProgram?.description;\n      md.exif.isoSpeedRatings = exifData.exif.ISOSpeedRatings?.description;\n      md.exif.exifVersion = exifData.exif.ExifVersion?.description;\n      md.exif.offsetTime = exifData.exif.OffsetTime?.description;\n      md.exif.shutterSpeedValue = exifData.exif.ShutterSpeedValue?.description;\n      md.exif.aperture = exifData.exif.ApertureValue?.description;\n      md.exif.brightness = exifData.exif.BrightnessValue?.description;\n      md.exif.exposureBias = exifData.exif.ExposureBiasValue?.description;\n      md.exif.maxAperture = exifData.exif.MaxApertureValue?.description;\n      md.exif.subjectDistance = exifData.exif.SubjectDistance?.description;\n      md.exif.meteringMode = exifData.exif.MeteringMode?.description;\n      md.exif.flash = exifData.exif.Flash?.description;\n      md.exif.focalLength = exifData.exif.FocalLength?.description;\n      md.exif.flashpixVersion = exifData.exif.FlashpixVersion?.description;\n      md.exif.colorSpace = exifData.exif.ColorSpace?.description;\n      md.exif.pixelXDimension = exifData.exif.PixelXDimension?.description;\n      md.exif.pixelYDimension = exifData.exif.PixelYDimension?.description;\n      md.exif.interoperabilityIfdPointer =\n        exifData.exif[\"Interoperability IFD Pointer\"]?.description;\n      md.exif.sensingMethod = exifData.exif.SensingMethod?.description;\n      md.exif.sceneType = exifData.exif.SceneType?.description;\n      md.exif.customRendered = exifData.exif.CustomRendered?.description;\n      md.exif.exposureMode = exifData.exif.ExposureMode?.description;\n      md.exif.whiteBalance = exifData.exif.WhiteBalance?.description;\n      md.exif.digitalZoomRatio = exifData.exif.DigitalZoomRatio?.description;\n      md.exif.sceneCaptureType = exifData.exif.SceneCaptureType?.description;\n      md.exif.contrast = exifData.exif.Contrast?.description;\n      md.exif.saturation = exifData.exif.Saturation?.description;\n      md.exif.sharpness = exifData.exif.Sharpness?.description;\n      md.exif.subjectDistanceRange =\n        exifData.exif.SubjectDistanceRange?.description;\n      md.exif.lensMake = exifData.exif.LensMake?.description;\n      md.exif.lensModel = exifData.exif.LensModel?.description;\n      md.exif.compositeImage = exifData.exif[\"CompositeImage\"]?.description;\n      md.exif.interoperabilityIndex =\n        exifData.exif.InteroperabilityIndex?.description;\n      md.exif.interoperabilityVersion =\n        exifData.exif[\"InteroperabilityVersion\"]?.description;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileModule.html":{"url":"modules/FileModule.html","title":"module - FileModule","body":"\n                   \n\n\n\n\n    Modules\n    FileModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/file/file.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for managing files.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: FileModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.module.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            FileModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      fileManager: FileService,\n      fileMd: FileMetadataService,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { FileService } from \"./file.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { FileEntity } from \"./entity/file.entity\";\nimport { FileModuleOptions } from \"./file.types\";\nimport { FileMetadataService } from \"./file-metadata.service\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\n/**\n * Module for managing files.\n */\n@Module({})\nexport class FileModule {\n  static forRoot(\n    options: FileModuleOptions = {\n      fileManager: FileService,\n      fileMd: FileMetadataService,\n    },\n  ): DynamicModule {\n    return {\n      module: FileModule,\n      imports: [TypeOrmModule.forFeature([FileEntity]), LogModule, CacheModule],\n      providers: [\n        {\n          provide: FileManager,\n          useClass: options.fileManager,\n        },\n        {\n          provide: FileMd,\n          useClass: options.fileMd,\n        },\n      ],\n      exports: [FileManager, FileMd],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing files, including uploading, finding, and removing files.\n\n            \n\n            \n                Extends\n            \n            \n                            FileManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createBasicFindQb\n                            \n                            \n                                    Private\n                                    Async\n                                createFileDirectory\n                            \n                            \n                                    Private\n                                    Async\n                                createFileEntity\n                            \n                            \n                                    Async\n                                createOrUpdateFile\n                            \n                            \n                                    Async\n                                findByCode\n                            \n                            \n                                    Async\n                                findFileById\n                            \n                            \n                                    Async\n                                findPrivateById\n                            \n                            \n                                    Async\n                                findPublicById\n                            \n                            \n                                    Async\n                                getFilePath\n                            \n                            \n                                    Private\n                                    Async\n                                getPrivateDir\n                            \n                            \n                                    Private\n                                    Async\n                                getPublicDir\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, fileRep: Repository, cacheService: CacheService, metadataService: FileMd)\n                    \n                \n                        \n                            \n                                Defined in lib/common/file/file.service.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        metadataService\n                                                  \n                                                        \n                                                                        FileMd\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createBasicFindQb\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBasicFindQb()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:226\n                        \n                    \n\n\n            \n                \n                        Private helper method to create a query builder for finding files with their related entities.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                A query builder instance for finding files.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        createFileDirectory\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFileDirectory(isPublic: boolean, entityId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:256\n                        \n                    \n\n\n            \n                \n                        Private helper method to create a file directory for the specified public/private status and entity ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isPublic\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA boolean flag indicating if the directory is for public files (true) or private files (false).\n\n\n                                            \n                                        \n                                        \n                                                entityId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe entity ID to use as the directory name.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the created directory path as a string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        createFileEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFileEntity(isPublic: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:273\n                        \n                    \n\n\n            \n                \n                        Private helper method to create a new FileEntity with the specified public/private status.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isPublic\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA boolean flag indicating if the FileEntity is for a public file (true) or private file (false).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the created FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOrUpdateFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrUpdateFile(file: Buffer, extension: string, isPublic, code?: string, existedEntityId?: number, name?: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:66\n\n                        \n                    \n\n\n            \n                \n                        Uploads a file and saves it to the specified directory (public or private).\nAlso creates a FileEntity and saves the file's metadata in the database.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nBuffer of file.\n\n\n                                            \n                                        \n                                        \n                                                extension\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"\"\n                                            \n\n                                            \n                                                    \nfile extension (based of file name).\n\n\n                                            \n                                        \n                                        \n                                                isPublic\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                            \n                                                    \nA boolean flag indicating if the file should be saved to the public directory (true) or private directory (false).\n\n\n                                            \n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nSpecific identification code for file entity.\n\n\n                                            \n                                        \n                                        \n                                                existedEntityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nID of file entity for patch.\n\n\n                                            \n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nname for file entity.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the created FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:148\n\n                        \n                    \n\n\n            \n                \n                        Finds a file entity by code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the file entity.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The found file entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findFileById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findFileById(id: number, isPublic: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:131\n\n                        \n                    \n\n\n            \n                \n                        Private helper method to find a file by its ID and public/private status.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe ID of the file to find.\n\n\n                                            \n                                        \n                                        \n                                                isPublic\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                            \n                                                    \nA boolean flag indicating if the file is public (true) or private (false).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the found FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPrivateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPrivateById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:168\n\n                        \n                    \n\n\n            \n                \n                        Finds a private file by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the file to find.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the found FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPublicById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPublicById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:159\n\n                        \n                    \n\n\n            \n                \n                        Finds a public file by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the file to find.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the found FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFilePath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFilePath(file: File)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:177\n\n                        \n                    \n\n\n            \n                \n                        Constructs the full file path for the given File object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA File object containing the file's metadata.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The full file path as a string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getPrivateDir\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPrivateDir()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:292\n                        \n                    \n\n\n            \n                \n                        Retrieves the private directory path stored in configuration.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the normalized private directory path.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getPublicDir\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPublicDir()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:283\n                        \n                    \n\n\n            \n                \n                        Retrieves the public directory path stored in configuration.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the normalized public directory path.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:187\n\n                        \n                    \n\n\n            \n                \n                        Removes a file by its ID and deletes its corresponding directory.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the file to remove.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the removed FileEntity.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n  Logger,\n  NotFoundException,\n} from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { FileEntity } from \"./entity/file.entity\";\nimport * as path from \"path\";\nimport * as fs from \"fs\";\nimport { File } from \"./file.types\";\nimport { FilesUtils } from \"../../shared/utils/files.utils\";\nimport { FileConfig } from \"../../../gen-src/file.config\";\nimport { FileManager, FileMd } from \"./file.constants\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport PRIVATE_DIR = FileConfig.PRIVATE_DIR;\nimport PUBLIC_DIR = FileConfig.PUBLIC_DIR;\nimport createDirectoriesIfNotExist = FilesUtils.createDirectoriesIfNotExist;\n\n/**\n * Service for managing files, including uploading, finding, and removing files.\n */\n@Injectable()\nexport class FileService extends FileManager {\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    @InjectRepository(FileEntity)\n    private readonly fileRep: Repository,\n    private readonly cacheService: CacheService,\n    private readonly metadataService: FileMd,\n  ) {\n    super();\n  }\n\n  /**\n   * Uploads a file and saves it to the specified directory (public or private).\n   * Also creates a FileEntity and saves the file's metadata in the database.\n   * @param file - Buffer of file.\n   * @param extension - file extension (based of file name).\n   * @param isPublic - A boolean flag indicating if the file should be saved to the public directory (true) or private directory (false).\n   * @param code - Specific identification code for file entity.\n   * @param existedEntityId - ID of file entity for patch.\n   * @param name - name for file entity.\n   * @returns A promise that resolves to the created FileEntity.\n   */\n  async createOrUpdateFile(\n    file: Buffer,\n    extension = \"\",\n    isPublic = true,\n    code?: string,\n    existedEntityId?: number,\n    name?: string,\n  ): Promise {\n    let entity: FileEntity = undefined;\n    await this.fileRep.manager.transaction(async (transactionManager) => {\n      if (existedEntityId) {\n        entity = await this.findFileById(existedEntityId, isPublic);\n        if (!entity) {\n          throw new BadRequestException(\n            `Cannot patch file with ID ${existedEntityId}, because than not exists`,\n          );\n        }\n        const dir = path.join(\n          !entity.public\n            ? await this.getPrivateDir()\n            : await this.getPublicDir(),\n          entity.id.toString(),\n        );\n        await fs.promises\n          .rm(dir, { recursive: true, force: true })\n          .catch((err) => {\n            throw new InternalServerErrorException(\n              `Failed to delete directory: ${dir}`,\n              err,\n            );\n          });\n      } else {\n        entity = await this.createFileEntity(isPublic);\n      }\n      const outputPath = await this.createFileDirectory(\n        entity.public,\n        entity.id.toString(),\n      );\n      const fileName =\n        entity.id.toString() + (extension ? `.${extension}` : extension);\n      entity.size = file.length;\n      entity.path = fileName;\n      entity.name = name;\n      entity.code = code;\n      await fs.promises.writeFile(`${outputPath}/${fileName}`, file);\n      if (!existedEntityId) {\n        entity.metadata = await this.metadataService.createFileMetadataEntity(\n          file,\n          `${outputPath}/${fileName}`,\n        );\n      }\n      await transactionManager.save(entity);\n    });\n    this.logger.log(\n      `${!existedEntityId ? `Created` : `Updated`} file with ID ${entity.id}`,\n    );\n    return entity;\n  }\n\n  /**\n   * Private helper method to find a file by its ID and public/private status.\n   * @param id - The ID of the file to find.\n   * @param isPublic - A boolean flag indicating if the file is public (true) or private (false).\n   * @returns A promise that resolves to the found FileEntity.\n   */\n  async findFileById(id: number, isPublic: boolean = undefined) {\n    const qb = this.createBasicFindQb().where(\"file.id = :id\", { id });\n    if (isPublic !== undefined) {\n      qb.andWhere(`file.public = :isPublic`, { isPublic });\n    }\n    const entity = await qb.getOne();\n    if (!entity) {\n      throw new NotFoundException(`File with ID ${id} not found`);\n    }\n    return entity;\n  }\n\n  /**\n   * Finds a file entity by code.\n   * @param code - The code of the file entity.\n   * @returns The found file entity.\n   */\n  async findByCode(code: string): Promise {\n    return await this.createBasicFindQb()\n      .where(\"file.code = :code\", { code })\n      .getOne();\n  }\n\n  /**\n   * Finds a public file by its ID.\n   * @param id - The ID of the file to find.\n   * @returns A promise that resolves to the found FileEntity.\n   */\n  async findPublicById(id: number): Promise {\n    return this.findFileById(id, true);\n  }\n\n  /**\n   * Finds a private file by its ID.\n   * @param id - The ID of the file to find.\n   * @returns A promise that resolves to the found FileEntity.\n   */\n  async findPrivateById(id: number): Promise {\n    return this.findFileById(id);\n  }\n\n  /**\n   * Constructs the full file path for the given File object.\n   * @param file - A File object containing the file's metadata.\n   * @returns The full file path as a string.\n   */\n  async getFilePath(file: File): Promise {\n    const filePath = `${!file.public ? await this.getPrivateDir() : await this.getPublicDir()}/${file.id}/`;\n    return filePath + file.path;\n  }\n\n  /**\n   * Removes a file by its ID and deletes its corresponding directory.\n   * @param id - The ID of the file to remove.\n   * @returns A promise that resolves to the removed FileEntity.\n   */\n  async remove(id: number): Promise {\n    const file = await this.findFileById(id);\n    const dir = path.join(\n      !file.public ? await this.getPrivateDir() : await this.getPublicDir(),\n      file.id.toString(),\n    );\n    await this.fileRep.manager.transaction(async (transactionManager) => {\n      if (file.metadata) {\n        if (file.metadata.image) {\n          await transactionManager.remove(file.metadata.image);\n        }\n        if (file.metadata.gps) {\n          await transactionManager.remove(file.metadata.gps);\n        }\n        if (file.metadata.audio) {\n          await transactionManager.remove(file.metadata.audio);\n        }\n        if (file.metadata.video) {\n          await transactionManager.remove(file.metadata.video);\n        }\n      }\n      await transactionManager.remove(file);\n      await fs.promises\n        .rm(dir, { recursive: true, force: true })\n        .catch((err) => {\n          throw new InternalServerErrorException(\n            `Failed to delete directory: ${dir}`,\n            err,\n          );\n        });\n    });\n    this.logger.log(`File with ID ${id} removed`);\n    return file;\n  }\n\n  /**\n   * Private helper method to create a query builder for finding files with their related entities.\n   * @returns A query builder instance for finding files.\n   */\n  private createBasicFindQb() {\n    return this.fileRep\n      .createQueryBuilder(\"file\")\n      .leftJoinAndSelect(\"file.icon\", \"icon\")\n      .leftJoinAndSelect(\"file.metadata\", \"metadata\")\n      .leftJoinAndSelect(\"metadata.gps\", \"metaGps\")\n      .leftJoinAndSelect(\"metadata.image\", \"metaImage\")\n      .leftJoinAndSelect(\"metadata.audio\", \"metaAudio\")\n      .leftJoinAndSelect(\"metadata.video\", \"metaVideo\")\n      .leftJoinAndSelect(\"icon.name\", \"iconName\")\n      .leftJoinAndSelect(\"iconName.lang\", \"iconLang\")\n      .leftJoinAndSelect(\"icon.files\", \"iconFiles\")\n      .leftJoinAndSelect(\"iconFiles.format\", \"iconFilesFormat\")\n      .leftJoinAndSelect(\"icon.type\", \"iconType\")\n      .leftJoinAndSelect(\"iconType.ext\", \"iconTypeExt\")\n      .leftJoinAndSelect(\"file.preview\", \"preview\")\n      .leftJoinAndSelect(\"preview.name\", \"previewName\")\n      .leftJoinAndSelect(\"previewName.lang\", \"previewLang\")\n      .leftJoinAndSelect(\"preview.files\", \"previewFiles\")\n      .leftJoinAndSelect(\"previewFiles.format\", \"previewFilesFormat\")\n      .leftJoinAndSelect(\"preview.type\", \"previewType\")\n      .leftJoinAndSelect(\"previewType.ext\", \"previewTypeExt\");\n  }\n\n  /**\n   * Private helper method to create a file directory for the specified public/private status and entity ID.\n   * @param isPublic - A boolean flag indicating if the directory is for public files (true) or private files (false).\n   * @param entityId - The entity ID to use as the directory name.\n   * @returns A promise that resolves to the created directory path as a string.\n   */\n  private async createFileDirectory(\n    isPublic: boolean,\n    entityId: string,\n  ): Promise {\n    const dir = path.join(\n      !isPublic ? await this.getPrivateDir() : await this.getPublicDir(),\n      entityId,\n    );\n    await createDirectoriesIfNotExist(dir);\n    return dir;\n  }\n\n  /**\n   * Private helper method to create a new FileEntity with the specified public/private status.\n   * @param isPublic - A boolean flag indicating if the FileEntity is for a public file (true) or private file (false).\n   * @returns A promise that resolves to the created FileEntity.\n   */\n  private async createFileEntity(isPublic: boolean) {\n    const entity = new FileEntity();\n    entity.public = isPublic;\n    return this.fileRep.save(entity);\n  }\n\n  /**\n   * Retrieves the public directory path stored in configuration.\n   * @returns A promise that resolves to the normalized public directory path.\n   */\n  private async getPublicDir() {\n    const dir = process.cwd() + (await this.cacheService.get(PUBLIC_DIR));\n    return path.normalize(dir);\n  }\n\n  /**\n   * Retrieves the private directory path stored in configuration.\n   * @returns A promise that resolves to the normalized private directory path.\n   */\n  private async getPrivateDir() {\n    const dir = process.cwd() + (await this.cacheService.get(PRIVATE_DIR));\n    return path.normalize(dir);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForbiddenMsException.html":{"url":"classes/ForbiddenMsException.html","title":"class - ForbiddenMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForbiddenMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/forbidden-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for forbidden requests, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/forbidden-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for forbidden requests, extending MsException.\n */\nexport class ForbiddenMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.FORBIDDEN, message || \"Forbidden\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleCaptchaService.html":{"url":"classes/GoogleCaptchaService.html","title":"class - GoogleCaptchaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleCaptchaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/google-captcha.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The GoogleCaptchaService class extends the CaptchaService class with a specialization for Google reCAPTCHA.\nIt manages the generation and validation of Google reCAPTCHAs.\n\n            \n\n            \n                Extends\n            \n            \n                            CaptchaService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateCaptcha\n                            \n                            \n                                    Async\n                                validateCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, cacheService: CacheService, http: HttpService)\n                    \n                \n                        \n                            \n                                Defined in lib/common/captcha/google-captcha.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateCaptcha()\n                \n            \n\n\n                    \n                        \n                            Inherited from         CaptchaService\n\n                        \n                    \n                    \n                        \n                                Defined in         CaptchaService:46\n\n                        \n                    \n\n\n            \n                \n                        Generates a new Google reCAPTCHA and retrieves the public key defined in configuration.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nA promise resolving to a CaptchaResponse object containing the captcha id and type.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateCaptcha(request: CaptchaRequest)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CaptchaService\n\n                        \n                    \n                    \n                        \n                                Defined in         CaptchaService:62\n\n                        \n                    \n\n\n            \n                \n                        Validates the provided captcha request against Google's reCAPTCHA verification service.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            CaptchaRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe captcha request to be validated.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA promise resolving to a boolean indicating whether the captcha is valid or not.\n\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CaptchaRequest,\n  CaptchaResponse,\n  CaptchaService,\n} from \"./captcha.types\";\nimport { Inject, Logger } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { lastValueFrom } from \"rxjs\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport { CaptchaConfig } from \"../../../gen-src/captcha.config\";\n\n/**\n * The GoogleCaptchaService class extends the CaptchaService class with a specialization for Google reCAPTCHA.\n * It manages the generation and validation of Google reCAPTCHAs.\n */\nexport class GoogleCaptchaService extends CaptchaService {\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    private readonly cacheService: CacheService,\n    private readonly http: HttpService,\n  ) {\n    super();\n  }\n\n  /**\n   * Generates a new Google reCAPTCHA and retrieves the public key defined in configuration.\n   * @returns {Promise} - A promise resolving to a CaptchaResponse object containing the captcha id and type.\n   */\n  async generateCaptcha(): Promise {\n    const captchaEnabled = await this.cacheService.getBoolean(\n      CaptchaConfig.ENABLED,\n    );\n    if (!captchaEnabled) {\n      return undefined;\n    }\n    const id = await this.cacheService.get(CaptchaConfig.GOOGLE_PUBLIC_KEY);\n    return { id, type: \"google\" };\n  }\n\n  /**\n   * Validates the provided captcha request against Google's reCAPTCHA verification service.\n   * @param {CaptchaRequest} request - The captcha request to be validated.\n   * @returns {Promise} - A promise resolving to a boolean indicating whether the captcha is valid or not.\n   */\n  async validateCaptcha(request: CaptchaRequest): Promise {\n    const secretKey = await this.cacheService.get(\n      CaptchaConfig.GOOGLE_SECRET_KEY,\n    );\n    const response$ = await this.http.post(\n      `https://www.google.com/recaptcha/api/siteverify?secret=${secretKey}&response=${request.data}`,\n    );\n    const response = await lastValueFrom(response$);\n    return response?.data?.success;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GpsFileMetadata.html":{"url":"interfaces/GpsFileMetadata.html","title":"interface - GpsFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GpsFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing GPS file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            altitude\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            latitude\n                                        \n                                \n                                \n                                        \n                                            longitude\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        altitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        altitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  id: number;\n  mime: string;\n  ext: string;\n  hash: string;\n  icc: IccFileMetadata;\n  gps: GpsFileMetadata;\n  image: ImageFileMetadata;\n  exif: ExifFileMetadata;\n  audio: AudioFileMetadata;\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  id: number;\n  bps: number;\n  width: number;\n  height: number;\n  colorComponents: number;\n  subsampling: string;\n  dateTime: Date;\n  bitDepth: number;\n  colorType: string;\n  compression: string;\n  filter: string;\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  id: number;\n  profileVersion: string;\n  profileClassValue: string;\n  profileClassName: string;\n  connectionSpace: string;\n  iccProfileDate: Date;\n  iccSignature: string;\n  primaryPlatform: string;\n  deviceManufacturer: string;\n  deviceModelNumber: string;\n  renderingIntentValue: string;\n  renderingIntentName: string;\n  profileCreator: string;\n  iccDescription: string;\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  id: number;\n  make: string;\n  model: string;\n  orientation: string;\n  resolutionX: string;\n  resolutionY: string;\n  resolutionUnit: string;\n  software: string;\n  ycbCrPositioning: string;\n  exifIfdPointer: string;\n  gpsInfoIfdPointer: string;\n  exposureTime: string;\n  fNumber: string;\n  exposureProgram: string;\n  isoSpeedRatings: string;\n  exifVersion: string;\n  offsetTime: string;\n  shutterSpeedValue: string;\n  aperture: string;\n  brightness: string;\n  exposureBias: string;\n  maxAperture: string;\n  subjectDistance: string;\n  meteringMode: string;\n  flash: string;\n  focalLength: string;\n  flashpixVersion: string;\n  colorSpace: string;\n  pixelXDimension: string;\n  pixelYDimension: string;\n  interoperabilityIfdPointer: string;\n  sensingMethod: string;\n  sceneType: string;\n  customRendered: string;\n  exposureMode: string;\n  whiteBalance: string;\n  digitalZoomRatio: string;\n  sceneCaptureType: string;\n  contrast: string;\n  saturation: string;\n  sharpness: string;\n  subjectDistanceRange: string;\n  lensMake: string;\n  lensModel: string;\n  compositeImage: string;\n  interoperabilityIndex: string;\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  id: number;\n  latitude: number;\n  longitude: number;\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GpsFileMetadataEntity.html":{"url":"entities/GpsFileMetadataEntity.html","title":"entity - GpsFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GpsFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/gps-file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the GPS metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                altitude\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                latitude\n                            \n                            \n                                    \n                                    \n                                longitude\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        altitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/gps-file-metadata.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/gps-file-metadata.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/gps-file-metadata.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/gps-file-metadata.entity.ts:37\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { GpsFileMetadata } from \"../file.types\";\n\n/**\n * The entity stores the GPS metadata of the file\n */\n@Entity(\"file_metadata_gps\")\nexport class GpsFileMetadataEntity implements GpsFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  altitude: number;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  latitude: number;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  longitude: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphicCaptchaService.html":{"url":"classes/GraphicCaptchaService.html","title":"class - GraphicCaptchaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphicCaptchaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/graphic-captcha.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The GraphicCaptchaService class extends the CaptchaService class with a specialization for graphical captchas.\nIt manages the generation and validation of graphic captchas.\n\n            \n\n            \n                Extends\n            \n            \n                            CaptchaService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateCaptcha\n                            \n                            \n                                    Private\n                                generateColor\n                            \n                            \n                                    Private\n                                    Async\n                                getCaptchaExp\n                            \n                            \n                                    Private\n                                    Async\n                                getCaptchaFontFamily\n                            \n                            \n                                    Private\n                                    Async\n                                getCaptchaFontPath\n                            \n                            \n                                    Private\n                                    Async\n                                makeImageFromText\n                            \n                            \n                                    Async\n                                validateCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/common/captcha/graphic-captcha.service.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAn instance of Logger.\n\n\n                                                        \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAn instance of CacheService.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateCaptcha()\n                \n            \n\n\n                    \n                        \n                            Inherited from         CaptchaService\n\n                        \n                    \n                    \n                        \n                                Defined in         CaptchaService:55\n\n                        \n                    \n\n\n            \n                \n                        Generates a new graphical captcha and stores it in the cache.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nA promise resolving to a GraphicCaptchaResponse object containing the captcha id and image.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateColor\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateColor()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:129\n                        \n                    \n\n\n            \n                \n                        Generates a random RGB color.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                \nAn RGB color string.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getCaptchaExp\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCaptchaExp()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:137\n                        \n                    \n\n\n            \n                \n                        Retrieves the captcha expiration time defined in configuration.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nA promise resolving to the captcha expiration time.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getCaptchaFontFamily\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCaptchaFontFamily()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:145\n                        \n                    \n\n\n            \n                \n                        Retrieves the captcha font family defined in configuration.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nA promise resolving to the captcha font family.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getCaptchaFontPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCaptchaFontPath()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:153\n                        \n                    \n\n\n            \n                \n                        Retrieves the captcha font path defined in configuration and normalizes it.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nA promise resolving to the normalized captcha font path.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        makeImageFromText\n                        \n                    \n                \n            \n            \n                \n                        \n                    makeImageFromText(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:96\n                        \n                    \n\n\n            \n                \n                        Generates an image from the provided text.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe text to be drawn on the image.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nA promise resolving to a base64 encoded image.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateCaptcha(request: CaptchaRequest)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CaptchaService\n\n                        \n                    \n                    \n                        \n                                Defined in         CaptchaService:76\n\n                        \n                    \n\n\n            \n                \n                        Validates the provided captcha request against the cached value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            CaptchaRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe captcha request to be validated.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA promise resolving to a boolean indicating whether the captcha is valid or not.\n\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CaptchaRequest,\n  CaptchaResponse,\n  CaptchaService,\n} from \"./captcha.types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Inject, Logger } from \"@nestjs/common\";\nimport { createCanvas, registerFont } from \"canvas\";\nimport { CAPTCHA_CACHE_PREFIX } from \"./captcha.constants\";\nimport * as path from \"path\";\nimport { StringUtils } from \"../../shared/utils/string.utils\";\nimport { NumberUtils } from \"../../shared/utils/number.utils\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport { CaptchaConfig } from \"../../../gen-src/captcha.config\";\nimport generateRandomString = StringUtils.generateRandomString;\nimport generateRandomInt = NumberUtils.generateRandomInt;\n\n/**\n * The GraphicCaptchaService class extends the CaptchaService class with a specialization for graphical captchas.\n * It manages the generation and validation of graphic captchas.\n */\nexport class GraphicCaptchaService extends CaptchaService {\n  /**\n   * @param {Logger} logger - An instance of Logger.\n   * @param {CacheService} cacheService - An instance of CacheService.\n   */\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    private readonly cacheService: CacheService,\n  ) {\n    super();\n  }\n\n  /**\n   * Generates a new graphical captcha and stores it in the cache.\n   * @returns {Promise} - A promise resolving to a GraphicCaptchaResponse object containing the captcha id and image.\n   */\n  async generateCaptcha(): Promise {\n    const captchaEnabled = await this.cacheService.getBoolean(\n      CaptchaConfig.ENABLED,\n    );\n    if (!captchaEnabled) {\n      return undefined;\n    }\n    const id = uuidv4();\n    const val = generateRandomString(5, 7);\n    const image = await this.makeImageFromText(val);\n    const capEx = await this.getCaptchaExp();\n    await this.cacheService.set(`${CAPTCHA_CACHE_PREFIX}:${id}`, val, capEx);\n    this.logger.debug(`Generated captcha with id: ${id} and value: ${val}`);\n    return { id, image: `data:image/png;base64,${image}`, type: \"default\" };\n  }\n\n  /**\n   * Validates the provided captcha request against the cached value.\n   * @param {CaptchaRequest} request - The captcha request to be validated.\n   * @returns {Promise} - A promise resolving to a boolean indicating whether the captcha is valid or not.\n   */\n  async validateCaptcha(request: CaptchaRequest): Promise {\n    const key = `${CAPTCHA_CACHE_PREFIX}:${request.id}`;\n    const val = await this.cacheService.get(key);\n    this.cacheService.del(key);\n    if (!val) {\n      this.logger.warn(`Invalid captcha id: ${request.id}`);\n      return false;\n    }\n    if (val !== request.data) {\n      this.logger.warn(`Incorrect captcha value for id: ${request.id}`);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Generates an image from the provided text.\n   * @param {string} text - The text to be drawn on the image.\n   * @returns {Promise} - A promise resolving to a base64 encoded image.\n   */\n  private async makeImageFromText(text: string) {\n    const canvas = createCanvas(200, 50);\n    const ctx = canvas.getContext(\"2d\");\n    const capFontFamily = await this.getCaptchaFontFamily();\n    const capFontPath = await this.getCaptchaFontPath();\n    registerFont(capFontPath, { family: capFontFamily });\n    ctx.fillStyle = this.generateColor();\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.font = `30px ${capFontFamily}`;\n    ctx.textBaseline = \"middle\";\n    for (let i = 0; i } - A promise resolving to the captcha expiration time.\n   */\n  private async getCaptchaExp() {\n    return await this.cacheService.getNumber(CaptchaConfig.EXPIRATION);\n  }\n\n  /**\n   * Retrieves the captcha font family defined in configuration.\n   * @returns {Promise} - A promise resolving to the captcha font family.\n   */\n  private async getCaptchaFontFamily() {\n    return await this.cacheService.get(CaptchaConfig.FONT_FAMILY);\n  }\n\n  /**\n   * Retrieves the captcha font path defined in configuration and normalizes it.\n   * @returns {Promise} - A promise resolving to the normalized captcha font path.\n   */\n  private async getCaptchaFontPath() {\n    const dir =\n      process.cwd() + (await this.cacheService.get(CaptchaConfig.FONT_PATH));\n    return path.normalize(dir);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IccFileMetadata.html":{"url":"interfaces/IccFileMetadata.html","title":"interface - IccFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IccFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing ICC file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            connectionSpace\n                                        \n                                \n                                \n                                        \n                                            deviceManufacturer\n                                        \n                                \n                                \n                                        \n                                            deviceModelNumber\n                                        \n                                \n                                \n                                        \n                                            iccCopyright\n                                        \n                                \n                                \n                                        \n                                            iccDescription\n                                        \n                                \n                                \n                                        \n                                            iccProfileDate\n                                        \n                                \n                                \n                                        \n                                            iccSignature\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            primaryPlatform\n                                        \n                                \n                                \n                                        \n                                            profileClassName\n                                        \n                                \n                                \n                                        \n                                            profileClassValue\n                                        \n                                \n                                \n                                        \n                                            profileCreator\n                                        \n                                \n                                \n                                        \n                                            profileVersion\n                                        \n                                \n                                \n                                        \n                                            renderingIntentName\n                                        \n                                \n                                \n                                        \n                                            renderingIntentValue\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connectionSpace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connectionSpace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deviceManufacturer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deviceManufacturer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deviceModelNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deviceModelNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iccCopyright\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccCopyright:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iccDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iccProfileDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccProfileDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iccSignature\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccSignature:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryPlatform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primaryPlatform:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileClassName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileClassName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileClassValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileClassValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileCreator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileCreator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        renderingIntentName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        renderingIntentName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        renderingIntentValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        renderingIntentValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  id: number;\n  mime: string;\n  ext: string;\n  hash: string;\n  icc: IccFileMetadata;\n  gps: GpsFileMetadata;\n  image: ImageFileMetadata;\n  exif: ExifFileMetadata;\n  audio: AudioFileMetadata;\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  id: number;\n  bps: number;\n  width: number;\n  height: number;\n  colorComponents: number;\n  subsampling: string;\n  dateTime: Date;\n  bitDepth: number;\n  colorType: string;\n  compression: string;\n  filter: string;\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  id: number;\n  profileVersion: string;\n  profileClassValue: string;\n  profileClassName: string;\n  connectionSpace: string;\n  iccProfileDate: Date;\n  iccSignature: string;\n  primaryPlatform: string;\n  deviceManufacturer: string;\n  deviceModelNumber: string;\n  renderingIntentValue: string;\n  renderingIntentName: string;\n  profileCreator: string;\n  iccDescription: string;\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  id: number;\n  make: string;\n  model: string;\n  orientation: string;\n  resolutionX: string;\n  resolutionY: string;\n  resolutionUnit: string;\n  software: string;\n  ycbCrPositioning: string;\n  exifIfdPointer: string;\n  gpsInfoIfdPointer: string;\n  exposureTime: string;\n  fNumber: string;\n  exposureProgram: string;\n  isoSpeedRatings: string;\n  exifVersion: string;\n  offsetTime: string;\n  shutterSpeedValue: string;\n  aperture: string;\n  brightness: string;\n  exposureBias: string;\n  maxAperture: string;\n  subjectDistance: string;\n  meteringMode: string;\n  flash: string;\n  focalLength: string;\n  flashpixVersion: string;\n  colorSpace: string;\n  pixelXDimension: string;\n  pixelYDimension: string;\n  interoperabilityIfdPointer: string;\n  sensingMethod: string;\n  sceneType: string;\n  customRendered: string;\n  exposureMode: string;\n  whiteBalance: string;\n  digitalZoomRatio: string;\n  sceneCaptureType: string;\n  contrast: string;\n  saturation: string;\n  sharpness: string;\n  subjectDistanceRange: string;\n  lensMake: string;\n  lensModel: string;\n  compositeImage: string;\n  interoperabilityIndex: string;\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  id: number;\n  latitude: number;\n  longitude: number;\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/IccFileMetadataEntity.html":{"url":"entities/IccFileMetadataEntity.html","title":"entity - IccFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  IccFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/icc-file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the ICC metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                connectionSpace\n                            \n                            \n                                    \n                                    \n                                deviceManufacturer\n                            \n                            \n                                    \n                                    \n                                deviceModelNumber\n                            \n                            \n                                    \n                                    \n                                iccCopyright\n                            \n                            \n                                    \n                                    \n                                iccDescription\n                            \n                            \n                                    \n                                    \n                                iccProfileDate\n                            \n                            \n                                    \n                                    \n                                iccSignature\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                primaryPlatform\n                            \n                            \n                                    \n                                    \n                                profileClassName\n                            \n                            \n                                    \n                                    \n                                profileClassValue\n                            \n                            \n                                    \n                                    \n                                profileCreator\n                            \n                            \n                                    \n                                    \n                                profileVersion\n                            \n                            \n                                    \n                                    \n                                renderingIntentName\n                            \n                            \n                                    \n                                    \n                                renderingIntentValue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        connectionSpace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'connection_space', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deviceManufacturer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'device_manufacturer', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deviceModelNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'device_model_number', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        iccCopyright\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'icc_copyright', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        iccDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'icc_description', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        iccProfileDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('date', {name: 'icc_profile_date', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        iccSignature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'icc_signature', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        primaryPlatform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'primary_platform', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profileClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'profile_class_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profileClassValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'profile_class_value', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profileCreator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'profile_creator', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profileVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'profile_version', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        renderingIntentName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'rendering_intent_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        renderingIntentValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'rendering_intent_value', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { IccFileMetadata } from \"../file.types\";\n\n/**\n * The entity stores the ICC metadata of the file\n */\n@Entity(\"file_metadata_icc\")\nexport class IccFileMetadataEntity implements IccFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"varchar\", { name: \"profile_version\", nullable: true })\n  profileVersion: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"profile_class_value\", nullable: true })\n  profileClassValue: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"profile_class_name\", nullable: true })\n  profileClassName: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"connection_space\", nullable: true })\n  connectionSpace: string;\n\n  @Index()\n  @Column(\"date\", { name: \"icc_profile_date\", nullable: true })\n  iccProfileDate: Date;\n\n  @Index()\n  @Column(\"varchar\", { name: \"icc_signature\", nullable: true })\n  iccSignature: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"primary_platform\", nullable: true })\n  primaryPlatform: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"device_manufacturer\", nullable: true })\n  deviceManufacturer: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"device_model_number\", nullable: true })\n  deviceModelNumber: string;\n\n  @Index()\n  @Column(\"int\", { name: \"rendering_intent_value\", nullable: true })\n  renderingIntentValue: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"rendering_intent_name\", nullable: true })\n  renderingIntentName: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"profile_creator\", nullable: true })\n  profileCreator: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"icc_description\", nullable: true })\n  iccDescription: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"icc_copyright\", nullable: true })\n  iccCopyright: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageFileMetadata.html":{"url":"interfaces/ImageFileMetadata.html","title":"interface - ImageFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ImageFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing image file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bitDepth\n                                        \n                                \n                                \n                                        \n                                            bps\n                                        \n                                \n                                \n                                        \n                                            colorComponents\n                                        \n                                \n                                \n                                        \n                                            colorType\n                                        \n                                \n                                \n                                        \n                                            compression\n                                        \n                                \n                                \n                                        \n                                            dateTime\n                                        \n                                \n                                \n                                        \n                                            filter\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interlace\n                                        \n                                \n                                \n                                        \n                                            subsampling\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bitDepth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bitDepth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bps:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorComponents\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorComponents:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        compression\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        compression:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interlace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interlace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subsampling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subsampling:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  id: number;\n  mime: string;\n  ext: string;\n  hash: string;\n  icc: IccFileMetadata;\n  gps: GpsFileMetadata;\n  image: ImageFileMetadata;\n  exif: ExifFileMetadata;\n  audio: AudioFileMetadata;\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  id: number;\n  bps: number;\n  width: number;\n  height: number;\n  colorComponents: number;\n  subsampling: string;\n  dateTime: Date;\n  bitDepth: number;\n  colorType: string;\n  compression: string;\n  filter: string;\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  id: number;\n  profileVersion: string;\n  profileClassValue: string;\n  profileClassName: string;\n  connectionSpace: string;\n  iccProfileDate: Date;\n  iccSignature: string;\n  primaryPlatform: string;\n  deviceManufacturer: string;\n  deviceModelNumber: string;\n  renderingIntentValue: string;\n  renderingIntentName: string;\n  profileCreator: string;\n  iccDescription: string;\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  id: number;\n  make: string;\n  model: string;\n  orientation: string;\n  resolutionX: string;\n  resolutionY: string;\n  resolutionUnit: string;\n  software: string;\n  ycbCrPositioning: string;\n  exifIfdPointer: string;\n  gpsInfoIfdPointer: string;\n  exposureTime: string;\n  fNumber: string;\n  exposureProgram: string;\n  isoSpeedRatings: string;\n  exifVersion: string;\n  offsetTime: string;\n  shutterSpeedValue: string;\n  aperture: string;\n  brightness: string;\n  exposureBias: string;\n  maxAperture: string;\n  subjectDistance: string;\n  meteringMode: string;\n  flash: string;\n  focalLength: string;\n  flashpixVersion: string;\n  colorSpace: string;\n  pixelXDimension: string;\n  pixelYDimension: string;\n  interoperabilityIfdPointer: string;\n  sensingMethod: string;\n  sceneType: string;\n  customRendered: string;\n  exposureMode: string;\n  whiteBalance: string;\n  digitalZoomRatio: string;\n  sceneCaptureType: string;\n  contrast: string;\n  saturation: string;\n  sharpness: string;\n  subjectDistanceRange: string;\n  lensMake: string;\n  lensModel: string;\n  compositeImage: string;\n  interoperabilityIndex: string;\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  id: number;\n  latitude: number;\n  longitude: number;\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ImageFileMetadataEntity.html":{"url":"entities/ImageFileMetadataEntity.html","title":"entity - ImageFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ImageFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/image-file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the image metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                bitDepth\n                            \n                            \n                                    \n                                    \n                                bps\n                            \n                            \n                                    \n                                    \n                                colorComponents\n                            \n                            \n                                    \n                                    \n                                colorType\n                            \n                            \n                                    \n                                    \n                                compression\n                            \n                            \n                                    \n                                    \n                                dateTime\n                            \n                            \n                                    \n                                    \n                                filter\n                            \n                            \n                                    \n                                    \n                                height\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                interlace\n                            \n                            \n                                    \n                                    \n                                subsampling\n                            \n                            \n                                    \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bitDepth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bps\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        colorComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'color_components', nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        colorType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        compression\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('date', {name: 'date_time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        interlace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        subsampling\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { ImageFileMetadata } from \"../file.types\";\n\n/**\n * The entity stores the image metadata of the file\n */\n@Entity(\"file_metadata_image\")\nexport class ImageFileMetadataEntity implements ImageFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  bps: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  width: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  height: number;\n\n  @Index()\n  @Column(\"int\", { name: \"color_components\", nullable: true, default: null })\n  colorComponents: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  subsampling: string;\n\n  @Index()\n  @Column(\"date\", { name: \"date_time\", nullable: true })\n  dateTime: Date;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  bitDepth: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  colorType: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  compression: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  filter: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  interlace: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidTokenMsException.html":{"url":"classes/InvalidTokenMsException.html","title":"class - InvalidTokenMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidTokenMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/invalid-token-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for invalid token, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/invalid-token-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for invalid token, extending MsException.\n */\nexport class InvalidTokenMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.UNAUTHORIZED, message || \"Invalid token\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtDto.html":{"url":"classes/JwtDto.html","title":"class - JwtDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for JWT tokens.\nContains access and refresh tokens along with their expiration dates and user information.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessToken\n                            \n                            \n                                    \n                                atExp\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                rtExp\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:103\n                        \n                    \n\n            \n                \n                    The access token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        atExp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform(TransformUtils.dateToTime)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:115\n                        \n                    \n\n            \n                \n                    The expiration date of the access token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:109\n                        \n                    \n\n            \n                \n                    The refresh token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rtExp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform(TransformUtils.dateToTime)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:121\n                        \n                    \n\n            \n                \n                    The expiration date of the refresh token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:97\n                        \n                    \n\n            \n                \n                    The user-data object.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIP, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\nimport { Expose, Transform, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common\";\nimport { UserDto } from \"../user/user.types\";\nimport { TransformUtils } from \"../../shared/utils/transform.utils\";\nimport { AuthService } from \"./auth.constants\";\n\n/**\n * Data transfer object for login payload.\n * Contains user login information required for authentication.\n */\nexport class LoginPayload {\n  /**\n   * The login of the user.\n   * @example ```typescript\n   * \"admin\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  login: string;\n\n  /**\n   * The password of the user.\n   * @example ```typescript\n   * \"P@ssw0rd!\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  /**\n   * The IP address of the user.\n   * Optional.\n   * @example ```typescript\n   * \"192.168.0.1\"\n   */\n  @IsIP()\n  @IsOptional()\n  ipAddress: string;\n\n  /**\n   * The ID of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaId?: string;\n\n  /**\n   * The payload of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaPayload?: string;\n}\n\n/**\n * Data transfer object for token exchange payload.\n * Contains the token to be exchanged for a new token pair JwtDto.\n */\nexport class ExchangeTokenPayload {\n  /**\n   * The refresh token to be exchanged.\n   */\n  @IsString()\n  @IsOptional()\n  token: string;\n}\n\n/**\n * Data transfer object for JWT tokens.\n * Contains access and refresh tokens along with their expiration dates and user information.\n */\nexport class JwtDto {\n  /**\n   * The user-data object.\n   */\n  @Expose()\n  @Type(() => UserDto)\n  user: UserDto;\n\n  /**\n   * The access token.\n   */\n  @Expose()\n  accessToken: string;\n\n  /**\n   * The refresh token.\n   */\n  @Expose()\n  refreshToken: string;\n\n  /**\n   * The expiration date of the access token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  atExp: Date;\n\n  /**\n   * The expiration date of the refresh token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  rtExp: Date;\n}\n\n/**\n * Options for configuring the authentication module.\n * @property service - The authentication service class.\n */\nexport type AuthModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Language.html":{"url":"interfaces/Language.html","title":"interface - Language","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Language\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface represents a language entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Media } from \"../../../common/media/media.types\";\n\n/**\n * Interface represents a language entity.\n */\nexport interface Language {\n  id: string;\n  name: string;\n  icon: Media;\n}\n/**\n * Interface represents a localized string entity.\n */\nexport interface LocalizedString {\n  id: number;\n  code: string;\n  lang: Language;\n  value: string;\n}\n\n/**\n * Interface represents a localized media entity.\n */\nexport interface LocalizedMedia {\n  id: number;\n  code: string;\n  lang: Language;\n  value: Media;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/LanguageEntity.html":{"url":"entities/LanguageEntity.html","title":"entity - LanguageEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  LanguageEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/entity/language.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the system languages\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/language.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/language.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/language.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/language.entity.ts:36\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Column, Entity, Index, ManyToOne, PrimaryColumn } from \"typeorm\";\nimport { MediaEntity } from \"../../../../common/media/entity/media.entity\";\nimport { Language } from \"../locale.types\";\n\n/**\n * The entity stores the system languages\n */\n@Entity(\"languages\")\nexport class LanguageEntity implements Language {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  id: string;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  name: string;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  icon: MediaEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LiteAuthGuard.html":{"url":"injectables/LiteAuthGuard.html","title":"injectable - LiteAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LiteAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/guards/lite-auth.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                An authentication guard that extends AbstractAuthGuard, used for lightweight authentication without user fetching.\n\n            \n\n            \n                Extends\n            \n            \n                            AbstractAuthGuard\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                fetchUser\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, userService: UserService, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/guards/lite-auth.guard.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        fetchUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in lib/shared/guards/lite-auth.guard.ts:29\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { AbstractAuthGuard } from \"./abstract-auth.guard\";\nimport { LOGGER } from \"../modules/log/log.constants\";\nimport { UserService } from \"../../common/user/user.types\";\nimport { CacheService } from \"../modules/cache/cache.types\";\n\n/**\n * @class LiteAuthGuard\n * An authentication guard that extends AbstractAuthGuard, used for lightweight authentication without user fetching.\n */\n@Injectable()\nexport class LiteAuthGuard extends AbstractAuthGuard {\n  protected fetchUser = false;\n\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    protected readonly userService: UserService,\n    protected readonly cacheService: CacheService,\n  ) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocaleModule.html":{"url":"modules/LocaleModule.html","title":"module - LocaleModule","body":"\n                   \n\n\n\n\n    Modules\n    LocaleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocaleModule\n\n\n\ncluster_LocaleModule_exports\n\n\n\ncluster_LocaleModule_providers\n\n\n\n\nLocaleService \n\nLocaleService \n\n\n\nLocaleModule\n\nLocaleModule\n\nLocaleService  -->\n\nLocaleModule->LocaleService \n\n\n\n\n\nLocaleService\n\nLocaleService\n\nLocaleModule -->\n\nLocaleService->LocaleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides services and configurations for handling localization.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LocaleService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LocaleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { LanguageEntity } from \"./entity/language.entity\";\nimport { LocalizedStringEntity } from \"./entity/localized-string.entity\";\nimport { LocalizedMediaEntity } from \"./entity/localized-media.entity\";\nimport { LocaleService } from \"./locale.service\";\n\n/**\n * A module that provides services and configurations for handling localization.\n */\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      LanguageEntity,\n      LocalizedStringEntity,\n      LocalizedMediaEntity,\n    ]),\n  ],\n  providers: [LocaleService],\n  exports: [LocaleService],\n})\nexport class LocaleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocaleService.html":{"url":"injectables/LocaleService.html","title":"injectable - LocaleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocaleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for handling localization operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLocalizedStrings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(languageRep: Repository, localizedStringRep: Repository, localizedMediaRep: Repository)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/locale/locale.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        languageRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localizedStringRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localizedMediaRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createLocalizedStrings\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLocalizedStrings(value: string, code?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/locale/locale.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Creates localized strings for all available languages.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to be localized.\n\n\n                                            \n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nAn optional code to be used for the localized strings.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to an array of LocalizedStringEntity objects.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { LanguageEntity } from \"./entity/language.entity\";\nimport { LocalizedStringEntity } from \"./entity/localized-string.entity\";\nimport { LocalizedMediaEntity } from \"./entity/localized-media.entity\";\n\n/**\n * Service for handling localization operations.\n */\n@Injectable()\nexport class LocaleService {\n  constructor(\n    @InjectRepository(LanguageEntity)\n    private readonly languageRep: Repository,\n    @InjectRepository(LocalizedStringEntity)\n    private readonly localizedStringRep: Repository,\n    @InjectRepository(LocalizedMediaEntity)\n    private readonly localizedMediaRep: Repository,\n  ) {}\n\n  /**\n   * Creates localized strings for all available languages.\n   * @param value - The value to be localized.\n   * @param code - An optional code to be used for the localized strings.\n   * @returns A promise that resolves to an array of LocalizedStringEntity objects.\n   */\n  async createLocalizedStrings(\n    value: string,\n    code?: string,\n  ): Promise {\n    const languages = await this.languageRep.find();\n    const res: LocalizedStringEntity[] = [];\n    for (const language of languages) {\n      const ls = new LocalizedStringEntity();\n      ls.lang = language;\n      ls.value = value;\n      if (code) {\n        ls.code = `${code}_${language.id}`;\n        const existed = await this.localizedStringRep.findOne({\n          where: { code: ls.code },\n        });\n        ls.id = existed?.id;\n      }\n      await this.localizedStringRep.save(ls);\n      res.push(ls);\n    }\n    return res;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocaleSubscriber.html":{"url":"injectables/LocaleSubscriber.html","title":"injectable - LocaleSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocaleSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/entity/locale-subscriber.ts\n        \n\n\n            \n                Description\n            \n            \n                LocaleSubscriber is an EntitySubscriber that listens to removal events\nfor entities that have relationships with LocalizedStringEntity or LocalizedMediaEntity.\nWhen such an entity is removed, LocaleSubscriber will also remove\nthe associated LocalizedStringEntity or LocalizedMediaEntity instances.\nExample :class MyEntity {\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  firstName: LocalizedStringEntity[];\n}const myEntity = new MyEntity();\nentityManager.remove(myEntity); // will trigger LocaleSubscriber to remove related LocalizedStringEntity instances\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                afterRemove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/locale/entity/locale-subscriber.ts:47\n                            \n                        \n\n                \n                    \n                            Constructs a new LocaleSubscriber instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Logger instance used for logging messages.\n\n\n                                                        \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe DataSource instance used to access the connection and its subscribers.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        afterRemove\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterRemove(event: RemoveEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/locale/entity/locale-subscriber.ts:69\n                        \n                    \n\n\n            \n                \n                        The afterRemove event is triggered when an entity is removed.\nIf the removed entity has relationships with LocalizedStringEntity instances,\nthe related LocalizedStringEntity instances will also be removed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        RemoveEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe RemoveEvent instance containing information about the removed entity.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves when the removal of related LocalizedStringEntity instances is complete.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  DataSource,\n  EntitySubscriberInterface,\n  EventSubscriber,\n  RemoveEvent,\n} from \"typeorm\";\nimport { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { InjectDataSource } from \"@nestjs/typeorm\";\nimport { LOGGER } from \"../../log/log.constants\";\nimport { LocalizedStringEntity } from \"./localized-string.entity\";\nimport { LocalizedMediaEntity } from \"./localized-media.entity\";\n\n/**\n * LocaleSubscriber is an EntitySubscriber that listens to removal events\n * for entities that have relationships with LocalizedStringEntity or LocalizedMediaEntity.\n * When such an entity is removed, LocaleSubscriber will also remove\n * the associated LocalizedStringEntity or LocalizedMediaEntity instances.\n *\n * @example\n * class MyEntity {\n *   @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n *   @JoinTable()\n *   firstName: LocalizedStringEntity[];\n * }\n *\n * const myEntity = new MyEntity();\n * entityManager.remove(myEntity); // will trigger LocaleSubscriber to remove related LocalizedStringEntity instances\n */\n@Injectable()\n@EventSubscriber()\nexport class LocaleSubscriber implements EntitySubscriberInterface {\n  /**\n   * Constructs a new LocaleSubscriber instance.\n   *\n   * @param logger - The Logger instance used for logging messages.\n   * @param dataSource - The DataSource instance used to access the connection and its subscribers.\n   */\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    @InjectDataSource() private readonly dataSource: DataSource,\n  ) {\n    dataSource.manager.connection.subscribers.push(this);\n  }\n\n  /**\n   * The afterRemove event is triggered when an entity is removed.\n   * If the removed entity has relationships with LocalizedStringEntity instances,\n   * the related LocalizedStringEntity instances will also be removed.\n   *\n   * @param event - The RemoveEvent instance containing information about the removed entity.\n   * @returns A Promise that resolves when the removal of related LocalizedStringEntity instances is complete.\n   */\n  async afterRemove(event: RemoveEvent): Promise {\n    const entity = event.entity;\n    if (!entity) {\n      return;\n    }\n    const localizedStringProperties = Object.values(entity).filter((value) => {\n      return (\n        Array.isArray(value) &&\n        value.length > 0 &&\n        value[0] instanceof LocalizedStringEntity\n      );\n    });\n    if (localizedStringProperties.length > 0) {\n      this.logger.verbose(\n        `Removing related LocalizedStringEntity entities for ${entity.constructor.name} with ID ${event.entityId}`,\n      );\n      for (const relatedEntities of localizedStringProperties as LocalizedStringEntity[][]) {\n        for (const relatedEntity of relatedEntities) {\n          this.logger.verbose(\n            `Removing LocalizedStringEntity with ID ${relatedEntity.id}`,\n          );\n          await event.manager.remove(relatedEntity);\n          this.logger.verbose(\n            `LocalizedStringEntity with ID ${relatedEntity.id} removed`,\n          );\n        }\n      }\n    }\n\n    const localizedMediaProperties = Object.values(entity).filter((value) => {\n      return (\n        Array.isArray(value) &&\n        value.length > 0 &&\n        value[0] instanceof LocalizedMediaEntity\n      );\n    });\n    if (localizedMediaProperties.length > 0) {\n      this.logger.verbose(\n        `Removing related LocalizedMediaEntity entities for ${entity.constructor.name} with ID ${event.entityId}`,\n      );\n      for (const relatedEntities of localizedMediaProperties as LocalizedMediaEntity[][]) {\n        for (const relatedEntity of relatedEntities) {\n          this.logger.verbose(\n            `Removing LocalizedMediaEntity with ID ${relatedEntity.id}`,\n          );\n          await event.manager.remove(relatedEntity);\n          this.logger.verbose(\n            `LocalizedMediaEntity with ID ${relatedEntity.id} removed`,\n          );\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalizedMedia.html":{"url":"interfaces/LocalizedMedia.html","title":"interface - LocalizedMedia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LocalizedMedia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface represents a localized media entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lang\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lang:         Language\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Language\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Media } from \"../../../common/media/media.types\";\n\n/**\n * Interface represents a language entity.\n */\nexport interface Language {\n  id: string;\n  name: string;\n  icon: Media;\n}\n/**\n * Interface represents a localized string entity.\n */\nexport interface LocalizedString {\n  id: number;\n  code: string;\n  lang: Language;\n  value: string;\n}\n\n/**\n * Interface represents a localized media entity.\n */\nexport interface LocalizedMedia {\n  id: number;\n  code: string;\n  lang: Language;\n  value: Media;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/LocalizedMediaEntity.html":{"url":"entities/LocalizedMediaEntity.html","title":"entity - LocalizedMediaEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  LocalizedMediaEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/entity/localized-media.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores internationalized media objects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lang\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-media.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-media.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LanguageEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-media.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-media.entity.ts:44\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { LocalizedMedia } from \"../locale.types\";\nimport { LanguageEntity } from \"./language.entity\";\nimport { MediaEntity } from \"../../../../common/media/entity/media.entity\";\n\n/**\n * The entity stores internationalized media objects\n */\n@Entity(\"localized_medias\")\nexport class LocalizedMediaEntity implements LocalizedMedia {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: false })\n  code: string;\n\n  @ManyToOne(() => LanguageEntity, (t) => t.id)\n  lang: LanguageEntity;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  value: MediaEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalizedString.html":{"url":"interfaces/LocalizedString.html","title":"interface - LocalizedString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LocalizedString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface represents a localized string entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lang\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lang:         Language\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Language\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Media } from \"../../../common/media/media.types\";\n\n/**\n * Interface represents a language entity.\n */\nexport interface Language {\n  id: string;\n  name: string;\n  icon: Media;\n}\n/**\n * Interface represents a localized string entity.\n */\nexport interface LocalizedString {\n  id: number;\n  code: string;\n  lang: Language;\n  value: string;\n}\n\n/**\n * Interface represents a localized media entity.\n */\nexport interface LocalizedMedia {\n  id: number;\n  code: string;\n  lang: Language;\n  value: Media;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/LocalizedStringEntity.html":{"url":"entities/LocalizedStringEntity.html","title":"entity - LocalizedStringEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  LocalizedStringEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/entity/localized-string.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the translations in itself\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lang\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-string.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-string.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LanguageEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-string.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-string.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { LocalizedString } from \"../locale.types\";\nimport { LanguageEntity } from \"./language.entity\";\n\n/**\n * The entity stores the translations in itself\n */\n@Entity(\"localized_strings\")\nexport class LocalizedStringEntity implements LocalizedString {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @ManyToOne(() => LanguageEntity, (t) => t.id)\n  lang: LanguageEntity;\n\n  @Column(\"text\", { nullable: false })\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LogModule.html":{"url":"modules/LogModule.html","title":"module - LogModule","body":"\n                   \n\n\n\n\n    Modules\n    LogModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/log/log.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides logging functionality using the LogService.\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { LogService } from \"./log.service\";\nimport { LOGGER } from \"./log.constants\";\n\n/**\n * A module that provides logging functionality using the LogService.\n */\n@Module({\n  providers: [\n    {\n      provide: LOGGER,\n      useClass: LogService,\n    },\n  ],\n  exports: [LOGGER],\n})\nexport class LogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogService.html":{"url":"classes/LogService.html","title":"class - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/log/log.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Log service that extends the built-in Nest Logger, providing additional functionality and context.\n\n            \n\n            \n                Extends\n            \n            \n                        Logger\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                    Private\n                                getCallingContext\n                            \n                            \n                                log\n                            \n                            \n                                    Private\n                                patchFromCtx\n                            \n                            \n                                    Private\n                                prepareMessage\n                            \n                            \n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:54\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Logs a debug message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe debug message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAdditional data to log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string, trace?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Logs an error message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error message.\n\n\n                                            \n                                        \n                                        \n                                                trace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional stack trace.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getCallingContext\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCallingContext()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:100\n                        \n                    \n\n\n            \n                \n                        Retrieves the calling context (file path, method name, line number) from the stack trace.\n\n\n                        \n                            Returns :     { filePath: any; methodName: any; lineNumber: any; }\n\n                        \n                            \n                                An object containing the file path, method name, and line number.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:14\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Logs a message at the log level.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message to log.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAdditional data to log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        patchFromCtx\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchFromCtx(ctx: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Patches the calling context for display in log messages.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe calling context object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A formatted string representing the calling context.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        prepareMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    prepareMessage(message: string, data?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:82\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Prepares the log message by combining the main message with additional data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe main log message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nAdditional data to log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The prepared log message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:44\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Logs a verbose message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe verbose message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAdditional data to log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:34\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Logs a warning message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe warning message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAdditional data to log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from \"@nestjs/common\";\nimport { ObjectUtils } from \"../../utils/object.utils\";\nimport inspect = ObjectUtils.inspect;\n\n/**\n * Log service that extends the built-in Nest Logger, providing additional functionality and context.\n */\nexport class LogService extends Logger {\n  /**\n   * Logs a message at the log level.\n   * @param message - The message to log.\n   * @param data - Additional data to log.\n   */\n  log(message: string, data: T) {\n    const ctx = this.getCallingContext();\n    super.log(this.prepareMessage(message, data), ctx.methodName);\n  }\n\n  /**\n   * Logs an error message.\n   * @param message - The error message.\n   * @param trace - Optional stack trace.\n   */\n  error(message: string, trace?: string) {\n    const ctx = this.getCallingContext();\n    super.error(this.prepareMessage(message), trace, this.patchFromCtx(ctx));\n  }\n\n  /**\n   * Logs a warning message.\n   * @param message - The warning message.\n   * @param data - Additional data to log.\n   */\n  warn(message: string, data: T) {\n    const ctx = this.getCallingContext();\n    super.warn(this.prepareMessage(message, data), this.patchFromCtx(ctx));\n  }\n\n  /**\n   * Logs a verbose message.\n   * @param message - The verbose message.\n   * @param data - Additional data to log.\n   */\n  verbose(message: string, data: T) {\n    const ctx = this.getCallingContext();\n    super.verbose(this.prepareMessage(message, data), this.patchFromCtx(ctx));\n  }\n\n  /**\n   * Logs a debug message.\n   * @param message - The debug message.\n   * @param data - Additional data to log.\n   */\n  debug(message: string, data: T) {\n    const ctx = this.getCallingContext();\n    super.debug(this.prepareMessage(message, data), this.patchFromCtx(ctx));\n  }\n\n  /**\n   * Patches the calling context for display in log messages.\n   * @param ctx - The calling context object.\n   * @returns A formatted string representing the calling context.\n   */\n  private patchFromCtx(ctx: {\n    filePath: string;\n    methodName: string;\n    lineNumber: string;\n  }) {\n    let p = `${ctx?.filePath}:${ctx?.lineNumber} > ${ctx?.methodName}`;\n    if (p === \"undefined:undefined > undefined\") {\n      p = \"unknown\";\n    }\n    return p;\n  }\n\n  /**\n   * Prepares the log message by combining the main message with additional data.\n   * @param message - The main log message.\n   * @param data - Additional data to log.\n   * @returns The prepared log message.\n   */\n  private prepareMessage(message: string, data?: T) {\n    let m = inspect(message);\n    if (\n      (m.startsWith(`'`) && m.endsWith(`'`)) ||\n      (m.startsWith(`\"`) && m.endsWith(`\"`))\n    ) {\n      m = m.substring(1, m.length - 1);\n    }\n    if (data) {\n      m += inspect(data);\n    }\n    return m;\n  }\n\n  /**\n   * Retrieves the calling context (file path, method name, line number) from the stack trace.\n   * @returns An object containing the file path, method name, and line number.\n   */\n  private getCallingContext() {\n    const stackTrace = new Error().stack;\n    if (stackTrace) {\n      const lines = stackTrace.split(\"\\n\");\n      // The calling context is located in the fourth line of the stack trace\n      if (lines.length >= 4) {\n        const matches = lines[3].match(/at\\s+(.+?)\\s+\\((.+):(\\d+):\\d+\\)/);\n        if (matches && matches.length > 3) {\n          const filePath = matches[2].split(\"/\").slice(-2).join(\"/\");\n          const methodName = matches[1];\n          const lineNumber = matches[3];\n          return { filePath, methodName, lineNumber };\n        }\n      }\n    }\n    return {\n      filePath: \"Unknown path\",\n      methodName: \"Anonymous context\",\n      lineNumber: \"Unknown line\",\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginPayload.html":{"url":"classes/LoginPayload.html","title":"class - LoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for login payload.\nContains user login information required for authentication.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                captchaId\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                captchaPayload\n                            \n                            \n                                    \n                                    \n                                ipAddress\n                            \n                            \n                                    \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        captchaId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:63\n                        \n                    \n\n            \n                \n                    The ID of the captcha.\nOptional.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        captchaPayload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:71\n                        \n                    \n\n            \n                \n                    The payload of the captcha.\nOptional.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ipAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsIP()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:55\n                        \n                    \n\n            \n                \n                    The IP address of the user.\nOptional.\nExample :\"192.168.0.1\"\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:36\n                        \n                    \n\n            \n                \n                    The login of the user.\nExample :\"admin\"\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:45\n                        \n                    \n\n            \n                \n                    The password of the user.\nExample :\"P@ssw0rd!\"\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIP, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\nimport { Expose, Transform, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common\";\nimport { UserDto } from \"../user/user.types\";\nimport { TransformUtils } from \"../../shared/utils/transform.utils\";\nimport { AuthService } from \"./auth.constants\";\n\n/**\n * Data transfer object for login payload.\n * Contains user login information required for authentication.\n */\nexport class LoginPayload {\n  /**\n   * The login of the user.\n   * @example ```typescript\n   * \"admin\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  login: string;\n\n  /**\n   * The password of the user.\n   * @example ```typescript\n   * \"P@ssw0rd!\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  /**\n   * The IP address of the user.\n   * Optional.\n   * @example ```typescript\n   * \"192.168.0.1\"\n   */\n  @IsIP()\n  @IsOptional()\n  ipAddress: string;\n\n  /**\n   * The ID of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaId?: string;\n\n  /**\n   * The payload of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaPayload?: string;\n}\n\n/**\n * Data transfer object for token exchange payload.\n * Contains the token to be exchanged for a new token pair JwtDto.\n */\nexport class ExchangeTokenPayload {\n  /**\n   * The refresh token to be exchanged.\n   */\n  @IsString()\n  @IsOptional()\n  token: string;\n}\n\n/**\n * Data transfer object for JWT tokens.\n * Contains access and refresh tokens along with their expiration dates and user information.\n */\nexport class JwtDto {\n  /**\n   * The user-data object.\n   */\n  @Expose()\n  @Type(() => UserDto)\n  user: UserDto;\n\n  /**\n   * The access token.\n   */\n  @Expose()\n  accessToken: string;\n\n  /**\n   * The refresh token.\n   */\n  @Expose()\n  refreshToken: string;\n\n  /**\n   * The expiration date of the access token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  atExp: Date;\n\n  /**\n   * The expiration date of the refresh token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  rtExp: Date;\n}\n\n/**\n * Options for configuring the authentication module.\n * @property service - The authentication service class.\n */\nexport type AuthModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Media.html":{"url":"interfaces/Media.html","title":"interface - Media","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Media\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a media object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            files\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        files\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        files:     MediaFile[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MediaFile[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         FileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         MediaType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MediaType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaDto.html":{"url":"classes/MediaDto.html","title":"class - MediaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for media.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Media\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                files\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                metadata\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                tsCreated\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:144\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaFile[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:141\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:158\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedString[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:147\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:161\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:151\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaEntity.html":{"url":"entities/MediaEntity.html","title":"entity - MediaEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores media objects in itself\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                files\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, f => f.media, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaTypeEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, type => type.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinColumn,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  TableInheritance,\n} from \"typeorm\";\nimport { MediaTypeEntity } from \"./media-type.entity\";\nimport { MediaFileEntity } from \"./media-file.entity\";\nimport { Media } from \"../media.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { FileMetadataEntity } from \"../../file/entity/file-metadata.entity\";\n\n/**\n * The entity stores media objects in itself\n */\n@Entity(\"medias\")\n@TableInheritance({\n  column: { type: \"varchar\", name: \"class\", nullable: true },\n})\nexport class MediaEntity implements Media {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToOne(() => MediaTypeEntity, (type) => type.code)\n  type: MediaTypeEntity;\n\n  @OneToMany(() => MediaFileEntity, (f) => f.media, { cascade: true })\n  files: MediaFileEntity[];\n\n  @OneToOne(() => FileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  metadata: FileMetadataEntity;\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaExt.html":{"url":"interfaces/MediaExt.html","title":"interface - MediaExt","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaExt\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a media extension.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaExtEntity.html":{"url":"entities/MediaExtEntity.html","title":"entity - MediaExtEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaExtEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media-ext.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores extensions of media objects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-ext.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-ext.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryColumn } from \"typeorm\";\nimport { MediaExt } from \"../media.types\";\n\n/**\n * The entity stores extensions of media objects\n */\n@Entity(\"medias_ext\")\nexport class MediaExtEntity implements MediaExt {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaFile.html":{"url":"interfaces/MediaFile.html","title":"interface - MediaFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a media file.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            media\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         MediaFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MediaFormat\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        media\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        media:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaFileDto.html":{"url":"classes/MediaFileDto.html","title":"class - MediaFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for media file.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MediaFile\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                format\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                media\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:172\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFormatDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:176\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:179\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:169\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        media\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Media\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:182\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:185\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:188\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:191\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaFileEntity.html":{"url":"entities/MediaFileEntity.html","title":"entity - MediaFileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaFileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media-file.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores media object files (links)\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                format\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                media\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFormatEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, type => type.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('smallint', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        media\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('smallint', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { MediaEntity } from \"./media.entity\";\nimport { MediaFile } from \"../media.types\";\nimport { MediaFormatEntity } from \"./media-format.entity\";\n\n/**\n * The entity stores media object files (links)\n */\n@Entity(\"medias_files\")\nexport class MediaFileEntity implements MediaFile {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  name: string;\n\n  @Column(\"smallint\", { nullable: true })\n  width: number;\n\n  @Column(\"smallint\", { nullable: true })\n  height: number;\n\n  @Column(\"int\", { nullable: true })\n  size: number;\n\n  @ManyToOne(() => MediaFormatEntity, (type) => type.code)\n  format: MediaFormatEntity;\n\n  @ManyToOne(() => MediaEntity)\n  media: MediaEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaFormat.html":{"url":"interfaces/MediaFormat.html","title":"interface - MediaFormat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaFormat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a media format.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaFormatDto.html":{"url":"classes/MediaFormatDto.html","title":"class - MediaFormatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaFormatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for media format.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MediaFormat\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:133\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaFormatEntity.html":{"url":"entities/MediaFormatEntity.html","title":"entity - MediaFormatEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaFormatEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media-format.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the formats of media objects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-format.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('smallint', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-format.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-format.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('smallint', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-format.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryColumn } from \"typeorm\";\nimport { MediaFormat } from \"../media.types\";\n\n/**\n * The entity stores the formats of media objects\n */\n@Entity(\"medias_format\")\nexport class MediaFormatEntity implements MediaFormat {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  name: string;\n\n  @Column(\"smallint\", { nullable: true })\n  width: string;\n\n  @Column(\"smallint\", { nullable: true })\n  height: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaManager.html":{"url":"classes/MediaManager.html","title":"class - MediaManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing the media management service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createOrUpdateMedia\n                            \n                            \n                                    Abstract\n                                findByCode\n                            \n                            \n                                    Abstract\n                                findMediaById\n                            \n                            \n                                    Abstract\n                                findPrivateById\n                            \n                            \n                                    Abstract\n                                findPublicById\n                            \n                            \n                                    Abstract\n                                getMediaPath\n                            \n                            \n                                    Abstract\n                                recreate\n                            \n                            \n                                    Abstract\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createOrUpdateMedia\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrUpdateMedia(file: Buffer, type: string, code?: string, existedEntityId?: number, name?: LocalizedString[])\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:213\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                existedEntityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            LocalizedString[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:198\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findMediaById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMediaById(id: number, privateMedia?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:200\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                privateMedia\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findPrivateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPrivateById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:207\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findPublicById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPublicById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:205\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getMediaPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMediaPath(media: Media, format?: string, webpSupport?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:221\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                media\n                                            \n                                                            Media\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                format\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                webpSupport\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        recreate\n                        \n                    \n                \n            \n            \n                \n                        \n                    recreate(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:211\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:209\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MediaModule.html":{"url":"modules/MediaModule.html","title":"module - MediaModule","body":"\n                   \n\n\n\n\n    Modules\n    MediaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/media/media.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for management media system.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: MediaModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.module.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            MediaModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      service: MediaService,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { MediaService } from \"./media.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { MediaEntity } from \"./entity/media.entity\";\nimport { MediaTypeEntity } from \"./entity/media-type.entity\";\nimport { MediaFileEntity } from \"./entity/media-file.entity\";\nimport { MediaFormatEntity } from \"./entity/media-format.entity\";\nimport { MediaManager, MediaModuleOptions } from \"./media.types\";\nimport { FileModule } from \"../file/file.module\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\n\n/**\n * Module for management media system.\n */\n@Module({})\nexport class MediaModule {\n  static forRoot(\n    options: MediaModuleOptions = {\n      service: MediaService,\n    },\n  ): DynamicModule {\n    return {\n      module: MediaModule,\n      imports: [\n        TypeOrmModule.forFeature([\n          MediaEntity,\n          MediaTypeEntity,\n          MediaFileEntity,\n          MediaFormatEntity,\n        ]),\n        FileModule.forRoot(),\n        LogModule,\n        CacheModule,\n      ],\n      providers: [\n        {\n          provide: MediaManager,\n          useClass: options.service,\n        },\n      ],\n      exports: [MediaManager],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaType.html":{"url":"interfaces/MediaType.html","title":"interface - MediaType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a media type.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            formats\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            private\n                                        \n                                \n                                \n                                        \n                                            quality\n                                        \n                                \n                                \n                                        \n                                            vp6\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         MediaExt\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MediaExt\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formats\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formats:     MediaFormat[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MediaFormat[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quality\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quality:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vp6\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vp6:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaTypeDto.html":{"url":"classes/MediaTypeDto.html","title":"class - MediaTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for media type.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MediaType\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                ext\n                            \n                            \n                                    \n                                    \n                                formats\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                private\n                            \n                            \n                                    \n                                quality\n                            \n                            \n                                    \n                                vp6\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaExt\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        formats\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFormatDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        vp6\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:113\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaTypeEntity.html":{"url":"entities/MediaTypeEntity.html","title":"entity - MediaTypeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaTypeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media-type.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the types of media objects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                ext\n                            \n                            \n                                    \n                                    \n                                formats\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                private\n                            \n                            \n                                    \n                                quality\n                            \n                            \n                                    \n                                vp6\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaExtEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, e => e.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        formats\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFormatEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        vp6\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { MediaFormatEntity } from \"./media-format.entity\";\nimport { MediaType } from \"../media.types\";\nimport { MediaExtEntity } from \"./media-ext.entity\";\n\n/**\n * The entity stores the types of media objects\n */\n@Entity(\"medias_types\")\nexport class MediaTypeEntity implements MediaType {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  name: string;\n\n  @Column(\"boolean\", { default: false })\n  vp6: boolean;\n\n  @Column(\"boolean\", { default: false })\n  private: boolean;\n\n  @Column(\"int\", { nullable: true })\n  quality: number;\n\n  @ManyToOne(() => MediaExtEntity, (e) => e.code)\n  ext: MediaExtEntity;\n\n  @ManyToMany(() => MediaFormatEntity)\n  @JoinTable()\n  formats: MediaFormatEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageBus.html":{"url":"interfaces/MessageBus.html","title":"interface - MessageBus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageBus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/ms-client/ms-client.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface defining the contract for the message bus.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        dispatch\n                                    \n                                \n                                \n                                    \n                                        emit\n                                    \n                                \n                                \n                                    \n                                        send\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dispatch\n                        \n                    \n                \n            \n            \n                \ndispatch(pattern: any, data?: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.types.ts:30\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emit\n                        \n                    \n                \n            \n            \n                \nemit(pattern: any, data?: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.types.ts:42\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        send\n                        \n                    \n                \n            \n            \n                \nsend(pattern: any, data?: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.types.ts:36\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\n\n/**\n * Type definition for microservices client options.\n */\nexport type MsClientOptions = {\n  timeout: number;\n};\n\n/**\n * Interface defining the contract for the message bus.\n */\nexport interface MessageBus {\n  dispatch(\n    pattern: any,\n    data?: TInput,\n    opts?: MsClientOptions,\n  ): Promise;\n\n  send(\n    pattern: any,\n    data?: TInput,\n    opts?: MsClientOptions,\n  ): Observable;\n\n  emit(\n    pattern: any,\n    data?: TInput,\n    opts?: MsClientOptions,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessagesBroker.html":{"url":"interfaces/MessagesBroker.html","title":"interface - MessagesBroker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessagesBroker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/messages-broker/messages-broker.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface defining the contract for message brokering.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        emit\n                                    \n                                \n                                \n                                    \n                                        subscribe\n                                    \n                                \n                                \n                                    \n                                        unsubscribe\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        emit\n                        \n                    \n                \n            \n            \n                \nemit(chanel: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.types.ts:26\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Emits a message to a specific channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to emit the message to.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to emit.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(chanel: string, handler: (data: T) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.types.ts:33\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Subscribes to a specific channel with a handler function.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to subscribe to.\n\n\n                                            \n                                        \n                                        \n                                                handler\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe handler function to handle the data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe(chanel: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.types.ts:39\n                        \n                    \n\n\n            \n                \n                        Unsubscribes from a specific channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to unsubscribe from.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface MessagesBroker {\n  /**\n   * Emits a message to a specific channel.\n   * @param chanel - The channel to emit the message to.\n   * @param data - The data to emit.\n   */\n  emit(chanel: string, data: T): Promise;\n\n  /**\n   * Subscribes to a specific channel with a handler function.\n   * @param chanel - The channel to subscribe to.\n   * @param handler - The handler function to handle the data.\n   */\n  subscribe(chanel: string, handler: (data: T) => void);\n\n  /**\n   * Unsubscribes from a specific channel.\n   * @param chanel - The channel to unsubscribe from.\n   */\n  unsubscribe(chanel: string);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessagesBrokerModule.html":{"url":"modules/MessagesBrokerModule.html","title":"module - MessagesBrokerModule","body":"\n                   \n\n\n\n\n    Modules\n    MessagesBrokerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MessagesBrokerModule\n\n\n\ncluster_MessagesBrokerModule_imports\n\n\n\n\nRedisModule\n\nRedisModule\n\n\n\nMessagesBrokerModule\n\nMessagesBrokerModule\n\nMessagesBrokerModule -->\n\nRedisModule->MessagesBrokerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/messages-broker/messages-broker.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides message brokering functionality using Redis.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            RedisModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Logger, Module } from \"@nestjs/common\";\nimport { MESSAGES_BROKER } from \"./messages-broker.constants\";\nimport { RedisModule } from \"../cache/redis.module\";\nimport { LogModule } from \"../log/log.module\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\nimport { MessagesBrokerService } from \"./messages-broker.service\";\n\n/**\n * A module that provides message brokering functionality using Redis.\n */\n@Module({\n  imports: [\n    RedisModule.forRootAsync({\n      imports: [LogModule],\n      inject: [LOGGER],\n      useFactory: (logger: Logger) => {\n        EnvLoader.loadEnvironment(logger);\n        return {\n          config: {\n            host: process.env.REDIS_HOST,\n            port: parseInt(process.env.REDIS_PORT),\n            db: parseInt(process.env.REDIS_DB),\n            username: process.env.REDIS_USER,\n            password: process.env.REDIS_PASSWORD,\n          },\n        };\n      },\n    }),\n  ],\n  providers: [\n    {\n      provide: MESSAGES_BROKER,\n      useClass: MessagesBrokerService,\n    },\n  ],\n  exports: [MESSAGES_BROKER],\n})\nexport class MessagesBrokerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessagesBrokerService.html":{"url":"injectables/MessagesBrokerService.html","title":"injectable - MessagesBrokerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessagesBrokerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/messages-broker/messages-broker.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A service that implements the MessagesBroker interface for message brokering using Redis.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                subClient\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscribers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                emit\n                            \n                            \n                                    Private\n                                safeDeSerialize\n                            \n                            \n                                    Private\n                                safeSerialize\n                            \n                            \n                                subscribe\n                            \n                            \n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pubClient: Redis)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pubClient\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        emit\n                        \n                    \n                \n            \n            \n                \n                        \n                    emit(chanel: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:47\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Emits a message to a specific channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to emit the message to.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to emit.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        safeDeSerialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    safeDeSerialize(data: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Safely deserializes a JSON string to an object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe JSON string to deserialize.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The deserialized object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        safeSerialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    safeSerialize(data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:75\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Safely serializes data to a JSON string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to serialize.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The serialized JSON string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(chanel: string, handler: (data: T) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:56\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Subscribes to a specific channel with a handler function.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to subscribe to.\n\n\n                                            \n                                        \n                                        \n                                                handler\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe handler function to handle the data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe(chanel: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Unsubscribes from a specific channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to unsubscribe from.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Redis\n\n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscribers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@nestjs/common\";\nimport Redis from \"ioredis\";\nimport { MessagesBroker } from \"./messages-broker.types\";\nimport { REDIS_CLIENT } from \"../cache/cache.constants\";\n\n/**\n * A service that implements the MessagesBroker interface for message brokering using Redis.\n */\n@Injectable()\nexport class MessagesBrokerService implements MessagesBroker {\n  private readonly subClient: Redis;\n  private readonly subscribers: Map void> =\n    new Map();\n\n  constructor(@Inject(REDIS_CLIENT) private readonly pubClient: Redis) {\n    this.subClient = this.pubClient.duplicate();\n    this.subClient.on(\"message\", (chanel, data) => {\n      if (!this.subscribers.has(chanel)) {\n        return;\n      }\n      const fun = this.subscribers.get(chanel);\n      fun(this.safeDeSerialize(data));\n    });\n  }\n\n  /**\n   * Emits a message to a specific channel.\n   * @param chanel - The channel to emit the message to.\n   * @param data - The data to emit.\n   */\n  async emit(chanel: string, data: T) {\n    await this.pubClient.publish(chanel, this.safeSerialize(data));\n  }\n\n  /**\n   * Subscribes to a specific channel with a handler function.\n   * @param chanel - The channel to subscribe to.\n   * @param handler - The handler function to handle the data.\n   */\n  subscribe(chanel: string, handler: (data: T) => void) {\n    this.subClient.subscribe(chanel);\n    this.subscribers.set(chanel, handler);\n  }\n\n  /**\n   * Unsubscribes from a specific channel.\n   * @param chanel - The channel to unsubscribe from.\n   */\n  unsubscribe(chanel: string) {\n    this.subClient.unsubscribe(chanel);\n    this.subscribers.delete(chanel);\n  }\n\n  /**\n   * Safely serializes data to a JSON string.\n   * @param data - The data to serialize.\n   * @returns The serialized JSON string.\n   */\n  private safeSerialize(data: T) {\n    try {\n      return JSON.stringify(data);\n    } catch (error) {\n      return data.toString();\n    }\n  }\n\n  /**\n   * Safely deserializes a JSON string to an object.\n   * @param data - The JSON string to deserialize.\n   * @returns The deserialized object.\n   */\n  private safeDeSerialize(data: string) {\n    try {\n      return JSON.parse(data);\n    } catch (error) {\n      return data;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MsClient.html":{"url":"classes/MsClient.html","title":"class - MsClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MsClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/ms-client/ms-client.ts\n        \n\n\n            \n                Description\n            \n            \n                Microservices client for dispatching messages between microservices.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MessageBus\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dispatch\n                            \n                            \n                                emit\n                            \n                            \n                                    Private\n                                handleRequest\n                            \n                            \n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, proxy: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/ms-client/ms-client.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        proxy\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dispatch\n                        \n                    \n                \n            \n            \n                \ndispatch(pattern: any, data: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.ts:43\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n                        Dispatches a message with the given pattern and data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    Object()\n                                            \n\n                                            \n                                                    \nThe message data.\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nOptional configuration options for the client.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise resolving to the result of the dispatched message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emit\n                        \n                    \n                \n            \n            \n                \nemit(pattern: any, data: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.ts:80\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n                        Emits a message with the given pattern and data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message data.\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional configuration options for the client.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the result of the emitted message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRequest(source: Observable, pattern: any, data: any, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.ts:97\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Handles the request by logging and managing errors and timeouts.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                source\n                                            \n                                                        Observable\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe observable source.\n\n\n                                            \n                                        \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message data.\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional configuration options for the client.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the result.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        send\n                        \n                    \n                \n            \n            \n                \nsend(pattern: any, data: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.ts:64\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n                        Sends a message with the given pattern and data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message data.\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional configuration options for the client.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the result of the send message.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ClientProxy } from \"@nestjs/microservices\";\nimport { catchError, Observable, throwError, timeout } from \"rxjs\";\nimport { HttpException, HttpStatus, Inject, Logger } from \"@nestjs/common\";\nimport { ObjectUtils } from \"../../utils/object.utils\";\nimport { MessageBus, MsClientOptions } from \"./ms-client.types\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { MS_EXCEPTION_ID } from \"../../constants\";\nimport { MsException } from \"../../exceptions/ms.exception\";\nimport inspect = ObjectUtils.inspect;\n\n/**\n * Microservices client for dispatching messages between microservices.\n */\nexport class MsClient implements MessageBus {\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    private readonly proxy: ClientProxy,\n  ) {}\n\n  /**\n   * Dispatches a message with the given pattern and data.\n   * @param pattern - The message pattern.\n   * @param data - The message data.\n   * @param opts - Optional configuration options for the client.\n   * @returns A promise resolving to the result of the dispatched message.\n   */\n  dispatch(\n    pattern: any,\n    data: TInput = Object(),\n    opts?: MsClientOptions,\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      const source = this.proxy.send(pattern, data);\n      this.handleRequest(source, pattern, data, opts).subscribe({\n        next: (result) => resolve(result),\n        error: (error) => reject(error),\n      });\n    });\n  }\n\n  /**\n   * Sends a message with the given pattern and data.\n   * @param pattern - The message pattern.\n   * @param data - The message data.\n   * @param opts - Optional configuration options for the client.\n   * @returns An observable of the result of the send message.\n   */\n  send(\n    pattern: any,\n    data: TInput,\n    opts?: MsClientOptions,\n  ) {\n    const source = this.proxy.send(pattern, data);\n    return this.handleRequest(source, pattern, data, opts);\n  }\n\n  /**\n   * Emits a message with the given pattern and data.\n   * @param pattern - The message pattern.\n   * @param data - The message data.\n   * @param opts - Optional configuration options for the client.\n   * @returns An observable of the result of the emitted message.\n   */\n  emit(\n    pattern: any,\n    data: TInput,\n    opts?: MsClientOptions,\n  ) {\n    const source = this.proxy.emit(pattern, data);\n    return this.handleRequest(source, pattern, data, opts);\n  }\n\n  /**\n   * Handles the request by logging and managing errors and timeouts.\n   * @param source - The observable source.\n   * @param pattern - The message pattern.\n   * @param data - The message data.\n   * @param opts - Optional configuration options for the client.\n   * @returns An observable of the result.\n   */\n  private handleRequest(\n    source: Observable,\n    pattern: any,\n    data: any,\n    opts?: MsClientOptions,\n  ): Observable {\n    this.logger.debug(`Sending request with pattern: ${inspect(pattern)}`);\n    return source.pipe(\n      timeout(opts?.timeout || parseInt(process.env.TRANSPORT_TIMEOUT)),\n      catchError((error) => {\n        if (error?.type === MS_EXCEPTION_ID) {\n          const err = error as MsException;\n          this.logger.error(\n            `Microservice exception: ${err.message}`,\n            err.stack,\n          );\n          throw new HttpException(err.message, err.code);\n        }\n        if (error.name === \"TimeoutError\") {\n          this.logger.warn(`Request timeout for pattern: ${inspect(pattern)}`);\n          throw new HttpException(\n            \"Request Timeout\",\n            HttpStatus.REQUEST_TIMEOUT,\n          );\n        }\n        this.logger.error(\n          `Unknown error for pattern: ${inspect(pattern)}`,\n          error,\n        );\n        return throwError(error);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MsClientModule.html":{"url":"modules/MsClientModule.html","title":"module - MsClientModule","body":"\n                   \n\n\n\n\n    Modules\n    MsClientModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MsClientModule\n\n\n\ncluster_MsClientModule_imports\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nMsClientModule\n\nMsClientModule\n\nMsClientModule -->\n\nLogModule->MsClientModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/ms-client/ms-client.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides microservices client functionality for dispatching messages between microservices.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            LogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Logger, Module } from \"@nestjs/common\";\nimport { ClientProxy, ClientsModule } from \"@nestjs/microservices\";\nimport { LogModule } from \"../log/log.module\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { MS_CLIENT, MSG_BUS } from \"./ms-client.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\nimport { MsClient } from \"./ms-client\";\n\n/**\n * A module that provides microservices client functionality for dispatching messages between microservices.\n */\n@Module({\n  imports: [\n    LogModule,\n    ClientsModule.registerAsync([\n      {\n        imports: [LogModule],\n        inject: [LOGGER],\n        name: MS_CLIENT,\n        useFactory: (logger: Logger) => {\n          EnvLoader.loadEnvironment(logger);\n          return {\n            transport: parseInt(process.env.TRANSPORT_TYPE),\n            options: {\n              host: process.env.TRANSPORT_HOST,\n              port: parseInt(process.env.TRANSPORT_PORT),\n              timeout: parseInt(process.env.TRANSPORT_TIMEOUT),\n            },\n          };\n        },\n      },\n    ]),\n  ],\n  providers: [\n    {\n      provide: MSG_BUS,\n      useFactory: (logger: Logger, client: ClientProxy) =>\n        new MsClient(logger, client),\n      inject: [LOGGER, MS_CLIENT],\n    },\n  ],\n  exports: [MSG_BUS],\n})\nexport class MsClientModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MsException.html":{"url":"classes/MsException.html","title":"class - MsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Base class for custom microservice exceptions, extending RpcException.\n\n            \n\n            \n                Extends\n            \n            \n                        RpcException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(code: number, message: string, stack?: any)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stack\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RpcException } from \"@nestjs/microservices\";\nimport { MS_EXCEPTION_ID } from \"../constants\";\n\n/**\n * Base class for custom microservice exceptions, extending RpcException.\n */\nexport class MsException extends RpcException {\n  constructor(\n    readonly code: number,\n    readonly message: string = undefined,\n    readonly stack?: any,\n  ) {\n    super({ type: MS_EXCEPTION_ID, message, code, stack });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotEmptyPipe.html":{"url":"injectables/NotEmptyPipe.html","title":"injectable - NotEmptyPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotEmptyPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/pipes/not-empty.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Pipe to ensure a value is not empty.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fieldName: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/pipes/not-empty.pipe.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fieldName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/pipes/not-empty.pipe.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, PipeTransform } from \"@nestjs/common\";\n\n/**\n * Pipe to ensure a value is not empty.\n */\n@Injectable()\nexport class NotEmptyPipe implements PipeTransform {\n  constructor(private readonly fieldName: string) {}\n\n  transform(value: any) {\n    if (!value || Object.keys(value).length === 0) {\n      throw new BadRequestException(`${this.fieldName} cannot be empty`);\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundMsException.html":{"url":"classes/NotFoundMsException.html","title":"class - NotFoundMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/not-found-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for not found requests, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/not-found-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for not found requests, extending MsException.\n */\nexport class NotFoundMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.NOT_FOUND, message || \"Not found\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageableData.html":{"url":"classes/PageableData.html","title":"class - PageableData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageableData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/pageable/pageable.types.ts\n        \n\n\n            \n                Description\n            \n            \n                A class that represents paginated data.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: T[], totalCount: number, currentPage: number, pageSize: number)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:56\n                            \n                        \n\n                \n                    \n                            Creates an instance of PageableData.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe items for the current page.\n\n\n                                                        \n                                                \n                                                \n                                                        totalCount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe total number of items available.\n\n\n                                                        \n                                                \n                                                \n                                                        currentPage\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe current page number.\n\n\n                                                        \n                                                \n                                                \n                                                        pageSize\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe number of items per page.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { Max, Min } from \"class-validator\";\n\n/**\n * A class that defines the parameters for pagination.\n */\nexport class PageableParams {\n  @Min(1)\n  @Max(1000)\n  @Type(() => Number)\n  /**\n   * The maximum number of items to return per page.\n   * @type {number}\n   * @default 20\n   */\n  limit = 20;\n\n  @Min(1)\n  @Type(() => Number)\n  /**\n   * The page number to return.\n   * @type {number}\n   * @default 1\n   */\n  page = 1;\n\n  @Type(() => String)\n  /**\n   * The field by which to sort the items.\n   * @type {string}\n   * @optional\n   */\n  sort?: string;\n\n  @Type(() => String)\n  /**\n   * The order in which to sort the items.\n   * @type {SortOrder}\n   * @optional\n   */\n  order?: SortOrder;\n\n  @Type(() => String)\n  /**\n   * The filter criteria to apply to the items.\n   * @type {string}\n   * @optional\n   */\n  filter?: string;\n}\n\n/**\n * A class that represents paginated data.\n * @template T - The type of items in the paginated data.\n */\nexport class PageableData {\n  /**\n   * Creates an instance of PageableData.\n   * @param {T[]} items - The items for the current page.\n   * @param {number} totalCount - The total number of items available.\n   * @param {number} currentPage - The current page number.\n   * @param {number} pageSize - The number of items per page.\n   */\n  constructor(\n    readonly items: T[],\n    readonly totalCount: number,\n    readonly currentPage: number,\n    readonly pageSize: number,\n  ) {}\n}\n\n/**\n * @enum SortOrder\n * Enumeration for the sort order.\n */\nexport enum SortOrder {\n  ASC = \"ASC\",\n  DESC = \"DESC\",\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageableParams.html":{"url":"classes/PageableParams.html","title":"class - PageableParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageableParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/pageable/pageable.types.ts\n        \n\n\n            \n                Description\n            \n            \n                A class that defines the parameters for pagination.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                filter\n                            \n                            \n                                    \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    Optional\n                                order\n                            \n                            \n                                    \n                                    \n                                page\n                            \n                            \n                                    \n                                    Optional\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(1)@Max(1000)@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SortOrder\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(1)@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { Max, Min } from \"class-validator\";\n\n/**\n * A class that defines the parameters for pagination.\n */\nexport class PageableParams {\n  @Min(1)\n  @Max(1000)\n  @Type(() => Number)\n  /**\n   * The maximum number of items to return per page.\n   * @type {number}\n   * @default 20\n   */\n  limit = 20;\n\n  @Min(1)\n  @Type(() => Number)\n  /**\n   * The page number to return.\n   * @type {number}\n   * @default 1\n   */\n  page = 1;\n\n  @Type(() => String)\n  /**\n   * The field by which to sort the items.\n   * @type {string}\n   * @optional\n   */\n  sort?: string;\n\n  @Type(() => String)\n  /**\n   * The order in which to sort the items.\n   * @type {SortOrder}\n   * @optional\n   */\n  order?: SortOrder;\n\n  @Type(() => String)\n  /**\n   * The filter criteria to apply to the items.\n   * @type {string}\n   * @optional\n   */\n  filter?: string;\n}\n\n/**\n * A class that represents paginated data.\n * @template T - The type of items in the paginated data.\n */\nexport class PageableData {\n  /**\n   * Creates an instance of PageableData.\n   * @param {T[]} items - The items for the current page.\n   * @param {number} totalCount - The total number of items available.\n   * @param {number} currentPage - The current page number.\n   * @param {number} pageSize - The number of items per page.\n   */\n  constructor(\n    readonly items: T[],\n    readonly totalCount: number,\n    readonly currentPage: number,\n    readonly pageSize: number,\n  ) {}\n}\n\n/**\n * @enum SortOrder\n * Enumeration for the sort order.\n */\nexport enum SortOrder {\n  ASC = \"ASC\",\n  DESC = \"DESC\",\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessLog.html":{"url":"interfaces/ProcessLog.html","title":"interface - ProcessLog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a process log entry.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            process\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                                \n                                        \n                                            tsUpdated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        process\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        process:         ProcessUnit\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProcessUnit\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsUpdated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsUpdated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Process } from \"./process.constants\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\n/**\n * Interface representing a process log entry.\n */\nexport interface ProcessLog {\n  id: number;\n  content: string;\n  tsCreated: Date;\n  tsUpdated: Date;\n  process: ProcessUnit;\n}\n\n/**\n * Interface representing a process unit.\n */\nexport interface ProcessUnit {\n  code: string;\n  status: Process.Status;\n  enabled: boolean;\n  description: LocalizedString[];\n  cronTab: string;\n  logs: ProcessLog[];\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProcessLogEntity.html":{"url":"entities/ProcessLogEntity.html","title":"entity - ProcessLogEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProcessLogEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/entity/process.log.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores logs of system processes\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                process\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                            \n                                    \n                                    \n                                tsUpdated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        process\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessUnitEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@UpdateDateColumn({name: 'ts_updated', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:46\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from \"typeorm\";\nimport { ProcessUnitEntity } from \"./process.unit.entity\";\nimport { ProcessLog } from \"../process.types\";\n\n/**\n * The entity stores logs of system processes\n */\n@Entity(\"process_logs\")\nexport class ProcessLogEntity implements ProcessLog {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Column(\"text\", { nullable: true })\n  content: string;\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n\n  @Index()\n  @UpdateDateColumn({ name: \"ts_updated\", type: \"timestamp\" })\n  tsUpdated: Date;\n\n  @ManyToOne(() => ProcessUnitEntity, (t) => t.code)\n  process: ProcessUnitEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessManagerService.html":{"url":"injectables/ProcessManagerService.html","title":"injectable - ProcessManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProcessManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process-manager.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing processes.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                pmInitStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLogInstance\n                            \n                            \n                                getLastLogsByProcess\n                            \n                            \n                                getProcessData\n                            \n                            \n                                getProcessLogById\n                            \n                            \n                                    Async\n                                getProcessUnitStatus\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Private\n                                    Async\n                                resetAllProcessStatuses\n                            \n                            \n                                    Async\n                                setProcessUnitStatus\n                            \n                            \n                                    Async\n                                startProcess\n                            \n                            \n                                    Async\n                                stopProcess\n                            \n                            \n                                    Async\n                                toggleProcess\n                            \n                            \n                                updateLogInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lockExec: WarlockFn, logger: Logger, broker: MessagesBroker, processUnitRep: Repository, processLogRep: Repository)\n                    \n                \n                        \n                            \n                                Defined in lib/common/process/process-manager.service.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lockExec\n                                                  \n                                                        \n                                                                        WarlockFn\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        broker\n                                                  \n                                                        \n                                                                        MessagesBroker\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processUnitRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processLogRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createLogInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLogInstance(processCode: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:151\n                        \n                    \n\n\n            \n                \n                        Creates a log instance for a process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The created ProcessLogEntity instance.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLastLogsByProcess\n                        \n                    \n                \n            \n            \n                \ngetLastLogsByProcess(processCode: string, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:197\n                        \n                    \n\n\n            \n                \n                        Gets the last logs of a process by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe code of the process.\n\n\n                                            \n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3\n                                            \n\n                                            \n                                                    \nThe maximum number of logs to retrieve (default is 3).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An array of ProcessLogEntity instances.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProcessData\n                        \n                    \n                \n            \n            \n                \ngetProcessData(code: string, force)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:174\n                        \n                    \n\n\n            \n                \n                        Gets process data by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe code of the process.\n\n\n                                            \n                                        \n                                        \n                                                force\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    \nWhether to force getting the process data regardless of its enabled status.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The ProcessUnitEntity instance.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProcessLogById\n                        \n                    \n                \n            \n            \n                \ngetProcessLogById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:184\n                        \n                    \n\n\n            \n                \n                        Gets a process log by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the process log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The ProcessLogEntity instance.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProcessUnitStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProcessUnitStatus(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:141\n                        \n                    \n\n\n            \n                \n                        Gets the status of a process unit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process unit.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The current status of the process unit.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Initializes the process manager service, resets process statuses, and registers processes.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        resetAllProcessStatuses\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetAllProcessStatuses()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:208\n                        \n                    \n\n\n            \n                \n                        Resets the statuses of all enabled processes to \"Ready\".\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setProcessUnitStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    setProcessUnitStatus(code: string, status: Process.Status)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:130\n                        \n                    \n\n\n            \n                \n                        Sets the status of a process unit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process unit.\n\n\n                                            \n                                        \n                                        \n                                                status\n                                            \n                                                            Process.Status\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new status to set.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        startProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    startProcess(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:83\n                        \n                    \n\n\n            \n                \n                        Starts a process by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process to start.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stopProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    stopProcess(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:97\n                        \n                    \n\n\n            \n                \n                        Stops a process by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process to stop.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        toggleProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleProcess(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:111\n                        \n                    \n\n\n            \n                \n                        Toggles the enabled status of a process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process to toggle.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateLogInstance\n                        \n                    \n                \n            \n            \n                \nupdateLogInstance(logInstance: ProcessLogEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:164\n                        \n                    \n\n\n            \n                \n                        Updates a log instance.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                logInstance\n                                            \n                                                            ProcessLogEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ProcessLogEntity instance to update.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The updated ProcessLogEntity instance.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        pmInitStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/process-manager.service.ts:42\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n  Logger,\n} from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { ProcessUnitEntity } from \"./entity/process.unit.entity\";\nimport { Process } from \"./process.constants\";\nimport { ProcessLogEntity } from \"./entity/process.log.entity\";\nimport { WARLOCK } from \"../../shared/modules/warlock/warlock.constants\";\nimport { WarlockFn } from \"../../shared/modules/warlock/warlock.types\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { MESSAGES_BROKER } from \"../../shared/modules/messages-broker/messages-broker.constants\";\nimport { MessagesBroker } from \"../../shared/modules/messages-broker/messages-broker.types\";\nimport Status = Process.Status;\nimport Command = Process.Command;\nimport hasProcessInstance = Process.hasProcessInstance;\n\n/**\n * Service for managing processes.\n */\n@Injectable()\nexport class ProcessManagerService {\n  private static pmInitStatus: boolean;\n\n  constructor(\n    @Inject(WARLOCK) private readonly lockExec: WarlockFn,\n    @Inject(LOGGER) private readonly logger: Logger,\n    @Inject(MESSAGES_BROKER) private readonly broker: MessagesBroker,\n    @InjectRepository(ProcessUnitEntity)\n    private readonly processUnitRep: Repository,\n    @InjectRepository(ProcessLogEntity)\n    private readonly processLogRep: Repository,\n  ) {}\n\n  /**\n   * Initializes the process manager service, resets process statuses, and registers processes.\n   */\n  async init() {\n    if (ProcessManagerService.pmInitStatus) {\n      this.logger.warn(\"Autostart processes has been executed\");\n      return;\n    }\n    await this.resetAllProcessStatuses();\n    this.logger.log(\"Init process manager\");\n    ProcessManagerService.pmInitStatus = true;\n    const processList = await this.processUnitRep.find({\n      where: { enabled: true },\n    });\n    for (const processData of processList) {\n      if (!processData.cronTab?.length) {\n        this.logger.warn(\n          `Process ${processData.code} hasn't cron-tab, skip job registration`,\n        );\n        continue;\n      }\n      this.broker.emit(Command.Register, processData);\n    }\n  }\n\n  /**\n   * Starts a process by its code.\n   * @param code - The code of the process to start.\n   */\n  async startProcess(code: string) {\n    const processData = await this.getProcessData(code, true);\n    if (!processData) {\n      throw new InternalServerErrorException(\n        `Process ${code} hasn't options-data`,\n      );\n    }\n    this.broker.emit(Command.Start, processData);\n  }\n\n  /**\n   * Stops a process by its code.\n   * @param code - The code of the process to stop.\n   */\n  async stopProcess(code: string) {\n    const processData = await this.getProcessData(code, true);\n    if (!processData) {\n      throw new InternalServerErrorException(\n        `Process ${code} hasn't options-data`,\n      );\n    }\n    this.broker.emit(Command.Stop, processData);\n  }\n\n  /**\n   * Toggles the enabled status of a process.\n   * @param code - The code of the process to toggle.\n   */\n  async toggleProcess(code: string) {\n    if (!hasProcessInstance(code)) {\n      throw new InternalServerErrorException(`Process ${code} not exists`);\n    }\n    const processData = await this.processUnitRep.findOne({ where: { code } });\n    processData.enabled = !processData.enabled;\n    await this.processUnitRep.save(processData);\n    if (processData.enabled) {\n      this.broker.emit(Command.Register, processData);\n    } else {\n      this.broker.emit(Command.Unregister, processData);\n    }\n  }\n\n  /**\n   * Sets the status of a process unit.\n   * @param code - The code of the process unit.\n   * @param status - The new status to set.\n   */\n  async setProcessUnitStatus(code: string, status: Process.Status) {\n    const processData = await this.getProcessData(code, true);\n    processData.status = status;\n    return this.processUnitRep.save(processData);\n  }\n\n  /**\n   * Gets the status of a process unit.\n   * @param code - The code of the process unit.\n   * @returns The current status of the process unit.\n   */\n  async getProcessUnitStatus(code: string) {\n    const processData = await this.getProcessData(code, true);\n    return processData.status;\n  }\n\n  /**\n   * Creates a log instance for a process.\n   * @param processCode - The code of the process.\n   * @returns The created ProcessLogEntity instance.\n   */\n  async createLogInstance(processCode: string) {\n    const process = await this.getProcessData(processCode);\n    return this.processLogRep.save({\n      process,\n      content: \"\",\n    } as ProcessLogEntity);\n  }\n\n  /**\n   * Updates a log instance.\n   * @param logInstance - The ProcessLogEntity instance to update.\n   * @returns The updated ProcessLogEntity instance.\n   */\n  updateLogInstance(logInstance: ProcessLogEntity) {\n    return this.processLogRep.save(logInstance);\n  }\n\n  /**\n   * Gets process data by its code.\n   * @param code - The code of the process.\n   * @param force - Whether to force getting the process data regardless of its enabled status.\n   * @returns The ProcessUnitEntity instance.\n   */\n  getProcessData(code: string, force = false) {\n    const params = { code, enabled: true };\n    return this.processUnitRep.findOne({ where: force ? { code } : params });\n  }\n\n  /**\n   * Gets a process log by its ID.\n   * @param id - The ID of the process log.\n   * @returns The ProcessLogEntity instance.\n   */\n  getProcessLogById(id: number) {\n    return this.processLogRep.findOne({\n      where: { id },\n      relations: [\"process\"],\n    });\n  }\n\n  /**\n   * Gets the last logs of a process by its code.\n   * @param processCode - The code of the process.\n   * @param limit - The maximum number of logs to retrieve (default is 3).\n   * @returns An array of ProcessLogEntity instances.\n   */\n  getLastLogsByProcess(processCode: string, limit = 3) {\n    return this.processLogRep.find({\n      where: { process: { code: processCode } },\n      take: limit,\n      order: { tsUpdated: \"DESC\" },\n    });\n  }\n\n  /**\n   * Resets the statuses of all enabled processes to \"Ready\".\n   */\n  private async resetAllProcessStatuses() {\n    const entities = await this.processUnitRep.find({\n      where: { enabled: true },\n    });\n    for (const processData of entities) {\n      await this.setProcessUnitStatus(processData.code, Status.Ready);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProcessModule.html":{"url":"modules/ProcessModule.html","title":"module - ProcessModule","body":"\n                   \n\n\n\n\n    Modules\n    ProcessModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProcessModule\n\n\n\ncluster_ProcessModule_exports\n\n\n\ncluster_ProcessModule_providers\n\n\n\ncluster_ProcessModule_imports\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nProcessModule\n\nProcessModule\n\nProcessModule -->\n\nLogModule->ProcessModule\n\n\n\n\n\nMessagesBrokerModule\n\nMessagesBrokerModule\n\nProcessModule -->\n\nMessagesBrokerModule->ProcessModule\n\n\n\n\n\nWarlockModule\n\nWarlockModule\n\nProcessModule -->\n\nWarlockModule->ProcessModule\n\n\n\n\n\nProcessManagerService \n\nProcessManagerService \n\nProcessManagerService  -->\n\nProcessModule->ProcessManagerService \n\n\n\n\n\nProcessManagerService\n\nProcessManagerService\n\nProcessModule -->\n\nProcessManagerService->ProcessModule\n\n\n\n\n\nProcessRegisterService\n\nProcessRegisterService\n\nProcessModule -->\n\nProcessRegisterService->ProcessModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/process/process.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module is responsible for initializing and managing processes in the application.\nIt uses the NestJS lifecycle hook onApplicationBootstrap to initialize processes on startup.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProcessManagerService\n                        \n                        \n                            ProcessRegisterService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LogModule\n                        \n                        \n                            MessagesBrokerModule\n                        \n                        \n                            WarlockModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProcessManagerService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onApplicationBootstrap\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationBootstrap()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process.module.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Global, Module, OnApplicationBootstrap } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { ProcessUnitEntity } from \"./entity/process.unit.entity\";\nimport { ProcessManagerService } from \"./process-manager.service\";\nimport { ScheduleModule } from \"@nestjs/schedule\";\nimport { ProcessRegisterService } from \"./process-register.service\";\nimport { ProcessLogEntity } from \"./entity/process.log.entity\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { MessagesBrokerModule } from \"../../shared/modules/messages-broker/messages-broker.module\";\nimport { WarlockModule } from \"../../shared/modules/warlock/warlock.module\";\n\n/**\n * Module is responsible for initializing and managing processes in the application.\n * It uses the NestJS lifecycle hook `onApplicationBootstrap` to initialize processes on startup.\n */\n@Global()\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([ProcessUnitEntity, ProcessLogEntity]),\n    ScheduleModule.forRoot(),\n    LogModule,\n    MessagesBrokerModule,\n    WarlockModule,\n  ],\n  providers: [ProcessManagerService, ProcessRegisterService],\n  exports: [ProcessManagerService],\n})\nexport class ProcessModule implements OnApplicationBootstrap {\n  constructor(private readonly pmService: ProcessManagerService) {}\n\n  async onApplicationBootstrap() {\n    await this.pmService.init();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessRegisterService.html":{"url":"injectables/ProcessRegisterService.html","title":"injectable - ProcessRegisterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProcessRegisterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process-register.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for registering and managing cron jobs for processes.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                registerCronJob\n                            \n                            \n                                    Private\n                                startProcess\n                            \n                            \n                                    Private\n                                stopProcess\n                            \n                            \n                                    Private\n                                    Async\n                                unregisterCronJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, lockExec: WarlockFn, broker: MessagesBrokerService, pmService: ProcessManagerService, schedulerRegistry: SchedulerRegistry)\n                    \n                \n                        \n                            \n                                Defined in lib/common/process/process-register.service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockExec\n                                                  \n                                                        \n                                                                        WarlockFn\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        broker\n                                                  \n                                                        \n                                                                        MessagesBrokerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pmService\n                                                  \n                                                        \n                                                                        ProcessManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schedulerRegistry\n                                                  \n                                                        \n                                                                    SchedulerRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        registerCronJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerCronJob(processData: ProcessUnit)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-register.service.ts:91\n                        \n                    \n\n\n            \n                \n                        Registers a cron job for a process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processData\n                                            \n                                                            ProcessUnit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the process to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                True if the cron job was registered, otherwise false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    startProcess(processData: ProcessUnit)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-register.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Starts a registered process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processData\n                                            \n                                                            ProcessUnit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the process to start.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stopProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    stopProcess(processData: ProcessUnit)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-register.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Stops a registered process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processData\n                                            \n                                                            ProcessUnit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the process to stop.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        unregisterCronJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    unregisterCronJob(processData: ProcessUnit)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-register.service.ts:126\n                        \n                    \n\n\n            \n                \n                        Unregisters a cron job for a process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processData\n                                            \n                                                            ProcessUnit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the process to unregister.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                True if the cron job was unregistered, otherwise false.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { SchedulerRegistry } from \"@nestjs/schedule\";\nimport { CronJob } from \"cron/dist/job\";\nimport { ProcessManagerService } from \"./process-manager.service\";\nimport { Process } from \"./process.constants\";\nimport { ProcessUnit } from \"./process.types\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { WARLOCK } from \"../../shared/modules/warlock/warlock.constants\";\nimport { WarlockFn } from \"../../shared/modules/warlock/warlock.types\";\nimport { MESSAGES_BROKER } from \"../../shared/modules/messages-broker/messages-broker.constants\";\nimport { MessagesBrokerService } from \"../../shared/modules/messages-broker/messages-broker.service\";\nimport getProcessInstance = Process.getProcessInstance;\nimport Command = Process.Command;\nimport Status = Process.Status;\n\n/**\n * Service for registering and managing cron jobs for processes.\n */\n@Injectable()\nexport class ProcessRegisterService {\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    @Inject(WARLOCK) private readonly lockExec: WarlockFn,\n    @Inject(MESSAGES_BROKER) private readonly broker: MessagesBrokerService,\n    private readonly pmService: ProcessManagerService,\n    private readonly schedulerRegistry: SchedulerRegistry,\n  ) {\n    broker.subscribe(Command.Register, (data) =>\n      this.registerCronJob(data),\n    );\n    broker.subscribe(Command.Unregister, (data) =>\n      this.unregisterCronJob(data),\n    );\n    broker.subscribe(Command.Start, (data) =>\n      this.startProcess(data),\n    );\n    broker.subscribe(Command.Stop, (data) =>\n      this.stopProcess(data),\n    );\n  }\n\n  /**\n   * Starts a registered process.\n   * @param processData - The data of the process to start.\n   */\n  private startProcess(processData: ProcessUnit) {\n    const processInstance = getProcessInstance(processData.code);\n    if (!processInstance) {\n      this.logger.error(`Process ${processData.code} not registered`);\n      return;\n    }\n    this.lockExec(`${processData.code}_start`, async () =>\n      processInstance.start(),\n    );\n  }\n\n  /**\n   * Stops a registered process.\n   * @param processData - The data of the process to stop.\n   */\n  private stopProcess(processData: ProcessUnit) {\n    const processInstance = getProcessInstance(processData.code);\n    if (!processInstance) {\n      this.logger.error(`Process ${processData.code} not registered`);\n      return;\n    }\n    processInstance.stop();\n  }\n\n  /**\n   * Registers a cron job for a process.\n   * @param processData - The data of the process to register.\n   * @returns True if the cron job was registered, otherwise false.\n   */\n  private async registerCronJob(processData: ProcessUnit) {\n    if (this.schedulerRegistry.doesExist(\"cron\", processData.code)) {\n      this.logger.warn(\n        `Can't register cron job with code ${processData.code}, that already exists`,\n      );\n      return false;\n    }\n    await this.pmService.setProcessUnitStatus(processData.code, Status.Ready);\n    const processInstance = getProcessInstance(processData.code);\n    if (!processInstance) {\n      this.logger.error(`Process ${processData.code} not registered`);\n      return;\n    }\n    if (!processData.cronTab?.length) {\n      this.logger.warn(\n        `Process ${processData.code} hasn't cron-tab, skip job registration`,\n      );\n      return false;\n    }\n    const job = new CronJob(processData.cronTab, () => {\n      this.lockExec(\n        processData.code,\n        async () => await processInstance.start(),\n      );\n    });\n    job.start();\n    this.schedulerRegistry.addCronJob(processData.code, job);\n    return true;\n  }\n\n  /**\n   * Unregisters a cron job for a process.\n   * @param processData - The data of the process to unregister.\n   * @returns True if the cron job was unregistered, otherwise false.\n   */\n  private async unregisterCronJob(processData: ProcessUnit) {\n    if (!this.schedulerRegistry.doesExist(\"cron\", processData.code)) {\n      this.logger.warn(\n        `Can't unregister cron job with code ${processData.code}`,\n      );\n      return false;\n    }\n    const job = this.schedulerRegistry.getCronJob(processData.code);\n    job.stop();\n    this.schedulerRegistry.deleteCronJob(processData.code);\n    this.pmService.stopProcess(processData.code);\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessUnit.html":{"url":"interfaces/ProcessUnit.html","title":"interface - ProcessUnit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessUnit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a process unit.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            cronTab\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            enabled\n                                        \n                                \n                                \n                                        \n                                            logs\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cronTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cronTab:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logs:         ProcessLog[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProcessLog[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         Process.Status\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Process.Status\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Process } from \"./process.constants\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\n/**\n * Interface representing a process log entry.\n */\nexport interface ProcessLog {\n  id: number;\n  content: string;\n  tsCreated: Date;\n  tsUpdated: Date;\n  process: ProcessUnit;\n}\n\n/**\n * Interface representing a process unit.\n */\nexport interface ProcessUnit {\n  code: string;\n  status: Process.Status;\n  enabled: boolean;\n  description: LocalizedString[];\n  cronTab: string;\n  logs: ProcessLog[];\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProcessUnitEntity.html":{"url":"entities/ProcessUnitEntity.html","title":"entity - ProcessUnitEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProcessUnitEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/entity/process.unit.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores system processes, their configuration and state\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                cronTab\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                enabled\n                            \n                            \n                                    \n                                logs\n                            \n                            \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        cronTab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'cron_tab', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        enabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessLogEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, c => c.process, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Process.Status\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({type: 'enum', enum: undefined, default: undefined, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:70\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  OneToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { Process } from \"../process.constants\";\nimport { ProcessUnit } from \"../process.types\";\nimport { ProcessLogEntity } from \"./process.log.entity\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\n\n/**\n * The entity stores system processes, their configuration and state\n */\n@Entity(\"process_units\")\nexport class ProcessUnitEntity implements ProcessUnit {\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @Index()\n  @Column({\n    type: \"enum\",\n    enum: [\n      Process.Status.Ready,\n      Process.Status.Execute,\n      Process.Status.Crashed,\n    ],\n    default: null,\n    nullable: true,\n  })\n  status: Process.Status;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  enabled: boolean;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @Index()\n  @Column(\"varchar\", { name: \"cron_tab\", nullable: true })\n  cronTab: string;\n\n  @OneToMany(() => ProcessLogEntity, (c) => c.process, { cascade: true })\n  logs: ProcessLogEntity[];\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RedisCacheService.html":{"url":"injectables/RedisCacheService.html","title":"injectable - RedisCacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RedisCacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/cache/redis-cache.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A service class that provides cache storage functionality implementing the CacheService interface.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                del\n                            \n                            \n                                    Async\n                                expire\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getBoolean\n                            \n                            \n                                getFromPattern\n                            \n                            \n                                    Async\n                                getNumber\n                            \n                            \n                                    Async\n                                incr\n                            \n                            \n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, client: Redis)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/cache/redis-cache.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        del\n                        \n                    \n                \n            \n            \n                \n                        \n                    del(...keys: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:102\n                        \n                    \n\n\n            \n                \n                        Deletes the specified keys from the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe keys to delete from the cache.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to true if the operation is successful, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        expire\n                        \n                    \n                \n            \n            \n                \n                        \n                    expire(key: string, expiresIn: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:139\n                        \n                    \n\n\n            \n                \n                        Sets the expiration time for the given key in the Redis cache.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to set the expiration time for.\n\n\n                                            \n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe expiration time in seconds.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                True if the operation succeeded, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Retrieves the value of the specified key from the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to retrieve from the cache.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to the value of the key or null if an error occurs.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getBoolean\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBoolean(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:54\n                        \n                    \n\n\n            \n                \n                        Retrieves the boolean value of the specified key from the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to retrieve from the cache.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A Promise that resolves to the boolean value of the key.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFromPattern\n                        \n                    \n                \n            \n            \n                \ngetFromPattern(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:157\n                        \n                    \n\n\n            \n                \n                        Retrieves keys that match a given pattern from the Redis cache.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe pattern to match keys against.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                An array of matching keys.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNumber(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Retrieves the numeric value of the specified key from the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to retrieve from the cache.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A Promise that resolves to the numeric value of the key.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        incr\n                        \n                    \n                \n            \n            \n                \n                        \n                    incr(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:121\n                        \n                    \n\n\n            \n                \n                        Increments the value of the specified key in the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to increment.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to the new value of the key or null if an error occurs.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: string | number, expiresIn?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Sets the value of the specified key in the cache storage with an optional expiration time.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to set in the cache.\n\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to set for the key.\n\n\n                                            \n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional expiration time in seconds.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to true if the operation is successful, false otherwise.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport Redis from \"ioredis\";\nimport { CacheService } from \"./cache.types\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { REDIS_CLIENT } from \"./cache.constants\";\n\n/**\n * A service class that provides cache storage functionality implementing the CacheService interface.\n */\n@Injectable()\nexport class RedisCacheService implements CacheService {\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    @Inject(REDIS_CLIENT) private readonly client: Redis,\n  ) {}\n\n  /**\n   * Retrieves the value of the specified key from the cache storage.\n   *\n   * @param key - The key to retrieve from the cache.\n   * @returns A Promise that resolves to the value of the key or null if an error occurs.\n   */\n  async get(key: string): Promise {\n    try {\n      return await this.client.get(key);\n    } catch (error) {\n      this.logger.error(`Error while getting key \"${key}\" from Redis:`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Retrieves the boolean value of the specified key from the cache storage.\n   *\n   * @param key - The key to retrieve from the cache.\n   * @returns A Promise that resolves to the boolean value of the key.\n   */\n  async getBoolean(key: string) {\n    const val = await this.get(key);\n    return val === \"true\";\n  }\n\n  /**\n   * Retrieves the numeric value of the specified key from the cache storage.\n   *\n   * @param key - The key to retrieve from the cache.\n   * @returns A Promise that resolves to the numeric value of the key.\n   */\n  async getNumber(key: string) {\n    const val = await this.get(key);\n    return +val;\n  }\n\n  /**\n   * Sets the value of the specified key in the cache storage with an optional expiration time.\n   *\n   * @param key - The key to set in the cache.\n   * @param value - The value to set for the key.\n   * @param expiresIn - Optional expiration time in seconds.\n   * @returns A Promise that resolves to true if the operation is successful, false otherwise.\n   */\n  async set(\n    key: string,\n    value: string | number,\n    expiresIn?: number,\n  ): Promise {\n    try {\n      if (expiresIn) {\n        await this.client.set(key, value, \"EX\", expiresIn);\n      } else {\n        await this.client.set(key, value);\n      }\n      return true;\n    } catch (error) {\n      this.logger.error(`Error while setting key \"${key}\" in Redis:`, error);\n      return false;\n    }\n  }\n\n  /**\n   * Deletes the specified keys from the cache storage.\n   *\n   * @param keys - The keys to delete from the cache.\n   * @returns A Promise that resolves to true if the operation is successful, false otherwise.\n   */\n  async del(...keys: string[]): Promise {\n    try {\n      await this.client.del(...keys);\n      return true;\n    } catch (error) {\n      this.logger.error(\n        `Error while deleting keys \"${keys.join(\", \")}\" from Redis:`,\n        error,\n      );\n      return false;\n    }\n  }\n\n  /**\n   * Increments the value of the specified key in the cache storage.\n   *\n   * @param key - The key to increment.\n   * @returns A Promise that resolves to the new value of the key or null if an error occurs.\n   */\n  async incr(key: string): Promise {\n    try {\n      return await this.client.incr(key);\n    } catch (error) {\n      this.logger.error(\n        `Error while incrementing key \"${key}\" in Redis:`,\n        error,\n      );\n      return null;\n    }\n  }\n\n  /**\n   * Sets the expiration time for the given key in the Redis cache.\n   * @param key - The key to set the expiration time for.\n   * @param expiresIn - The expiration time in seconds.\n   * @returns True if the operation succeeded, false otherwise.\n   */\n  async expire(key: string, expiresIn: number): Promise {\n    try {\n      await this.client.expire(key, expiresIn);\n      return true;\n    } catch (error) {\n      this.logger.error(\n        `Error while setting expiration for key \"${key}\" in Redis:`,\n        error,\n      );\n      return false;\n    }\n  }\n\n  /**\n   * Retrieves keys that match a given pattern from the Redis cache.\n   * @param pattern - The pattern to match keys against.\n   * @returns An array of matching keys.\n   */\n  getFromPattern(pattern: string): Promise {\n    return new Promise((resolve, reject) => {\n      const keys: string[] = [];\n      const stream = this.client.scanStream({ match: pattern });\n      stream.on(\"data\", (chunk: string[]) => {\n        keys.push(...chunk);\n      });\n      stream.on(\"end\", () => {\n        resolve(keys);\n      });\n      stream.on(\"error\", (err: Error) => {\n        this.logger.error(err);\n        reject(err);\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RedisModule.html":{"url":"modules/RedisModule.html","title":"module - RedisModule","body":"\n                   \n\n\n\n\n    Modules\n    RedisModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/cache/redis.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides Redis client configuration and setup.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRootAsync\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRootAsync(options: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis.module.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Logger, Module } from \"@nestjs/common\";\nimport { Redis } from \"ioredis\";\nimport { REDIS_CLIENT } from \"./cache.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\n\n/**\n * A module that provides Redis client configuration and setup.\n */\n@Module({})\nexport class RedisModule {\n  private static redisInstance: Redis | null = null;\n\n  static forRootAsync(options: {\n    inject?: any[];\n    imports?: any[];\n    useFactory: (...args) => {\n      config: {\n        host: string;\n        port: number;\n        db: number;\n        username: string;\n        password: string;\n      };\n    };\n  }): DynamicModule {\n    const { inject, imports, useFactory } = options;\n    return {\n      module: RedisModule,\n      imports: [...(imports || [])],\n      providers: [\n        {\n          provide: REDIS_CLIENT,\n          useFactory: async (...args: any[]) => {\n            if (!RedisModule.redisInstance) {\n              const logger = args.find((arg) => arg instanceof Logger);\n              EnvLoader.loadEnvironment(logger);\n              const redisOptions = useFactory(...args).config;\n              RedisModule.redisInstance = new Redis(redisOptions);\n            }\n            return RedisModule.redisInstance;\n          },\n          inject,\n        },\n      ],\n      exports: [REDIS_CLIENT],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Roles.html":{"url":"classes/Roles.html","title":"class - Roles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Roles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/constants.ts\n        \n\n\n            \n                Description\n            \n            \n                A class containing static constants representing different user roles.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ADMIN\n                            \n                            \n                                    Static\n                                    Readonly\n                                MANAGER\n                            \n                            \n                                    Static\n                                    Readonly\n                                ROOT\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ADMIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"admin\"\n                    \n                \n                    \n                        \n                                Defined in lib/shared/constants.ts:30\n                        \n                    \n\n            \n                \n                    Represents the admin role with administrative access.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MANAGER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"manager\"\n                    \n                \n                    \n                        \n                                Defined in lib/shared/constants.ts:35\n                        \n                    \n\n            \n                \n                    Represents the manager role.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ROOT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"root\"\n                    \n                \n                    \n                        \n                                Defined in lib/shared/constants.ts:25\n                        \n                    \n\n            \n                \n                    Represents the root role with the highest level of access.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Roles {\n  /**\n   * @constant ROOT\n   * Represents the root role with the highest level of access.\n   */\n  static readonly ROOT = \"root\";\n  /**\n   * @constant ADMIN\n   * Represents the admin role with administrative access.\n   */\n  static readonly ADMIN = \"admin\";\n  /**\n   * @constant MANAGER\n   * Represents the manager role.\n   */\n  static readonly MANAGER = \"manager\";\n}\n\n/**\n * An object containing properties used for request handling.\n */\nexport const REQUEST_PROPS = {\n  /**\n   * @property accessToken\n   * The property name for storing the access token in the request.\n   */\n  accessToken: \"accessToken\",\n\n  /**\n   * @property currentUser\n   * The property name for storing the current user in the request.\n   */\n  currentUser: \"currentUser\",\n};\n\n/**\n * A constant representing the exception identifier for microservices.\n */\nexport const MS_EXCEPTION_ID = \"MsException\";\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                lib/shared/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    A guard for role-based access control.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/guards/roles.guard.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/guards/roles.guard.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\nimport { UserUtils } from \"../utils/user.utils\";\nimport { AllowedForMetadataKey } from \"../decorators/for-roles.decorator\";\nimport { UserRole } from \"../../common/user/user.types\";\nimport { REQUEST_PROPS, Roles } from \"../constants\";\nimport hasSomeRole = UserUtils.hasSomeRole;\n\n/**\n * @class RolesGuard\n * A guard for role-based access control.\n */\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private readonly reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const roles = this.reflector.get(\n      AllowedForMetadataKey,\n      context.getHandler(),\n    );\n    if (!roles) {\n      return true;\n    }\n    const req = context.switchToHttp().getRequest();\n    const userRoles: UserRole[] = req[REQUEST_PROPS.currentUser]?.roles || [];\n    if (hasSomeRole(userRoles, Roles.ROOT)) {\n      return true;\n    }\n    for (const role of userRoles) {\n      if (roles.indexOf(role.code) !== -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TargetData.html":{"url":"interfaces/TargetData.html","title":"interface - TargetData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TargetData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the data of an explorer target.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entity\n                                        \n                                \n                                \n                                        \n                                            namedColumn\n                                        \n                                \n                                \n                                        \n                                            primaryColumn\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entity:         ExplorerTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namedColumn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namedColumn:         ExplorerColumn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumn\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryColumn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primaryColumn:         ExplorerColumn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumn\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TmpDirCleanerProcess.html":{"url":"classes/TmpDirCleanerProcess.html","title":"class - TmpDirCleanerProcess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TmpDirCleanerProcess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/default/tmp-dir-cleaner.process.ts\n        \n\n\n            \n                Description\n            \n            \n                Process class for cleaning the temporary directory.\n\n            \n\n            \n                Extends\n            \n            \n                            AbstractProcess\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                logInstance\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                pmService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                getDeleteStats\n                            \n                            \n                                    Private\n                                    Async\n                                getStatus\n                            \n                            \n                                    Protected\n                                    Async\n                                onCrash\n                            \n                            \n                                    Protected\n                                    Async\n                                onFinish\n                            \n                            \n                                    Protected\n                                    Async\n                                onStop\n                            \n                            \n                                    Private\n                                    Async\n                                setStatus\n                            \n                            \n                                    Async\n                                start\n                            \n                            \n                                    Async\n                                stop\n                            \n                            \n                                    Protected\n                                    Async\n                                writeLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, pmService: ProcessManagerService, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/common/process/default/tmp-dir-cleaner.process.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pmService\n                                                  \n                                                        \n                                                                        ProcessManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractProcess\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractProcess:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessLogEntity\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractProcess\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractProcess:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        pmService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessManagerService\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractProcess\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractProcess:32\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:42\n\n                        \n                    \n\n\n            \n                \n                        Executes the process to clean the temporary directory.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getDeleteStats\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDeleteStats(dirStruct: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/default/tmp-dir-cleaner.process.ts:63\n                        \n                    \n\n\n            \n                \n                        Gets statistics on the number of files and folders to be deleted.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dirStruct\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe structure of the directory.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { filesCount: number; foldersCount: number; }\n\n                        \n                            \n                                An object containing the file and folder counts.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStatus()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:165\n\n                        \n                    \n\n\n            \n                \n                        Gets the current status of the process.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The current process status.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onCrash\n                        \n                    \n                \n            \n            \n                \n                        \n                    onCrash(error: Error)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:157\n\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process crashes.\nCan be overridden by subclasses if needed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error that caused the crash.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onFinish\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFinish()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:140\n\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process finishes.\nCan be overridden by subclasses if needed.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onStop\n                        \n                    \n                \n            \n            \n                \n                        \n                    onStop()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:148\n\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process stops.\nCan be overridden by subclasses if needed.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    setStatus(status: Status)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:173\n\n                        \n                    \n\n\n            \n                \n                        Sets the status of the process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            Status\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new status to set.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:44\n\n                        \n                    \n\n\n            \n                \n                        Starts the process and handles its execution.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:80\n\n                        \n                    \n\n\n            \n                \n                        Stops the process and updates its status.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        writeLog\n                        \n                    \n                \n            \n            \n                \n                        \n                    writeLog(message: string, data?, level)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:94\n\n                        \n                    \n\n\n            \n                \n                        Writes a log entry with the specified message, data, and log level.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe log message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nOptional additional data.\n\n\n                                            \n                                        \n                                        \n                                                level\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    LogLevel.Log\n                                            \n\n                                            \n                                                    \nThe log level (default: LogLevel.Log).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractProcess } from \"../abstract-process\";\nimport { Inject, Logger } from \"@nestjs/common\";\nimport { ProcessManagerService } from \"../process-manager.service\";\nimport * as fs from \"fs\";\nimport { KpConfig } from \"../../../../gen-src/kp.config\";\nimport { FilesUtils } from \"../../../shared/utils/files.utils\";\nimport { LOGGER } from \"../../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../../shared/modules/cache/cache.types\";\nimport readDirectoryRecursively = FilesUtils.readDirectoryRecursively;\n\n/**\n * Process class for cleaning the temporary directory.\n */\nexport class TmpDirCleanerProcess extends AbstractProcess {\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    protected readonly pmService: ProcessManagerService,\n    private readonly cacheService: CacheService,\n  ) {\n    super();\n  }\n\n  /**\n   * Executes the process to clean the temporary directory.\n   */\n  protected async execute() {\n    const tmpDir =\n      process.cwd() + (await this.cacheService.get(KpConfig.TMP_DIR));\n    if (!fs.existsSync(tmpDir)) {\n      await this.writeLog(`Nothing to delete`);\n      return;\n    }\n    const dirStruct = await readDirectoryRecursively(tmpDir);\n    const stats = this.getDeleteStats(dirStruct as { [k: string]: string[] });\n    await this.writeLog(\n      `Try to delete ${stats.filesCount} files and ${stats.foldersCount} folders...`,\n    );\n    await fs.promises.rm(tmpDir, { recursive: true, force: true });\n    await this.writeLog(`Tmp dir was cleaned`);\n  }\n\n  /**\n   * Gets statistics on the number of files and folders to be deleted.\n   * @param dirStruct - The structure of the directory.\n   * @returns An object containing the file and folder counts.\n   */\n  private getDeleteStats(dirStruct: { [k: string]: string[] }) {\n    let filesCount = 0;\n    let foldersCount = 0;\n    for (const key in dirStruct) {\n      filesCount += dirStruct[key].length;\n      if (!key.length) {\n        continue;\n      }\n      foldersCount++;\n    }\n    return { filesCount, foldersCount };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyRequestsMsException.html":{"url":"classes/TooManyRequestsMsException.html","title":"class - TooManyRequestsMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyRequestsMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/too-many-requests-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for too many requests, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/too-many-requests-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for too many requests, extending MsException.\n */\nexport class TooManyRequestsMsException extends MsException {\n  constructor(message?: string) {\n    super(\n      HttpStatus.TOO_MANY_REQUESTS,\n      message || \"You have made too many requests. Please try again later.\",\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedMsException.html":{"url":"classes/UnauthorizedMsException.html","title":"class - UnauthorizedMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/unauthorized-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for unauthorized requests, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/unauthorized-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for unauthorized requests, extending MsException.\n */\nexport class UnauthorizedMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.UNAUTHORIZED, message || \"Unauthorized request\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpsertMediaRequest.html":{"url":"interfaces/UpsertMediaRequest.html","title":"interface - UpsertMediaRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpsertMediaRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the request to upsert a media object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entityIdForPatch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entityName\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityIdForPatch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entityIdForPatch:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entityName:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     Buffer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Buffer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { MediaEntity } from \"./entity/media.entity\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  id: number;\n  code: string;\n  name: LocalizedString[];\n  type: MediaType;\n  files: MediaFile[];\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  code: string;\n  name: string;\n  vp6: boolean;\n  private: boolean;\n  quality: number;\n  ext: MediaExt;\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  code: string;\n  name: string;\n  width: string;\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  id: number;\n  code: string;\n  name: string;\n  width: number;\n  height: number;\n  size: number;\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  code: string;\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(\n    id: number,\n    privateMedia?: boolean,\n  ): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a user object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            login\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { UserEntity } from \"./entity/user.entity\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for user.\n\n            \n\n\n            \n                Implements\n            \n            \n                            User\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                active\n                            \n                            \n                                    \n                                avatar\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Media\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:99\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { UserEntity } from \"./entity/user.entity\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/entity/user.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the users of the system\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                active\n                            \n                            \n                                    \n                                avatar\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'first_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'last_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:78\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  TableInheritance,\n} from \"typeorm\";\nimport { UserRoleEntity } from \"./user-role.entity\";\nimport { User } from \"../user.types\";\nimport { MediaEntity } from \"../../media/entity/media.entity\";\n\n/**\n * The entity stores the users of the system\n */\n@Entity(\"users\")\n@TableInheritance({\n  column: { type: \"varchar\", name: \"class\", nullable: true },\n})\nexport class UserEntity implements User {\n  @PrimaryGeneratedColumn()\n  id: string;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  avatar: MediaEntity;\n\n  @Column(\"varchar\", { nullable: false })\n  password: string;\n\n  @Column(\"varchar\", { nullable: false, unique: true })\n  login: string;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  email: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  phone: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"first_name\", nullable: true })\n  firstName: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"last_name\", nullable: true })\n  lastName: string;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  active: boolean;\n\n  @ManyToMany(() => UserRoleEntity)\n  @JoinTable()\n  roles: UserRoleEntity[];\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserEntityPwdAndRolesSaveHandler.html":{"url":"injectables/UserEntityPwdAndRolesSaveHandler.html","title":"injectable - UserEntityPwdAndRolesSaveHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserEntityPwdAndRolesSaveHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/handlers/user-entity-pwd-and-roles.save-handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Handler for saving user entities, ensuring appropriate permissions and roles are applied.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(target: string, payload: User, currentUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/handlers/user-entity-pwd-and-roles.save-handler.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { EntitySaveHandler } from \"../explorer.types\";\nimport { User } from \"../../user/user.types\";\nimport { Roles } from \"../../../shared/constants\";\n\n/**\n * Handler for saving user entities, ensuring appropriate permissions and roles are applied.\n */\n@Injectable()\nexport class UserEntityPwdAndRolesSaveHandler\n  implements EntitySaveHandler\n{\n  handle(target: string, payload: User, currentUser: User) {\n    if (!currentUser.roles.find((v) => v.code === Roles.ROOT)) {\n      if (payload.id) {\n        delete payload.password;\n        delete payload.login;\n      }\n      delete payload.roles;\n    }\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/user/user.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module is responsible for managing system users\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: UserModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.module.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            UserModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      service: BasicUserService,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { BasicUserService } from \"./user-service-basic.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { UserEntity } from \"./entity/user.entity\";\nimport { UserModuleOptions, UserService } from \"./user.types\";\n\n/**\n * Module is responsible for managing system users\n */\n@Module({})\nexport class UserModule {\n  static forRoot(\n    options: UserModuleOptions = {\n      service: BasicUserService,\n    },\n  ): DynamicModule {\n    return {\n      module: UserModule,\n      imports: [TypeOrmModule.forFeature([UserEntity])],\n      providers: [\n        {\n          provide: UserService,\n          useClass: options.service,\n        },\n      ],\n      exports: [UserService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRole.html":{"url":"interfaces/UserRole.html","title":"interface - UserRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a user role.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { UserEntity } from \"./entity/user.entity\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRoleDto.html":{"url":"classes/UserRoleDto.html","title":"class - UserRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for user role.\n\n            \n\n\n            \n                Implements\n            \n            \n                            UserRole\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedString[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:60\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { UserEntity } from \"./entity/user.entity\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserRoleEntity.html":{"url":"entities/UserRoleEntity.html","title":"entity - UserRoleEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserRoleEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/entity/user-role.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the roles of the system users\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user-role.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user-role.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user-role.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { UserRole } from \"../user.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\n\n/**\n * The entity stores the roles of the system users\n */\n@Entity(\"users_roles\")\nexport class UserRoleEntity implements UserRole {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserService.html":{"url":"classes/UserService.html","title":"class - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing the user service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                findByLogin\n                            \n                            \n                                    Abstract\n                                removeById\n                            \n                            \n                                    Abstract\n                                updateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByLogin(login: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                login\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        removeById\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        updateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateById(id: string, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { UserEntity } from \"./entity/user.entity\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserSubscriber.html":{"url":"classes/UserSubscriber.html","title":"class - UserSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/entity/user.subscriber.ts\n        \n\n\n            \n                Description\n            \n            \n                A subscriber for UserEntity that handles entity events such as insert and update.\nIt validates the login and hashes the password before these events.\n\n            \n\n\n            \n                Implements\n            \n            \n                        EntitySubscriberInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                beforeInsert\n                            \n                            \n                                    Async\n                                beforeUpdate\n                            \n                            \n                                listenTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Default value : UserEntity\n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.subscriber.ts:35\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        beforeInsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    beforeInsert(event: InsertEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/entity/user.subscriber.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            InsertEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        beforeUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    beforeUpdate(event: UpdateEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/entity/user.subscriber.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            UpdateEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listenTo\n                        \n                    \n                \n            \n            \n                \nlistenTo()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/entity/user.subscriber.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  EntitySubscriberInterface,\n  EventSubscriber,\n  UpdateEvent,\n} from \"typeorm\";\nimport { UserEntity } from \"./user.entity\";\nimport { InsertEvent } from \"typeorm/subscriber/event/InsertEvent\";\nimport { AbstractUserSubscriber } from \"../abstract-user-subscriber\";\n\n/**\n * A subscriber for UserEntity that handles entity events such as insert and update.\n * It validates the login and hashes the password before these events.\n */\n@EventSubscriber()\nexport class UserSubscriber\n  extends AbstractUserSubscriber\n  implements EntitySubscriberInterface\n{\n  protected readonly type = UserEntity;\n\n  listenTo() {\n    return UserEntity;\n  }\n\n  async beforeInsert(event: InsertEvent) {\n    await this.validateLogin(event.entity.login);\n    await this.hashPasswordIfNeeded(event);\n  }\n\n  async beforeUpdate(event: UpdateEvent) {\n    if (event.entity.login) {\n      await this.validateLogin(event.entity.login);\n    }\n    await this.hashPasswordIfNeeded(event);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserUpdateRequest.html":{"url":"interfaces/UserUpdateRequest.html","title":"interface - UserUpdateRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserUpdateRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a request to update a user.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { UserEntity } from \"./entity/user.entity\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VideoFileMetadata.html":{"url":"interfaces/VideoFileMetadata.html","title":"interface - VideoFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VideoFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing video file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bitrate\n                                        \n                                \n                                \n                                        \n                                            codec\n                                        \n                                \n                                \n                                        \n                                            colorRange\n                                        \n                                \n                                \n                                        \n                                            colorSpace\n                                        \n                                \n                                \n                                        \n                                            container\n                                        \n                                \n                                \n                                        \n                                            displayAspectRatio\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            frameRate\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            rotate\n                                        \n                                \n                                \n                                        \n                                            sampleAspectRatio\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bitrate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bitrate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        codec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codec:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorRange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorSpace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorSpace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        container\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        container:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAspectRatio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAspectRatio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        frameRate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        frameRate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleAspectRatio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleAspectRatio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  id: number;\n  code: string;\n  name: string;\n  path: string;\n  public: boolean;\n  size: number;\n  icon: Media;\n  preview: Media;\n  metadata: FileMetadata;\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  id: number;\n  mime: string;\n  ext: string;\n  hash: string;\n  icc: IccFileMetadata;\n  gps: GpsFileMetadata;\n  image: ImageFileMetadata;\n  exif: ExifFileMetadata;\n  audio: AudioFileMetadata;\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  id: number;\n  bps: number;\n  width: number;\n  height: number;\n  colorComponents: number;\n  subsampling: string;\n  dateTime: Date;\n  bitDepth: number;\n  colorType: string;\n  compression: string;\n  filter: string;\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  id: number;\n  profileVersion: string;\n  profileClassValue: string;\n  profileClassName: string;\n  connectionSpace: string;\n  iccProfileDate: Date;\n  iccSignature: string;\n  primaryPlatform: string;\n  deviceManufacturer: string;\n  deviceModelNumber: string;\n  renderingIntentValue: string;\n  renderingIntentName: string;\n  profileCreator: string;\n  iccDescription: string;\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  id: number;\n  make: string;\n  model: string;\n  orientation: string;\n  resolutionX: string;\n  resolutionY: string;\n  resolutionUnit: string;\n  software: string;\n  ycbCrPositioning: string;\n  exifIfdPointer: string;\n  gpsInfoIfdPointer: string;\n  exposureTime: string;\n  fNumber: string;\n  exposureProgram: string;\n  isoSpeedRatings: string;\n  exifVersion: string;\n  offsetTime: string;\n  shutterSpeedValue: string;\n  aperture: string;\n  brightness: string;\n  exposureBias: string;\n  maxAperture: string;\n  subjectDistance: string;\n  meteringMode: string;\n  flash: string;\n  focalLength: string;\n  flashpixVersion: string;\n  colorSpace: string;\n  pixelXDimension: string;\n  pixelYDimension: string;\n  interoperabilityIfdPointer: string;\n  sensingMethod: string;\n  sceneType: string;\n  customRendered: string;\n  exposureMode: string;\n  whiteBalance: string;\n  digitalZoomRatio: string;\n  sceneCaptureType: string;\n  contrast: string;\n  saturation: string;\n  sharpness: string;\n  subjectDistanceRange: string;\n  lensMake: string;\n  lensModel: string;\n  compositeImage: string;\n  interoperabilityIndex: string;\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  id: number;\n  latitude: number;\n  longitude: number;\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  id: number;\n  codec: string;\n  container: string;\n  width: number;\n  height: number;\n  bitrate: number;\n  duration: number;\n  sampleAspectRatio: string;\n  displayAspectRatio: string;\n  colorRange: string;\n  colorSpace: string;\n  frameRate: string;\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  id: number;\n  container: string;\n  codec: string;\n  sampleRate: number;\n  numberOfChannels: number;\n  bitrate: number;\n  codecProfile: string;\n  tool: string;\n  duration: number;\n  title: string;\n  artist: string;\n  album: string;\n  year: number;\n  genre: string;\n  label: string;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/VideoFileMetadataEntity.html":{"url":"entities/VideoFileMetadataEntity.html","title":"entity - VideoFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  VideoFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/video-file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the video metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                bitrate\n                            \n                            \n                                    \n                                    \n                                codec\n                            \n                            \n                                    \n                                    \n                                colorRange\n                            \n                            \n                                    \n                                    \n                                colorSpace\n                            \n                            \n                                    \n                                    \n                                container\n                            \n                            \n                                    \n                                    \n                                displayAspectRatio\n                            \n                            \n                                    \n                                    \n                                duration\n                            \n                            \n                                    \n                                    \n                                frameRate\n                            \n                            \n                                    \n                                    \n                                height\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                rotate\n                            \n                            \n                                    \n                                    \n                                sampleAspectRatio\n                            \n                            \n                                    \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bitrate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        codec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        colorRange\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'color_range', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        colorSpace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'color_space', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        displayAspectRatio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'display_aspect_ratio', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        frameRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'frame_rate', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        rotate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sampleAspectRatio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'sample_aspect_ratio', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { VideoFileMetadata } from \"../file.types\";\n\n/**\n * The entity stores the video metadata of the file\n */\n@Entity(\"file_metadata_video\")\nexport class VideoFileMetadataEntity implements VideoFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  codec: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  container: string;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  width: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  height: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true })\n  bitrate: number;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  duration: number;\n\n  @Index()\n  @Column(\"varchar\", { name: \"sample_aspect_ratio\", nullable: true })\n  sampleAspectRatio: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"display_aspect_ratio\", nullable: true })\n  displayAspectRatio: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"color_range\", nullable: true })\n  colorRange: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"color_space\", nullable: true })\n  colorSpace: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"frame_rate\", nullable: true })\n  frameRate: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  rotate: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WarlockModule.html":{"url":"modules/WarlockModule.html","title":"module - WarlockModule","body":"\n                   \n\n\n\n\n    Modules\n    WarlockModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WarlockModule\n\n\n\ncluster_WarlockModule_imports\n\n\n\n\nRedisModule\n\nRedisModule\n\n\n\nWarlockModule\n\nWarlockModule\n\nWarlockModule -->\n\nRedisModule->WarlockModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/warlock/warlock.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides functionality for locking mechanisms using Redis.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            RedisModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Logger, Module } from \"@nestjs/common\";\nimport Redis from \"ioredis\";\nimport * as Warlock from \"node-redis-warlock\";\nimport { RedisModule } from \"../cache/redis.module\";\nimport { LogModule } from \"../log/log.module\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\nimport { WARLOCK } from \"./warlock.constants\";\nimport { REDIS_CLIENT } from \"../cache/cache.constants\";\nimport { WarlockFn } from \"./warlock.types\";\n\n/**\n * A module that provides functionality for locking mechanisms using Redis.\n */\n@Module({\n  imports: [\n    RedisModule.forRootAsync({\n      imports: [LogModule],\n      inject: [LOGGER],\n      useFactory: (logger: Logger) => {\n        EnvLoader.loadEnvironment(logger);\n        return {\n          config: {\n            host: process.env.REDIS_HOST,\n            port: parseInt(process.env.REDIS_PORT),\n            db: parseInt(process.env.REDIS_DB),\n            username: process.env.REDIS_USER,\n            password: process.env.REDIS_PASSWORD,\n          },\n        };\n      },\n    }),\n  ],\n  providers: [\n    {\n      provide: WARLOCK,\n      inject: [REDIS_CLIENT],\n      useFactory: (\n        client: Redis,\n        lockLifeTime = 10000,\n        lockKey = \"lock\",\n      ): WarlockFn => {\n        const warlock = Warlock(client);\n        return function (lockCode: string, caller: () => Promise) {\n          warlock.lock(\n            `${lockKey}:${lockCode}`,\n            lockLifeTime,\n            async (err, unlock) => {\n              if (err) {\n                return;\n              }\n              if (typeof unlock === \"function\") {\n                await caller();\n                unlock();\n              }\n            },\n          );\n        };\n      },\n    },\n  ],\n  exports: [WARLOCK],\n})\nexport class WarlockModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/XdbExportService.html":{"url":"classes/XdbExportService.html","title":"class - XdbExportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  XdbExportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class for XML data export services.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                exportXml\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        exportXml\n                        \n                    \n                \n            \n            \n                \n                        \n                    exportXml(params: XdbExportParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.constants.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            XdbExportParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  XdbAction,\n  XdbDecomposedEntity,\n  XdbExportDto,\n  XdbExportParams,\n  XdbObject,\n  XdbRowData,\n} from \"./xml-data-bridge.types\";\nimport * as xml2js from \"xml2js\";\nimport { Parser } from \"yargs-parser\";\nimport { ObjectLiteral } from \"typeorm\";\n\n/**\n * Abstract class for XML data import services.\n */\nexport abstract class XdbImportService {\n  abstract importXml(xml: XdbObject): Promise;\n\n  abstract importFromFile(fileData: Buffer): Promise;\n}\n/**\n * Abstract class for XML data export services.\n */\nexport abstract class XdbExportService {\n  abstract exportXml(params: XdbExportParams): Promise;\n}\n\nexport namespace Xdb {\n  /**\n   * Representing root-node identifier\n   */\n  export const rootToken = \"@root\";\n\n  /**\n   * Stored xml-parser instance\n   */\n  let parser: Parser & {\n    parseString: (\n      xmlData: string | Buffer,\n      callback: (err: Error | null, result: unknown) => void,\n    ) => void;\n  };\n\n  /**\n   * Regex for detect read-operator in xml-schema\n   */\n  export const ReadOperatorRe = /\\$\\{@read:([^}]*)}/;\n\n  /**\n   * Returns the XML parser instance.\n   * @returns The XML parser instance.\n   */\n  export function getXmlParser() {\n    if (parser) {\n      return parser;\n    }\n    parser = new xml2js.Parser({\n      explicitArray: false,\n      preserveChildrenOrder: true,\n      explicitChildren: true,\n    });\n    return parser;\n  }\n\n  /**\n   * Parses the XML body into an XdbObject.\n   * @param body - The body containing the XML schema.\n   * @returns The parsed XdbObject.\n   */\n  export function parseXmlBody(body: { schema }) {\n    const schema = body.schema;\n    const actions = schema.$$;\n    const result: XdbObject = {\n      schema: [],\n    };\n    for (const action of actions) {\n      const tagName = action[\"#name\"];\n      const target = action?.$?.target;\n      const read = action?.$?.read;\n      const content = action?.$?.content;\n      const rows = action.$$ ?? [];\n      const obj: XdbAction = {\n        action: tagName,\n        attrs: { target, read, content },\n        rows: [],\n      };\n      for (const row of rows) {\n        const rowObj: XdbRowData = {};\n        for (const item of row.$$) {\n          const itemName = item[\"#name\"];\n          if (item.$) {\n            rowObj[itemName] = {\n              attrs: item.$,\n              value: item._,\n            };\n            if (item.$.key && item.$$) {\n              rowObj[itemName].values = item.$$.map((r) => r._);\n            }\n          } else {\n            rowObj[itemName] = item._;\n          }\n        }\n        obj.rows.push(rowObj);\n      }\n      result.schema.push(obj);\n    }\n    return result;\n  }\n\n  /**\n   * Parses an XML file into an XdbObject.\n   * @param xmlData - The XML data buffer.\n   * @returns A promise that resolves to the parsed XdbObject.\n   */\n  export async function parseXmlFile(xmlData: Buffer): Promise {\n    return new Promise((resolve, reject) => {\n      getXmlParser().parseString(xmlData, async (err, result) => {\n        if (err) {\n          reject(err);\n        } else {\n          const body = parseXmlBody(result as { schema });\n          resolve(body);\n        }\n      });\n    });\n  }\n\n  /**\n   * Removes duplicate objects from an array of XdbDecomposedEntity.\n   * @param array - The array of XdbDecomposedEntity.\n   * @returns The array with duplicates removed.\n   */\n  export function removeDuplicateObjects(\n    array: XdbDecomposedEntity[],\n  ): XdbDecomposedEntity[] {\n    const uniqueObjects: XdbDecomposedEntity[] = [];\n    array.reverse().forEach((obj) => {\n      if (!uniqueObjects.some((uniqueObj) => deepEqual(uniqueObj, obj))) {\n        uniqueObjects.push(obj);\n      }\n    });\n    return uniqueObjects.reverse();\n  }\n\n  /**\n   * Checks if two objects are deeply equal.\n   * @param obj1 - The first object.\n   * @param obj2 - The second object.\n   * @returns A boolean indicating whether the objects are deeply equal.\n   */\n  function deepEqual(obj1: ObjectLiteral, obj2: ObjectLiteral): boolean {\n    if (obj1 === obj2) {\n      return true;\n    }\n    if (\n      typeof obj1 !== \"object\" ||\n      typeof obj2 !== \"object\" ||\n      obj1 === null ||\n      obj2 === null\n    ) {\n      return false;\n    }\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (const key of keys1) {\n      if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/XdbImportService.html":{"url":"classes/XdbImportService.html","title":"class - XdbImportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  XdbImportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class for XML data import services.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                importFromFile\n                            \n                            \n                                    Abstract\n                                importXml\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        importFromFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    importFromFile(fileData: Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.constants.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        importXml\n                        \n                    \n                \n            \n            \n                \n                        \n                    importXml(xml: XdbObject)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.constants.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                xml\n                                            \n                                                            XdbObject\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  XdbAction,\n  XdbDecomposedEntity,\n  XdbExportDto,\n  XdbExportParams,\n  XdbObject,\n  XdbRowData,\n} from \"./xml-data-bridge.types\";\nimport * as xml2js from \"xml2js\";\nimport { Parser } from \"yargs-parser\";\nimport { ObjectLiteral } from \"typeorm\";\n\n/**\n * Abstract class for XML data import services.\n */\nexport abstract class XdbImportService {\n  abstract importXml(xml: XdbObject): Promise;\n\n  abstract importFromFile(fileData: Buffer): Promise;\n}\n/**\n * Abstract class for XML data export services.\n */\nexport abstract class XdbExportService {\n  abstract exportXml(params: XdbExportParams): Promise;\n}\n\nexport namespace Xdb {\n  /**\n   * Representing root-node identifier\n   */\n  export const rootToken = \"@root\";\n\n  /**\n   * Stored xml-parser instance\n   */\n  let parser: Parser & {\n    parseString: (\n      xmlData: string | Buffer,\n      callback: (err: Error | null, result: unknown) => void,\n    ) => void;\n  };\n\n  /**\n   * Regex for detect read-operator in xml-schema\n   */\n  export const ReadOperatorRe = /\\$\\{@read:([^}]*)}/;\n\n  /**\n   * Returns the XML parser instance.\n   * @returns The XML parser instance.\n   */\n  export function getXmlParser() {\n    if (parser) {\n      return parser;\n    }\n    parser = new xml2js.Parser({\n      explicitArray: false,\n      preserveChildrenOrder: true,\n      explicitChildren: true,\n    });\n    return parser;\n  }\n\n  /**\n   * Parses the XML body into an XdbObject.\n   * @param body - The body containing the XML schema.\n   * @returns The parsed XdbObject.\n   */\n  export function parseXmlBody(body: { schema }) {\n    const schema = body.schema;\n    const actions = schema.$$;\n    const result: XdbObject = {\n      schema: [],\n    };\n    for (const action of actions) {\n      const tagName = action[\"#name\"];\n      const target = action?.$?.target;\n      const read = action?.$?.read;\n      const content = action?.$?.content;\n      const rows = action.$$ ?? [];\n      const obj: XdbAction = {\n        action: tagName,\n        attrs: { target, read, content },\n        rows: [],\n      };\n      for (const row of rows) {\n        const rowObj: XdbRowData = {};\n        for (const item of row.$$) {\n          const itemName = item[\"#name\"];\n          if (item.$) {\n            rowObj[itemName] = {\n              attrs: item.$,\n              value: item._,\n            };\n            if (item.$.key && item.$$) {\n              rowObj[itemName].values = item.$$.map((r) => r._);\n            }\n          } else {\n            rowObj[itemName] = item._;\n          }\n        }\n        obj.rows.push(rowObj);\n      }\n      result.schema.push(obj);\n    }\n    return result;\n  }\n\n  /**\n   * Parses an XML file into an XdbObject.\n   * @param xmlData - The XML data buffer.\n   * @returns A promise that resolves to the parsed XdbObject.\n   */\n  export async function parseXmlFile(xmlData: Buffer): Promise {\n    return new Promise((resolve, reject) => {\n      getXmlParser().parseString(xmlData, async (err, result) => {\n        if (err) {\n          reject(err);\n        } else {\n          const body = parseXmlBody(result as { schema });\n          resolve(body);\n        }\n      });\n    });\n  }\n\n  /**\n   * Removes duplicate objects from an array of XdbDecomposedEntity.\n   * @param array - The array of XdbDecomposedEntity.\n   * @returns The array with duplicates removed.\n   */\n  export function removeDuplicateObjects(\n    array: XdbDecomposedEntity[],\n  ): XdbDecomposedEntity[] {\n    const uniqueObjects: XdbDecomposedEntity[] = [];\n    array.reverse().forEach((obj) => {\n      if (!uniqueObjects.some((uniqueObj) => deepEqual(uniqueObj, obj))) {\n        uniqueObjects.push(obj);\n      }\n    });\n    return uniqueObjects.reverse();\n  }\n\n  /**\n   * Checks if two objects are deeply equal.\n   * @param obj1 - The first object.\n   * @param obj2 - The second object.\n   * @returns A boolean indicating whether the objects are deeply equal.\n   */\n  function deepEqual(obj1: ObjectLiteral, obj2: ObjectLiteral): boolean {\n    if (obj1 === obj2) {\n      return true;\n    }\n    if (\n      typeof obj1 !== \"object\" ||\n      typeof obj2 !== \"object\" ||\n      obj1 === null ||\n      obj2 === null\n    ) {\n      return false;\n    }\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (const key of keys1) {\n      if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/XdbRequest.html":{"url":"interfaces/XdbRequest.html","title":"interface - XdbRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  XdbRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an XML data bridge request.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type, Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { DynamicModule } from \"@nestjs/common/interfaces/modules/dynamic-module.interface\";\nimport { ForwardReference } from \"@nestjs/common/interfaces/modules/forward-reference.interface\";\nimport { ObjectLiteral } from \"typeorm\";\nimport {\n  XdbExportService,\n  XdbImportService,\n} from \"./xml-data-bridge.constants\";\nimport { User } from \"../user/user.types\";\n\n/**\n * Interface representing an XML data bridge request.\n */\nexport interface XdbRequest {\n  target: string;\n  id: string;\n}\n\n/**\n * Type representing a row data value in the XML data bridge.\n */\nexport type XdbRowDataValue = {\n  attrs?: {\n    key?: string;\n    uri?: string;\n    mode?: \"push\";\n  };\n  value?: string;\n  values?: string[];\n};\n\n/**\n * Type representing a row of data in the XML data bridge.\n */\nexport type XdbRowData = {\n  [key: string]: XdbRowDataValue;\n};\n\n/**\n * Type representing a media row in the XML data bridge.\n */\nexport type MediaRow = {\n  name: XdbRowDataValue;\n  code: string;\n  type: string;\n  file: string;\n};\n\n/**\n * Type representing a file row in the XML data bridge.\n */\nexport type FileRow = {\n  name: string;\n  code: string;\n  public: boolean;\n  file: string;\n};\n\n/**\n * Type representing an action in the XML data bridge.\n */\nexport type XdbAction = {\n  action: \"InsertUpdate\" | \"Media\" | \"File\" | \"Remove\" | \"Include\" | \"Query\";\n  attrs: {\n    target?: string;\n    read?: string;\n    content?: string;\n  };\n  rows: Array;\n};\n\n/**\n * Type representing an XML data bridge object.\n */\nexport type XdbObject = {\n  schema: XdbAction[];\n};\n\n/**\n * Options for configuring the XmlDataBridgeModule.\n */\nexport type XdbModuleOptions = {\n  importService: Class;\n  exportService: Class;\n  imports: Array | DynamicModule | Promise | ForwardReference\n  >;\n};\n\n/**\n * Type representing export parameters for the XML data bridge.\n */\nexport type XdbExportParams = {\n  target: string;\n  id: string;\n  depth: number;\n  useFiles: boolean;\n  excludeProperties: string[];\n  user: User;\n};\n\n/**\n * Type representing the export DTO for the XML data bridge.\n */\nexport type XdbExportDto = {\n  file: string;\n};\n\n/**\n * Type representing a decomposed entity in the XML data bridge.\n */\nexport type XdbDecomposedEntity = {\n  metadata: { type: string; fieldName: string; path: string };\n  data: ObjectLiteral | Array;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/XmlDataBridgeMiddleware.html":{"url":"injectables/XmlDataBridgeMiddleware.html","title":"injectable - XmlDataBridgeMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  XmlDataBridgeMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.middleware.ts\n        \n\n\n            \n                Description\n            \n            \n                Middleware for parsing XML data from requests.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                parser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                parseXMLFromRequest\n                            \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parseXMLFromRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseXMLFromRequest(req: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.middleware.ts:47\n                        \n                    \n\n\n            \n                \n                        Parses XML data from the request.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe request object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the parsed XML data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                        \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.middleware.ts:34\n                        \n                    \n\n\n            \n                \n                        Parses XML data from the request and modifies the request body.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe request object.\n\n\n                                            \n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe response object.\n\n\n                                            \n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe next function to call.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        parser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Xdb.getXmlParser()\n                    \n                \n                    \n                        \n                                Defined in lib/common/xml-data-bridge/xml-data-bridge.middleware.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from \"@nestjs/common\";\nimport { NextFunction, Request, Response } from \"express\";\nimport { Xdb } from \"./xml-data-bridge.constants\";\n\n/**\n * Middleware for parsing XML data from requests.\n */\n@Injectable()\nexport class XmlDataBridgeMiddleware implements NestMiddleware {\n  private readonly parser = Xdb.getXmlParser();\n\n  /**\n   * Parses XML data from the request and modifies the request body.\n   * @param req - The request object.\n   * @param res - The response object.\n   * @param next - The next function to call.\n   */\n  async use(req: Request, res: Response, next: NextFunction) {\n    if (req.headers[\"content-type\"] === \"application/xml\") {\n      req.body = await this.parseXMLFromRequest(req);\n      req.body = Xdb.parseXmlBody(req.body);\n    }\n    next();\n  }\n\n  /**\n   * Parses XML data from the request.\n   * @param req - The request object.\n   * @returns A promise that resolves to the parsed XML data.\n   */\n  private parseXMLFromRequest(req: Request): Promise {\n    return new Promise((resolve, reject) => {\n      let xmlData = \"\";\n      req.on(\"data\", (chunk) => {\n        xmlData += chunk;\n      });\n      req.on(\"end\", () => {\n        this.parser.parseString(xmlData, (err, result) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(result as object);\n          }\n        });\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/XmlDataBridgeModule.html":{"url":"modules/XmlDataBridgeModule.html","title":"module - XmlDataBridgeModule","body":"\n                   \n\n\n\n\n    Modules\n    XmlDataBridgeModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module responsible for import and export XML-configuration.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: XdbModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.module.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            XdbModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      importService: XmlDataBridgeImportService,\n      exportService: XmlDataBridgeExportService,\n      imports: [\n        LogModule,\n        CacheModule,\n        ExplorerModule.forRoot(),\n        FileModule.forRoot(),\n        MediaModule.forRoot(),\n      ],\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { XdbModuleOptions } from \"./xml-data-bridge.types\";\nimport { XmlDataBridgeImportService } from \"./xml-data-bridge-import.service\";\nimport { XmlDataBridgeExportService } from \"./xml-data-bridge-export.service\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { ExplorerModule } from \"../explorer/explorer.module\";\nimport { FileModule } from \"../file/file.module\";\nimport { MediaModule } from \"../media/media.module\";\nimport {\n  XdbExportService,\n  XdbImportService,\n} from \"./xml-data-bridge.constants\";\n\n/**\n * Module responsible for import and export XML-configuration.\n */\n@Module({})\nexport class XmlDataBridgeModule {\n  static forRoot(\n    options: XdbModuleOptions = {\n      importService: XmlDataBridgeImportService,\n      exportService: XmlDataBridgeExportService,\n      imports: [\n        LogModule,\n        CacheModule,\n        ExplorerModule.forRoot(),\n        FileModule.forRoot(),\n        MediaModule.forRoot(),\n      ],\n    },\n  ): DynamicModule {\n    return {\n      module: XmlDataBridgeModule,\n      imports: options.imports,\n      providers: [\n        {\n          provide: XdbImportService,\n          useClass: options.importService,\n        },\n        {\n          provide: XdbExportService,\n          useClass: options.exportService,\n        },\n      ],\n      exports: [XdbImportService, XdbExportService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @nestjs/axios : 3.*\n        \n            @nestjs/common : 10.*\n        \n            @nestjs/core : 10.*\n        \n            @nestjs/jwt : 10.*\n        \n            @nestjs/microservices : 10.*\n        \n            @nestjs/passport : 10.*\n        \n            @nestjs/schedule : 4.*\n        \n            adm-zip : 0.5.*\n        \n            axios : 1.*\n        \n            bcrypt : 5.*\n        \n            canvas : 2.11.*\n        \n            class-transformer : 0.5.*\n        \n            class-validator : 0.14.*\n        \n            dotenv : 16.*\n        \n            exifreader : 4.*\n        \n            ffprobe : 1.*\n        \n            ffprobe-static : 3.*\n        \n            file-type : 19.*\n        \n            heic-convert : 2.*\n        \n            imagemin : 7.*\n        \n            imagemin-mozjpeg : 9.*\n        \n            imagemin-pngquant : 9.*\n        \n            ioredis : 5.*\n        \n            music-metadata : 7.*\n        \n            node-redis-warlock : 1.*\n        \n            object-hash : 3.*\n        \n            reflect-metadata : 0.2.*\n        \n            rxjs : 7.*\n        \n            sharp : 0.33.*\n        \n            typeorm : 0.3.*\n        \n            uuid : 9.*\n        \n            xml2js : 0.6.*\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Command   (lib/.../process.constants.ts)\n                        \n                        \n                            LogLevel   (lib/.../process.constants.ts)\n                        \n                        \n                            SortOrder   (lib/.../pageable.types.ts)\n                        \n                        \n                            Status   (lib/.../process.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/common/process/process.constants.ts\n    \n        \n            \n                \n                    \n                        \n                        Command\n                    \n                \n                    \n                        \n                            Enum of possible process commands.\n\n                        \n                    \n                        \n                            \n                                 Register\n                            \n                        \n                        \n                            \n                                Value : process:register\n                            \n                        \n                        \n                            \n                                 Unregister\n                            \n                        \n                        \n                            \n                                Value : process:unregister\n                            \n                        \n                        \n                            \n                                 Start\n                            \n                        \n                        \n                            \n                                Value : process:start\n                            \n                        \n                        \n                            \n                                 Stop\n                            \n                        \n                        \n                            \n                                Value : process:stop\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                    \n                        \n                            Enum of log levels.\n\n                        \n                    \n                        \n                            \n                                 Log\n                            \n                        \n                        \n                            \n                                Value : LOG\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value : ERROR\n                            \n                        \n                        \n                            \n                                 Warn\n                            \n                        \n                        \n                            \n                                Value : WARN\n                            \n                        \n                        \n                            \n                                 Verbose\n                            \n                        \n                        \n                            \n                                Value : VERBOSE\n                            \n                        \n                        \n                            \n                                 Debug\n                            \n                        \n                        \n                            \n                                Value : DEBUG\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Status\n                    \n                \n                    \n                        \n                            Enum of possible process statuses.\n\n                        \n                    \n                        \n                            \n                                 Execute\n                            \n                        \n                        \n                            \n                                Value : execute\n                            \n                        \n                        \n                            \n                                 Ready\n                            \n                        \n                        \n                            \n                                Value : ready\n                            \n                        \n                        \n                            \n                                 Crashed\n                            \n                        \n                        \n                            \n                                Value : crashed\n                            \n                        \n            \n        \n\n    lib/shared/modules/pageable/pageable.types.ts\n    \n        \n            \n                \n                    \n                        \n                        SortOrder\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTODO\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\nExample :  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.   Copyright 2023 Alexander Kiriliuk\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\nExample :   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CacheModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CaptchaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExplorerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocaleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LogModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessagesBrokerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MsClientModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProcessModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RedisModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WarlockModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        XmlDataBridgeModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CacheModule\n\n\n\ncluster_CacheModule_imports\n\n\n\ncluster_CacheModule_exports\n\n\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_exports\n\n\n\ncluster_CategoryModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_ConfigModule_providers\n\n\n\ncluster_LocaleModule\n\n\n\ncluster_LocaleModule_exports\n\n\n\ncluster_LocaleModule_providers\n\n\n\ncluster_MessagesBrokerModule\n\n\n\ncluster_MsClientModule\n\n\n\ncluster_ProcessModule\n\n\n\ncluster_ProcessModule_imports\n\n\n\ncluster_ProcessModule_exports\n\n\n\ncluster_ProcessModule_providers\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nCacheModule\n\nCacheModule\n\nCacheModule -->\n\nLogModule->CacheModule\n\n\n\n\n\nCategoryModule\n\nCategoryModule\n\nCategoryModule -->\n\nLogModule->CategoryModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nConfigModule -->\n\nLogModule->ConfigModule\n\n\n\n\n\nMsClientModule\n\nMsClientModule\n\nMsClientModule -->\n\nLogModule->MsClientModule\n\n\n\n\n\nProcessModule\n\nProcessModule\n\nProcessModule -->\n\nLogModule->ProcessModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nCacheModule -->\n\nRedisModule->CacheModule\n\n\n\n\n\nMessagesBrokerModule\n\nMessagesBrokerModule\n\nMessagesBrokerModule -->\n\nRedisModule->MessagesBrokerModule\n\n\n\n\n\nWarlockModule\n\nWarlockModule\n\nWarlockModule -->\n\nRedisModule->WarlockModule\n\n\n\n\n\nCacheService \n\nCacheService \n\nCacheService  -->\n\nCacheModule->CacheService \n\n\n\nConfigModule -->\n\nCacheModule->ConfigModule\n\n\n\n\n\nCategoryService \n\nCategoryService \n\nCategoryService  -->\n\nCategoryModule->CategoryService \n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nConfigService\n\nConfigService\n\nConfigModule -->\n\nConfigService->ConfigModule\n\n\n\n\n\nLocaleService \n\nLocaleService \n\n\n\nLocaleModule\n\nLocaleModule\n\nLocaleService  -->\n\nLocaleModule->LocaleService \n\n\n\n\n\nLocaleService\n\nLocaleService\n\nLocaleModule -->\n\nLocaleService->LocaleModule\n\n\n\nProcessModule -->\n\nMessagesBrokerModule->ProcessModule\n\n\n\nProcessModule -->\n\nWarlockModule->ProcessModule\n\n\n\n\n\nProcessManagerService \n\nProcessManagerService \n\nProcessManagerService  -->\n\nProcessModule->ProcessManagerService \n\n\n\n\n\nProcessManagerService\n\nProcessManagerService\n\nProcessModule -->\n\nProcessManagerService->ProcessModule\n\n\n\n\n\nProcessRegisterService\n\nProcessRegisterService\n\nProcessModule -->\n\nProcessRegisterService->ProcessModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    27 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    22 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    43 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    34 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : todo description\n        \n            License : Apache-2.0\n        \n            Author : Alexander Kiriliuk\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthModuleOptions   (lib/.../auth.types.ts)\n                        \n                        \n                            CaptchaModuleOptions   (lib/.../captcha.types.ts)\n                        \n                        \n                            CaptchaResponse   (lib/.../captcha.types.ts)\n                        \n                        \n                            ColumnDataType   (lib/.../explorer.types.ts)\n                        \n                        \n                            ExplorerModuleOptions   (lib/.../explorer.types.ts)\n                        \n                        \n                            ExplorerSelectParams   (lib/.../explorer.types.ts)\n                        \n                        \n                            ExplorerTargetParams   (lib/.../explorer.types.ts)\n                        \n                        \n                            FileModuleOptions   (lib/.../file.types.ts)\n                        \n                        \n                            FileRow   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            MediaModuleOptions   (lib/.../media.types.ts)\n                        \n                        \n                            MediaRow   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            MsClientOptions   (lib/.../ms-client.types.ts)\n                        \n                        \n                            UserModuleOptions   (lib/.../user.types.ts)\n                        \n                        \n                            Variation   (lib/.../explorer.constants.ts)\n                        \n                        \n                            WarlockFn   (lib/.../warlock.types.ts)\n                        \n                        \n                            XdbAction   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbDecomposedEntity   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbExportDto   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbExportParams   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbModuleOptions   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbObject   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbRowData   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbRowDataValue   (lib/.../xml-data-bridge.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/common/auth/auth.types.ts\n    \n    \n        \n            \n                \n                    \n                    AuthModuleOptions\n                \n            \n            \n                \n                    Options for configuring the authentication module.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/captcha/captcha.types.ts\n    \n    \n        \n            \n                \n                    \n                    CaptchaModuleOptions\n                \n            \n            \n                \n                    Options for configuring the CAPTCHA module.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CaptchaResponse\n                \n            \n            \n                \n                    Type representing a CAPTCHA response for client side.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/explorer/explorer.types.ts\n    \n    \n        \n            \n                \n                    \n                    ColumnDataType\n                \n            \n            \n                \n                    Type representing embedded data types for a column.\n\n                \n            \n            \n                \n                        \"string\" | \"number\" | \"boolean\" | \"date\" | \"reference\" | \"unknown\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExplorerModuleOptions\n                \n            \n            \n                \n                    Options for configuring the Explorer module.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExplorerSelectParams\n                \n            \n            \n                \n                    Type representing selection parameters for an explorer entity.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExplorerTargetParams\n                \n            \n            \n                \n                    Type representing parameters for find explorer targets\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/file/file.types.ts\n    \n    \n        \n            \n                \n                    \n                    FileModuleOptions\n                \n            \n            \n                \n                    Options for configuring the FileModule.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/xml-data-bridge/xml-data-bridge.types.ts\n    \n    \n        \n            \n                \n                    \n                    FileRow\n                \n            \n            \n                \n                    Type representing a file row in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MediaRow\n                \n            \n            \n                \n                    Type representing a media row in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbAction\n                \n            \n            \n                \n                    Type representing an action in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbDecomposedEntity\n                \n            \n            \n                \n                    Type representing a decomposed entity in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbExportDto\n                \n            \n            \n                \n                    Type representing the export DTO for the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbExportParams\n                \n            \n            \n                \n                    Type representing export parameters for the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbModuleOptions\n                \n            \n            \n                \n                    Options for configuring the XmlDataBridgeModule.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbObject\n                \n            \n            \n                \n                    Type representing an XML data bridge object.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbRowData\n                \n            \n            \n                \n                    Type representing a row of data in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbRowDataValue\n                \n            \n            \n                \n                    Type representing a row data value in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/media/media.types.ts\n    \n    \n        \n            \n                \n                    \n                    MediaModuleOptions\n                \n            \n            \n                \n                    Options for configuring the MediaModule.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/shared/modules/ms-client/ms-client.types.ts\n    \n    \n        \n            \n                \n                    \n                    MsClientOptions\n                \n            \n            \n                \n                    Type definition for microservices client options.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/user/user.types.ts\n    \n    \n        \n            \n                \n                    \n                    UserModuleOptions\n                \n            \n            \n                \n                    Options for configuring the UserModule.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/explorer/explorer.constants.ts\n    \n    \n        \n            \n                \n                    \n                    Variation\n                \n            \n            \n                \n                    Type representing a fetch-mode for explorer entity.\n\n                \n            \n            \n                \n                        \"section\" | \"object\"\n\n                \n            \n        \n    \n    lib/shared/modules/warlock/warlock.types.ts\n    \n    \n        \n            \n                \n                    \n                    WarlockFn\n                \n            \n            \n                \n                    Type definition for the warlock function used for locking mechanisms.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCESS_TOKEN_ERROR_MSG   (lib/.../auth.constants.ts)\n                        \n                        \n                            AccessToken   (lib/.../access-token.decorator.ts)\n                        \n                        \n                            AllowedForMetadataKey   (lib/.../for-roles.decorator.ts)\n                        \n                        \n                            AUTH_ACCESS_TOKEN_PREFIX   (lib/.../auth.constants.ts)\n                        \n                        \n                            AUTH_JWT_CACHE_PREFIX   (lib/.../auth.constants.ts)\n                        \n                        \n                            AUTH_REFRESH_TOKEN_PREFIX   (lib/.../auth.constants.ts)\n                        \n                        \n                            BODY_TOKEN   (lib/.../xml-data-bridge-file-schema.ts)\n                        \n                        \n                            BRUTEFORCE_JWT_CACHE_PREFIX   (lib/.../auth.constants.ts)\n                        \n                        \n                            bruteForceIPKey   (lib/.../auth.constants.ts)\n                        \n                        \n                            bruteForceLoginKey   (lib/.../auth.constants.ts)\n                        \n                        \n                            CAPTCHA_CACHE_PREFIX   (lib/.../captcha.constants.ts)\n                        \n                        \n                            CATEGORY_RELATIONS   (lib/.../category.constants.ts)\n                        \n                        \n                            CONFIG_CACHE_PREFIX   (lib/.../config.constants.ts)\n                        \n                        \n                            CONFIG_FILE_EXT_PATTERN   (lib/.../config.constants.ts)\n                        \n                        \n                            CurrentUser   (lib/.../current-user.decorator.ts)\n                        \n                        \n                            DEFAULT_MEDIA_QUALITY   (lib/.../media.constants.ts)\n                        \n                        \n                            DEFAULT_MEDIA_TYPE   (lib/.../media.constants.ts)\n                        \n                        \n                            ENTITY_SAVE_HANDLER   (lib/.../explorer.constants.ts)\n                        \n                        \n                            FILES_ENCODING   (lib/.../config.constants.ts)\n                        \n                        \n                            fileTypeModule   (lib/.../files.utils.ts)\n                        \n                        \n                            ForRoles   (lib/.../for-roles.decorator.ts)\n                        \n                        \n                            GEN_SRC_DIR   (lib/.../config.constants.ts)\n                        \n                        \n                            InitConfig   (lib/.../config.init-fn.ts)\n                        \n                        \n                            jwtAccessTokenKey   (lib/.../auth.constants.ts)\n                        \n                        \n                            jwtRefreshTokenKey   (lib/.../auth.constants.ts)\n                        \n                        \n                            KP_PROPERTIES_FILE_NAME   (lib/.../config.constants.ts)\n                        \n                        \n                            LOCAL_PROPERTIES_FILE_NAME   (lib/.../config.constants.ts)\n                        \n                        \n                            LOGGER   (lib/.../log.constants.ts)\n                        \n                        \n                            MEDIA_RELATIONS   (lib/.../media.constants.ts)\n                        \n                        \n                            MEDIA_TYPE_RELATIONS   (lib/.../media.constants.ts)\n                        \n                        \n                            MESSAGES_BROKER   (lib/.../messages-broker.constants.ts)\n                        \n                        \n                            MS_CLIENT   (lib/.../ms-client.constants.ts)\n                        \n                        \n                            MS_EXCEPTION_ID   (lib/.../constants.ts)\n                        \n                        \n                            MSG_BUS   (lib/.../ms-client.constants.ts)\n                        \n                        \n                            ORIGINAL   (lib/.../media.constants.ts)\n                        \n                        \n                            parser   (lib/.../xml-data-bridge.constants.ts)\n                        \n                        \n                            PROPERTIES_FILE_EXT_PATTERN   (lib/.../config.constants.ts)\n                        \n                        \n                            ReadOperatorRe   (lib/.../xml-data-bridge.constants.ts)\n                        \n                        \n                            REDIS_CLIENT   (lib/.../cache.constants.ts)\n                        \n                        \n                            REFRESH_TOKEN_ERROR_MSG   (lib/.../auth.constants.ts)\n                        \n                        \n                            REGISTERED_PROCESSES   (lib/.../process.constants.ts)\n                        \n                        \n                            REQUEST_PROPS   (lib/.../constants.ts)\n                        \n                        \n                            rootToken   (lib/.../xml-data-bridge.constants.ts)\n                        \n                        \n                            SimpleJsonTransformer   (lib/.../simple-json.transformer.ts)\n                        \n                        \n                            SVG   (lib/.../media.constants.ts)\n                        \n                        \n                            TARGET_RELATIONS_BASIC   (lib/.../explorer.constants.ts)\n                        \n                        \n                            TARGET_RELATIONS_FULL   (lib/.../explorer.constants.ts)\n                        \n                        \n                            TARGET_RELATIONS_OBJECT   (lib/.../explorer.constants.ts)\n                        \n                        \n                            TARGET_RELATIONS_SECTION   (lib/.../explorer.constants.ts)\n                        \n                        \n                            THUMB   (lib/.../media.constants.ts)\n                        \n                        \n                            UNKNOWN_IP   (lib/.../auth.constants.ts)\n                        \n                        \n                            USER_RELATIONS   (lib/.../user.constants.ts)\n                        \n                        \n                            WARLOCK   (lib/.../warlock.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/common/auth/auth.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ACCESS_TOKEN_ERROR_MSG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"ERR_TOKEN_A\"\n                    \n                \n\n            \n                \n                    Error message for access token related errors.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_ACCESS_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"access_token\"\n                    \n                \n\n            \n                \n                    Prefix for access token cache keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_JWT_CACHE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"jwt\"\n                    \n                \n\n            \n                \n                    Prefix for JWT cache keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_REFRESH_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"refresh_token\"\n                    \n                \n\n            \n                \n                    Prefix for refresh token cache keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BRUTEFORCE_JWT_CACHE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"bruteforce\"\n                    \n                \n\n            \n                \n                    Prefix for brute force protection cache keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bruteForceIPKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (ipAddress: string) =>\n  `${BRUTEFORCE_JWT_CACHE_PREFIX}:ip:${ipAddress}`\n                    \n                \n\n            \n                \n                    Generates a cache key for tracking brute force login attempts by IP address.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bruteForceLoginKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (login: string) =>\n  `${BRUTEFORCE_JWT_CACHE_PREFIX}:login:${login}`\n                    \n                \n\n            \n                \n                    Generates a cache key for tracking brute force login attempts by login.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtAccessTokenKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (accessToken: string) => {\n  return `${AUTH_JWT_CACHE_PREFIX}:${AUTH_ACCESS_TOKEN_PREFIX}:${accessToken}`;\n}\n                    \n                \n\n            \n                \n                    Generates a cache key for an access token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtRefreshTokenKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  accessToken: string,\n  refreshToken: string,\n) => {\n  return `${AUTH_JWT_CACHE_PREFIX}:${AUTH_REFRESH_TOKEN_PREFIX}:${accessToken}:${refreshToken}`;\n}\n                    \n                \n\n            \n                \n                    Generates a cache key for a refresh token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REFRESH_TOKEN_ERROR_MSG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"ERR_TOKEN_R\"\n                    \n                \n\n            \n                \n                    Error message for refresh token related errors.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UNKNOWN_IP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"unknown\"\n                    \n                \n\n            \n                \n                    Placeholder for unknown IP addresses.\n\n                \n            \n\n        \n    \n\n    lib/shared/decorators/access-token.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AccessToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request[REQUEST_PROPS.accessToken];\n  },\n)\n                    \n                \n\n            \n                \n                    A custom decorator for extracting access token from a request.\n\n                \n            \n\n        \n    \n\n    lib/shared/decorators/for-roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AllowedForMetadataKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"for_roles\"\n                    \n                \n\n            \n                \n                    A constant string key used for role-based access control metadata.\nThis key is used to annotate routes or controllers with the roles allowed to access them.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ForRoles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: string[]) =>\n  SetMetadata(AllowedForMetadataKey, roles)\n                    \n                \n\n            \n                \n                    ForRoles custom decorator for defining roles allowed to access a route.\n\n                \n            \n\n        \n    \n\n    lib/common/xml-data-bridge/xml-data-bridge-file-schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BODY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `%%%body%%%`\n                    \n                \n\n            \n                \n                    A placeholder string used for tokenizing the body content within templates.\nThis token is used to dynamically replace or insert content in XML or other templated strings.\n\n                \n            \n\n        \n    \n\n    lib/common/captcha/captcha.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CAPTCHA_CACHE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"captcha\"\n                    \n                \n\n            \n                \n                    The prefix used for storing CAPTCHA data.\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/category/category.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CATEGORY_RELATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  \"icon\",\n  \"icon.name\",\n  \"icon.name.lang\",\n  \"icon.files\",\n  \"icon.files.format\",\n  \"icon.type\",\n  \"icon.type.ext\",\n  \"name\",\n  \"name.lang\",\n]\n                    \n                \n\n            \n                \n                    An array defining the relations to be loaded with the Category entity.\n\n                \n            \n\n        \n    \n\n    lib/common/config/config.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CONFIG_CACHE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"config\"\n                    \n                \n\n            \n                \n                    The prefix used for storing configuration items.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CONFIG_FILE_EXT_PATTERN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \".config.ts\"\n                    \n                \n\n            \n                \n                    The pattern for configuration file extensions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FILES_ENCODING\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"utf-8\"\n                    \n                \n\n            \n                \n                    The encoding used for reading and writing configuration files.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GEN_SRC_DIR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"gen-src\"\n                    \n                \n\n            \n                \n                    The directory where generated source files are stored.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        KP_PROPERTIES_FILE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"kp.properties\"\n                    \n                \n\n            \n                \n                    The name of the kp properties file.\nIt is assumed that this is the main configuration file, located in the root of the project\nand can override the properties of any .properties in the entire project\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LOCAL_PROPERTIES_FILE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"local.properties\"\n                    \n                \n\n            \n                \n                    The name of the local properties file\nIt is assumed that such files override neighboring ones .properties files and are out of version control.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROPERTIES_FILE_EXT_PATTERN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \".properties\"\n                    \n                \n\n            \n                \n                    The pattern for properties file extensions.\n\n                \n            \n\n        \n    \n\n    lib/shared/decorators/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request[REQUEST_PROPS.currentUser];\n  },\n)\n                    \n                \n\n            \n                \n                    A custom decorator for extracting the current user from a request.\n\n                \n            \n\n        \n    \n\n    lib/common/media/media.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_MEDIA_QUALITY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 78\n                    \n                \n\n            \n                \n                    Default media quality value.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_MEDIA_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"default\"\n                    \n                \n\n            \n                \n                    Default media type code.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MEDIA_RELATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  \"name\",\n  \"name.lang\",\n  \"type\",\n  \"type.formats\",\n  \"type.ext\",\n  \"files\",\n  \"files.format\",\n]\n                    \n                \n\n            \n                \n                    Array containing relations for media.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MEDIA_TYPE_RELATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"ext\", \"formats\"]\n                    \n                \n\n            \n                \n                    Array containing relations for media type.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ORIGINAL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"original\"\n                    \n                \n\n            \n                \n                    Represents the original media format.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SVG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"svg\"\n                    \n                \n\n            \n                \n                    Represents the SVG media extension.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        THUMB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"thumb\"\n                    \n                \n\n            \n                \n                    Represents the thumbnail media format.\n\n                \n            \n\n        \n    \n\n    lib/common/explorer/explorer.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENTITY_SAVE_HANDLER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"ENTITY_SAVE_HANDLER\")\n                    \n                \n\n            \n                \n                    Token for injecting entity save handler.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_RELATIONS_BASIC\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"name\",\n    \"name.lang\",\n    \"description\",\n    \"description.lang\",\n    \"icon\",\n    \"icon.name\",\n    \"icon.name.lang\",\n    \"icon.files\",\n    \"icon.files.format\",\n    \"icon.type\",\n    \"icon.type.ext\",\n  ]\n                    \n                \n\n            \n                \n                    Basic target relations for entities.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_RELATIONS_FULL\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"name\",\n    \"name.lang\",\n    \"description\",\n    \"description.lang\",\n    \"icon\",\n    \"icon.name\",\n    \"icon.name.lang\",\n    \"icon.files\",\n    \"icon.files.format\",\n    \"icon.type\",\n    \"icon.type.ext\",\n    \"columns\",\n    \"columns.name\",\n    \"columns.name.lang\",\n    \"columns.description\",\n    \"columns.description.lang\",\n    \"columns.objectRenderer\",\n    \"columns.objectRenderer.name\",\n    \"columns.objectRenderer.name.lang\",\n    \"columns.objectRenderer.description\",\n    \"columns.objectRenderer.description.lang\",\n    \"columns.sectionRenderer\",\n    \"columns.sectionRenderer.name\",\n    \"columns.sectionRenderer.name.lang\",\n    \"columns.sectionRenderer.description\",\n    \"columns.sectionRenderer.description.lang\",\n    \"columns.tab\",\n    \"columns.tab.name\",\n    \"columns.tab.name.lang\",\n    \"actions\",\n    \"actions.name\",\n    \"actions.name.lang\",\n    \"actions.description\",\n    \"actions.description.lang\",\n    \"canRead\",\n    \"canRead.name\",\n    \"canRead.name.lang\",\n    \"canWrite\",\n    \"canWrite.name\",\n    \"canWrite.name.lang\",\n  ]\n                    \n                \n\n            \n                \n                    Full target relations for entities.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_RELATIONS_OBJECT\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"name\",\n    \"name.lang\",\n    \"icon\",\n    \"icon.name\",\n    \"icon.name.lang\",\n    \"icon.files\",\n    \"icon.files.format\",\n    \"icon.type\",\n    \"icon.type.ext\",\n    \"columns\",\n    \"columns.name\",\n    \"columns.name.lang\",\n    \"columns.objectRenderer\",\n    \"columns.objectRenderer.name\",\n    \"columns.objectRenderer.name.lang\",\n    \"columns.objectRenderer.description\",\n    \"columns.objectRenderer.description.lang\",\n    \"columns.tab\",\n    \"columns.tab.name\",\n    \"columns.tab.name.lang\",\n    \"actions\",\n    \"actions.name\",\n    \"actions.name.lang\",\n    \"actions.description\",\n    \"actions.description.lang\",\n  ]\n                    \n                \n\n            \n                \n                    Target relations for object-entities.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_RELATIONS_SECTION\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"name\",\n    \"name.lang\",\n    \"icon\",\n    \"icon.name\",\n    \"icon.name.lang\",\n    \"icon.files\",\n    \"icon.files.format\",\n    \"icon.type\",\n    \"icon.type.ext\",\n    \"columns\",\n    \"columns.name\",\n    \"columns.name.lang\",\n    \"columns.sectionRenderer\",\n    \"columns.sectionRenderer.name\",\n    \"columns.sectionRenderer.name.lang\",\n    \"columns.sectionRenderer.description\",\n    \"columns.sectionRenderer.description.lang\",\n    \"actions\",\n    \"actions.name\",\n    \"actions.name.lang\",\n    \"actions.description\",\n    \"actions.description.lang\",\n  ]\n                    \n                \n\n            \n                \n                    Target relations for section-entities.\n\n                \n            \n\n        \n    \n\n    lib/shared/utils/files.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fileTypeModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {} as { lib: typeof import(\"file-type\") }\n                    \n                \n\n            \n                \n                    Object to hold the dynamically imported file-type module.\n\n                \n            \n\n        \n    \n\n    lib/common/config/config.init-fn.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        InitConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const app = await NestFactory.createApplicationContext(ConfigModule);\n  await app.init();\n  const logger: Logger = app.select(LogModule).get(LOGGER);\n  EnvLoader.loadEnvironment(logger);\n  const configService = app.select(ConfigModule).get(ConfigService);\n  const genCnfDir = `${process.cwd()}/${process.env.CONFIG_SRC_DIR}`;\n  await configService.initWithPropertiesFiles(genCnfDir);\n  await app.close();\n  process.exit(0);\n}\n                    \n                \n\n            \n                \n                    Asynchronously initializes the application context with the ConfigModule,\nloads environment variables, and initializes the configuration service with .properties files.\nThis function used for initialize config store\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/log/log.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOGGER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"LOGGER_SERVICE\")\n                    \n                \n\n            \n                \n                    Symbol used as a token for the LogService.\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/messages-broker/messages-broker.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MESSAGES_BROKER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"MSG_BROKER\")\n                    \n                \n\n            \n                \n                    Symbol used as a token for injecting the MessagesBrokerService.\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/ms-client/ms-client.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MS_CLIENT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"MS_CLIENT\")\n                    \n                \n\n            \n                \n                    Symbol used as a token for injecting the microservices' client.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MSG_BUS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"MSG_BUS\")\n                    \n                \n\n            \n                \n                    Symbol used as a token for injecting the message bus.\n\n                \n            \n\n        \n    \n\n    lib/shared/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MS_EXCEPTION_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"MsException\"\n                    \n                \n\n            \n                \n                    A constant representing the exception identifier for microservices.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REQUEST_PROPS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * @property accessToken\n   * The property name for storing the access token in the request.\n   */\n  accessToken: \"accessToken\",\n\n  /**\n   * @property currentUser\n   * The property name for storing the current user in the request.\n   */\n  currentUser: \"currentUser\",\n}\n                    \n                \n\n            \n                \n                    An object containing properties used for request handling.\n\n                \n            \n\n        \n    \n\n    lib/common/xml-data-bridge/xml-data-bridge.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parser\n                        \n                    \n                \n            \n\n            \n                \n                    Stored xml-parser instance\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReadOperatorRe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : /\\$\\{@read:([^}]*)}/\n                    \n                \n\n            \n                \n                    Regex for detect read-operator in xml-schema\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rootToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"@root\"\n                    \n                \n\n            \n                \n                    Representing root-node identifier\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/cache/cache.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REDIS_CLIENT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"REDIS_CLIENT\")\n                    \n                \n\n            \n                \n                    A symbol used for injecting the Redis client.\n\n                \n            \n\n        \n    \n\n    lib/common/process/process.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REGISTERED_PROCESSES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n\n            \n                \n                    Sore for registered processes\n\n                \n            \n\n        \n    \n\n    lib/shared/transformers/simple-json.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SimpleJsonTransformer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValueTransformer\n\n                    \n                \n                \n                    \n                        Default value : {\n  from(value: string | object) {\n    if (typeof value === \"string\") {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return undefined;\n      }\n    }\n    return value;\n  },\n  to(value: object) {\n    return value;\n  },\n}\n                    \n                \n\n            \n                \n                    A ValueTransformer for transforming JSON data in a database column.\nThis transformer is used to automatically parse JSON strings from the database into JavaScript objects and vice versa.\n\n                \n            \n\n        \n    \n\n    lib/common/user/user.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USER_RELATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  \"avatar\",\n  \"avatar.name\",\n  \"avatar.name.lang\",\n  \"avatar.files\",\n  \"avatar.files.format\",\n  \"avatar.type\",\n  \"avatar.type.ext\",\n  \"roles\",\n  \"roles.name\",\n  \"roles.name.lang\",\n]\n                    \n                \n\n            \n                \n                    Array of user entity relations.\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/warlock/warlock.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        WARLOCK\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"WARLOCK\")\n                    \n                \n\n            \n                \n                    Symbol used as a token for injecting the warlock mechanism.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties.html":{"url":"additional-documentation/properties.html","title":"additional-page - Properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCommon configuration file\nThe kp.properties configuration file is the main configuration file that overrides any configuration properties in the project. No .config.ts file will be generated for this file.\nProperties\n\nkp.tmp.dir\n\nDescription: Path to the app temporary folder.\nType: string\nExample: /static/tmp\n\n\nkp.static.files\n\nDescription: Path to store static files (like media, files, etc.).\nType: string\nExample: /static\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/kp.properties.html":{"url":"additional-documentation/properties/kp.properties.html","title":"additional-page - kp.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCommon configuration file\nThe kp.properties configuration file is the main configuration file that overrides any configuration properties in the project. No .config.ts file will be generated for this file.\nProperties\n\nkp.tmp.dir\n\nDescription: Path to the app temporary folder.\nType: string\nExample: /static/tmp\n\n\nkp.static.files\n\nDescription: Path to store static files (like media, files, etc.).\nType: string\nExample: /static\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/auth.properties.html":{"url":"additional-documentation/properties/auth.properties.html","title":"additional-page - auth.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization configuration\nThe auth.properties configuration file contains settings for authentication and authorization using JSON Web Tokens (JWT).\n\nauth.jwt.secret\n\nDescription: The secret key used to sign the JWT.\nType: string\nExample: jwt_secret_key\n\n\nauth.access.token.expiration\n\nDescription: The lifetime of the access token.\nType: number\nExample: 600\n\n\nNote: The access token will be valid for 10 minutes (600 seconds).\n\nauth.refresh.token.expiration\n\nDescription: The lifetime of the update token.\nType: number\nExample: 3600\n\n\nNote: The upgrade token will be valid for 1 hour (600 seconds * 6).\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/bruteforce.properties.html":{"url":"additional-documentation/properties/bruteforce.properties.html","title":"additional-page - bruteforce.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBrute force protection configuration\nThe bruteforce.properties configuration file contains settings for protecting against brute force attacks.\n\nbruteforce.enabled\n\nDescription: Enables or disables brute force protection.\nType: boolean\nExample: true\n\n\nbruteforce.max.attempts\n\nDescription: Maximum number of login attempts before blocking.\nType: number\nExample: 3\n\n\nbruteforce.block.duration\n\nDescription: Duration for which a user is blocked after exceeding the maximum number of attempts.\nType: number\nExample: 300\nNote: The user will be blocked for 5 minutes (300 seconds).\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/captcha.properties.html":{"url":"additional-documentation/properties/captcha.properties.html","title":"additional-page - captcha.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCAPTCHA Configuration\nThe captcha.properties configuration file contains settings for CAPTCHA generation and validation.\n\ncaptcha.enabled\n\nDescription: Boolean flag indicating if CAPTCHA is enabled.\nType: boolean\nExample: true\n\n\ncaptcha.expiration\n\nDescription: Expiration time for CAPTCHA entries.\nType: number\nExample: 300\nNote: The CAPTCHA will be valid for 5 minutes (300 seconds).\n\n\ncaptcha.font.path\n\nDescription: Path to the font file used for graphical CAPTCHA.\nType: string\nExample: /lib/common/captcha/montserrat.ttf\n\n\ncaptcha.font.family\n\nDescription: Font family used for graphical CAPTCHA.\nType: string\nExample: Montserrat\n\n\ncaptcha.type\n\nDescription: Type of CAPTCHA to be used.\nType: string\nExample: default\n\n\ncaptcha.google.public.key\n\nDescription: Public key for Google reCAPTCHA.\nType: string\nExample: abc123456\n\n\ncaptcha.google.secret.key\n\nDescription: Secret key for Google reCAPTCHA.\nType: string\nExample: abc123456\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/file.properties.html":{"url":"additional-documentation/properties/file.properties.html","title":"additional-page - file.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFiles configuration\nThe file.properties configuration file contains settings for files store\n\nfile.public.dir\n\nDescription: Path stored public files\nType: string\nExample: /static/file\n\n\nfile.private.dir\n\nDescription: Path stored private files\nType: number\nExample: /static/private/file\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/media.properties.html":{"url":"additional-documentation/properties/media.properties.html","title":"additional-page - media.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMedia Configuration\nThe media.properties configuration file contains settings for managing the directories where public and private media files are stored.\n\nmedia.public.dir\n\nDescription: The directory where public media files are stored.\nType: string\nExample: /static/media\nNote: This directory is accessible to all users and serves public media content.\n\n\nmedia.private.dir\n\nDescription: The directory where private media files are stored.\nType: string\nExample: /static/private/media\nNote: This directory is restricted and serves private media content only accessible to authorized users.\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AbstractAuthGuard.html",[0,3.465,1,3.669]],["body/guards/AbstractAuthGuard.html",[1,5.145,2,6.235,3,0.11,4,0.089,5,0.022,6,8.145,7,4.426,8,0.216,9,2.585,10,0.132,11,6.712,12,3.807,13,1.348,14,7.584,15,0.287,16,0.676,17,5.542,18,2.675,19,4.103,20,5.984,21,3.383,22,4.219,23,1.37,24,2.772,25,2.331,26,6.712,27,6.712,28,5.984,29,6.243,30,0.614,31,4.965,32,6.712,33,3.706,34,4.238,35,3.037,36,7.261,37,7.261,38,2.729,39,6.712,40,4.08,41,2.704,42,5.539,43,1.11,44,0.007,45,0.401,46,0.148,47,1.091,48,5.896,49,5.504,50,1.569,51,2.416,52,1.348,53,3.292,54,6.712,55,4.965,56,6.712,57,5.829,58,1.162,59,4.859,60,6.243,61,4.191,62,6.712,63,0.426,64,4.965,65,4.08,66,3.477,67,6.712,68,4.417,69,3.477,70,4.859,71,2.55,72,6.712,73,4.238,74,0.22,75,4.071,76,0.997,77,4.071,78,4.071,79,4.071,80,4.965,81,0.965,82,4.071,83,3.806,84,3.806,85,3.595,86,0.103,87,1.642,88,2.127,89,2.722,90,4.426,91,4.965,92,6.712,93,2.24,94,4.965,95,4.965,96,4.426,97,3.688,98,2.084,99,6.712,100,4.965,101,4.965,102,4.965,103,2.109,104,4.426,105,4.965,106,4.965,107,4.965,108,4.965,109,4.965,110,4.965,111,4.965,112,4.965,113,4.965,114,4.965,115,0.004,116,0.004]],["title/classes/AbstractProcess.html",[10,0.083,117,3.925]],["body/classes/AbstractProcess.html",[3,0.083,4,0.067,5,0.017,8,0.191,9,2.524,10,0.139,15,0.216,16,0.748,17,5.844,18,2.439,21,3.322,23,1.122,24,3.048,25,2.301,30,0.736,34,4.533,43,0.951,44,0.007,45,0.344,46,0.155,47,1.097,49,4.505,50,1.574,51,1.978,63,0.365,74,0.217,76,0.751,86,0.078,88,2.139,89,1.706,93,3.147,98,2.022,103,1.567,115,0.004,116,0.004,117,4.505,118,1.121,119,9.193,120,3.739,121,1.344,122,4.199,123,3.019,124,3.019,125,3.223,126,5.341,127,4.715,128,5.887,129,6.4,130,4.898,131,6.4,132,6.4,133,4.898,134,3.853,135,5.537,136,5.806,137,2.257,138,5.494,139,3.739,140,4.286,141,3.739,142,4.113,143,3.739,144,0.92,145,3.739,146,4.212,147,4.528,148,4.898,149,4.281,150,3.739,151,6.633,152,4.394,153,7.129,154,4.898,155,7.129,156,7.129,157,7.129,158,4.898,159,4.898,160,3.739,161,4.898,162,3.739,163,5.503,164,4.898,165,3.739,166,3.783,167,2.626,168,3.739,169,4.212,170,4.212,171,3.739,172,2.929,173,3.333,174,1.645,175,3.577,176,3.739,177,4.898,178,5.58,179,4.212,180,2.626,181,3.853,182,1.952,183,0.815,184,1.553,185,3.117,186,6.818,187,2.574,188,2.707,189,3.066,190,2.866,191,3.739,192,3.739,193,3.739,194,2.574,195,3.066,196,3.066,197,3.333,198,3.739,199,3.739,200,3.739,201,3.739,202,3.066,203,1.167,204,8.265,205,3.333,206,3.066,207,3.333,208,7.648,209,3.739,210,3.739,211,3.739,212,2.273,213,3.739,214,5.494,215,3.739,216,4.898,217,3.739,218,2.648,219,2.361,220,3.978,221,3.739,222,3.739,223,3.333,224,5.494,225,3.739,226,3.739,227,3.739,228,3.739,229,3.739,230,7.648,231,3.739,232,6.818,233,3.739,234,3.739,235,3.739,236,3.739,237,3.739,238,3.739,239,3.739,240,1.3,241,7.997,242,3.333,243,5.494,244,5.494,245,3.739,246,3.739,247,2.193,248,3.333,249,3.739,250,3.739,251,3.739,252,3.739,253,3.739,254,3.333,255,3.739,256,6.513,257,6.513,258,6.513,259,3.739,260,3.739]],["title/classes/AbstractUserSubscriber.html",[10,0.083,261,3.925]],["body/classes/AbstractUserSubscriber.html",[3,0.116,4,0.094,5,0.024,8,0.22,9,2.485,10,0.135,15,0.3,16,0.942,17,5.813,18,2.374,23,1.413,24,2.948,30,0.67,43,1.136,44,0.007,45,0.411,46,0.183,47,1.116,50,1.485,51,1.871,63,0.516,65,4.207,70,5.011,71,2.823,74,0.223,76,1.044,86,0.108,88,2.177,89,2.416,93,2.884,97,2.856,98,1.614,103,1.665,115,0.004,116,0.004,118,1.558,203,0.759,261,5.675,262,8.64,263,4.634,264,1.303,265,5.675,266,4.554,267,1.665,268,5.675,269,6.921,270,6.921,271,6.921,272,5.198,273,6.921,274,5.198,275,7.396,276,4.286,277,4.207,278,7.396,279,3.803,280,6.921,281,6.921,282,7.396,283,7.396,284,5.198,285,3.926,286,6.623,287,5.675,288,3.803,289,6.921,290,5.198,291,4.192,292,3.097,293,6.38,294,4.634,295,1.314,296,1.505,297,3.42,298,3.985,299,4.262,300,4.262,301,5.198,302,4.634,303,4.634,304,5.198,305,5.198,306,5.198,307,5.198,308,5.198,309,5.198,310,5.198,311,4.262,312,3.42,313,8.885,314,0.841,315,5.198,316,5.198,317,2.948,318,6.921,319,1.703,320,5.198,321,4.262,322,5.198,323,6.921,324,6.921,325,5.198,326,3.578]],["title/interfaces/AudioFileMetadata.html",[327,0.552,328,2.807]],["body/interfaces/AudioFileMetadata.html",[3,0.047,4,0.038,5,0.043,8,0.094,10,0.11,15,0.204,16,0.718,25,0.567,33,2.063,38,0.868,40,1.297,41,0.618,44,0.007,45,0.383,46,0.174,52,0.429,53,4.424,58,0.369,63,0.56,69,2.348,74,0.132,81,0.415,86,0.156,115,0.002,116,0.002,121,1.986,122,1.969,123,1.173,134,1.075,144,0.883,147,1.02,152,3.465,167,1.02,174,1.636,175,2.144,183,0.988,203,1.144,240,1.581,267,0.851,279,1.945,292,2.659,296,0.618,314,1.573,327,0.983,328,2.659,329,0.629,330,1.297,331,5.153,332,2.521,333,3.833,334,3.833,335,4.1,336,4.385,337,3.206,338,3.079,339,3.965,340,3.833,341,3.833,342,3.206,343,3.206,344,3.699,345,3.833,346,3.833,347,4.72,348,2.235,349,2.235,350,2.235,351,2.863,352,3.206,353,3.577,354,3.699,355,4.505,356,3.094,357,2.235,358,3.891,359,1.352,360,2.151,361,2.235,362,2.863,363,2.491,364,3.706,365,3.368,366,3.079,367,2.076,368,2.235,369,2.235,370,2.235,371,2.235,372,2.235,373,1.203,374,2.235,375,2.235,376,2.235,377,2.863,378,2.015,379,2.235,380,1.379,381,2.235,382,2.235,383,1.208,384,0.868,385,1.833,386,1.833,387,1.173,388,1.181,389,0.925,390,0.927,391,1.697,392,0.401,393,1.667,394,1.537,395,1.297,396,3.693,397,1.325,398,1.828,399,0.948,400,1.38,401,2.076,402,0.995,403,1.925,404,2.948,405,0.699,406,2.151,407,1.348,408,1.61,409,0.868,410,0.887,411,1.348,412,1.348,413,1.297,414,4.673,415,1.348,416,5.277,417,1.348,418,1.38,419,0.849,420,2.076,421,3.577,422,2.235,423,0.906,424,2.756,425,2.756,426,1.348,427,2.076,428,3.365,429,2.659,430,2.863,431,4.679,432,0.906,433,3.982,434,1.61,435,2.076,436,3.699,437,1.348,438,1.297,439,1.297,440,1.348,441,4.72,442,2.863,443,2.235,444,4.687,445,1.02,446,2.076,447,2.235,448,2.151,449,1.348,450,1.348,451,1.297,452,2.564,453,3.106,454,2.564,455,2.235,456,1.297,457,2.151,458,1.348,459,3.465,460,2.151,461,2.151,462,1.297,463,1.348,464,1.348,465,1.297,466,3.555,467,1.297,468,1.537,469,1.348,470,1.297,471,1.211,472,1.348,473,1.138,474,2.802,475,1.348,476,1.348,477,1.348,478,2.417,479,1.297,480,1.479,481,2.235,482,1.409,483,1.297,484,2.114,485,2.756,486,1.297,487,1.297,488,1.297,489,1.252,490,3.331,491,1.348,492,1.297,493,1.297,494,1.297,495,1.348,496,1.348,497,1.348,498,1.297,499,1.297,500,1.348,501,0.995,502,1.297,503,1.297,504,2.863,505,1.297,506,1.297,507,2.756,508,2.235,509,3.331,510,2.007,511,2.235,512,1.297,513,1.297,514,1.348,515,1.297,516,1.348,517,1.297,518,0.558,519,1.297,520,1.348,521,1.297,522,1.297,523,1.252,524,2.863,525,1.348,526,1.945,527,2.235,528,1.348,529,2.235,530,1.348,531,1.348,532,1.348,533,1.138,534,1.348,535,1.348,536,1.348,537,1.348,538,2.235,539,1.348,540,2.235,541,1.348,542,2.151,543,2.235,544,1.297,545,1.348,546,1.348,547,2.863,548,1.348,549,3.331,550,2.863,551,2.863,552,2.863,553,1.348,554,4.413,555,1.348,556,3.094,557,4.218,558,1.348,559,1.348,560,1.348,561,2.235,562,2.235,563,1.348,564,1.348,565,1.348,566,1.348,567,1.348,568,1.348,569,1.348,570,1.348,571,2.235,572,1.348,573,1.348,574,0.906,575,1.348,576,2.235,577,2.151,578,1.348,579,1.348,580,1.348,581,1.348,582,1.252,583,2.235,584,3.982,585,1.348,586,1.348,587,2.863,588,1.348,589,1.348,590,1.348,591,2.151,592,1.348,593,1.348,594,1.348,595,1.348,596,2.863,597,2.235,598,1.348,599,1.348,600,2.235,601,1.348,602,2.235,603,1.348,604,1.02,605,1.348,606,3.693,607,1.348,608,1.348,609,1.348,610,1.211,611,1.348,612,1.02,613,3.331,614,3.206,615,1.348,616,1.348,617,2.235,618,2.235,619,2.235,620,2.235,621,1.348,622,1.348,623,1.348,624,1.348,625,1.297,626,0.995,627,1.297,628,1.348,629,1.348,630,1.348,631,2.151,632,1.297,633,1.348,634,1.348,635,0.948,636,2.863,637,2.151,638,1.348,639,1.348,640,1.348,641,1.348,642,1.348,643,2.235,644,0.558,645,1.297,646,1.297,647,1.348,648,1.297,649,1.297,650,0.948,651,1.348,652,1.348,653,1.348,654,1.348,655,1.297,656,1.348,657,1.348,658,1.348,659,1.297,660,1.252,661,1.297,662,0.887,663,1.173,664,1.297,665,1.297,666,1.297,667,0.465,668,0.587,669,1.105,670,1.252,671,0.401]],["title/entities/AudioFileMetadataEntity.html",[264,0.801,672,3.669]],["body/entities/AudioFileMetadataEntity.html",[3,0.108,4,0.087,5,0.044,8,0.129,10,0.084,13,0.974,15,0.558,16,0.899,30,0.778,44,0.007,45,0.459,46,0.187,61,2.318,63,0.546,74,0.166,86,0.101,87,2.44,115,0.004,116,0.004,182,1.98,203,1.097,218,1.972,264,1.258,295,1.226,314,1.531,326,4.548,328,3.874,331,3.63,332,2.051,333,4.566,334,4.566,335,4.406,336,4.406,337,4.566,338,3.19,339,4.261,340,4.566,341,4.566,342,4.566,343,4.566,344,4.406,345,4.566,346,4.566,393,2.088,672,5.064,673,1.404,674,9.668,675,3.339,676,2.603,677,5.053,678,3.961,679,3.977,680,4.323,681,5.093,682,3.718,683,3.718,684,6.606,685,3.977,686,3.718,687,3.977,688,5.416,689,5.416,690,5.416,691,4.323,692,4.85,693,2.512,694,3.511,695,4.85,696,6.606,697,3.718,698,6.606,699,3.511,700,4.323,701,3.718,702,4.323,703,1.561,704,3.328,705,2.665,706,4.85,707,2.512,708,4.086,709,4.575,710,3.977]],["title/controllers/AuthController.html",[671,0.9,711,3.925]],["body/controllers/AuthController.html",[3,0.107,4,0.087,5,0.03,10,0.084,13,0.965,15,0.277,18,2.28,19,3.766,23,1.34,24,2.9,25,1.987,30,0.604,35,3.006,42,4.771,43,1.091,44,0.007,45,0.394,46,0.145,47,1.072,50,1.338,57,5.73,63,0.419,74,0.233,75,3.938,76,0.965,81,1.275,86,0.1,87,2.292,89,2.696,93,2.807,97,2.639,98,1.491,103,1.798,115,0.004,116,0.004,137,1.664,144,1.453,174,1.505,203,0.701,267,1.156,291,3.401,380,1.256,388,3.258,480,1.214,518,1.256,644,1.716,671,0.903,676,2.021,711,5.381,712,2.134,713,4.803,714,2.086,715,4.282,716,5.146,717,6.663,718,4.282,719,5.53,720,4.803,721,4.803,722,4.883,723,4.282,724,5.286,725,4.803,726,4.803,727,3.477,728,4.803,729,4.803,730,1.44,731,1.415,732,1.415,733,1.44,734,2.24,735,1.415,736,2.573,737,1.9,738,1.321,739,1.44,740,1.44,741,1.44,742,1.44,743,1.44,744,1.44,745,1.344,746,1.44,747,1.44,748,1.44,749,1.39,750,1.44,751,1.415,752,1.44,753,1.44,754,1.44,755,1.44,756,1.44,757,1.321,758,1.44,759,1.415,760,1.44,761,3.401,762,3.033,763,3.858,764,3.033,765,3.938,766,3.161,767,3.938,768,4.72,769,3.307,770,3.161,771,4.543,772,4.803,773,4.282,774,4.282,775,4.282,776,3.938,777,4.803,778,3.938,779,4.144,780,4.803,781,4.803,782,4.518,783,3.161,784,3.938,785,4.803,786,6.562,787,4.803,788,7.475,789,5.381,790,3.938,791,3.938,792,4.803,793,4.803,794,4.803,795,4.803,796,2.356,797,6.562,798,4.803,799,4.803,800,6.562,801,6.562,802,8.033,803,8.033,804,8.033,805,6.562,806,6.562,807,6.562,808,6.562,809,4.803,810,4.803,811,3.606,812,4.803,813,4.803,814,4.803,815,4.803,816,4.803,817,4.803,818,4.803]],["title/injectables/AuthGuard.html",[819,1.569,820,2.909]],["body/injectables/AuthGuard.html",[0,5.921,1,7.174,3,0.15,4,0.122,5,0.031,8,0.179,9,1.89,10,0.118,12,5.184,17,5.345,18,2.683,19,4.848,21,3.997,22,4.984,30,0.546,43,0.987,44,0.006,45,0.357,46,0.131,47,0.97,71,2.451,74,0.235,76,1.357,82,5.542,83,5.181,86,0.141,115,0.005,116,0.005,137,2.834,355,3.909,423,3.473,778,5.542,819,2.68,820,4.971,821,3.151,822,6.758,823,4.368,824,6.706,825,7.291,826,3.834,827,6.758,828,2.87,829,6.025,830,3.603,831,4.108]],["title/modules/AuthModule.html",[832,1.114,833,3.925]],["body/modules/AuthModule.html",[3,0.126,4,0.102,5,0.033,8,0.151,10,0.099,19,4.092,23,1.159,24,1.794,30,0.458,43,0.829,44,0.007,45,0.299,46,0.11,47,0.814,50,1.016,74,0.244,76,1.14,81,1.103,86,0.118,93,2.448,103,1.764,115,0.005,116,0.005,122,3.184,182,1.701,183,1.237,267,1.366,380,1.484,480,1.435,518,1.484,644,1.917,667,1.598,671,1.379,711,6.66,712,2.522,715,6.537,730,1.701,731,1.672,732,1.672,733,1.701,734,2.435,735,1.672,736,2.682,737,2.123,738,1.561,739,1.701,740,1.701,741,1.701,742,1.701,743,1.701,744,1.701,745,1.588,746,1.701,747,1.701,748,1.701,749,1.643,750,1.701,751,1.672,752,1.701,753,1.701,754,1.701,755,1.701,756,1.701,757,1.561,758,1.701,759,1.672,760,1.701,766,3.735,768,5.129,769,3.908,770,3.735,784,4.654,828,2.41,832,2.069,833,6.66,834,2.465,835,5.676,836,6.012,837,3.798,838,4.825,839,3.735,840,5.911,841,5.676,842,1.625,843,8.123,844,4.937,845,5.676,846,5.06,847,7.333,848,5.06,849,5.676,850,4.331,851,3.45,852,3.418,853,3.45,854,2.583,855,3.908,856,5.676,857,5.676,858,5.676,859,4.351,860,5.676,861,4.109,862,3.505,863,5.676,864,3.735,865,5.676,866,3.735,867,5.676,868,4.654,869,5.676,870,5.676,871,4.654,872,5.676,873,5.676,874,2.646,875,2.86,876,3.329,877,4.351,878,2.646]],["title/classes/AuthService.html",[10,0.083,768,3.022]],["body/classes/AuthService.html",[3,0.101,4,0.081,5,0.02,8,0.208,9,2.615,10,0.126,12,3.57,15,0.261,23,1.598,30,0.585,41,2.76,42,5.533,43,1.057,44,0.007,45,0.382,46,0.141,47,1.039,50,1.641,51,2.266,58,1.089,63,0.52,71,2.467,74,0.113,77,3.707,78,3.707,79,3.707,86,0.195,87,1.539,88,2.494,89,2.877,98,2.431,103,1.514,115,0.004,116,0.004,118,1.355,144,1.535,149,4.055,174,1.126,180,3.008,181,2.934,291,4.173,299,5.161,428,3.171,714,3.4,716,5.39,722,3.825,724,5.608,768,3.974,779,5.381,783,4.764,784,3.707,842,1.735,879,4.03,880,5.161,881,3.171,882,6.294,883,5.611,884,7.829,885,6.294,886,6.294,887,6.294,888,4.521,889,5.668,890,3.464,891,3.324,892,6.436,893,5.39,894,6.294,895,4.521,896,5.39,897,5.161,898,6.294,899,4.521,900,7.829,901,6.294,902,6.294,903,4.825,904,4.825,905,7.169,906,4.03,907,4.03,908,4.03,909,4.03,910,4.984,911,4.03,912,4.03,913,4.141,914,6.152,915,5.668,916,4.03,917,4.03,918,4.03,919,5.55,920,4.764,921,3.465,922,4.03,923,4.03,924,4.758,925,4.262,926,5.39,927,4.03,928,4.03,929,4.03,930,4.03,931,5.161,932,5.161,933,4.03,934,4.03,935,4.03,936,4.333,937,4.333,938,4.03,939,4.03]],["title/classes/BadRequestMsException.html",[10,0.083,940,4.267]],["body/classes/BadRequestMsException.html",[3,0.158,4,0.128,5,0.032,8,0.189,10,0.124,30,0.575,35,2.841,43,1.039,44,0.006,45,0.375,46,0.138,47,1.021,63,0.504,74,0.212,76,1.429,86,0.148,115,0.005,116,0.005,118,2.132,137,2.465,181,3.932,184,2.955,604,4.032,823,4.032,940,7.519,941,8.434,942,4.898,943,5.326,944,4.947,945,8.014,946,5.806,947,5.55,948,5.383,949,5.806,950,4.898,951,4.682,952,4.898,953,7.114]],["title/interfaces/BasicAuthController.html",[327,0.552,782,3.295]],["body/interfaces/BasicAuthController.html",[3,0.112,4,0.09,5,0.023,10,0.161,12,4.337,15,0.29,23,1.381,30,0.618,35,3.026,41,2.214,42,5.309,43,1.116,44,0.007,45,0.403,46,0.175,47,1.262,50,1.368,58,1.416,63,0.529,71,2.695,74,0.226,76,1.008,81,0.976,86,0.178,98,1.559,115,0.004,116,0.004,144,1.473,174,1.464,203,0.733,240,1.936,276,3.077,291,4.091,327,0.579,329,1.479,365,2.807,388,3.273,428,3.407,667,1.094,668,1.381,671,0.944,716,5.632,717,6.028,718,4.475,719,5.632,722,5.464,723,4.475,724,5.384,727,4.895,745,1.404,768,3.17,769,3.456,779,3.17,782,4.655,783,4.45,796,3.317,832,1.169,840,3.456,842,1.694,892,5.632,893,4.655,896,3.456,910,3.456,913,3.304,936,3.456,937,3.456,954,3.634,955,5.02,956,5.02,957,5.02,958,5.184,959,5.032,960,6.546,961,5.789,962,2.945,963,3.398,964,3.304,965,1.707,966,4.077,967,2.4,968,3.848,969,3.848,970,2.863,971,3.961,972,5.264,973,3.456,974,3.848,975,3.848,976,3.848,977,3.848,978,5.184,979,3.848,980,3.634,981,4.828,982,3.848,983,5.184,984,3.848,985,3.848,986,2.4]],["title/interfaces/BasicCaptchaController.html",[327,0.552,987,3.295]],["body/interfaces/BasicCaptchaController.html",[3,0.13,4,0.105,5,0.026,9,2.428,10,0.162,15,0.337,23,1.525,30,0.603,33,2.658,35,2.361,43,0.853,44,0.007,45,0.308,46,0.185,47,0.838,50,1.553,52,1.173,58,1.011,63,0.487,65,3.551,70,5.407,73,3.689,74,0.188,86,0.187,87,1.429,88,1.634,115,0.005,116,0.005,121,1.827,144,1.609,174,1.69,203,1.091,296,1.691,319,2.448,327,0.673,329,1.721,373,1.987,388,1.95,389,1.953,391,2.797,418,2.277,431,3.664,526,3.21,667,1.274,668,1.606,671,1.099,722,3.551,771,3.551,796,4.858,811,3.21,832,1.36,842,1.655,890,3.037,924,3.551,959,5.418,961,4.915,962,3.427,970,2.187,987,5.142,988,4.478,989,6.653,990,5.407,991,5.842,992,5.726,993,6.036,994,5.842,995,3.763,996,4.79,997,4.79,998,4.478,999,4.229,1000,4.022,1001,4.229,1002,3.21,1003,3.844,1004,4.54,1005,4.229]],["title/interfaces/BasicExplorerController.html",[327,0.552,1006,2.715]],["body/interfaces/BasicExplorerController.html",[3,0.072,4,0.058,5,0.015,8,0.177,9,2.372,10,0.132,15,0.186,23,1.005,30,0.636,38,1.312,41,2.079,43,1.318,44,0.007,45,0.483,46,0.183,47,1.129,50,1.601,51,1.162,52,1.882,58,1.532,63,0.555,66,1.672,71,2.909,74,0.204,86,0.184,88,2.545,115,0.004,116,0.003,121,2.109,144,1.633,172,1.721,174,1.488,180,2.352,203,1.292,240,0.764,264,1.625,285,1.831,295,0.816,296,0.934,314,1.415,319,2.659,327,1.04,329,0.951,383,1.127,384,1.312,389,0.844,392,0.925,398,1.705,400,1.258,402,1.505,423,1.37,432,1.37,434,2.239,445,1.543,484,1.505,574,1.37,626,1.505,667,0.704,668,0.887,671,0.607,673,0.934,703,1.919,714,1.402,761,2.714,832,0.751,842,1.09,890,3.2,891,2.089,967,1.543,986,1.543,995,1.626,1006,2.791,1007,1.893,1008,4.387,1009,3.498,1010,3.498,1011,4.213,1012,3.498,1013,4.387,1014,4.387,1015,2.886,1016,3.227,1017,4.562,1018,2.877,1019,3.763,1020,3.813,1021,3.227,1022,2.877,1023,3.618,1024,3.227,1025,3.227,1026,2.886,1027,3.227,1028,2.886,1029,3.227,1030,2.886,1031,4.661,1032,3.227,1033,1.721,1034,2.78,1035,1.162,1036,3.089,1037,1.893,1038,1.773,1039,4.077,1040,1.721,1041,2.479,1042,1.773,1043,1.831,1044,1.721,1045,2.886,1046,1.893,1047,1.773,1048,3.784,1049,1.672,1050,2.704,1051,1.893,1052,1.893,1053,1.893,1054,1.893,1055,1.831,1056,1.831,1057,1.893,1058,1.893,1059,1.893,1060,1.893,1061,1.893,1062,1.893,1063,1.893,1064,1.893,1065,1.893,1066,1.893,1067,1.893,1068,3.383,1069,1.893,1070,2.704,1071,2.791,1072,2.624,1073,1.962,1074,2.791,1075,1.721,1076,2.791,1077,1.434,1078,1.962,1079,1.721,1080,2.886,1081,4.891,1082,1.893,1083,1.893,1084,1.893,1085,1.893,1086,1.893,1087,1.893,1088,1.831,1089,1.831,1090,1.672,1091,1.893,1092,1.962,1093,1.893,1094,1.893,1095,1.962,1096,1.962,1097,1.773,1098,1.893,1099,1.626,1100,1.773,1101,1.831,1102,1.583,1103,1.626,1104,1.773,1105,1.893,1106,1.831,1107,1.962,1108,1.962,1109,3.361,1110,2.704,1111,3.18,1112,1.893,1113,1.893,1114,4.975,1115,4.617,1116,4.365,1117,1.962,1118,1.893,1119,1.893,1120,2.886,1121,2.704,1122,1.962,1123,1.721,1124,2.549,1125,3.625,1126,1.893,1127,1.893,1128,1.721,1129,2.991,1130,1.962,1131,1.962,1132,1.962,1133,1.962,1134,1.341,1135,1.831,1136,1.721,1137,1.893,1138,1.208,1139,1.434,1140,1.962,1141,1.962]],["title/interfaces/BasicFileController.html",[327,0.552,660,2.807]],["body/interfaces/BasicFileController.html",[3,0.05,4,0.041,5,0.043,8,0.06,10,0.113,15,0.215,16,0.506,23,0.759,25,0.602,30,0.442,33,2.151,38,0.921,40,1.377,41,0.656,43,0.799,44,0.007,45,0.412,46,0.16,47,0.785,50,0.979,52,0.455,53,4.37,58,0.392,63,0.558,69,2.448,74,0.137,81,0.44,86,0.159,115,0.002,116,0.002,121,1.987,122,1.614,123,1.245,134,1.141,144,1.198,147,1.083,152,3.567,167,1.083,174,1.629,175,2.224,183,1.03,203,1.186,240,1.622,267,0.545,279,2.042,292,2.583,296,0.656,314,1.564,327,0.986,328,2.18,329,0.667,330,1.377,331,4.828,332,2.478,333,2.259,334,2.259,335,3.208,336,3.543,337,1.377,338,2.565,339,3.103,340,2.259,341,2.259,342,1.377,343,1.377,344,2.18,345,2.259,346,2.259,347,3.814,348,1.43,349,1.43,350,1.43,351,2.347,352,2.873,353,3.103,354,3.208,355,4.503,356,2.18,357,1.43,358,3.899,359,0.865,360,1.377,361,1.43,362,2.347,363,2.042,364,3.723,365,3.384,366,3.04,367,1.328,368,1.43,369,1.43,370,1.43,371,1.43,372,1.43,373,0.77,374,1.43,375,1.43,376,1.43,377,2.347,378,1.652,379,1.43,380,1.236,381,1.43,382,1.43,383,1.253,384,0.921,385,1.925,386,1.925,387,1.245,388,1.826,389,0.972,390,0.984,391,1.77,392,0.426,393,1.729,394,1.614,395,1.377,396,3.814,397,1.392,398,1.895,399,1.006,400,1.449,401,2.18,402,1.056,403,2.007,404,3.013,405,0.742,406,2.259,407,1.43,408,1.691,409,0.921,410,0.941,411,1.43,412,1.43,413,1.377,414,4.744,415,1.43,416,5.34,417,1.43,418,1.449,419,0.901,420,2.18,421,3.682,422,2.347,423,0.962,424,2.873,425,2.873,426,1.43,427,2.18,428,3.454,429,2.772,430,2.985,431,4.705,432,0.962,433,4.098,434,1.691,435,2.18,436,3.807,437,1.43,438,1.377,439,1.377,440,1.43,441,4.818,442,2.985,443,2.347,444,4.748,445,1.083,446,2.18,447,2.347,448,2.259,449,1.43,450,1.43,451,1.377,452,2.639,453,3.181,454,2.639,455,2.347,456,1.377,457,2.259,458,1.43,459,3.567,460,2.259,461,2.259,462,1.377,463,1.43,464,1.43,465,1.377,466,3.671,467,1.377,468,1.614,469,1.43,470,1.377,471,1.285,472,1.43,473,1.208,474,2.884,475,1.43,476,1.43,477,1.43,478,2.52,479,1.377,480,1.527,481,2.347,482,1.479,483,1.377,484,2.204,485,2.873,486,1.377,487,1.377,488,1.377,489,1.328,490,3.454,491,1.43,492,1.377,493,1.377,494,1.377,495,1.43,496,1.43,497,1.43,498,1.377,499,1.377,500,1.43,501,1.056,502,1.377,503,1.377,504,2.985,505,1.377,506,1.377,507,2.873,508,2.347,509,3.454,510,2.108,511,2.347,512,1.377,513,1.377,514,1.43,515,1.377,516,1.43,517,1.377,518,0.592,519,1.377,520,1.43,521,1.377,522,1.377,523,1.328,524,2.985,525,1.43,526,2.042,527,2.347,528,1.43,529,2.347,530,1.43,531,1.43,532,1.43,533,1.208,534,1.43,535,1.43,536,1.43,537,1.43,538,2.347,539,1.43,540,2.347,541,1.43,542,2.259,543,2.347,544,1.377,545,1.43,546,1.43,547,2.985,548,1.43,549,3.454,550,2.985,551,2.985,552,2.985,553,1.43,554,4.52,555,1.43,556,3.208,557,4.329,558,1.43,559,1.43,560,1.43,561,2.347,562,2.347,563,1.43,564,1.43,565,1.43,566,1.43,567,1.43,568,1.43,569,1.43,570,1.43,571,2.347,572,1.43,573,1.43,574,0.962,575,1.43,576,2.347,577,2.259,578,1.43,579,1.43,580,1.43,581,1.43,582,1.328,583,2.347,584,4.098,585,1.43,586,1.43,587,2.985,588,1.43,589,1.43,590,1.43,591,2.259,592,1.43,593,1.43,594,1.43,595,1.43,596,2.985,597,2.347,598,1.43,599,1.43,600,2.347,601,1.43,602,2.347,603,1.43,604,1.083,605,1.43,606,3.814,607,1.43,608,1.43,609,1.43,610,1.285,611,1.43,612,1.083,613,3.454,614,3.325,615,1.43,616,1.43,617,2.347,618,2.347,619,2.347,620,2.347,621,1.43,622,1.43,623,1.43,624,1.43,625,1.377,626,1.056,627,1.377,628,1.43,629,1.43,630,1.43,631,2.259,632,1.377,633,1.43,634,1.43,635,1.006,636,2.985,637,2.259,638,1.43,639,1.43,640,1.43,641,1.43,642,1.43,643,2.347,644,0.592,645,1.377,646,1.377,647,1.43,648,1.377,649,1.377,650,1.006,651,1.43,652,1.43,653,1.43,654,1.43,655,1.377,656,1.43,657,1.43,658,1.43,659,1.377,660,2.18,661,2.259,662,1.963,663,2.597,664,2.259,665,2.259,666,2.259,667,0.494,668,0.623,669,1.173,670,1.328,671,0.426,763,1.006,1142,3.313,1143,3.313,1144,3.313,1145,3.313,1146,2.265,1147,2.265,1148,2.265,1149,2.265]],["title/interfaces/BasicMediaController.html",[327,0.552,1150,2.479]],["body/interfaces/BasicMediaController.html",[3,0.08,4,0.065,5,0.044,9,2.44,10,0.152,13,1.418,15,0.208,23,1.093,25,1.696,30,0.609,35,1.141,41,1.045,43,1.1,44,0.007,45,0.495,46,0.188,47,1.081,50,1.349,52,1.722,58,1.367,63,0.55,74,0.189,81,0.702,86,0.189,115,0.003,116,0.003,121,2.053,144,1.57,174,1.349,175,1.467,183,0.787,203,1.322,240,1.51,292,3.566,296,1.045,314,1.591,327,1.043,329,1.063,332,1.662,338,1.533,359,1.379,364,3.825,365,3.353,366,1.533,378,1.604,383,2.248,388,2.356,389,2.242,390,3.273,391,3.06,392,1.718,397,1.351,398,2.211,399,1.604,403,2.709,404,1.467,405,1.754,409,2.176,410,2.224,418,1.407,419,1.437,452,3.21,453,3.136,454,3.21,468,1.568,474,1.604,482,1.437,635,1.604,650,2.835,662,2.65,667,0.787,668,0.993,671,0.679,763,2.379,842,1.186,881,3.214,963,4.013,965,1.227,970,2.642,1034,2.47,1035,1.299,1134,1.499,1138,1.351,1150,2.773,1151,1.924,1152,3.402,1153,4.772,1154,3.402,1155,4.772,1156,4.772,1157,3.218,1158,3.61,1159,2.854,1160,3.61,1161,3.218,1162,3.656,1163,3.61,1164,2.854,1165,3.61,1166,2.854,1167,3.61,1168,2.436,1169,1.984,1170,1.87,1171,1.984,1172,1.984,1173,3.656,1174,2.854,1175,1.87,1176,1.984,1177,2.045,1178,3.656,1179,1.924,1180,1.87,1181,2.854,1182,1.924,1183,1.984,1184,3.656,1185,1.984,1186,3.305,1187,1.924,1188,3.13,1189,3.904,1190,1.984,1191,1.924,1192,2.436,1193,1.984,1194,1.984,1195,2.854,1196,4.019,1197,1.924,1198,2.854,1199,1.819,1200,1.819,1201,1.984,1202,1.984,1203,1.819,1204,1.819,1205,1.819,1206,1.984,1207,1.984,1208,1.819,1209,1.984,1210,1.984,1211,1.725,1212,1.87]],["title/interfaces/BasicUserController.html",[327,0.552,1213,2.909]],["body/interfaces/BasicUserController.html",[3,0.116,4,0.094,5,0.024,9,2.537,10,0.16,13,1.391,15,0.3,22,2.695,23,1.414,30,0.67,35,1.645,43,1.212,44,0.007,45,0.469,46,0.179,47,1.191,50,1.485,52,1.391,58,1.348,63,0.562,71,3.007,74,0.208,86,0.192,115,0.004,116,0.004,121,2.03,144,1.611,174,1.239,203,1.298,240,1.964,276,3.151,288,2.859,291,3.151,296,1.506,327,1.046,329,1.533,358,3.87,383,1.783,384,2.115,392,1.303,405,2.72,667,1.134,668,1.431,671,0.979,842,1.535,854,2.368,963,3.973,965,1.769,966,2.774,970,2.593,1034,2.551,1035,1.873,1168,3.777,1213,4.21,1214,3.286,1215,6.174,1216,6.174,1217,6.174,1218,6.174,1219,4.373,1220,5.203,1221,4.373,1222,5.203,1223,4.373,1224,5.203,1225,4.373,1226,5.203,1227,4.21,1228,4.373,1229,4.373,1230,4.21,1231,4.373,1232,4.21,1233,3.078,1234,4.566,1235,3.929,1236,4.916,1237,3.286,1238,3.286,1239,3.286,1240,3.286,1241,3.286,1242,3.286,1243,3.163]],["title/injectables/BasicUserService.html",[819,1.569,1244,3.925]],["body/injectables/BasicUserService.html",[3,0.103,4,0.083,5,0.021,8,0.228,10,0.08,15,0.267,16,0.869,18,1.408,22,4.642,23,1.613,24,3.081,25,1.227,30,0.693,43,1.252,44,0.007,45,0.453,46,0.167,47,1.231,50,1.648,58,1.367,59,6.667,63,0.539,71,3.016,74,0.215,76,0.927,86,0.096,87,1.129,88,2.399,89,1.983,93,2.935,97,2.537,98,2.273,103,1.995,115,0.004,116,0.004,137,2.213,144,1.601,180,2.207,203,1.434,218,3.211,288,3.509,291,4.001,295,1.167,297,4.818,298,3.539,299,3.786,317,2.619,321,3.786,404,2.596,482,3.414,819,2.093,821,2.152,823,3.053,831,2.806,842,1.415,933,7.989,1079,4.212,1111,3.405,1121,4.341,1124,3.308,1232,2.806,1238,4.032,1239,4.032,1240,4.032,1241,4.032,1242,4.032,1244,5.236,1245,6.386,1246,4.617,1247,3.405,1248,6.386,1249,6.21,1250,5.693,1251,5.693,1252,5.693,1253,5.693,1254,4.617,1255,4.617,1256,6.386,1257,5.709,1258,4.617,1259,4.617,1260,4.617,1261,4.617,1262,4.202,1263,4.617,1264,4.623,1265,3.342,1266,3.342,1267,2.461,1268,6.527,1269,4.617,1270,4.617,1271,6.386,1272,6.386,1273,4.617,1274,6.386,1275,4.617,1276,4.617,1277,4.617,1278,4.617,1279,4.617]],["title/modules/CacheModule.html",[832,1.114,850,2.552]],["body/modules/CacheModule.html",[3,0.132,4,0.107,5,0.034,8,0.157,10,0.103,19,4.77,21,3.74,44,0.007,74,0.235,76,1.189,81,1.15,86,0.123,103,1.424,115,0.005,116,0.005,267,1.424,276,2.693,277,4.578,380,1.547,480,1.496,518,1.547,612,3.6,644,1.969,730,1.774,731,1.743,732,1.743,733,1.774,734,2.483,735,1.743,736,2.708,737,2.18,738,1.627,739,1.774,740,1.774,741,1.774,742,1.774,743,1.774,744,1.774,745,1.655,746,1.774,747,1.774,748,1.774,749,1.713,750,1.774,751,1.743,752,1.774,753,1.774,754,1.774,755,1.774,756,1.774,757,1.627,758,1.774,759,1.743,760,1.774,828,2.513,832,2.096,834,2.57,850,5.096,852,4.36,862,3.96,866,3.894,874,3.511,875,2.981,876,3.471,878,3.862,1247,4.015,1280,3.252,1281,3.597,1282,3.597,1283,3.597,1284,5.276,1285,5.276,1286,5.276,1287,5.925,1288,3.597,1289,3.357,1290,5.918,1291,7.531,1292,4.756,1293,5.035,1294,5.918,1295,4.284,1296,3.737,1297,4.284,1298,4.284,1299,5.276,1300,6.176,1301,5.918,1302,4.853,1303,4.074,1304,3.894,1305,4.074,1306,4.853,1307,4.284,1308,4.853,1309,4.284,1310,4.853,1311,4.537,1312,4.853,1313,4.853]],["title/classes/CacheService.html",[10,0.083,19,2.411]],["body/classes/CacheService.html",[3,0.13,4,0.105,5,0.026,8,0.155,9,2.813,10,0.13,15,0.337,19,3.76,23,1.68,30,0.763,43,1.378,44,0.006,45,0.498,46,0.183,47,1.354,50,1.689,63,0.564,86,0.122,115,0.005,116,0.005,118,1.749,144,1.653,167,3.934,183,1.794,184,2.424,314,1.543,871,6.748,914,3.84,915,4.224,925,4.456,981,5.197,1314,5.835,1315,4.473,1316,4.785,1317,6.654,1318,6.654,1319,6.654,1320,6.654,1321,6.654,1322,6.654,1323,6.654,1324,5.835,1325,6.654,1326,5.835,1327,6.654,1328,5.835,1329,6.654,1330,5.835,1331,6.654,1332,5.835,1333,4.224,1334,6.654,1335,5.835,1336,6.654,1337,5.835,1338,5.202,1339,5.835]],["title/controllers/CaptchaController.html",[671,0.9,1340,3.925]],["body/controllers/CaptchaController.html",[3,0.136,4,0.11,5,0.035,10,0.106,13,1.228,15,0.353,18,1.865,23,1.57,24,2.934,30,0.621,43,0.893,44,0.007,45,0.323,46,0.149,47,0.877,50,1.376,74,0.193,76,1.228,81,1.188,86,0.127,87,1.495,89,2.387,93,2.566,103,2.023,115,0.005,116,0.005,144,1.477,203,0.893,267,1.471,380,1.598,431,2.999,480,1.546,518,1.598,644,2.01,671,1.15,676,2.079,712,2.717,714,2.655,722,4.673,730,1.832,731,1.801,732,1.801,733,1.832,734,2.521,735,1.801,736,2.727,737,2.226,738,1.681,739,1.832,740,1.832,741,1.832,742,1.832,743,1.832,744,1.832,745,1.71,746,1.832,747,1.832,748,1.832,749,1.77,750,1.832,751,1.801,752,1.832,753,1.832,754,1.832,755,1.832,756,1.832,757,1.681,758,1.832,759,1.801,760,1.832,761,3.498,762,3.86,771,5.112,796,4.125,811,4.225,987,5.293,989,6.764,990,6.088,992,4.686,993,5.807,1003,5.059,1004,4.673,1340,6.304,1341,6.113,1342,6.113,1343,6.113,1344,6.113,1345,4.686,1346,6.113,1347,3.468,1348,6.113,1349,6.113,1350,6.113,1351,2.539,1352,6.113,1353,6.113,1354,5.45]],["title/modules/CaptchaModule.html",[832,1.114,859,3.669]],["body/modules/CaptchaModule.html",[3,0.125,4,0.101,5,0.033,8,0.15,10,0.141,23,1.15,30,0.589,43,1.065,44,0.007,45,0.385,46,0.172,47,1.047,50,1.306,74,0.232,76,1.131,81,1.095,86,0.117,89,1.748,103,1.755,115,0.005,116,0.005,144,0.943,182,1.688,183,1.228,267,1.355,296,1.63,380,1.472,480,1.424,518,1.472,644,1.907,667,1.866,671,1.668,712,3.242,730,1.688,731,1.659,732,1.659,733,1.688,734,2.425,735,1.659,736,2.677,737,2.112,738,1.549,739,1.688,740,1.688,741,1.688,742,1.688,743,1.688,744,1.688,745,1.575,746,1.688,747,1.688,748,1.688,749,1.63,750,1.688,751,1.659,752,1.688,753,1.688,754,1.688,755,1.688,756,1.688,757,1.549,758,1.688,759,1.659,760,1.688,771,5.522,796,3.578,828,3.436,832,2.115,834,2.446,837,4.434,838,4.8,839,3.706,842,1.617,844,5.389,850,3.889,851,3.423,852,3.401,853,3.423,859,6.562,861,4.077,862,4.239,866,5.325,874,3.401,875,3.675,876,3.303,877,4.317,878,3.401,987,3.877,1005,6.197,1340,7.019,1345,4.317,1355,5.631,1356,5.592,1357,5.631,1358,6.635,1359,5.02,1360,6.503,1361,5.022,1362,5.631,1363,5.02,1364,5.631,1365,5.631,1366,5.02]],["title/classes/CaptchaRequest.html",[10,0.083,993,3.15]],["body/classes/CaptchaRequest.html",[3,0.129,4,0.104,5,0.026,8,0.153,9,2.418,10,0.162,15,0.334,16,1.009,30,0.599,33,2.631,35,2.59,44,0.007,46,0.186,50,1.328,52,1.161,58,1.284,63,0.501,65,3.514,70,5.932,73,3.65,74,0.186,86,0.186,87,1.414,88,1.617,115,0.005,116,0.005,118,1.733,121,1.815,144,1.577,174,1.738,203,1.262,296,1.674,319,2.685,327,0.666,373,1.966,388,1.93,389,2.142,391,3.068,418,2.893,431,3.639,526,3.177,667,1.26,668,1.59,671,1.087,676,2.006,771,3.514,796,4.886,811,3.177,832,1.346,842,1.644,890,3.016,924,3.514,959,5.689,961,4.882,962,3.391,970,2.778,987,3.98,988,4.432,989,4.432,992,4.432,993,5.883,995,3.738,996,4.74,997,4.74,998,4.432,999,4.185,1000,3.98,1001,4.185,1002,3.177,1003,3.804,1004,4.51,1005,4.185,1367,5.781,1368,5.154,1369,5.781]],["title/classes/CaptchaService.html",[10,0.083,771,2.909]],["body/classes/CaptchaService.html",[3,0.126,4,0.102,5,0.026,8,0.194,9,2.651,10,0.163,15,0.326,23,1.493,30,0.591,33,2.571,35,2.562,43,0.825,44,0.007,45,0.298,46,0.184,47,0.811,50,1.534,52,1.135,58,0.978,63,0.481,65,4.444,70,5.868,73,4.617,74,0.184,86,0.185,87,1.788,88,1.581,115,0.005,116,0.005,118,1.694,121,1.982,144,1.621,174,1.711,203,1.067,296,1.636,319,2.396,327,0.651,373,1.921,388,1.886,389,1.911,391,2.737,418,2.203,431,3.586,526,3.105,667,1.232,668,1.554,671,1.063,771,4.444,796,4.902,811,4.017,832,1.315,842,1.796,890,3.484,924,4.444,959,5.334,961,4.811,962,3.314,970,2.115,987,3.89,988,4.331,989,4.331,990,5.293,992,4.331,993,5.983,995,3.683,996,4.633,997,4.633,998,4.331,999,6.205,1000,5.033,1001,5.293,1002,3.105,1003,3.718,1004,4.444,1005,4.091,1370,5.65,1371,5.65]],["title/entities/CategoryEntity.html",[264,0.801,1372,3.465]],["body/entities/CategoryEntity.html",[3,0.118,4,0.096,5,0.032,8,0.141,10,0.093,15,0.484,16,0.957,30,0.757,44,0.007,45,0.415,46,0.182,58,1.217,61,2.546,63,0.47,74,0.21,81,1.035,86,0.111,87,2.348,115,0.005,116,0.005,167,2.546,182,2.511,203,1.15,218,2.165,264,1.318,267,1.281,295,1.346,314,1.356,319,2.305,380,1.392,389,1.392,392,1.481,393,2.223,400,3.07,480,1.346,518,1.392,644,1.839,673,1.542,676,2.534,678,3.561,681,3.363,693,2.758,703,1.714,704,3.543,707,2.758,708,3.126,709,3.021,730,1.596,731,1.569,732,1.569,733,1.596,734,2.36,735,1.569,736,2.641,737,2.036,738,1.464,739,1.596,740,1.596,741,1.596,742,1.596,743,1.596,744,1.596,745,1.49,746,1.596,747,1.596,748,1.596,749,1.542,750,1.596,751,1.569,752,1.596,753,1.596,754,1.596,755,1.596,756,1.596,757,1.464,758,1.596,759,1.569,760,1.596,965,2.392,1019,3.764,1072,4.199,1372,6.477,1373,5.325,1374,5.392,1375,7.033,1376,7.02,1377,7.875,1378,7.875,1379,7.875,1380,5.325,1381,2.612,1382,3.123,1383,5.325,1384,4.913,1385,2.758,1386,4.441,1387,5.325,1388,5.325,1389,4.339,1390,3.237,1391,3.865,1392,3.237,1393,5.325,1394,3.855,1395,4.441,1396,5.422,1397,5.325,1398,7.875,1399,5.325,1400,3.989,1401,5.392,1402,5.325,1403,4.082,1404,5.325,1405,3.75,1406,3.75,1407,3.643,1408,4.747,1409,5.325,1410,2.926,1411,5.325,1412,3.855,1413,4.367,1414,5.325,1415,5.325,1416,3.855]],["title/modules/CategoryModule.html",[832,1.114,1417,3.669]],["body/modules/CategoryModule.html",[3,0.139,4,0.113,5,0.035,8,0.166,10,0.109,44,0.007,74,0.23,76,1.259,81,1.218,86,0.131,115,0.005,116,0.005,267,1.508,380,1.638,480,1.585,518,1.638,612,3.732,644,2.041,730,1.878,731,1.846,732,1.846,733,1.878,734,2.549,735,1.846,736,2.742,737,2.26,738,1.723,739,1.878,740,1.878,741,1.878,742,1.878,743,1.878,744,1.878,745,1.753,746,1.878,747,1.878,748,1.878,749,1.814,750,1.878,751,1.846,752,1.878,753,1.878,754,1.878,755,1.878,756,1.878,757,1.723,758,1.878,759,1.846,760,1.878,832,2.132,834,2.722,852,4.354,862,3.732,874,3.965,878,3.965,1247,4.163,1267,3.341,1280,3.444,1281,3.809,1282,3.809,1283,3.809,1288,3.809,1289,3.555,1295,4.537,1372,4.537,1417,7.401,1418,5.587,1419,6.267,1420,5.587,1421,5.587,1422,7.528,1423,6.267,1424,5.985,1425,6.402,1426,6.402,1427,6.402,1428,6.267,1429,4.124,1430,5.587,1431,6.267]],["title/entities/CategoryRestrictionEntity.html",[264,0.801,1432,4.267]],["body/entities/CategoryRestrictionEntity.html",[3,0.133,4,0.108,5,0.034,8,0.159,10,0.104,15,0.48,16,1.031,30,0.707,41,2.193,44,0.007,46,0.17,63,0.425,71,2.271,74,0.209,81,1.161,86,0.124,87,2.209,115,0.005,116,0.005,203,1.215,264,1.393,267,1.437,295,1.511,314,1.226,319,2.483,359,2.894,380,1.562,389,1.562,392,1.565,393,2.395,480,1.511,518,1.562,644,1.981,673,1.73,676,2.366,678,3.016,693,3.095,703,1.923,704,3.817,707,3.095,708,2.655,730,1.791,731,1.76,732,1.76,733,1.791,734,2.494,735,1.76,736,2.713,737,2.193,738,1.643,739,1.791,740,1.791,741,1.791,742,1.791,743,1.791,744,1.791,745,1.671,746,1.791,747,1.791,748,1.791,749,1.73,750,1.791,751,1.76,752,1.791,753,1.791,754,1.791,755,1.791,756,1.791,757,1.643,758,1.791,759,1.76,760,1.791,1036,4.533,1038,3.283,1233,3.367,1372,6.335,1374,6.379,1381,2.931,1382,3.504,1385,3.095,1405,4.04,1406,4.04,1407,3.925,1427,6.213,1432,6.755,1433,9.03,1434,5.975,1435,7.577,1436,8.321,1437,4.58,1438,5.975,1439,4.986,1440,5.975,1441,5.975,1442,5.975,1443,5.975,1444,5.975,1445,5.975]],["title/injectables/CategoryService.html",[819,1.569,1422,3.669]],["body/injectables/CategoryService.html",[3,0.127,4,0.103,5,0.026,8,0.216,10,0.099,15,0.328,18,2.24,21,3.901,23,1.499,24,2.57,25,2.365,30,0.657,43,1.187,44,0.007,45,0.429,46,0.158,47,1.276,50,1.455,51,2.048,63,0.456,74,0.233,76,1.143,86,0.118,88,2.275,89,2.28,93,2.451,103,1.369,115,0.005,116,0.005,137,2.544,144,1.229,184,2.363,190,4.361,264,1.229,295,1.438,314,1.316,392,1.743,434,4.217,574,3.118,763,3.263,819,2.407,821,2.652,828,2.416,830,3.033,842,1.627,890,2.985,1072,4.335,1111,3.915,1266,4.118,1267,3.033,1296,3.592,1351,2.363,1372,6.221,1374,7.336,1376,7.66,1408,7.66,1422,5.629,1426,6.021,1427,6.021,1430,5.071,1446,5.689,1447,7.343,1448,5.629,1449,5.689,1450,8.593,1451,5.689,1452,7.343,1453,7.343,1454,5.689,1455,8.593,1456,5.055,1457,7.343,1458,7.343,1459,5.689,1460,7.343,1461,8.132,1462,7.343,1463,7.343,1464,7.343,1465,3.337,1466,7.249,1467,5.689,1468,4.665,1469,5.689,1470,5.689,1471,5.689,1472,5.689,1473,5.689,1474,5.689,1475,5.689]],["title/controllers/ConfigController.html",[671,0.9,1476,3.925]],["body/controllers/ConfigController.html",[3,0.129,4,0.104,5,0.034,10,0.101,15,0.334,18,1.763,23,1.515,24,3.008,30,0.662,43,1.196,44,0.007,45,0.432,46,0.159,47,1.176,50,1.466,63,0.459,74,0.234,76,1.161,81,1.124,86,0.12,93,2.735,103,1.971,115,0.005,116,0.005,144,1.531,267,1.391,317,4.209,380,1.511,480,1.462,518,1.511,644,1.94,671,1.087,676,2.215,712,2.569,714,2.511,730,1.733,731,1.703,732,1.703,733,1.733,734,2.456,735,1.703,736,2.693,737,2.148,738,1.59,739,1.733,740,1.733,741,1.733,742,1.733,743,1.733,744,1.733,745,1.617,746,1.733,747,1.733,748,1.733,749,1.674,750,1.733,751,1.703,752,1.733,753,1.733,754,1.733,755,1.733,756,1.733,757,1.59,758,1.733,759,1.703,760,1.733,761,3.728,762,4.685,764,3.65,820,3.514,925,3.547,1019,3.547,1020,4.355,1041,2.913,1042,3.177,1134,3.403,1233,2.569,1304,3.804,1347,3.279,1476,6.084,1477,5.781,1478,6.614,1479,6.614,1480,5.781,1481,5.781,1482,5.781,1483,5.154,1484,5.781,1485,5.781,1486,5.781,1487,6.627,1488,5.781,1489,5.781,1490,5.108,1491,3.804,1492,5.641,1493,5.154,1494,3.98,1495,4.185,1496,3.98,1497,3.98,1498,5.154,1499,5.781,1500,5.689,1501,5.932,1502,5.781,1503,5.781,1504,5.781,1505,5.781,1506,5.781]],["title/interfaces/ConfigItem.html",[327,0.552,1487,3.669]],["body/interfaces/ConfigItem.html",[3,0.156,4,0.127,5,0.032,8,0.187,15,0.406,16,1.139,44,0.006,46,0.163,63,0.538,86,0.146,115,0.005,116,0.005,183,2.144,327,0.81,329,2.069,373,3.362,391,3.134,418,3.263,610,4.748,925,4.702,1136,5.116,1487,6.417,1507,7.024,1508,4.27,1509,6.262,1510,7.024,1511,6.262,1512,5.76]],["title/modules/ConfigModule.html",[832,1.114,1513,3.465]],["body/modules/ConfigModule.html",[3,0.136,4,0.11,5,0.035,8,0.162,10,0.106,44,0.007,74,0.233,76,1.228,81,1.188,86,0.127,115,0.005,116,0.005,267,1.471,373,2.614,380,1.598,480,1.546,501,3.584,518,1.598,612,3.675,644,2.01,712,3.416,730,1.832,731,1.801,732,1.801,733,1.832,734,2.521,735,1.801,736,2.727,737,2.226,738,1.681,739,1.832,740,1.832,741,1.832,742,1.832,743,1.832,744,1.832,745,1.71,746,1.832,747,1.832,748,1.832,749,1.77,750,1.832,751,1.801,752,1.832,753,1.832,754,1.832,755,1.832,756,1.832,757,1.681,758,1.832,759,1.801,760,1.832,832,2.117,834,2.655,850,4.948,851,3.716,852,4.327,853,3.716,854,4.137,855,4.209,862,3.675,864,4.023,874,3.921,878,3.921,1280,3.359,1281,3.716,1282,3.716,1283,3.716,1288,3.716,1289,3.468,1356,5.893,1476,6.896,1492,6.739,1493,5.45,1513,7.116,1514,5.45,1515,5.45,1516,5.45,1517,5.45,1518,6.113,1519,6.113]],["title/injectables/ConfigService.html",[819,1.569,1492,3.295]],["body/injectables/ConfigService.html",[3,0.051,4,0.067,5,0.041,8,0.203,10,0.04,15,0.131,16,1.282,18,2.188,19,3.461,21,2.853,23,1.12,24,2.851,25,2.478,30,0.676,33,2.496,38,2.644,43,1.222,44,0.007,45,0.429,46,0.168,47,1.123,50,1.548,51,0.819,52,1.102,53,2.69,58,1.126,59,1.647,61,3.284,63,0.541,65,2.268,69,1.932,74,0.18,76,0.457,86,0.099,87,1.481,88,2.31,89,3.006,93,2.994,97,1.25,98,1.158,103,1.883,115,0.002,116,0.002,124,2.05,134,1.879,137,1.293,144,1.337,166,2.568,167,1.783,174,1.283,180,2.622,182,1.421,183,1.867,184,0.945,212,1.383,219,1.437,220,1.647,232,2.028,247,2.781,254,3.326,302,3.326,303,2.028,352,4.359,373,3.032,393,1.179,394,2.983,408,4.081,470,2.268,473,1.989,533,1.989,582,3.217,714,1.62,738,1.026,770,1.497,819,1.223,821,1.061,826,1.291,828,0.966,830,1.213,842,1.441,889,2.701,890,2.644,891,2.762,914,2.455,924,3.334,925,4.002,926,4.168,972,3.776,986,3.653,998,2.86,1019,2.622,1020,2.763,1041,1.146,1042,1.25,1109,1.879,1113,3.815,1123,1.989,1136,1.989,1177,3.463,1247,1.989,1262,3.609,1304,3.984,1351,0.945,1361,3.776,1400,2.69,1425,3.059,1448,2.86,1478,3.326,1479,3.326,1483,3.326,1487,4.641,1492,3.776,1498,2.028,1520,2.275,1521,2.86,1522,3.326,1523,2.86,1524,3.326,1525,3.731,1526,4.742,1527,4.742,1528,4.742,1529,3.731,1530,5.485,1531,4.742,1532,4.742,1533,3.731,1534,4.742,1535,3.731,1536,4.742,1537,4.742,1538,3.731,1539,3.731,1540,2.275,1541,3.059,1542,3.731,1543,5.636,1544,5.485,1545,2.275,1546,2.275,1547,6.869,1548,2.275,1549,5.692,1550,3.059,1551,6.505,1552,3.059,1553,2.275,1554,2.275,1555,3.434,1556,3.731,1557,3.059,1558,3.731,1559,2.275,1560,2.86,1561,3.731,1562,3.731,1563,3.326,1564,2.275,1565,5.485,1566,2.275,1567,3.731,1568,3.971,1569,4.498,1570,4.742,1571,3.731,1572,3.731,1573,2.275,1574,2.86,1575,3.326,1576,2.86,1577,2.275,1578,6.505,1579,2.275,1580,3.463,1581,4.107,1582,2.275,1583,4.89,1584,2.275,1585,7.641,1586,2.275,1587,3.731,1588,3.059,1589,3.326,1590,3.731,1591,2.275,1592,2.275,1593,2.275,1594,2.86,1595,2.028,1596,2.028,1597,5.397,1598,4.227,1599,3.326,1600,4.89,1601,5.397,1602,2.275,1603,1.497,1604,3.731,1605,2.275,1606,1.744,1607,2.275,1608,3.731,1609,2.275,1610,2.275,1611,2.028,1612,2.275,1613,2.275,1614,2.275,1615,2.275,1616,2.275,1617,2.275,1618,2.275,1619,2.275,1620,4.205,1621,3.635,1622,2.275,1623,2.275,1624,2.275,1625,2.275,1626,2.275,1627,2.028,1628,2.275,1629,2.275,1630,2.275,1631,2.275,1632,1.744,1633,2.275,1634,2.275,1635,2.275,1636,3.059,1637,2.275,1638,3.326,1639,2.275,1640,2.275,1641,2.275,1642,2.275,1643,2.275,1644,2.028,1645,2.275,1646,2.275,1647,3.731,1648,2.275,1649,2.275,1650,2.275,1651,2.275,1652,2.275,1653,3.731,1654,4.742,1655,2.86,1656,3.731,1657,6.054,1658,2.275,1659,4.742,1660,2.275,1661,5.485,1662,3.326,1663,3.731,1664,5.485,1665,3.731,1666,4.742,1667,6.054,1668,3.731,1669,2.275,1670,2.275,1671,7.171,1672,2.275,1673,2.275,1674,2.275,1675,2.275,1676,3.326,1677,2.275,1678,4.227,1679,2.275,1680,2.275,1681,4.498,1682,2.275,1683,4.742,1684,2.275,1685,2.275,1686,4.742,1687,2.275,1688,2.275,1689,2.275,1690,2.275,1691,2.275,1692,2.275,1693,2.275,1694,2.275,1695,2.275,1696,3.731,1697,2.275,1698,3.731,1699,2.275,1700,2.275,1701,2.275,1702,2.275,1703,7.641,1704,2.275,1705,2.275,1706,2.275,1707,2.275,1708,5.485,1709,2.275,1710,2.275,1711,2.275,1712,2.275,1713,3.731,1714,2.275,1715,2.275,1716,1.744,1717,2.275,1718,2.275,1719,2.275,1720,2.275,1721,3.731,1722,2.275,1723,2.275,1724,2.275,1725,3.731,1726,2.275,1727,2.028,1728,2.275,1729,2.275,1730,2.275,1731,3.731,1732,3.731,1733,2.275,1734,3.731,1735,2.275,1736,2.275,1737,2.275,1738,2.275,1739,3.731,1740,2.275,1741,2.275,1742,1.744,1743,2.275,1744,2.275,1745,3.731,1746,2.275,1747,3.731,1748,2.275,1749,2.275,1750,2.275,1751,2.275,1752,2.275,1753,2.275,1754,2.275]],["title/classes/DbExceptionFilter.html",[10,0.083,1755,4.267]],["body/classes/DbExceptionFilter.html",[3,0.148,4,0.12,5,0.03,8,0.177,10,0.116,13,1.629,15,0.385,23,1.656,30,0.539,43,0.974,44,0.006,45,0.352,46,0.129,47,0.957,50,1.565,74,0.22,76,1.339,86,0.139,89,2.07,115,0.005,116,0.005,118,1.999,149,4.202,181,4.076,219,5.521,266,5.338,295,2.211,388,2.918,473,4.85,904,6.974,944,5.469,945,7.232,964,5.338,1102,3.979,1305,6.019,1465,3.911,1755,8.11,1756,8.112,1757,6.668,1758,7.232,1759,8.112,1760,8.112,1761,8.112,1762,8.112,1763,8.112,1764,9.097,1765,9.097,1766,6.668,1767,6.668,1768,6.668,1769,6.668,1770,6.668,1771,6.668,1772,6.668]],["title/interfaces/DirectoryStructure.html",[327,0.552,1773,4.267]],["body/interfaces/DirectoryStructure.html",[3,0.11,4,0.089,5,0.043,8,0.131,24,2.683,30,0.398,44,0.007,46,0.17,47,0.707,50,1.519,58,1.312,61,3.193,63,0.517,74,0.225,86,0.182,87,1.206,88,2.448,89,2.826,93,3.08,103,2.042,115,0.004,116,0.004,121,1.634,144,1.359,146,3.78,149,2.554,212,2.997,218,2.716,219,3.114,279,4.163,312,3.245,327,0.873,329,1.452,356,2.892,394,3.886,429,4.764,482,1.963,667,1.075,811,3.671,832,1.976,890,2.005,915,4.836,924,2.997,925,3.193,1119,3.919,1139,2.969,1177,2.894,1192,3.695,1522,5.956,1523,5.121,1543,5.758,1549,3.78,1581,3.114,1594,5.121,1727,5.956,1742,3.78,1773,7.977,1774,4.396,1775,6.213,1776,6.659,1777,6.681,1778,4.931,1779,4.931,1780,6.681,1781,6.681,1782,4.931,1783,6.681,1784,4.931,1785,4.043,1786,5.478,1787,4.396,1788,6.754,1789,4.396,1790,4.396,1791,4.931,1792,4.931,1793,5.439,1794,4.931,1795,4.931,1796,6.681,1797,6.681,1798,4.931,1799,4.931,1800,4.931,1801,3.78,1802,4.396,1803,4.931,1804,6.681,1805,6.681,1806,4.931,1807,4.931,1808,4.931,1809,4.931,1810,4.931,1811,4.931,1812,4.931,1813,3.245,1814,4.931,1815,4.931,1816,4.931,1817,4.931,1818,4.931,1819,5.216,1820,5.121,1821,4.396,1822,4.931,1823,4.043,1824,4.931,1825,4.931,1826,4.396,1827,4.931,1828,4.931,1829,4.931,1830,4.931,1831,4.931,1832,4.931,1833,4.931,1834,4.396,1835,4.931,1836,6.681,1837,4.931,1838,4.931,1839,4.931,1840,4.931,1841,8.121,1842,4.931,1843,4.931,1844,4.931]],["title/injectables/DtoInterceptor.html",[819,1.569,1845,4.267]],["body/injectables/DtoInterceptor.html",[3,0.149,4,0.12,5,0.03,8,0.178,10,0.162,13,1.343,15,0.386,18,2.04,23,1.659,29,6.98,30,0.656,43,1.186,44,0.006,45,0.429,46,0.13,47,1.166,48,4.84,50,1.197,74,0.22,76,1.343,86,0.139,98,2.076,103,1.609,115,0.005,116,0.005,137,2.317,174,1.197,180,3.884,266,4.4,319,2.663,738,1.839,819,2.663,821,3.117,964,5.347,965,2.274,995,3.368,1139,3.611,1347,3.792,1845,7.243,1846,6.686,1847,8.125,1848,8.125,1849,7.243,1850,6.663,1851,7.178,1852,8.125,1853,6.686,1854,6.686,1855,8.125,1856,8.125,1857,6.98,1858,9.105,1859,6.686,1860,8.125,1861,5.482,1862,4.84,1863,6.686,1864,5.96,1865,6.686,1866,6.686]],["title/interfaces/EntitySaveHandler.html",[327,0.552,1097,2.63]],["body/interfaces/EntitySaveHandler.html",[3,0.078,4,0.063,5,0.016,8,0.197,9,2.42,10,0.136,15,0.201,23,1.066,30,0.282,38,1.418,41,2.151,43,1.24,44,0.007,45,0.469,46,0.176,47,0.749,50,1.487,51,1.256,52,1.902,58,1.52,63,0.55,66,1.807,71,2.744,74,0.209,86,0.187,88,2.579,115,0.004,116,0.003,121,2.176,144,1.623,172,1.86,174,1.572,180,2.495,203,1.24,240,0.826,264,1.641,266,3.434,285,1.979,295,0.882,296,1.01,314,1.44,319,2.723,327,1.063,329,1.028,383,1.195,384,1.418,389,0.912,392,0.982,398,1.808,400,1.36,402,1.626,423,1.481,432,2.216,434,2.375,445,2.495,484,1.626,574,1.481,626,1.626,667,0.761,668,0.959,671,0.656,673,1.01,703,2.012,714,1.515,761,1.587,832,0.812,842,1.157,890,3.286,891,2.216,967,1.668,986,1.668,995,1.758,1006,1.979,1007,2.046,1009,2.046,1010,2.046,1011,3.061,1012,2.046,1015,2.046,1017,4.556,1019,3.552,1020,3.496,1023,3.15,1026,2.046,1028,2.046,1030,2.046,1031,4.566,1033,1.86,1034,2.835,1035,1.256,1036,3.239,1037,2.046,1038,1.917,1039,4.147,1040,1.86,1041,2.629,1042,1.917,1043,1.979,1044,1.86,1045,3.061,1046,2.046,1047,1.917,1048,3.936,1049,1.807,1050,2.868,1051,2.046,1052,2.046,1053,2.046,1054,2.046,1055,1.979,1056,1.979,1057,2.046,1058,2.046,1059,2.046,1060,2.046,1061,2.046,1062,2.046,1063,2.046,1064,2.046,1065,2.046,1066,2.046,1067,2.046,1068,3.547,1069,2.046,1070,2.868,1071,2.96,1072,2.782,1073,2.12,1074,2.96,1075,1.86,1076,2.96,1077,1.55,1078,2.12,1079,1.86,1080,3.061,1081,4.982,1082,2.046,1083,2.046,1084,2.046,1085,2.046,1086,2.046,1087,2.046,1088,1.979,1089,1.979,1090,2.703,1091,3.061,1092,3.172,1093,3.061,1094,3.061,1095,2.12,1096,2.12,1097,2.868,1098,3.061,1099,3.15,1100,1.917,1101,1.979,1102,1.711,1103,1.758,1104,1.917,1105,2.046,1106,1.979,1107,2.12,1108,2.12,1109,3.496,1110,2.868,1111,3.334,1112,2.046,1113,2.046,1114,5.075,1115,4.741,1116,4.516,1117,2.12,1118,2.046,1119,2.046,1120,3.061,1121,2.868,1122,2.12,1123,1.86,1124,2.703,1125,3.8,1126,2.046,1127,2.046,1128,1.86,1129,3.172,1130,2.12,1131,2.12,1132,2.12,1133,2.12,1134,1.449,1135,1.979,1136,1.86,1137,2.046,1138,1.306,1139,1.55,1140,2.12,1141,2.12,1867,3.489]],["title/classes/ExchangeTokenPayload.html",[10,0.083,719,3.295]],["body/classes/ExchangeTokenPayload.html",[3,0.116,4,0.094,5,0.024,8,0.139,10,0.163,12,4.43,15,0.302,16,0.946,30,0.423,35,2.738,41,2.261,42,5.514,44,0.007,46,0.168,47,1.12,58,1.499,63,0.529,71,2.723,74,0.228,76,1.052,81,1.018,86,0.18,98,2.159,115,0.004,116,0.004,118,1.569,144,1.307,174,1.55,203,0.764,240,1.969,276,3.165,291,3.941,327,0.603,365,3.054,388,3.033,428,3.504,667,1.141,668,1.44,671,0.985,676,1.416,716,5.376,719,5.376,722,5.412,724,4.577,727,3.79,745,1.465,768,3.306,769,3.605,779,3.306,782,3.605,783,5.139,796,3.412,832,1.219,840,3.605,842,1.731,892,5.963,893,4.788,896,3.605,910,3.605,913,3.445,936,3.605,937,3.605,954,3.79,958,5.331,959,5.139,960,6.639,961,5.859,962,3.071,963,3.456,964,3.445,965,1.78,966,4.164,967,2.503,968,4.014,969,4.014,970,3.115,971,4.045,972,5.376,973,3.605,974,4.014,975,4.014,976,4.014,977,4.014,978,6.379,979,5.331,980,3.79,981,4.931,982,4.014,983,5.331,984,4.014,985,4.014,986,2.503,1868,4.668,1869,5.236]],["title/interfaces/ExplorerAction.html",[327,0.552,1050,2.63]],["body/interfaces/ExplorerAction.html",[3,0.077,4,0.062,5,0.016,8,0.22,9,2.415,10,0.135,15,0.2,16,0.705,38,1.405,41,2.143,43,1.21,44,0.007,45,0.478,46,0.184,47,0.496,50,1.442,51,1.245,52,1.899,58,1.554,63,0.55,66,1.791,71,2.691,74,0.208,86,0.187,88,2.575,115,0.004,116,0.003,121,2.172,144,1.622,172,1.843,174,1.517,180,2.478,203,1.237,240,0.818,264,1.637,285,1.961,295,0.874,296,1.001,314,1.467,319,2.426,327,1.061,329,1.018,383,1.187,384,1.405,389,0.904,392,1.392,398,1.796,400,1.348,402,1.612,423,1.468,432,1.468,434,2.359,445,1.653,484,1.612,574,1.468,626,1.612,667,0.754,668,0.951,671,0.65,673,1.001,703,2.001,714,1.501,761,1.573,832,0.805,842,1.149,890,3.276,891,2.201,967,1.653,986,1.653,995,1.742,1006,1.961,1007,2.028,1009,2.028,1010,2.028,1011,3.041,1012,2.028,1015,2.028,1017,4.552,1019,3.962,1020,3.481,1023,3.133,1026,2.028,1028,2.028,1030,2.028,1031,4.554,1033,1.843,1034,2.97,1035,1.245,1036,3.221,1037,2.028,1038,1.9,1039,4.185,1040,1.843,1041,2.612,1042,1.9,1043,1.961,1044,1.843,1045,3.041,1046,2.028,1047,1.9,1048,3.919,1049,1.791,1050,3.417,1051,2.028,1052,2.028,1053,2.028,1054,2.028,1055,1.961,1056,1.961,1057,2.028,1058,2.028,1059,2.028,1060,2.028,1061,2.028,1062,2.028,1063,2.028,1064,2.028,1065,2.028,1066,2.028,1067,2.028,1068,3.527,1069,2.028,1070,2.848,1071,2.94,1072,3.946,1073,2.101,1074,3.919,1075,2.764,1076,2.94,1077,1.536,1078,2.101,1079,1.843,1080,3.041,1081,4.972,1082,2.028,1083,2.028,1084,2.028,1085,2.028,1086,2.028,1087,2.028,1088,1.961,1089,1.961,1090,1.791,1091,2.028,1092,2.101,1093,2.028,1094,2.028,1095,2.101,1096,2.101,1097,1.9,1098,2.028,1099,1.742,1100,1.9,1101,1.961,1102,1.696,1103,1.742,1104,1.9,1105,2.028,1106,1.961,1107,2.101,1108,2.101,1109,3.481,1110,2.848,1111,3.316,1112,2.028,1113,2.028,1114,5.063,1115,4.726,1116,4.499,1117,2.101,1118,2.028,1119,2.028,1120,3.041,1121,2.848,1122,2.101,1123,1.843,1124,2.685,1125,3.78,1126,2.028,1127,2.028,1128,1.843,1129,3.151,1130,2.101,1131,2.101,1132,2.101,1133,2.101,1134,1.436,1135,1.961,1136,1.843,1137,2.028,1138,1.294,1139,1.536,1140,2.101,1141,2.101]],["title/entities/ExplorerActionEntity.html",[264,0.801,1870,3.925]],["body/entities/ExplorerActionEntity.html",[3,0.121,4,0.098,5,0.032,8,0.224,10,0.095,13,1.092,15,0.488,16,0.97,30,0.727,44,0.007,45,0.42,46,0.184,58,1.377,61,3.408,63,0.4,74,0.22,81,1.056,86,0.113,87,2.275,115,0.005,116,0.005,182,2.697,218,3.234,264,1.332,267,1.308,295,1.374,314,1.154,380,1.421,392,1.496,393,2.253,480,1.374,501,3.323,518,1.421,644,1.864,673,2.303,676,2.433,678,3.361,681,3.432,703,2.294,709,3.083,730,1.629,731,1.601,732,1.601,733,1.629,734,2.384,735,1.601,736,2.654,737,2.064,738,1.495,739,1.629,740,1.629,741,1.629,742,1.629,743,1.629,744,1.629,745,1.52,746,1.629,747,1.629,748,1.629,749,1.573,750,1.629,751,1.601,752,1.629,753,1.629,754,1.629,755,1.629,756,1.629,757,1.495,758,1.629,759,1.601,760,1.629,965,2.424,1019,3.802,1023,2.738,1039,2.534,1040,2.898,1049,3.692,1050,3.917,1072,4.241,1074,4.043,1077,2.415,1389,4.749,1390,4.333,1391,4.64,1392,4.333,1394,3.935,1395,4.501,1396,5.476,1400,4.043,1401,5.465,1405,4.241,1406,4.241,1410,2.987,1412,3.935,1416,3.935,1511,6.355,1870,5.845,1871,6.638,1872,5.435,1873,4.908,1874,5.465,1875,5.465,1876,6.355,1877,5.845,1878,4.167,1879,5.435,1880,5.435,1881,5.435,1882,5.435,1883,5.435,1884,4.457,1885,5.813,1886,5.435,1887,3.432,1888,3.432,1889,4.167,1890,5.435,1891,3.083]],["title/interfaces/ExplorerColumn.html",[327,0.552,1048,2.715]],["body/interfaces/ExplorerColumn.html",[3,0.071,4,0.058,5,0.014,8,0.215,9,2.367,10,0.131,15,0.185,16,0.665,38,1.301,41,2.071,43,1.182,44,0.007,45,0.471,46,0.19,47,0.459,50,1.405,51,1.152,52,1.967,58,1.49,63,0.552,66,1.658,71,2.648,74,0.203,86,0.184,88,2.541,115,0.004,116,0.003,121,2.135,144,1.609,172,1.706,174,1.484,180,2.337,203,1.274,240,0.757,264,1.626,285,1.815,295,0.809,296,0.926,314,1.47,319,2.345,327,1.047,329,0.943,383,1.12,384,1.301,389,1.737,392,0.92,398,1.694,400,1.248,402,1.492,423,1.359,432,1.359,434,2.225,445,1.53,484,3.097,574,1.359,626,3.097,667,0.698,668,0.88,671,0.602,673,0.926,703,2.138,714,1.39,761,1.456,832,0.745,842,1.084,890,3.19,891,2.076,967,1.53,986,3.175,995,1.612,1006,1.815,1007,1.877,1009,1.877,1010,1.877,1011,2.868,1012,1.877,1015,1.877,1017,4.545,1019,3.42,1020,3.346,1023,2.989,1026,1.877,1028,1.877,1030,1.877,1031,4.65,1033,1.706,1034,2.926,1035,1.152,1036,3.073,1037,1.877,1038,1.759,1039,4.119,1040,1.706,1041,2.463,1042,1.759,1043,1.815,1044,1.706,1045,3.896,1046,1.877,1047,1.759,1048,4.059,1049,1.658,1050,2.687,1051,1.877,1052,1.877,1053,1.877,1054,1.877,1055,1.815,1056,1.815,1057,3.896,1058,3.896,1059,3.896,1060,3.896,1061,3.896,1062,3.896,1063,3.896,1064,3.896,1065,3.896,1066,3.896,1067,3.896,1068,4.452,1069,3.896,1070,3.932,1071,3.768,1072,2.607,1073,1.945,1074,2.773,1075,1.706,1076,2.773,1077,1.422,1078,1.945,1079,1.706,1080,2.868,1081,4.881,1082,1.877,1083,1.877,1084,1.877,1085,1.877,1086,1.877,1087,1.877,1088,1.815,1089,1.815,1090,1.658,1091,1.877,1092,1.945,1093,1.877,1094,1.877,1095,1.945,1096,1.945,1097,1.759,1098,1.877,1099,1.612,1100,1.759,1101,1.815,1102,1.57,1103,1.612,1104,1.759,1105,1.877,1106,1.815,1107,1.945,1108,1.945,1109,3.346,1110,2.687,1111,3.163,1112,1.877,1113,1.877,1114,4.964,1115,4.603,1116,4.349,1117,1.945,1118,1.877,1119,1.877,1120,2.868,1121,2.687,1122,1.945,1123,1.706,1124,2.533,1125,3.606,1126,1.877,1127,1.877,1128,1.706,1129,2.972,1130,1.945,1131,1.945,1132,1.945,1133,1.945,1134,1.329,1135,1.815,1136,1.706,1137,1.877,1138,1.198,1139,1.422,1140,1.945,1141,1.945]],["title/entities/ExplorerColumnEntity.html",[264,0.801,1892,3.669]],["body/entities/ExplorerColumnEntity.html",[3,0.081,4,0.066,5,0.024,8,0.188,10,0.064,13,0.733,15,0.545,16,0.734,30,0.777,44,0.007,45,0.506,46,0.188,52,1.887,58,1.228,61,2.58,63,0.49,74,0.206,81,0.709,86,0.076,87,2.345,115,0.003,116,0.003,182,2.899,203,0.938,218,2.194,264,1.075,267,0.878,295,0.923,314,1.148,319,2.76,332,1.676,364,2.242,373,1.835,380,0.954,389,1.855,393,2.243,478,2.877,480,0.923,484,2.994,518,0.954,626,2.994,644,1.411,673,1.056,676,2.6,677,3.529,678,3.574,681,3.408,703,1.737,708,2.854,709,3.061,730,1.094,731,1.075,732,1.075,733,1.094,734,1.925,735,1.075,736,2.374,737,1.562,738,1.004,739,1.094,740,1.094,741,1.094,742,1.094,743,1.094,744,1.094,745,1.021,746,1.094,747,1.094,748,1.094,749,1.056,750,1.094,751,1.075,752,1.094,753,1.094,754,1.094,755,1.094,756,1.094,757,1.004,758,1.094,759,1.075,760,1.094,965,2.413,986,3.069,1017,2.994,1039,2.994,1047,2.965,1048,3.061,1057,3.766,1058,3.766,1059,3.766,1060,3.766,1061,3.766,1062,3.766,1063,3.766,1064,3.766,1065,3.766,1066,3.766,1067,3.766,1069,3.766,1070,3.529,1077,1.622,1102,2.647,1112,3.165,1351,3.802,1381,1.79,1385,2.795,1386,4.48,1389,4.248,1390,3.28,1391,3.899,1392,3.28,1394,3.907,1395,4.48,1396,5.213,1400,4.024,1401,5.439,1405,3.424,1406,3.424,1407,3.922,1410,2.005,1412,2.642,1416,3.907,1439,3.551,1871,6.983,1874,4.137,1875,4.137,1877,4.425,1887,2.304,1888,2.304,1889,2.797,1891,2.07,1892,4.137,1893,3.649,1894,6.421,1895,6.421,1896,3.649,1897,2.401,1898,3.649,1899,6.592,1900,3.649,1901,3.649,1902,3.649,1903,5.396,1904,3.649,1905,5.396,1906,3.649,1907,6.725,1908,5.396,1909,3.649,1910,5.396,1911,3.649,1912,5.396,1913,3.649,1914,3.649,1915,3.649,1916,5.396,1917,3.649,1918,5.396,1919,3.649,1920,5.396,1921,3.649,1922,5.396,1923,3.649,1924,3.649,1925,5.396,1926,3.649,1927,5.396,1928,3.649,1929,5.818,1930,3.649,1931,5.136,1932,4.811,1933,3.649,1934,2.992,1935,3.649,1936,3.649,1937,3.649,1938,2.992,1939,3.649,1940,3.649,1941,3.649,1942,2.992,1943,5.92]],["title/interfaces/ExplorerColumnRenderer.html",[327,0.552,1068,2.715]],["body/interfaces/ExplorerColumnRenderer.html",[3,0.077,4,0.063,5,0.016,8,0.22,9,2.418,10,0.136,15,0.201,16,0.708,38,1.413,41,2.148,43,1.212,44,0.007,45,0.479,46,0.184,47,0.499,50,1.445,51,1.251,52,1.901,58,1.556,63,0.55,66,1.801,71,2.694,74,0.208,86,0.187,88,2.578,115,0.004,116,0.003,121,2.174,144,1.623,172,1.854,174,1.519,180,2.488,203,1.239,240,0.823,264,1.635,285,1.972,295,0.879,296,1.006,314,1.439,319,2.431,327,1.062,329,1.024,383,1.192,384,1.413,389,0.909,392,1.395,398,1.804,400,1.355,402,1.621,423,1.476,432,1.476,434,2.369,445,1.662,484,1.621,574,1.476,626,1.621,667,0.758,668,0.956,671,0.654,673,1.006,703,2.23,714,1.51,761,1.582,832,0.809,842,1.153,890,3.282,891,2.21,967,1.662,986,1.662,995,1.751,1006,1.972,1007,2.039,1009,2.039,1010,2.039,1011,3.053,1012,2.039,1015,2.039,1017,4.546,1019,3.968,1020,3.49,1023,3.144,1026,2.039,1028,2.039,1030,2.039,1031,4.562,1033,1.854,1034,2.973,1035,1.251,1036,3.232,1037,2.039,1038,1.91,1039,4.19,1040,1.854,1041,2.622,1042,1.91,1043,1.972,1044,1.854,1045,3.053,1046,2.039,1047,1.91,1048,3.93,1049,1.801,1050,2.86,1051,2.039,1052,2.039,1053,2.039,1054,2.039,1055,1.972,1056,1.972,1057,2.039,1058,2.039,1059,2.039,1060,2.039,1061,2.039,1062,2.039,1063,2.039,1064,2.039,1065,2.039,1066,2.039,1067,2.039,1068,3.93,1069,2.039,1070,2.86,1071,2.953,1072,2.775,1073,3.164,1074,3.93,1075,1.854,1076,2.953,1077,1.545,1078,2.113,1079,1.854,1080,3.053,1081,4.978,1082,2.039,1083,2.039,1084,2.039,1085,2.039,1086,2.039,1087,2.039,1088,1.972,1089,1.972,1090,1.801,1091,2.039,1092,2.113,1093,2.039,1094,2.039,1095,2.113,1096,2.113,1097,1.91,1098,2.039,1099,1.751,1100,1.91,1101,1.972,1102,1.705,1103,1.751,1104,1.91,1105,2.039,1106,1.972,1107,2.113,1108,2.113,1109,3.49,1110,2.86,1111,3.327,1112,2.039,1113,2.039,1114,5.07,1115,4.735,1116,4.509,1117,2.113,1118,2.039,1119,2.039,1120,3.053,1121,2.86,1122,2.113,1123,1.854,1124,2.696,1125,3.793,1126,2.039,1127,2.039,1128,1.854,1129,3.164,1130,2.113,1131,2.113,1132,2.113,1133,2.113,1134,1.444,1135,1.972,1136,1.854,1137,2.039,1138,1.302,1139,1.545,1140,2.113,1141,2.113]],["title/entities/ExplorerColumnRendererEntity.html",[264,0.801,1907,3.925]],["body/entities/ExplorerColumnRendererEntity.html",[3,0.124,4,0.1,5,0.033,8,0.226,10,0.097,13,1.117,15,0.464,16,0.985,30,0.713,43,1.057,44,0.007,45,0.424,46,0.184,58,1.392,61,3.459,63,0.406,74,0.222,81,1.081,86,0.116,87,2.215,115,0.005,116,0.005,182,2.554,218,3.27,264,1.479,267,2.125,295,1.406,327,0.834,380,1.454,392,1.513,393,2.287,480,1.406,507,4.399,518,1.454,644,1.892,673,1.61,676,2.388,678,3.391,703,3.068,730,1.667,731,1.638,732,1.638,733,1.667,734,2.411,735,1.638,736,2.669,737,2.095,738,1.53,739,1.667,740,1.667,741,1.667,742,1.667,743,1.667,744,1.667,745,1.556,746,1.667,747,1.667,748,1.667,749,1.61,750,1.667,751,1.638,752,1.667,753,1.667,754,1.667,755,1.667,756,1.667,757,1.53,758,1.667,759,1.638,760,1.667,965,2.461,1019,3.845,1023,2.802,1039,2.593,1040,2.966,1068,4.105,1074,4.105,1077,2.472,1389,4.776,1390,4.399,1391,4.681,1392,4.399,1394,4.027,1395,4.57,1396,5.538,1405,4.289,1406,4.289,1410,3.057,1412,4.027,1416,4.027,1871,6.555,1878,4.264,1884,4.561,1885,5.865,1887,3.512,1888,3.512,1889,4.264,1891,3.155,1907,5.934,1944,5.562,1945,7.237,1946,5.562,1947,5.562,1948,5.562,1949,5.562,1950,5.562,1951,5.562]],["title/controllers/ExplorerController.html",[671,0.9,1952,3.669]],["body/controllers/ExplorerController.html",[3,0.091,4,0.073,5,0.026,10,0.071,13,0.819,15,0.235,18,1.785,23,1.195,24,3.049,25,1.556,30,0.686,43,1.239,44,0.007,45,0.435,46,0.178,47,1.246,50,1.519,58,1.37,63,0.541,71,2.98,74,0.23,76,0.819,81,0.793,86,0.085,87,2.016,88,1.141,89,2.696,93,2.833,97,3.215,98,1.817,103,2.042,115,0.004,116,0.004,137,1.413,144,1.562,174,1.338,203,1.268,218,1.658,267,0.981,295,1.031,317,2.313,319,2.451,380,1.066,480,1.031,518,1.066,644,1.53,671,0.767,676,2.295,712,1.812,714,1.771,730,1.222,731,1.201,732,1.201,733,1.222,734,2.051,735,1.201,736,2.457,737,1.694,738,1.121,739,1.222,740,1.222,741,1.222,742,1.222,743,1.222,744,1.222,745,1.141,746,1.222,747,1.222,748,1.222,749,1.181,750,1.222,751,1.201,752,1.222,753,1.222,754,1.222,755,1.222,756,1.222,757,1.121,758,1.222,759,1.201,760,1.222,761,3.75,762,2.575,763,3.662,764,2.575,820,2.479,828,1.732,967,1.949,1006,3.319,1008,6.101,1009,4.014,1010,4.014,1011,4.386,1012,4.014,1013,6.101,1014,5.216,1015,2.392,1017,4.378,1018,3.635,1019,3.574,1020,3.767,1022,3.635,1023,3.989,1026,2.392,1028,2.392,1030,2.392,1031,4.109,1033,2.174,1039,2.728,1040,2.174,1041,2.054,1042,2.241,1076,2.313,1081,4.674,1082,2.392,1083,4.014,1084,3.432,1085,4.644,1089,2.313,1090,2.112,1097,3.215,1099,4.152,1100,3.761,1114,5.263,1134,1.694,1233,1.812,1264,4.954,1490,4.028,1491,2.683,1494,2.807,1495,2.952,1496,2.807,1497,2.807,1500,2.683,1501,4.236,1887,2.575,1952,4.486,1953,4.078,1954,4.078,1955,4.078,1956,4.078,1957,4.078,1958,4.078,1959,4.078,1960,4.078,1961,4.078,1962,4.078,1963,4.078,1964,4.078,1965,4.078,1966,4.078,1967,4.078,1968,4.078,1969,4.486,1970,3.635,1971,3.344,1972,3.344,1973,3.635,1974,4.078,1975,4.078,1976,4.078,1977,4.078,1978,4.078,1979,4.078,1980,4.078,1981,4.078,1982,4.078,1983,7.917,1984,4.078,1985,4.078,1986,4.078,1987,5.216,1988,4.078,1989,4.078,1990,4.078,1991,4.078,1992,4.078,1993,4.078,1994,4.078,1995,4.078,1996,4.078]],["title/modules/ExplorerModule.html",[832,1.114,1997,3.669]],["body/modules/ExplorerModule.html",[3,0.123,4,0.1,5,0.033,8,0.147,10,0.097,13,1.113,18,1.691,23,1.132,24,2.283,30,0.583,43,0.809,44,0.007,45,0.292,46,0.108,47,0.795,50,1.292,74,0.242,76,1.113,81,1.078,86,0.115,89,1.721,93,1.851,103,1.334,115,0.005,116,0.005,149,2.872,182,1.662,183,1.209,267,1.334,380,1.449,480,1.402,518,1.449,644,1.888,667,1.751,671,1.358,712,2.464,730,1.662,731,1.633,732,1.633,733,1.662,734,2.407,735,1.633,736,2.667,737,2.09,738,1.525,739,1.662,740,1.662,741,1.662,742,1.662,743,1.662,744,1.662,745,1.551,746,1.662,747,1.662,748,1.662,749,1.605,750,1.662,751,1.633,752,1.662,753,1.662,754,1.662,755,1.662,756,1.662,757,1.525,758,1.662,759,1.633,760,1.662,832,2.144,834,2.408,837,3.74,838,4.752,839,3.648,842,1.78,844,4.882,850,3.85,851,3.37,852,3.367,853,3.37,854,2.523,855,3.817,862,2.65,864,3.648,874,2.585,875,2.793,876,3.252,878,2.585,897,6.585,1039,2.585,1040,2.956,1088,3.145,1089,4.096,1100,4.675,1101,4.096,1102,4.174,1103,3.638,1104,3.968,1267,2.956,1347,3.145,1429,3.648,1560,5.536,1820,4.25,1887,3.501,1892,5.536,1931,4.013,1938,4.546,1952,6.157,1997,6.157,1998,5.544,1999,7.221,2000,7.221,2001,5.544,2002,7.16,2003,8.823,2004,5.544,2005,4.546,2006,5.544,2007,7.221,2008,4.942,2009,5.544,2010,6.437,2011,5.544,2012,5.544,2013,5.544,2014,5.544,2015,5.544,2016,5.544,2017,5.544,2018,5.544,2019,5.544]],["title/classes/ExplorerService.html",[10,0.083,1100,2.63]],["body/classes/ExplorerService.html",[3,0.064,4,0.052,5,0.013,8,0.222,9,2.64,10,0.131,15,0.165,23,0.916,30,0.63,38,1.824,41,2.376,43,1.344,44,0.007,45,0.49,46,0.178,47,1.119,50,1.578,51,1.031,52,1.849,58,1.54,63,0.551,66,2.323,71,2.584,74,0.196,86,0.18,88,2.489,115,0.004,116,0.003,118,0.858,121,2.079,144,1.636,172,2.392,174,1.578,180,2.992,184,3.131,203,1.274,240,0.678,264,1.657,285,2.544,295,0.724,296,0.829,314,1.463,319,2.557,327,1.016,383,1.027,384,1.164,389,0.748,392,0.844,398,1.554,400,1.116,402,1.335,423,1.905,432,1.216,434,2.848,445,1.369,484,1.335,574,1.905,626,1.335,667,0.624,668,0.787,671,0.538,673,1.299,703,1.78,714,1.243,761,1.303,832,0.666,842,1.226,890,3.546,891,2.658,967,1.369,986,1.369,995,1.442,1006,1.624,1007,1.679,1009,1.679,1010,1.679,1011,3.987,1012,3.244,1015,1.679,1017,4.583,1019,3.603,1020,3.632,1023,2.786,1026,2.631,1028,1.679,1030,1.679,1031,4.596,1033,1.526,1034,2.69,1035,1.031,1036,2.865,1037,1.679,1038,1.573,1039,4.067,1040,1.526,1041,2.786,1042,1.573,1043,1.624,1044,1.526,1045,2.631,1046,1.679,1047,1.573,1048,3.551,1049,1.483,1050,2.465,1051,1.679,1052,1.679,1053,1.679,1054,1.679,1055,1.624,1056,1.624,1057,1.679,1058,1.679,1059,1.679,1060,1.679,1061,1.679,1062,1.679,1063,1.679,1064,1.679,1065,1.679,1066,1.679,1067,1.679,1068,3.137,1069,1.679,1070,2.465,1071,2.544,1072,2.392,1073,1.74,1074,2.544,1075,1.526,1076,3.137,1077,1.272,1078,1.74,1079,1.526,1080,3.244,1081,5.222,1082,1.679,1083,1.679,1084,1.679,1085,1.679,1086,1.679,1087,1.679,1088,1.624,1089,1.624,1090,1.483,1091,1.679,1092,1.74,1093,1.679,1094,1.679,1095,1.74,1096,1.74,1097,1.573,1098,1.679,1099,1.442,1100,2.465,1101,2.544,1102,2.2,1103,2.26,1104,2.465,1105,2.631,1106,2.544,1107,2.727,1108,3.805,1109,3.931,1110,3.44,1111,3.844,1112,2.631,1113,2.631,1114,5.371,1115,5.117,1116,4.988,1117,3.362,1118,2.631,1119,2.631,1120,3.672,1121,3.44,1122,3.362,1123,2.392,1124,3.242,1125,4.382,1126,2.631,1127,2.631,1128,2.392,1129,3.805,1130,2.727,1131,2.727,1132,3.362,1133,3.362,1134,1.863,1135,2.544,1136,2.392,1137,2.631,1138,1.679,1139,1.993,1140,2.727,1141,2.727,2020,4.486,2021,2.863,2022,2.863,2023,2.863,2024,2.863,2025,2.863,2026,2.863,2027,2.863,2028,2.863,2029,2.863,2030,2.863,2031,2.863,2032,2.863]],["title/interfaces/ExplorerTab.html",[327,0.552,1071,2.715]],["body/interfaces/ExplorerTab.html",[3,0.077,4,0.063,5,0.016,8,0.197,9,2.418,10,0.136,15,0.201,16,0.708,38,1.412,41,2.147,43,1.212,44,0.007,45,0.479,46,0.181,47,0.498,50,1.444,51,1.251,52,1.9,58,1.555,63,0.55,66,1.799,71,2.693,74,0.208,86,0.187,88,2.577,115,0.004,116,0.003,121,2.174,144,1.622,172,1.852,174,1.519,180,2.487,203,1.298,240,0.822,264,1.638,285,1.971,295,0.878,296,1.006,314,1.468,319,2.431,327,1.062,329,1.023,383,1.191,384,1.412,389,0.908,392,0.978,398,2.57,400,1.354,402,1.62,423,1.475,432,1.475,434,2.367,445,1.661,484,1.62,574,1.475,626,1.62,667,0.757,668,0.955,671,0.653,673,1.006,703,2.007,714,1.509,761,1.581,832,0.809,842,1.153,890,3.281,891,2.209,967,1.661,986,1.661,995,1.75,1006,1.971,1007,2.038,1009,2.038,1010,2.038,1011,3.052,1012,2.038,1015,2.038,1017,4.576,1019,3.545,1020,3.489,1023,3.142,1026,2.038,1028,2.038,1030,2.038,1031,4.749,1033,1.852,1034,2.913,1035,1.251,1036,3.231,1037,2.038,1038,1.909,1039,4.189,1040,1.852,1041,2.621,1042,1.909,1043,1.971,1044,1.852,1045,3.052,1046,2.038,1047,1.909,1048,3.928,1049,1.799,1050,2.859,1051,2.038,1052,2.038,1053,2.038,1054,2.038,1055,1.971,1056,1.971,1057,2.038,1058,2.038,1059,2.038,1060,2.038,1061,2.038,1062,2.038,1063,2.038,1064,2.038,1065,2.038,1066,2.038,1067,2.038,1068,3.538,1069,2.038,1070,3.427,1071,3.538,1072,3.954,1073,2.112,1074,2.951,1075,1.852,1076,2.951,1077,1.544,1078,2.112,1079,1.852,1080,3.052,1081,4.977,1082,2.038,1083,2.038,1084,2.038,1085,2.038,1086,2.038,1087,2.038,1088,1.971,1089,1.971,1090,1.799,1091,2.038,1092,2.112,1093,2.038,1094,2.038,1095,2.112,1096,2.112,1097,1.909,1098,2.038,1099,1.75,1100,1.909,1101,1.971,1102,1.704,1103,1.75,1104,1.909,1105,2.038,1106,1.971,1107,2.112,1108,2.112,1109,3.489,1110,2.859,1111,3.325,1112,2.038,1113,2.038,1114,5.069,1115,4.734,1116,4.508,1117,2.112,1118,2.038,1119,2.038,1120,3.052,1121,2.859,1122,2.112,1123,1.852,1124,2.695,1125,3.791,1126,2.038,1127,2.038,1128,1.852,1129,3.162,1130,2.112,1131,2.112,1132,2.112,1133,2.112,1134,1.443,1135,1.971,1136,1.852,1137,2.038,1138,1.301,1139,1.544,1140,2.112,1141,2.112]],["title/entities/ExplorerTabEntity.html",[264,0.801,1929,3.925]],["body/entities/ExplorerTabEntity.html",[3,0.125,4,0.101,5,0.033,8,0.15,10,0.098,13,1.131,15,0.494,16,0.993,30,0.716,43,1.065,44,0.007,45,0.427,46,0.172,58,1.263,61,2.692,63,0.409,74,0.223,81,1.095,86,0.117,87,2.222,115,0.005,116,0.005,182,2.566,203,1.181,218,2.289,264,1.484,267,1.355,295,1.424,314,1.181,319,2.391,327,0.841,380,1.472,389,1.472,393,2.306,398,2.804,478,3.889,480,1.424,518,1.472,644,1.907,673,1.63,676,2.397,678,2.904,681,3.556,703,1.812,709,3.194,730,1.688,731,1.659,732,1.659,733,1.688,734,2.425,735,1.659,736,2.677,737,2.112,738,1.549,739,1.688,740,1.688,741,1.688,742,1.688,743,1.688,744,1.688,745,1.575,746,1.688,747,1.688,748,1.688,749,1.63,750,1.688,751,1.659,752,1.688,753,1.688,754,1.688,755,1.688,756,1.688,757,1.549,758,1.688,759,1.659,760,1.688,965,2.481,1017,3.773,1039,2.625,1071,4.138,1072,4.314,1077,2.503,1381,2.762,1385,2.917,1389,4.434,1390,3.423,1391,4.009,1392,3.423,1394,4.077,1395,4.606,1396,5.571,1400,4.138,1401,5.592,1405,3.889,1406,3.889,1407,3.779,1410,3.094,1412,4.077,1416,4.077,1871,6.577,1876,6.503,1887,3.556,1888,3.556,1889,4.317,1891,3.194,1897,3.706,1929,5.982,1931,6.197,1932,6.503,1938,4.617,2033,5.631,2034,7.295,2035,5.631,2036,5.631,2037,5.631,2038,5.631,2039,5.631,2040,5.631]],["title/interfaces/ExplorerTarget.html",[327,0.552,1031,2.63]],["body/interfaces/ExplorerTarget.html",[3,0.074,4,0.06,5,0.015,8,0.217,9,2.391,10,0.133,15,0.192,16,0.685,38,1.352,41,2.107,43,1.196,44,0.007,45,0.475,46,0.186,47,0.872,50,1.423,51,1.197,52,1.938,58,1.504,63,0.55,66,1.723,71,2.67,74,0.206,86,0.186,88,2.558,115,0.004,116,0.003,121,2.153,144,1.616,172,1.773,174,1.501,180,2.407,203,1.224,240,0.787,264,1.632,285,1.887,295,0.841,296,0.963,314,1.456,319,2.385,327,1.054,329,0.98,383,1.551,384,1.352,389,0.87,392,0.947,398,2.522,400,2.641,402,1.551,423,1.412,432,1.412,434,2.291,445,1.59,484,1.551,574,1.412,626,1.551,667,0.725,668,0.915,671,0.626,673,0.963,703,1.955,714,1.444,761,1.513,832,0.774,842,1.116,890,3.233,891,2.138,967,1.59,986,1.59,995,1.676,1006,1.887,1007,1.951,1009,1.951,1010,1.951,1011,2.953,1012,1.951,1015,1.951,1017,4.56,1019,3.479,1020,3.413,1023,3.061,1026,1.951,1028,1.951,1030,1.951,1031,4.608,1033,1.773,1034,2.948,1035,1.197,1036,4.12,1037,1.951,1038,1.828,1039,4.152,1040,1.773,1041,2.537,1042,1.828,1043,1.887,1044,1.773,1045,2.953,1046,3.974,1047,3.723,1048,4.344,1049,3.509,1050,3.723,1051,3.974,1052,3.974,1053,3.974,1054,3.974,1055,3.843,1056,3.843,1057,1.951,1058,1.951,1059,1.951,1060,1.951,1061,1.951,1062,1.951,1063,1.951,1064,1.951,1065,1.951,1066,1.951,1067,1.951,1068,3.446,1069,1.951,1070,2.767,1071,2.856,1072,2.684,1073,2.022,1074,2.856,1075,1.773,1076,2.856,1077,1.478,1078,2.022,1079,1.773,1080,2.953,1081,4.927,1082,1.951,1083,1.951,1084,1.951,1085,1.951,1086,1.951,1087,1.951,1088,1.887,1089,1.887,1090,1.723,1091,1.951,1092,2.022,1093,1.951,1094,1.951,1095,2.022,1096,2.022,1097,1.828,1098,1.951,1099,1.676,1100,1.828,1101,1.887,1102,1.632,1103,1.676,1104,1.828,1105,1.951,1106,1.887,1107,2.022,1108,2.022,1109,3.413,1110,2.767,1111,3.239,1112,1.951,1113,1.951,1114,5.014,1115,4.665,1116,4.424,1117,2.022,1118,1.951,1119,1.951,1120,2.953,1121,2.767,1122,2.022,1123,1.773,1124,2.608,1125,3.693,1126,1.951,1127,1.951,1128,1.773,1129,3.06,1130,2.022,1131,2.022,1132,2.022,1133,2.022,1134,1.382,1135,1.887,1136,1.773,1137,1.951,1138,1.245,1139,1.478,1140,2.022,1141,2.022]],["title/entities/ExplorerTargetEntity.html",[264,0.801,1931,3.465]],["body/entities/ExplorerTargetEntity.html",[3,0.098,4,0.08,5,0.028,8,0.225,10,0.077,13,0.889,15,0.512,16,0.844,30,0.763,44,0.007,45,0.495,46,0.184,52,1.781,58,1.073,63,0.475,74,0.218,81,0.86,86,0.092,87,2.399,115,0.004,116,0.004,182,2.658,264,1.367,267,1.064,295,1.119,319,2.032,332,1.925,373,2.108,380,1.157,389,1.621,393,2.451,400,2.79,478,3.305,480,1.119,518,1.157,644,1.621,673,1.281,676,2.555,678,3.707,703,1.424,708,2.755,730,1.326,731,1.303,732,1.303,733,1.326,734,2.145,735,1.303,736,2.516,737,1.795,738,1.217,739,1.326,740,1.326,741,1.326,742,1.326,743,1.326,744,1.326,745,1.238,746,1.326,747,1.326,748,1.326,749,1.281,750,1.326,751,1.303,752,1.326,753,1.326,754,1.326,755,1.326,756,1.326,757,1.217,758,1.326,759,1.303,760,1.326,1017,3.337,1031,3.407,1036,4.501,1037,2.595,1038,2.431,1039,2.89,1046,4.198,1047,3.933,1049,3.707,1050,3.933,1051,4.198,1052,4.198,1053,4.198,1054,4.198,1055,4.06,1056,4.06,1077,1.966,1102,3.041,1106,3.517,1351,2.575,1381,3.041,1382,3.637,1384,4.549,1385,2.292,1386,3.915,1389,4.501,1390,3.768,1391,4.651,1392,3.768,1405,4.513,1406,4.513,1407,3.211,1410,2.431,1437,5.486,1870,5.084,1871,6.881,1874,4.753,1875,5.945,1877,5.084,1878,3.392,1887,2.794,1888,2.794,1891,2.51,1892,5.945,1899,5.945,1931,4.488,1943,5.339,2008,3.944,2041,4.425,2042,5.527,2043,7.157,2044,4.425,2045,4.425,2046,4.425,2047,4.425,2048,3.628,2049,5.084,2050,6.2,2051,4.425,2052,6.2,2053,4.425,2054,6.2,2055,4.425,2056,6.2,2057,4.425,2058,6.2,2059,4.425,2060,4.425,2061,4.425,2062,4.425,2063,6.2,2064,4.425,2065,4.425,2066,5.084,2067,3.628,2068,4.425,2069,4.425]],["title/interfaces/File.html",[5,0.022,327,0.552]],["body/interfaces/File.html",[3,0.049,4,0.04,5,0.044,8,0.097,10,0.112,15,0.211,16,0.734,25,0.97,33,2.117,38,0.9,40,1.346,41,1.056,44,0.007,45,0.409,46,0.171,52,0.934,53,4.352,58,0.383,63,0.559,69,2.41,74,0.135,81,0.43,86,0.158,115,0.002,116,0.002,121,2.006,122,1.584,123,1.216,134,1.115,144,0.903,147,1.058,152,3.528,167,1.058,174,1.623,175,2.193,183,1.014,203,1.157,240,1.792,267,0.533,279,2.004,292,2.555,296,0.641,314,1.559,327,0.991,328,2.139,329,0.652,330,1.346,331,4.806,332,2.582,333,2.217,334,2.217,335,3.164,336,3.5,337,1.346,338,2.726,339,3.06,340,2.217,341,2.217,342,1.346,343,1.346,344,2.139,345,2.217,346,2.217,347,3.767,348,1.398,349,1.398,350,1.398,351,2.303,352,2.828,353,3.06,354,3.164,355,4.491,356,2.139,357,1.398,358,3.877,359,0.846,360,1.346,361,1.398,362,2.303,363,2.004,364,3.87,365,3.43,366,3.121,367,1.298,368,1.398,369,1.398,370,1.398,371,1.398,372,1.398,373,0.753,374,1.398,375,1.398,376,1.398,377,2.303,378,1.621,379,1.398,380,1.216,381,1.398,382,1.398,383,1.683,384,0.9,385,1.889,386,1.889,387,1.216,388,1.218,389,1.216,390,1.584,391,2.02,392,1.015,393,2.242,394,2.788,395,2.217,396,4.054,397,2.403,398,2.458,399,1.621,400,2.503,401,3.765,402,1.701,403,2.726,404,3.078,405,1.768,406,2.217,407,1.398,408,1.66,409,0.9,410,0.92,411,1.398,412,1.398,413,1.346,414,4.717,415,1.398,416,5.316,417,1.398,418,1.422,419,0.881,420,2.139,421,3.641,422,2.303,423,0.94,424,2.828,425,2.828,426,1.398,427,2.139,428,3.42,429,2.729,430,2.937,431,4.695,432,0.94,433,4.054,434,1.66,435,2.139,436,3.765,437,1.398,438,1.346,439,1.346,440,1.398,441,4.78,442,2.937,443,2.303,444,4.725,445,1.058,446,2.139,447,2.303,448,2.217,449,1.398,450,1.398,451,1.346,452,2.61,453,3.152,454,2.61,455,2.303,456,1.346,457,2.217,458,1.398,459,3.528,460,2.217,461,2.217,462,1.346,463,1.398,464,1.398,465,1.346,466,3.626,467,1.346,468,1.584,469,1.398,470,1.346,471,1.256,472,1.398,473,1.18,474,2.853,475,1.398,476,1.398,477,1.398,478,2.48,479,1.346,480,1.509,481,2.303,482,1.452,483,1.346,484,2.169,485,2.828,486,1.346,487,1.346,488,1.346,489,1.298,490,3.406,491,1.398,492,1.346,493,1.346,494,1.346,495,1.398,496,1.398,497,1.398,498,1.346,499,1.346,500,1.398,501,1.032,502,1.346,503,1.346,504,2.937,505,1.346,506,1.346,507,2.828,508,2.303,509,3.406,510,2.069,511,2.303,512,1.346,513,1.346,514,1.398,515,1.346,516,1.398,517,1.346,518,0.579,519,1.346,520,1.398,521,1.346,522,1.346,523,1.298,524,2.937,525,1.398,526,2.004,527,2.303,528,1.398,529,2.303,530,1.398,531,1.398,532,1.398,533,1.18,534,1.398,535,1.398,536,1.398,537,1.398,538,2.303,539,1.398,540,2.303,541,1.398,542,2.217,543,2.303,544,1.346,545,1.398,546,1.398,547,2.937,548,1.398,549,3.406,550,2.937,551,2.937,552,2.937,553,1.398,554,4.479,555,1.398,556,3.164,557,4.286,558,1.398,559,1.398,560,1.398,561,2.303,562,2.303,563,1.398,564,1.398,565,1.398,566,1.398,567,1.398,568,1.398,569,1.398,570,1.398,571,2.303,572,1.398,573,1.398,574,0.94,575,1.398,576,2.303,577,2.217,578,1.398,579,1.398,580,1.398,581,1.398,582,1.298,583,2.303,584,4.054,585,1.398,586,1.398,587,2.937,588,1.398,589,1.398,590,1.398,591,2.217,592,1.398,593,1.398,594,1.398,595,1.398,596,2.937,597,2.303,598,1.398,599,1.398,600,2.303,601,1.398,602,2.303,603,1.398,604,1.058,605,1.398,606,3.767,607,1.398,608,1.398,609,1.398,610,1.256,611,1.398,612,1.058,613,3.406,614,3.279,615,1.398,616,1.398,617,2.303,618,2.303,619,2.303,620,2.303,621,1.398,622,1.398,623,1.398,624,1.398,625,1.346,626,1.032,627,1.346,628,1.398,629,1.398,630,1.398,631,2.217,632,1.346,633,1.398,634,1.398,635,0.984,636,2.937,637,2.217,638,1.398,639,1.398,640,1.398,641,1.398,642,1.398,643,2.303,644,0.579,645,1.346,646,1.346,647,1.398,648,1.346,649,1.346,650,0.984,651,1.398,652,1.398,653,1.398,654,1.398,655,1.346,656,1.398,657,1.398,658,1.398,659,1.346,660,1.298,661,1.346,662,0.92,663,1.216,664,1.346,665,1.346,666,1.346,667,0.483,668,0.609,669,1.147,670,1.298,671,0.416]],["title/controllers/FileController.html",[671,0.9,2070,3.925]],["body/controllers/FileController.html",[3,0.119,4,0.096,5,0.041,10,0.093,13,1.072,15,0.308,18,1.628,23,1.438,24,3.035,30,0.677,43,1.224,44,0.007,45,0.442,46,0.163,47,1.203,50,1.5,63,0.395,74,0.229,76,1.072,81,1.532,86,0.111,87,1.928,88,1.493,89,2.187,93,2.798,98,1.657,103,1.897,115,0.005,116,0.005,144,1.551,182,1.6,183,1.163,203,1.333,218,2.863,267,1.284,314,1.517,317,3.027,380,1.395,385,3.648,387,2.932,388,2.798,480,1.349,518,1.395,644,1.841,660,4.131,661,3.244,662,3.275,663,4.607,664,3.244,665,3.244,666,3.244,671,1.004,676,2.267,705,2.932,712,2.372,714,2.318,730,1.6,731,1.572,732,1.572,733,1.6,734,2.363,735,1.572,736,2.643,737,2.039,738,1.468,739,1.6,740,1.6,741,1.6,742,1.6,743,1.6,744,1.6,745,1.493,746,1.6,747,1.6,748,1.6,749,1.545,750,1.6,751,1.572,752,1.6,753,1.6,754,1.6,755,1.6,756,1.6,757,1.468,758,1.6,759,1.572,760,1.6,762,3.37,763,3.726,764,3.37,820,3.244,1142,7.028,1143,6.279,1144,7.028,1145,6.279,1347,3.027,1490,3.674,1491,3.512,1500,3.512,1581,3.37,2070,5.775,2071,5.337,2072,5.337,2073,5.337,2074,4.757,2075,5.337,2076,4.757,2077,5.337,2078,4.757,2079,5.337,2080,4.376,2081,4.376,2082,4.376,2083,4.376,2084,3.863,2085,4.376,2086,4.376,2087,5.337,2088,4.091,2089,5.337,2090,4.376,2091,4.376,2092,4.376,2093,5.337,2094,5.337,2095,4.757,2096,5.337,2097,5.337,2098,4.757,2099,4.376,2100,5.337,2101,5.337,2102,5.337,2103,4.376,2104,5.337,2105,5.337,2106,4.376,2107,5.337,2108,5.337]],["title/entities/FileEntity.html",[264,0.801,2109,3.295]],["body/entities/FileEntity.html",[3,0.121,4,0.098,5,0.038,8,0.145,10,0.124,13,1.094,15,0.488,16,0.971,30,0.767,44,0.007,45,0.463,46,0.188,52,1.434,63,0.505,74,0.212,86,0.113,87,2.379,115,0.005,116,0.005,174,1.278,182,2.14,203,1.163,240,1.689,264,1.333,295,1.377,314,1.368,319,2.95,332,2.472,389,1.424,392,1.498,393,2.256,394,3.458,397,2.981,398,2.759,400,3.104,401,4.671,405,2.61,673,1.577,676,2.568,678,3.746,693,2.821,703,2.297,704,3.596,705,2.993,707,2.821,708,3.539,709,3.09,1177,2.727,1351,2.965,1381,2.672,1382,3.195,1384,5.381,1385,3.698,1386,5.336,1391,4.376,1403,5.472,1407,4.125,1439,4.698,1943,3.75,2067,4.466,2109,4.915,2110,5.447,2111,7.139,2112,5.447,2113,5.447,2114,5.447,2115,5.561,2116,4.466,2117,5.854,2118,4.466,2119,5.447,2120,5.447,2121,5.447,2122,5.447,2123,4.856,2124,5.447,2125,4.466,2126,5.447,2127,3.75,2128,4.915,2129,4.915,2130,5.447,2131,4.915,2132,5.854,2133,5.854,2134,5.854,2135,3.75,2136,5.447,2137,4.466]],["title/classes/FileManager.html",[10,0.083,385,2.479]],["body/classes/FileManager.html",[3,0.125,4,0.101,5,0.044,8,0.149,9,2.808,10,0.154,15,0.323,23,1.484,30,0.746,43,1.348,44,0.006,45,0.504,46,0.179,47,1.325,50,1.653,52,1.621,63,0.545,74,0.203,86,0.151,115,0.005,116,0.005,118,1.678,121,1.974,144,1.64,184,3.352,203,1.247,314,1.586,332,1.739,385,3.765,386,2.9,392,1.606,409,3.281,419,2.893,663,4.435,705,3.077,842,1.788,1192,3.886,1200,3.662,1203,3.662,1204,3.662,1205,3.662,1208,4.066,1262,4.783,1581,3.536,2109,3.855,2115,3.685,2135,3.855,2138,4.992,2139,6.617,2140,5.96,2141,6.48,2142,5.96,2143,5.96,2144,6.48,2145,4.992,2146,5.6,2147,5.6,2148,5.96,2149,5.6,2150,5.6,2151,5.6,2152,5.96,2153,5.6,2154,5.6,2155,4.293,2156,4.592,2157,4.592,2158,4.592]],["title/classes/FileMd.html",[10,0.083,386,2.479]],["body/classes/FileMd.html",[3,0.145,4,0.118,5,0.043,8,0.173,9,2.787,10,0.161,15,0.376,23,1.634,30,0.527,43,0.952,44,0.006,45,0.422,46,0.127,47,0.935,50,1.167,52,1.31,63,0.536,74,0.217,86,0.167,115,0.005,116,0.005,118,1.954,121,2.118,144,1.627,184,2.708,314,1.499,332,2.484,385,3.377,386,4.145,392,1.226,409,2.651,419,2.595,663,3.583,705,3.583,842,1.918,1192,4.108,1200,3.285,1203,3.285,1204,3.285,1205,3.285,1208,3.285,1581,5.467,2109,4.489,2115,4.291,2135,4.489,2138,5.813,2139,5.346,2148,5.346,2152,5.346,2155,4.998,2156,5.346,2157,7.099,2158,6.561,2159,5.813,2160,6.52]],["title/interfaces/FileMetadata.html",[327,0.552,403,2.032]],["body/interfaces/FileMetadata.html",[3,0.048,4,0.039,5,0.044,8,0.095,10,0.111,15,0.207,16,0.866,25,0.578,33,2.09,38,0.883,40,1.321,41,0.629,44,0.007,45,0.355,46,0.171,52,0.437,53,4.39,58,0.376,63,0.558,69,3.296,74,0.134,81,0.422,86,0.157,115,0.002,116,0.002,121,1.996,122,1.56,123,1.194,134,1.095,144,0.893,147,1.039,152,3.496,167,1.039,174,1.64,175,2.168,183,1.001,203,1.151,240,1.593,267,0.523,279,3.496,292,2.906,296,0.629,314,1.551,327,0.987,328,3.129,329,0.64,330,1.321,331,4.918,332,2.534,333,2.184,334,2.184,335,3.129,336,3.465,337,1.321,338,2.508,339,3.026,340,2.184,341,2.184,342,1.321,343,1.321,344,2.107,345,2.184,346,2.184,347,3.73,348,1.372,349,1.372,350,1.372,351,2.268,352,2.791,353,3.026,354,3.129,355,4.533,356,2.107,357,1.372,358,3.908,359,0.83,360,1.321,361,1.372,362,2.268,363,1.974,364,3.775,365,3.377,366,3.194,367,1.275,368,1.372,369,1.372,370,1.372,371,1.372,372,1.372,373,0.739,374,1.372,375,1.372,376,1.372,377,2.268,378,1.596,379,1.372,380,1.201,381,1.372,382,1.372,383,1.221,384,0.883,385,1.861,386,1.861,387,1.194,388,1.199,389,0.939,390,0.944,391,1.719,392,0.409,393,1.686,394,1.56,395,1.321,396,3.73,397,1.345,398,2.047,399,0.966,400,1.401,401,2.107,402,1.013,403,2.265,404,3.136,405,0.712,406,3.867,407,2.268,408,2.427,409,1.46,410,2.216,411,2.268,412,2.268,413,2.184,414,4.902,415,2.268,416,5.408,417,2.268,418,2.08,419,1.43,420,3.129,421,4.267,422,2.9,423,1.525,424,3.242,425,3.242,426,2.268,427,3.129,428,3.79,429,3.732,430,3.73,431,4.736,432,1.525,433,4.252,434,2.09,435,3.129,436,4.412,437,2.268,438,2.184,439,2.184,440,2.268,441,4.871,442,3.368,443,3.368,444,4.858,445,1.717,446,3.129,447,2.268,448,2.184,449,1.372,450,1.372,451,1.321,452,2.586,453,3.129,454,2.586,455,2.268,456,1.321,457,2.184,458,1.372,459,3.496,460,2.184,461,2.184,462,1.321,463,1.372,464,1.372,465,1.321,466,3.59,467,1.321,468,1.56,469,1.372,470,1.321,471,1.233,472,1.372,473,1.159,474,2.827,475,1.372,476,1.372,477,1.372,478,2.448,479,1.321,480,1.494,481,2.268,482,1.43,483,1.321,484,2.141,485,2.791,486,1.321,487,1.321,488,1.321,489,1.275,490,3.368,491,1.372,492,1.321,493,1.321,494,1.321,495,1.372,496,1.372,497,1.372,498,1.321,499,1.321,500,1.372,501,1.013,502,1.321,503,1.321,504,2.9,505,1.321,506,1.321,507,2.791,508,2.268,509,3.368,510,2.038,511,2.268,512,1.321,513,1.321,514,1.372,515,1.321,516,1.372,517,1.321,518,0.568,519,1.321,520,1.372,521,1.321,522,1.321,523,1.275,524,2.9,525,1.372,526,1.974,527,2.268,528,1.372,529,2.268,530,1.372,531,1.372,532,1.372,533,1.159,534,1.372,535,1.372,536,1.372,537,1.372,538,2.268,539,1.372,540,2.268,541,1.372,542,2.184,543,2.268,544,1.321,545,1.372,546,1.372,547,2.9,548,1.372,549,3.368,550,2.9,551,2.9,552,2.9,553,1.372,554,4.446,555,1.372,556,3.129,557,4.252,558,1.372,559,1.372,560,1.372,561,2.268,562,2.268,563,1.372,564,1.372,565,1.372,566,1.372,567,1.372,568,1.372,569,1.372,570,1.372,571,2.268,572,1.372,573,1.372,574,0.923,575,1.372,576,2.268,577,2.184,578,1.372,579,1.372,580,1.372,581,1.372,582,1.275,583,2.268,584,4.018,585,1.372,586,1.372,587,2.9,588,1.372,589,1.372,590,1.372,591,2.184,592,1.372,593,1.372,594,1.372,595,1.372,596,2.9,597,2.268,598,1.372,599,1.372,600,2.268,601,1.372,602,2.268,603,1.372,604,1.039,605,1.372,606,3.73,607,1.372,608,1.372,609,1.372,610,1.233,611,1.372,612,1.039,613,3.368,614,3.242,615,1.372,616,1.372,617,2.268,618,2.268,619,2.268,620,2.268,621,1.372,622,1.372,623,1.372,624,1.372,625,1.321,626,1.013,627,1.321,628,1.372,629,1.372,630,1.372,631,2.184,632,1.321,633,1.372,634,1.372,635,0.966,636,2.9,637,2.184,638,1.372,639,1.372,640,1.372,641,1.372,642,1.372,643,2.268,644,0.568,645,1.321,646,1.321,647,1.372,648,1.321,649,1.321,650,0.966,651,1.372,652,1.372,653,1.372,654,1.372,655,1.321,656,1.372,657,1.372,658,1.372,659,1.321,660,1.275,661,1.321,662,0.903,663,1.194,664,1.321,665,1.321,666,1.321,667,0.474,668,0.598,669,1.126,670,1.275,671,0.409]],["title/entities/FileMetadataEntity.html",[264,0.801,2115,3.15]],["body/entities/FileMetadataEntity.html",[3,0.111,4,0.09,5,0.042,8,0.133,10,0.087,13,1.006,15,0.289,16,0.919,30,0.756,44,0.007,46,0.182,63,0.493,74,0.229,86,0.104,87,2.404,115,0.004,116,0.004,203,1.115,264,1.279,279,4.197,295,1.267,314,1.093,319,3.116,331,4.492,332,2.097,393,2.134,403,2.867,406,4.643,410,3.173,414,4.637,421,4.637,431,4.01,436,4.795,444,4.492,672,6.266,673,1.45,675,3.449,676,2.53,678,3.499,679,4.108,693,2.595,699,3.627,701,3.841,703,1.612,704,3.402,705,2.753,707,2.595,708,3.395,1391,5.371,1403,5.855,1439,6.257,2005,5.537,2115,4.444,2116,7.209,2117,7.797,2118,7.209,2132,7.368,2133,7.368,2135,6.052,2161,9.439,2162,4.466,2163,7.287,2164,4.466,2165,6.266,2166,5.01,2167,5.01,2168,6.266,2169,5.01,2170,6.266,2171,5.01,2172,6.266,2173,5.01,2174,5.01]],["title/injectables/FileMetadataService.html",[819,1.569,2175,3.925]],["body/injectables/FileMetadataService.html",[3,0.102,4,0.053,5,0.042,8,0.194,10,0.051,15,0.17,16,0.865,23,0.937,24,2.559,25,2.276,30,0.557,43,1.066,44,0.007,45,0.364,46,0.142,47,1.093,50,1.364,51,1.062,58,1.319,63,0.427,66,4.082,74,0.225,76,0.592,86,0.061,87,1.123,88,2.265,89,2.57,93,2.301,98,2.514,103,1.948,115,0.003,116,0.003,124,2.523,144,0.768,166,5.025,167,3.489,174,1.306,183,1.229,184,1.225,212,1.793,218,1.866,219,1.862,220,2.135,240,0.698,247,1.73,300,3.764,312,3.021,319,2.712,331,3.788,332,2.801,353,1.673,358,2.14,367,1.73,386,3.295,387,1.621,394,3.516,404,1.866,423,1.949,431,3.12,444,3.788,466,1.793,542,3.426,610,2.604,672,4.321,811,2.523,819,1.505,821,1.375,823,2.194,837,1.528,842,1.017,890,1.866,891,3.1,925,1.41,1192,4.208,1257,2.03,1400,2.604,1465,1.73,1523,3.519,1581,5.226,1801,2.261,1802,2.629,1813,3.021,2115,6.234,2135,5.247,2156,2.418,2157,3.764,2158,7.021,2159,4.093,2163,4.093,2165,3.519,2168,3.519,2170,3.519,2172,3.519,2175,3.764,2176,6.893,2177,2.949,2178,4.093,2179,4.591,2180,4.591,2181,4.591,2182,4.591,2183,2.949,2184,4.591,2185,2.949,2186,7.881,2187,4.591,2188,2.949,2189,4.591,2190,2.949,2191,4.591,2192,2.949,2193,4.591,2194,3.764,2195,4.093,2196,6.462,2197,4.591,2198,4.591,2199,2.949,2200,4.093,2201,5.025,2202,2.949,2203,2.418,2204,2.949,2205,2.949,2206,2.949,2207,2.949,2208,2.949,2209,2.949,2210,2.949,2211,2.949,2212,2.949,2213,4.591,2214,2.949,2215,2.949,2216,2.949,2217,2.949,2218,2.949,2219,2.949,2220,2.949,2221,2.949,2222,2.949,2223,2.949,2224,2.949,2225,2.949,2226,2.949,2227,2.949,2228,4.591,2229,2.949,2230,2.949,2231,2.949,2232,2.418,2233,2.949,2234,2.949,2235,2.949,2236,4.591,2237,2.949,2238,2.949,2239,4.591,2240,4.591,2241,4.591,2242,4.591,2243,4.591,2244,2.949,2245,4.591,2246,2.949,2247,4.591,2248,2.949,2249,4.591,2250,2.949,2251,4.591,2252,2.949,2253,4.591,2254,2.949,2255,2.949,2256,2.949,2257,2.949,2258,2.949,2259,2.949,2260,2.949,2261,2.949,2262,2.949,2263,2.949,2264,2.949,2265,2.949,2266,2.949,2267,2.949,2268,2.949,2269,2.949,2270,2.949,2271,2.949,2272,2.949,2273,2.949,2274,2.949,2275,2.949,2276,2.949,2277,2.949,2278,2.949,2279,4.591,2280,2.949,2281,2.949,2282,2.949,2283,2.949,2284,2.949,2285,2.949,2286,2.949,2287,2.949,2288,2.949,2289,2.949,2290,2.949,2291,2.949,2292,2.949,2293,2.949,2294,2.949,2295,2.949,2296,2.949,2297,2.949,2298,2.949,2299,2.949,2300,2.949,2301,2.949,2302,2.949,2303,2.949,2304,4.591,2305,2.949,2306,2.949,2307,2.949,2308,2.949,2309,2.949,2310,2.949,2311,2.949,2312,4.591,2313,4.591,2314,4.591,2315,4.591,2316,4.591,2317,2.949,2318,2.949,2319,2.949,2320,2.949,2321,2.949,2322,2.949,2323,4.591,2324,2.949,2325,2.949,2326,2.949,2327,2.949,2328,2.949,2329,2.949,2330,2.949,2331,2.949,2332,2.949,2333,2.949,2334,2.949,2335,2.949,2336,2.949,2337,2.949,2338,2.949,2339,2.949,2340,2.949,2341,2.949,2342,2.949,2343,2.949,2344,2.949,2345,2.949,2346,2.949,2347,4.591,2348,2.949,2349,2.949,2350,4.591,2351,2.949,2352,2.949,2353,2.949,2354,2.949,2355,2.949,2356,2.949,2357,4.591,2358,2.949,2359,4.591,2360,6.361,2361,2.949,2362,2.949,2363,2.949,2364,2.949,2365,2.949,2366,2.949,2367,2.949,2368,4.591,2369,2.949,2370,2.949,2371,2.949,2372,2.949,2373,4.591,2374,2.949,2375,2.949,2376,2.949,2377,2.949,2378,2.949,2379,2.949,2380,2.949,2381,2.949,2382,2.949,2383,2.949,2384,2.949,2385,2.949,2386,2.949,2387,2.949,2388,2.949,2389,2.949,2390,2.949,2391,2.949,2392,2.949,2393,2.949,2394,2.949,2395,2.949,2396,2.949,2397,2.949,2398,2.949,2399,2.949,2400,2.949,2401,2.949,2402,2.949,2403,5.637,2404,2.949,2405,2.949,2406,2.949,2407,2.949,2408,2.949,2409,2.949,2410,2.949,2411,2.949,2412,2.949,2413,2.949,2414,2.949,2415,2.949,2416,2.949,2417,2.949,2418,2.949,2419,2.949,2420,2.949,2421,2.949,2422,2.949,2423,2.949,2424,2.949,2425,2.949,2426,2.949,2427,2.949,2428,2.949,2429,2.949,2430,2.949,2431,2.949,2432,2.949,2433,2.949,2434,2.949,2435,2.949,2436,2.949,2437,2.949,2438,2.949,2439,2.949,2440,2.949,2441,2.949,2442,2.949,2443,2.949,2444,2.949,2445,2.949,2446,2.949,2447,2.949,2448,2.949,2449,2.949,2450,2.949,2451,2.949,2452,2.949,2453,2.949,2454,2.949,2455,2.949,2456,2.949,2457,2.949,2458,2.949,2459,2.949,2460,2.949,2461,2.949,2462,2.949,2463,2.949,2464,2.949,2465,2.949,2466,2.949,2467,2.949,2468,2.949,2469,2.949,2470,2.949,2471,2.949,2472,2.949,2473,2.949,2474,2.949,2475,2.949,2476,2.949,2477,2.949]],["title/modules/FileModule.html",[669,2.479,832,1.114]],["body/modules/FileModule.html",[3,0.13,4,0.106,5,0.037,8,0.155,10,0.102,23,1.196,30,0.473,43,0.855,44,0.007,45,0.309,46,0.114,47,0.84,50,1.048,74,0.243,76,1.176,81,1.138,86,0.122,103,1.409,115,0.005,116,0.005,124,4.111,182,1.755,183,1.277,267,1.409,380,1.531,385,4.649,386,4.649,387,3.218,480,1.481,518,1.531,644,1.956,667,1.631,669,4.27,670,5.095,671,1.407,705,3.218,712,2.602,730,1.755,731,1.725,732,1.725,733,1.755,734,2.471,735,1.725,736,2.701,737,2.166,738,1.61,739,1.755,740,1.755,741,1.755,742,1.755,743,1.755,744,1.755,745,1.638,746,1.755,747,1.755,748,1.755,749,1.695,750,1.755,751,1.725,752,1.755,753,1.755,754,1.755,755,1.755,756,1.755,757,1.61,758,1.755,759,1.725,760,1.755,832,2.089,834,2.543,837,3.875,838,4.923,839,3.853,844,5.01,850,3.988,851,3.559,852,3.488,853,3.559,854,2.664,861,4.239,862,2.799,864,3.853,874,2.73,875,3.769,876,4.388,878,2.73,1177,2.857,1267,3.122,1429,3.853,2070,6.759,2088,6.319,2109,4.031,2155,4.489,2175,6.759,2478,5.856,2479,5.856,2480,5.856,2481,5.856,2482,5.856,2483,4.801,2484,5.856,2485,5.856,2486,5.856,2487,5.856]],["title/injectables/FileService.html",[819,1.569,2088,3.669]],["body/injectables/FileService.html",[3,0.054,4,0.044,5,0.045,8,0.207,10,0.042,15,0.14,17,1.475,18,1.739,19,3.557,21,2.932,23,0.803,24,2.978,25,2.554,30,0.668,38,1.598,43,1.139,44,0.007,45,0.473,46,0.152,47,1.12,50,1.631,51,2.052,52,1.744,53,3.606,58,0.987,59,5.499,63,0.491,66,2.036,74,0.213,76,0.487,86,0.051,87,2.08,88,2.405,89,2.527,93,3.106,97,3.132,98,2.192,103,1.958,115,0.003,116,0.003,124,2.16,125,2.306,137,1.362,144,1.573,147,3.205,152,4.04,180,3.205,182,1.178,183,0.857,184,2.059,203,1.392,218,2.317,264,1.533,267,0.946,293,3.224,295,0.614,314,1.376,317,2.23,332,1.944,366,1.669,373,1.938,385,4.042,386,2.952,387,1.333,392,1.599,394,3.734,397,3.219,400,0.946,401,1.423,404,2.87,409,3.088,423,1.669,482,2.668,663,4.855,673,1.138,705,1.333,738,1.081,766,1.597,770,1.597,819,1.289,821,1.131,823,1.879,824,4.673,826,1.376,828,1.03,830,1.294,831,1.475,842,0.871,890,3.563,891,1.669,903,3.014,920,2.587,1079,3.92,1102,1.929,1109,2.871,1118,3.343,1120,2.306,1121,1.333,1123,2.096,1124,2.567,1177,3.109,1192,2.849,1200,1.981,1203,1.981,1204,1.981,1205,1.981,1208,3.704,1249,4.126,1257,4.86,1262,3.75,1264,1.757,1266,1.757,1267,1.294,1351,3.054,1490,3.924,1541,3.224,1543,6.053,1581,2.483,1594,3.014,1603,1.597,1655,3.014,1662,4.419,1716,5.636,1742,3.014,1801,1.86,1813,2.587,1823,6.028,2088,3.014,2109,6.169,2139,4.064,2140,3.224,2141,3.505,2142,3.224,2143,3.224,2144,3.505,2145,2.163,2148,3.224,2152,3.224,2155,1.86,2194,3.224,2203,1.99,2488,2.427,2489,3.505,2490,6.704,2491,5.699,2492,4.956,2493,3.932,2494,5.699,2495,5.699,2496,4.956,2497,4.956,2498,2.427,2499,2.427,2500,7.352,2501,5.699,2502,2.427,2503,6.262,2504,2.427,2505,6.704,2506,3.932,2507,2.427,2508,2.427,2509,3.932,2510,5.699,2511,4.419,2512,2.427,2513,6.704,2514,2.427,2515,2.427,2516,2.427,2517,2.427,2518,3.505,2519,2.427,2520,3.75,2521,5.081,2522,2.427,2523,2.427,2524,3.932,2525,4.419,2526,2.427,2527,2.427,2528,2.427,2529,2.427,2530,2.427,2531,2.427,2532,2.427,2533,2.427,2534,2.427,2535,3.932,2536,3.932,2537,2.427,2538,1.99,2539,4.956,2540,5.699,2541,4.956,2542,4.956,2543,3.932,2544,3.932,2545,3.932,2546,3.932,2547,2.587,2548,2.427,2549,2.427,2550,2.427,2551,3.932,2552,2.427,2553,2.427,2554,2.427,2555,2.427,2556,2.427,2557,2.427,2558,2.427,2559,2.427,2560,2.427,2561,2.427,2562,2.427,2563,2.427,2564,2.427,2565,2.427,2566,2.427,2567,2.427,2568,2.427,2569,2.427,2570,2.427,2571,2.427,2572,4.956,2573,3.932,2574,2.427,2575,2.427,2576,2.427,2577,2.427,2578,2.427,2579,2.427,2580,2.427,2581,2.427,2582,2.427,2583,2.427,2584,2.427,2585,2.427,2586,2.427,2587,2.427,2588,2.427,2589,2.427,2590,2.427,2591,2.427,2592,2.427,2593,2.427,2594,2.427,2595,2.427,2596,2.427,2597,2.427,2598,2.427,2599,2.427,2600,2.427,2601,2.427,2602,2.427,2603,2.427,2604,2.427,2605,2.427,2606,2.427,2607,2.427,2608,2.427,2609,2.427,2610,2.427,2611,2.427,2612,2.427,2613,2.427,2614,2.427,2615,2.427,2616,2.427,2617,2.427,2618,2.427,2619,2.427,2620,2.427,2621,2.427,2622,2.427,2623,2.427,2624,2.427,2625,2.427,2626,2.427,2627,2.427,2628,3.505,2629,2.427]],["title/classes/ForbiddenMsException.html",[10,0.083,2630,4.267]],["body/classes/ForbiddenMsException.html",[3,0.159,4,0.129,5,0.032,8,0.19,10,0.124,30,0.577,43,1.043,44,0.006,45,0.377,46,0.139,47,1.025,63,0.505,74,0.212,76,1.435,86,0.149,115,0.005,116,0.005,118,2.142,137,2.476,181,3.942,184,2.968,604,4.042,823,4.042,942,4.919,943,5.339,944,4.959,946,5.821,947,5.564,948,5.389,949,5.821,950,4.919,951,4.702,952,4.919,2630,7.538,2631,8.455,2632,9.006,2633,7.145]],["title/classes/GoogleCaptchaService.html",[10,0.083,2634,4.267]],["body/classes/GoogleCaptchaService.html",[3,0.119,4,0.096,5,0.024,8,0.187,10,0.152,15,0.308,18,2.404,19,4.598,21,3.791,23,1.437,24,2.829,25,2.095,30,0.704,33,3.203,35,2.829,43,1.028,44,0.007,45,0.371,46,0.169,47,1.01,50,1.5,52,1.414,53,3.452,58,1.218,65,4.278,68,4.631,73,4.444,74,0.229,76,1.071,86,0.111,88,1.491,89,2.705,93,2.908,98,2.185,103,1.896,104,4.752,115,0.005,116,0.005,118,1.598,137,2.439,144,1.584,203,1.223,218,2.167,373,2.393,388,2.349,397,2.635,413,4.278,765,4.371,766,3.508,767,4.371,770,3.508,771,5.547,789,5.771,790,4.371,791,4.371,796,4.544,823,4.006,826,3.024,828,2.264,830,2.842,831,3.24,842,1.56,889,5.095,891,2.989,924,4.278,925,3.364,990,5.095,993,5.733,999,6.067,1000,4.845,1001,5.095,1003,5.185,1109,3.546,1257,4.845,1345,4.087,1603,3.508,1758,7.024,1862,3.859,2634,7.471,2635,7.038,2636,4.752,2637,6.274,2638,7.483,2639,7.338,2640,6.274,2641,5.395,2642,7.038,2643,8.38,2644,5.331,2645,5.331,2646,6.871,2647,5.331,2648,7.038,2649,6.274,2650,4.752,2651,5.331,2652,5.331,2653,5.331,2654,5.331,2655,5.331,2656,5.331,2657,5.331,2658,5.331]],["title/interfaces/GpsFileMetadata.html",[327,0.552,427,2.807]],["body/interfaces/GpsFileMetadata.html",[3,0.051,4,0.041,5,0.043,8,0.099,10,0.114,15,0.216,16,0.749,25,0.608,33,2.165,38,0.93,40,1.39,41,0.662,44,0.007,45,0.363,46,0.161,52,0.459,53,4.377,58,0.648,63,0.558,69,2.465,74,0.138,81,0.444,86,0.159,115,0.002,116,0.002,121,2.118,122,1.627,123,1.257,134,1.152,144,0.921,147,1.093,152,3.583,167,1.093,174,1.639,175,2.237,183,1.037,203,1.168,240,1.629,267,0.55,279,2.058,292,2.595,296,0.662,314,1.569,327,0.998,328,2.197,329,0.674,330,1.39,331,4.837,332,2.529,333,2.277,334,2.277,335,3.227,336,3.561,337,1.39,338,2.578,339,3.121,340,2.277,341,2.277,342,1.39,343,1.39,344,2.197,345,2.277,346,2.277,347,3.833,348,1.444,349,1.444,350,1.444,351,2.365,352,2.892,353,3.121,354,3.227,355,4.508,356,2.197,357,1.444,358,3.908,359,0.873,360,1.39,361,1.444,362,2.365,363,2.058,364,3.729,365,3.388,366,3.051,367,1.341,368,1.444,369,1.444,370,1.444,371,1.444,372,1.444,373,0.778,374,1.444,375,1.444,376,1.444,377,2.365,378,1.665,379,1.444,380,1.244,381,1.444,382,1.444,383,1.26,384,0.93,385,1.94,386,1.94,387,1.257,388,1.25,389,0.979,390,0.993,391,2.06,392,0.43,393,1.739,394,1.627,395,1.39,396,3.833,397,1.402,398,1.906,399,1.016,400,1.46,401,2.197,402,1.066,403,2.02,404,3.024,405,0.749,406,2.277,407,1.444,408,1.705,409,0.93,410,0.95,411,1.444,412,1.444,413,1.39,414,4.755,415,1.444,416,5.35,417,1.444,418,1.46,419,0.91,420,2.197,421,4.341,422,2.365,423,0.971,424,4.184,425,4.184,426,1.444,427,2.791,428,3.468,429,2.791,430,3.005,431,4.71,432,0.971,433,4.117,434,1.705,435,2.197,436,3.824,437,1.444,438,1.39,439,1.39,440,1.444,441,4.833,442,3.005,443,2.365,444,4.757,445,1.093,446,2.197,447,2.365,448,2.277,449,1.444,450,1.444,451,1.39,452,2.651,453,3.193,454,2.651,455,2.365,456,1.39,457,2.277,458,1.444,459,3.583,460,2.277,461,2.277,462,1.39,463,1.444,464,1.444,465,1.39,466,3.69,467,1.39,468,1.627,469,1.444,470,1.39,471,1.297,472,1.444,473,1.219,474,2.898,475,1.444,476,1.444,477,1.444,478,2.537,479,1.39,480,1.535,481,2.365,482,1.491,483,1.39,484,2.218,485,2.892,486,1.39,487,1.39,488,1.39,489,1.341,490,3.474,491,1.444,492,1.39,493,1.39,494,1.39,495,1.444,496,1.444,497,1.444,498,1.39,499,1.39,500,1.444,501,1.066,502,1.39,503,1.39,504,3.005,505,1.39,506,1.39,507,2.892,508,2.365,509,3.474,510,2.125,511,2.365,512,1.39,513,1.39,514,1.444,515,1.39,516,1.444,517,1.39,518,0.598,519,1.39,520,1.444,521,1.39,522,1.39,523,1.341,524,3.005,525,1.444,526,2.058,527,2.365,528,1.444,529,2.365,530,1.444,531,1.444,532,1.444,533,1.219,534,1.444,535,1.444,536,1.444,537,1.444,538,2.365,539,1.444,540,2.365,541,1.444,542,2.277,543,2.365,544,1.39,545,1.444,546,1.444,547,3.005,548,1.444,549,3.474,550,3.005,551,3.005,552,3.005,553,1.444,554,4.537,555,1.444,556,3.227,557,4.347,558,1.444,559,1.444,560,1.444,561,2.365,562,2.365,563,1.444,564,1.444,565,1.444,566,1.444,567,1.444,568,1.444,569,1.444,570,1.444,571,2.365,572,1.444,573,1.444,574,0.971,575,1.444,576,2.365,577,2.277,578,1.444,579,1.444,580,1.444,581,1.444,582,1.341,583,2.365,584,4.117,585,1.444,586,1.444,587,3.005,588,1.444,589,1.444,590,1.444,591,2.277,592,1.444,593,1.444,594,1.444,595,1.444,596,3.005,597,2.365,598,1.444,599,1.444,600,2.365,601,1.444,602,2.365,603,1.444,604,1.093,605,1.444,606,3.833,607,1.444,608,1.444,609,1.444,610,1.297,611,1.444,612,1.093,613,3.474,614,3.344,615,1.444,616,1.444,617,2.365,618,2.365,619,2.365,620,2.365,621,1.444,622,1.444,623,1.444,624,1.444,625,1.39,626,1.066,627,1.39,628,1.444,629,1.444,630,1.444,631,2.277,632,1.39,633,1.444,634,1.444,635,1.665,636,4.117,637,3.963,638,1.444,639,1.444,640,1.444,641,1.444,642,1.444,643,2.365,644,0.598,645,1.39,646,1.39,647,1.444,648,1.39,649,1.39,650,1.016,651,1.444,652,1.444,653,1.444,654,1.444,655,1.39,656,1.444,657,1.444,658,1.444,659,1.39,660,1.341,661,1.39,662,0.95,663,1.257,664,1.39,665,1.39,666,1.39,667,0.498,668,0.629,669,1.184,670,1.341,671,0.43]],["title/entities/GpsFileMetadataEntity.html",[264,0.801,2165,3.669]],["body/entities/GpsFileMetadataEntity.html",[3,0.139,4,0.113,5,0.043,8,0.166,10,0.109,13,1.254,15,0.528,16,1.06,30,0.718,44,0.006,46,0.173,61,4.059,74,0.196,86,0.13,87,2.34,115,0.005,116,0.005,182,2.797,203,1.24,218,3.452,264,1.421,295,1.579,314,1.548,326,6.423,332,2.419,393,2.462,421,4.418,424,5.161,425,5.161,427,4.569,637,5.161,673,1.807,675,4.298,676,2.404,678,3.714,687,6.962,688,7.651,689,7.651,690,7.651,693,3.234,694,4.52,703,2.009,704,3.924,705,3.431,707,3.234,710,6.962,2164,5.566,2165,5.971,2659,9.149,2660,6.243,2661,6.243,2662,6.243]],["title/classes/GraphicCaptchaService.html",[10,0.083,1358,3.925]],["body/classes/GraphicCaptchaService.html",[3,0.087,4,0.071,5,0.018,8,0.195,10,0.136,15,0.227,18,1.738,19,4.542,21,3.745,23,1.163,24,3,25,2.498,30,0.743,33,2.593,35,2.572,43,0.979,44,0.007,45,0.354,46,0.143,47,0.962,50,1.631,51,2.646,52,1.144,53,2.795,58,0.986,63,0.456,65,3.463,68,3.749,73,3.598,74,0.231,76,0.789,86,0.082,87,0.961,88,2.056,89,2.83,93,2.971,96,3.504,98,1.769,103,2.068,115,0.004,116,0.004,118,1.178,125,4.312,137,1.974,144,1.608,182,1.178,183,1.602,203,1.255,218,1.598,373,2.654,393,1.801,394,3.534,416,3.463,431,4.365,459,3.683,765,3.223,766,2.586,767,3.223,770,2.586,771,5.102,789,4.672,790,3.223,791,3.223,796,4.755,823,3.514,826,2.229,828,1.669,830,2.096,831,2.389,889,5.322,891,2.419,914,3.749,924,4.743,925,1.879,981,4.232,990,4.125,993,5.135,999,5.322,1000,3.923,1001,4.125,1003,2.586,1109,3.931,1257,3.923,1345,3.013,1351,2.367,1358,6.027,1363,5.08,1400,3.232,1603,2.586,1644,3.504,1655,3.013,1716,3.013,2521,5.08,2628,3.504,2636,3.504,2637,5.08,2640,5.08,2641,4.368,2646,7.473,2649,5.08,2663,8.394,2664,6.027,2665,7.351,2666,6.703,2667,7.351,2668,7.351,2669,7.351,2670,5.698,2671,3.93,2672,3.93,2673,5.698,2674,3.93,2675,3.93,2676,5.698,2677,3.93,2678,3.93,2679,7.665,2680,6.957,2681,3.93,2682,5.698,2683,5.698,2684,3.93,2685,7.254,2686,5.698,2687,5.698,2688,5.698,2689,3.93,2690,5.698,2691,3.93,2692,5.698,2693,3.504,2694,3.93,2695,3.93,2696,5.08,2697,3.504,2698,3.93,2699,3.93,2700,3.93,2701,3.93,2702,3.93,2703,3.93,2704,3.93,2705,3.93,2706,3.93,2707,7.254,2708,3.93,2709,3.504,2710,3.93,2711,5.698,2712,3.93,2713,3.93,2714,3.93,2715,3.93,2716,3.93,2717,3.93,2718,5.698,2719,3.93,2720,3.93,2721,3.93,2722,3.504,2723,3.223,2724,3.93,2725,6.703,2726,3.93,2727,3.93,2728,3.93,2729,3.93,2730,3.93,2731,3.93,2732,3.93,2733,3.93,2734,3.93,2735,3.93,2736,3.93,2737,3.93,2738,3.93,2739,3.93,2740,3.93,2741,3.93]],["title/interfaces/IccFileMetadata.html",[327,0.552,420,2.807]],["body/interfaces/IccFileMetadata.html",[3,0.047,4,0.038,5,0.043,8,0.12,10,0.121,15,0.203,16,0.715,25,0.564,33,2.054,38,0.862,40,2.14,41,0.614,44,0.007,45,0.393,46,0.177,52,0.426,53,4.396,58,0.367,63,0.561,69,2.338,74,0.132,81,0.412,86,0.155,115,0.002,116,0.002,121,2.012,122,1.529,123,1.165,134,1.068,144,0.88,147,1.014,152,3.454,167,1.014,174,1.612,175,2.136,183,0.984,203,1.142,240,1.765,267,0.51,279,1.934,292,2.502,296,0.614,314,1.55,327,0.982,328,2.065,329,0.625,330,1.289,331,4.765,332,2.476,333,2.14,334,2.14,335,3.082,336,3.419,337,1.289,338,2.475,339,2.98,340,2.14,341,2.14,342,1.289,343,1.289,344,2.065,345,2.14,346,2.14,347,3.68,348,1.339,349,1.339,350,1.339,351,2.223,352,2.743,353,2.98,354,3.082,355,4.521,356,2.065,357,1.339,358,4.239,359,0.81,360,1.289,361,1.339,362,2.223,363,1.934,364,3.702,365,3.365,366,3.072,367,1.244,368,1.339,369,1.339,370,1.339,371,1.339,372,1.339,373,0.721,374,1.339,375,1.339,376,1.339,377,2.223,378,1.564,379,1.339,380,1.18,381,1.339,382,1.339,383,1.203,384,0.862,385,1.823,386,1.823,387,1.165,388,1.175,389,1.18,390,0.921,391,1.967,392,0.399,393,1.661,394,1.529,395,1.289,396,3.97,397,1.318,398,1.821,399,0.942,400,1.372,401,2.065,402,0.989,403,1.916,404,3.241,405,0.695,406,2.14,407,1.339,408,1.602,409,0.862,410,0.881,411,1.339,412,1.339,413,1.289,414,5.158,415,1.339,416,5.448,417,1.339,418,1.372,419,0.844,420,2.647,421,3.566,422,2.223,423,0.9,424,2.743,425,2.743,426,1.339,427,2.065,428,3.512,429,2.647,430,3.318,431,4.676,432,0.9,433,3.97,434,1.602,435,2.065,436,3.687,437,1.339,438,1.289,439,1.289,440,1.339,441,4.71,442,3.68,443,2.223,444,4.68,445,1.014,446,2.065,447,2.223,448,2.14,449,1.339,450,1.339,451,1.289,452,2.556,453,3.098,454,2.556,455,2.223,456,1.289,457,2.14,458,1.339,459,3.66,460,2.743,461,2.743,462,1.289,463,1.339,464,1.339,465,1.289,466,3.821,467,1.289,468,1.529,469,1.339,470,1.289,471,1.203,472,1.339,473,1.131,474,2.96,475,1.339,476,1.339,477,1.339,478,2.406,479,1.289,480,1.684,481,2.85,482,1.796,483,3.194,484,2.931,485,3.821,486,3.194,487,2.14,488,3.194,489,2.065,490,3.97,491,2.223,492,2.14,493,3.194,494,3.194,495,2.223,496,2.223,497,2.223,498,3.194,499,2.14,500,2.223,501,1.641,502,2.14,503,3.194,504,3.318,505,3.194,506,3.194,507,3.543,508,3.318,509,3.97,510,2.98,511,3.318,512,3.194,513,3.194,514,2.223,515,3.194,516,2.223,517,3.194,518,0.92,519,2.14,520,2.223,521,2.14,522,3.194,523,1.244,524,2.85,525,1.339,526,1.934,527,2.223,528,1.339,529,2.223,530,1.339,531,1.339,532,1.339,533,1.131,534,1.339,535,1.339,536,1.339,537,1.339,538,2.223,539,1.339,540,2.223,541,1.339,542,2.14,543,2.223,544,1.289,545,1.339,546,1.339,547,2.85,548,1.339,549,3.318,550,2.85,551,2.85,552,2.85,553,1.339,554,4.402,555,1.339,556,3.082,557,4.206,558,1.339,559,1.339,560,1.339,561,2.223,562,2.223,563,1.339,564,1.339,565,1.339,566,1.339,567,1.339,568,1.339,569,1.339,570,1.339,571,2.223,572,1.339,573,1.339,574,0.9,575,1.339,576,2.223,577,2.14,578,1.339,579,1.339,580,1.339,581,1.339,582,1.244,583,2.223,584,3.97,585,1.339,586,1.339,587,2.85,588,1.339,589,1.339,590,1.339,591,2.14,592,1.339,593,1.339,594,1.339,595,1.339,596,2.85,597,2.223,598,1.339,599,1.339,600,2.223,601,1.339,602,2.223,603,1.339,604,1.014,605,1.339,606,3.68,607,1.339,608,1.339,609,1.339,610,1.203,611,1.339,612,1.014,613,3.318,614,3.194,615,1.339,616,1.339,617,2.223,618,2.223,619,2.223,620,2.223,621,1.339,622,1.339,623,1.339,624,1.339,625,1.289,626,0.989,627,1.289,628,1.339,629,1.339,630,1.339,631,2.14,632,1.289,633,1.339,634,1.339,635,0.942,636,2.85,637,2.14,638,1.339,639,1.339,640,1.339,641,1.339,642,1.339,643,2.223,644,0.554,645,1.289,646,1.289,647,1.339,648,1.289,649,1.289,650,0.942,651,1.339,652,1.339,653,1.339,654,1.339,655,1.289,656,1.339,657,1.339,658,1.339,659,1.289,660,1.244,661,1.289,662,0.881,663,1.165,664,1.289,665,1.289,666,1.289,667,0.462,668,0.583,669,1.098,670,1.244,671,0.399]],["title/entities/IccFileMetadataEntity.html",[264,0.801,2168,3.669]],["body/entities/IccFileMetadataEntity.html",[3,0.105,4,0.085,5,0.044,8,0.125,10,0.082,13,0.945,15,0.556,16,0.88,30,0.774,44,0.007,45,0.524,46,0.186,63,0.555,74,0.162,86,0.098,87,2.435,115,0.004,116,0.004,203,1.079,240,1.531,264,1.238,295,1.189,314,1.047,332,2.008,393,2.045,414,3.669,420,3.794,483,4.494,486,4.494,488,4.494,493,4.494,494,4.494,498,4.494,503,4.494,505,4.494,506,4.494,512,4.494,513,4.494,515,4.494,517,4.494,522,4.494,673,1.362,675,3.238,676,2.592,677,5.172,678,3.952,681,2.97,682,3.606,683,3.606,685,3.857,686,3.606,693,2.436,694,3.405,697,3.606,699,3.405,701,3.606,703,1.514,704,3.259,705,2.585,707,2.436,708,4.183,709,2.668,2162,4.193,2168,4.959,2742,9.631,2743,6.469,2744,6.469,2745,4.193,2746,6.469,2747,4.193,2748,6.469,2749,6.469,2750,4.704,2751,4.193,2752,6.469,2753,6.469,2754,6.469,2755,6.469,2756,6.469,2757,6.469,2758,4.704,2759,6.469,2760,6.469,2761,4.193,2762,6.469,2763,4.193,2764,4.704,2765,4.193]],["title/interfaces/ImageFileMetadata.html",[327,0.552,435,2.807]],["body/interfaces/ImageFileMetadata.html",[3,0.048,4,0.039,5,0.043,8,0.095,10,0.111,15,0.207,16,0.725,25,0.577,33,2.425,38,0.882,40,1.319,41,0.628,44,0.007,45,0.355,46,0.173,52,0.436,53,4.413,58,0.376,63,0.559,69,2.376,74,0.134,81,0.422,86,0.157,115,0.002,116,0.002,121,1.995,122,1.992,123,1.192,134,1.093,144,0.892,147,1.037,152,4.009,167,1.037,174,1.626,175,2.166,183,1,203,1.15,240,1.779,267,0.522,279,1.971,292,2.53,296,0.628,314,1.577,327,0.987,328,2.104,329,0.639,330,1.319,331,4.787,332,2.492,333,2.18,334,2.18,335,3.125,336,3.461,337,1.319,338,2.506,339,3.022,340,2.18,341,2.18,342,1.319,343,1.319,344,2.104,345,2.18,346,2.18,347,3.726,348,1.37,349,1.37,350,1.37,351,2.265,352,2.788,353,3.022,354,3.125,355,4.559,356,2.104,357,1.37,358,3.857,359,0.829,360,1.319,361,1.37,362,2.265,363,1.971,364,3.717,365,3.388,366,3.098,367,1.273,368,1.37,369,1.37,370,1.37,371,1.37,372,1.37,373,0.738,374,1.37,375,1.37,376,1.37,377,2.265,378,1.594,379,1.37,380,1.199,381,1.37,382,1.37,383,1.22,384,0.882,385,1.858,386,1.858,387,1.192,388,1.197,389,0.938,390,0.942,391,1.717,392,0.408,393,1.684,394,1.558,395,1.319,396,4.014,397,1.343,398,2.045,399,0.964,400,1.399,401,2.104,402,1.011,403,1.947,404,3.056,405,0.711,406,2.18,407,1.37,408,1.632,409,0.882,410,0.901,411,1.37,412,1.37,413,1.319,414,4.693,415,1.37,416,5.522,417,1.37,418,1.399,419,0.863,420,2.104,421,3.606,422,2.265,423,0.921,424,2.788,425,2.788,426,1.37,427,2.104,428,3.545,429,2.69,430,2.896,431,4.764,432,0.921,433,4.014,434,2.087,435,2.69,436,3.729,437,1.37,438,1.319,439,1.319,440,1.37,441,4.747,442,2.896,443,2.265,444,4.704,445,1.037,446,2.104,447,3.365,448,3.239,449,2.265,450,2.265,451,3.239,452,3.056,453,3.341,454,3.056,455,2.896,456,3.239,457,3.864,458,2.265,459,3.697,460,2.788,461,2.788,462,3.239,463,2.265,464,2.265,465,3.239,466,3.864,467,3.239,468,2.761,469,2.265,470,2.18,471,2.035,472,2.265,473,2.841,474,2.99,475,2.265,476,2.265,477,2.265,478,2.841,479,3.239,480,1.492,481,2.265,482,1.428,483,1.319,484,2.138,485,2.788,486,1.319,487,1.319,488,1.319,489,1.273,490,3.365,491,1.37,492,1.319,493,1.319,494,1.319,495,1.37,496,1.37,497,1.37,498,1.319,499,1.319,500,1.37,501,1.011,502,1.319,503,1.319,504,2.896,505,1.319,506,1.319,507,2.788,508,2.265,509,3.365,510,2.035,511,2.265,512,1.319,513,1.319,514,1.37,515,1.319,516,1.37,517,1.319,518,0.567,519,1.319,520,1.37,521,1.319,522,1.319,523,1.273,524,2.896,525,1.37,526,1.971,527,2.265,528,1.37,529,2.265,530,1.37,531,1.37,532,1.37,533,1.157,534,1.37,535,1.37,536,1.37,537,1.37,538,2.265,539,1.37,540,2.265,541,1.37,542,2.18,543,2.265,544,1.319,545,1.37,546,1.37,547,2.896,548,1.37,549,3.365,550,2.896,551,2.896,552,2.896,553,1.37,554,4.443,555,1.37,556,3.125,557,4.248,558,1.37,559,1.37,560,1.37,561,2.265,562,2.265,563,1.37,564,1.37,565,1.37,566,1.37,567,1.37,568,1.37,569,1.37,570,1.37,571,2.265,572,1.37,573,1.37,574,0.921,575,1.37,576,2.265,577,2.18,578,1.37,579,1.37,580,1.37,581,1.37,582,1.273,583,2.265,584,4.014,585,1.37,586,1.37,587,2.896,588,1.37,589,1.37,590,1.37,591,2.18,592,1.37,593,1.37,594,1.37,595,1.37,596,2.896,597,2.265,598,1.37,599,1.37,600,2.265,601,1.37,602,2.265,603,1.37,604,1.037,605,1.37,606,3.726,607,1.37,608,1.37,609,1.37,610,1.231,611,1.37,612,1.037,613,3.365,614,3.239,615,1.37,616,1.37,617,2.265,618,2.265,619,2.265,620,2.265,621,1.37,622,1.37,623,1.37,624,1.37,625,1.319,626,1.011,627,1.319,628,1.37,629,1.37,630,1.37,631,2.18,632,1.319,633,1.37,634,1.37,635,0.964,636,2.896,637,2.18,638,1.37,639,1.37,640,1.37,641,1.37,642,1.37,643,2.265,644,0.567,645,1.319,646,1.319,647,1.37,648,1.319,649,1.319,650,0.964,651,1.37,652,1.37,653,1.37,654,1.37,655,1.319,656,1.37,657,1.37,658,1.37,659,1.319,660,1.273,661,1.319,662,0.901,663,1.192,664,1.319,665,1.319,666,1.319,667,0.473,668,0.597,669,1.124,670,1.273,671,0.408]],["title/entities/ImageFileMetadataEntity.html",[264,0.801,2170,3.669]],["body/entities/ImageFileMetadataEntity.html",[3,0.115,4,0.093,5,0.044,8,0.138,10,0.09,13,1.041,15,0.555,16,0.94,30,0.772,44,0.007,45,0.437,46,0.186,61,3.961,63,0.528,74,0.173,86,0.108,87,2.431,115,0.004,116,0.004,182,2.759,203,1.134,218,3.369,240,1.634,264,1.301,295,1.31,314,1.547,332,2.145,393,2.183,431,3.388,435,4.051,451,4.722,452,3.158,454,3.158,456,4.722,457,4.722,462,4.722,465,4.722,467,4.722,468,3.374,473,4.142,479,4.722,673,1.5,675,3.567,676,2.585,677,4.878,678,3.942,681,5.232,682,3.972,683,3.972,685,4.249,686,3.972,693,2.684,694,3.751,697,3.972,699,3.751,701,3.972,703,1.668,704,3.48,705,2.847,707,2.684,708,3.945,709,4.7,2170,5.295,2745,4.619,2747,4.619,2751,4.619,2761,4.619,2763,4.619,2765,4.619,2766,9.616,2767,6.907,2768,6.907,2769,5.182]],["title/classes/InvalidTokenMsException.html",[10,0.083,2770,4.267]],["body/classes/InvalidTokenMsException.html",[3,0.158,4,0.128,5,0.032,8,0.189,10,0.124,30,0.575,42,5.383,43,1.039,44,0.006,45,0.375,46,0.138,47,1.021,63,0.504,74,0.212,76,1.429,86,0.148,115,0.005,116,0.005,118,2.132,137,2.465,181,3.932,184,2.955,300,7.371,604,4.032,823,4.032,942,4.898,943,5.326,944,4.947,947,5.55,948,5.383,949,5.806,950,4.898,951,4.682,952,4.898,2770,7.519,2771,8.434,2772,6.342]],["title/classes/JwtDto.html",[10,0.083,783,3.15]],["body/classes/JwtDto.html",[3,0.11,4,0.089,5,0.022,8,0.132,10,0.161,12,4.311,15,0.286,16,0.913,30,0.687,35,2.688,41,2.538,42,5.42,44,0.007,46,0.179,47,1.09,58,1.517,63,0.528,71,2.824,74,0.225,76,0.996,81,0.964,86,0.177,98,1.54,115,0.004,116,0.004,118,1.487,144,1.272,174,1.569,203,0.724,240,2.157,276,3.052,291,3.87,327,0.572,365,2.988,388,2.992,428,3.829,667,1.081,668,1.364,671,0.933,676,2.299,716,4.618,719,4.618,722,5.169,724,4.414,727,3.591,745,1.388,768,3.132,769,3.415,779,4.799,782,3.415,783,5.001,796,3.29,832,1.155,840,3.415,842,1.684,892,6.17,893,5.605,896,5.232,910,3.415,913,4.414,936,3.415,937,3.415,954,3.591,958,5.142,959,5.001,960,6.52,961,5.768,962,2.91,963,3.641,964,3.264,965,1.687,966,4.341,967,2.371,968,3.803,969,3.803,970,3.048,971,3.936,972,5.232,973,3.415,974,3.803,975,3.803,976,3.803,977,3.803,978,5.142,979,3.803,980,4.856,981,5.535,982,5.142,983,6.241,984,5.826,985,5.826,986,2.371,2773,4.96,2774,4.96,2775,4.96,2776,4.96,2777,3.591,2778,4.96]],["title/interfaces/Language.html",[327,0.552,757,1.316]],["body/interfaces/Language.html",[3,0.152,4,0.123,5,0.031,8,0.181,15,0.393,16,1.118,44,0.006,45,0.483,46,0.171,63,0.552,74,0.171,86,0.184,115,0.005,116,0.005,183,1.792,203,1.391,264,1.534,314,1.33,327,1.111,329,2.007,383,2.182,392,1.546,400,3.573,757,2.62,1034,2.233,1508,5.57,2779,5.587,2780,5.587,2781,5.95,2782,5.95,2783,4.933]],["title/entities/LanguageEntity.html",[264,0.801,2784,3.295]],["body/entities/LanguageEntity.html",[3,0.134,4,0.109,5,0.035,8,0.16,10,0.105,13,1.213,15,0.523,16,1.038,30,0.71,44,0.007,45,0.441,46,0.171,63,0.519,74,0.21,81,1.174,86,0.126,87,2.149,115,0.005,116,0.005,203,1.221,264,1.4,267,1.453,295,1.527,319,2.5,380,1.579,389,1.994,392,1.573,393,2.411,400,3.26,480,1.527,501,3.557,518,1.579,644,1.994,673,1.748,676,2.375,677,3.319,678,3.497,703,1.944,708,3.39,730,1.81,731,1.779,732,1.779,733,1.81,734,2.507,735,1.779,736,2.72,737,2.209,738,1.661,739,1.81,740,1.81,741,1.81,742,1.81,743,1.81,744,1.81,745,1.689,746,1.81,747,1.81,748,1.81,749,1.748,750,1.81,751,1.779,752,1.81,753,1.81,754,1.81,755,1.81,756,1.81,757,2.3,758,1.81,759,1.779,760,1.81,1077,2.684,1170,3.952,1351,3.169,1381,3.742,1382,3.543,1384,5.153,1385,3.128,1386,4.817,1407,3.952,1413,4.952,1891,3.426,1897,3.974,2784,5.252,2785,6.04,2786,6.04,2787,6.04,2788,6.04,2789,6.04,2790,4.952,2791,6.04]],["title/injectables/LiteAuthGuard.html",[776,3.925,819,1.569]],["body/injectables/LiteAuthGuard.html",[0,5.825,1,7.121,3,0.146,4,0.119,5,0.03,7,5.866,8,0.175,9,1.841,10,0.115,12,5.137,15,0.38,16,1.095,17,5.744,18,2.652,19,4.821,20,7.749,21,3.975,22,4.957,30,0.65,43,0.961,44,0.006,45,0.347,46,0.128,47,0.944,71,2.412,74,0.233,76,1.322,82,5.396,83,5.044,86,0.137,115,0.005,116,0.005,137,2.788,182,1.972,183,1.435,355,3.847,751,2.37,776,6.598,778,5.396,819,2.637,821,3.068,823,4.329,825,7.173,826,3.733,828,2.794,829,5.866,830,3.508,831,4,1351,3.342,2792,8.693,2793,8.047,2794,8.047]],["title/modules/LocaleModule.html",[832,1.114,2795,3.669]],["body/modules/LocaleModule.html",[3,0.139,4,0.113,5,0.035,8,0.166,10,0.109,44,0.007,74,0.234,76,1.254,81,1.213,86,0.13,115,0.005,116,0.005,267,1.502,380,1.632,480,1.579,518,1.632,612,3.724,644,2.036,730,1.871,731,1.839,732,1.839,733,1.871,734,2.545,735,1.839,736,2.74,737,2.255,738,1.717,739,1.871,740,1.871,741,1.871,742,1.871,743,1.871,744,1.871,745,1.746,746,1.871,747,1.871,748,1.871,749,1.807,750,1.871,751,1.839,752,1.871,753,1.871,754,1.871,755,1.871,756,1.871,757,1.717,758,1.871,759,1.839,760,1.871,832,2.13,834,2.711,862,2.984,874,3.958,878,3.958,1247,4.153,1267,3.329,1280,3.431,1281,3.795,1282,3.795,1283,3.795,1288,3.795,1289,3.541,1389,4.035,1410,3.431,1424,5.971,1425,6.387,1429,4.108,2784,5.363,2795,7.255,2796,5.566,2797,5.566,2798,5.566,2799,7.525,2800,6.243,2801,5.639,2802,6.944,2803,5.566,2804,6.944,2805,5.639,2806,4.786,2807,6.243,2808,5.566]],["title/injectables/LocaleService.html",[819,1.569,2799,3.669]],["body/injectables/LocaleService.html",[3,0.129,4,0.105,5,0.026,8,0.198,10,0.101,15,0.336,18,2.506,23,1.521,24,2.597,25,2.184,30,0.602,43,1.087,44,0.007,45,0.393,46,0.145,47,1.243,50,1.333,63,0.514,74,0.23,76,1.168,86,0.121,88,2.083,89,2.781,93,2.743,98,1.805,103,1.399,115,0.005,116,0.005,137,2.58,144,1.45,183,1.997,184,2.415,295,1.47,355,3.56,392,1.774,757,2.048,763,3.31,819,2.441,821,2.711,842,1.65,890,3.027,1138,2.788,1139,3.31,1170,4.487,1249,6.953,1266,4.21,1267,3.1,1316,6.107,1389,4.639,1410,3.195,1512,7.104,1813,4.901,1873,5.127,2781,6.633,2784,4.003,2799,5.709,2801,5.391,2802,6.639,2803,5.184,2804,6.639,2805,4.21,2806,4.457,2809,5.815,2810,8.216,2811,5.815,2812,8.216,2813,8.216,2814,5.815,2815,7.447,2816,5.815,2817,5.815,2818,5.815,2819,5.815,2820,5.815,2821,5.815,2822,5.815,2823,5.815,2824,5.815,2825,7.447,2826,5.815,2827,5.815,2828,5.815,2829,5.815,2830,5.815,2831,5.815,2832,5.815]],["title/injectables/LocaleSubscriber.html",[819,1.569,2833,4.267]],["body/injectables/LocaleSubscriber.html",[3,0.102,4,0.083,5,0.021,8,0.194,10,0.127,13,0.925,15,0.266,17,2.798,18,1.944,21,3.823,23,1.301,24,2.311,25,1.224,30,0.515,41,1.845,43,0.931,44,0.007,45,0.336,46,0.124,47,0.914,50,1.141,74,0.215,76,0.925,86,0.096,87,1.559,88,2.045,89,2.823,93,2.128,98,2.45,103,1.759,115,0.004,116,0.004,125,5.253,137,2.208,144,1.321,203,1.251,263,4.104,264,1.541,265,5.226,268,5.226,286,6.049,295,1.164,355,3.772,418,2.485,428,3.211,432,2.706,489,3.739,673,2.284,819,2.089,821,2.146,826,2.611,828,1.955,830,2.455,890,2.591,891,2.706,903,6.866,971,3.301,1093,3.739,1104,4.336,1124,4.858,1230,3.874,1262,5.192,1267,2.455,1296,2.907,1389,5.075,1391,3.502,1400,4.476,1405,3.398,1406,3.398,1410,2.53,1850,7.548,2194,6.47,2232,5.226,2518,5.682,2781,4.614,2805,6.664,2806,3.529,2833,8.206,2834,7.311,2835,6.374,2836,6.374,2837,7.891,2838,8.57,2839,6.374,2840,6.374,2841,7.891,2842,9.205,2843,4.604,2844,4.886,2845,4.388,2846,6.374,2847,8.57,2848,4.604,2849,6.374,2850,5.682,2851,5.682,2852,6.374,2853,4.604,2854,4.604,2855,6.374,2856,6.374,2857,6.374,2858,6.374,2859,6.374,2860,4.604,2861,8.57,2862,6.374,2863,6.374,2864,7.891,2865,6.374,2866,7.891,2867,6.374,2868,6.374,2869,4.604]],["title/interfaces/LocalizedMedia.html",[327,0.552,2783,3.465]],["body/interfaces/LocalizedMedia.html",[3,0.15,4,0.121,5,0.031,8,0.179,15,0.389,16,1.111,44,0.006,45,0.356,46,0.177,63,0.544,74,0.169,86,0.183,115,0.005,116,0.005,183,2.039,203,1.388,264,1.528,314,1.478,327,1.108,329,1.985,383,2.202,392,1.759,400,2.628,757,2.614,1034,2.209,1508,5.55,2779,5.527,2780,5.527,2781,6.359,2782,6.77,2783,5.911]],["title/entities/LocalizedMediaEntity.html",[264,0.801,2805,3.465]],["body/entities/LocalizedMediaEntity.html",[3,0.132,4,0.107,5,0.034,8,0.158,10,0.104,13,1.196,15,0.48,16,1.029,30,0.706,44,0.007,46,0.17,63,0.424,74,0.219,81,1.157,86,0.124,87,2.032,115,0.005,116,0.005,183,1.811,203,1.213,264,1.391,267,1.432,295,1.505,314,1.224,319,2.864,380,1.556,383,1.731,389,1.556,392,1.562,393,2.39,480,1.505,518,1.556,644,1.976,673,1.723,676,2.363,678,3.009,693,3.084,703,1.916,704,3.809,707,3.084,708,2.646,730,1.784,731,1.754,732,1.754,733,1.784,734,2.49,735,1.754,736,2.711,737,2.189,738,1.637,739,1.784,740,1.784,741,1.784,742,1.784,743,1.784,744,1.784,745,1.665,746,1.784,747,1.784,748,1.784,749,1.723,750,1.784,751,1.754,752,1.784,753,1.784,754,1.784,755,1.784,756,1.784,757,1.637,758,1.784,759,1.754,760,1.784,1139,3.36,1351,3.14,1381,2.92,1382,3.492,1384,5.126,1385,3.916,1386,4.774,1407,4.303,1413,4.882,1439,4.975,2782,6.014,2783,5.473,2784,6.016,2790,4.882,2805,5.473,2870,8.042,2871,5.953,2872,7.56,2873,5.953,2874,5.953,2875,5.953,2876,5.953,2877,5.307,2878,5.953]],["title/interfaces/LocalizedString.html",[327,0.552,1034,1.569]],["body/interfaces/LocalizedString.html",[3,0.15,4,0.121,5,0.031,8,0.179,15,0.389,16,1.111,44,0.006,45,0.356,46,0.177,63,0.554,74,0.169,86,0.183,115,0.005,116,0.005,183,2.039,203,1.388,264,1.528,314,1.478,327,1.108,329,1.985,383,2.091,392,1.759,400,2.628,757,2.614,1034,2.676,1508,5.55,2779,5.527,2780,5.527,2781,6.359,2782,6.77,2783,4.879]],["title/entities/LocalizedStringEntity.html",[264,0.801,1389,2.479]],["body/entities/LocalizedStringEntity.html",[3,0.134,4,0.108,5,0.034,8,0.16,10,0.105,13,1.209,15,0.482,16,1.036,30,0.709,44,0.007,46,0.17,63,0.492,74,0.21,81,1.17,86,0.125,87,2.214,115,0.005,116,0.005,183,1.82,203,1.219,264,1.398,267,1.448,295,1.522,314,1.232,319,2.495,380,1.573,389,1.573,392,1.57,393,2.406,480,1.522,518,1.573,644,1.99,673,1.742,676,2.372,678,3.492,693,3.117,703,1.937,704,3.835,707,3.117,708,2.674,730,1.804,731,1.773,732,1.773,733,1.804,734,2.502,735,1.773,736,2.718,737,2.204,738,1.655,739,1.804,740,1.804,741,1.804,742,1.804,743,1.804,744,1.804,745,1.683,746,1.804,747,1.804,748,1.804,749,1.742,750,1.804,751,1.773,752,1.804,753,1.804,754,1.804,755,1.804,756,1.804,757,1.655,758,1.804,759,1.773,760,1.804,1034,2.495,1351,3.162,1381,2.952,1382,3.53,1385,3.117,1389,3.943,1407,3.943,1439,5.009,1934,4.934,1942,4.934,2782,6.044,2784,6.04,2790,4.934,2870,8.068,2877,5.365,2879,6.018,2880,7.612,2881,6.786,2882,6.018,2883,6.018,2884,6.018,2885,6.018,2886,6.018]],["title/modules/LogModule.html",[832,1.114,852,2.231]],["body/modules/LogModule.html",[3,0.162,4,0.131,5,0.033,8,0.193,10,0.127,21,3.768,44,0.006,74,0.228,76,1.46,86,0.151,115,0.005,116,0.005,277,5.192,832,2.179,834,3.157,852,3.982,874,3.389,875,3.662,876,4.264,878,3.389,1247,4.554,1292,5.394,2844,6.548,2887,7.27,2888,7.176,2889,7.27,2890,7.27]],["title/classes/LogService.html",[10,0.083,2888,3.669]],["body/classes/LogService.html",[3,0.084,4,0.068,5,0.035,8,0.226,10,0.066,15,0.218,21,3.19,23,1.13,25,2.306,30,0.687,43,1.32,44,0.007,45,0.472,46,0.179,47,1.245,48,6.546,50,1.6,51,2.358,58,1.249,63,0.545,74,0.164,76,0.758,86,0.079,88,2.554,89,2.775,98,1.172,103,1.735,115,0.004,116,0.004,118,1.132,121,1.354,149,4.156,152,3.964,174,1.77,175,2.25,178,6.386,181,4.626,184,2.299,185,5.223,190,2.895,195,3.096,196,3.096,218,1.535,242,3.366,247,2.215,248,3.366,314,1.167,319,3.121,394,3.335,478,2.95,625,3.364,823,3.448,836,4.538,842,1.226,891,2.35,1109,2.788,1292,3.494,1361,3.81,1465,4.504,1468,3.096,1568,5.222,1581,4.849,1676,3.366,1678,7.153,2723,6.798,2845,3.81,2888,4.242,2891,3.776,2892,4.933,2893,5.534,2894,7.153,2895,7.213,2896,5.534,2897,5.534,2898,7.153,2899,4.933,2900,5.534,2901,3.776,2902,6.071,2903,5.534,2904,8.818,2905,3.776,2906,6.845,2907,3.776,2908,8.675,2909,7.679,2910,7.679,2911,5.534,2912,3.776,2913,5.534,2914,3.776,2915,5.534,2916,5.534,2917,5.534,2918,3.776,2919,5.534,2920,5.534,2921,5.534,2922,3.776,2923,5.534,2924,3.776,2925,7.213,2926,7.679,2927,3.776,2928,3.776,2929,3.776,2930,7.213,2931,3.776,2932,3.776,2933,3.776,2934,7.213,2935,3.776,2936,3.776,2937,3.776,2938,7.213,2939,5.534,2940,5.534,2941,3.776,2942,3.776,2943,5.534,2944,3.776,2945,3.776,2946,3.096,2947,3.776,2948,3.776,2949,3.366,2950,5.534,2951,3.776,2952,3.776,2953,2.895,2954,3.776,2955,3.776,2956,3.776,2957,3.776,2958,3.776]],["title/classes/LoginPayload.html",[10,0.083,724,3.15]],["body/classes/LoginPayload.html",[3,0.11,4,0.089,5,0.022,8,0.131,10,0.161,12,4.607,15,0.285,16,0.909,30,0.686,35,2.683,41,2.193,42,5.234,44,0.007,46,0.179,47,1.338,58,1.469,63,0.538,71,2.821,74,0.225,76,0.99,81,0.958,86,0.177,98,1.531,115,0.004,116,0.004,118,1.478,144,1.268,174,1.519,203,0.975,240,1.922,276,3.862,291,4.245,327,0.568,365,2.981,388,2.987,428,3.817,667,1.075,668,1.356,671,0.927,676,2.295,716,4.599,719,4.599,722,5.439,724,4.986,727,3.57,745,1.869,768,3.114,769,3.395,779,3.114,782,3.395,783,4.396,796,3.984,832,1.148,840,3.395,842,1.679,892,5.591,893,4.599,896,3.395,910,4.599,913,3.245,936,4.599,937,5.216,954,3.57,958,5.121,959,4.986,960,6.506,961,5.758,962,2.892,963,3.373,964,3.245,965,1.677,966,4.04,967,2.357,968,3.78,969,3.78,970,3.041,971,4.532,972,5.216,973,4.599,974,5.121,975,5.121,976,5.808,977,5.808,978,5.121,979,3.78,980,3.57,981,4.784,982,3.78,983,5.121,984,3.78,985,3.78,986,2.357,1368,5.956,1868,5.956,2959,4.931,2960,4.931,2961,4.931,2962,4.931,2963,4.931,2964,4.931]],["title/interfaces/Media.html",[327,0.552,383,1.096]],["body/interfaces/Media.html",[3,0.081,4,0.065,5,0.044,8,0.096,9,2.442,10,0.152,13,1.42,15,0.209,16,0.73,25,1.7,35,1.145,41,1.049,44,0.007,45,0.492,46,0.189,52,1.643,58,1.416,63,0.549,74,0.19,81,0.704,86,0.189,115,0.003,116,0.003,121,2.099,144,1.517,174,1.415,175,1.473,183,0.79,203,1.253,240,1.871,292,3.475,296,1.049,314,1.571,327,1.054,329,1.067,332,2.344,338,2.279,359,2.05,364,3.966,365,3.505,366,2.279,378,1.61,383,2.255,388,1.792,389,2.316,390,3.433,391,3.146,392,1.755,397,1.356,398,2.215,399,1.61,403,3.205,404,2.182,405,2.474,409,2.182,410,2.23,418,1.412,419,1.442,452,3.214,453,3.142,454,3.214,468,1.573,474,1.61,482,1.442,635,2.385,650,2.841,662,1.505,667,0.79,668,0.996,671,0.681,763,1.61,842,1.189,881,3.221,963,4.014,965,1.232,970,2.647,1034,2.682,1035,1.304,1134,2.23,1138,1.356,1150,1.876,1151,1.931,1152,1.931,1154,1.931,1159,1.931,1162,2.78,1164,1.931,1166,1.931,1168,2.442,1169,1.991,1170,2.78,1171,2.949,1172,2.949,1173,4.095,1174,3.769,1175,2.78,1176,2.949,1177,2.884,1178,4.095,1179,1.931,1180,1.876,1181,2.862,1182,1.931,1183,1.991,1184,3.662,1185,1.991,1186,3.312,1187,1.931,1188,3.136,1189,3.91,1190,1.991,1191,1.931,1192,2.442,1193,1.991,1194,1.991,1195,2.862,1196,4.025,1197,1.931,1198,2.862,1199,1.825,1200,1.825,1201,1.991,1202,1.991,1203,1.825,1204,1.825,1205,1.825,1206,1.991,1207,1.991,1208,1.825,1209,1.991,1210,1.991,1211,1.732,1212,1.876]],["title/controllers/MediaController.html",[671,0.9,2965,3.925]],["body/controllers/MediaController.html",[3,0.112,4,0.091,5,0.037,10,0.088,13,1.011,15,0.291,18,1.536,23,1.383,24,3.058,30,0.691,43,1.248,44,0.007,45,0.451,46,0.18,47,1.226,50,1.53,52,1.538,63,0.429,74,0.23,76,1.011,81,1.488,86,0.105,88,1.408,89,2.104,93,2.939,98,1.563,103,1.971,115,0.004,116,0.004,144,1.568,182,1.509,183,1.098,203,1.398,218,2.047,267,1.211,292,3.26,314,1.566,317,2.856,380,1.316,383,1.754,388,2.734,394,2.943,480,1.273,518,1.316,644,1.771,662,3.181,671,0.947,676,2.311,712,2.238,714,2.187,730,1.509,731,1.483,732,1.483,733,1.509,734,2.295,735,1.483,736,2.604,737,1.961,738,1.385,739,1.509,740,1.509,741,1.509,742,1.509,743,1.509,744,1.509,745,1.408,746,1.509,747,1.509,748,1.509,749,1.458,750,1.509,751,1.483,752,1.509,753,1.509,754,1.509,755,1.509,756,1.509,757,1.385,758,1.509,759,1.483,760,1.509,762,3.18,763,3.64,764,3.18,820,3.061,1150,3.51,1152,4.083,1153,6.04,1154,4.083,1155,6.04,1156,6.04,1157,4.489,1159,2.685,1161,4.489,1162,4.243,1164,2.685,1166,2.685,1199,3.414,1347,2.856,1490,3.467,1491,3.314,1500,3.314,1987,4.489,2074,4.489,2076,4.489,2078,4.489,2080,4.129,2081,4.129,2082,4.129,2083,4.129,2084,3.645,2085,4.129,2086,4.129,2090,4.129,2091,4.129,2092,4.129,2095,4.489,2098,4.489,2099,4.129,2103,4.129,2106,4.129,2965,5.556,2966,5.035,2967,5.035,2968,5.035,2969,6.827,2970,5.035,2971,5.035,2972,5.035,2973,5.035,2974,5.035,2975,3.314,2976,5.035,2977,5.035,2978,4.489,2979,5.035,2980,5.035,2981,5.035,2982,5.035,2983,5.035,2984,5.035,2985,6.776,2986,5.035,2987,5.035,2988,5.035,2989,5.035,2990,5.035,2991,5.035,2992,5.035,2993,5.035,2994,5.035]],["title/classes/MediaDto.html",[10,0.083,1197,2.552]],["body/classes/MediaDto.html",[3,0.082,4,0.066,5,0.044,8,0.097,9,2.45,10,0.153,13,1.525,15,0.212,16,0.737,25,1.713,30,0.664,35,1.16,41,1.063,44,0.007,45,0.487,46,0.189,52,1.65,58,1.422,63,0.548,74,0.191,81,0.713,86,0.189,115,0.003,116,0.003,118,1.1,121,2.063,144,1.52,174,1.422,175,1.492,183,0.8,203,1.231,240,1.684,292,3.486,296,1.063,314,1.566,327,1.047,332,2.209,338,1.559,359,1.402,364,3.835,365,3.363,366,1.559,378,1.631,383,2.257,388,1.809,389,2.251,390,3.296,391,3.076,392,1.748,397,1.374,398,2.233,399,1.631,403,3.021,404,1.492,405,2.332,409,2.203,410,2.251,418,1.431,419,1.461,452,3.229,453,3.162,454,3.229,468,1.594,474,1.631,482,1.461,635,1.631,650,2.863,662,1.525,667,0.8,668,1.009,671,0.69,676,2.222,763,1.631,842,1.201,881,3.246,963,4.062,965,1.248,970,2.842,1034,2.603,1035,1.321,1134,1.525,1138,1.374,1150,1.901,1151,1.957,1152,1.957,1154,1.957,1159,1.957,1162,2.807,1164,1.957,1166,1.957,1168,2.466,1169,2.017,1170,1.901,1171,2.017,1172,2.017,1173,3.931,1174,2.89,1175,1.901,1176,2.017,1177,2.718,1178,3.931,1179,1.957,1180,1.901,1181,2.89,1182,1.957,1183,2.017,1184,3.686,1185,2.017,1186,3.338,1187,1.957,1188,3.161,1189,3.931,1190,2.017,1191,1.957,1192,2.466,1193,2.017,1194,2.017,1195,2.89,1196,4.047,1197,2.89,1198,2.89,1199,1.849,1200,1.849,1201,2.017,1202,2.017,1203,1.849,1204,1.849,1205,1.849,1206,2.017,1207,2.017,1208,1.849,1209,2.017,1210,2.017,1211,1.755,1212,1.901,2777,3.924,2995,3.671,2996,3.671,2997,3.671,2998,3.671,2999,3.671,3000,3.671,3001,3.671]],["title/entities/MediaEntity.html",[264,0.801,1384,2.807]],["body/entities/MediaEntity.html",[3,0.126,4,0.102,5,0.026,8,0.15,10,0.127,13,1.134,15,0.495,16,0.994,30,0.747,44,0.007,45,0.468,46,0.19,63,0.41,74,0.228,86,0.118,87,2.354,115,0.005,116,0.005,203,1.183,240,1.729,264,1.356,295,1.427,314,1.182,319,2.394,332,2.515,383,2.082,389,1.475,392,1.524,393,2.309,405,2.655,673,1.634,676,2.501,678,3.224,693,2.923,703,2.351,704,3.681,707,2.923,708,2.508,1139,3.247,1177,3.094,1381,2.768,1382,3.31,1384,4.285,1385,2.923,1389,4.437,1390,3.43,1391,5.084,1392,3.43,1405,3.895,1406,3.895,1407,3.784,1410,3.101,1439,4.807,1888,3.564,2048,4.628,2066,5.99,2115,5.637,2116,4.628,2117,5.99,2118,4.628,2127,3.886,2128,5.03,2129,5.03,2131,5.03,2132,5.99,2133,5.99,2134,5.99,2135,3.886,2137,4.628,2881,6.513,2975,3.714,3002,5.644,3003,5.644,3004,6.567,3005,7.306,3006,7.306,3007,5.644,3008,5.644,3009,5.644,3010,5.644,3011,5.644,3012,6.567,3013,6.513,3014,5.644,3015,5.031,3016,5.031,3017,5.644,3018,5.644]],["title/interfaces/MediaExt.html",[327,0.552,1186,2.479]],["body/interfaces/MediaExt.html",[3,0.085,4,0.069,5,0.044,8,0.101,9,2.471,10,0.154,13,1.454,15,0.22,16,0.757,25,1.749,35,1.203,41,1.101,44,0.007,45,0.493,46,0.186,52,1.669,58,1.393,63,0.553,74,0.193,81,0.74,86,0.19,115,0.004,116,0.004,121,2.126,144,1.531,174,1.378,175,1.547,183,0.829,203,1.175,240,1.557,292,3.516,296,1.101,314,1.568,327,1.063,329,1.121,332,1.728,338,1.616,359,1.453,364,3.883,365,3.409,366,1.616,378,1.691,383,2.263,388,1.857,389,2.341,390,3.494,391,3.254,392,1.777,397,1.424,398,2.28,399,1.691,403,2.794,404,1.547,405,1.824,409,2.675,410,2.311,418,1.483,419,1.514,452,3.271,453,3.217,454,3.271,468,1.652,474,1.691,482,1.514,635,1.691,650,2.924,662,1.58,667,0.829,668,1.046,671,0.716,763,1.691,842,1.233,881,3.315,963,4.034,965,1.294,970,2.71,1034,2.524,1035,1.37,1134,1.58,1138,1.424,1150,1.971,1151,2.029,1152,2.029,1154,2.029,1159,2.029,1162,2.882,1164,2.029,1166,2.029,1168,2.532,1169,2.091,1170,1.971,1171,2.091,1172,2.091,1173,3.75,1174,2.967,1175,1.971,1176,2.091,1177,2.126,1178,3.75,1179,2.029,1180,1.971,1181,2.967,1182,2.029,1183,2.091,1184,3.75,1185,2.091,1186,3.75,1187,2.029,1188,3.227,1189,3.99,1190,2.091,1191,2.029,1192,2.532,1193,2.091,1194,2.091,1195,2.967,1196,4.107,1197,2.029,1198,2.967,1199,1.917,1200,1.917,1201,2.091,1202,2.091,1203,1.917,1204,1.917,1205,1.917,1206,2.091,1207,2.091,1208,1.917,1209,2.091,1210,2.091,1211,1.819,1212,1.971]],["title/entities/MediaExtEntity.html",[264,0.801,3019,3.925]],["body/entities/MediaExtEntity.html",[3,0.155,4,0.125,5,0.031,8,0.185,10,0.121,13,1.397,15,0.533,16,1.132,30,0.672,44,0.006,45,0.47,46,0.162,63,0.517,74,0.209,86,0.145,87,1.701,115,0.005,116,0.005,264,1.491,295,1.759,383,1.906,389,1.818,392,1.675,393,2.63,673,2.014,676,2.25,677,3.822,678,3.312,703,2.239,708,3.091,1077,3.091,1139,3.698,1186,4.31,1351,3.457,1381,3.412,1891,3.946,1897,4.577,2975,4.577,3019,6.823,3020,6.826,3021,6.956,3022,7.418,3023,6.956,3024,6.956,3025,6.956]],["title/interfaces/MediaFile.html",[327,0.552,1178,2.479]],["body/interfaces/MediaFile.html",[3,0.081,4,0.065,5,0.044,8,0.096,9,2.443,10,0.152,13,1.421,15,0.209,16,0.731,25,1.701,35,1.146,41,1.049,44,0.007,45,0.493,46,0.189,52,1.644,58,1.369,63,0.55,74,0.19,81,0.705,86,0.189,115,0.003,116,0.003,121,2.1,144,1.517,174,1.351,175,1.474,183,0.79,203,1.253,240,1.514,292,3.639,296,1.049,314,1.587,327,1.054,329,1.068,332,1.667,338,1.539,359,1.385,364,3.878,365,3.406,366,1.539,378,1.611,383,2.279,388,1.793,389,2.316,390,3.434,391,3.214,392,1.765,397,1.357,398,2.836,399,2.387,403,2.716,404,1.474,405,1.76,409,2.183,410,2.231,418,1.413,419,1.443,452,3.55,453,3.514,454,3.55,468,1.574,474,1.611,482,1.443,635,1.611,650,3.143,662,1.506,667,0.79,668,0.997,671,0.682,763,1.611,842,1.19,881,3.223,963,4.014,965,1.233,970,2.648,1034,2.475,1035,1.305,1134,1.506,1138,1.357,1150,1.878,1151,1.933,1152,1.933,1154,1.933,1159,1.933,1162,2.782,1164,1.933,1166,1.933,1168,2.444,1169,1.992,1170,1.878,1171,1.992,1172,1.992,1173,3.663,1174,2.863,1175,1.878,1176,1.992,1177,2.051,1178,3.911,1179,1.933,1180,1.878,1181,2.863,1182,1.933,1183,1.992,1184,3.663,1185,1.992,1186,3.313,1187,1.933,1188,3.138,1189,4.353,1190,1.992,1191,1.933,1192,2.444,1193,1.992,1194,1.992,1195,2.863,1196,4.026,1197,1.933,1198,2.863,1199,1.826,1200,1.826,1201,1.992,1202,1.992,1203,1.826,1204,1.826,1205,1.826,1206,1.992,1207,1.992,1208,1.826,1209,1.992,1210,1.992,1211,1.733,1212,1.878]],["title/classes/MediaFileDto.html",[10,0.083,1198,2.552]],["body/classes/MediaFileDto.html",[3,0.081,4,0.066,5,0.044,8,0.097,9,2.445,10,0.152,13,1.519,15,0.21,16,0.733,25,1.705,30,0.68,35,1.151,41,1.054,44,0.007,45,0.486,46,0.188,52,1.646,58,1.419,63,0.549,74,0.19,81,0.708,86,0.189,115,0.003,116,0.003,118,1.091,121,2.058,144,1.518,174,1.417,175,1.48,183,0.794,203,1.229,240,1.518,292,3.572,296,1.054,314,1.576,327,1.045,332,1.673,338,1.546,359,1.391,364,3.83,365,3.358,366,1.546,378,1.618,383,2.261,388,1.798,389,2.247,390,3.285,391,3.068,392,1.746,397,1.363,398,2.621,399,1.618,403,2.723,404,1.48,405,1.766,409,2.19,410,2.238,418,1.42,419,1.449,452,3.421,453,3.15,454,3.421,468,1.581,474,1.618,482,1.449,635,1.618,650,2.85,662,1.512,667,0.794,668,1.001,671,0.685,676,2.275,763,1.618,842,1.194,881,3.231,963,4.067,965,1.238,970,2.832,1034,2.479,1035,1.311,1134,1.512,1138,1.363,1150,1.886,1151,1.941,1152,1.941,1154,1.941,1159,1.941,1162,2.791,1164,1.941,1166,1.941,1168,2.918,1169,2.001,1170,1.886,1171,2.001,1172,2.001,1173,3.671,1174,2.872,1175,1.886,1176,2.001,1177,2.058,1178,3.918,1179,1.941,1180,1.886,1181,2.872,1182,1.941,1183,2.001,1184,3.671,1185,2.001,1186,3.322,1187,1.941,1188,3.146,1189,3.918,1190,2.001,1191,1.941,1192,2.452,1193,2.001,1194,2.001,1195,2.872,1196,4.223,1197,1.941,1198,3.419,1199,1.834,1200,1.834,1201,2.001,1202,2.001,1203,1.834,1204,1.834,1205,1.834,1206,2.001,1207,2.001,1208,1.834,1209,2.001,1210,2.001,1211,1.741,1212,1.886,2777,2.636,3026,3.641,3027,3.641,3028,3.641,3029,3.641,3030,3.641,3031,3.641,3032,3.641,3033,3.641]],["title/entities/MediaFileEntity.html",[264,0.801,3004,3.669]],["body/entities/MediaFileEntity.html",[3,0.13,4,0.105,5,0.026,8,0.155,10,0.102,13,1.175,15,0.501,16,1.017,30,0.763,44,0.007,45,0.435,46,0.187,58,1.294,63,0.487,74,0.218,86,0.122,87,2.391,115,0.005,116,0.005,203,1.203,264,1.379,292,3.279,295,1.479,314,1.529,383,2.101,389,1.529,392,1.549,393,2.363,398,2.855,452,3.349,454,3.349,673,1.693,676,2.554,677,3.214,678,3.827,693,3.029,703,1.882,704,3.766,707,3.029,708,3.322,709,3.318,1177,2.855,1178,3.872,1381,2.869,1382,3.431,1384,5.093,1385,3.872,1407,4.267,2125,4.796,2806,4.484,2975,3.849,3004,5.73,3013,6.664,3020,7.312,3034,5.849,3035,7.475,3036,5.849,3037,6.285,3038,5.849,3039,6.664,3040,5.849,3041,5.849,3042,5.849,3043,5.849,3044,5.849,3045,5.849,3046,4.796,3047,5.849,3048,6.664]],["title/interfaces/MediaFormat.html",[327,0.552,1189,2.479]],["body/interfaces/MediaFormat.html",[3,0.083,4,0.067,5,0.044,8,0.099,9,2.46,10,0.153,13,1.44,15,0.215,16,0.746,25,1.729,35,1.179,41,1.08,44,0.007,45,0.495,46,0.187,52,1.659,58,1.383,63,0.556,74,0.192,81,0.725,86,0.19,115,0.004,116,0.004,121,2.115,144,1.525,174,1.367,175,1.517,183,0.813,203,1.167,240,1.539,292,3.59,296,1.08,314,1.565,327,1.059,329,1.099,332,1.703,338,1.584,359,1.425,364,3.894,365,3.421,366,1.584,378,1.658,383,2.265,388,1.831,389,2.299,390,3.47,391,3.173,392,1.763,397,1.397,398,2.254,399,1.658,403,2.762,404,1.517,405,1.798,409,2.23,410,2.278,418,1.454,419,1.485,452,3.575,453,3.551,454,3.575,468,1.62,474,1.658,482,1.485,635,1.658,650,3.396,662,1.55,667,0.813,668,1.026,671,0.702,763,1.658,842,1.216,881,3.277,963,4.026,965,1.269,970,2.685,1034,2.504,1035,1.343,1134,1.55,1138,1.397,1150,1.932,1151,1.989,1152,1.989,1154,1.989,1159,1.989,1162,2.841,1164,1.989,1166,1.989,1168,2.496,1169,2.05,1170,1.932,1171,2.05,1172,2.05,1173,3.715,1174,2.925,1175,1.932,1176,2.05,1177,2.095,1178,3.715,1179,1.989,1180,1.932,1181,2.925,1182,1.989,1183,2.05,1184,3.715,1185,2.05,1186,3.369,1187,1.989,1188,3.191,1189,4.139,1190,2.05,1191,1.989,1192,2.496,1193,2.05,1194,2.05,1195,2.925,1196,4.074,1197,1.989,1198,2.925,1199,1.88,1200,1.88,1201,2.05,1202,2.05,1203,1.88,1204,1.88,1205,1.88,1206,2.05,1207,2.05,1208,1.88,1209,2.05,1210,2.05,1211,1.783,1212,1.932]],["title/classes/MediaFormatDto.html",[10,0.083,1196,2.552]],["body/classes/MediaFormatDto.html",[3,0.083,4,0.068,5,0.044,8,0.1,9,2.463,10,0.153,13,1.538,15,0.217,16,0.749,25,1.735,30,0.581,35,1.185,41,1.086,44,0.007,45,0.489,46,0.187,52,1.662,58,1.432,63,0.552,74,0.192,81,0.729,86,0.19,115,0.004,116,0.004,118,1.124,121,2.076,144,1.527,174,1.433,175,1.525,183,0.818,203,1.169,240,1.544,292,3.553,296,1.086,314,1.566,327,1.051,332,1.71,338,1.593,359,1.433,364,3.849,365,3.376,366,1.593,378,1.667,383,2.257,388,1.838,389,2.264,390,3.326,391,3.097,392,1.754,397,1.404,398,2.261,399,1.667,403,2.771,404,1.525,405,1.805,409,2.239,410,2.287,418,1.462,419,1.493,452,3.45,453,3.195,454,3.45,468,1.629,474,1.667,482,1.493,635,1.667,650,2.9,662,1.558,667,0.818,668,1.031,671,0.705,676,1.944,763,1.667,842,1.22,881,3.287,963,4.063,965,1.275,970,2.867,1034,2.51,1035,1.35,1134,1.558,1138,1.404,1150,1.943,1151,2,1152,2,1154,2,1159,2,1162,2.852,1164,2,1166,2,1168,2.506,1169,2.061,1170,1.943,1171,2.061,1172,2.061,1173,3.724,1174,2.936,1175,1.943,1176,2.061,1177,2.103,1178,3.724,1179,2,1180,1.943,1181,2.936,1182,2,1183,2.061,1184,3.724,1185,2.061,1186,3.38,1187,2,1188,3.201,1189,4.146,1190,2.061,1191,2,1192,2.506,1193,2.061,1194,2.061,1195,2.936,1196,4.268,1197,2,1198,2.936,1199,1.889,1200,1.889,1201,2.061,1202,2.061,1203,1.889,1204,1.889,1205,1.889,1206,2.061,1207,2.061,1208,1.889,1209,2.061,1210,2.061,1211,1.793,1212,1.943,3049,3.75,3050,3.75,3051,3.75,3052,3.75]],["title/entities/MediaFormatEntity.html",[264,0.801,3037,3.465]],["body/entities/MediaFormatEntity.html",[3,0.147,4,0.119,5,0.03,8,0.175,10,0.115,13,1.323,15,0.523,16,1.096,30,0.732,44,0.006,45,0.459,46,0.176,63,0.542,74,0.202,86,0.137,87,2.273,115,0.005,116,0.005,264,1.456,295,1.666,383,1.844,389,1.723,392,1.636,393,2.546,452,3.536,454,3.536,673,1.907,676,2.45,677,3.621,678,3.763,703,2.121,708,2.928,1077,2.928,1139,3.579,1188,3.95,1189,4.171,1351,3.345,1381,3.232,1891,3.737,1897,4.336,2975,4.336,3020,7.123,3037,5.83,3039,7.179,3048,7.179,3053,6.589,3054,6.589,3055,6.589,3056,6.589,3057,6.589,3058,6.589]],["title/classes/MediaManager.html",[10,0.083,1199,2.411]],["body/classes/MediaManager.html",[3,0.076,4,0.061,5,0.043,8,0.09,9,2.692,10,0.152,13,1.376,15,0.196,23,1.045,25,1.637,30,0.666,35,1.075,41,0.984,43,1.204,44,0.007,45,0.502,46,0.188,47,1.183,50,1.476,52,1.754,58,1.337,63,0.551,74,0.185,81,0.661,86,0.186,115,0.003,116,0.003,118,1.019,121,2.064,144,1.579,174,1.315,175,1.383,183,0.741,184,3.208,203,1.275,240,1.457,292,3.521,296,0.984,314,1.588,327,1.031,332,1.59,338,1.444,359,1.299,364,3.785,365,3.316,366,1.444,378,1.511,383,2.25,388,1.709,389,2.206,390,3.192,391,3,392,1.738,397,1.273,398,2.134,399,1.511,403,2.615,404,1.383,405,1.678,409,2.081,410,2.127,418,1.326,419,2.038,452,3.139,453,3.045,454,3.139,468,1.477,474,1.511,482,1.354,635,1.511,650,2.736,662,1.413,667,0.741,668,0.935,671,0.64,763,1.511,842,1.365,881,3.102,963,3.987,965,1.156,970,2.565,1034,2.626,1035,1.224,1134,1.413,1138,1.273,1150,1.762,1151,1.813,1152,1.813,1154,1.813,1159,1.813,1162,2.652,1164,1.813,1166,1.813,1168,2.33,1169,1.869,1170,1.762,1171,1.869,1172,1.869,1173,3.549,1174,2.73,1175,1.762,1176,1.869,1177,1.956,1178,3.549,1179,1.813,1180,1.762,1181,2.73,1182,1.813,1183,1.869,1184,3.549,1185,1.869,1186,3.189,1187,1.813,1188,3.02,1189,3.807,1190,1.869,1191,1.813,1192,3.118,1193,1.869,1194,1.869,1195,2.73,1196,3.918,1197,1.813,1198,2.73,1199,2.579,1200,2.579,1201,2.813,1202,3.384,1203,2.579,1204,2.579,1205,2.579,1206,2.813,1207,3.384,1208,3.102,1209,3.384,1210,3.384,1211,1.626,1212,1.762,1262,3.369,2140,4.198,2142,4.198,2143,4.198,3059,5.12,3060,5.12,3061,3.401,3062,3.401,3063,3.401,3064,3.401,3065,3.401,3066,3.401,3067,3.401,3068,3.401,3069,3.401,3070,3.401]],["title/modules/MediaModule.html",[832,1.114,1211,2.288]],["body/modules/MediaModule.html",[3,0.129,4,0.105,5,0.034,8,0.154,10,0.101,23,1.184,30,0.469,43,0.847,44,0.007,45,0.306,46,0.113,47,0.832,50,1.038,74,0.245,76,1.165,81,1.128,86,0.121,103,1.396,115,0.005,116,0.005,182,1.739,183,1.265,267,1.396,380,1.517,383,1.703,419,2.96,480,1.467,501,3.467,518,1.517,644,1.944,667,1.621,669,3.005,671,1.399,712,2.578,730,1.739,731,1.709,732,1.709,733,1.739,734,2.46,735,1.709,736,2.695,737,2.153,738,1.595,739,1.739,740,1.739,741,1.739,742,1.739,743,1.739,744,1.739,745,1.623,746,1.739,747,1.739,748,1.739,749,1.679,750,1.739,751,1.709,752,1.739,753,1.739,754,1.739,755,1.739,756,1.739,757,1.595,758,1.739,759,1.709,760,1.739,832,2.083,834,2.519,837,3.852,838,4.893,839,3.817,842,1.648,844,4.988,850,3.965,851,3.526,852,3.467,853,3.526,854,2.64,855,3.994,861,4.2,862,2.773,864,3.817,874,2.705,875,2.923,876,3.403,877,4.447,878,2.705,1199,4.135,1211,3.923,1212,4.484,1267,3.093,1384,4.362,1429,3.817,2808,5.172,2965,6.73,2975,3.817,2978,7.316,3004,5.7,3012,5.7,3015,5.172,3016,5.172,3037,5.383,3046,4.757,3071,5.801,3072,5.801,3073,5.801,3074,5.801,3075,8.207,3076,5.172,3077,5.801,3078,5.172]],["title/interfaces/MediaType.html",[327,0.552,1173,2.479]],["body/interfaces/MediaType.html",[3,0.08,4,0.065,5,0.044,8,0.095,9,2.438,10,0.152,13,1.415,15,0.208,16,0.726,25,2.17,35,1.137,41,1.546,44,0.007,45,0.489,46,0.19,52,1.776,58,1.365,63,0.55,74,0.189,81,0.699,86,0.188,115,0.003,116,0.003,121,2.132,144,1.514,174,1.347,175,2.17,183,1.164,203,1.151,240,1.507,292,3.563,296,1.041,314,1.567,327,1.052,329,1.059,332,1.658,338,1.527,359,1.374,364,3.894,365,3.378,366,1.527,378,2.373,383,2.265,388,1.782,389,2.312,390,3.424,391,3.139,392,1.763,397,1.999,398,2.206,399,1.598,403,2.703,404,1.462,405,1.75,409,2.588,410,3.126,418,2.081,419,1.432,452,3.205,453,3.131,454,3.205,468,2.319,474,2.373,482,2.125,635,1.598,650,2.829,662,1.494,667,0.784,668,0.989,671,0.676,763,1.598,842,1.183,881,3.973,963,4.011,965,1.223,970,2.638,1034,2.467,1035,1.295,1134,1.494,1138,1.999,1150,1.863,1151,1.918,1152,1.918,1154,1.918,1159,1.918,1162,3.298,1164,1.918,1166,1.918,1168,2.429,1169,1.976,1170,1.863,1171,1.976,1172,1.976,1173,3.898,1174,2.846,1175,1.863,1176,1.976,1177,2.039,1178,3.649,1179,2.846,1180,2.765,1181,4.013,1182,2.846,1183,2.934,1184,4.437,1185,2.934,1186,3.898,1187,2.846,1188,4.004,1189,4.228,1190,1.976,1191,1.918,1192,2.429,1193,1.976,1194,1.976,1195,2.846,1196,4.013,1197,1.918,1198,2.846,1199,1.812,1200,1.812,1201,1.976,1202,1.976,1203,1.812,1204,1.812,1205,1.812,1206,1.976,1207,1.976,1208,1.812,1209,1.976,1210,1.976,1211,1.719,1212,1.863]],["title/classes/MediaTypeDto.html",[10,0.083,1195,2.552]],["body/classes/MediaTypeDto.html",[3,0.082,4,0.066,5,0.044,8,0.097,9,2.45,10,0.152,13,1.524,15,0.212,16,0.737,25,2.017,30,0.664,35,1.159,41,1.062,44,0.007,45,0.487,46,0.188,52,1.729,58,1.422,63,0.549,74,0.19,81,0.713,86,0.189,115,0.003,116,0.003,118,1.099,121,2.063,144,1.52,174,1.421,175,1.491,183,0.8,203,1.159,240,1.524,292,3.486,296,1.062,314,1.566,327,1.047,332,1.682,338,1.557,359,1.401,364,3.835,365,3.363,366,1.557,378,1.63,383,2.254,388,1.808,389,2.251,390,3.295,391,3.076,392,1.748,397,1.373,398,2.232,399,1.63,403,2.735,404,1.491,405,1.775,409,2.202,410,2.954,418,1.43,419,1.46,452,3.228,453,3.161,454,3.228,468,1.593,474,1.63,482,1.46,635,1.63,650,2.862,662,1.524,667,0.8,668,1.009,671,0.69,676,2.221,763,1.63,842,1.2,881,3.245,963,4.069,965,1.247,970,2.841,1034,2.487,1035,1.32,1134,1.524,1138,1.373,1150,1.9,1151,1.956,1152,1.956,1154,1.956,1159,1.956,1162,2.806,1164,1.956,1166,1.956,1168,2.465,1169,2.016,1170,1.9,1171,2.016,1172,2.016,1173,3.93,1174,2.888,1175,1.9,1176,2.016,1177,2.069,1178,3.684,1179,1.956,1180,1.9,1181,3.792,1182,1.956,1183,2.016,1184,4.113,1185,2.016,1186,3.684,1187,1.956,1188,3.722,1189,3.93,1190,2.016,1191,1.956,1192,2.465,1193,2.016,1194,2.016,1195,3.434,1196,4.234,1197,1.956,1198,2.888,1199,1.848,1200,1.848,1201,2.016,1202,2.016,1203,1.848,1204,1.848,1205,1.848,1206,2.016,1207,2.016,1208,1.848,1209,2.016,1210,2.016,1211,1.753,1212,1.9,2777,2.655,3079,3.668,3080,3.668,3081,3.668,3082,3.668,3083,3.668,3084,3.668,3085,3.668]],["title/entities/MediaTypeEntity.html",[264,0.801,3012,3.669]],["body/entities/MediaTypeEntity.html",[3,0.134,4,0.108,5,0.027,8,0.159,10,0.105,13,1.206,15,0.506,16,1.034,25,2.217,30,0.758,44,0.007,45,0.44,46,0.182,52,1.761,63,0.491,74,0.22,86,0.125,87,2.04,115,0.005,116,0.005,182,2.627,220,5.502,264,1.396,295,1.518,314,1.23,383,2.007,389,1.569,392,1.568,393,2.402,410,3.464,673,1.738,676,2.537,677,3.299,678,3.489,703,1.932,708,2.668,709,3.405,1044,4.052,1077,2.668,1139,3.377,1173,3.937,1181,4.446,1184,4.32,1188,4.091,1351,3.837,1381,2.945,1385,3.11,1405,4.052,1406,4.052,1407,3.937,1437,4.602,1891,3.405,1897,3.95,1943,5.232,2123,6.775,2125,4.923,2975,3.95,3012,5.826,3019,7.188,3020,7.278,3037,6.346,3046,4.923,3086,6.003,3087,6.003,3088,7.6,3089,6.003,3090,6.003,3091,6.003,3092,6.003,3093,6.003,3094,6.003,3095,6.003,3096,6.003]],["title/interfaces/MessageBus.html",[327,0.552,3097,3.925]],["body/interfaces/MessageBus.html",[3,0.139,4,0.112,5,0.028,8,0.166,15,0.36,23,1.589,30,0.685,43,1.362,44,0.006,45,0.448,46,0.186,47,1.217,50,1.519,74,0.157,86,0.162,115,0.005,116,0.005,144,1.303,174,1.726,181,3.629,184,3.874,314,1.009,327,0.978,329,1.837,667,1.359,1002,3.426,1315,5.967,1333,6.753,1820,7.395,1862,4.514,3097,6.382,3098,6.434,3099,6.434,3100,5.559,3101,6.382,3102,6.939,3103,7.565,3104,6.505,3105,7.565,3106,5.559,3107,8.749,3108,7.964,3109,6.236,3110,7.565,3111,5.559,3112,6.236,3113,8.153,3114,5.559,3115,6.236,3116,5.113,3117,4.293,3118,5.113]],["title/interfaces/MessagesBroker.html",[327,0.552,3119,3.669]],["body/interfaces/MessagesBroker.html",[3,0.136,4,0.11,5,0.028,8,0.234,15,0.353,23,1.57,30,0.679,43,1.328,44,0.006,45,0.444,46,0.177,47,1.207,50,1.505,63,0.539,86,0.127,88,2.543,115,0.005,116,0.005,144,1.287,174,1.733,181,4.239,266,5.059,267,2.233,319,3.087,327,0.886,329,1.801,1090,4.935,1315,4.686,1465,4.509,1793,5.527,3101,5.013,3104,7.115,3119,5.893,3120,6.764,3121,5.807,3122,6.113,3123,5.013,3124,7.866,3125,7.866,3126,6.853,3127,6.113,3128,6.304,3129,8.726,3130,8.274,3131,6.853,3132,6.113,3133,6.853,3134,6.853,3135,6.113,3136,6.853]],["title/modules/MessagesBrokerModule.html",[832,1.114,3137,3.465]],["body/modules/MessagesBrokerModule.html",[3,0.134,4,0.108,5,0.034,8,0.159,10,0.105,21,3.756,44,0.007,74,0.236,76,1.206,81,1.167,86,0.125,103,1.444,115,0.005,116,0.005,181,3.543,267,1.444,276,2.732,277,4.619,380,1.569,480,1.518,518,1.569,612,3.633,644,1.987,730,1.799,731,1.768,732,1.768,733,1.799,734,2.5,735,1.768,736,2.716,737,2.2,738,1.651,739,1.799,740,1.799,741,1.799,742,1.799,743,1.799,744,1.799,745,1.679,746,1.799,747,1.799,748,1.799,749,1.738,750,1.799,751,1.768,752,1.799,753,1.799,754,1.799,755,1.799,756,1.799,757,1.651,758,1.799,759,1.768,760,1.799,828,2.549,832,2.105,834,2.607,852,3.543,862,3.986,866,3.95,874,3.543,875,3.024,876,3.521,878,3.543,1247,4.052,1280,3.299,1281,3.649,1282,3.649,1283,3.649,1287,5.951,1288,3.649,1289,3.405,1292,4.799,1293,4.619,1295,4.346,1296,3.791,1297,4.346,1298,4.346,1302,4.923,1303,4.133,1304,3.95,1305,4.133,1306,4.923,1307,4.346,1308,4.923,1309,4.346,1310,4.923,1311,4.602,1312,4.923,1313,4.923,2845,5.232,3120,4.602,3121,3.95,3123,6.232,3137,6.688,3138,5.352,3139,6.003,3140,6.003,3141,6.393,3142,4.923,3143,5.352,3144,5.502,3145,5.352]],["title/injectables/MessagesBrokerService.html",[819,1.569,3144,3.465]],["body/injectables/MessagesBrokerService.html",[3,0.102,4,0.083,5,0.021,8,0.227,10,0.08,13,1.467,15,0.265,16,0.866,18,2.679,23,1.3,24,2.309,25,2.511,30,0.723,43,1.327,44,0.007,45,0.452,46,0.181,47,1.229,50,1.572,58,1.365,63,0.546,74,0.198,76,0.923,86,0.096,88,2.457,89,1.427,93,1.534,98,1.977,103,1.992,115,0.004,116,0.004,137,1.592,149,3.297,174,1.744,181,3.993,182,1.377,183,1.002,212,3.869,219,4.02,265,5.989,266,4.189,267,2.061,277,3.869,319,3.046,327,0.734,819,2.086,821,2.142,828,1.951,842,1.411,1090,4.708,1293,5.441,1395,5.653,1465,4.856,1793,5.032,1861,6.465,2845,3.164,3104,6.566,3119,6.044,3120,6.967,3121,5.981,3123,5.22,3124,7.029,3125,7.029,3126,5.675,3128,5.22,3129,8.358,3130,7.829,3131,5.675,3133,5.675,3134,5.675,3136,5.675,3144,4.608,3146,4.596,3147,7.304,3148,6.366,3149,6.366,3150,4.596,3151,4.596,3152,6.366,3153,4.596,3154,6.366,3155,4.596,3156,7.884,3157,6.366,3158,6.366,3159,6.366,3160,6.366,3161,4.596,3162,6.366,3163,6.366,3164,6.366,3165,4.596,3166,4.596,3167,4.596,3168,4.596,3169,3.327,3170,4.097,3171,3.327,3172,4.097,3173,4.596,3174,4.596,3175,4.596,3176,4.596,3177,4.596,3178,4.596,3179,4.596,3180,4.596,3181,4.596,3182,4.596,3183,4.596,3184,4.596,3185,4.596,3186,4.596,3187,4.596,3188,4.596,3189,4.596]],["title/classes/MsClient.html",[10,0.083,3190,3.925]],["body/classes/MsClient.html",[3,0.091,4,0.159,5,0.018,8,0.21,10,0.071,13,1.175,15,0.235,18,1.784,21,3.525,23,1.194,25,2.104,30,0.639,35,2.363,43,1.291,44,0.007,45,0.418,46,0.172,47,1.328,50,1.554,51,1.467,58,1.012,66,4.267,74,0.222,76,0.818,85,2.95,86,0.085,88,2.589,89,2.321,97,3.214,98,2.124,103,1.904,115,0.004,116,0.004,118,1.221,124,3.214,137,2.026,144,1.251,149,4.1,170,4.483,174,1.777,181,4.575,182,1.221,183,0.888,184,3.105,190,3.124,195,3.341,196,3.341,319,1.335,373,2.952,510,3.317,667,1.893,811,4.858,826,2.311,828,1.73,830,2.172,904,4.483,943,2.573,944,2.39,948,3.317,951,2.681,1002,4.93,1296,2.573,1333,7.161,1468,3.341,1820,7.311,1857,3.124,1862,2.95,2547,2.681,2646,4.795,2844,4.483,2845,4.026,3097,5.609,3098,5.964,3099,5.964,3103,6.098,3104,5.244,3105,7.056,3106,3.632,3107,8.18,3108,7.59,3110,6.098,3111,3.632,3113,8.42,3114,3.632,3117,5.146,3118,5.609,3128,4.795,3190,4.795,3191,4.075,3192,5.213,3193,6.84,3194,6.84,3195,6.663,3196,4.075,3197,4.075,3198,5.848,3199,5.848,3200,4.075,3201,5.848,3202,4.075,3203,4.075,3204,5.848,3205,4.075,3206,5.848,3207,3.124,3208,4.075,3209,4.075,3210,5.848,3211,3.632,3212,4.075,3213,4.483,3214,4.075,3215,2.95,3216,2.95,3217,5.848,3218,6.84,3219,4.075,3220,3.632,3221,4.075,3222,4.075,3223,4.075,3224,6.84,3225,4.075,3226,4.075,3227,3.632,3228,4.075,3229,4.075,3230,5.213,3231,4.075,3232,4.075,3233,4.075,3234,4.075,3235,4.075,3236,4.075,3237,4.075,3238,4.075,3239,4.075]],["title/modules/MsClientModule.html",[832,1.114,3240,3.669]],["body/modules/MsClientModule.html",[3,0.131,4,0.106,5,0.034,8,0.156,10,0.102,21,3.926,44,0.007,45,0.31,74,0.234,76,1.179,81,1.141,86,0.122,98,1.822,103,1.412,115,0.005,116,0.005,267,1.412,380,1.534,480,1.484,510,4.25,518,1.534,612,3.581,644,1.959,667,1.28,730,1.759,731,1.729,732,1.729,733,1.759,734,2.473,735,1.729,736,2.702,737,2.169,738,1.614,739,1.759,740,1.759,741,1.759,742,1.759,743,1.759,744,1.759,745,1.642,746,1.759,747,1.759,748,1.759,749,1.699,750,1.759,751,1.729,752,1.759,753,1.759,754,1.759,755,1.759,756,1.759,757,1.614,758,1.759,759,1.729,760,1.759,828,3.181,832,2.091,834,2.549,852,4.352,862,3.945,866,4.93,874,3.493,875,2.957,878,3.493,1002,4.935,1247,3.994,1280,3.225,1281,3.567,1282,3.567,1283,3.567,1288,3.567,1289,3.329,1292,4.731,1295,4.249,1296,3.706,1297,4.249,1298,4.249,1303,4.041,1305,4.041,1307,4.249,2845,5.158,3098,4.249,3099,4.249,3117,5.985,3118,4.813,3190,4.813,3192,6.679,3195,6.679,3207,4.499,3211,6.679,3227,5.232,3240,7.041,3241,5.232,3242,5.869,3243,5.869,3244,5.869,3245,7.357,3246,7.357,3247,5.869,3248,5.869,3249,5.869,3250,5.869,3251,5.869,3252,5.869,3253,5.869]],["title/classes/MsException.html",[10,0.083,948,2.715]],["body/classes/MsException.html",[3,0.155,4,0.126,5,0.032,8,0.185,10,0.155,18,2.719,30,0.563,43,1.018,44,0.006,45,0.368,46,0.162,47,1.001,63,0.5,74,0.209,85,5.05,86,0.145,115,0.005,116,0.005,118,2.091,137,2.888,181,4.306,184,2.897,218,2.836,314,1.443,392,1.677,604,3.984,823,3.984,831,4.24,943,5.263,947,5.485,948,4.728,2906,8.233,3207,5.347,3213,6.39,3254,6.975,3255,8.335,3256,8.335,3257,9.44,3258,6.975,3259,6.975]],["title/injectables/NotEmptyPipe.html",[819,1.569,2084,3.465]],["body/injectables/NotEmptyPipe.html",[3,0.155,4,0.125,5,0.031,8,0.185,10,0.121,13,1.397,15,0.402,18,2.122,23,1.699,30,0.672,43,1.215,44,0.006,45,0.439,46,0.162,47,1.194,50,1.245,63,0.499,74,0.175,76,1.397,86,0.145,97,3.822,98,2.16,103,1.673,115,0.005,116,0.005,137,2.41,183,2.056,293,5.704,819,2.727,821,3.243,964,5.476,1347,3.946,1400,3.946,2084,6.024,2195,7.938,3260,8.904,3261,6.956,3262,8.322,3263,8.322,3264,6.956,3265,6.956,3266,7.418,3267,8.322,3268,6.956,3269,8.322,3270,6.956,3271,6.956]],["title/classes/NotFoundMsException.html",[10,0.083,3272,4.267]],["body/classes/NotFoundMsException.html",[3,0.158,4,0.128,5,0.032,8,0.189,10,0.124,30,0.576,43,1.04,44,0.006,45,0.376,46,0.138,47,1.022,59,6.873,63,0.504,74,0.212,76,1.431,86,0.148,115,0.005,116,0.005,118,2.135,137,2.469,181,3.935,184,2.959,604,4.035,823,4.035,942,4.905,943,5.33,944,4.951,946,5.811,947,5.555,948,5.385,949,5.811,950,4.905,951,4.688,952,4.905,3272,7.525,3273,8.441,3274,7.125]],["title/classes/PageableData.html",[10,0.083,1041,2.411]],["body/classes/PageableData.html",[3,0.125,4,0.101,5,0.025,8,0.193,10,0.161,18,2.605,30,0.452,34,5.393,43,1.061,44,0.007,45,0.295,46,0.189,47,1.225,63,0.518,74,0.182,86,0.168,88,2.389,103,1.749,115,0.005,116,0.005,118,1.678,125,4.263,137,2.518,174,1.444,182,2.179,247,4.263,314,1.619,319,2.901,353,4.578,364,2.326,473,3.875,574,2.378,881,2.821,962,3.284,965,1.904,995,2.821,1020,2.821,1041,4.303,1110,4.435,1448,6.548,1508,4.418,1555,5.367,1557,4.592,1620,4.293,1621,6.186,1632,5.572,1636,7.004,1813,4.783,1873,5.004,1885,5.004,3275,4.592,3276,5.6,3277,7.614,3278,7.614,3279,5.6,3280,8.005,3281,6.48,3282,4.992,3283,4.992,3284,6.48,3285,4.992,3286,6.48,3287,7.004,3288,4.992,3289,4.592,3290,4.992,3291,5.572]],["title/classes/PageableParams.html",[10,0.083,1020,2.411]],["body/classes/PageableParams.html",[3,0.121,4,0.098,5,0.025,8,0.145,10,0.16,15,0.315,16,0.971,18,2.578,30,0.709,34,4.508,43,1.042,44,0.007,46,0.191,47,1.35,63,0.528,74,0.179,86,0.166,88,2.364,103,1.717,115,0.005,116,0.005,118,1.633,125,3.195,137,1.887,174,1.278,182,2.533,183,1.556,247,4.671,314,1.591,319,2.61,353,4.049,364,2.263,473,4.506,574,2.313,676,2.372,881,3.596,962,3.195,965,1.852,995,2.744,1020,3.596,1041,3.596,1110,3.923,1448,6.901,1508,3.311,1555,5.279,1557,5.854,1620,6.104,1621,6.726,1632,5.472,1636,5.854,1813,3.584,1873,3.75,1885,4.915,3275,4.466,3277,6.364,3278,6.364,3280,7.789,3281,4.856,3282,4.856,3283,4.856,3284,6.364,3285,4.856,3286,7.099,3287,7.194,3288,4.856,3289,4.466,3290,4.856,3291,5.472,3292,7.963,3293,5.447,3294,5.447,3295,5.447,3296,5.447,3297,5.447,3298,5.447,3299,5.447]],["title/controllers/ProcessController.html",[671,0.9,3300,3.925]],["body/controllers/ProcessController.html",[3,0.119,4,0.096,5,0.032,10,0.093,15,0.308,18,1.626,23,1.437,24,3.079,30,0.704,43,1.272,44,0.007,45,0.46,46,0.169,47,1.25,50,1.559,51,2.534,63,0.538,74,0.229,76,1.071,81,1.036,86,0.111,87,1.304,88,1.491,89,2.185,93,2.987,97,3.868,98,2.185,103,1.283,115,0.005,116,0.005,122,3.057,127,3.859,142,4.444,188,3.859,203,1.028,267,1.283,314,1.275,380,1.394,392,1.742,480,1.348,518,1.394,644,1.84,671,1.003,676,2.356,712,2.369,714,2.315,730,1.598,731,1.57,732,1.57,733,1.598,734,2.362,735,1.57,736,2.642,737,2.037,738,1.466,739,1.598,740,1.598,741,1.598,742,1.598,743,1.598,744,1.598,745,1.491,746,1.598,747,1.598,748,1.598,749,1.543,750,1.598,751,1.57,752,1.598,753,1.598,754,1.598,755,1.598,756,1.598,757,1.466,758,1.598,759,1.57,760,1.598,764,3.366,820,3.24,1233,2.369,1264,5.704,1347,3.024,1400,3.024,1491,3.508,1494,3.67,1495,3.859,1496,3.67,1497,3.67,1500,3.508,1501,6.307,3300,5.771,3301,5.331,3302,7.038,3303,7.038,3304,5.771,3305,5.771,3306,6.274,3307,5.331,3308,5.331,3309,5.331,3310,5.331,3311,5.331,3312,5.331,3313,4.752,3314,5.331,3315,5.331,3316,4.752,3317,5.331,3318,5.331,3319,4.752,3320,5.331,3321,5.331,3322,5.331,3323,5.331,3324,5.331,3325,5.331,3326,5.331,3327,5.331,3328,5.331,3329,5.331,3330,5.331,3331,5.331,3332,5.331,3333,5.331,3334,5.331,3335,5.331,3336,5.331,3337,5.331,3338,6.461,3339,5.331,3340,5.331,3341,5.331,3342,4.371,3343,5.331,3344,5.331,3345,7.038,3346,5.331]],["title/interfaces/ProcessLog.html",[327,0.552,3347,3.669]],["body/interfaces/ProcessLog.html",[3,0.15,4,0.121,5,0.03,8,0.217,15,0.389,16,1.11,44,0.006,46,0.182,52,1.352,63,0.524,74,0.205,86,0.17,115,0.005,116,0.005,121,2.147,122,4.213,123,3.699,147,3.218,178,5.369,179,6.254,187,4.634,194,4.634,203,1.332,240,2.275,314,1.421,327,1.077,329,1.983,392,1.266,405,3.064,408,4.153,1004,4.091,1034,2.674,1035,2.423,2902,4.634,3347,6.73,3348,6.001,3349,6.996,3350,6.607,3351,5.519]],["title/entities/ProcessLogEntity.html",[140,3.15,264,0.801]],["body/entities/ProcessLogEntity.html",[3,0.131,4,0.106,5,0.034,8,0.156,10,0.102,13,1.182,15,0.502,16,1.021,30,0.726,44,0.007,45,0.396,46,0.185,63,0.421,74,0.207,81,1.143,86,0.123,87,2.128,115,0.005,116,0.005,122,3.588,140,4.937,203,1.206,240,2.059,264,1.383,267,1.415,295,1.488,314,1.214,319,2.459,380,1.538,393,2.372,405,2.708,408,3.759,480,1.488,501,3.498,518,1.538,644,1.962,673,1.703,676,2.43,678,2.986,693,3.047,703,1.893,704,3.78,707,3.047,730,1.763,731,1.733,732,1.733,733,1.763,734,2.476,735,1.733,736,2.704,737,2.172,738,1.618,739,1.763,740,1.763,741,1.763,742,1.763,743,1.763,744,1.763,745,1.646,746,1.763,747,1.763,748,1.763,749,1.703,750,1.763,751,1.733,752,1.763,753,1.763,754,1.763,755,1.763,756,1.763,757,1.618,758,1.763,759,1.733,760,1.763,1385,3.047,1386,4.738,1407,3.886,1580,4.738,1934,4.824,1942,4.824,2127,4.05,2128,5.166,2129,5.99,2131,5.166,2902,5.166,3347,5.752,3349,6.333,3352,5.883,3353,5.883,3354,5.883,3355,6.299,3356,5.883,3357,5.883,3358,5.883,3359,7.503,3360,5.883,3361,7.503,3362,5.883,3363,4.824,3364,5.883]],["title/injectables/ProcessManagerService.html",[142,3.022,819,1.569]],["body/injectables/ProcessManagerService.html",[3,0.069,4,0.056,5,0.014,8,0.226,10,0.054,15,0.178,16,0.647,18,2.148,21,3.323,23,0.971,24,2.981,25,2.268,30,0.716,33,2.164,34,3.004,43,1.245,44,0.007,45,0.45,46,0.168,47,1.224,50,1.639,51,2.089,52,0.955,63,0.529,74,0.223,76,0.62,86,0.064,87,1.957,88,2.452,89,2.648,93,2.847,97,3.188,98,2.186,103,1.925,115,0.003,116,0.003,122,4.305,123,4.606,124,2.614,125,5.199,126,3.901,134,2.397,135,3.444,137,1.648,140,5.89,142,3.004,146,6.133,147,4.377,163,3.647,166,3.275,167,2.274,169,3.647,172,2.536,174,1.331,178,5.265,182,1.954,183,1.037,187,2.126,189,2.532,194,4.488,202,2.532,203,1.131,206,2.532,288,2.614,295,0.781,311,4.758,314,1.254,392,1.846,404,1.934,408,1.405,460,2.891,574,2.02,667,1.037,673,1.377,819,1.559,821,1.44,828,1.311,830,1.646,837,3.006,842,1.445,920,5.099,1004,4.989,1019,2.274,1070,1.697,1111,1.646,1121,2.614,1138,1.781,1249,5.61,1266,2.235,1267,1.646,1351,1.976,1560,3.647,1580,4.893,1603,2.032,1620,5.397,1621,2.367,1681,2.532,1813,3.13,1850,3.901,2525,5.173,2538,2.532,2902,4.488,2953,4.997,3119,4.997,3121,3.13,3141,2.367,3142,2.532,3170,2.753,3291,2.367,3304,3.901,3305,3.901,3306,4.241,3313,4.241,3316,4.241,3319,4.241,3338,7.268,3342,2.532,3349,2.367,3355,4.201,3365,7.979,3366,3.088,3367,5.802,3368,4.757,3369,4.757,3370,4.757,3371,4.757,3372,4.757,3373,6.519,3374,6.519,3375,4.757,3376,4.757,3377,3.088,3378,4.997,3379,5.173,3380,5.802,3381,5.802,3382,4.757,3383,4.241,3384,4.757,3385,3.088,3386,7.041,3387,4.757,3388,3.088,3389,4.241,3390,4.757,3391,3.088,3392,3.647,3393,4.757,3394,4.757,3395,3.088,3396,4.757,3397,3.088,3398,3.088,3399,6.519,3400,5.811,3401,4.241,3402,3.088,3403,4.241,3404,4.757,3405,3.088,3406,3.088,3407,3.088,3408,3.088,3409,4.757,3410,4.757,3411,4.757,3412,3.088,3413,2.753,3414,2.126,3415,2.753,3416,2.753,3417,3.901,3418,2.367,3419,2.753,3420,3.088,3421,3.088,3422,2.753,3423,2.753,3424,3.088,3425,3.088,3426,4.757,3427,3.088,3428,3.088,3429,3.088,3430,4.757,3431,4.757,3432,2.753,3433,5.173,3434,2.532,3435,2.753,3436,2.532,3437,2.753,3438,4.757,3439,6.519,3440,3.088,3441,3.088,3442,3.088,3443,3.088,3444,4.757,3445,5.802,3446,4.757,3447,3.088,3448,4.757,3449,3.088,3450,3.088,3451,3.088,3452,3.088,3453,3.088,3454,3.088,3455,3.088,3456,2.753]],["title/modules/ProcessModule.html",[832,1.114,3457,3.669]],["body/modules/ProcessModule.html",[3,0.119,4,0.097,5,0.032,8,0.142,10,0.093,13,1.078,18,1.637,23,1.095,24,2.234,30,0.433,44,0.007,50,0.96,74,0.243,76,1.078,81,1.043,86,0.112,93,1.791,115,0.005,116,0.005,122,3.069,124,3.884,127,3.884,140,4.651,142,6.102,188,3.884,189,4.399,267,1.291,380,1.403,480,1.357,518,1.403,533,3.768,612,3.379,644,1.848,712,3.141,730,1.608,731,1.58,732,1.58,733,1.608,734,2.369,735,1.58,736,2.646,737,2.046,738,1.475,739,1.608,740,1.608,741,1.608,742,1.608,743,1.608,744,1.608,745,1.501,746,1.608,747,1.608,748,1.608,749,1.553,750,1.608,751,1.58,752,1.608,753,1.608,754,1.608,755,1.608,756,1.608,757,1.475,758,1.608,759,1.58,760,1.608,832,2.032,834,2.33,850,4.78,851,3.261,852,4.18,853,3.261,854,3.973,855,3.694,862,3.379,864,3.531,874,3.685,878,3.685,1267,2.86,1280,2.948,1281,3.261,1282,3.261,1283,3.261,1288,3.261,1289,3.043,1347,3.043,1429,3.531,1521,5.418,1580,5.305,1588,5.796,3121,3.531,3137,6.49,3300,6.481,3355,3.884,3413,4.783,3417,4.399,3457,7.567,3458,4.783,3459,4.783,3460,4.783,3461,4.783,3462,6.49,3463,6.872,3464,5.365,3465,7.068,3466,6.301,3467,7.068,3468,7.068,3469,7.068,3470,9.14,3471,6.301,3472,6.301,3473,5.365,3474,5.365,3475,4.399,3476,5.365,3477,5.365,3478,5.365,3479,5.365,3480,5.365,3481,5.365,3482,5.365]],["title/injectables/ProcessRegisterService.html",[819,1.569,3463,3.669]],["body/injectables/ProcessRegisterService.html",[3,0.097,4,0.079,5,0.02,8,0.216,10,0.076,15,0.252,18,2.479,21,3.596,23,1.254,24,2.794,25,2.547,30,0.656,43,1.186,44,0.007,45,0.429,46,0.158,47,1.166,50,1.508,51,2.211,60,5.911,74,0.237,76,0.877,86,0.091,87,2.061,88,2.157,89,2.523,93,2.05,98,1.356,103,2.127,115,0.004,116,0.004,122,4.194,124,3.375,127,5.144,134,3.095,135,4.447,137,2.128,142,4.869,147,2.087,163,4.709,169,4.709,174,1.663,187,3.006,188,3.161,194,3.006,202,5.827,207,5.476,392,1.155,819,2.013,821,2.036,826,2.477,828,1.854,830,2.328,842,1.361,1070,2.399,1135,5.097,1351,3.596,1465,3.603,1580,3.879,1603,2.873,2538,3.581,3121,4.042,3141,3.347,3142,3.581,3144,5.582,3145,3.893,3304,5.037,3305,5.037,3338,7.248,3342,7.368,3350,6.781,3363,3.581,3365,7.513,3378,5.911,3379,6.335,3383,6.335,3401,5.476,3414,3.006,3415,3.893,3416,3.893,3417,5.037,3418,3.347,3419,3.893,3422,3.893,3423,3.893,3432,3.893,3433,3.893,3434,7.68,3435,3.893,3436,7.733,3437,3.893,3456,3.893,3463,4.709,3475,3.581,3483,4.367,3484,6.143,3485,6.143,3486,6.143,3487,6.143,3488,8.658,3489,4.367,3490,6.143,3491,4.367,3492,6.335,3493,6.143,3494,4.367,3495,6.143,3496,4.367,3497,6.143,3498,4.367,3499,6.143,3500,6.335,3501,6.143,3502,4.367,3503,4.367,3504,4.367,3505,4.367,3506,4.367,3507,4.367,3508,4.367,3509,4.367,3510,4.367,3511,4.367,3512,4.367,3513,4.367,3514,8.428,3515,7.106,3516,7.106,3517,4.367,3518,6.143,3519,4.367,3520,6.143,3521,4.367,3522,4.367,3523,4.367,3524,4.367,3525,4.367,3526,4.367,3527,4.367,3528,4.367,3529,4.367,3530,4.367]],["title/interfaces/ProcessUnit.html",[327,0.552,3350,3.465]],["body/interfaces/ProcessUnit.html",[3,0.147,4,0.119,5,0.03,8,0.247,15,0.382,16,1.098,44,0.006,46,0.186,52,1.75,63,0.537,74,0.203,86,0.168,115,0.005,116,0.005,121,2.131,122,4.04,123,4.436,147,4.337,178,4.353,179,5.071,187,4.554,194,5.998,203,0.966,240,2.201,314,1.071,327,1.072,329,1.949,392,1.706,405,3.049,408,3.01,1004,5.514,1034,2.973,1035,2.381,2902,6.246,3347,6.955,3348,5.897,3349,5.071,3350,6.308,3351,7.439]],["title/entities/ProcessUnitEntity.html",[264,0.801,3355,3.465]],["body/entities/ProcessUnitEntity.html",[3,0.12,4,0.097,5,0.032,8,0.224,10,0.094,13,1.086,15,0.519,16,0.966,30,0.74,44,0.007,45,0.419,46,0.184,52,1.427,61,2.584,63,0.472,74,0.22,81,1.051,86,0.113,87,2.24,115,0.005,116,0.005,122,2.348,140,5.545,147,3.792,182,2.526,187,3.722,194,4.89,218,2.888,240,1.681,264,1.328,267,1.301,295,1.367,373,2.415,380,1.413,392,1.492,393,2.245,405,2.6,480,1.367,501,3.312,518,1.413,644,1.857,673,1.565,676,2.476,677,2.971,678,3.354,703,2.286,708,2.402,730,1.62,731,1.592,732,1.592,733,1.62,734,2.378,735,1.592,736,2.651,737,2.056,738,1.487,739,1.62,740,1.62,741,1.62,742,1.62,743,1.62,744,1.62,745,1.512,746,1.62,747,1.62,748,1.62,749,1.565,750,1.62,751,1.592,752,1.62,753,1.62,754,1.62,755,1.62,756,1.62,757,1.487,758,1.62,759,1.592,760,1.62,1004,4.822,1077,2.402,1351,2.951,1389,4.364,1390,3.286,1391,4.63,1392,3.286,1405,3.787,1406,3.787,1410,2.971,1580,4.485,1878,4.144,1884,4.433,1885,5.801,1888,3.414,1891,3.066,1899,4.144,1943,3.722,2048,4.433,2049,5.824,2066,5.824,2127,3.722,2128,4.89,2129,4.89,2131,4.89,2902,5.462,3350,5.142,3351,6.505,3355,5.142,3363,4.433,3531,5.406,3532,5.824,3533,5.406,3534,7.103,3535,5.406,3536,5.406,3537,5.406,3538,7.103,3539,5.406,3540,5.406,3541,5.406,3542,5.406,3543,5.406,3544,5.406,3545,5.406,3546,5.406]],["title/controllers/ProfileController.html",[671,0.9,3547,3.925]],["body/controllers/ProfileController.html",[3,0.113,4,0.091,5,0.031,10,0.088,13,1.018,15,0.293,18,1.545,22,3.979,23,1.389,24,3.011,30,0.663,43,1.199,44,0.007,45,0.433,46,0.159,47,1.178,50,1.47,63,0.52,71,2.95,74,0.237,75,6.299,76,1.018,81,0.985,86,0.106,88,1.417,89,1.573,93,2.741,97,4.221,98,2.385,103,2.061,115,0.004,116,0.004,144,1.533,174,1.375,203,1.337,267,1.219,297,3.334,298,3.884,317,2.874,321,4.154,358,4.201,380,1.324,480,1.281,518,1.324,644,1.779,671,0.953,676,2.22,712,2.251,714,2.2,730,1.518,731,1.492,732,1.492,733,1.518,734,2.302,735,1.492,736,2.608,737,1.97,738,1.393,739,1.518,740,1.518,741,1.518,742,1.518,743,1.518,744,1.518,745,1.417,746,1.518,747,1.518,748,1.518,749,1.467,750,1.518,751,1.492,752,1.518,753,1.518,754,1.518,755,1.518,756,1.518,757,1.393,758,1.518,759,1.492,760,1.518,761,3.096,762,4.296,764,3.199,773,4.516,774,4.516,775,4.516,820,3.079,966,2.701,1099,3.87,1213,4.135,1215,6.065,1216,6.848,1217,6.065,1218,6.848,1219,3.199,1221,3.199,1223,3.199,1225,3.199,1233,2.251,1264,4.925,1265,3.668,1347,2.874,1491,3.334,1494,3.488,1495,3.668,1496,3.488,1497,3.488,1500,3.334,1501,4.925,1969,5.215,1970,4.516,1971,4.154,1972,4.154,2099,5.579,2103,4.154,2106,4.154,2511,4.516,3547,5.579,3548,5.066,3549,5.066,3550,7.682,3551,5.066,3552,5.066,3553,5.066,3554,5.066,3555,5.066,3556,5.066,3557,5.066,3558,4.516,3559,5.066,3560,4.516,3561,4.516,3562,5.066,3563,8.211,3564,6.803,3565,6.803,3566,5.066,3567,5.066,3568,5.066,3569,5.066,3570,5.066,3571,5.066,3572,5.066]],["title/injectables/RedisCacheService.html",[819,1.569,1300,3.925]],["body/injectables/RedisCacheService.html",[3,0.075,4,0.061,5,0.015,8,0.224,10,0.107,13,0.68,15,0.195,18,1.556,19,3.444,21,3.323,23,1.042,24,2.981,25,1.356,30,0.681,43,1.23,44,0.007,45,0.445,46,0.164,47,1.282,50,1.642,51,1.837,52,1.373,60,5.909,61,3.685,63,0.542,66,3.541,68,3.357,74,0.184,76,0.68,86,0.07,87,2.1,88,2.44,89,2.122,93,2.749,98,1.906,103,2.15,115,0.003,116,0.004,137,1.768,144,1.596,149,4.813,166,4.706,167,4.028,180,4.225,183,2.092,184,1.406,212,4.458,219,4.631,314,1.364,317,2.894,327,0.588,363,3.756,459,4.718,582,4.522,610,2.894,645,2.057,819,1.672,821,1.578,826,1.92,828,1.437,830,1.805,842,1.131,871,7.152,890,3.593,914,6.347,915,6.535,925,4.771,981,5.507,1002,3.374,1094,4.009,1109,4.149,1138,1.91,1182,3.644,1247,2.72,1292,3.221,1293,5.433,1296,2.137,1299,3.017,1300,4.183,1317,4.548,1318,4.548,1319,4.548,1320,4.548,1321,4.548,1322,4.548,1323,4.548,1325,4.548,1327,4.548,1329,4.548,1331,4.548,1333,5.792,1334,4.548,1336,4.548,1338,3.017,1351,3.5,1541,4.183,1583,6.094,1611,8.047,2547,2.227,2707,6.094,3169,2.45,3171,2.45,3215,2.45,3216,2.45,3230,5.474,3389,6.872,3392,2.595,3573,8.586,3574,3.385,3575,5.102,3576,3.385,3577,3.385,3578,3.385,3579,5.102,3580,3.385,3581,3.385,3582,3.385,3583,6.538,3584,3.385,3585,3.385,3586,5.102,3587,5.102,3588,3.385,3589,3.017,3590,3.385,3591,3.385,3592,5.102,3593,5.102,3594,5.102,3595,3.385,3596,3.385,3597,3.385,3598,3.385,3599,3.385,3600,3.385,3601,3.385,3602,3.385,3603,3.385,3604,3.017,3605,3.385,3606,3.385,3607,3.385,3608,3.385,3609,3.385,3610,2.595]],["title/modules/RedisModule.html",[832,1.114,1287,3.15]],["body/modules/RedisModule.html",[3,0.13,4,0.105,5,0.034,8,0.155,10,0.102,21,3.42,23,1.193,24,1.847,25,1.553,30,0.472,43,0.853,44,0.007,45,0.308,46,0.16,47,0.838,50,1.045,61,3.571,63,0.462,74,0.218,76,1.173,81,1.135,86,0.122,89,2.557,98,1.814,103,1.797,115,0.005,116,0.005,267,1.405,276,2.658,314,1.209,373,2.54,380,1.527,480,1.477,518,1.527,644,1.953,667,1.628,730,1.751,731,1.721,732,1.721,733,1.751,734,2.468,735,1.721,736,2.7,737,2.162,738,1.606,739,1.751,740,1.751,741,1.751,742,1.751,743,1.751,744,1.751,745,1.634,746,1.751,747,1.751,748,1.751,749,1.691,750,1.751,751,1.721,752,1.751,753,1.751,754,1.751,755,1.751,756,1.751,757,1.606,758,1.751,759,1.721,760,1.751,828,3.496,832,2.088,834,2.537,837,4.265,844,5.005,862,4.148,866,5.418,874,2.724,875,2.943,878,2.724,1002,4.105,1247,3.982,1287,5.418,1293,5.275,1297,4.229,1298,4.229,1303,4.022,1304,3.844,1305,4.022,1307,4.229,1309,4.229,1311,4.478,1359,5.208,1360,6.659,1361,5.142,1366,6.659,2232,4.79,3169,4.229,3171,5.961,3589,5.208,3611,5.842,3612,7.47,3613,5.842,3614,5.842,3615,8.234,3616,5.842,3617,5.842,3618,5.842,3619,5.842,3620,5.842]],["title/classes/Roles.html",[10,0.083,1233,2.127]],["body/classes/Roles.html",[3,0.136,4,0.11,5,0.028,8,0.162,10,0.134,15,0.353,16,1.144,18,2.932,30,0.679,34,3.856,35,2.657,41,2.631,42,3.463,44,0.007,45,0.405,46,0.163,58,1.057,63,0.471,71,2.303,84,4.681,85,4.42,86,0.175,89,2.385,115,0.005,116,0.005,118,1.83,121,1.879,175,3.123,182,2.519,183,1.832,311,7.811,355,2.919,391,2.286,779,5.307,837,5.014,891,3.262,905,7.232,944,3.581,948,3.463,973,6.558,986,4.216,1099,4.234,1233,3.735,1235,5.263,1456,6.558,1508,5.64,2801,4.42,3117,4.204,3213,4.681,3621,5.443,3622,5.007,3623,6.106,3624,7.682,3625,6.106,3626,6.106,3627,7.682,3628,6.299]],["title/guards/RolesGuard.html",[0,3.465,1969,3.669]],["body/guards/RolesGuard.html",[0,5.715,2,5.23,3,0.142,4,0.115,5,0.029,8,0.169,10,0.111,13,1.281,14,7.986,15,0.368,18,1.946,23,1.612,28,7.038,29,6.867,30,0.638,38,3.209,41,2.285,43,1.153,44,0.007,45,0.416,46,0.153,47,1.133,48,4.618,50,1.142,52,1.586,57,4.89,74,0.239,76,1.281,83,4.89,84,4.89,85,4.618,86,0.133,87,2.097,89,2.782,90,5.686,103,2.155,115,0.005,116,0.005,137,2.21,247,3.741,819,2.587,1233,3.81,1234,4.63,1235,4.863,1347,3.618,1351,2.65,1496,4.391,1969,6.052,3558,5.686,3560,5.686,3561,5.686,3629,6.379,3630,6.052,3631,6.379,3632,9.38,3633,6.379,3634,6.379,3635,5.686,3636,6.379,3637,7.038,3638,6.379,3639,6.379,3640,6.379,3641,7.894,3642,6.379,3643,6.379,3644,5.686,3645,6.379]],["title/interfaces/TargetData.html",[327,0.552,1076,2.715]],["body/interfaces/TargetData.html",[3,0.078,4,0.063,5,0.016,8,0.198,9,2.424,10,0.136,15,0.203,16,0.713,38,1.427,41,2.157,43,1.216,44,0.007,45,0.464,46,0.179,47,0.504,50,1.449,51,1.264,52,1.903,58,1.523,63,0.549,66,1.818,71,2.699,74,0.209,86,0.188,88,2.582,115,0.004,116,0.003,121,2.179,144,1.624,172,1.872,174,1.551,180,2.507,203,1.243,240,0.831,264,1.644,285,1.991,295,0.888,296,1.016,314,1.442,319,2.442,327,1.064,329,1.034,383,1.201,384,1.427,389,0.918,392,0.986,398,1.817,400,1.369,402,1.637,423,1.491,432,1.491,434,2.386,445,1.678,484,1.637,574,1.491,626,1.637,667,0.765,668,0.965,671,0.66,673,1.016,703,2.02,714,1.525,761,1.597,832,0.817,842,1.162,890,3.292,891,2.227,967,1.678,986,1.678,995,1.769,1006,1.991,1007,2.059,1009,2.059,1010,2.059,1011,3.076,1012,2.059,1015,2.059,1017,4.558,1019,3.561,1020,3.507,1023,3.162,1026,2.059,1028,2.059,1030,2.059,1031,4.762,1033,1.872,1034,2.84,1035,1.264,1036,3.251,1037,2.059,1038,1.929,1039,4.198,1040,1.872,1041,2.642,1042,1.929,1043,1.991,1044,1.872,1045,3.076,1046,2.059,1047,1.929,1048,4.722,1049,1.818,1050,2.881,1051,2.059,1052,2.059,1053,2.059,1054,2.059,1055,1.991,1056,1.991,1057,2.059,1058,2.059,1059,2.059,1060,2.059,1061,2.059,1062,2.059,1063,2.059,1064,2.059,1065,2.059,1066,2.059,1067,2.059,1068,3.56,1069,2.059,1070,2.881,1071,2.974,1072,2.796,1073,2.134,1074,2.974,1075,1.872,1076,3.56,1077,3.094,1078,4.231,1079,1.872,1080,3.076,1081,4.989,1082,2.059,1083,2.059,1084,2.059,1085,2.059,1086,2.059,1087,2.059,1088,1.991,1089,1.991,1090,1.818,1091,2.059,1092,2.134,1093,2.059,1094,2.059,1095,2.134,1096,2.134,1097,1.929,1098,2.059,1099,1.769,1100,1.929,1101,1.991,1102,1.722,1103,1.769,1104,1.929,1105,2.059,1106,1.991,1107,2.134,1108,2.134,1109,3.507,1110,2.881,1111,3.346,1112,2.059,1113,2.059,1114,5.083,1115,4.75,1116,4.528,1117,2.134,1118,2.059,1119,2.059,1120,3.076,1121,2.881,1122,2.134,1123,1.872,1124,2.716,1125,3.815,1126,2.059,1127,2.059,1128,1.872,1129,3.187,1130,2.134,1131,2.134,1132,2.134,1133,2.134,1134,1.458,1135,1.991,1136,1.872,1137,2.059,1138,1.314,1139,1.56,1140,2.134,1141,2.134]],["title/classes/TmpDirCleanerProcess.html",[10,0.083,3646,4.267]],["body/classes/TmpDirCleanerProcess.html",[3,0.095,4,0.077,5,0.032,8,0.214,9,2.252,10,0.122,15,0.246,16,0.821,17,5.805,18,2.622,19,4.331,21,3.762,23,1.232,24,3.044,25,2.408,30,0.759,34,3.811,43,1.175,44,0.007,45,0.425,46,0.176,47,1.199,49,3.492,50,1.64,51,1.533,58,1.045,63,0.469,74,0.224,76,0.855,86,0.089,87,1.476,88,1.191,89,2.368,93,2.791,98,1.322,103,1.452,115,0.004,116,0.004,117,7.751,118,1.276,122,4.08,126,4.949,127,5.828,128,6.253,129,6.249,130,5.38,131,6.249,132,6.249,133,5.38,134,3.532,135,5.075,136,5.38,137,2.091,140,2.802,142,5.083,146,5.374,147,4.198,148,3.796,149,3.95,151,5.374,152,3.852,153,6.249,154,3.796,155,6.249,156,6.249,157,6.249,158,3.796,159,3.796,161,3.796,163,4.626,164,3.796,166,2.932,167,2.036,169,3.265,170,3.265,172,2.271,173,3.796,174,1.365,175,3.1,177,3.796,178,5.018,179,3.265,180,2.036,181,3.268,182,1.809,183,0.928,184,1.769,185,2.416,186,5.38,188,3.083,212,2.589,216,3.796,314,1.234,317,3.423,429,3.54,766,2.802,770,2.802,823,2.885,826,2.416,828,1.808,830,2.271,831,2.589,891,2.563,920,2.802,925,2.036,1137,3.54,1177,2.678,1257,6.369,1361,4.155,1400,3.423,1543,5.501,1594,4.626,1603,2.802,1655,3.265,1681,3.492,1716,5.846,1742,3.265,1801,3.265,1826,3.796,1834,3.796,2203,3.492,2483,4.949,3646,5.38,3647,7.01,3648,4.259,3649,6.035,3650,6.253,3651,6.035,3652,4.259,3653,4.259,3654,4.259,3655,4.259,3656,4.259,3657,6.035,3658,6.035,3659,6.035,3660,4.259,3661,6.035,3662,7.01,3663,6.035,3664,7.626,3665,7.626,3666,7.626,3667,4.626,3668,4.259,3669,4.259,3670,4.259,3671,4.259,3672,4.259,3673,4.259,3674,4.259,3675,4.259,3676,4.259,3677,4.259,3678,4.259,3679,4.259,3680,4.259,3681,4.259,3682,4.259,3683,4.259,3684,4.259,3685,4.259,3686,4.259,3687,4.259,3688,4.259,3689,4.259,3690,4.259,3691,4.259]],["title/classes/TooManyRequestsMsException.html",[10,0.083,3692,4.267]],["body/classes/TooManyRequestsMsException.html",[3,0.156,4,0.127,5,0.032,8,0.187,10,0.122,30,0.567,43,1.026,44,0.006,45,0.371,46,0.136,47,1.008,63,0.501,74,0.21,76,1.411,86,0.146,115,0.005,116,0.005,118,2.105,137,2.434,181,3.902,184,2.918,212,4.27,604,4.001,823,4.001,831,4.27,942,4.836,943,5.285,944,4.91,946,6.511,947,5.508,948,5.365,949,5.763,950,4.836,951,4.622,952,4.836,3692,7.462,3693,8.37,3694,9.458,3695,7.024,3696,6.262,3697,6.262,3698,7.024,3699,7.024]],["title/classes/UnauthorizedMsException.html",[10,0.083,3700,4.267]],["body/classes/UnauthorizedMsException.html",[3,0.159,4,0.129,5,0.032,8,0.189,10,0.124,30,0.576,35,2.255,43,1.042,44,0.006,45,0.376,46,0.139,47,1.024,63,0.505,74,0.212,76,1.433,86,0.149,115,0.005,116,0.005,118,2.138,137,2.472,181,3.939,184,2.964,604,4.038,823,4.038,942,4.912,943,5.335,944,4.955,946,5.816,947,5.559,948,5.387,949,5.816,950,4.912,951,4.695,952,4.912,2772,6.36,3700,7.531,3701,8.448,3702,9]],["title/interfaces/UpsertMediaRequest.html",[327,0.552,1191,2.552]],["body/interfaces/UpsertMediaRequest.html",[3,0.083,4,0.068,5,0.044,8,0.1,9,2.463,10,0.153,13,1.444,15,0.217,16,0.749,25,1.735,35,1.74,41,1.086,44,0.007,45,0.481,46,0.189,47,1.148,52,1.662,58,1.432,63,0.552,74,0.192,81,0.729,86,0.19,115,0.004,116,0.004,121,2.118,144,1.527,174,1.37,175,1.525,183,0.818,203,1.169,240,1.544,292,3.504,296,1.086,314,1.573,327,1.06,329,1.105,332,1.71,338,1.593,359,1.433,364,3.849,365,3.376,366,1.593,378,1.667,383,2.257,388,1.838,389,2.264,390,3.326,391,3.097,392,1.765,397,1.404,398,2.261,399,1.667,403,2.771,404,1.525,405,1.805,409,2.239,410,2.287,418,1.462,419,1.493,452,3.254,453,3.195,454,3.254,468,1.629,474,1.667,482,1.493,635,1.667,650,2.9,662,1.558,667,0.818,668,1.031,671,0.705,763,1.667,842,1.22,881,3.287,963,4.028,965,1.275,970,2.692,1034,2.711,1035,1.35,1134,1.558,1138,1.404,1150,1.943,1151,2,1152,2,1154,2,1159,2,1162,2.852,1164,2,1166,2,1168,2.506,1169,2.061,1170,1.943,1171,2.061,1172,2.061,1173,3.724,1174,2.936,1175,1.943,1176,2.061,1177,2.103,1178,3.724,1179,2,1180,1.943,1181,2.936,1182,2,1183,2.061,1184,3.724,1185,2.061,1186,3.38,1187,2,1188,3.201,1189,3.966,1190,3.026,1191,2.936,1192,3.271,1193,3.951,1194,3.951,1195,2.936,1196,4.083,1197,2,1198,2.936,1199,1.889,1200,1.889,1201,2.061,1202,2.061,1203,1.889,1204,1.889,1205,1.889,1206,2.061,1207,2.061,1208,1.889,1209,2.061,1210,2.061,1211,1.793,1212,1.943]],["title/interfaces/User.html",[71,1.435,327,0.552]],["body/interfaces/User.html",[3,0.115,4,0.093,5,0.023,8,0.137,9,2.533,10,0.16,13,1.385,15,0.299,16,0.938,22,2.678,35,1.634,44,0.007,45,0.364,46,0.188,52,1.663,58,1.433,63,0.566,71,2.962,74,0.208,86,0.192,115,0.004,116,0.004,121,2.11,144,1.56,174,1.234,203,1.295,240,2.1,276,3.925,288,2.841,291,3.925,296,1.497,327,1.06,329,1.523,358,2.411,383,1.975,384,2.102,392,1.297,405,2.968,667,1.127,668,1.422,671,0.972,842,1.528,854,2.353,963,3.969,965,1.758,966,2.757,970,2.582,1034,2.544,1035,1.861,1168,3.767,1213,3.143,1214,3.265,1219,3.265,1221,3.265,1223,3.265,1225,3.265,1227,5.242,1228,5.446,1229,5.446,1230,5.242,1231,5.446,1232,5.242,1233,3.833,1234,5.059,1235,3.912,1236,4.901,1237,3.265,1238,3.265,1239,3.265,1240,3.265,1241,3.265,1242,3.265,1243,3.143]],["title/classes/UserDto.html",[10,0.083,966,2.552]],["body/classes/UserDto.html",[3,0.111,4,0.09,5,0.023,8,0.132,9,2.511,10,0.159,13,1.531,15,0.288,16,0.916,22,2.585,30,0.762,35,1.577,44,0.007,45,0.355,46,0.188,52,1.531,58,1.413,63,0.561,71,2.952,74,0.205,86,0.19,115,0.004,116,0.004,118,1.496,121,1.996,144,1.548,174,1.364,203,1.244,240,2.017,276,3.714,288,2.742,291,3.714,296,1.445,327,1.035,358,2.326,383,1.869,384,2.029,392,1.267,405,2.878,667,1.088,668,1.372,671,0.938,676,2.55,842,1.492,854,2.271,963,4.082,965,1.697,966,3.591,970,2.854,1034,2.498,1035,1.796,1168,3.996,1213,3.033,1214,3.151,1219,3.151,1221,3.151,1223,3.151,1225,3.151,1227,4.96,1228,5.153,1229,5.153,1230,4.96,1231,5.153,1232,4.96,1233,3.627,1234,4.471,1235,3.82,1236,5.153,1237,3.151,1238,3.151,1239,3.151,1240,3.151,1241,3.151,1242,3.151,1243,3.033,2777,3.613,3703,4.99,3704,4.99,3705,4.99,3706,4.99,3707,4.99,3708,4.99,3709,4.99,3710,4.99,3711,4.99,3712,4.99,3713,4.99]],["title/entities/UserEntity.html",[264,0.801,297,3.15]],["body/entities/UserEntity.html",[3,0.112,4,0.091,5,0.031,8,0.134,10,0.118,13,1.012,15,0.528,16,0.923,30,0.763,44,0.007,45,0.465,46,0.187,52,1.362,63,0.54,71,2.296,74,0.206,81,0.98,86,0.105,87,2.328,115,0.004,116,0.004,182,2.032,203,1.119,240,1.605,264,1.283,267,1.213,276,3.486,291,3.486,295,1.274,297,4.462,319,2.222,380,1.318,389,2.003,393,2.143,405,2.511,480,1.274,501,3.161,518,1.318,644,1.773,673,1.459,676,2.555,677,4.21,678,3.812,703,2.182,704,3.86,708,3.914,730,1.511,731,1.485,732,1.485,733,1.511,734,2.296,735,1.485,736,2.605,737,1.963,738,1.386,739,1.511,740,1.511,741,1.511,742,1.511,743,1.511,744,1.511,745,1.41,746,1.511,747,1.511,748,1.511,749,1.459,750,1.511,751,1.485,752,1.511,753,1.511,754,1.511,755,1.511,756,1.511,757,1.386,758,1.511,759,1.485,760,1.511,1036,4.245,1038,2.77,1227,4.657,1228,4.838,1229,4.838,1230,4.657,1231,4.838,1232,4.657,1233,3.405,1265,3.649,1351,3.658,1381,2.472,1382,2.957,1384,4.807,1385,2.611,1386,4.281,1403,5.198,1405,3.615,1406,3.615,1407,3.512,1437,3.864,1899,3.864,1943,3.47,2067,4.133,2127,3.47,2128,4.668,2129,4.668,2131,4.668,2134,5.56,2137,4.133,3714,5.041,3715,4.909,3716,5.041,3717,5.041,3718,5.041,3719,6.78,3720,5.041,3721,5.041,3722,6.78,3723,5.041,3724,5.041,3725,5.041,3726,5.041,3727,5.041,3728,5.041,3729,5.041]],["title/injectables/UserEntityPwdAndRolesSaveHandler.html",[819,1.569,3730,4.267]],["body/injectables/UserEntityPwdAndRolesSaveHandler.html",[3,0.148,4,0.12,5,0.03,8,0.177,10,0.116,13,1.338,15,0.384,23,1.655,30,0.538,43,0.972,44,0.006,45,0.351,46,0.129,47,0.955,50,1.192,63,0.49,71,2.94,74,0.228,76,1.338,86,0.139,103,1.602,115,0.005,116,0.005,264,1.357,266,5.334,317,4.956,614,4.927,632,4.927,673,2.346,722,5.527,759,2.387,819,2.656,821,3.105,967,3.183,1017,3.105,1090,4.198,1091,4.754,1097,4.454,1098,4.754,1099,4.402,1233,3.883,1497,4.585,1887,4.205,3644,5.937,3730,7.226,3731,8.106,3732,8.106,3733,8.106,3734,6.659,3735,7.226,3736,6.659,3737,6.659,3738,6.659,3739,6.659,3740,6.659,3741,6.659,3742,6.659]],["title/modules/UserModule.html",[832,1.114,854,2.178]],["body/modules/UserModule.html",[3,0.134,4,0.109,5,0.035,8,0.16,10,0.105,22,4.329,23,1.232,30,0.487,43,0.881,44,0.007,45,0.318,46,0.117,47,0.865,50,1.08,71,1.808,74,0.239,76,1.212,81,1.172,86,0.126,103,1.451,115,0.005,116,0.005,124,4.189,182,1.808,183,1.315,267,1.451,297,3.97,298,4.624,380,1.577,480,1.525,501,3.554,518,1.577,533,4.064,644,1.993,667,1.662,671,1.434,712,2.681,730,1.808,731,1.777,732,1.777,733,1.808,734,2.505,735,1.777,736,2.719,737,2.207,738,1.659,739,1.808,740,1.808,741,1.808,742,1.808,743,1.808,744,1.808,745,1.687,746,1.808,747,1.808,748,1.808,749,1.746,750,1.808,751,1.777,752,1.808,753,1.808,754,1.808,755,1.808,756,1.808,757,1.659,758,1.808,759,1.777,760,1.808,832,2.108,834,2.62,837,3.949,838,5.016,839,3.97,842,1.852,844,5.08,850,4.064,851,3.667,852,3.554,853,3.667,854,3.803,861,4.367,862,2.884,874,2.812,875,3.039,876,3.538,877,4.624,878,2.812,1243,5.337,1244,6.853,1265,4.367,1267,3.216,1429,3.97,3547,6.853,3715,5.519,3743,6.032,3744,6.032,3745,6.032,3746,6.032,3747,6.032]],["title/interfaces/UserRole.html",[327,0.552,1234,2.807]],["body/interfaces/UserRole.html",[3,0.122,4,0.099,5,0.025,8,0.146,9,2.571,10,0.162,13,1.441,15,0.317,16,0.976,22,2.843,35,1.735,44,0.007,45,0.464,46,0.178,52,1.441,58,1.384,63,0.561,71,2.972,74,0.213,86,0.194,115,0.005,116,0.005,121,2.151,144,1.578,174,1.284,203,1.167,240,2.135,276,3.265,288,3.016,291,3.265,296,1.589,327,1.074,329,1.617,358,2.559,383,1.83,384,2.231,392,1.654,405,3.012,667,1.197,668,1.509,671,1.032,842,1.59,854,2.498,963,4.005,965,1.867,966,2.926,970,2.686,1034,2.882,1035,1.976,1168,3.857,1213,3.336,1214,3.466,1219,3.466,1221,3.466,1223,3.466,1225,3.466,1227,4.361,1228,4.53,1229,4.53,1230,4.361,1231,4.53,1232,4.361,1233,3.188,1234,4.972,1235,4.534,1236,5.047,1237,3.466,1238,3.466,1239,3.466,1240,3.466,1241,3.466,1242,3.466,1243,3.336]],["title/classes/UserRoleDto.html",[10,0.083,1236,3.022]],["body/classes/UserRoleDto.html",[3,0.121,4,0.098,5,0.025,8,0.144,9,2.563,10,0.162,13,1.595,15,0.313,16,0.968,22,2.806,30,0.642,35,1.712,44,0.007,45,0.445,46,0.178,52,1.429,58,1.46,63,0.56,71,2.968,74,0.212,86,0.194,115,0.005,116,0.005,118,1.624,121,2.063,144,1.574,174,1.421,203,1.16,240,2.073,276,3.237,288,2.977,291,3.237,296,1.568,327,1.056,358,2.526,383,1.819,384,2.202,392,1.586,405,2.946,667,1.181,668,1.49,671,1.019,676,2.147,842,1.576,854,2.465,963,4.038,965,1.842,966,2.888,970,2.973,1034,2.764,1035,1.95,1168,3.985,1213,3.293,1214,3.421,1219,3.421,1221,3.421,1223,3.421,1225,3.421,1227,4.324,1228,4.492,1229,4.492,1230,4.324,1231,4.492,1232,4.324,1233,3.161,1234,4.946,1235,4.505,1236,5.325,1237,3.421,1238,3.421,1239,3.421,1240,3.421,1241,3.421,1242,3.421,1243,3.293,3748,5.418,3749,5.418,3750,5.418]],["title/entities/UserRoleEntity.html",[264,0.801,1036,2.479]],["body/entities/UserRoleEntity.html",[3,0.136,4,0.111,5,0.035,8,0.163,10,0.107,13,1.232,15,0.51,16,1.048,30,0.68,44,0.007,45,0.466,46,0.177,63,0.432,74,0.211,81,1.193,86,0.128,87,1.885,115,0.005,116,0.005,240,1.824,264,1.41,267,1.476,295,1.551,380,1.604,389,1.604,392,1.584,393,2.436,405,2.761,480,1.551,501,3.592,518,1.604,644,2.014,673,1.776,676,2.278,730,1.839,731,1.807,732,1.807,733,1.839,734,2.525,735,1.807,736,2.729,737,2.231,738,1.687,739,1.839,740,1.839,741,1.839,742,1.839,743,1.839,744,1.839,745,1.716,746,1.839,747,1.839,748,1.839,749,1.776,750,1.839,751,1.807,752,1.839,753,1.839,754,1.839,755,1.839,756,1.839,757,1.687,758,1.839,759,1.807,760,1.839,1036,3.991,1077,2.727,1233,3.424,1234,4.52,1265,4.442,1381,3.01,1389,4.577,1390,3.73,1391,4.234,1392,3.73,1405,4.108,1406,4.108,1410,3.372,1888,3.875,1891,3.48,1897,4.038,2127,4.224,2128,5.305,2129,5.305,2131,5.305,3715,5.578,3751,8.836,3752,6.136,3753,6.136,3754,6.136,3755,6.136,3756,6.136]],["title/classes/UserService.html",[10,0.083,22,2.479]],["body/classes/UserService.html",[3,0.113,4,0.091,5,0.023,8,0.135,9,2.738,10,0.162,13,1.368,15,0.293,22,3.529,23,1.391,30,0.692,35,1.605,43,1.251,44,0.007,45,0.476,46,0.18,47,1.23,50,1.534,52,1.368,58,1.331,63,0.562,71,2.988,74,0.206,86,0.191,115,0.004,116,0.004,118,1.522,121,2.097,144,1.613,174,1.219,203,1.288,240,1.945,276,3.1,288,2.789,291,3.499,296,1.47,327,1.039,358,2.367,383,1.761,384,2.064,392,1.281,405,2.693,482,2.712,667,1.107,668,1.396,671,0.955,842,1.704,854,2.31,963,3.958,965,1.726,966,2.706,970,2.551,1034,2.52,1035,1.827,1168,3.739,1213,3.085,1214,3.205,1219,3.205,1221,3.205,1223,3.205,1225,3.205,1227,4.141,1228,4.302,1229,4.302,1230,4.141,1231,4.302,1232,4.141,1233,3.028,1234,4.51,1235,3.864,1236,4.855,1237,3.205,1238,4.302,1239,4.302,1240,4.302,1241,4.302,1242,4.302,1243,3.085,1250,6.073,1251,6.073,1252,6.073,1253,6.073,3757,5.076,3758,5.076,3759,5.076,3760,5.076,3761,5.076]],["title/classes/UserSubscriber.html",[10,0.083,3762,4.267]],["body/classes/UserSubscriber.html",[3,0.139,4,0.113,5,0.028,8,0.166,9,1.753,10,0.109,13,1.568,15,0.362,16,1.062,17,5.17,18,2.594,23,1.594,24,2.952,30,0.719,43,1.14,44,0.006,45,0.412,46,0.178,47,1.12,50,1.522,65,4.746,71,1.878,74,0.224,86,0.131,93,2.972,103,1.508,115,0.005,116,0.005,118,1.878,170,5.985,182,1.878,183,1.366,261,6.402,264,1.307,268,7.3,275,6.961,276,3.553,282,7.936,283,7.936,286,5.985,287,6.402,288,4.291,291,3.553,294,5.587,295,1.585,297,6.146,432,3.315,471,4.429,823,2.996,2850,7.582,2851,6.961,3762,6.961,3763,6.267,3764,8.505,3765,7.808,3766,7.808,3767,8.903,3768,6.267,3769,7.808,3770,6.267,3771,7.808,3772,6.267,3773,6.267,3774,6.267,3775,7.808,3776,7.808,3777,6.267]],["title/interfaces/UserUpdateRequest.html",[327,0.552,1237,3.022]],["body/interfaces/UserUpdateRequest.html",[3,0.123,4,0.1,5,0.025,8,0.147,9,2.575,10,0.163,13,1.447,15,0.319,16,0.98,22,2.862,35,2.278,44,0.007,45,0.38,46,0.176,52,1.447,58,1.388,63,0.562,71,2.999,74,0.213,86,0.194,115,0.005,116,0.005,121,2.156,144,1.58,174,1.29,203,1.32,240,2.011,276,3.279,288,3.96,291,3.279,296,1.6,327,1.076,329,1.627,358,2.576,383,1.836,384,2.246,392,1.355,405,2.785,667,1.205,668,1.519,671,1.039,842,1.597,854,2.514,963,4.009,965,1.879,966,2.946,970,2.698,1034,2.628,1035,1.989,1168,3.867,1213,3.358,1214,3.489,1219,3.489,1221,3.489,1223,3.489,1225,3.489,1227,4.38,1228,4.55,1229,4.55,1230,4.38,1231,4.55,1232,4.38,1233,3.202,1234,4.703,1235,4.087,1236,5.063,1237,4.55,1238,3.489,1239,3.489,1240,3.489,1241,3.489,1242,3.489,1243,3.358]],["title/interfaces/VideoFileMetadata.html",[327,0.552,446,2.807]],["body/interfaces/VideoFileMetadata.html",[3,0.048,4,0.039,5,0.043,8,0.095,10,0.11,15,0.206,16,0.721,25,0.572,33,2.074,38,0.874,40,1.307,41,0.622,44,0.007,45,0.354,46,0.172,52,0.432,53,4.506,58,0.372,63,0.56,69,2.36,74,0.133,81,0.418,86,0.156,115,0.002,116,0.002,121,1.99,122,1.546,123,1.181,134,1.083,144,0.887,147,1.028,152,3.682,167,1.702,174,1.631,175,2.154,183,0.993,203,1.147,240,1.586,267,0.517,279,1.956,292,2.667,296,0.622,314,1.569,327,0.985,328,2.088,329,0.633,330,1.307,331,4.815,332,2.485,333,2.164,334,2.164,335,4.112,336,4.265,337,1.307,338,3.087,339,3.976,340,2.164,341,2.164,342,1.307,343,1.307,344,2.088,345,2.164,346,2.164,347,3.708,348,1.358,349,1.358,350,1.358,351,2.878,352,3.221,353,3.59,354,3.712,355,4.498,356,2.088,357,1.358,358,3.848,359,0.821,360,1.307,361,1.358,362,2.878,363,2.504,364,3.711,365,3.372,366,3.087,367,1.261,368,1.358,369,1.358,370,1.358,371,1.358,372,1.358,373,0.731,374,1.358,375,1.358,376,1.358,377,2.878,378,2.025,379,1.358,380,1.191,381,1.358,382,1.358,383,1.213,384,0.874,385,1.844,386,1.844,387,1.181,388,1.188,389,0.931,390,0.934,391,1.706,392,0.404,393,1.675,394,1.546,395,1.307,396,3.708,397,1.333,398,1.836,399,0.955,400,1.388,401,2.088,402,1.002,403,1.935,404,2.956,405,0.705,406,2.164,407,1.358,408,1.62,409,0.874,410,0.893,411,1.358,412,1.358,413,1.307,414,4.682,415,1.358,416,5.363,417,1.358,418,1.388,419,0.856,420,2.088,421,3.59,422,2.248,423,0.913,424,2.77,425,2.77,426,1.358,427,2.088,428,3.376,429,2.673,430,2.878,431,4.682,432,0.913,433,3.996,434,1.62,435,2.088,436,3.712,437,1.358,438,1.307,439,1.307,440,1.358,441,4.732,442,2.878,443,2.248,444,5.116,445,1.028,446,2.673,447,2.248,448,2.164,449,1.358,450,1.358,451,1.307,452,3.125,453,3.416,454,3.125,455,2.248,456,1.307,457,2.164,458,1.358,459,3.478,460,2.164,461,2.164,462,1.307,463,1.358,464,1.358,465,1.307,466,3.569,467,1.307,468,1.546,469,1.358,470,1.307,471,1.219,472,1.358,473,1.146,474,2.813,475,1.358,476,1.358,477,1.358,478,2.825,479,1.307,480,1.485,481,2.248,482,1.417,483,1.307,484,2.125,485,2.77,486,1.307,487,1.307,488,1.307,489,1.261,490,3.708,491,1.358,492,1.307,493,1.307,494,1.307,495,1.358,496,1.358,497,1.358,498,1.307,499,1.307,500,1.358,501,1.002,502,1.307,503,1.307,504,2.878,505,1.307,506,1.307,507,2.77,508,2.248,509,3.996,510,2.02,511,2.248,512,1.307,513,1.307,514,1.358,515,1.307,516,1.358,517,1.307,518,0.562,519,1.307,520,1.358,521,1.307,522,1.307,523,1.261,524,3.346,525,1.358,526,1.956,527,2.248,528,1.358,529,2.248,530,1.358,531,1.358,532,1.358,533,1.146,534,1.358,535,1.358,536,1.358,537,1.358,538,2.248,539,1.358,540,2.248,541,1.358,542,2.164,543,2.248,544,1.307,545,1.358,546,1.358,547,2.878,548,1.358,549,3.346,550,2.878,551,2.878,552,2.878,553,1.358,554,4.427,555,1.358,556,3.108,557,4.231,558,1.358,559,1.358,560,1.358,561,2.248,562,2.248,563,1.358,564,1.358,565,1.358,566,1.358,567,1.358,568,1.358,569,1.358,570,1.358,571,2.248,572,1.358,573,1.358,574,0.913,575,1.358,576,2.248,577,2.164,578,1.358,579,1.358,580,1.358,581,1.358,582,1.261,583,2.248,584,3.996,585,1.358,586,1.358,587,2.878,588,1.358,589,1.358,590,1.358,591,3.569,592,1.358,593,1.358,594,1.358,595,1.358,596,2.878,597,2.248,598,1.358,599,1.358,600,2.248,601,1.358,602,2.248,603,1.358,604,1.028,605,1.358,606,3.708,607,1.358,608,1.358,609,1.358,610,1.219,611,1.358,612,1.028,613,4.231,614,3.221,615,1.358,616,1.358,617,2.248,618,2.248,619,2.248,620,2.878,621,1.358,622,1.358,623,1.358,624,1.358,625,1.307,626,1.002,627,1.307,628,1.358,629,1.358,630,1.358,631,2.164,632,1.307,633,1.358,634,1.358,635,0.955,636,2.878,637,2.164,638,2.248,639,2.248,640,2.248,641,2.248,642,2.248,643,3.346,644,0.931,645,2.164,646,3.221,647,2.248,648,3.221,649,3.221,650,1.582,651,2.248,652,2.248,653,2.248,654,2.248,655,3.221,656,2.248,657,2.248,658,2.248,659,3.221,660,1.261,661,1.307,662,0.893,663,1.181,664,1.307,665,1.307,666,1.307,667,0.469,668,0.591,669,1.114,670,1.261,671,0.404]],["title/entities/VideoFileMetadataEntity.html",[264,0.801,2172,3.669]],["body/entities/VideoFileMetadataEntity.html",[3,0.111,4,0.09,5,0.044,8,0.132,10,0.087,13,1.001,15,0.555,16,0.916,30,0.772,44,0.007,45,0.493,46,0.186,61,3.642,63,0.544,74,0.169,86,0.104,87,2.432,115,0.004,116,0.004,182,2.631,203,1.112,218,3.097,264,1.275,295,1.26,314,1.513,326,4.633,332,2.09,335,4.469,336,4.469,338,3.235,339,4.322,393,2.127,444,3.698,446,3.948,452,3.097,454,3.097,591,4.631,646,4.631,648,4.631,649,4.631,655,4.631,659,4.631,673,1.443,675,3.432,676,2.585,677,5.015,678,3.944,679,4.088,680,4.444,681,4.811,682,3.822,683,3.822,686,3.822,687,4.088,688,5.519,689,5.519,690,5.519,691,4.444,693,2.582,694,3.609,697,3.822,699,3.609,700,4.444,702,4.444,703,1.604,704,3.391,705,2.739,707,2.582,708,4.055,709,4.322,710,4.088,2172,5.159,3778,9.615,3779,6.73,3780,6.73,3781,6.73,3782,4.985,3783,6.73,3784,6.73,3785,4.985,3786,4.985]],["title/modules/WarlockModule.html",[832,1.114,3462,3.465]],["body/modules/WarlockModule.html",[3,0.124,4,0.101,5,0.033,8,0.148,10,0.097,21,3.674,24,1.766,44,0.007,63,0.313,74,0.24,76,1.122,81,1.086,86,0.116,89,1.735,93,1.865,103,1.939,115,0.005,116,0.005,144,0.935,267,1.344,276,2.542,277,4.412,312,3.677,380,1.461,480,1.413,518,1.461,612,3.469,644,1.897,730,1.675,731,1.646,732,1.646,733,1.675,734,2.416,735,1.646,736,2.672,737,2.101,738,1.536,739,1.675,740,1.675,741,1.675,742,1.675,743,1.675,744,1.675,745,1.563,746,1.675,747,1.675,748,1.675,749,1.617,750,1.675,751,1.646,752,1.675,753,1.675,754,1.675,755,1.675,756,1.675,757,1.536,758,1.675,759,1.646,760,1.675,828,3.082,832,2.059,834,2.426,852,3.384,862,3.854,866,4.776,874,3.384,875,2.815,878,3.384,1002,3.07,1247,3.87,1280,3.07,1281,3.396,1282,3.396,1283,3.396,1287,5.82,1288,3.396,1289,3.169,1292,4.583,1293,5.376,1295,4.045,1296,3.528,1297,4.045,1298,4.045,1302,4.581,1303,3.846,1304,3.677,1305,3.846,1306,4.581,1307,4.045,1308,4.581,1309,4.045,1310,4.581,1311,4.283,1312,4.581,1313,4.581,1793,4.412,2547,4.776,3143,4.981,3169,4.045,3171,5.254,3172,4.981,3378,5.564,3414,6.241,3462,6.563,3787,5.587,3788,5.587,3789,5.587,3790,6.47,3791,6.47,3792,4.045,3793,5.587,3794,5.587,3795,7.258,3796,5.587,3797,5.587,3798,5.587,3799,5.587,3800,5.587,3801,7.258,3802,5.587,3803,5.587,3804,8.062]],["title/classes/XdbExportService.html",[10,0.083,3805,3.295]],["body/classes/XdbExportService.html",[3,0.095,4,0.077,5,0.027,8,0.114,9,2.536,10,0.14,15,0.247,23,1.236,24,1.913,30,0.345,33,1.946,43,0.624,44,0.007,45,0.226,46,0.083,47,0.614,50,1.54,51,1.54,52,1.216,53,2.098,58,1.323,61,3.359,63,0.24,74,0.202,86,0.191,87,1.869,88,2.255,89,3.011,98,1.88,103,2.181,115,0.004,116,0.004,118,1.282,121,1.046,125,4.121,144,1.401,149,2.215,151,3.279,174,1.6,183,0.932,295,1.081,312,3.983,354,2.509,391,1.601,408,2.754,761,3.476,811,4.198,890,1.739,891,1.816,925,2.044,1017,2.822,1019,2.044,1033,3.746,1049,3.136,1075,3.746,1103,4.336,1123,2.28,1124,2.215,1128,3.227,1136,4.073,1138,3.019,1139,3.122,1180,2.215,1192,3.476,1351,3.174,1424,5.386,1456,4.167,1465,3.551,1549,3.279,1574,4.64,1576,4.64,1793,4.901,1819,5.26,2196,4.964,2520,2.814,2547,4.624,3215,3.096,3216,3.096,3610,3.279,3792,3.096,3805,4.167,3806,3.822,3807,3.822,3808,3.507,3809,5.627,3810,6.053,3811,5.396,3812,5.531,3813,4.277,3814,4.64,3815,6.418,3816,3.279,3817,6.231,3818,4.64,3819,3.279,3820,4.964,3821,7.029,3822,3.813,3823,2.944,3824,3.813,3825,3.813,3826,3.279,3827,3.507,3828,3.813,3829,4.964,3830,3.507,3831,3.507,3832,3.507,3833,3.507,3834,3.813,3835,3.813,3836,3.813,3837,3.813,3838,3.813,3839,3.813,3840,3.813,3841,5.396,3842,3.813,3843,3.813,3844,3.813,3845,3.813,3846,5.761,3847,4.964,3848,3.813,3849,3.813,3850,3.813,3851,5.396,3852,5.396,3853,3.813,3854,3.813,3855,3.813,3856,3.813,3857,3.813,3858,3.813,3859,3.813,3860,3.813,3861,3.813,3862,3.813,3863,3.813,3864,3.813,3865,3.813,3866,3.813,3867,3.813,3868,3.813,3869,3.813,3870,3.813,3871,3.813,3872,3.507,3873,5.396,3874,5.396,3875,6.811,3876,3.813,3877,7.188,3878,3.813,3879,5.396,3880,3.813,3881,3.813,3882,3.813,3883,3.813,3884,3.813,3885,3.813,3886,3.813,3887,3.813]],["title/classes/XdbImportService.html",[10,0.083,3823,3.295]],["body/classes/XdbImportService.html",[3,0.093,4,0.076,5,0.027,8,0.111,9,2.581,10,0.139,15,0.242,23,1.22,24,1.888,30,0.483,33,1.91,43,0.872,44,0.007,45,0.315,46,0.116,47,0.857,50,1.566,51,1.511,52,1.2,53,2.059,58,1.311,61,3.324,63,0.235,74,0.209,86,0.188,87,1.853,88,2.239,89,3.005,98,1.855,103,2.172,115,0.004,116,0.004,118,1.258,121,1.027,125,4.079,144,1.433,149,2.174,151,3.218,174,1.635,183,0.915,295,1.061,312,3.931,354,2.462,391,1.572,408,2.718,761,3.447,811,4.163,890,1.707,891,1.782,925,2.007,1017,2.785,1033,3.708,1049,3.094,1075,3.708,1103,4.313,1123,2.238,1124,2.174,1128,3.185,1136,4.039,1138,2.997,1139,3.091,1180,2.174,1192,3.786,1351,3.147,1424,5.331,1456,4.113,1465,3.504,1549,3.218,1574,4.579,1576,4.579,1793,4.866,1819,5.216,2196,4.898,2520,2.762,2547,4.576,3215,3.039,3216,3.039,3610,3.218,3792,3.039,3805,2.89,3806,4.391,3807,4.391,3808,3.442,3809,5.656,3811,3.742,3812,4.325,3814,4.579,3815,6.378,3816,3.218,3817,6.446,3818,4.579,3819,3.218,3820,4.898,3821,7.004,3822,3.742,3823,4.113,3824,5.325,3825,5.325,3826,3.218,3827,3.442,3828,3.742,3829,4.898,3830,3.442,3831,3.442,3832,3.442,3833,3.442,3834,3.742,3835,3.742,3836,3.742,3837,3.742,3838,3.742,3839,3.742,3840,3.742,3841,5.325,3842,3.742,3843,3.742,3844,3.742,3845,3.742,3846,5.703,3847,4.898,3848,3.742,3849,3.742,3850,3.742,3851,5.325,3852,5.325,3853,3.742,3854,3.742,3855,3.742,3856,3.742,3857,3.742,3858,3.742,3859,3.742,3860,3.742,3861,3.742,3862,3.742,3863,3.742,3864,3.742,3865,3.742,3866,3.742,3867,3.742,3868,3.742,3869,3.742,3870,3.742,3871,3.742,3872,3.442,3873,5.325,3874,5.325,3875,6.754,3876,3.742,3877,7.137,3878,3.742,3879,5.325,3880,3.742,3881,3.742,3882,3.742,3883,3.742,3884,3.742,3885,3.742,3886,3.742,3887,3.742,3888,5.974,3889,5.974,3890,4.198,3891,4.198,3892,4.198]],["title/interfaces/XdbRequest.html",[327,0.552,3893,4.267]],["body/interfaces/XdbRequest.html",[3,0.114,4,0.092,5,0.04,8,0.136,10,0.135,15,0.296,16,0.933,35,2.168,43,0.749,44,0.007,45,0.362,46,0.193,52,1.378,58,0.888,63,0.559,71,2.317,74,0.222,86,0.2,115,0.004,116,0.004,121,2.318,144,0.858,174,1.748,183,1.495,203,1.256,264,0.858,295,1.297,296,1.485,314,0.83,327,0.891,329,1.511,332,1.592,383,1.571,392,1.29,394,2.227,397,1.92,408,2.334,434,2.334,556,3.008,667,1.118,668,1.41,844,4.169,862,2.451,925,3.279,967,2.451,1017,4.126,1033,3.657,1075,3.657,1103,2.584,1128,4.4,1138,2.894,1262,3.375,1490,3.531,1523,3.931,1552,4.205,1819,3.531,1851,4.205,3266,4.572,3805,3.531,3806,3.238,3807,3.238,3809,5.801,3812,3.713,3814,5.258,3815,3.931,3816,3.931,3817,3.713,3818,3.931,3823,3.531,3846,4.205,3847,5.625,3893,6.115,3894,4.572,3895,6.86,3896,5.128,3897,5.128,3898,6.859,3899,5.128,3900,5.128,3901,3.931,3902,6.89,3903,5.128,3904,5.128,3905,4.572,3906,4.572,3907,5.128,3908,3.713,3909,4.205,3910,4.572,3911,4.572,3912,5.128,3913,5.128,3914,4.572]],["title/controllers/XmlDataBridgeController.html",[671,0.9,3915,3.925]],["body/controllers/XmlDataBridgeController.html",[3,0.12,4,0.097,5,0.04,10,0.094,15,0.312,18,2.165,23,1.449,24,2.97,25,1.887,30,0.641,43,1.158,44,0.007,45,0.418,46,0.154,47,1.138,50,1.419,51,2.854,71,2.784,74,0.241,76,1.085,81,1.38,86,0.165,93,2.647,98,1.677,103,1.908,115,0.005,116,0.005,137,1.871,174,1.697,218,2.195,267,1.299,380,1.412,480,1.365,518,1.412,644,1.856,662,3.294,671,1.016,676,2.144,712,2.4,714,2.345,730,1.619,731,1.591,732,1.591,733,1.619,734,2.377,735,1.591,736,2.65,737,2.055,738,1.485,739,1.619,740,1.619,741,1.619,742,1.619,743,1.619,744,1.619,745,1.51,746,1.619,747,1.619,748,1.619,749,1.563,750,1.619,751,1.591,752,1.619,753,1.619,754,1.619,755,1.619,756,1.619,757,1.485,758,1.619,759,1.591,760,1.619,761,3.981,762,3.41,764,3.41,820,3.282,967,2.581,1099,3.576,1233,2.4,1491,3.553,1494,3.718,1495,3.909,1496,3.718,1497,3.718,1500,3.553,1501,3.909,1971,4.428,1972,4.428,2080,4.428,2081,4.428,2082,4.428,2083,4.428,2084,3.909,2085,4.428,2086,4.428,2090,4.428,2091,4.428,2092,4.428,3805,5.459,3806,5.318,3807,5.318,3809,4.314,3812,6.097,3817,6.097,3819,4.14,3823,5.459,3826,4.14,3901,4.14,3915,5.82,3916,5.4,3917,7.929,3918,5.4,3919,5.4,3920,5.4,3921,5.4,3922,5.4,3923,5.4,3924,5.4,3925,5.4,3926,5.4,3927,5.4,3928,5.4,3929,7.098,3930,7.098,3931,5.4,3932,5.4,3933,5.4,3934,5.4,3935,5.4,3936,5.4,3937,7.098,3938,5.4]],["title/injectables/XmlDataBridgeMiddleware.html",[819,1.569,3939,3.925]],["body/injectables/XmlDataBridgeMiddleware.html",[3,0.123,4,0.1,5,0.025,8,0.213,10,0.097,13,1.115,15,0.32,16,0.983,18,2.451,23,1.475,24,2.54,25,2.406,30,0.649,35,3.114,43,1.055,44,0.007,45,0.381,46,0.156,47,1.037,50,1.438,57,6.525,58,1.595,74,0.202,76,1.115,81,1.079,86,0.116,88,2.381,93,1.853,98,1.723,103,1.335,115,0.005,116,0.005,144,1.425,174,1.763,182,1.663,183,1.21,388,3.02,738,1.987,761,3.288,763,3.783,811,3.05,819,2.368,821,2.587,890,2.938,946,4.975,1574,6.525,1576,5.54,1793,4.392,1857,7.064,2547,4.755,3215,4.018,3216,4.018,3220,4.948,3604,6.442,3610,4.254,3806,5.375,3807,5.375,3809,5.741,3821,6.16,3826,4.254,3829,5.926,3901,4.254,3939,5.926,3940,5.55,3941,7.226,3942,7.226,3943,7.226,3944,7.226,3945,5.55,3946,7.226,3947,8.512,3948,5.55,3949,7.226,3950,7.226,3951,7.226,3952,5.55,3953,7.226,3954,5.55,3955,5.55,3956,7.226,3957,5.55,3958,5.55,3959,5.55,3960,5.55,3961,5.55]],["title/modules/XmlDataBridgeModule.html",[832,1.114,3908,3.465]],["body/modules/XmlDataBridgeModule.html",[3,0.12,4,0.097,5,0.032,8,0.143,10,0.094,13,1.083,23,1.101,30,0.573,43,1.036,44,0.007,45,0.374,46,0.138,47,1.018,50,1.269,74,0.245,76,1.083,81,1.048,86,0.165,103,1.298,115,0.005,116,0.005,174,1.721,182,1.617,183,1.176,267,1.298,373,2.412,380,1.41,480,1.364,518,1.41,533,3.782,644,1.854,667,1.546,669,2.794,712,2.397,730,1.617,731,1.589,732,1.589,733,1.617,734,2.375,735,1.589,736,2.649,737,2.053,738,1.483,739,1.617,740,1.617,741,1.617,742,1.617,743,1.617,744,1.617,745,1.509,746,1.617,747,1.617,748,1.617,749,1.562,750,1.617,751,1.589,752,1.617,753,1.617,754,1.617,755,1.617,756,1.617,757,1.483,758,1.617,759,1.589,760,1.617,832,2.036,834,2.343,837,3.674,838,4.668,839,3.55,844,4.817,850,4.225,851,3.279,852,3.695,853,3.279,854,2.454,855,3.714,862,3.788,864,4.668,874,2.515,875,3.574,876,4.16,878,2.515,1211,2.578,1465,3.164,1997,4.135,3076,4.809,3078,6.323,3805,5.456,3806,5.004,3807,5.004,3809,5.645,3819,4.135,3823,5.456,3895,5.135,3901,4.135,3908,5.737,3909,6.903,3910,6.323,3911,6.323,3915,5.816,3939,4.423,3962,5.394,3963,5.394,3964,7.093,3965,8.419,3966,5.394,3967,5.394,3968,5.394,3969,7.925,3970,7.925,3971,7.093,3972,7.093,3973,7.093,3974,5.394,3975,5.394,3976,5.394,3977,5.394,3978,5.394,3979,5.394,3980,5.394,3981,5.394,3982,5.394,3983,5.394]],["title/dependencies.html",[1280,3.165,3984,3.557]],["body/dependencies.html",[5,0.03,10,0.142,44,0.007,46,0.13,58,1.162,76,1.348,115,0.005,116,0.005,247,5.143,278,5.984,279,3.689,295,1.697,326,6.431,332,2.529,367,3.938,837,3.477,846,5.984,848,5.984,962,3.938,965,2.283,1280,3.689,1293,4.08,1862,4.86,2200,5.984,2201,7.261,2650,5.984,2693,5.984,2696,5.984,2709,7.817,2949,7.261,2953,6.722,3169,4.86,3207,5.146,3414,4.622,3475,5.504,3635,5.984,3792,4.86,3820,5.504,3985,6.713,3986,6.713,3987,6.713,3988,8.145,3989,6.713,3990,6.679,3991,6.713,3992,6.713,3993,6.713,3994,6.713,3995,6.713,3996,6.713,3997,6.713,3998,5.984,3999,8.769,4000,6.713,4001,7.19,4002,6.713,4003,6.713,4004,6.713,4005,6.713,4006,6.713,4007,6.713,4008,6.713]],["title/miscellaneous/enumerations.html",[4009,2.747,4010,5.135]],["body/miscellaneous/enumerations.html",[15,0.402,44,0.006,115,0.005,116,0.005,122,3.867,128,6.823,134,3.504,135,5.036,147,3.978,149,4.31,178,5.859,183,2.181,197,7.418,223,7.418,1632,6.379,1885,6.13,2894,7.418,2898,7.418,2899,7.418,3275,5.704,3287,6.823,3291,6.379,3400,6.201,3403,7.418,3418,6.379,3492,6.201,3500,6.201,4009,4.789,4010,6.201,4011,7.938,4012,6.956,4013,6.201,4014,8.322,4015,6.956,4016,6.956,4017,6.956,4018,6.956,4019,6.956,4020,6.956]],["title/index.html",[15,0.23,3392,3.059,4021,3.557]],["body/index.html",[4,0.087,5,0.039,12,2.754,16,1.149,25,1.291,37,4.328,38,3.055,41,1.405,44,0.004,46,0.094,68,3.194,71,1.455,74,0.122,115,0.004,116,0.004,122,2.108,124,2.668,134,3.33,167,2.32,172,2.588,174,1.511,182,1.981,205,6.7,264,0.813,267,1.168,276,2.209,277,2.951,295,1.671,331,2.668,332,2.334,358,2.263,359,2.871,360,2.951,373,2.962,383,1.514,393,1.534,395,4.018,397,1.817,414,2.754,419,3.36,421,2.754,423,2.807,432,2.807,436,2.847,439,2.951,444,2.668,459,2.668,471,2.754,482,2.631,489,3.877,499,4.568,501,3.504,502,2.951,510,2.754,523,2.847,544,2.951,604,2.32,627,4.018,631,2.951,667,1.058,737,1.405,738,1.818,749,1.405,796,3.958,832,1.75,834,2.871,836,5.42,842,1.076,875,2.446,880,5.42,914,3.194,919,3.721,920,3.194,921,3.721,970,2.475,971,2.514,972,3.342,973,5.174,1002,2.668,1039,2.263,1043,2.754,1044,3.524,1079,3.524,1101,2.754,1102,3.687,1103,2.446,1104,2.668,1105,2.847,1106,2.754,1110,2.668,1127,2.847,1162,2.514,1177,3.404,1187,2.588,1188,2.381,1235,2.754,1247,4.007,1249,3.514,1280,2.668,1292,3.065,1293,4.018,1309,4.785,1316,3.981,1356,3.721,1426,3.981,1456,3.342,1508,2.951,1521,6.471,1524,4.328,1543,4.35,1569,6.163,1580,3.065,1588,3.981,1775,3.981,1776,3.981,1786,3.981,1819,4.551,1857,3.721,1875,3.721,2178,4.328,2483,5.42,2489,5.893,2520,3.194,2638,3.981,2639,3.981,2641,3.721,2664,3.981,2801,3.514,2844,3.721,2892,4.328,2946,3.981,3418,3.721,3434,3.981,3436,3.981,3466,4.328,3472,4.328,3532,5.42,3583,4.328,3622,5.42,3628,6.163,3630,5.067,3667,3.721,3697,5.893,3715,5.441,3809,4.568,3872,3.981,3895,3.514,4022,4.328,4023,4.328,4024,4.328,4025,5.893,4026,4.328,4027,4.854,4028,7.516,4029,4.854,4030,4.854,4031,4.854,4032,5.42,4033,4.854,4034,4.854,4035,6.61,4036,4.854,4037,4.854,4038,7.516,4039,4.854,4040,4.854,4041,4.854,4042,4.854,4043,4.854,4044,4.854,4045,4.854,4046,6.61,4047,4.854,4048,7.516,4049,6.61,4050,4.854,4051,4.854,4052,4.854,4053,4.854,4054,4.854,4055,5.893,4056,4.854,4057,4.854,4058,4.854,4059,4.328,4060,6.61,4061,8.069,4062,4.328,4063,4.854,4064,5.893,4065,6.61,4066,4.854,4067,6.61,4068,4.854,4069,3.981,4070,4.854,4071,4.854,4072,4.854,4073,4.854,4074,4.328,4075,4.328,4076,4.854,4077,4.854,4078,4.854,4079,4.854,4080,4.854,4081,7.516,4082,4.854,4083,3.981,4084,4.854,4085,4.854,4086,4.854,4087,4.854,4088,4.854,4089,4.328,4090,4.854,4091,6.61,4092,4.328,4093,4.854,4094,4.854,4095,6.61,4096,6.61,4097,4.854,4098,4.854,4099,4.854,4100,4.854,4101,4.854,4102,4.854,4103,4.328,4104,7.516,4105,4.854,4106,4.854,4107,4.854,4108,4.854,4109,4.854,4110,4.854,4111,4.854,4112,4.854,4113,5.893,4114,6.61,4115,4.854,4116,4.854,4117,4.854,4118,4.328,4119,4.854,4120,4.854,4121,4.854,4122,6.61,4123,8.442,4124,7.516,4125,4.854,4126,5.067,4127,4.854,4128,4.854,4129,4.854,4130,4.854,4131,4.328,4132,4.854,4133,4.854,4134,4.854,4135,6.61,4136,6.61,4137,4.854,4138,4.328,4139,4.854,4140,4.854,4141,4.854,4142,4.854,4143,3.514,4144,4.854,4145,4.328]],["title/license.html",[736,1.155,3392,3.059,4021,3.557]],["body/license.html",[4,0.158,5,0.037,8,0.086,10,0.057,30,0.263,33,3.049,38,1.323,44,0.005,45,0.261,58,1.314,60,5.821,68,3.259,74,0.082,81,0.963,115,0.003,116,0.003,185,4.089,206,2.669,240,0.77,247,1.909,264,1.423,267,0.783,277,1.978,285,1.846,286,2.495,292,1.295,329,0.959,344,1.909,366,1.382,373,1.107,380,1.295,383,0.745,390,1.413,392,1.127,408,1.481,418,1.269,419,1.295,423,3.539,428,1.64,432,3.921,438,1.978,448,1.978,461,1.978,478,2.64,480,1.516,485,3.644,487,1.978,492,1.978,518,2.291,519,3.01,521,1.978,523,1.909,533,1.735,577,3.01,644,1.567,673,0.942,730,0.976,731,0.959,732,0.959,733,0.976,734,2.498,735,1.974,736,2.817,737,1.736,738,2.337,739,1.797,740,0.976,741,0.976,742,1.797,743,0.976,744,2.008,745,1.874,746,1.797,747,1.797,748,1.797,749,1.94,750,1.484,751,2.123,752,1.797,753,2.658,754,1.484,755,1.484,756,0.976,757,0.895,758,0.976,759,1.766,760,0.976,811,1.788,842,0.721,875,1.64,883,2.901,889,5.219,926,3.41,931,2.669,970,1.219,971,3.471,980,2.356,1023,1.64,1044,1.735,1126,1.909,1174,1.735,1175,2.565,1177,2.29,1179,1.735,1247,2.64,1289,1.846,1356,7.459,1509,5.973,1552,4.916,1555,1.846,1627,2.901,1638,2.901,1776,4.061,1785,2.669,1821,2.901,1864,2.901,1873,2.241,1874,2.495,2042,7.904,2049,2.669,2685,5.973,2722,2.901,3101,4.061,3116,4.061,3289,4.061,3532,2.669,3622,2.669,3630,5.136,3696,4.415,3735,2.901,4001,2.669,4055,2.901,4059,5.344,4064,2.901,4069,2.669,4089,2.901,4092,5.344,4103,2.901,4145,4.415,4146,3.255,4147,3.255,4148,3.255,4149,8.334,4150,6.7,4151,7.209,4152,3.255,4153,9.04,4154,8.5,4155,3.255,4156,3.255,4157,8.5,4158,7.209,4159,4.415,4160,3.255,4161,7.209,4162,3.255,4163,3.255,4164,3.255,4165,2.669,4166,6.7,4167,4.953,4168,3.255,4169,5.995,4170,4.953,4171,4.953,4172,3.255,4173,3.255,4174,3.255,4175,3.255,4176,3.255,4177,3.255,4178,3.255,4179,3.255,4180,5.995,4181,3.255,4182,4.953,4183,3.255,4184,3.255,4185,7.594,4186,6.7,4187,3.255,4188,3.255,4189,3.255,4190,3.255,4191,5.995,4192,3.255,4193,8.334,4194,4.953,4195,4.953,4196,3.255,4197,9.235,4198,9.288,4199,3.255,4200,3.255,4201,3.255,4202,3.255,4203,4.953,4204,3.255,4205,3.255,4206,3.255,4207,3.255,4208,6.7,4209,7.209,4210,3.255,4211,4.953,4212,6.7,4213,4.953,4214,3.255,4215,7.209,4216,4.953,4217,3.255,4218,3.255,4219,3.255,4220,3.255,4221,3.255,4222,3.255,4223,3.255,4224,3.255,4225,3.255,4226,5.995,4227,3.255,4228,3.255,4229,3.255,4230,8.5,4231,3.255,4232,3.255,4233,4.953,4234,7.253,4235,5.995,4236,4.953,4237,4.953,4238,4.953,4239,4.953,4240,5.995,4241,4.953,4242,5.995,4243,4.953,4244,4.953,4245,4.953,4246,4.953,4247,3.255,4248,4.953,4249,3.255,4250,3.255,4251,7.209,4252,7.894,4253,4.953,4254,4.953,4255,4.953,4256,3.255,4257,5.995,4258,4.953,4259,3.255,4260,3.255,4261,3.255,4262,5.995,4263,3.255,4264,3.255,4265,3.255,4266,4.953,4267,3.255,4268,3.255,4269,3.255,4270,3.255,4271,3.255,4272,3.255,4273,3.255,4274,4.953,4275,3.255,4276,3.255,4277,3.255,4278,3.255,4279,3.255,4280,3.255,4281,5.995,4282,3.255,4283,3.255,4284,3.255,4285,3.255,4286,8.136,4287,3.255,4288,3.255,4289,3.255,4290,6.7,4291,4.953,4292,6.7,4293,3.255,4294,3.255,4295,3.255,4296,3.255,4297,3.255,4298,4.953,4299,4.953,4300,3.255,4301,3.255,4302,3.255,4303,4.953,4304,4.953,4305,3.255,4306,3.255,4307,3.255,4308,3.255,4309,3.255,4310,3.255,4311,3.255,4312,5.995,4313,3.255,4314,3.255,4315,3.255,4316,3.255,4317,3.255,4318,3.255,4319,3.255,4320,3.255,4321,3.255,4322,4.953,4323,3.255,4324,3.255,4325,3.255,4326,3.255,4327,3.255,4328,3.255,4329,3.255,4330,3.255,4331,3.255,4332,6.7,4333,4.953,4334,3.255,4335,3.255,4336,3.255,4337,3.255,4338,3.255,4339,3.255,4340,4.953,4341,3.255,4342,3.255,4343,3.255,4344,7.209,4345,3.255,4346,3.255,4347,3.255,4348,3.255,4349,3.255,4350,3.255,4351,3.255,4352,3.255,4353,7.209,4354,3.255,4355,3.255,4356,3.255,4357,3.255,4358,3.255,4359,3.255,4360,3.255,4361,3.255,4362,3.255,4363,3.255,4364,3.255,4365,3.255,4366,3.255,4367,3.255,4368,3.255,4369,5.995,4370,3.255,4371,3.255,4372,3.255,4373,3.255,4374,4.953,4375,3.255,4376,3.255,4377,3.255,4378,3.255,4379,3.255,4380,3.255,4381,3.255,4382,3.255,4383,3.255,4384,3.255,4385,3.255,4386,3.255,4387,3.255,4388,3.255,4389,3.255,4390,4.953,4391,4.953,4392,3.255,4393,3.255,4394,3.255,4395,3.255,4396,3.255,4397,3.255,4398,3.255,4399,3.255,4400,3.255,4401,3.255]],["title/modules.html",[834,2.843]],["body/modules.html",[44,0.005,115,0.005,116,0.005,669,3.644,833,5.768,834,3.055,850,3.75,852,3.279,854,3.201,859,5.392,1211,3.362,1287,4.629,1417,5.392,1513,5.092,1873,6.773,1997,5.392,2795,5.392,3137,5.092,3240,5.392,3457,5.392,3462,5.092,3908,5.092,4069,8.017,4402,9.838,4403,10.075,4404,9.778,4405,8.716]],["title/overview.html",[4406,5.836]],["body/overview.html",[2,5.019,19,4.448,44,0.006,115,0.005,116,0.005,118,1.835,142,5.95,329,1.803,612,3.678,673,1.772,712,2.72,821,2.854,832,1.425,834,2.658,850,5.127,852,4.393,854,4.017,874,2.854,878,2.854,1280,3.364,1281,3.72,1282,3.72,1283,3.72,1284,5.457,1285,5.457,1286,5.457,1287,5.986,1288,3.72,1289,3.472,1417,7.224,1418,5.457,1420,5.457,1421,5.457,1422,7.224,1492,6.487,1513,7.053,1514,5.457,1515,5.457,1516,5.457,1517,5.457,2795,6.973,2796,5.457,2797,5.457,2798,5.457,2799,7.224,3137,6.585,3138,5.457,3240,6.767,3241,5.457,3457,7.627,3458,5.457,3459,5.457,3460,5.457,3461,5.457,3462,6.585,3463,6.45,3998,5.457,4001,5.019,4406,5.457,4407,6.121,4408,6.121,4409,6.121,4410,6.121,4411,6.121]],["title/properties.html",[16,0.784,3984,3.557]],["body/properties.html",[8,0.203,16,1.042,44,0.006,115,0.006,116,0.006,480,1.937,731,2.256,732,2.256,735,2.256,736,2.217,737,2.217,4022,6.828,4023,6.828,4024,6.828,4025,6.828,4026,6.828,4412,7.66,4413,7.66]],["title/miscellaneous/typealiases.html",[4009,2.747,4414,5.76]],["body/miscellaneous/typealiases.html",[5,0.024,12,3.06,15,0.311,43,1.157,44,0.006,46,0.196,51,1.942,52,1.083,58,1.228,63,0.302,86,0.148,115,0.005,116,0.005,121,2.376,174,1.785,183,1.176,240,1.277,264,1.327,314,0.873,330,3.279,355,2.578,383,1.235,388,1.801,402,2.515,526,2.964,556,3.164,667,2.025,668,2.517,669,2.794,670,4.16,703,1.736,796,3.479,832,1.845,840,4.883,854,2.454,954,3.905,988,4.135,1002,3.898,1003,4.668,1005,5.135,1007,3.164,1023,2.718,1039,3.925,1043,3.06,1044,2.876,1045,4.16,1075,2.876,1079,2.876,1080,3.164,1081,4.023,1086,3.164,1087,4.16,1088,4.023,1115,3.164,1128,4.489,1151,2.876,1211,2.578,1212,3.674,1214,3.406,1243,4.311,1361,6.815,1793,4.311,1851,4.423,3098,3.905,3099,3.905,3100,6.323,3108,5.816,3116,5.816,3117,3.714,3378,5.437,3414,3.714,3790,4.809,3791,4.809,3806,3.406,3807,3.406,3809,5.71,3812,5.135,3814,5.437,3815,5.437,3816,5.437,3817,5.135,3818,5.437,3894,8.518,3895,6.801,3902,6.323,3905,6.323,3906,6.323,3908,3.905,3909,5.816,3914,4.809,4009,3.714,4415,5.394,4416,5.394,4417,7.093,4418,8.419,4419,5.394,4420,8.453,4421,5.394,4422,4.809,4423,5.394,4424,7.093,4425,4.809,4426,5.394,4427,4.809,4428,5.394]],["title/miscellaneous/variables.html",[1550,4.723,4009,2.747]],["body/miscellaneous/variables.html",[4,0.05,5,0.035,8,0.116,15,0.16,16,1.08,21,2.551,24,0.874,29,3.346,34,2.756,35,2.351,36,3.891,38,1.124,41,2.232,42,4.965,44,0.007,45,0.429,46,0.188,48,2.002,51,2.21,58,1.23,63,0.535,69,2.261,71,1.621,77,3.579,78,3.579,79,3.579,84,3.346,89,2.206,93,2.05,98,0.858,103,1.855,115,0.003,116,0.003,121,1.067,125,1.622,149,2.261,174,1.508,181,2.521,182,2.958,183,2.154,212,1.681,218,1.124,219,1.746,220,2.002,264,0.905,287,2.267,291,2.794,292,1.737,312,2.872,314,0.447,332,0.858,355,4.225,356,1.622,373,2.273,383,1.703,391,1.634,392,0.52,400,2.606,408,1.986,409,1.124,410,1.148,432,1.174,480,0.699,604,2.585,671,0.52,673,1.778,703,0.89,712,1.229,714,3.085,749,0.8,761,1.986,766,1.819,779,4.697,796,2.141,824,2.267,832,0.644,842,0.967,879,2.465,891,2.296,892,3.722,896,1.903,897,2.267,903,3.346,904,3.346,905,3.579,906,2.465,907,3.891,908,2.465,909,3.891,910,3.005,911,2.465,912,3.891,913,2.872,914,5.073,915,4.445,916,2.465,917,3.891,918,2.465,919,4.145,920,3.558,921,2.119,922,3.891,923,2.465,924,3.732,925,3.396,926,1.903,927,3.891,928,2.465,929,3.891,930,2.465,931,3.579,932,3.579,934,3.891,935,2.465,936,1.903,937,1.903,938,3.891,939,2.465,944,1.622,948,1.568,965,0.94,986,2.935,1002,2.398,1017,2.863,1023,1.393,1047,2.971,1049,2.801,1055,1.568,1056,1.568,1090,1.432,1099,3.368,1102,2.141,1103,1.393,1111,4.11,1135,1.568,1138,2.299,1139,1.229,1175,3.181,1177,2.714,1184,1.432,1188,1.356,1227,1.681,1233,2.971,1235,1.568,1268,3.891,1289,1.568,1293,1.681,1303,1.903,1304,2.872,1315,3.346,1333,3.159,1374,2.119,1395,2.756,1396,3.005,1456,3.722,1466,3.891,1492,1.903,1494,3.722,1508,3.286,1512,3.579,1513,2.002,1521,2.119,1543,1.819,1550,3.579,1560,3.346,1563,2.465,1568,2.002,1569,2.267,1575,2.465,1580,1.746,1589,2.465,1595,3.891,1596,3.891,1597,3.891,1598,3.891,1599,3.891,1600,3.891,1601,3.891,1606,3.346,1774,2.465,1785,2.267,1786,3.579,1787,2.465,1788,3.891,1789,2.465,1790,2.465,1793,1.681,1819,3.005,1849,2.465,1861,3.579,1952,2.119,1973,3.891,2002,2.465,2005,2.267,2010,3.891,2520,2.872,2697,3.891,2723,3.579,2801,2.002,2888,2.119,2946,2.267,2969,3.891,3022,3.891,3098,2.002,3099,2.002,3102,2.465,3117,3.005,3120,2.119,3121,1.819,3141,3.346,3144,2.002,3171,3.159,3213,3.346,3245,3.891,3246,3.891,3280,2.267,3414,3.722,3471,2.465,3621,2.465,3628,5.035,3630,3.346,3637,3.891,3792,2.002,3806,2.756,3807,2.756,3808,5.035,3809,3.286,3821,4.145,3827,3.579,3830,2.267,3831,2.267,3832,2.267,3833,3.579,3895,3.159,4009,1.903,4011,2.465,4013,2.465,4062,2.465,4074,2.465,4113,3.891,4118,2.465,4126,2.119,4138,2.465,4234,2.465,4405,5.474,4420,5.474,4422,3.891,4425,6.333,4427,2.465,4429,8.286,4430,2.765,4431,4.364,4432,4.364,4433,5.407,4434,4.364,4435,4.364,4436,2.765,4437,2.765,4438,7.438,4439,2.765,4440,4.364,4441,4.364,4442,7.438,4443,2.765,4444,4.364,4445,2.765,4446,4.364,4447,2.765,4448,4.364,4449,4.364,4450,2.765,4451,4.364,4452,5.407,4453,4.364,4454,2.765,4455,4.364,4456,2.765,4457,4.364,4458,4.364,4459,4.364,4460,4.364,4461,4.364,4462,5.407,4463,2.765,4464,2.765,4465,2.765,4466,4.364,4467,4.364,4468,2.765,4469,5.407,4470,4.364,4471,2.765,4472,2.765,4473,2.765,4474,2.765,4475,2.765,4476,2.765,4477,2.765,4478,2.765,4479,2.765,4480,2.765,4481,2.765,4482,6.685,4483,6.685,4484,6.685,4485,6.685,4486,6.685,4487,6.685,4488,7.104,4489,2.765,4490,2.765,4491,2.267,4492,2.765,4493,2.765,4494,2.765,4495,2.765,4496,2.119,4497,4.364,4498,2.765,4499,2.765,4500,2.765,4501,2.765,4502,2.765,4503,2.765,4504,7.104,4505,2.765,4506,4.364,4507,5.407,4508,5.407,4509,2.765,4510,2.765,4511,4.364,4512,4.364,4513,4.364,4514,4.364,4515,4.364,4516,4.364,4517,4.364,4518,4.364,4519,4.364,4520,4.364,4521,4.364,4522,4.364,4523,4.364,4524,5.407,4525,5.407,4526,5.407,4527,5.407,4528,2.765,4529,2.765,4530,2.765,4531,2.765,4532,2.765,4533,2.765,4534,2.765,4535,2.765,4536,2.765,4537,2.765,4538,2.765,4539,2.765,4540,2.765,4541,2.765,4542,2.765,4543,2.765,4544,2.765,4545,2.765,4546,2.765,4547,2.765,4548,2.765,4549,2.765,4550,2.765,4551,7.104,4552,2.765,4553,2.765,4554,2.765,4555,2.765,4556,2.765,4557,2.765,4558,4.364,4559,2.765,4560,2.765,4561,2.765,4562,2.765,4563,2.765,4564,2.765,4565,2.765,4566,2.765,4567,2.765,4568,2.765,4569,2.765,4570,2.765,4571,2.765,4572,2.765,4573,2.765,4574,2.765,4575,2.765,4576,2.765]],["title/additional-documentation/properties.html",[16,0.543,185,2.263,1555,2.263]],["body/additional-documentation/properties.html",[5,0.043,8,0.229,16,1.175,44,0.006,46,0.168,63,0.484,69,3.838,115,0.006,116,0.006,373,3.203,383,1.697,394,3.751,837,4.474,926,5.101,971,4.474,1177,3.3,1568,5.364,1606,5.68,3650,6.076,3667,5.68,4032,6.076,4083,6.076,4126,5.68,4165,6.076,4491,6.076,4496,5.68,4577,6.606,4578,6.606,4579,6.606]],["title/additional-documentation/properties/kp.properties.html",[185,2.263,1555,2.263,4496,3.059]],["body/additional-documentation/properties/kp.properties.html",[5,0.043,8,0.229,16,1.175,44,0.006,46,0.168,63,0.484,69,3.838,115,0.006,116,0.006,373,3.203,383,1.697,394,3.751,837,4.474,926,5.101,971,4.474,1177,3.3,1568,5.364,1606,5.68,3650,6.076,3667,5.68,4032,6.076,4083,6.076,4126,5.68,4165,6.076,4491,6.076,4496,5.68,4577,6.606,4578,6.606,4579,6.606]],["title/additional-documentation/properties/auth.properties.html",[185,2.263,1555,2.263,4580,3.557]],["body/additional-documentation/properties/auth.properties.html",[5,0.033,8,0.24,12,4.082,41,2.458,42,5.293,44,0.006,46,0.175,63,0.403,73,5.362,115,0.005,116,0.005,247,4.221,277,4.374,288,3.954,314,1.374,326,4.954,355,3.44,359,2.749,363,4.666,365,2.642,373,2.887,868,5.901,880,6.963,893,4.954,913,5.588,925,3.44,971,4.679,1395,4.544,4131,6.415,4143,6.147,4580,6.415,4581,7.196,4582,7.196,4583,7.196,4584,7.196,4585,8.491,4586,9.033,4587,5.901,4588,7.196,4589,7.196,4590,7.196,4591,7.196,4592,7.196]],["title/additional-documentation/properties/bruteforce.properties.html",[185,2.263,1555,2.263,4593,3.557]],["body/additional-documentation/properties/bruteforce.properties.html",[5,0.033,8,0.24,44,0.005,46,0.176,52,1.454,68,4.763,71,2.554,87,1.77,115,0.005,116,0.005,291,3.293,314,1.513,339,4.106,359,2.765,363,3.977,365,2.657,373,2.897,471,4.106,574,3.618,919,6.941,920,5.958,921,6.531,932,6.986,971,4.69,2953,5.549,3990,5.935,4075,6.452,4143,5.24,4587,5.935,4593,6.452,4594,7.238,4595,7.238,4596,7.238,4597,7.238,4598,7.238,4599,7.238,4600,7.238,4601,8.52,4602,7.238,4603,7.595]],["title/additional-documentation/properties/captcha.properties.html",[185,2.263,1555,2.263,4604,3.557]],["body/additional-documentation/properties/captcha.properties.html",[5,0.038,8,0.257,44,0.005,46,0.189,52,1.664,53,3.388,63,0.528,73,4.362,87,1.69,115,0.005,116,0.005,182,2.071,314,1.118,355,4.244,359,2.639,363,3.796,365,2.536,373,2.818,394,3,397,2.586,459,3.796,796,4.781,868,5.664,925,3.961,971,5.006,981,4.362,1000,4.756,1004,4.199,1354,6.158,1823,5.664,2638,6.795,2639,6.795,2641,5.295,2664,6.795,2679,7.388,2680,6.158,3990,5.664,4143,5.001,4587,5.664,4603,7.388,4604,6.158,4605,6.908,4606,6.908,4607,6.908,4608,6.908,4609,6.908,4610,6.908,4611,6.908,4612,6.908,4613,8.287,4614,6.908]],["title/additional-documentation/properties/file.properties.html",[185,2.263,1555,2.263,4615,3.557]],["body/additional-documentation/properties/file.properties.html",[5,0.034,8,0.232,25,2.006,44,0.006,46,0.17,63,0.423,69,3.908,115,0.006,116,0.006,314,1.221,359,2.882,365,2.769,373,2.968,394,3.791,397,2.824,971,4.521,1177,3.618,2520,5.744,4615,6.725,4616,7.544,4617,7.544,4618,7.544,4619,7.544]],["title/additional-documentation/properties/media.properties.html",[185,2.263,1555,2.263,4620,3.557]],["body/additional-documentation/properties/media.properties.html",[5,0.033,8,0.227,25,2.412,44,0.005,46,0.166,63,0.479,115,0.005,116,0.005,124,3.995,359,2.777,365,2.668,373,2.905,383,2.214,397,3.396,408,3.887,971,4.425,1177,3.465,1543,6.16,1775,5.961,2520,5.969,3715,6.184,4143,6.184,4159,6.481,4620,6.481,4621,7.27,4622,7.27,4623,8.542,4624,8.542,4625,7.27,4626,7.27,4627,7.27]]],"invertedIndex":[["",{"_index":44,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["0",{"_index":1400,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"injectables/FileMetadataService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/NotEmptyPipe.html":{},"controllers/ProcessController.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["0.0.1",{"_index":4412,"title":{},"body":{"properties.html":{}}}],["0.14",{"_index":3992,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":4004,"title":{},"body":{"dependencies.html":{}}}],["0.3",{"_index":4007,"title":{},"body":{"dependencies.html":{}}}],["0.33",{"_index":4006,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":3988,"title":{},"body":{"dependencies.html":{}}}],["0.6",{"_index":4008,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":247,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"classes/LogService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"guards/RolesGuard.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["10",{"_index":326,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"dependencies.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["10000",{"_index":3796,"title":{},"body":{"modules/WarlockModule.html":{}}}],["15",{"_index":689,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["16",{"_index":3994,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":4407,"title":{},"body":{"overview.html":{}}}],["19",{"_index":3995,"title":{},"body":{"dependencies.html":{}}}],["192.168.0.1",{"_index":975,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["2",{"_index":3998,"title":{},"body":{"dependencies.html":{},"overview.html":{}}}],["2).join",{"_index":2955,"title":{},"body":{"classes/LogService.html":{}}}],["2.0",{"_index":737,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["2.11",{"_index":3991,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":3286,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["2004",{"_index":4147,"title":{},"body":{"license.html":{}}}],["2023",{"_index":730,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["22",{"_index":4409,"title":{},"body":{"overview.html":{}}}],["256",{"_index":1805,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["27",{"_index":4408,"title":{},"body":{"overview.html":{}}}],["3",{"_index":2953,"title":{},"body":{"classes/LogService.html":{},"injectables/ProcessManagerService.html":{},"dependencies.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["300",{"_index":4603,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["30px",{"_index":2736,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["3600",{"_index":4589,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["4",{"_index":2949,"title":{},"body":{"classes/LogService.html":{},"dependencies.html":{}}}],["40",{"_index":4411,"title":{},"body":{"overview.html":{}}}],["43",{"_index":4410,"title":{},"body":{"overview.html":{}}}],["5",{"_index":3990,"title":{},"body":{"dependencies.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["50",{"_index":2722,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"license.html":{}}}],["502",{"_index":1761,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["6",{"_index":4592,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["600",{"_index":4586,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["7",{"_index":2709,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"dependencies.html":{}}}],["78",{"_index":4533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":4493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":4001,"title":{},"body":{"dependencies.html":{},"license.html":{},"overview.html":{}}}],["9]*$/.test(variablename",{"_index":1693,"title":{},"body":{"injectables/ConfigService.html":{}}}],["9_",{"_index":304,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["_a",{"_index":1691,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a.localecompare(b",{"_index":1635,"title":{},"body":{"injectables/ConfigService.html":{}}}],["a[sort",{"_index":1629,"title":{},"body":{"injectables/ConfigService.html":{}}}],["abc123456",{"_index":4613,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["abortable",{"_index":1783,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["above",{"_index":4315,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":9,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"classes/AuthService.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/LiteAuthGuard.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["abstractauthguard",{"_index":1,"title":{"guards/AbstractAuthGuard.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["abstractprocess",{"_index":117,"title":{"classes/AbstractProcess.html":{}},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:140",{"_index":3670,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:148",{"_index":3671,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:157",{"_index":3669,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:165",{"_index":3668,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:173",{"_index":3672,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:31",{"_index":3653,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:32",{"_index":3655,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:33",{"_index":3654,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:42",{"_index":3656,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:44",{"_index":3673,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:80",{"_index":3674,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractprocess:94",{"_index":3675,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["abstractusersubscriber",{"_index":261,"title":{"classes/AbstractUserSubscriber.html":{}},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["acceptance",{"_index":4372,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":4369,"title":{},"body":{"license.html":{}}}],["access",{"_index":41,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"injectables/LocaleSubscriber.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["access_token",{"_index":916,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["access_token_error_msg",{"_index":77,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["accessible",{"_index":4623,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["accesstoken",{"_index":779,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["act",{"_index":4377,"title":{},"body":{"license.html":{}}}],["acting",{"_index":4163,"title":{},"body":{"license.html":{}}}],["action",{"_index":1075,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["action.entity",{"_index":2068,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["action.entity.ts",{"_index":1872,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:36",{"_index":1879,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:40",{"_index":1881,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:44",{"_index":1880,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:53",{"_index":1886,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:60",{"_index":1882,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action.entity.ts:63",{"_index":1883,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["action?.$?.content",{"_index":3845,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["action?.$?.read",{"_index":3844,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["action?.$?.target",{"_index":3843,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["action[\"#name",{"_index":3842,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["actions",{"_index":1049,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["actions.description",{"_index":4526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.description.lang",{"_index":4527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.name",{"_index":4524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.name.lang",{"_index":4525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["active",{"_index":1232,"title":{},"body":{"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["acts",{"_index":4351,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":4086,"title":{},"body":{"index.html":{}}}],["add",{"_index":4304,"title":{},"body":{"license.html":{}}}],["addendum",{"_index":4306,"title":{},"body":{"license.html":{}}}],["additional",{"_index":185,"title":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{},"classes/TmpDirCleanerProcess.html":{},"license.html":{}}}],["additions",{"_index":4210,"title":{},"body":{"license.html":{}}}],["address",{"_index":936,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["addresses",{"_index":911,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["adm",{"_index":3986,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":973,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"index.html":{}}}],["administrative",{"_index":3624,"title":{},"body":{"classes/Roles.html":{}}}],["advanced",{"_index":4056,"title":{},"body":{"index.html":{}}}],["advised",{"_index":4368,"title":{},"body":{"license.html":{}}}],["afterremove",{"_index":2841,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["afterremove(event",{"_index":2846,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["again",{"_index":3698,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["against",{"_index":68,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/RedisCacheService.html":{},"index.html":{},"license.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["agree",{"_index":4380,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":748,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["agreement",{"_index":4320,"title":{},"body":{"license.html":{}}}],["album",{"_index":333,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["alexander",{"_index":731,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["algorithm",{"_index":638,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["alias",{"_index":2043,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["aliases",{"_index":4415,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alleging",{"_index":4271,"title":{},"body":{"license.html":{}}}],["allow",{"_index":4084,"title":{},"body":{"index.html":{}}}],["allowed",{"_index":36,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["allowedformetadatakey",{"_index":3637,"title":{},"body":{"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["allowfor",{"_index":1436,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["allowing",{"_index":476,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["allows",{"_index":4077,"title":{},"body":{"index.html":{}}}],["alone",{"_index":4263,"title":{},"body":{"license.html":{}}}],["along",{"_index":980,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"license.html":{}}}],["alongside",{"_index":4305,"title":{},"body":{"license.html":{}}}],["already",{"_index":3521,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["altitude",{"_index":637,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["amount",{"_index":351,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["analysis",{"_index":1107,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["analyzedatabase",{"_index":1108,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["analyzes",{"_index":1101,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"index.html":{}}}],["analyzing",{"_index":2000,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["and/or",{"_index":4375,"title":{},"body":{"license.html":{}}}],["angle",{"_index":657,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["angular",{"_index":4088,"title":{},"body":{"index.html":{}}}],["annotate",{"_index":4473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["annotations",{"_index":4201,"title":{},"body":{"license.html":{}}}],["anonymous",{"_index":2958,"title":{},"body":{"classes/LogService.html":{}}}],["apache",{"_index":735,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["aperture",{"_index":554,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["app",{"_index":4126,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["app.close",{"_index":4544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.init",{"_index":4539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.select(configmodule).get(configservice",{"_index":4541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.select(logmodule).get(logger",{"_index":4540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appear",{"_index":4301,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":4195,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":746,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["application",{"_index":1521,"title":{},"body":{"injectables/ConfigService.html":{},"modules/ProcessModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application/xml",{"_index":3955,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["applications",{"_index":4026,"title":{},"body":{"index.html":{},"properties.html":{}}}],["applied",{"_index":614,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/VideoFileMetadata.html":{}}}],["applies",{"_index":4256,"title":{},"body":{"license.html":{}}}],["apply",{"_index":3289,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"license.html":{}}}],["applying",{"_index":628,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["appropriate",{"_index":3735,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"license.html":{}}}],["appropriateness",{"_index":4339,"title":{},"body":{"license.html":{}}}],["archives",{"_index":4401,"title":{},"body":{"license.html":{}}}],["arg",{"_index":3617,"title":{},"body":{"modules/RedisModule.html":{}}}],["args",{"_index":1366,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/RedisModule.html":{}}}],["args.find((arg",{"_index":3616,"title":{},"body":{"modules/RedisModule.html":{}}}],["argumentshost",{"_index":1765,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["arising",{"_index":4357,"title":{},"body":{"license.html":{}}}],["array",{"_index":1138,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/LocaleService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(obj",{"_index":2230,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["array.isarray(value",{"_index":2857,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["array.reverse().foreach((obj",{"_index":3866,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["arrays",{"_index":1777,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["artist",{"_index":334,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["asc",{"_index":1632,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"miscellaneous/enumerations.html":{}}}],["aspect",{"_index":643,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["asserted",{"_index":4385,"title":{},"body":{"license.html":{}}}],["associated",{"_index":418,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/ConfigItem.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["assume",{"_index":4341,"title":{},"body":{"license.html":{}}}],["assumed",{"_index":4497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":24,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/BasicUserService.html":{},"controllers/CaptchaController.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"controllers/FileController.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"controllers/MediaController.html":{},"injectables/MessagesBrokerService.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["asynchronously",{"_index":4546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["atexp",{"_index":984,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["attach",{"_index":4387,"title":{},"body":{"license.html":{}}}],["attached",{"_index":1126,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"license.html":{}}}],["attacks",{"_index":4075,"title":{},"body":{"index.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["attempts",{"_index":932,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["attribution",{"_index":4290,"title":{},"body":{"license.html":{}}}],["attrs",{"_index":3847,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{}}}],["audio",{"_index":331,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["audiofilemetadata",{"_index":328,"title":{"interfaces/AudioFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["audiofilemetadataentity",{"_index":672,"title":{"entities/AudioFileMetadataEntity.html":{}},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{}}}],["audiomd",{"_index":2239,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["audiomd.bit_rate",{"_index":2252,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["audiomd.channels",{"_index":2250,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["audiomd.codec_long_name",{"_index":2246,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["audiomd.codec_name?.touppercase",{"_index":2244,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["auth",{"_index":715,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth.access.token.expiration",{"_index":4584,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["auth.constants",{"_index":769,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["auth.controller",{"_index":858,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":778,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["auth.guard.ts",{"_index":7,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["auth.guard.ts:28",{"_index":2794,"title":{},"body":{"injectables/LiteAuthGuard.html":{}}}],["auth.guard.ts:47",{"_index":31,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["auth.guard.ts:72",{"_index":64,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["auth.guard.ts:83",{"_index":55,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["auth.jwt.secret",{"_index":4581,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["auth.properties",{"_index":4580,"title":{"additional-documentation/properties/auth.properties.html":{}},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["auth.refresh.token.expiration",{"_index":4588,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["auth.types",{"_index":784,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{}}}],["auth_access_token_prefix",{"_index":78,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth_jwt_cache_prefix",{"_index":79,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth_jwt_cache_prefix}:${auth_access_token_prefix}:${accesstoken",{"_index":928,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth_jwt_cache_prefix}:${auth_access_token_prefix}:${token",{"_index":105,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["auth_jwt_cache_prefix}:${auth_refresh_token_prefix}:${accesstoken}:${refreshtoken",{"_index":930,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["auth_refresh_token_prefix",{"_index":917,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["authconfig",{"_index":856,"title":{},"body":{"modules/AuthModule.html":{}}}],["authconfig.access_token_expiration",{"_index":873,"title":{},"body":{"modules/AuthModule.html":{}}}],["authcontroller",{"_index":711,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authenticate",{"_index":884,"title":{},"body":{"classes/AuthService.html":{}}}],["authenticate(data",{"_index":887,"title":{},"body":{"classes/AuthService.html":{}}}],["authentication",{"_index":12,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"injectables/LiteAuthGuard.html":{},"classes/LoginPayload.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["authenticity",{"_index":497,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["authguard",{"_index":820,"title":{"injectables/AuthGuard.html":{}},"body":{"injectables/AuthGuard.html":{},"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["authmodule",{"_index":833,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{}}}],["authmoduleoptions",{"_index":840,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/typealiases.html":{}}}],["author",{"_index":4413,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":880,"title":{},"body":{"classes/AuthService.html":{},"index.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["authorization.service",{"_index":849,"title":{},"body":{"modules/AuthModule.html":{}}}],["authorizationheader",{"_index":109,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["authorizationheader.match(/bearer\\s+(\\s+)\\s",{"_index":112,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["authorizationservice",{"_index":843,"title":{},"body":{"modules/AuthModule.html":{}}}],["authorized",{"_index":4159,"title":{},"body":{"license.html":{},"additional-documentation/properties/media.properties.html":{}}}],["authorship",{"_index":4191,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":768,"title":{"classes/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["automates",{"_index":4036,"title":{},"body":{"index.html":{}}}],["automatic",{"_index":4048,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":4563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":1873,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"injectables/LocaleService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"license.html":{},"modules.html":{}}}],["avalue",{"_index":1628,"title":{},"body":{"injectables/ConfigService.html":{}}}],["avalue.localecompare(bvalue",{"_index":1633,"title":{},"body":{"injectables/ConfigService.html":{}}}],["avatar",{"_index":1227,"title":{},"body":{"interfaces/BasicUserController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/variables.html":{}}}],["avatar.files",{"_index":4569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.files.format",{"_index":4570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.name",{"_index":4567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.name.lang",{"_index":4568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.type",{"_index":4571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avatar.type.ext",{"_index":4572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["await",{"_index":93,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/BasicUserService.html":{},"controllers/CaptchaController.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"controllers/FileController.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"controllers/MediaController.html":{},"injectables/MessagesBrokerService.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["axios",{"_index":3989,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":1627,"title":{},"body":{"injectables/ConfigService.html":{},"license.html":{}}}],["b[sort",{"_index":1631,"title":{},"body":{"injectables/ConfigService.html":{}}}],["background",{"_index":4046,"title":{},"body":{"index.html":{}}}],["bad",{"_index":945,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/DbExceptionFilter.html":{}}}],["badrequestexception",{"_index":293,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/FileService.html":{},"injectables/NotEmptyPipe.html":{}}}],["badrequestexception(`${this.fieldname",{"_index":3271,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["badrequestmsexception",{"_index":940,"title":{"classes/BadRequestMsException.html":{}},"body":{"classes/BadRequestMsException.html":{}}}],["balance",{"_index":609,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["band",{"_index":349,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["base",{"_index":3255,"title":{},"body":{"classes/MsException.html":{}}}],["base64",{"_index":2687,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["based",{"_index":38,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["basename(filepath",{"_index":1732,"title":{},"body":{"injectables/ConfigService.html":{}}}],["basic",{"_index":2005,"title":{},"body":{"modules/ExplorerModule.html":{},"entities/FileMetadataEntity.html":{},"miscellaneous/variables.html":{}}}],["basic.service",{"_index":3745,"title":{},"body":{"modules/UserModule.html":{}}}],["basic.service.ts",{"_index":1246,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["basic.service.ts:28",{"_index":1255,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["basicauthcontroller",{"_index":782,"title":{"interfaces/BasicAuthController.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["basiccaptchacontroller",{"_index":987,"title":{"interfaces/BasicCaptchaController.html":{}},"body":{"interfaces/BasicCaptchaController.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["basicexplorercontroller",{"_index":1006,"title":{"interfaces/BasicExplorerController.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["basicexplorerservice",{"_index":2002,"title":{},"body":{"modules/ExplorerModule.html":{},"miscellaneous/variables.html":{}}}],["basicfilecontroller",{"_index":660,"title":{"interfaces/BasicFileController.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["basicmediacontroller",{"_index":1150,"title":{"interfaces/BasicMediaController.html":{}},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["basicusercontroller",{"_index":1213,"title":{"interfaces/BasicUserController.html":{}},"body":{"interfaces/BasicUserController.html":{},"controllers/ProfileController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["basicuserservice",{"_index":1244,"title":{"injectables/BasicUserService.html":{}},"body":{"injectables/BasicUserService.html":{},"modules/UserModule.html":{}}}],["basis",{"_index":750,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["bcrypt",{"_index":278,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"dependencies.html":{}}}],["bcrypt.compare(user.password",{"_index":322,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["bcrypt.hash(password",{"_index":325,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["before",{"_index":471,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/UserSubscriber.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["beforeinsert",{"_index":3765,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beforeinsert(event",{"_index":3769,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beforeupdate",{"_index":3766,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beforeupdate(event",{"_index":3771,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beginning",{"_index":541,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["behalf",{"_index":4215,"title":{},"body":{"license.html":{}}}],["being",{"_index":1095,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["belongs",{"_index":348,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["below",{"_index":4196,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":4179,"title":{},"body":{"license.html":{}}}],["between",{"_index":510,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["bind",{"_index":4207,"title":{},"body":{"license.html":{}}}],["bit",{"_index":463,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["bitdepth",{"_index":465,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["bitrate",{"_index":335,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["bits",{"_index":447,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["block",{"_index":543,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["blocked",{"_index":4601,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["blocking",{"_index":4599,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["body",{"_index":761,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/BasicExplorerController.html":{},"controllers/CaptchaController.html":{},"controllers/ConfigController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"controllers/ProfileController.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["body.depth",{"_index":3937,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["body.schema",{"_index":3840,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["body.user",{"_index":3936,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["body_token",{"_index":4434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boilerplate",{"_index":4388,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":52,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["bootstrap",{"_index":1283,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}],["both",{"_index":1511,"title":{},"body":{"interfaces/ConfigItem.html":{},"entities/ExplorerActionEntity.html":{}}}],["bps",{"_index":451,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["brackets",{"_index":4391,"title":{},"body":{"license.html":{}}}],["break",{"_index":232,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{}}}],["bridge",{"_index":3895,"title":{},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["bridge.constants",{"_index":3901,"title":{},"body":{"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["bridge.constants.ts",{"_index":3808,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["bridge.constants.ts:33",{"_index":3892,"title":{},"body":{"classes/XdbImportService.html":{}}}],["bridge.constants.ts:35",{"_index":3890,"title":{},"body":{"classes/XdbImportService.html":{}}}],["bridge.constants.ts:41",{"_index":3813,"title":{},"body":{"classes/XdbExportService.html":{}}}],["bridge.controller",{"_index":3978,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["bridge.controller.ts",{"_index":3916,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["bridge.controller.ts:48",{"_index":3923,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["bridge.controller.ts:55",{"_index":3927,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["bridge.controller.ts:63",{"_index":3920,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["bridge.middleware",{"_index":3979,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["bridge.middleware.ts",{"_index":3940,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["bridge.middleware.ts:26",{"_index":3952,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["bridge.middleware.ts:34",{"_index":3948,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["bridge.middleware.ts:47",{"_index":3945,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["bridge.module.ts",{"_index":3962,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["bridge.module.ts:44",{"_index":3968,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["bridge.module.ts:76",{"_index":3966,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["bridge.types",{"_index":3819,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{}}}],["bridge.types.ts",{"_index":3894,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["bridge/xml",{"_index":3807,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["brightness",{"_index":571,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["broker",{"_index":3379,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["broker.constants",{"_index":3142,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["broker.constants.ts",{"_index":4451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["broker.module",{"_index":3477,"title":{},"body":{"modules/ProcessModule.html":{}}}],["broker.module.ts",{"_index":3140,"title":{},"body":{"modules/MessagesBrokerModule.html":{}}}],["broker.service",{"_index":3145,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"injectables/ProcessRegisterService.html":{}}}],["broker.service.ts",{"_index":3146,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:27",{"_index":3167,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:28",{"_index":3168,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:29",{"_index":3151,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:47",{"_index":3153,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:56",{"_index":3165,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:65",{"_index":3166,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:75",{"_index":3161,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.service.ts:88",{"_index":3155,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["broker.subscribe(command.register",{"_index":3506,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["broker.subscribe(command.start",{"_index":3510,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["broker.subscribe(command.stop",{"_index":3512,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["broker.subscribe(command.unregister",{"_index":3508,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["broker.types",{"_index":3170,"title":{},"body":{"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{}}}],["broker.types.ts",{"_index":3122,"title":{},"body":{"interfaces/MessagesBroker.html":{}}}],["broker.types.ts:26",{"_index":3127,"title":{},"body":{"interfaces/MessagesBroker.html":{}}}],["broker.types.ts:33",{"_index":3132,"title":{},"body":{"interfaces/MessagesBroker.html":{}}}],["broker.types.ts:39",{"_index":3135,"title":{},"body":{"interfaces/MessagesBroker.html":{}}}],["broker/messages",{"_index":3121,"title":{},"body":{"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"miscellaneous/variables.html":{}}}],["brokering",{"_index":3123,"title":{},"body":{"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{}}}],["browse",{"_index":4403,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":4404,"title":{},"body":{"modules.html":{}}}],["brute",{"_index":919,"title":{},"body":{"classes/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce",{"_index":923,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforce.block.duration",{"_index":4600,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce.enabled",{"_index":4595,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce.max.attempts",{"_index":4598,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce.properties",{"_index":4593,"title":{"additional-documentation/properties/bruteforce.properties.html":{}},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["bruteforce_jwt_cache_prefix",{"_index":922,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforce_jwt_cache_prefix}:ip:${ipaddress",{"_index":939,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforce_jwt_cache_prefix}:login:${login",{"_index":935,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforceipkey",{"_index":938,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["bruteforceloginkey",{"_index":934,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["buf",{"_index":2158,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{}}}],["buffer",{"_index":1192,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/DirectoryStructure.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["build",{"_index":4128,"title":{},"body":{"index.html":{}}}],["builder",{"_index":2501,"title":{},"body":{"injectables/FileService.html":{}}}],["built",{"_index":2892,"title":{},"body":{"classes/LogService.html":{},"index.html":{}}}],["bus",{"_index":3102,"title":{},"body":{"interfaces/MessageBus.html":{},"miscellaneous/variables.html":{}}}],["bvalue",{"_index":1630,"title":{},"body":{"injectables/ConfigService.html":{}}}],["bvalue.localecompare(avalue",{"_index":1634,"title":{},"body":{"injectables/ConfigService.html":{}}}],["bytes",{"_index":399,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["c",{"_index":2049,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"entities/ProcessUnitEntity.html":{},"license.html":{}}}],["c.process",{"_index":3538,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["c.target",{"_index":2050,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["cache",{"_index":914,"title":{},"body":{"classes/AuthService.html":{},"classes/CacheService.html":{},"injectables/ConfigService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/RedisCacheService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cache.constants",{"_index":3589,"title":{},"body":{"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{}}}],["cache.service",{"_index":1301,"title":{},"body":{"modules/CacheModule.html":{}}}],["cache.service.ts",{"_index":3574,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:102",{"_index":3577,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:121",{"_index":3585,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:139",{"_index":3578,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:157",{"_index":3582,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:27",{"_index":3576,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:39",{"_index":3580,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:54",{"_index":3581,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:65",{"_index":3584,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.service.ts:78",{"_index":3588,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["cache.types",{"_index":1299,"title":{},"body":{"modules/CacheModule.html":{},"injectables/RedisCacheService.html":{}}}],["cache/cache.constants",{"_index":3172,"title":{},"body":{"injectables/MessagesBrokerService.html":{},"modules/WarlockModule.html":{}}}],["cache/redis.module",{"_index":3143,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["cached",{"_index":2690,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["cachemodule",{"_index":850,"title":{"modules/CacheModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/ProcessModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"overview.html":{}}}],["cacheservice",{"_index":19,"title":{"classes/CacheService.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"overview.html":{}}}],["caching",{"_index":1291,"title":{},"body":{"modules/CacheModule.html":{}}}],["call",{"_index":3950,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["callback",{"_index":151,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["called",{"_index":153,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["caller",{"_index":3801,"title":{},"body":{"modules/WarlockModule.html":{}}}],["callhandler",{"_index":1858,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["calling",{"_index":2908,"title":{},"body":{"classes/LogService.html":{}}}],["camera",{"_index":441,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["can't",{"_index":207,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessRegisterService.html":{}}}],["canactivate",{"_index":14,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":28,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canread",{"_index":1055,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["canread.name",{"_index":4528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canread.name.lang",{"_index":4529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canvas",{"_index":2696,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"dependencies.html":{}}}],["canvas.getcontext(\"2d",{"_index":2724,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["canvas.height",{"_index":2734,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["canvas.width",{"_index":2733,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["canwrite",{"_index":1056,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["canwrite.name",{"_index":4530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canwrite.name.lang",{"_index":4531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capabilities",{"_index":360,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["capex",{"_index":2711,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["capfontfamily",{"_index":2725,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["capfontpath",{"_index":2727,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha",{"_index":796,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.constants",{"_index":2698,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.controller",{"_index":1365,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["captcha.enabled",{"_index":4605,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.expiration",{"_index":4606,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.font.family",{"_index":4610,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.font.path",{"_index":4608,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.google.public.key",{"_index":4612,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.google.secret.key",{"_index":4614,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.id",{"_index":1352,"title":{},"body":{"controllers/CaptchaController.html":{}}}],["captcha.image",{"_index":1353,"title":{},"body":{"controllers/CaptchaController.html":{}}}],["captcha.properties",{"_index":4604,"title":{"additional-documentation/properties/captcha.properties.html":{}},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.service",{"_index":1364,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["captcha.service.ts",{"_index":2636,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:129",{"_index":2674,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:137",{"_index":2677,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:145",{"_index":2678,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:153",{"_index":2681,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:33",{"_index":2644,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["captcha.service.ts:39",{"_index":2671,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.service.ts:96",{"_index":2684,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captcha.type",{"_index":1354,"title":{},"body":{"controllers/CaptchaController.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["captcha.types",{"_index":1345,"title":{},"body":{"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captcha/captcha.module",{"_index":860,"title":{},"body":{"modules/AuthModule.html":{}}}],["captcha/captcha.types",{"_index":772,"title":{},"body":{"controllers/AuthController.html":{}}}],["captcha_cache_prefix",{"_index":2697,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"miscellaneous/variables.html":{}}}],["captcha_cache_prefix}:${request.id",{"_index":2716,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captchabody",{"_index":996,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["captchaconfig",{"_index":765,"title":{},"body":{"controllers/AuthController.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captchaconfig.enabled",{"_index":791,"title":{},"body":{"controllers/AuthController.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captchaconfig.google_secret_key",{"_index":2654,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["captchacontroller",{"_index":1340,"title":{"controllers/CaptchaController.html":{}},"body":{"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{}}}],["captchaenabled",{"_index":789,"title":{},"body":{"controllers/AuthController.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captchaid",{"_index":976,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["captchamodule",{"_index":859,"title":{"modules/CaptchaModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules.html":{}}}],["captchamodule.forroot",{"_index":863,"title":{},"body":{"modules/AuthModule.html":{}}}],["captchamoduleoptions",{"_index":1005,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"miscellaneous/typealiases.html":{}}}],["captchapayload",{"_index":977,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["captcharequest",{"_index":993,"title":{"classes/CaptchaRequest.html":{}},"body":{"interfaces/BasicCaptchaController.html":{},"controllers/CaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captcharesponse",{"_index":1003,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"controllers/CaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"miscellaneous/typealiases.html":{}}}],["captchas",{"_index":2665,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captchaservice",{"_index":771,"title":{"classes/CaptchaService.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/BasicCaptchaController.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["captchaservice:46",{"_index":2645,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["captchaservice:55",{"_index":2672,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["captchaservice:62",{"_index":2647,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["captchaservice:76",{"_index":2689,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["capture",{"_index":557,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["captured",{"_index":601,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["capturing",{"_index":552,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["carry",{"_index":4284,"title":{},"body":{"license.html":{}}}],["cascade",{"_index":1391,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["cascade'})@joincolumn",{"_index":2118,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["case",{"_index":230,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["cat",{"_index":1461,"title":{},"body":{"injectables/CategoryService.html":{}}}],["catch",{"_index":219,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"miscellaneous/variables.html":{}}}],["catch((err",{"_index":2545,"title":{},"body":{"injectables/FileService.html":{}}}],["catch(exception",{"_index":1763,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["catch(typeormerror",{"_index":1769,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["catcherror",{"_index":3208,"title":{},"body":{"classes/MsClient.html":{}}}],["catcherror((error",{"_index":3228,"title":{},"body":{"classes/MsClient.html":{}}}],["catches",{"_index":1760,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["categories",{"_index":1427,"title":{},"body":{"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{}}}],["category",{"_index":1374,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"miscellaneous/variables.html":{}}}],["category.constants",{"_index":1467,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category.entity",{"_index":1443,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["category.service",{"_index":1428,"title":{},"body":{"modules/CategoryModule.html":{}}}],["category_relations",{"_index":1466,"title":{},"body":{"injectables/CategoryService.html":{},"miscellaneous/variables.html":{}}}],["categoryentity",{"_index":1372,"title":{"entities/CategoryEntity.html":{}},"body":{"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{}}}],["categorymodule",{"_index":1417,"title":{"modules/CategoryModule.html":{}},"body":{"modules/CategoryModule.html":{},"modules.html":{},"overview.html":{}}}],["categoryrestrictionentity",{"_index":1432,"title":{"entities/CategoryRestrictionEntity.html":{}},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["categoryservice",{"_index":1422,"title":{"injectables/CategoryService.html":{}},"body":{"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"overview.html":{}}}],["catrep",{"_index":1452,"title":{},"body":{"injectables/CategoryService.html":{}}}],["cause",{"_index":4171,"title":{},"body":{"license.html":{}}}],["caused",{"_index":158,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["cb",{"_index":536,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["certain",{"_index":4043,"title":{},"body":{"index.html":{}}}],["chanel",{"_index":3130,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["change",{"_index":4081,"title":{},"body":{"index.html":{}}}],["changed",{"_index":285,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"license.html":{}}}],["changes",{"_index":1140,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["changetarget",{"_index":2020,"title":{},"body":{"classes/ExplorerService.html":{}}}],["changetarget(target",{"_index":1141,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["channel",{"_index":3129,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["channels",{"_index":371,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["character",{"_index":390,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["characteristics",{"_index":430,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["charat(0",{"_index":1736,"title":{},"body":{"injectables/ConfigService.html":{}}}],["charge",{"_index":4242,"title":{},"body":{"license.html":{}}}],["check",{"_index":1116,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["checking",{"_index":67,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["checks",{"_index":3871,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["checkuseraccess",{"_index":1085,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["child",{"_index":257,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["children",{"_index":1376,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/CategoryService.html":{}}}],["choose",{"_index":4370,"title":{},"body":{"license.html":{}}}],["chunk",{"_index":3604,"title":{},"body":{"injectables/RedisCacheService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["claim",{"_index":4268,"title":{},"body":{"license.html":{}}}],["claims",{"_index":4258,"title":{},"body":{"license.html":{}}}],["class",{"_index":10,"title":{"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/DbExceptionFilter.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerService.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"classes/MediaDto.html":{},"classes/MediaFileDto.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"classes/MediaTypeDto.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"license.html":{}}}],["class\"]?.description",{"_index":2351,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["class\"]?.value",{"_index":2353,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["classes",{"_index":118,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/DbExceptionFilter.html":{},"classes/ExchangeTokenPayload.html":{},"classes/ExplorerService.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"classes/MediaDto.html":{},"classes/MediaFileDto.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"classes/MediaTypeDto.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"overview.html":{}}}],["clean",{"_index":3658,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaned",{"_index":3689,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaner.process.ts",{"_index":3648,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaner.process.ts:30",{"_index":3652,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaner.process.ts:63",{"_index":3660,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["cleaning",{"_index":3649,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["client",{"_index":1002,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["client.constants",{"_index":3247,"title":{},"body":{"modules/MsClientModule.html":{}}}],["client.constants.ts",{"_index":4452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["client.module.ts",{"_index":3243,"title":{},"body":{"modules/MsClientModule.html":{}}}],["client.ts",{"_index":3191,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:30",{"_index":3196,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:43",{"_index":3197,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:64",{"_index":3205,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:80",{"_index":3200,"title":{},"body":{"classes/MsClient.html":{}}}],["client.ts:97",{"_index":3203,"title":{},"body":{"classes/MsClient.html":{}}}],["client.types",{"_index":3212,"title":{},"body":{"classes/MsClient.html":{}}}],["client.types.ts",{"_index":3100,"title":{},"body":{"interfaces/MessageBus.html":{},"miscellaneous/typealiases.html":{}}}],["client.types.ts:30",{"_index":3109,"title":{},"body":{"interfaces/MessageBus.html":{}}}],["client.types.ts:36",{"_index":3115,"title":{},"body":{"interfaces/MessageBus.html":{}}}],["client.types.ts:42",{"_index":3112,"title":{},"body":{"interfaces/MessageBus.html":{}}}],["client/ms",{"_index":3099,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["clientproxy",{"_index":3195,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["clientsmodule",{"_index":3244,"title":{},"body":{"modules/MsClientModule.html":{}}}],["clientsmodule.registerasync",{"_index":3248,"title":{},"body":{"modules/MsClientModule.html":{}}}],["cluster_cachemodule",{"_index":1284,"title":{},"body":{"modules/CacheModule.html":{},"overview.html":{}}}],["cluster_cachemodule_exports",{"_index":1286,"title":{},"body":{"modules/CacheModule.html":{},"overview.html":{}}}],["cluster_cachemodule_imports",{"_index":1285,"title":{},"body":{"modules/CacheModule.html":{},"overview.html":{}}}],["cluster_categorymodule",{"_index":1418,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_categorymodule_exports",{"_index":1420,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_categorymodule_imports",{"_index":1419,"title":{},"body":{"modules/CategoryModule.html":{}}}],["cluster_categorymodule_providers",{"_index":1421,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_configmodule",{"_index":1514,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":1515,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_imports",{"_index":1516,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_providers",{"_index":1517,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_localemodule",{"_index":2796,"title":{},"body":{"modules/LocaleModule.html":{},"overview.html":{}}}],["cluster_localemodule_exports",{"_index":2797,"title":{},"body":{"modules/LocaleModule.html":{},"overview.html":{}}}],["cluster_localemodule_providers",{"_index":2798,"title":{},"body":{"modules/LocaleModule.html":{},"overview.html":{}}}],["cluster_messagesbrokermodule",{"_index":3138,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"overview.html":{}}}],["cluster_messagesbrokermodule_imports",{"_index":3139,"title":{},"body":{"modules/MessagesBrokerModule.html":{}}}],["cluster_msclientmodule",{"_index":3241,"title":{},"body":{"modules/MsClientModule.html":{},"overview.html":{}}}],["cluster_msclientmodule_imports",{"_index":3242,"title":{},"body":{"modules/MsClientModule.html":{}}}],["cluster_processmodule",{"_index":3458,"title":{},"body":{"modules/ProcessModule.html":{},"overview.html":{}}}],["cluster_processmodule_exports",{"_index":3459,"title":{},"body":{"modules/ProcessModule.html":{},"overview.html":{}}}],["cluster_processmodule_imports",{"_index":3461,"title":{},"body":{"modules/ProcessModule.html":{},"overview.html":{}}}],["cluster_processmodule_providers",{"_index":3460,"title":{},"body":{"modules/ProcessModule.html":{},"overview.html":{}}}],["cluster_warlockmodule",{"_index":3787,"title":{},"body":{"modules/WarlockModule.html":{}}}],["cluster_warlockmodule_imports",{"_index":3788,"title":{},"body":{"modules/WarlockModule.html":{}}}],["code",{"_index":392,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleService.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"classes/MsException.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["codebase",{"_index":4097,"title":{},"body":{"index.html":{}}}],["codec",{"_index":336,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["codec_profile",{"_index":684,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["codecprofile",{"_index":337,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["code}_${language.id",{"_index":2826,"title":{},"body":{"injectables/LocaleService.html":{}}}],["color",{"_index":416,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["color_components",{"_index":2767,"title":{},"body":{"entities/ImageFileMetadataEntity.html":{}}}],["color_range",{"_index":3779,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["color_space",{"_index":3780,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["colorcomponents",{"_index":456,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["colorrange",{"_index":649,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["colors",{"_index":509,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["colorspace",{"_index":591,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["colortype",{"_index":467,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["column",{"_index":703,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicExplorerController.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["column(\"boolean",{"_index":1943,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{}}}],["column(\"date",{"_index":2765,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["column(\"decimal",{"_index":710,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["column(\"int",{"_index":709,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/FileEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["column(\"simple",{"_index":1416,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["column(\"smallint",{"_index":3048,"title":{},"body":{"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{}}}],["column(\"text",{"_index":1942,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/ProcessLogEntity.html":{}}}],["column(\"varchar",{"_index":708,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["column('boolean",{"_index":2123,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaTypeEntity.html":{}}}],["column('int",{"_index":2125,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaTypeEntity.html":{}}}],["column('simple",{"_index":1394,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["column('smallint",{"_index":3039,"title":{},"body":{"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{}}}],["column('text",{"_index":1934,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/ProcessLogEntity.html":{}}}],["column('varchar",{"_index":1403,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/UserEntity.html":{}}}],["column.entity",{"_index":2008,"title":{},"body":{"modules/ExplorerModule.html":{},"entities/ExplorerTargetEntity.html":{}}}],["column.entity.ts",{"_index":1893,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:103",{"_index":1904,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:107",{"_index":1928,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:111",{"_index":1913,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:115",{"_index":1924,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:119",{"_index":1909,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:127",{"_index":1926,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:135",{"_index":1911,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:138",{"_index":1930,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:41",{"_index":1898,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:45",{"_index":1915,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:49",{"_index":1901,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:53",{"_index":1896,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:56",{"_index":1933,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:59",{"_index":1935,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:63",{"_index":1937,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:67",{"_index":1914,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:71",{"_index":1936,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:75",{"_index":1900,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:79",{"_index":1902,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:83",{"_index":1917,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:87",{"_index":1919,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:91",{"_index":1923,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:95",{"_index":1906,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["column.entity.ts:99",{"_index":1921,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["columndatatype",{"_index":1045,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["columns",{"_index":1047,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["columns.description",{"_index":4509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.description.lang",{"_index":4510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.name",{"_index":4507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.name.lang",{"_index":4508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer",{"_index":4511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer.description",{"_index":4514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer.description.lang",{"_index":4515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer.name",{"_index":4512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.objectrenderer.name.lang",{"_index":4513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer",{"_index":4516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer.description",{"_index":4519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer.description.lang",{"_index":4520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer.name",{"_index":4517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.sectionrenderer.name.lang",{"_index":4518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.tab",{"_index":4521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.tab.name",{"_index":4522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columns.tab.name.lang",{"_index":4523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["combination",{"_index":4264,"title":{},"body":{"license.html":{}}}],["combining",{"_index":625,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/LogService.html":{},"interfaces/VideoFileMetadata.html":{}}}],["command",{"_index":3418,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["commands",{"_index":4015,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["comment",{"_index":4395,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":4365,"title":{},"body":{"license.html":{}}}],["common",{"_index":4165,"title":{},"body":{"license.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["common/auth/auth.constants",{"_index":80,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["common/media/entity/media.entity",{"_index":1413,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{}}}],["common/media/media.types",{"_index":2780,"title":{},"body":{"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{}}}],["common/user/entity/user",{"_index":1444,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["common/user/user.types",{"_index":83,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["commonutils",{"_index":3322,"title":{},"body":{"controllers/ProcessController.html":{}}}],["commonutils.sleep",{"_index":3325,"title":{},"body":{"controllers/ProcessController.html":{}}}],["communication",{"_index":4059,"title":{},"body":{"index.html":{},"license.html":{}}}],["company",{"_index":368,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["compatibility",{"_index":597,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["compensation",{"_index":572,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["compiled",{"_index":4190,"title":{},"body":{"license.html":{}}}],["complete",{"_index":2849,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["compliance",{"_index":740,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["complies",{"_index":4310,"title":{},"body":{"license.html":{}}}],["components",{"_index":455,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["components\"]?.value",{"_index":2319,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["composite",{"_index":624,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["compositeimage",{"_index":630,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["comprehensive",{"_index":4050,"title":{},"body":{"index.html":{}}}],["compress",{"_index":639,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["compressing",{"_index":472,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["compression",{"_index":468,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["computer",{"_index":4362,"title":{},"body":{"license.html":{}}}],["concat(config_file_ext_pattern",{"_index":1733,"title":{},"body":{"injectables/ConfigService.html":{}}}],["conditions",{"_index":753,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["config",{"_index":1304,"title":{},"body":{"modules/CacheModule.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"miscellaneous/variables.html":{}}}],["config.constants",{"_index":1602,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config.controller",{"_index":1519,"title":{},"body":{"modules/ConfigModule.html":{}}}],["config.service",{"_index":1493,"title":{},"body":{"controllers/ConfigController.html":{},"modules/ConfigModule.html":{}}}],["config.ts",{"_index":4491,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["config.types",{"_index":1498,"title":{},"body":{"controllers/ConfigController.html":{},"injectables/ConfigService.html":{}}}],["config_cache_prefix",{"_index":1595,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["config_cache_prefix}:${!filter",{"_index":1624,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_cache_prefix}:${filenameprefix}.${keywithoutprefix",{"_index":1697,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_cache_prefix}:${item.key",{"_index":1648,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_cache_prefix}:${key",{"_index":1651,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_file_ext_pattern",{"_index":1596,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["configcontroller",{"_index":1476,"title":{"controllers/ConfigController.html":{}},"body":{"controllers/ConfigController.html":{},"modules/ConfigModule.html":{}}}],["configfilename",{"_index":1731,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configfilepath",{"_index":1734,"title":{},"body":{"injectables/ConfigService.html":{}}}],["configitem",{"_index":1487,"title":{"interfaces/ConfigItem.html":{}},"body":{"controllers/ConfigController.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{}}}],["configmodule",{"_index":1513,"title":{"modules/ConfigModule.html":{}},"body":{"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":1492,"title":{"injectables/ConfigService.html":{}},"body":{"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["configservice.initwithpropertiesfiles(gencnfdir",{"_index":4543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":373,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicFileController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/MsClient.html":{},"entities/ProcessUnitEntity.html":{},"modules/RedisModule.html":{},"interfaces/VideoFileMetadata.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["configurations",{"_index":1425,"title":{},"body":{"modules/CategoryModule.html":{},"injectables/ConfigService.html":{},"modules/LocaleModule.html":{}}}],["configure",{"_index":3963,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["configure(consumer",{"_index":3964,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["configuring",{"_index":668,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["confirm",{"_index":496,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["connection",{"_index":489,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["connection_space",{"_index":2743,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["connectionspace",{"_index":493,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["consequential",{"_index":4356,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":4376,"title":{},"body":{"license.html":{}}}],["consists",{"_index":1510,"title":{},"body":{"interfaces/ConfigItem.html":{}}}],["consortium",{"_index":417,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["conspicuously",{"_index":4227,"title":{},"body":{"license.html":{}}}],["const",{"_index":89,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"controllers/FileController.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"controllers/MediaController.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":905,"title":{},"body":{"classes/AuthService.html":{},"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":85,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{}}}],["constitutes",{"_index":4272,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":137,"title":{},"body":{"classes/AbstractProcess.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"controllers/ExplorerController.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"controllers/XmlDataBridgeController.html":{}}}],["constructor(@inject(redis_client",{"_index":3173,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["constructor(catrep",{"_index":1449,"title":{},"body":{"injectables/CategoryService.html":{}}}],["constructor(code",{"_index":3258,"title":{},"body":{"classes/MsException.html":{}}}],["constructor(fieldname",{"_index":3264,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["constructor(items",{"_index":3276,"title":{},"body":{"classes/PageableData.html":{}}}],["constructor(languagerep",{"_index":2811,"title":{},"body":{"injectables/LocaleService.html":{}}}],["constructor(lockexec",{"_index":3377,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["constructor(logger",{"_index":826,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"classes/MsClient.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["constructor(message",{"_index":949,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["constructor(private",{"_index":1347,"title":{},"body":{"controllers/CaptchaController.html":{},"controllers/ConfigController.html":{},"injectables/DtoInterceptor.html":{},"modules/ExplorerModule.html":{},"controllers/FileController.html":{},"controllers/MediaController.html":{},"injectables/NotEmptyPipe.html":{},"controllers/ProcessController.html":{},"modules/ProcessModule.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{}}}],["constructor(pubclient",{"_index":3150,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["constructor(reflector",{"_index":3631,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(serializer",{"_index":1853,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["constructor(userrep",{"_index":1254,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["constructs",{"_index":2518,"title":{},"body":{"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{}}}],["construed",{"_index":4307,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":3967,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["consumer.apply(xmldatabridgemiddleware).forroutes(xmldatabridgecontroller",{"_index":3983,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["contain",{"_index":306,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["contained",{"_index":4295,"title":{},"body":{"license.html":{}}}],["container",{"_index":338,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["containing",{"_index":891,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicExplorerController.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["contains",{"_index":365,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["content",{"_index":408,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/media.properties.html":{}}}],["content.split(\"\\n",{"_index":1677,"title":{},"body":{"injectables/ConfigService.html":{}}}],["contents",{"_index":1821,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"license.html":{}}}],["context",{"_index":48,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/DtoInterceptor.html":{},"classes/LogService.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["context.gethandler",{"_index":3640,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":90,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["continue",{"_index":1681,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ProcessManagerService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["contract",{"_index":3101,"title":{},"body":{"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"license.html":{}}}],["contrast",{"_index":617,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["contribution",{"_index":4209,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":4262,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":4312,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":4230,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":4273,"title":{},"body":{"license.html":{}}}],["control",{"_index":3630,"title":{},"body":{"guards/RolesGuard.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["controlled",{"_index":4164,"title":{},"body":{"license.html":{}}}],["controller",{"_index":671,"title":{"controllers/AuthController.html":{},"controllers/CaptchaController.html":{},"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"controllers/XmlDataBridgeController.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"controllers/ConfigController.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"controllers/XmlDataBridgeController.html":{},"miscellaneous/variables.html":{}}}],["controller(\"/auth",{"_index":785,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller(\"/captcha",{"_index":1346,"title":{},"body":{"controllers/CaptchaController.html":{}}}],["controller(\"/explorer",{"_index":1975,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["controller(\"/file",{"_index":2087,"title":{},"body":{"controllers/FileController.html":{}}}],["controller(\"/media",{"_index":2977,"title":{},"body":{"controllers/MediaController.html":{}}}],["controller(\"/profile",{"_index":3562,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller(\"config",{"_index":1499,"title":{},"body":{"controllers/ConfigController.html":{}}}],["controller(\"process",{"_index":3326,"title":{},"body":{"controllers/ProcessController.html":{}}}],["controller(\"xdb",{"_index":3928,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["controllers",{"_index":712,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"controllers/ProcessController.html":{},"modules/ProcessModule.html":{},"controllers/ProfileController.html":{},"modules/UserModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["conversions",{"_index":492,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["convert",{"_index":3997,"title":{},"body":{"dependencies.html":{}}}],["converting",{"_index":508,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["coordinated",{"_index":567,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["copies",{"_index":4064,"title":{},"body":{"index.html":{},"license.html":{}}}],["copy",{"_index":742,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["copyright",{"_index":518,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/BasicFileController.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["copyright\"]?.description",{"_index":2382,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["corresponding",{"_index":2524,"title":{},"body":{"injectables/FileService.html":{}}}],["counterclaim",{"_index":4269,"title":{},"body":{"license.html":{}}}],["counts",{"_index":1137,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["cr",{"_index":537,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["crash",{"_index":159,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["crashed",{"_index":223,"title":{},"body":{"classes/AbstractProcess.html":{},"miscellaneous/enumerations.html":{}}}],["crashes",{"_index":154,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["create",{"_index":482,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"injectables/BasicUserService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"classes/UserService.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["create(user",{"_index":1241,"title":{},"body":{"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["createbasicfindqb",{"_index":2491,"title":{},"body":{"injectables/FileService.html":{}}}],["createcanvas",{"_index":2694,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["createcanvas(200",{"_index":2721,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["created",{"_index":404,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"injectables/BasicUserService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"injectables/ProcessManagerService.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["createdatecolumn",{"_index":2131,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["createdirectoriesifnotexist",{"_index":2532,"title":{},"body":{"injectables/FileService.html":{}}}],["createdirectoriesifnotexist(dir",{"_index":2625,"title":{},"body":{"injectables/FileService.html":{}}}],["createdirectoriesifnotexist(directorypath",{"_index":1816,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["createfile",{"_index":1142,"title":{},"body":{"interfaces/BasicFileController.html":{},"controllers/FileController.html":{}}}],["createfile(file",{"_index":661,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["createfiledirectory",{"_index":2492,"title":{},"body":{"injectables/FileService.html":{}}}],["createfiledirectory(ispublic",{"_index":2502,"title":{},"body":{"injectables/FileService.html":{}}}],["createfileentity",{"_index":2493,"title":{},"body":{"injectables/FileService.html":{}}}],["createfileentity(ispublic",{"_index":2506,"title":{},"body":{"injectables/FileService.html":{}}}],["createfilemetadataentity",{"_index":2157,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{}}}],["createfilemetadataentity(buf",{"_index":2159,"title":{},"body":{"classes/FileMd.html":{},"injectables/FileMetadataService.html":{}}}],["createlocalizedstrings",{"_index":2810,"title":{},"body":{"injectables/LocaleService.html":{}}}],["createlocalizedstrings(value",{"_index":2816,"title":{},"body":{"injectables/LocaleService.html":{}}}],["createloginstance",{"_index":3368,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["createloginstance(processcode",{"_index":3384,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["createmedia",{"_index":1152,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["createmedia(file",{"_index":1157,"title":{},"body":{"interfaces/BasicMediaController.html":{},"controllers/MediaController.html":{}}}],["createorupdatefile",{"_index":2139,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{}}}],["createorupdatefile(file",{"_index":2145,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{}}}],["createorupdatemedia",{"_index":1207,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["createorupdatemedia(file",{"_index":3061,"title":{},"body":{"classes/MediaManager.html":{}}}],["createparamdecorator",{"_index":4466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createquerybuilder(\"file",{"_index":2589,"title":{},"body":{"injectables/FileService.html":{}}}],["creates",{"_index":1813,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LocaleService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{}}}],["createuserprofile",{"_index":1215,"title":{},"body":{"interfaces/BasicUserController.html":{},"controllers/ProfileController.html":{}}}],["createuserprofile(@body",{"_index":3571,"title":{},"body":{"controllers/ProfileController.html":{}}}],["createuserprofile(profile",{"_index":1219,"title":{},"body":{"interfaces/BasicUserController.html":{},"controllers/ProfileController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["creating",{"_index":11,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["creation",{"_index":2178,"title":{},"body":{"injectables/FileMetadataService.html":{},"index.html":{}}}],["creator",{"_index":514,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["creator\"]?.description",{"_index":2378,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["criteria",{"_index":3288,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["cron",{"_index":3434,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"index.html":{}}}],["cron/dist/job",{"_index":3503,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["cron_tab",{"_index":3534,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["cronjob",{"_index":3502,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["cronjob(processdata.crontab",{"_index":3523,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["crontab",{"_index":3351,"title":{},"body":{"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["cross",{"_index":4267,"title":{},"body":{"license.html":{}}}],["crud",{"_index":4030,"title":{},"body":{"index.html":{}}}],["crutch",{"_index":1798,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["crypto",{"_index":1780,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["crypto.createhash(\"sha256",{"_index":1810,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["cryptographic",{"_index":411,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["cs",{"_index":867,"title":{},"body":{"modules/AuthModule.html":{}}}],["cs.get(authconfig.jwt_secret",{"_index":869,"title":{},"body":{"modules/AuthModule.html":{}}}],["cs.getnumber",{"_index":872,"title":{},"body":{"modules/AuthModule.html":{}}}],["ctx",{"_index":2723,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"classes/LogService.html":{},"miscellaneous/variables.html":{}}}],["ctx.fillrect(0",{"_index":2732,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["ctx.fillstyle",{"_index":2730,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["ctx.font",{"_index":2735,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["ctx.methodname",{"_index":2928,"title":{},"body":{"classes/LogService.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":4467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.textbaseline",{"_index":2737,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["ctx?.filepath}:${ctx?.linenumber",{"_index":2935,"title":{},"body":{"classes/LogService.html":{}}}],["ctx?.methodname",{"_index":2936,"title":{},"body":{"classes/LogService.html":{}}}],["current",{"_index":34,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/variables.html":{}}}],["currentpage",{"_index":3277,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["currentpath",{"_index":1828,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["currentuser",{"_index":1099,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"controllers/ProfileController.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"controllers/XmlDataBridgeController.html":{},"miscellaneous/variables.html":{}}}],["currentuser.roles.find((v",{"_index":3737,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["custom",{"_index":604,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"classes/ForbiddenMsException.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["customary",{"_index":4328,"title":{},"body":{"license.html":{}}}],["customrendered",{"_index":605,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["d",{"_index":4293,"title":{},"body":{"license.html":{}}}],["d\\s()]*$/.test(processedvalue",{"_index":1706,"title":{},"body":{"injectables/ConfigService.html":{}}}],["damages",{"_index":4353,"title":{},"body":{"license.html":{}}}],["data",{"_index":174,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data.accesstoken",{"_index":801,"title":{},"body":{"controllers/AuthController.html":{}}}],["data.atexp",{"_index":805,"title":{},"body":{"controllers/AuthController.html":{}}}],["data.refreshtoken",{"_index":807,"title":{},"body":{"controllers/AuthController.html":{}}}],["data.rtexp",{"_index":808,"title":{},"body":{"controllers/AuthController.html":{}}}],["data.tostring",{"_index":3188,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["data:image/png;base64,${image",{"_index":2715,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["database",{"_index":1102,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"classes/DbExceptionFilter.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/FileService.html":{},"interfaces/TargetData.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["datasource",{"_index":2842,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["datasource.manager.connection.subscribers.push(this",{"_index":2853,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["date",{"_index":240,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["date\"]?.value",{"_index":2359,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["date(exifdata.icc[\"icc",{"_index":2358,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["date.tolocalestring",{"_index":253,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["date_time",{"_index":2768,"title":{},"body":{"entities/ImageFileMetadataEntity.html":{}}}],["dates",{"_index":982,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["datetime",{"_index":462,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["db",{"_index":1309,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"index.html":{}}}],["db.properties",{"_index":4117,"title":{},"body":{"index.html":{}}}],["dbexceptionfilter",{"_index":1755,"title":{"classes/DbExceptionFilter.html":{}},"body":{"classes/DbExceptionFilter.html":{}}}],["dbms",{"_index":4104,"title":{},"body":{"index.html":{}}}],["debug",{"_index":2894,"title":{},"body":{"classes/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["debug(message",{"_index":2900,"title":{},"body":{"classes/LogService.html":{}}}],["declarations",{"_index":1282,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}],["decoding",{"_index":357,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["decomposed",{"_index":3914,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["decompress",{"_index":640,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["decorator",{"_index":4469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":676,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"controllers/CaptchaController.html":{},"classes/CaptchaRequest.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"classes/ExchangeTokenPayload.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"controllers/XmlDataBridgeController.html":{}}}],["decorators/for",{"_index":3638,"title":{},"body":{"guards/RolesGuard.html":{}}}],["deepequal(obj1",{"_index":3878,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["deepequal(obj1[key",{"_index":3886,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["deepequal(uniqueobj",{"_index":3868,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["deeply",{"_index":3873,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["default",{"_index":182,"title":{},"body":{"classes/AbstractProcess.html":{},"entities/AudioFileMetadataEntity.html":{},"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/ImageFileMetadataEntity.html":{},"injectables/LiteAuthGuard.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"entities/ProcessUnitEntity.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserSubscriber.html":{},"entities/VideoFileMetadataEntity.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["default.env",{"_index":4106,"title":{},"body":{"index.html":{}}}],["default_action_create",{"_index":2052,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["default_action_delete",{"_index":2054,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["default_action_duplicate",{"_index":2056,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["default_action_save",{"_index":2058,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["default_explorer_module_deps",{"_index":2010,"title":{},"body":{"modules/ExplorerModule.html":{},"miscellaneous/variables.html":{}}}],["default_media_quality",{"_index":4441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default_media_type",{"_index":2969,"title":{},"body":{"controllers/MediaController.html":{},"miscellaneous/variables.html":{}}}],["defaultactioncreate",{"_index":1051,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["defaultactiondelete",{"_index":1053,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["defaultactionduplicate",{"_index":1054,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["defaultactionsave",{"_index":1052,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["defaults",{"_index":1130,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["defend",{"_index":4382,"title":{},"body":{"license.html":{}}}],["defined",{"_index":30,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["defines",{"_index":881,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["defining",{"_index":1315,"title":{},"body":{"classes/CacheService.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"miscellaneous/variables.html":{}}}],["definition",{"_index":3116,"title":{},"body":{"interfaces/MessageBus.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["definitions",{"_index":4152,"title":{},"body":{"license.html":{}}}],["degrees",{"_index":658,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["del",{"_index":1317,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["del(...keys",{"_index":1323,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["delete",{"_index":317,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"controllers/MediaController.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["delete(\"/:id",{"_index":2106,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/ProfileController.html":{}}}],["delete(\"/entity/:target",{"_index":1995,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["delete('/:id",{"_index":2078,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{}}}],["delete('/entity/:target",{"_index":1963,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["deleted",{"_index":3663,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["deleteexistingconfigtsfiles",{"_index":1529,"title":{},"body":{"injectables/ConfigService.html":{}}}],["deleteexistingconfigtsfiles(directory",{"_index":1539,"title":{},"body":{"injectables/ConfigService.html":{}}}],["deletes",{"_index":1541,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{},"injectables/RedisCacheService.html":{}}}],["deleting",{"_index":3597,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["deliberate",{"_index":4348,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":1280,"title":{"dependencies.html":{}},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["depth",{"_index":434,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{}}}],["depth\"]?.value",{"_index":2326,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["derivative",{"_index":4197,"title":{},"body":{"license.html":{}}}],["derived",{"_index":883,"title":{},"body":{"classes/AuthService.html":{},"license.html":{}}}],["desc",{"_index":3291,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"miscellaneous/enumerations.html":{}}}],["descendants",{"_index":1455,"title":{},"body":{"injectables/CategoryService.html":{}}}],["describing",{"_index":487,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["description",{"_index":8,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["description\"]?.description",{"_index":2380,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["description.lang",{"_index":4506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deserialize",{"_index":3158,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["deserialized",{"_index":3159,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["deserializes",{"_index":3157,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["designated",{"_index":4229,"title":{},"body":{"license.html":{}}}],["desired",{"_index":4140,"title":{},"body":{"index.html":{}}}],["detailed",{"_index":1875,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"index.html":{}}}],["details",{"_index":4090,"title":{},"body":{"index.html":{}}}],["detect",{"_index":3831,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["determines",{"_index":32,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["determining",{"_index":4338,"title":{},"body":{"license.html":{}}}],["development",{"_index":4024,"title":{},"body":{"index.html":{},"properties.html":{}}}],["device",{"_index":442,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["device_manufacturer",{"_index":2744,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["device_model_number",{"_index":2746,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["devicemanufacturer",{"_index":505,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["devicemodelnumber",{"_index":506,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["different",{"_index":3622,"title":{},"body":{"classes/Roles.html":{},"index.html":{},"license.html":{}}}],["digital",{"_index":602,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["digitalzoomratio",{"_index":615,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["dir",{"_index":1716,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["direct",{"_index":4169,"title":{},"body":{"license.html":{}}}],["direction",{"_index":4172,"title":{},"body":{"license.html":{}}}],["directories",{"_index":1775,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"index.html":{},"additional-documentation/properties/media.properties.html":{}}}],["directory",{"_index":1543,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/media.properties.html":{}}}],["directorypath",{"_index":1815,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["directorystructure",{"_index":1773,"title":{"interfaces/DirectoryStructure.html":{}},"body":{"interfaces/DirectoryStructure.html":{}}}],["dirpath",{"_index":1727,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{}}}],["dirs",{"_index":1609,"title":{},"body":{"injectables/ConfigService.html":{}}}],["dirstruct",{"_index":3664,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["dirstruct[key].length",{"_index":3690,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["disables",{"_index":4597,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["disclaimer",{"_index":4331,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":4224,"title":{},"body":{"license.html":{}}}],["dispatch",{"_index":3103,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["dispatch(pattern",{"_index":3106,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["dispatched",{"_index":3199,"title":{},"body":{"classes/MsClient.html":{}}}],["dispatches",{"_index":3198,"title":{},"body":{"classes/MsClient.html":{}}}],["dispatching",{"_index":3192,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["display",{"_index":478,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/LogService.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["display_aspect_ratio",{"_index":3781,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["displayaspectratio",{"_index":648,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["displayed",{"_index":654,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["displaying",{"_index":4031,"title":{},"body":{"index.html":{}}}],["distance",{"_index":576,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["distribute",{"_index":4251,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":644,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/BasicFileController.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["distribution",{"_index":4151,"title":{},"body":{"license.html":{}}}],["document",{"_index":4156,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":4092,"title":{},"body":{"index.html":{},"license.html":{}}}],["documentations",{"_index":4095,"title":{},"body":{"index.html":{}}}],["don't",{"_index":4394,"title":{},"body":{"license.html":{}}}],["done",{"_index":4121,"title":{},"body":{"index.html":{}}}],["dotenv",{"_index":3993,"title":{},"body":{"dependencies.html":{}}}],["drawn",{"_index":2686,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["dto",{"_index":1851,"title":{},"body":{"injectables/DtoInterceptor.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["dto.decorator",{"_index":775,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["dtointerceptor",{"_index":1845,"title":{"injectables/DtoInterceptor.html":{}},"body":{"injectables/DtoInterceptor.html":{}}}],["duplicate",{"_index":1180,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["duplicates",{"_index":3863,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["duration",{"_index":339,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["during",{"_index":584,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["dynamic",{"_index":4049,"title":{},"body":{"index.html":{}}}],["dynamically",{"_index":1786,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dynamicmodule",{"_index":844,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["e",{"_index":220,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"entities/MediaTypeEntity.html":{},"miscellaneous/variables.html":{}}}],["e.code",{"_index":3088,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["e.g",{"_index":374,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["each",{"_index":1509,"title":{},"body":{"interfaces/ConfigItem.html":{},"license.html":{}}}],["easier",{"_index":4400,"title":{},"body":{"license.html":{}}}],["easy",{"_index":4068,"title":{},"body":{"index.html":{}}}],["edit",{"_index":532,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["editing",{"_index":1876,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["editorial",{"_index":4199,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":4078,"title":{},"body":{"index.html":{}}}],["effects",{"_index":629,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["efficient",{"_index":4052,"title":{},"body":{"index.html":{}}}],["elaborations",{"_index":4202,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":4216,"title":{},"body":{"license.html":{}}}],["elevation",{"_index":426,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["email",{"_index":1228,"title":{},"body":{"interfaces/BasicUserController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["embedded",{"_index":1043,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["emit",{"_index":3104,"title":{},"body":{"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{}}}],["emit(chanel",{"_index":3126,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["emit(pattern",{"_index":3111,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["emits",{"_index":3128,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{}}}],["emitted",{"_index":3201,"title":{},"body":{"classes/MsClient.html":{}}}],["empty",{"_index":2195,"title":{},"body":{"injectables/FileMetadataService.html":{},"injectables/NotEmptyPipe.html":{}}}],["empty.pipe",{"_index":2086,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["empty.pipe.ts",{"_index":3261,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["empty.pipe.ts:23",{"_index":3265,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["empty.pipe.ts:26",{"_index":3268,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["enabled",{"_index":1004,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"controllers/CaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["enables",{"_index":4596,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["enabling",{"_index":4051,"title":{},"body":{"index.html":{}}}],["encapsulates",{"_index":361,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["enclosed",{"_index":4390,"title":{},"body":{"license.html":{}}}],["encode",{"_index":381,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["encoded",{"_index":2688,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["encoding",{"_index":356,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/variables.html":{}}}],["encrypting",{"_index":4072,"title":{},"body":{"index.html":{}}}],["end",{"_index":1638,"title":{},"body":{"injectables/ConfigService.html":{},"license.html":{}}}],["ensure",{"_index":3263,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["ensuring",{"_index":632,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/VideoFileMetadata.html":{}}}],["entire",{"_index":4498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entities",{"_index":673,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicExplorerController.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":264,"title":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{}},"body":{"classes/AbstractUserSubscriber.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicExplorerController.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"entities/UserRoleEntity.html":{},"classes/UserSubscriber.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["entity(\"categories",{"_index":1414,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["entity(\"category_restriction",{"_index":1445,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["entity(\"explorer_actions",{"_index":1890,"title":{},"body":{"entities/ExplorerActionEntity.html":{}}}],["entity(\"explorer_column_renderers",{"_index":1951,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["entity(\"explorer_columns",{"_index":1941,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["entity(\"explorer_tabs",{"_index":2040,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["entity(\"explorer_targets",{"_index":2069,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["entity(\"file_metadata",{"_index":2174,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["entity(\"file_metadata_audio",{"_index":706,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["entity(\"file_metadata_gps",{"_index":2662,"title":{},"body":{"entities/GpsFileMetadataEntity.html":{}}}],["entity(\"file_metadata_icc",{"_index":2764,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["entity(\"file_metadata_image",{"_index":2769,"title":{},"body":{"entities/ImageFileMetadataEntity.html":{}}}],["entity(\"file_metadata_video",{"_index":3786,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["entity(\"files",{"_index":2136,"title":{},"body":{"entities/FileEntity.html":{}}}],["entity(\"languages",{"_index":2791,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["entity(\"localized_medias",{"_index":2878,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["entity(\"localized_strings",{"_index":2886,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["entity(\"medias",{"_index":3018,"title":{},"body":{"entities/MediaEntity.html":{}}}],["entity(\"medias_ext",{"_index":3025,"title":{},"body":{"entities/MediaExtEntity.html":{}}}],["entity(\"medias_files",{"_index":3047,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["entity(\"medias_format",{"_index":3058,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["entity(\"medias_types",{"_index":3096,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["entity(\"process_logs",{"_index":3364,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["entity(\"process_units",{"_index":3543,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["entity(\"users",{"_index":3729,"title":{},"body":{"entities/UserEntity.html":{}}}],["entity(\"users_roles",{"_index":3756,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["entity.code",{"_index":2556,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.constructor.name",{"_index":2862,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["entity.id",{"_index":2563,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.id.tostring",{"_index":2542,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.metadata",{"_index":2558,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.name",{"_index":2555,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.path",{"_index":2554,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.public",{"_index":2539,"title":{},"body":{"injectables/FileService.html":{}}}],["entity.size",{"_index":2552,"title":{},"body":{"injectables/FileService.html":{}}}],["entity/audio",{"_index":2204,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/category.entity",{"_index":1430,"title":{},"body":{"modules/CategoryModule.html":{},"injectables/CategoryService.html":{}}}],["entity/exif",{"_index":2208,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/explorer",{"_index":2007,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["entity/file",{"_index":2156,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{}}}],["entity/file.entity",{"_index":2155,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{}}}],["entity/gps",{"_index":2207,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/icc",{"_index":2209,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/image",{"_index":2206,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity/language.entity",{"_index":2803,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{}}}],["entity/localized",{"_index":2804,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{}}}],["entity/media",{"_index":3075,"title":{},"body":{"modules/MediaModule.html":{}}}],["entity/media.entity",{"_index":3074,"title":{},"body":{"modules/MediaModule.html":{}}}],["entity/process.log.entity",{"_index":189,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{}}}],["entity/process.unit.entity",{"_index":3413,"title":{},"body":{"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{}}}],["entity/user.entity",{"_index":298,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"controllers/ProfileController.html":{},"modules/UserModule.html":{}}}],["entity/video",{"_index":2205,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["entity_save_handler",{"_index":1973,"title":{},"body":{"controllers/ExplorerController.html":{},"miscellaneous/variables.html":{}}}],["entityid",{"_index":2503,"title":{},"body":{"injectables/FileService.html":{}}}],["entityidforpatch",{"_index":1193,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["entitymanager.remove(myentity",{"_index":2839,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["entityname",{"_index":1194,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["entitysavehandler",{"_index":1097,"title":{"interfaces/EntitySaveHandler.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["entitysubscriber",{"_index":2835,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["entitysubscriberinterface",{"_index":2850,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["entries",{"_index":4607,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["entry",{"_index":179,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["enum",{"_index":1885,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"entities/ProcessUnitEntity.html":{},"miscellaneous/enumerations.html":{}}}],["enumeration",{"_index":3290,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["enumerations",{"_index":4010,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":4548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environments",{"_index":4087,"title":{},"body":{"index.html":{}}}],["envloader",{"_index":1297,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["envloader.loadenvironment(logger",{"_index":1303,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":3874,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["err",{"_index":2547,"title":{},"body":{"injectables/FileService.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["err.code",{"_index":3234,"title":{},"body":{"classes/MsClient.html":{}}}],["err.message",{"_index":3231,"title":{},"body":{"classes/MsClient.html":{}}}],["err.stack",{"_index":3232,"title":{},"body":{"classes/MsClient.html":{}}}],["err_token_a",{"_index":906,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["err_token_r",{"_index":908,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":149,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AuthService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"modules/ExplorerModule.html":{},"classes/LogService.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error().stack",{"_index":2944,"title":{},"body":{"classes/LogService.html":{}}}],["error(`invalid",{"_index":1695,"title":{},"body":{"injectables/ConfigService.html":{}}}],["error(message",{"_index":2903,"title":{},"body":{"classes/LogService.html":{}}}],["error.name",{"_index":3235,"title":{},"body":{"classes/MsClient.html":{}}}],["error?.type",{"_index":3229,"title":{},"body":{"classes/MsClient.html":{}}}],["errors",{"_index":904,"title":{},"body":{"classes/AuthService.html":{},"classes/DbExceptionFilter.html":{},"classes/MsClient.html":{},"miscellaneous/variables.html":{}}}],["es",{"_index":1796,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["etc",{"_index":4032,"title":{},"body":{"index.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["eval('import(\"file",{"_index":1800,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["eval(processedvalue",{"_index":1707,"title":{},"body":{"injectables/ConfigService.html":{}}}],["even",{"_index":4367,"title":{},"body":{"license.html":{}}}],["event",{"_index":286,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/LocaleSubscriber.html":{},"classes/UserSubscriber.html":{},"license.html":{}}}],["event.entity",{"_index":2854,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["event.entity.login",{"_index":3777,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["event.entityid",{"_index":2863,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["event.manager.remove(relatedentity",{"_index":2867,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["events",{"_index":268,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/LocaleSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["eventsubscriber",{"_index":2851,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["ex",{"_index":3595,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["example",{"_index":971,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"injectables/LocaleSubscriber.html":{},"classes/LoginPayload.html":{},"index.html":{},"license.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["examples/web",{"_index":4116,"title":{},"body":{"index.html":{}}}],["exceeding",{"_index":4602,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["except",{"_index":739,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["exception",{"_index":944,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/DbExceptionFilter.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsClient.html":{},"classes/NotFoundMsException.html":{},"classes/Roles.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":1772,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["exceptions",{"_index":3256,"title":{},"body":{"classes/MsException.html":{}}}],["exceptions/ms.exception",{"_index":3214,"title":{},"body":{"classes/MsClient.html":{}}}],["exchange",{"_index":716,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["exchange(payload",{"_index":718,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/BasicAuthController.html":{}}}],["exchangeable",{"_index":437,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exchanged",{"_index":978,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["exchangetoken",{"_index":885,"title":{},"body":{"classes/AuthService.html":{}}}],["exchangetoken(refreshtoken",{"_index":894,"title":{},"body":{"classes/AuthService.html":{}}}],["exchangetokenpayload",{"_index":719,"title":{"classes/ExchangeTokenPayload.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["exclude",{"_index":1168,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["excludeproperties",{"_index":3913,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["excluding",{"_index":4226,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":4241,"title":{},"body":{"license.html":{}}}],["execute",{"_index":128,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/enumerations.html":{}}}],["executed",{"_index":206,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"license.html":{}}}],["executes",{"_index":3657,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["execution",{"_index":49,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["executioncontext",{"_index":29,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/DtoInterceptor.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["exercise",{"_index":4343,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":4181,"title":{},"body":{"license.html":{}}}],["exif",{"_index":436,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["exifdata",{"_index":2304,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif",{"_index":2383,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.aperturevalue?.description",{"_index":2421,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.brightnessvalue?.description",{"_index":2423,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.colorspace?.description",{"_index":2439,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.contrast?.description",{"_index":2461,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.customrendered?.description",{"_index":2451,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.digitalzoomratio?.description",{"_index":2457,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exifversion?.description",{"_index":2415,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exposurebiasvalue?.description",{"_index":2425,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exposuremode?.description",{"_index":2453,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exposureprogram?.description",{"_index":2411,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.exposuretime?.description",{"_index":2407,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.flash?.description",{"_index":2433,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.flashpixversion?.description",{"_index":2437,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.fnumber?.description",{"_index":2409,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.focallength?.description",{"_index":2435,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.interoperabilityindex?.description",{"_index":2475,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.isospeedratings?.description",{"_index":2413,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.lensmake?.description",{"_index":2469,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.lensmodel?.description",{"_index":2471,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.make?.description",{"_index":2386,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.maxaperturevalue?.description",{"_index":2427,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.meteringmode?.description",{"_index":2431,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.model?.description",{"_index":2388,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.offsettime?.description",{"_index":2417,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.orientation?.description",{"_index":2390,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.pixelxdimension?.description",{"_index":2441,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.pixelydimension?.description",{"_index":2443,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.resolutionunit?.description",{"_index":2396,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.saturation?.description",{"_index":2463,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.scenecapturetype?.description",{"_index":2459,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.scenetype?.description",{"_index":2449,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.sensingmethod?.description",{"_index":2447,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.sharpness?.description",{"_index":2465,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.shutterspeedvalue?.description",{"_index":2419,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.software?.description",{"_index":2398,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.subjectdistance?.description",{"_index":2429,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.subjectdistancerange?.description",{"_index":2467,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.whitebalance?.description",{"_index":2455,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.xresolution?.description",{"_index":2392,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.ycbcrpositioning?.description",{"_index":2400,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif.yresolution?.description",{"_index":2394,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"compositeimage\"]?.description",{"_index":2473,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"exif",{"_index":2402,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"gps",{"_index":2405,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"interoperability",{"_index":2445,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.exif[\"interoperabilityversion\"]?.description",{"_index":2477,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.file[\"bits",{"_index":2310,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.file[\"color",{"_index":2318,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.file[\"image",{"_index":2313,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.file[\"subsampling\"]?.description",{"_index":2321,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.gps",{"_index":2336,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.gps?.altitude",{"_index":2339,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.gps?.latitude",{"_index":2343,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.gps?.longitude",{"_index":2341,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc",{"_index":2344,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"connection",{"_index":2355,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"device",{"_index":2368,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"icc",{"_index":2360,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"primary",{"_index":2365,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"profile",{"_index":2347,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"profile/device",{"_index":2350,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.icc[\"rendering",{"_index":2373,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png",{"_index":2322,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"bit",{"_index":2325,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"color",{"_index":2328,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"compression\"]?.description",{"_index":2331,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"filter\"]?.description",{"_index":2333,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"image",{"_index":2323,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifdata.png[\"interlace\"]?.description",{"_index":2335,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exiffilemetadata",{"_index":443,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exiffilemetadataentity",{"_index":2163,"title":{},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{}}}],["exififdpointer",{"_index":546,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exifreader",{"_index":2200,"title":{},"body":{"injectables/FileMetadataService.html":{},"dependencies.html":{}}}],["exifreader.load(buf",{"_index":2305,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["exifversion",{"_index":564,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exist",{"_index":1814,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["existed",{"_index":2827,"title":{},"body":{"injectables/LocaleService.html":{}}}],["existed?.id",{"_index":2830,"title":{},"body":{"injectables/LocaleService.html":{}}}],["existedentityid",{"_index":1208,"title":{},"body":{"interfaces/BasicMediaController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["existing",{"_index":1542,"title":{},"body":{"injectables/ConfigService.html":{}}}],["exists",{"_index":2538,"title":{},"body":{"injectables/FileService.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["expanded",{"_index":2306,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["expiration",{"_index":981,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/CacheService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"injectables/RedisCacheService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["expire",{"_index":1318,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["expire(key",{"_index":1325,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["expires",{"_index":804,"title":{},"body":{"controllers/AuthController.html":{}}}],["expiresin",{"_index":871,"title":{},"body":{"modules/AuthModule.html":{},"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["explaining",{"_index":516,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["explicitarray",{"_index":3836,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["explicitchildren",{"_index":3838,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["explicitly",{"_index":4313,"title":{},"body":{"license.html":{}}}],["explorer",{"_index":1039,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["explorer.constants",{"_index":1040,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorer.controller",{"_index":2009,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["explorer.default_explorer_module_deps",{"_index":2011,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["explorer.entity_save_handler",{"_index":1974,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["explorer.providesavehandlers(...opts.savehandlers",{"_index":2016,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["explorer.service",{"_index":2006,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["explorer.types",{"_index":1887,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["explorer.variation",{"_index":1074,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorer/explorer.module",{"_index":3976,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["exploreraction",{"_index":1050,"title":{"interfaces/ExplorerAction.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["exploreractionentity",{"_index":1870,"title":{"entities/ExplorerActionEntity.html":{}},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerTargetEntity.html":{}}}],["explorercolumn",{"_index":1048,"title":{"interfaces/ExplorerColumn.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorercolumnentity",{"_index":1892,"title":{"entities/ExplorerColumnEntity.html":{}},"body":{"entities/ExplorerColumnEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTargetEntity.html":{}}}],["explorercolumnrenderer",{"_index":1068,"title":{"interfaces/ExplorerColumnRenderer.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorercolumnrendererentity",{"_index":1907,"title":{"entities/ExplorerColumnRendererEntity.html":{}},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{}}}],["explorercontroller",{"_index":1952,"title":{"controllers/ExplorerController.html":{}},"body":{"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"miscellaneous/variables.html":{}}}],["explorermodule",{"_index":1997,"title":{"modules/ExplorerModule.html":{}},"body":{"modules/ExplorerModule.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{}}}],["explorermodule.forroot",{"_index":3971,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["explorermoduleoptions",{"_index":1088,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["explorerselectparams",{"_index":1087,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["explorerservice",{"_index":1100,"title":{"classes/ExplorerService.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorertab",{"_index":1071,"title":{"interfaces/ExplorerTab.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["explorertabentity",{"_index":1929,"title":{"entities/ExplorerTabEntity.html":{}},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["explorertarget",{"_index":1031,"title":{"interfaces/ExplorerTarget.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["explorertargetentity",{"_index":1931,"title":{"entities/ExplorerTargetEntity.html":{}},"body":{"entities/ExplorerColumnEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{}}}],["explorertargetparams",{"_index":1081,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["exploring",{"_index":1999,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["export",{"_index":86,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{}}}],["export(@body",{"_index":3935,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["export(body",{"_index":3918,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["export.service",{"_index":3975,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["exporting",{"_index":4040,"title":{},"body":{"index.html":{}}}],["exports",{"_index":878,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"overview.html":{}}}],["exportservice",{"_index":3911,"title":{},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["exportxml",{"_index":3810,"title":{},"body":{"classes/XdbExportService.html":{}}}],["exportxml(params",{"_index":3811,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["expose",{"_index":963,"title":{},"body":{"interfaces/BasicAuthController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["expose()@type(undefined",{"_index":2777,"title":{},"body":{"classes/JwtDto.html":{},"classes/MediaDto.html":{},"classes/MediaFileDto.html":{},"classes/MediaTypeDto.html":{},"classes/UserDto.html":{}}}],["exposure",{"_index":549,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exposurebias",{"_index":573,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exposuremode",{"_index":607,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exposureprogram",{"_index":558,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["exposuretime",{"_index":553,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["express",{"_index":81,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"classes/ExchangeTokenPayload.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"interfaces/UpsertMediaRequest.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["express.multer.file",{"_index":662,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"controllers/XmlDataBridgeController.html":{}}}],["expression",{"_index":1794,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["ext",{"_index":410,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/variables.html":{}}}],["ext.entity",{"_index":3095,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["ext.entity.ts",{"_index":3021,"title":{},"body":{"entities/MediaExtEntity.html":{}}}],["ext.entity.ts:11",{"_index":3023,"title":{},"body":{"entities/MediaExtEntity.html":{}}}],["ext.entity.ts:15",{"_index":3024,"title":{},"body":{"entities/MediaExtEntity.html":{}}}],["extend",{"_index":4067,"title":{},"body":{"index.html":{}}}],["extended",{"_index":4070,"title":{},"body":{"index.html":{}}}],["extending",{"_index":947,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["extends",{"_index":823,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/BadRequestMsException.html":{},"injectables/BasicUserService.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"injectables/LiteAuthGuard.html":{},"classes/LogService.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"classes/UserSubscriber.html":{}}}],["extensibility",{"_index":4034,"title":{},"body":{"index.html":{}}}],["extension",{"_index":409,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/variables.html":{}}}],["extensions",{"_index":3022,"title":{},"body":{"entities/MediaExtEntity.html":{},"miscellaneous/variables.html":{}}}],["extracting",{"_index":4470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extracts",{"_index":56,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["f",{"_index":3005,"title":{},"body":{"entities/MediaEntity.html":{}}}],["f.media",{"_index":3006,"title":{},"body":{"entities/MediaEntity.html":{}}}],["failed",{"_index":2546,"title":{},"body":{"injectables/FileService.html":{}}}],["failure",{"_index":4363,"title":{},"body":{"license.html":{}}}],["false",{"_index":1351,"title":{},"body":{"controllers/CaptchaController.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"entities/UserEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["family",{"_index":2680,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["fast",{"_index":1524,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{}}}],["features",{"_index":4047,"title":{},"body":{"index.html":{}}}],["fee",{"_index":4371,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":1115,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["fetching",{"_index":825,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["fetchuser",{"_index":20,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["ffprobe",{"_index":2201,"title":{},"body":{"injectables/FileMetadataService.html":{},"dependencies.html":{}}}],["ffprobe(filepath",{"_index":2237,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ffprobemd",{"_index":2236,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ffprobemd.streams.find((v",{"_index":2240,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ffprobestatic",{"_index":2202,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["ffprobestatic.path",{"_index":2238,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["field",{"_index":364,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["fieldname",{"_index":3266,"title":{},"body":{"injectables/NotEmptyPipe.html":{},"interfaces/XdbRequest.html":{}}}],["fields",{"_index":4389,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":4174,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{"interfaces/File.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["file')@useinterceptors(undefined)@forroles(roles.root",{"_index":3926,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["file's",{"_index":2510,"title":{},"body":{"injectables/FileService.html":{}}}],["file.buffer",{"_index":2095,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{}}}],["file.constants",{"_index":387,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["file.controller",{"_index":2482,"title":{},"body":{"modules/FileModule.html":{}}}],["file.entity",{"_index":3016,"title":{},"body":{"entities/MediaEntity.html":{},"modules/MediaModule.html":{}}}],["file.entity.ts",{"_index":3034,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:18",{"_index":3041,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:22",{"_index":3036,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:26",{"_index":3043,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:29",{"_index":3045,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:32",{"_index":3040,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:35",{"_index":3044,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:38",{"_index":3038,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.entity.ts:41",{"_index":3042,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["file.id.tostring",{"_index":2576,"title":{},"body":{"injectables/FileService.html":{}}}],["file.isdirectory",{"_index":1668,"title":{},"body":{"injectables/ConfigService.html":{}}}],["file.isfile",{"_index":1656,"title":{},"body":{"injectables/ConfigService.html":{}}}],["file.length",{"_index":2553,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata",{"_index":2577,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata.audio",{"_index":2582,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata.gps",{"_index":2580,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata.image",{"_index":2578,"title":{},"body":{"injectables/FileService.html":{}}}],["file.metadata.video",{"_index":2584,"title":{},"body":{"injectables/FileService.html":{}}}],["file.name",{"_index":1657,"title":{},"body":{"injectables/ConfigService.html":{}}}],["file.originalname",{"_index":2097,"title":{},"body":{"controllers/FileController.html":{}}}],["file.originalname.split(\".\").pop",{"_index":2096,"title":{},"body":{"controllers/FileController.html":{}}}],["file.path",{"_index":2575,"title":{},"body":{"injectables/FileService.html":{}}}],["file.private.dir",{"_index":4618,"title":{},"body":{"additional-documentation/properties/file.properties.html":{}}}],["file.properties",{"_index":4615,"title":{"additional-documentation/properties/file.properties.html":{}},"body":{"additional-documentation/properties/file.properties.html":{}}}],["file.public",{"_index":2573,"title":{},"body":{"injectables/FileService.html":{}}}],["file.public.dir",{"_index":4616,"title":{},"body":{"additional-documentation/properties/file.properties.html":{}}}],["file.service",{"_index":2480,"title":{},"body":{"modules/FileModule.html":{}}}],["file.types",{"_index":705,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"entities/FileMetadataEntity.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["file/entity/file",{"_index":3017,"title":{},"body":{"entities/MediaEntity.html":{}}}],["file/file.module",{"_index":3076,"title":{},"body":{"modules/MediaModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["file/file.types",{"_index":1169,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["filebuffer",{"_index":1806,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fileconfig",{"_index":2526,"title":{},"body":{"injectables/FileService.html":{}}}],["fileconfig.private_dir",{"_index":2529,"title":{},"body":{"injectables/FileService.html":{}}}],["fileconfig.public_dir",{"_index":2531,"title":{},"body":{"injectables/FileService.html":{}}}],["filecontent",{"_index":1671,"title":{},"body":{"injectables/ConfigService.html":{}}}],["filecontroller",{"_index":2070,"title":{"controllers/FileController.html":{}},"body":{"controllers/FileController.html":{},"modules/FileModule.html":{}}}],["filed",{"_index":4277,"title":{},"body":{"license.html":{}}}],["filedata",{"_index":3891,"title":{},"body":{"classes/XdbImportService.html":{}}}],["fileentity",{"_index":2109,"title":{"entities/FileEntity.html":{}},"body":{"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{}}}],["fileinterceptor",{"_index":2082,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["filemanager",{"_index":385,"title":{"classes/FileManager.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["filemanager:131",{"_index":2514,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:148",{"_index":2512,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:159",{"_index":2516,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:168",{"_index":2515,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:177",{"_index":2517,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:187",{"_index":2523,"title":{},"body":{"injectables/FileService.html":{}}}],["filemanager:66",{"_index":2508,"title":{},"body":{"injectables/FileService.html":{}}}],["filemd",{"_index":386,"title":{"classes/FileMd.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["filemd:45",{"_index":2183,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filemetadata",{"_index":403,"title":{"interfaces/FileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["filemetadataentity",{"_index":2115,"title":{"entities/FileMetadataEntity.html":{}},"body":{"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/MediaEntity.html":{}}}],["filemetadataservice",{"_index":2175,"title":{"injectables/FileMetadataService.html":{}},"body":{"injectables/FileMetadataService.html":{},"modules/FileModule.html":{}}}],["filemodule",{"_index":669,"title":{"modules/FileModule.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"modules/MediaModule.html":{},"interfaces/VideoFileMetadata.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["filemodule.forroot",{"_index":3078,"title":{},"body":{"modules/MediaModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["filemoduleoptions",{"_index":670,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["filename",{"_index":2551,"title":{},"body":{"injectables/FileService.html":{}}}],["filenameprefix",{"_index":1578,"title":{},"body":{"injectables/ConfigService.html":{}}}],["filepath",{"_index":1581,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"controllers/FileController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/LogService.html":{}}}],["filepromises",{"_index":1831,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["filerep",{"_index":2496,"title":{},"body":{"injectables/FileService.html":{}}}],["filerow",{"_index":3906,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["files",{"_index":1177,"title":{},"body":{"interfaces/BasicMediaController.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"entities/FileEntity.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["files.format",{"_index":4536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files.map(async",{"_index":1832,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["files_encoding",{"_index":1597,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["filescount",{"_index":3665,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["fileservice",{"_index":2088,"title":{"injectables/FileService.html":{}},"body":{"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{}}}],["filesutils",{"_index":1801,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["filesutils.createdirectoriesifnotexist",{"_index":2533,"title":{},"body":{"injectables/FileService.html":{}}}],["filesutils.filetype",{"_index":2212,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filesutils.gethashfrombuffer",{"_index":2211,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filesutils.readdirectoryrecursively",{"_index":3678,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["filetype",{"_index":1802,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{}}}],["filetype().filetypefrombuffer(buf",{"_index":2214,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filetypedata",{"_index":2213,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filetypedata.ext",{"_index":2220,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filetypedata.mime",{"_index":2218,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["filetypemodule",{"_index":1788,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["filetypemodule.lib",{"_index":1803,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fill",{"_index":1105,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"index.html":{}}}],["filter",{"_index":473,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/VideoFileMetadata.html":{}}}],["filter.ts",{"_index":1757,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["filter.ts:27",{"_index":1766,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["filtering",{"_index":470,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["find",{"_index":1079,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"injectables/BasicUserService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"interfaces/TargetData.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["findbycode",{"_index":2140,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{},"classes/MediaManager.html":{}}}],["findbycode(code",{"_index":1200,"title":{},"body":{"interfaces/BasicMediaController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["findbyid",{"_index":1250,"title":{},"body":{"injectables/BasicUserService.html":{},"classes/UserService.html":{}}}],["findbyid(id",{"_index":1239,"title":{},"body":{"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["findbylogin",{"_index":1251,"title":{},"body":{"injectables/BasicUserService.html":{},"classes/UserService.html":{}}}],["findbylogin(login",{"_index":1238,"title":{},"body":{"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["findfilebyid",{"_index":2141,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{}}}],["findfilebyid(id",{"_index":2148,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{}}}],["finding",{"_index":2490,"title":{},"body":{"injectables/FileService.html":{}}}],["findmediabyid",{"_index":3059,"title":{},"body":{"classes/MediaManager.html":{}}}],["findmediabyid(id",{"_index":1201,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["findprivatebyid",{"_index":2142,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{},"classes/MediaManager.html":{}}}],["findprivatebyid(id",{"_index":1204,"title":{},"body":{"interfaces/BasicMediaController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["findpublicbyid",{"_index":2143,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{},"classes/MediaManager.html":{}}}],["findpublicbyid(id",{"_index":1203,"title":{},"body":{"interfaces/BasicMediaController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["finds",{"_index":2513,"title":{},"body":{"injectables/FileService.html":{}}}],["finished",{"_index":217,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["finishes",{"_index":161,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["first",{"_index":3876,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["first_name",{"_index":3719,"title":{},"body":{"entities/UserEntity.html":{}}}],["firstname",{"_index":1230,"title":{},"body":{"interfaces/BasicUserController.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["fitness",{"_index":4335,"title":{},"body":{"license.html":{}}}],["flag",{"_index":1823,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["flash",{"_index":583,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["flashpix",{"_index":589,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["flashpixversion",{"_index":590,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["flexibility",{"_index":4033,"title":{},"body":{"index.html":{}}}],["flexibly",{"_index":4085,"title":{},"body":{"index.html":{}}}],["fn.ts",{"_index":4446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fnumber",{"_index":555,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["focal",{"_index":585,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["focallength",{"_index":588,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["folder",{"_index":3667,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{},"index.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["folders",{"_index":3662,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["folderscount",{"_index":3666,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["following",{"_index":4281,"title":{},"body":{"license.html":{}}}],["font",{"_index":2679,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["for_roles",{"_index":4472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidden",{"_index":2632,"title":{},"body":{"classes/ForbiddenMsException.html":{}}}],["forbiddenexception",{"_index":75,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["forbiddenexception(\"invalid",{"_index":795,"title":{},"body":{"controllers/AuthController.html":{}}}],["forbiddenexception(access_token_error_msg",{"_index":99,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["forbiddenmsexception",{"_index":2630,"title":{"classes/ForbiddenMsException.html":{}},"body":{"classes/ForbiddenMsException.html":{}}}],["force",{"_index":920,"title":{},"body":{"classes/AuthService.html":{},"injectables/FileService.html":{},"injectables/ProcessManagerService.html":{},"classes/TmpDirCleanerProcess.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["form",{"_index":2042,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"license.html":{}}}],["format",{"_index":292,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["format.entity",{"_index":3046,"title":{},"body":{"entities/MediaFileEntity.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{}}}],["format.entity.ts",{"_index":3053,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["format.entity.ts:11",{"_index":3054,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["format.entity.ts:15",{"_index":3056,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["format.entity.ts:18",{"_index":3057,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["format.entity.ts:21",{"_index":3055,"title":{},"body":{"entities/MediaFormatEntity.html":{}}}],["formats",{"_index":1188,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["formatted",{"_index":2916,"title":{},"body":{"classes/LogService.html":{}}}],["forroles",{"_index":1494,"title":{},"body":{"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"controllers/XmlDataBridgeController.html":{},"miscellaneous/variables.html":{}}}],["forroles(roles.admin",{"_index":1501,"title":{},"body":{"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["forroles(roles.root",{"_index":3930,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["forroot",{"_index":838,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["forroot(options",{"_index":839,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["forrootasync",{"_index":1359,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/RedisModule.html":{}}}],["forrootasync(options",{"_index":1360,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/RedisModule.html":{}}}],["forwardreference",{"_index":3898,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["found",{"_index":59,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/NotFoundMsException.html":{}}}],["founduser",{"_index":318,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["founduser.password",{"_index":323,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["fourth",{"_index":2947,"title":{},"body":{"classes/LogService.html":{}}}],["frame",{"_index":652,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["frame_rate",{"_index":3783,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["framerate",{"_index":655,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["frames",{"_index":653,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["framework",{"_index":4022,"title":{},"body":{"index.html":{},"properties.html":{}}}],["free",{"_index":4244,"title":{},"body":{"license.html":{}}}],["from(value",{"_index":4559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fs",{"_index":1594,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["fs.existssync(localpropertiespath",{"_index":1663,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.existssync(tmpdir",{"_index":3681,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["fs.promises",{"_index":2543,"title":{},"body":{"injectables/FileService.html":{}}}],["fs.promises.access(directorypath",{"_index":1817,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.mkdir(directorypath",{"_index":1818,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.mkdir(gensrcpath",{"_index":1741,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readdir(currentpath",{"_index":1830,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.readdir(directory",{"_index":1653,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readdir(fullpath",{"_index":1714,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readfile",{"_index":1665,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readfile(fullpath",{"_index":1672,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readfile(kppath",{"_index":1660,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.readfile(path",{"_index":1824,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.rm(tmpdir",{"_index":3687,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["fs.promises.stat(filepath",{"_index":1835,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["fs.promises.unlink(path.join(fullpath",{"_index":1722,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fs.promises.writefile(`${outputpath}/${filename",{"_index":2557,"title":{},"body":{"injectables/FileService.html":{}}}],["fs.promises.writefile(configfilepath",{"_index":1743,"title":{},"body":{"injectables/ConfigService.html":{}}}],["ft",{"_index":1797,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["ft.lib",{"_index":1799,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["full",{"_index":824,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/FileService.html":{},"miscellaneous/variables.html":{}}}],["fullkey",{"_index":1647,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fullpath",{"_index":1667,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fullrelations",{"_index":1082,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["fun",{"_index":3178,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["fun(this.safedeserialize(data",{"_index":3180,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["function",{"_index":1793,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["functionality",{"_index":1292,"title":{},"body":{"modules/CacheModule.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"injectables/RedisCacheService.html":{},"modules/WarlockModule.html":{},"index.html":{}}}],["functions",{"_index":1172,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["future",{"_index":4137,"title":{},"body":{"index.html":{}}}],["gateway",{"_index":1762,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["gen",{"_index":766,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/variables.html":{}}}],["gen_src_dir",{"_index":1598,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["gencnfdir",{"_index":1563,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":4127,"title":{},"body":{"index.html":{}}}],["generatecaptcha",{"_index":999,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["generatecolor",{"_index":2666,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["generateconfigtsfiles",{"_index":1530,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generated",{"_index":926,"title":{},"body":{"classes/AuthService.html":{},"injectables/ConfigService.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["generatedcontent",{"_index":1708,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generatedfilecontent",{"_index":1739,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generatedtsoutput",{"_index":1526,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generatenamespacewithvariables",{"_index":1531,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generatenamespacewithvariables(namespacename",{"_index":1546,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generaterandomint",{"_index":2705,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["generaterandomstring",{"_index":2703,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["generaterandomstring(5",{"_index":2708,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["generates",{"_index":924,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"miscellaneous/variables.html":{}}}],["generating",{"_index":998,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{}}}],["generation",{"_index":2641,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"index.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["genre",{"_index":340,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["gensrcfile",{"_index":1717,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcfile.isfile",{"_index":1718,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcfile.name",{"_index":1721,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcfile.name.endswith(config_file_ext_pattern",{"_index":1719,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcfiles",{"_index":1713,"title":{},"body":{"injectables/ConfigService.html":{}}}],["gensrcpath",{"_index":1729,"title":{},"body":{"injectables/ConfigService.html":{}}}],["get(\"/:id",{"_index":2103,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/ProfileController.html":{}}}],["get(\"/entity/:target",{"_index":1986,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["get(\"/log/:id",{"_index":3343,"title":{},"body":{"controllers/ProcessController.html":{}}}],["get(\"/pageable/:target",{"_index":1989,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["get(\"/private/:id",{"_index":2098,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{}}}],["get(\"/start/:code",{"_index":3327,"title":{},"body":{"controllers/ProcessController.html":{}}}],["get(\"/stats/:code",{"_index":3336,"title":{},"body":{"controllers/ProcessController.html":{}}}],["get(\"/stop/:code",{"_index":3330,"title":{},"body":{"controllers/ProcessController.html":{}}}],["get(\"/target",{"_index":1977,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["get(\"/target/:target",{"_index":1982,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["get(\"/toggle/:code",{"_index":3333,"title":{},"body":{"controllers/ProcessController.html":{}}}],["get('/:id",{"_index":2074,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{}}}],["get('/entity/:target",{"_index":1954,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["get('/log/:id')@forroles(roles.admin",{"_index":3308,"title":{},"body":{"controllers/ProcessController.html":{}}}],["get('/pageable/:target",{"_index":1956,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["get('/private/:id",{"_index":2076,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{}}}],["get('/start/:code')@forroles(roles.admin",{"_index":3314,"title":{},"body":{"controllers/ProcessController.html":{}}}],["get('/stats/:code')@forroles(roles.admin",{"_index":3311,"title":{},"body":{"controllers/ProcessController.html":{}}}],["get('/stop/:code')@forroles(roles.admin",{"_index":3317,"title":{},"body":{"controllers/ProcessController.html":{}}}],["get('/target",{"_index":1960,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["get('/target/:target",{"_index":1958,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["get('/toggle/:code')@forroles(roles.admin",{"_index":3320,"title":{},"body":{"controllers/ProcessController.html":{}}}],["get(key",{"_index":1327,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getaccesstokenfromrequest",{"_index":26,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["getaccesstokenfromrequest(req",{"_index":54,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["getboolean",{"_index":1319,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getboolean(key",{"_index":1329,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getcallingcontext",{"_index":2895,"title":{},"body":{"classes/LogService.html":{}}}],["getcaptcha",{"_index":989,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"controllers/CaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["getcaptchaexp",{"_index":2667,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["getcaptchafontfamily",{"_index":2668,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["getcaptchafontpath",{"_index":2669,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["getdeletestats",{"_index":3651,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["getdeletestats(dirstruct",{"_index":3659,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["getdescendantsbycodeofroot",{"_index":1447,"title":{},"body":{"injectables/CategoryService.html":{}}}],["getdescendantsbycodeofroot(code",{"_index":1453,"title":{},"body":{"injectables/CategoryService.html":{}}}],["getentity",{"_index":1008,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"controllers/ExplorerController.html":{}}}],["getentity(target",{"_index":1015,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["getentitydata",{"_index":1132,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["getentitydata(target",{"_index":2023,"title":{},"body":{"classes/ExplorerService.html":{}}}],["getentitylist",{"_index":1009,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["getentitylist(target",{"_index":1018,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"controllers/ExplorerController.html":{}}}],["getfile",{"_index":1143,"title":{},"body":{"interfaces/BasicFileController.html":{},"controllers/FileController.html":{}}}],["getfile(@param(\"id",{"_index":2104,"title":{},"body":{"controllers/FileController.html":{}}}],["getfile(id",{"_index":665,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["getfilepath",{"_index":2144,"title":{},"body":{"classes/FileManager.html":{},"injectables/FileService.html":{}}}],["getfilepath(file",{"_index":2152,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{}}}],["getfrompattern",{"_index":1320,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getfrompattern(pattern",{"_index":1331,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["gethashfrombuffer",{"_index":2210,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["gethashfrombuffer(buf",{"_index":2216,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["gethashfrombuffer(filebuffer",{"_index":1808,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["getlastlogsbyprocess",{"_index":3369,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getlastlogsbyprocess(processcode",{"_index":3387,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getlogs",{"_index":3302,"title":{},"body":{"controllers/ProcessController.html":{}}}],["getlogs(@param(\"id",{"_index":3344,"title":{},"body":{"controllers/ProcessController.html":{}}}],["getlogs(id",{"_index":3307,"title":{},"body":{"controllers/ProcessController.html":{}}}],["getmedia",{"_index":1153,"title":{},"body":{"interfaces/BasicMediaController.html":{},"controllers/MediaController.html":{}}}],["getmedia(@param(\"id",{"_index":2988,"title":{},"body":{"controllers/MediaController.html":{}}}],["getmedia(id",{"_index":1159,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["getmediapath",{"_index":1209,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["getmediapath(media",{"_index":3067,"title":{},"body":{"classes/MediaManager.html":{}}}],["getnumber",{"_index":1321,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getnumber(key",{"_index":1334,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["getone",{"_index":2571,"title":{},"body":{"injectables/FileService.html":{}}}],["getpageableentitydata",{"_index":1117,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["getpageableentitydata(target",{"_index":2025,"title":{},"body":{"classes/ExplorerService.html":{}}}],["getprivatedir",{"_index":2494,"title":{},"body":{"injectables/FileService.html":{}}}],["getprivatefile",{"_index":1144,"title":{},"body":{"interfaces/BasicFileController.html":{},"controllers/FileController.html":{}}}],["getprivatefile(res",{"_index":664,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["getprivatemedia",{"_index":1154,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["getprivatemedia(res",{"_index":1161,"title":{},"body":{"interfaces/BasicMediaController.html":{},"controllers/MediaController.html":{}}}],["getprocessdata",{"_index":3370,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocessdata(code",{"_index":3390,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocessinstance",{"_index":3504,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["getprocessinstance(processdata.code",{"_index":3515,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["getprocesslogbyid",{"_index":3371,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocesslogbyid(id",{"_index":3394,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocessunitstatus",{"_index":3372,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getprocessunitstatus(code",{"_index":3396,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["getpropertiespage",{"_index":1532,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getpropertiespage(params",{"_index":1553,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getpublicdir",{"_index":2495,"title":{},"body":{"injectables/FileService.html":{}}}],["gets",{"_index":146,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/DirectoryStructure.html":{},"injectables/ProcessManagerService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["getstats",{"_index":3303,"title":{},"body":{"controllers/ProcessController.html":{}}}],["getstats(@param(\"code",{"_index":3337,"title":{},"body":{"controllers/ProcessController.html":{}}}],["getstats(code",{"_index":3310,"title":{},"body":{"controllers/ProcessController.html":{}}}],["getstatus",{"_index":129,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["gettarget",{"_index":1010,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["gettarget(target",{"_index":1022,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"controllers/ExplorerController.html":{}}}],["gettargetdata",{"_index":1133,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["gettargetdata(target",{"_index":2027,"title":{},"body":{"classes/ExplorerService.html":{}}}],["gettargetlist",{"_index":1011,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["getting",{"_index":3392,"title":{"index.html":{},"license.html":{}},"body":{"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{}}}],["getuserprofile",{"_index":1216,"title":{},"body":{"interfaces/BasicUserController.html":{},"controllers/ProfileController.html":{}}}],["getuserprofile(id",{"_index":1221,"title":{},"body":{"interfaces/BasicUserController.html":{},"controllers/ProfileController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["getxmlparser",{"_index":3834,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["getxmlparser().parsestring(xmldata",{"_index":3860,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["give",{"_index":4282,"title":{},"body":{"license.html":{}}}],["given",{"_index":66,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{}}}],["global",{"_index":1588,"title":{},"body":{"injectables/ConfigService.html":{},"modules/ProcessModule.html":{},"index.html":{}}}],["globalkpcontent",{"_index":1585,"title":{},"body":{"injectables/ConfigService.html":{}}}],["go",{"_index":4115,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":4360,"title":{},"body":{"license.html":{}}}],["google",{"_index":2638,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"index.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["google's",{"_index":2648,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["googlecaptchaservice",{"_index":2634,"title":{"classes/GoogleCaptchaService.html":{}},"body":{"classes/GoogleCaptchaService.html":{}}}],["governing",{"_index":758,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["gps",{"_index":421,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["gpsfilemetadata",{"_index":427,"title":{"interfaces/GpsFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["gpsfilemetadataentity",{"_index":2165,"title":{"entities/GpsFileMetadataEntity.html":{}},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/GpsFileMetadataEntity.html":{}}}],["gpsinfoifdpointer",{"_index":548,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["grant",{"_index":4235,"title":{},"body":{"license.html":{}}}],["granted",{"_index":4182,"title":{},"body":{"license.html":{}}}],["granting",{"_index":4160,"title":{},"body":{"license.html":{}}}],["grants",{"_index":4237,"title":{},"body":{"license.html":{}}}],["graph",{"_index":4402,"title":{},"body":{"modules.html":{}}}],["graphic",{"_index":1363,"title":{},"body":{"modules/CaptchaModule.html":{},"classes/GraphicCaptchaService.html":{}}}],["graphical",{"_index":2664,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"index.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["graphiccaptcharesponse",{"_index":2673,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["graphiccaptchaservice",{"_index":1358,"title":{"classes/GraphicCaptchaService.html":{}},"body":{"modules/CaptchaModule.html":{},"classes/GraphicCaptchaService.html":{}}}],["grossly",{"_index":4349,"title":{},"body":{"license.html":{}}}],["guard",{"_index":0,"title":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["guides",{"_index":4094,"title":{},"body":{"index.html":{}}}],["handle",{"_index":266,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["handle(target",{"_index":1098,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["handled",{"_index":1096,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["handler",{"_index":1090,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"miscellaneous/variables.html":{}}}],["handler.handle(target",{"_index":1993,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["handler.ts",{"_index":3734,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["handler.ts:29",{"_index":3736,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["handlerequest",{"_index":3193,"title":{},"body":{"classes/MsClient.html":{}}}],["handlerequest(source",{"_index":3202,"title":{},"body":{"classes/MsClient.html":{}}}],["handlers",{"_index":1092,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["handles",{"_index":170,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/MsClient.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{}}}],["handling",{"_index":2801,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"classes/Roles.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["harmless",{"_index":4383,"title":{},"body":{"license.html":{}}}],["hash",{"_index":279,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"dependencies.html":{}}}],["hashed",{"_index":280,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashes",{"_index":275,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["hashpassword",{"_index":269,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashpassword(password",{"_index":273,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashpasswordifneeded",{"_index":270,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashpasswordifneeded(event",{"_index":281,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["hashsum",{"_index":1809,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["hashsum.digest(\"hex",{"_index":1812,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["hashsum.update(filebuffer",{"_index":1811,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["hasn't",{"_index":3433,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["hasprocessinstance",{"_index":3420,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["hasprocessinstance(code",{"_index":3442,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["hassomerole",{"_index":3560,"title":{},"body":{"controllers/ProfileController.html":{},"guards/RolesGuard.html":{}}}],["hassomerole(user.roles",{"_index":3564,"title":{},"body":{"controllers/ProfileController.html":{}}}],["hassomerole(userroles",{"_index":3643,"title":{},"body":{"guards/RolesGuard.html":{}}}],["heic",{"_index":3996,"title":{},"body":{"dependencies.html":{}}}],["height",{"_index":454,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["height\"]?.value",{"_index":2314,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["helper",{"_index":2500,"title":{},"body":{"injectables/FileService.html":{}}}],["here",{"_index":4091,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":4236,"title":{},"body":{"license.html":{}}}],["herein",{"_index":4317,"title":{},"body":{"license.html":{}}}],["hex",{"_index":1807,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["highest",{"_index":3627,"title":{},"body":{"classes/Roles.html":{}}}],["hold",{"_index":1785,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["hook",{"_index":3469,"title":{},"body":{"modules/ProcessModule.html":{}}}],["horizontal",{"_index":592,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["host",{"_index":1305,"title":{},"body":{"modules/CacheModule.html":{},"classes/DbExceptionFilter.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["host.switchtohttp().getresponse",{"_index":1770,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["hour",{"_index":4591,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["http",{"_index":1758,"title":{},"body":{"classes/DbExceptionFilter.html":{},"classes/GoogleCaptchaService.html":{}}}],["http://www.apache.org/licenses",{"_index":4148,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":743,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["httpexception",{"_index":3210,"title":{},"body":{"classes/MsClient.html":{}}}],["httpexception(err.message",{"_index":3233,"title":{},"body":{"classes/MsClient.html":{}}}],["httponly",{"_index":803,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://www.google.com/recaptcha/api/siteverify?secret=${secretkey}&response=${request.data",{"_index":2656,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["httpservice",{"_index":2643,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["httpstatus",{"_index":951,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsClient.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["httpstatus.request_timeout",{"_index":3238,"title":{},"body":{"classes/MsClient.html":{}}}],["httpstatus.too_many_requests",{"_index":3695,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["icc",{"_index":414,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["icc_copyright",{"_index":2748,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["icc_description",{"_index":2749,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["icc_profile_date",{"_index":2752,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["icc_signature",{"_index":2753,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["icccopyright",{"_index":522,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["iccdescription",{"_index":517,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["iccfilemetadata",{"_index":420,"title":{"interfaces/IccFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["iccfilemetadataentity",{"_index":2168,"title":{"entities/IccFileMetadataEntity.html":{}},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/IccFileMetadataEntity.html":{}}}],["iccprofiledate",{"_index":494,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["iccsignature",{"_index":498,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["icon",{"_index":400,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"entities/CategoryEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/variables.html":{}}}],["icon.files",{"_index":4484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.files.format",{"_index":4485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.name",{"_index":4482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.name.lang",{"_index":4483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.type",{"_index":4486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon.type.ext",{"_index":4487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iconfiles",{"_index":2605,"title":{},"body":{"injectables/FileService.html":{}}}],["iconfilesformat",{"_index":2607,"title":{},"body":{"injectables/FileService.html":{}}}],["iconlang",{"_index":2603,"title":{},"body":{"injectables/FileService.html":{}}}],["iconname",{"_index":2601,"title":{},"body":{"injectables/FileService.html":{}}}],["icontype",{"_index":2609,"title":{},"body":{"injectables/FileService.html":{}}}],["icontypeext",{"_index":2611,"title":{},"body":{"injectables/FileService.html":{}}}],["id",{"_index":203,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"controllers/CaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"controllers/ProfileController.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{}}}],["identification",{"_index":366,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["identifier",{"_index":391,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/ConfigItem.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/Roles.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["identifying",{"_index":4393,"title":{},"body":{"license.html":{}}}],["identity",{"_index":72,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["ifd",{"_index":542,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["ii",{"_index":4173,"title":{},"body":{"license.html":{}}}],["iife",{"_index":1795,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["iii",{"_index":4178,"title":{},"body":{"license.html":{}}}],["image",{"_index":431,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicFileController.html":{},"controllers/CaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["imagefilemetadata",{"_index":435,"title":{"interfaces/ImageFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["imagefilemetadataentity",{"_index":2170,"title":{"entities/ImageFileMetadataEntity.html":{}},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["imagemin",{"_index":3999,"title":{},"body":{"dependencies.html":{}}}],["images",{"_index":627,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["immediately",{"_index":1791,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["implement",{"_index":256,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["implementation",{"_index":4076,"title":{},"body":{"index.html":{}}}],["implemented",{"_index":882,"title":{},"body":{"classes/AuthService.html":{}}}],["implementing",{"_index":3575,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["implements",{"_index":13,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"controllers/CaptchaController.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"entities/VideoFileMetadataEntity.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["implied",{"_index":755,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["import",{"_index":74,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{}}}],["import(\"file",{"_index":1790,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["import(@body",{"_index":3931,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["import(body",{"_index":3921,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["import.service",{"_index":3974,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["imported",{"_index":1787,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["importfile",{"_index":3917,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["importfile(file",{"_index":3924,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["importfromfile",{"_index":3888,"title":{},"body":{"classes/XdbImportService.html":{}}}],["importfromfile(filedata",{"_index":3825,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["importing",{"_index":4039,"title":{},"body":{"index.html":{}}}],["imports",{"_index":862,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["importservice",{"_index":3910,"title":{},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{}}}],["importxml",{"_index":3889,"title":{},"body":{"classes/XdbImportService.html":{}}}],["importxml(xml",{"_index":3824,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["improving",{"_index":4225,"title":{},"body":{"license.html":{}}}],["inability",{"_index":4358,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":4355,"title":{},"body":{"license.html":{}}}],["include",{"_index":1552,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/XdbRequest.html":{},"license.html":{}}}],["included",{"_index":4194,"title":{},"body":{"license.html":{}}}],["includes",{"_index":438,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["includeunknown",{"_index":2307,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["including",{"_index":423,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"injectables/AuthGuard.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"license.html":{}}}],["inclusion",{"_index":4213,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":4233,"title":{},"body":{"license.html":{}}}],["incr",{"_index":1322,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["incr(key",{"_index":1336,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["increment",{"_index":3587,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["incrementing",{"_index":3600,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["increments",{"_index":3586,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["incurred",{"_index":4384,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":4381,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":4373,"title":{},"body":{"license.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index()@column('boolean",{"_index":1899,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{}}}],["index()@column('date",{"_index":2751,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["index()@column('decimal",{"_index":687,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["index()@column('int",{"_index":681,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["index()@column('varchar",{"_index":677,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["index()@column({type",{"_index":1884,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ProcessUnitEntity.html":{}}}],["index()@createdatecolumn({name",{"_index":2127,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["index()@manytoone(undefined",{"_index":1908,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["index()@updatedatecolumn({name",{"_index":3358,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["index({unique",{"_index":1381,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["indexable",{"_index":1778,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["indicated",{"_index":4192,"title":{},"body":{"license.html":{}}}],["indicates",{"_index":474,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["indicating",{"_index":53,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["indirect",{"_index":4170,"title":{},"body":{"license.html":{}}}],["individual",{"_index":4180,"title":{},"body":{"license.html":{}}}],["infinity",{"_index":1131,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["information",{"_index":428,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicFileController.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"injectables/LocaleSubscriber.html":{},"classes/LoginPayload.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["informational",{"_index":4302,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":4261,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":4274,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":1257,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["init",{"_index":3373,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["init:web",{"_index":4125,"title":{},"body":{"index.html":{}}}],["initconfig",{"_index":4444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initial",{"_index":1710,"title":{},"body":{"injectables/ConfigService.html":{}}}],["initialize",{"_index":3471,"title":{},"body":{"modules/ProcessModule.html":{},"miscellaneous/variables.html":{}}}],["initializes",{"_index":1560,"title":{},"body":{"injectables/ConfigService.html":{},"modules/ExplorerModule.html":{},"injectables/ProcessManagerService.html":{},"miscellaneous/variables.html":{}}}],["initializing",{"_index":3465,"title":{},"body":{"modules/ProcessModule.html":{}}}],["initwithpropertiesfiles",{"_index":1533,"title":{},"body":{"injectables/ConfigService.html":{}}}],["initwithpropertiesfiles(gencnfdir",{"_index":1558,"title":{},"body":{"injectables/ConfigService.html":{}}}],["inject",{"_index":828,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"controllers/ExplorerController.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"modules/WarlockModule.html":{}}}],["inject(entity_save_handler",{"_index":1976,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["inject(logger",{"_index":830,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["inject(messages_broker",{"_index":3423,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["inject(redis_client",{"_index":3590,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["inject(warlock",{"_index":3422,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["injectable",{"_index":819,"title":{"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"injectables/XmlDataBridgeMiddleware.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["injectables",{"_index":821,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{},"injectables/NotEmptyPipe.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"overview.html":{}}}],["injectdatasource",{"_index":2852,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["injecting",{"_index":4504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectrepository",{"_index":1266,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/FileService.html":{},"injectables/LocaleService.html":{},"injectables/ProcessManagerService.html":{}}}],["injectrepository(categoryentity",{"_index":1469,"title":{},"body":{"injectables/CategoryService.html":{}}}],["injectrepository(fileentity",{"_index":2534,"title":{},"body":{"injectables/FileService.html":{}}}],["injectrepository(languageentity",{"_index":2818,"title":{},"body":{"injectables/LocaleService.html":{}}}],["injectrepository(localizedmediaentity",{"_index":2820,"title":{},"body":{"injectables/LocaleService.html":{}}}],["injectrepository(localizedstringentity",{"_index":2819,"title":{},"body":{"injectables/LocaleService.html":{}}}],["injectrepository(processlogentity",{"_index":3425,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["injectrepository(processunitentity",{"_index":3424,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["injectrepository(userentity",{"_index":1270,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["insert",{"_index":287,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{},"miscellaneous/variables.html":{}}}],["insertevent",{"_index":282,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["insertupdate",{"_index":3907,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["inside",{"_index":544,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["inspect",{"_index":195,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{},"classes/MsClient.html":{}}}],["inspect(data",{"_index":248,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{}}}],["inspect(message",{"_index":242,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{}}}],["inspect(pattern",{"_index":3224,"title":{},"body":{"classes/MsClient.html":{}}}],["install",{"_index":4122,"title":{},"body":{"index.html":{}}}],["installation",{"_index":4132,"title":{},"body":{"index.html":{}}}],["installed",{"_index":4102,"title":{},"body":{"index.html":{}}}],["installing",{"_index":4099,"title":{},"body":{"index.html":{}}}],["instance",{"_index":125,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleSubscriber.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":2232,"title":{},"body":{"injectables/FileMetadataService.html":{},"injectables/LocaleSubscriber.html":{},"modules/RedisModule.html":{}}}],["instances",{"_index":1850,"title":{},"body":{"injectables/DtoInterceptor.html":{},"injectables/LocaleSubscriber.html":{},"injectables/ProcessManagerService.html":{}}}],["institute",{"_index":4265,"title":{},"body":{"license.html":{}}}],["integration",{"_index":4035,"title":{},"body":{"index.html":{}}}],["integrity",{"_index":412,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["intent\"]?.description",{"_index":2374,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["intent\"]?.value",{"_index":2376,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["intentionally",{"_index":4211,"title":{},"body":{"license.html":{}}}],["inter",{"_index":4058,"title":{},"body":{"index.html":{}}}],["interact",{"_index":1248,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["interaction",{"_index":4142,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":1852,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["intercept(context",{"_index":1856,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["interceptor",{"_index":1847,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["interface",{"_index":327,"title":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"interfaces/ConfigItem.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"interfaces/Media.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaFormat.html":{},"interfaces/MediaType.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"interfaces/UserRole.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/ConfigItem.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{}}}],["interfaces",{"_index":329,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"interfaces/ConfigItem.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"interfaces/Media.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"interfaces/MediaFormat.html":{},"interfaces/MediaType.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"interfaces/UserRole.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"license.html":{},"overview.html":{}}}],["interlace",{"_index":479,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["interlacing",{"_index":475,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["intermediate",{"_index":491,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["internalservererrorexception",{"_index":2525,"title":{},"body":{"injectables/FileService.html":{},"injectables/ProcessManagerService.html":{}}}],["internalservererrorexception(`process",{"_index":3443,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["international",{"_index":415,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["internationalized",{"_index":2872,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["interoperability",{"_index":596,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["interoperabilityifdpointer",{"_index":598,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["interoperabilityindex",{"_index":633,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["interoperabilityversion",{"_index":634,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["interpreted",{"_index":651,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["invalid",{"_index":300,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/FileMetadataService.html":{},"classes/InvalidTokenMsException.html":{}}}],["invalidate",{"_index":900,"title":{},"body":{"classes/AuthService.html":{}}}],["invalidated",{"_index":901,"title":{},"body":{"classes/AuthService.html":{}}}],["invalidatetoken",{"_index":886,"title":{},"body":{"classes/AuthService.html":{}}}],["invalidatetoken(accesstoken",{"_index":898,"title":{},"body":{"classes/AuthService.html":{}}}],["invalidtokenmsexception",{"_index":2770,"title":{"classes/InvalidTokenMsException.html":{}},"body":{"classes/InvalidTokenMsException.html":{}}}],["invoked",{"_index":1792,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["involved",{"_index":1171,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["ioredis",{"_index":3169,"title":{},"body":{"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"dependencies.html":{}}}],["ip",{"_index":910,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["ipaddress",{"_index":937,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["irrevocable",{"_index":4245,"title":{},"body":{"license.html":{}}}],["isip",{"_index":958,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["isip()@isoptional",{"_index":2961,"title":{},"body":{"classes/LoginPayload.html":{}}}],["isnotempty",{"_index":959,"title":{},"body":{"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["iso",{"_index":559,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["isoptional",{"_index":960,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["isospeedratings",{"_index":563,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["ispublic",{"_index":663,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["isstring",{"_index":961,"title":{},"body":{"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["isstring()@isnotempty",{"_index":1368,"title":{},"body":{"classes/CaptchaRequest.html":{},"classes/LoginPayload.html":{}}}],["isstring()@isoptional",{"_index":1868,"title":{},"body":{"classes/ExchangeTokenPayload.html":{},"classes/LoginPayload.html":{}}}],["issue",{"_index":4222,"title":{},"body":{"license.html":{}}}],["item",{"_index":1136,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["item.$$.map((r",{"_index":3855,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["item.$.key",{"_index":3853,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["item._",{"_index":3852,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["item.value",{"_index":1650,"title":{},"body":{"injectables/ConfigService.html":{}}}],["item[\"#name",{"_index":3850,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["itemname",{"_index":3849,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["items",{"_index":3280,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"miscellaneous/variables.html":{}}}],["itself",{"_index":2881,"title":{},"body":{"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{}}}],["january",{"_index":4146,"title":{},"body":{"license.html":{}}}],["javascript",{"_index":1849,"title":{},"body":{"injectables/DtoInterceptor.html":{},"miscellaneous/variables.html":{}}}],["job",{"_index":3436,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"index.html":{}}}],["job.start",{"_index":3525,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["job.stop",{"_index":3528,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["jobs",{"_index":3485,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["join(\"_",{"_index":1690,"title":{},"body":{"injectables/ConfigService.html":{}}}],["joincolumn",{"_index":2132,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["jointable",{"_index":1405,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["json",{"_index":1395,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"injectables/MessagesBrokerService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["json.parse(data",{"_index":3189,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["json.parse(processedvalue",{"_index":1705,"title":{},"body":{"injectables/ConfigService.html":{}}}],["json.parse(value",{"_index":4560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json.stringify(data",{"_index":3187,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["json.transformer",{"_index":1412,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["json.transformer.ts",{"_index":4457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt",{"_index":913,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["jwt_secret_key",{"_index":4583,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["jwtaccesstokenkey",{"_index":927,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["jwtdto",{"_index":783,"title":{"classes/JwtDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["jwtmodule",{"_index":845,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":865,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtrefreshtokenkey",{"_index":929,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["k",{"_index":2483,"title":{},"body":{"modules/FileModule.html":{},"classes/TmpDirCleanerProcess.html":{},"index.html":{}}}],["key",{"_index":925,"title":{},"body":{"classes/AuthService.html":{},"classes/CacheService.html":{},"controllers/ConfigController.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["key.length",{"_index":3691,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["key.replace(`${config_cache_prefix",{"_index":1645,"title":{},"body":{"injectables/ConfigService.html":{}}}],["key.slice(filenameprefix.length",{"_index":1685,"title":{},"body":{"injectables/ConfigService.html":{}}}],["key.startswith(filenameprefix",{"_index":1684,"title":{},"body":{"injectables/ConfigService.html":{}}}],["keys",{"_index":915,"title":{},"body":{"classes/AuthService.html":{},"classes/CacheService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/RedisCacheService.html":{},"miscellaneous/variables.html":{}}}],["keys.join",{"_index":3598,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["keys.push(...chunk",{"_index":3605,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["keys1",{"_index":3879,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keys1.length",{"_index":3883,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keys2",{"_index":3881,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keys2.includes(key",{"_index":3885,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keys2.length",{"_index":3884,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["keystoretrieve",{"_index":1639,"title":{},"body":{"injectables/ConfigService.html":{}}}],["keystoretrieve.map(async",{"_index":1643,"title":{},"body":{"injectables/ConfigService.html":{}}}],["keywithoutprefix",{"_index":1683,"title":{},"body":{"injectables/ConfigService.html":{}}}],["kind",{"_index":754,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["kiriliuk",{"_index":732,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["kp",{"_index":1589,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["kp.properties",{"_index":4496,"title":{"additional-documentation/properties/kp.properties.html":{}},"body":{"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["kp.static.files",{"_index":4579,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["kp.tmp.dir",{"_index":4577,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["kp_properties_file_name",{"_index":1599,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["kpconfig",{"_index":3676,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["kppath",{"_index":1658,"title":{},"body":{"injectables/ConfigService.html":{}}}],["label",{"_index":341,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["lang",{"_index":2782,"title":{},"body":{"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{}}}],["language",{"_index":757,"title":{"interfaces/Language.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["language.entity",{"_index":2877,"title":{},"body":{"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{}}}],["languageentity",{"_index":2784,"title":{"entities/LanguageEntity.html":{}},"body":{"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{}}}],["languagerep",{"_index":2815,"title":{},"body":{"injectables/LocaleService.html":{}}}],["languages",{"_index":1170,"title":{},"body":{"interfaces/BasicMediaController.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["last",{"_index":460,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/ProcessManagerService.html":{},"interfaces/VideoFileMetadata.html":{}}}],["last_name",{"_index":3722,"title":{},"body":{"entities/UserEntity.html":{}}}],["lastname",{"_index":1231,"title":{},"body":{"interfaces/BasicUserController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["lastvaluefrom",{"_index":2651,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["lastvaluefrom(response",{"_index":2657,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["later",{"_index":3699,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["latin",{"_index":307,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["latitude",{"_index":424,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["law",{"_index":747,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["lawsuit",{"_index":4270,"title":{},"body":{"license.html":{}}}],["leftjoinandselect(\"file.icon",{"_index":2590,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"file.metadata",{"_index":2591,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"file.preview",{"_index":2612,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"icon.files",{"_index":2604,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"icon.name",{"_index":2600,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"icon.type",{"_index":2608,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"iconfiles.format",{"_index":2606,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"iconname.lang",{"_index":2602,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"icontype.ext",{"_index":2610,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"metadata.audio",{"_index":2596,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"metadata.gps",{"_index":2592,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"metadata.image",{"_index":2594,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"metadata.video",{"_index":2598,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"preview.files",{"_index":2617,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"preview.name",{"_index":2613,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"preview.type",{"_index":2621,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"previewfiles.format",{"_index":2619,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"previewname.lang",{"_index":2615,"title":{},"body":{"injectables/FileService.html":{}}}],["leftjoinandselect(\"previewtype.ext",{"_index":2623,"title":{},"body":{"injectables/FileService.html":{}}}],["legal",{"_index":4161,"title":{},"body":{"license.html":{}}}],["legend",{"_index":1281,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}],["length",{"_index":586,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["lens",{"_index":587,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["lensmake",{"_index":622,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["lensmodel",{"_index":623,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["let's",{"_index":4105,"title":{},"body":{"index.html":{}}}],["letters",{"_index":308,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["level",{"_index":175,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/LogService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["levels",{"_index":4020,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["liability",{"_index":4344,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4352,"title":{},"body":{"license.html":{}}}],["lib",{"_index":1789,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["lib/.../access",{"_index":4430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../auth.constants.ts",{"_index":4429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../auth.types.ts",{"_index":4416,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../cache.constants.ts",{"_index":4454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../captcha.constants.ts",{"_index":4436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../captcha.types.ts",{"_index":4417,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../category.constants.ts",{"_index":4437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../config.constants.ts",{"_index":4438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../config.init",{"_index":4445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../constants.ts",{"_index":4453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../current",{"_index":4439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../explorer.constants.ts",{"_index":4425,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/.../explorer.types.ts",{"_index":4418,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../file.types.ts",{"_index":4419,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../files.utils.ts",{"_index":4443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../for",{"_index":4432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../log.constants.ts",{"_index":4447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../media.constants.ts",{"_index":4442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../media.types.ts",{"_index":4421,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../messages",{"_index":4450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../ms",{"_index":4422,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/.../pageable.types.ts",{"_index":4012,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lib/.../process.constants.ts",{"_index":4011,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lib/.../simple",{"_index":4456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../user.constants.ts",{"_index":4463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../user.types.ts",{"_index":4423,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../warlock.constants.ts",{"_index":4464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../warlock.types.ts",{"_index":4426,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../xml",{"_index":4420,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/common/auth/auth.constants.ts",{"_index":879,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["lib/common/auth/auth.constants.ts:109",{"_index":888,"title":{},"body":{"classes/AuthService.html":{}}}],["lib/common/auth/auth.constants.ts:116",{"_index":899,"title":{},"body":{"classes/AuthService.html":{}}}],["lib/common/auth/auth.constants.ts:123",{"_index":895,"title":{},"body":{"classes/AuthService.html":{}}}],["lib/common/auth/auth.controller.ts",{"_index":713,"title":{},"body":{"controllers/AuthController.html":{}}}],["lib/common/auth/auth.controller.ts:51",{"_index":726,"title":{},"body":{"controllers/AuthController.html":{}}}],["lib/common/auth/auth.controller.ts:87",{"_index":729,"title":{},"body":{"controllers/AuthController.html":{}}}],["lib/common/auth/auth.controller.ts:99",{"_index":721,"title":{},"body":{"controllers/AuthController.html":{}}}],["lib/common/auth/auth.module.ts",{"_index":835,"title":{},"body":{"modules/AuthModule.html":{}}}],["lib/common/auth/auth.module.ts:36",{"_index":841,"title":{},"body":{"modules/AuthModule.html":{}}}],["lib/common/auth/auth.types.ts",{"_index":954,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/auth/auth.types.ts:104",{"_index":2773,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/auth/auth.types.ts:110",{"_index":2775,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/auth/auth.types.ts:116",{"_index":2774,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/auth/auth.types.ts:122",{"_index":2776,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/auth/auth.types.ts:126",{"_index":956,"title":{},"body":{"interfaces/BasicAuthController.html":{}}}],["lib/common/auth/auth.types.ts:132",{"_index":957,"title":{},"body":{"interfaces/BasicAuthController.html":{}}}],["lib/common/auth/auth.types.ts:134",{"_index":955,"title":{},"body":{"interfaces/BasicAuthController.html":{}}}],["lib/common/auth/auth.types.ts:37",{"_index":2963,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:46",{"_index":2964,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:56",{"_index":2962,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:64",{"_index":2959,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:72",{"_index":2960,"title":{},"body":{"classes/LoginPayload.html":{}}}],["lib/common/auth/auth.types.ts:85",{"_index":1869,"title":{},"body":{"classes/ExchangeTokenPayload.html":{}}}],["lib/common/auth/auth.types.ts:98",{"_index":2778,"title":{},"body":{"classes/JwtDto.html":{}}}],["lib/common/captcha/captcha.constants.ts",{"_index":4480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/captcha/captcha.controller.ts",{"_index":1341,"title":{},"body":{"controllers/CaptchaController.html":{}}}],["lib/common/captcha/captcha.controller.ts:30",{"_index":1344,"title":{},"body":{"controllers/CaptchaController.html":{}}}],["lib/common/captcha/captcha.controller.ts:38",{"_index":1342,"title":{},"body":{"controllers/CaptchaController.html":{}}}],["lib/common/captcha/captcha.module.ts",{"_index":1355,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["lib/common/captcha/captcha.module.ts:34",{"_index":1357,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["lib/common/captcha/captcha.module.ts:54",{"_index":1362,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["lib/common/captcha/captcha.types.ts",{"_index":988,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/captcha/captcha.types.ts:29",{"_index":1370,"title":{},"body":{"classes/CaptchaService.html":{}}}],["lib/common/captcha/captcha.types.ts:36",{"_index":1371,"title":{},"body":{"classes/CaptchaService.html":{}}}],["lib/common/captcha/captcha.types.ts:49",{"_index":1369,"title":{},"body":{"classes/CaptchaRequest.html":{}}}],["lib/common/captcha/captcha.types.ts:55",{"_index":1367,"title":{},"body":{"classes/CaptchaRequest.html":{}}}],["lib/common/captcha/captcha.types.ts:84",{"_index":994,"title":{},"body":{"interfaces/BasicCaptchaController.html":{}}}],["lib/common/captcha/captcha.types.ts:86",{"_index":991,"title":{},"body":{"interfaces/BasicCaptchaController.html":{}}}],["lib/common/captcha/google",{"_index":2635,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["lib/common/captcha/graphic",{"_index":2663,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["lib/common/captcha/montserrat.ttf",{"_index":4609,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["lib/common/config/config.constants.ts",{"_index":4490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/config/config.controller.ts",{"_index":1477,"title":{},"body":{"controllers/ConfigController.html":{}}}],["lib/common/config/config.controller.ts:44",{"_index":1482,"title":{},"body":{"controllers/ConfigController.html":{}}}],["lib/common/config/config.controller.ts:53",{"_index":1489,"title":{},"body":{"controllers/ConfigController.html":{}}}],["lib/common/config/config.controller.ts:60",{"_index":1485,"title":{},"body":{"controllers/ConfigController.html":{}}}],["lib/common/config/config.init",{"_index":4537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/config/config.module.ts",{"_index":1518,"title":{},"body":{"modules/ConfigModule.html":{}}}],["lib/common/config/config.service.ts",{"_index":1520,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:113",{"_index":1591,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:123",{"_index":1582,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:133",{"_index":1586,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:211",{"_index":1579,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:251",{"_index":1573,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:273",{"_index":1548,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:290",{"_index":1540,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:322",{"_index":1545,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:357",{"_index":1566,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:44",{"_index":1592,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:46",{"_index":1593,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:47",{"_index":1538,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:57",{"_index":1559,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.service.ts:78",{"_index":1554,"title":{},"body":{"injectables/ConfigService.html":{}}}],["lib/common/config/config.types.ts",{"_index":1507,"title":{},"body":{"interfaces/ConfigItem.html":{}}}],["lib/common/explorer/entity/explorer",{"_index":1871,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{}}}],["lib/common/explorer/explorer.constants.ts",{"_index":4427,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/common/explorer/explorer.controller.ts",{"_index":1953,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["lib/common/explorer/explorer.controller.ts:117",{"_index":1957,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["lib/common/explorer/explorer.controller.ts:134",{"_index":1966,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["lib/common/explorer/explorer.controller.ts:155",{"_index":1964,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["lib/common/explorer/explorer.controller.ts:64",{"_index":1962,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["lib/common/explorer/explorer.controller.ts:70",{"_index":1968,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["lib/common/explorer/explorer.controller.ts:75",{"_index":1959,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["lib/common/explorer/explorer.controller.ts:95",{"_index":1955,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["lib/common/explorer/explorer.module.ts",{"_index":1998,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["lib/common/explorer/explorer.module.ts:35",{"_index":2001,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["lib/common/explorer/explorer.module.ts:68",{"_index":2004,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["lib/common/explorer/explorer.types.ts",{"_index":1007,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/explorer/explorer.types.ts:191",{"_index":1867,"title":{},"body":{"interfaces/EntitySaveHandler.html":{}}}],["lib/common/explorer/explorer.types.ts:202",{"_index":2021,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:211",{"_index":2026,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:224",{"_index":2032,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:237",{"_index":2030,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:251",{"_index":2024,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:264",{"_index":2028,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:273",{"_index":2029,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:280",{"_index":2022,"title":{},"body":{"classes/ExplorerService.html":{}}}],["lib/common/explorer/explorer.types.ts:41",{"_index":1025,"title":{},"body":{"interfaces/BasicExplorerController.html":{}}}],["lib/common/explorer/explorer.types.ts:43",{"_index":1032,"title":{},"body":{"interfaces/BasicExplorerController.html":{}}}],["lib/common/explorer/explorer.types.ts:45",{"_index":1024,"title":{},"body":{"interfaces/BasicExplorerController.html":{}}}],["lib/common/explorer/explorer.types.ts:51",{"_index":1016,"title":{},"body":{"interfaces/BasicExplorerController.html":{}}}],["lib/common/explorer/explorer.types.ts:53",{"_index":1021,"title":{},"body":{"interfaces/BasicExplorerController.html":{}}}],["lib/common/explorer/explorer.types.ts:59",{"_index":1029,"title":{},"body":{"interfaces/BasicExplorerController.html":{}}}],["lib/common/explorer/explorer.types.ts:61",{"_index":1027,"title":{},"body":{"interfaces/BasicExplorerController.html":{}}}],["lib/common/explorer/handlers/user",{"_index":3731,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["lib/common/file/entity/audio",{"_index":674,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["lib/common/file/entity/file",{"_index":2161,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["lib/common/file/entity/file.entity.ts",{"_index":2110,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:25",{"_index":2114,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:29",{"_index":2112,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:32",{"_index":2120,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:35",{"_index":2121,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:38",{"_index":2124,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:41",{"_index":2126,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:44",{"_index":2113,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:47",{"_index":2122,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:54",{"_index":2119,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/file.entity.ts:58",{"_index":2130,"title":{},"body":{"entities/FileEntity.html":{}}}],["lib/common/file/entity/gps",{"_index":2659,"title":{},"body":{"entities/GpsFileMetadataEntity.html":{}}}],["lib/common/file/entity/icc",{"_index":2742,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["lib/common/file/entity/image",{"_index":2766,"title":{},"body":{"entities/ImageFileMetadataEntity.html":{}}}],["lib/common/file/entity/video",{"_index":3778,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["lib/common/file/file",{"_index":2176,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["lib/common/file/file.constants.ts",{"_index":2138,"title":{},"body":{"classes/FileManager.html":{},"classes/FileMd.html":{}}}],["lib/common/file/file.constants.ts:25",{"_index":2146,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:34",{"_index":2147,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:36",{"_index":2149,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:38",{"_index":2151,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:40",{"_index":2150,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:42",{"_index":2153,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:44",{"_index":2154,"title":{},"body":{"classes/FileManager.html":{}}}],["lib/common/file/file.constants.ts:51",{"_index":2160,"title":{},"body":{"classes/FileMd.html":{}}}],["lib/common/file/file.controller.ts",{"_index":2071,"title":{},"body":{"controllers/FileController.html":{}}}],["lib/common/file/file.controller.ts:43",{"_index":2073,"title":{},"body":{"controllers/FileController.html":{}}}],["lib/common/file/file.controller.ts:58",{"_index":2077,"title":{},"body":{"controllers/FileController.html":{}}}],["lib/common/file/file.controller.ts:68",{"_index":2075,"title":{},"body":{"controllers/FileController.html":{}}}],["lib/common/file/file.controller.ts:73",{"_index":2079,"title":{},"body":{"controllers/FileController.html":{}}}],["lib/common/file/file.module.ts",{"_index":2478,"title":{},"body":{"modules/FileModule.html":{}}}],["lib/common/file/file.module.ts:34",{"_index":2479,"title":{},"body":{"modules/FileModule.html":{}}}],["lib/common/file/file.service.ts",{"_index":2488,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:226",{"_index":2499,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:256",{"_index":2504,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:273",{"_index":2507,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:283",{"_index":2522,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:292",{"_index":2519,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.service.ts:44",{"_index":2498,"title":{},"body":{"injectables/FileService.html":{}}}],["lib/common/file/file.types.ts",{"_index":330,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/file/file.types.ts:323",{"_index":1146,"title":{},"body":{"interfaces/BasicFileController.html":{}}}],["lib/common/file/file.types.ts:325",{"_index":1148,"title":{},"body":{"interfaces/BasicFileController.html":{}}}],["lib/common/file/file.types.ts:327",{"_index":1147,"title":{},"body":{"interfaces/BasicFileController.html":{}}}],["lib/common/file/file.types.ts:329",{"_index":1149,"title":{},"body":{"interfaces/BasicFileController.html":{}}}],["lib/common/media/entity/media",{"_index":3020,"title":{},"body":{"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{}}}],["lib/common/media/entity/media.entity.ts",{"_index":3002,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:30",{"_index":3008,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:34",{"_index":3003,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:38",{"_index":3010,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:41",{"_index":3014,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:44",{"_index":3007,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:51",{"_index":3009,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/entity/media.entity.ts:55",{"_index":3011,"title":{},"body":{"entities/MediaEntity.html":{}}}],["lib/common/media/media.constants.ts",{"_index":4532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/media/media.controller.ts",{"_index":2966,"title":{},"body":{"controllers/MediaController.html":{}}}],["lib/common/media/media.controller.ts:44",{"_index":2968,"title":{},"body":{"controllers/MediaController.html":{}}}],["lib/common/media/media.controller.ts:58",{"_index":2971,"title":{},"body":{"controllers/MediaController.html":{}}}],["lib/common/media/media.controller.ts:70",{"_index":2970,"title":{},"body":{"controllers/MediaController.html":{}}}],["lib/common/media/media.controller.ts:75",{"_index":2974,"title":{},"body":{"controllers/MediaController.html":{}}}],["lib/common/media/media.controller.ts:80",{"_index":2973,"title":{},"body":{"controllers/MediaController.html":{}}}],["lib/common/media/media.module.ts",{"_index":3071,"title":{},"body":{"modules/MediaModule.html":{}}}],["lib/common/media/media.module.ts:36",{"_index":3072,"title":{},"body":{"modules/MediaModule.html":{}}}],["lib/common/media/media.types.ts",{"_index":1151,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/media/media.types.ts:124",{"_index":3079,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:127",{"_index":3080,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:131",{"_index":3081,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:134",{"_index":3082,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:137",{"_index":3083,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:140",{"_index":3085,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:143",{"_index":3084,"title":{},"body":{"classes/MediaTypeDto.html":{}}}],["lib/common/media/media.types.ts:151",{"_index":3049,"title":{},"body":{"classes/MediaFormatDto.html":{}}}],["lib/common/media/media.types.ts:154",{"_index":3050,"title":{},"body":{"classes/MediaFormatDto.html":{}}}],["lib/common/media/media.types.ts:157",{"_index":3051,"title":{},"body":{"classes/MediaFormatDto.html":{}}}],["lib/common/media/media.types.ts:160",{"_index":3052,"title":{},"body":{"classes/MediaFormatDto.html":{}}}],["lib/common/media/media.types.ts:168",{"_index":2997,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:171",{"_index":2995,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:174",{"_index":2999,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:178",{"_index":3001,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:182",{"_index":2996,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:185",{"_index":2998,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:188",{"_index":3000,"title":{},"body":{"classes/MediaDto.html":{}}}],["lib/common/media/media.types.ts:196",{"_index":3029,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:199",{"_index":3026,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:203",{"_index":3027,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:206",{"_index":3028,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:209",{"_index":3030,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:212",{"_index":3031,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:215",{"_index":3032,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:218",{"_index":3033,"title":{},"body":{"classes/MediaFileDto.html":{}}}],["lib/common/media/media.types.ts:225",{"_index":3063,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:227",{"_index":3064,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:229",{"_index":3066,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:231",{"_index":3065,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:233",{"_index":3070,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:235",{"_index":3069,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:237",{"_index":3062,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:245",{"_index":3068,"title":{},"body":{"classes/MediaManager.html":{}}}],["lib/common/media/media.types.ts:253",{"_index":1158,"title":{},"body":{"interfaces/BasicMediaController.html":{}}}],["lib/common/media/media.types.ts:259",{"_index":1163,"title":{},"body":{"interfaces/BasicMediaController.html":{}}}],["lib/common/media/media.types.ts:266",{"_index":1160,"title":{},"body":{"interfaces/BasicMediaController.html":{}}}],["lib/common/media/media.types.ts:268",{"_index":1167,"title":{},"body":{"interfaces/BasicMediaController.html":{}}}],["lib/common/media/media.types.ts:270",{"_index":1165,"title":{},"body":{"interfaces/BasicMediaController.html":{}}}],["lib/common/process/abstract",{"_index":119,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["lib/common/process/default/tmp",{"_index":3647,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["lib/common/process/entity/process.log.entity.ts",{"_index":3352,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:35",{"_index":3354,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:38",{"_index":3353,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:42",{"_index":3357,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:46",{"_index":3360,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.log.entity.ts:49",{"_index":3356,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts",{"_index":3531,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:38",{"_index":3533,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:51",{"_index":3540,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:55",{"_index":3537,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:59",{"_index":3536,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:63",{"_index":3535,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:66",{"_index":3539,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/entity/process.unit.entity.ts:70",{"_index":3541,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["lib/common/process/process",{"_index":3365,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["lib/common/process/process.constants.ts",{"_index":4013,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lib/common/process/process.controller.ts",{"_index":3301,"title":{},"body":{"controllers/ProcessController.html":{}}}],["lib/common/process/process.controller.ts:38",{"_index":3315,"title":{},"body":{"controllers/ProcessController.html":{}}}],["lib/common/process/process.controller.ts:44",{"_index":3318,"title":{},"body":{"controllers/ProcessController.html":{}}}],["lib/common/process/process.controller.ts:50",{"_index":3321,"title":{},"body":{"controllers/ProcessController.html":{}}}],["lib/common/process/process.controller.ts:56",{"_index":3312,"title":{},"body":{"controllers/ProcessController.html":{}}}],["lib/common/process/process.controller.ts:69",{"_index":3309,"title":{},"body":{"controllers/ProcessController.html":{}}}],["lib/common/process/process.module.ts",{"_index":3464,"title":{},"body":{"modules/ProcessModule.html":{}}}],["lib/common/process/process.module.ts:53",{"_index":3473,"title":{},"body":{"modules/ProcessModule.html":{}}}],["lib/common/process/process.types.ts",{"_index":3348,"title":{},"body":{"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{}}}],["lib/common/user/abstract",{"_index":262,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["lib/common/user/entity/user",{"_index":3751,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["lib/common/user/entity/user.entity.ts",{"_index":3714,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:41",{"_index":3721,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:44",{"_index":3717,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:47",{"_index":3725,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:50",{"_index":3724,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:54",{"_index":3718,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:58",{"_index":3726,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:62",{"_index":3720,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:66",{"_index":3723,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:70",{"_index":3716,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:74",{"_index":3727,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.entity.ts:78",{"_index":3728,"title":{},"body":{"entities/UserEntity.html":{}}}],["lib/common/user/entity/user.subscriber.ts",{"_index":3763,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/entity/user.subscriber.ts:35",{"_index":3768,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/entity/user.subscriber.ts:37",{"_index":3773,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/entity/user.subscriber.ts:41",{"_index":3770,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/entity/user.subscriber.ts:46",{"_index":3772,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lib/common/user/profile.controller.ts",{"_index":3548,"title":{},"body":{"controllers/ProfileController.html":{}}}],["lib/common/user/profile.controller.ts:47",{"_index":3553,"title":{},"body":{"controllers/ProfileController.html":{}}}],["lib/common/user/profile.controller.ts:66",{"_index":3557,"title":{},"body":{"controllers/ProfileController.html":{}}}],["lib/common/user/profile.controller.ts:80",{"_index":3555,"title":{},"body":{"controllers/ProfileController.html":{}}}],["lib/common/user/profile.controller.ts:87",{"_index":3551,"title":{},"body":{"controllers/ProfileController.html":{}}}],["lib/common/user/user",{"_index":1245,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["lib/common/user/user.constants.ts",{"_index":4566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/common/user/user.module.ts",{"_index":3743,"title":{},"body":{"modules/UserModule.html":{}}}],["lib/common/user/user.module.ts:31",{"_index":3744,"title":{},"body":{"modules/UserModule.html":{}}}],["lib/common/user/user.types.ts",{"_index":1214,"title":{},"body":{"interfaces/BasicUserController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/typealiases.html":{}}}],["lib/common/user/user.types.ts:113",{"_index":3759,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:115",{"_index":3758,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:117",{"_index":3761,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:119",{"_index":3757,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:121",{"_index":3760,"title":{},"body":{"classes/UserService.html":{}}}],["lib/common/user/user.types.ts:125",{"_index":1222,"title":{},"body":{"interfaces/BasicUserController.html":{}}}],["lib/common/user/user.types.ts:127",{"_index":1226,"title":{},"body":{"interfaces/BasicUserController.html":{}}}],["lib/common/user/user.types.ts:129",{"_index":1224,"title":{},"body":{"interfaces/BasicUserController.html":{}}}],["lib/common/user/user.types.ts:131",{"_index":1220,"title":{},"body":{"interfaces/BasicUserController.html":{}}}],["lib/common/user/user.types.ts:53",{"_index":3748,"title":{},"body":{"classes/UserRoleDto.html":{}}}],["lib/common/user/user.types.ts:56",{"_index":3749,"title":{},"body":{"classes/UserRoleDto.html":{}}}],["lib/common/user/user.types.ts:59",{"_index":3750,"title":{},"body":{"classes/UserRoleDto.html":{}}}],["lib/common/user/user.types.ts:67",{"_index":3707,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:70",{"_index":3709,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:73",{"_index":3705,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:76",{"_index":3706,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:79",{"_index":3708,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:82",{"_index":3710,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:86",{"_index":3712,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:89",{"_index":3703,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:92",{"_index":3704,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:95",{"_index":3711,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/user/user.types.ts:98",{"_index":3713,"title":{},"body":{"classes/UserDto.html":{}}}],["lib/common/xml",{"_index":3806,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/constants.ts",{"_index":3621,"title":{},"body":{"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/constants.ts:25",{"_index":3626,"title":{},"body":{"classes/Roles.html":{}}}],["lib/shared/constants.ts:30",{"_index":3623,"title":{},"body":{"classes/Roles.html":{}}}],["lib/shared/constants.ts:35",{"_index":3625,"title":{},"body":{"classes/Roles.html":{}}}],["lib/shared/decorators/access",{"_index":4465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/decorators/current",{"_index":4501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/decorators/for",{"_index":4471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/exceptions/bad",{"_index":941,"title":{},"body":{"classes/BadRequestMsException.html":{}}}],["lib/shared/exceptions/forbidden",{"_index":2631,"title":{},"body":{"classes/ForbiddenMsException.html":{}}}],["lib/shared/exceptions/invalid",{"_index":2771,"title":{},"body":{"classes/InvalidTokenMsException.html":{}}}],["lib/shared/exceptions/ms.exception.ts",{"_index":3254,"title":{},"body":{"classes/MsException.html":{}}}],["lib/shared/exceptions/ms.exception.ts:23",{"_index":3259,"title":{},"body":{"classes/MsException.html":{}}}],["lib/shared/exceptions/not",{"_index":3273,"title":{},"body":{"classes/NotFoundMsException.html":{}}}],["lib/shared/exceptions/too",{"_index":3693,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["lib/shared/exceptions/unauthorized",{"_index":3701,"title":{},"body":{"classes/UnauthorizedMsException.html":{}}}],["lib/shared/filters/db",{"_index":1756,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["lib/shared/guards/abstract",{"_index":6,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["lib/shared/guards/auth.guard.ts",{"_index":822,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["lib/shared/guards/auth.guard.ts:27",{"_index":827,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["lib/shared/guards/lite",{"_index":2792,"title":{},"body":{"injectables/LiteAuthGuard.html":{}}}],["lib/shared/guards/roles.guard.ts",{"_index":3629,"title":{},"body":{"guards/RolesGuard.html":{}}}],["lib/shared/guards/roles.guard.ts:29",{"_index":3633,"title":{},"body":{"guards/RolesGuard.html":{}}}],["lib/shared/guards/roles.guard.ts:32",{"_index":3634,"title":{},"body":{"guards/RolesGuard.html":{}}}],["lib/shared/interceptors/dto.interceptor.ts",{"_index":1846,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["lib/shared/interceptors/dto.interceptor.ts:31",{"_index":1854,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["lib/shared/interceptors/dto.interceptor.ts:34",{"_index":1859,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["lib/shared/modules/cache/cache.constants.ts",{"_index":4555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/modules/cache/cache.module.ts",{"_index":1290,"title":{},"body":{"modules/CacheModule.html":{}}}],["lib/shared/modules/cache/cache.types.ts",{"_index":1314,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:21",{"_index":1328,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:23",{"_index":1335,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:25",{"_index":1330,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:27",{"_index":1339,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:33",{"_index":1324,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:35",{"_index":1337,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:37",{"_index":1326,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/cache.types.ts:39",{"_index":1332,"title":{},"body":{"classes/CacheService.html":{}}}],["lib/shared/modules/cache/redis",{"_index":3573,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["lib/shared/modules/cache/redis.module.ts",{"_index":3611,"title":{},"body":{"modules/RedisModule.html":{}}}],["lib/shared/modules/cache/redis.module.ts:29",{"_index":3613,"title":{},"body":{"modules/RedisModule.html":{}}}],["lib/shared/modules/category/category.constants.ts",{"_index":4481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/modules/category/category.module.ts",{"_index":1423,"title":{},"body":{"modules/CategoryModule.html":{}}}],["lib/shared/modules/category/category.service.ts",{"_index":1446,"title":{},"body":{"injectables/CategoryService.html":{}}}],["lib/shared/modules/category/category.service.ts:29",{"_index":1451,"title":{},"body":{"injectables/CategoryService.html":{}}}],["lib/shared/modules/category/category.service.ts:42",{"_index":1454,"title":{},"body":{"injectables/CategoryService.html":{}}}],["lib/shared/modules/category/category.service.ts:60",{"_index":1459,"title":{},"body":{"injectables/CategoryService.html":{}}}],["lib/shared/modules/category/entity/category",{"_index":1433,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts",{"_index":1373,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:40",{"_index":1388,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:44",{"_index":1383,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:47",{"_index":1404,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:51",{"_index":1393,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:58",{"_index":1397,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:61",{"_index":1387,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:65",{"_index":1402,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:68",{"_index":1399,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/category/entity/category.entity.ts:71",{"_index":1380,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts",{"_index":2785,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts:28",{"_index":2788,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts:32",{"_index":2786,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts:36",{"_index":2789,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/language.entity.ts:39",{"_index":2787,"title":{},"body":{"entities/LanguageEntity.html":{}}}],["lib/shared/modules/locale/entity/locale",{"_index":2834,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["lib/shared/modules/locale/entity/localized",{"_index":2870,"title":{},"body":{"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{}}}],["lib/shared/modules/locale/locale.module.ts",{"_index":2800,"title":{},"body":{"modules/LocaleModule.html":{}}}],["lib/shared/modules/locale/locale.service.ts",{"_index":2809,"title":{},"body":{"injectables/LocaleService.html":{}}}],["lib/shared/modules/locale/locale.service.ts:28",{"_index":2814,"title":{},"body":{"injectables/LocaleService.html":{}}}],["lib/shared/modules/locale/locale.service.ts:44",{"_index":2817,"title":{},"body":{"injectables/LocaleService.html":{}}}],["lib/shared/modules/locale/locale.types.ts",{"_index":2779,"title":{},"body":{"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{}}}],["lib/shared/modules/log/log.constants.ts",{"_index":4549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/modules/log/log.module.ts",{"_index":2887,"title":{},"body":{"modules/LogModule.html":{}}}],["lib/shared/modules/log/log.service.ts",{"_index":2891,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:100",{"_index":2907,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:14",{"_index":2912,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:24",{"_index":2905,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:34",{"_index":2924,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:44",{"_index":2922,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:54",{"_index":2901,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:64",{"_index":2914,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/log/log.service.ts:82",{"_index":2918,"title":{},"body":{"classes/LogService.html":{}}}],["lib/shared/modules/messages",{"_index":3120,"title":{},"body":{"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/modules/ms",{"_index":3098,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts",{"_index":3275,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"miscellaneous/enumerations.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:16",{"_index":3295,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:25",{"_index":3298,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:33",{"_index":3299,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:41",{"_index":3296,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:49",{"_index":3293,"title":{},"body":{"classes/PageableParams.html":{}}}],["lib/shared/modules/pageable/pageable.types.ts:56",{"_index":3279,"title":{},"body":{"classes/PageableData.html":{}}}],["lib/shared/modules/warlock/warlock.constants.ts",{"_index":4575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/modules/warlock/warlock.module.ts",{"_index":3789,"title":{},"body":{"modules/WarlockModule.html":{}}}],["lib/shared/modules/warlock/warlock.types.ts",{"_index":4428,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/shared/pipes/not",{"_index":3260,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["lib/shared/transformers/simple",{"_index":4557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/shared/utils/files.utils.ts",{"_index":1774,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"miscellaneous/variables.html":{}}}],["lib/shared/utils/files.utils.ts:43",{"_index":1779,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["licensable",{"_index":4259,"title":{},"body":{"license.html":{}}}],["license",{"_index":736,"title":{"license.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":733,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["licenses",{"_index":4275,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":4157,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":3468,"title":{},"body":{"modules/ProcessModule.html":{}}}],["lifetime",{"_index":4585,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["light",{"_index":562,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["lightweight",{"_index":2793,"title":{},"body":{"injectables/LiteAuthGuard.html":{}}}],["limit",{"_index":1620,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{}}}],["limitation",{"_index":4333,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":760,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["limited",{"_index":4186,"title":{},"body":{"license.html":{}}}],["line",{"_index":1678,"title":{},"body":{"injectables/ConfigService.html":{},"classes/LogService.html":{}}}],["line.split",{"_index":1682,"title":{},"body":{"injectables/ConfigService.html":{}}}],["line.trim().length",{"_index":1680,"title":{},"body":{"injectables/ConfigService.html":{}}}],["line.trim().startswith",{"_index":1679,"title":{},"body":{"injectables/ConfigService.html":{}}}],["linenumber",{"_index":2910,"title":{},"body":{"classes/LogService.html":{}}}],["lines",{"_index":1676,"title":{},"body":{"injectables/ConfigService.html":{},"classes/LogService.html":{}}}],["lines.length",{"_index":2948,"title":{},"body":{"classes/LogService.html":{}}}],["lines[3].match(/at\\s+(.+?)\\s+\\((.+):(\\d+):\\d",{"_index":2951,"title":{},"body":{"classes/LogService.html":{}}}],["link",{"_index":1174,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"license.html":{}}}],["links",{"_index":3035,"title":{},"body":{"entities/MediaFileEntity.html":{}}}],["list",{"_index":1134,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/BasicMediaController.html":{},"controllers/ConfigController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["list')@forroles(roles.admin",{"_index":1961,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["list(params",{"_index":1480,"title":{},"body":{"controllers/ConfigController.html":{}}}],["listens",{"_index":2836,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["listento",{"_index":3767,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["lists",{"_index":1874,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"license.html":{}}}],["liteauthguard",{"_index":776,"title":{"injectables/LiteAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LiteAuthGuard.html":{}}}],["literal",{"_index":1361,"title":{},"body":{"modules/CaptchaModule.html":{},"injectables/ConfigService.html":{},"classes/LogService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/typealiases.html":{}}}],["litigation",{"_index":4266,"title":{},"body":{"license.html":{}}}],["loaded",{"_index":4489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loads",{"_index":4547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":1569,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["local.env",{"_index":4112,"title":{},"body":{"index.html":{}}}],["local.properties",{"_index":4118,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["local_properties_file_name",{"_index":1600,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["localcontent",{"_index":1565,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localcontent.split(\"\\n",{"_index":1748,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localcontentlines",{"_index":1747,"title":{},"body":{"injectables/ConfigService.html":{}}}],["locale.service",{"_index":2807,"title":{},"body":{"modules/LocaleModule.html":{}}}],["locale.types",{"_index":2790,"title":{},"body":{"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{}}}],["locale/entity/localized",{"_index":1409,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["localemodule",{"_index":2795,"title":{"modules/LocaleModule.html":{}},"body":{"modules/LocaleModule.html":{},"modules.html":{},"overview.html":{}}}],["localeservice",{"_index":2799,"title":{"injectables/LocaleService.html":{}},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"overview.html":{}}}],["localesubscriber",{"_index":2833,"title":{"injectables/LocaleSubscriber.html":{}},"body":{"injectables/LocaleSubscriber.html":{}}}],["localization",{"_index":2802,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{}}}],["localized",{"_index":2781,"title":{},"body":{"interfaces/Language.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{}}}],["localizedmedia",{"_index":2783,"title":{"interfaces/LocalizedMedia.html":{}},"body":{"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{}}}],["localizedmediaentity",{"_index":2805,"title":{"entities/LocalizedMediaEntity.html":{}},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{}}}],["localizedmediaproperties",{"_index":2868,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["localizedmediaproperties.length",{"_index":2869,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["localizedmediarep",{"_index":2813,"title":{},"body":{"injectables/LocaleService.html":{}}}],["localizedstring",{"_index":1034,"title":{"interfaces/LocalizedString.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["localizedstringentity",{"_index":1389,"title":{"entities/LocalizedStringEntity.html":{}},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["localizedstringproperties",{"_index":2855,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["localizedstringproperties.length",{"_index":2860,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["localizedstringrep",{"_index":2812,"title":{},"body":{"injectables/LocaleService.html":{}}}],["localkey",{"_index":1753,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localline",{"_index":1750,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localline.split",{"_index":1754,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localline.trim().length",{"_index":1752,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localline.trim().startswith",{"_index":1751,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localpropertiescontent",{"_index":1664,"title":{},"body":{"injectables/ConfigService.html":{}}}],["localpropertiespath",{"_index":1661,"title":{},"body":{"injectables/ConfigService.html":{}}}],["located",{"_index":2946,"title":{},"body":{"classes/LogService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["location",{"_index":422,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["lock",{"_index":3798,"title":{},"body":{"modules/WarlockModule.html":{}}}],["lockcode",{"_index":3800,"title":{},"body":{"modules/WarlockModule.html":{}}}],["lockexec",{"_index":3383,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["locking",{"_index":3790,"title":{},"body":{"modules/WarlockModule.html":{},"miscellaneous/typealiases.html":{}}}],["lockkey",{"_index":3797,"title":{},"body":{"modules/WarlockModule.html":{}}}],["lockkey}:${lockcode",{"_index":3803,"title":{},"body":{"modules/WarlockModule.html":{}}}],["locklifetime",{"_index":3795,"title":{},"body":{"modules/WarlockModule.html":{}}}],["log",{"_index":178,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/enumerations.html":{}}}],["log(message",{"_index":2911,"title":{},"body":{"classes/LogService.html":{}}}],["log.constants",{"_index":2890,"title":{},"body":{"modules/LogModule.html":{}}}],["log.service",{"_index":2889,"title":{},"body":{"modules/LogModule.html":{}}}],["log/log.constants",{"_index":1296,"title":{},"body":{"modules/CacheModule.html":{},"injectables/CategoryService.html":{},"injectables/LocaleSubscriber.html":{},"modules/MessagesBrokerModule.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/RedisCacheService.html":{},"modules/WarlockModule.html":{}}}],["log/log.module",{"_index":1295,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/WarlockModule.html":{}}}],["logdata",{"_index":3345,"title":{},"body":{"controllers/ProcessController.html":{}}}],["logger",{"_index":21,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"injectables/AuthGuard.html":{},"modules/CacheModule.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"modules/MessagesBrokerModule.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"modules/WarlockModule.html":{},"miscellaneous/variables.html":{}}}],["logging",{"_index":2844,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"modules/LogModule.html":{},"classes/MsClient.html":{},"index.html":{}}}],["login",{"_index":291,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["login(payload",{"_index":723,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/BasicAuthController.html":{}}}],["loginpayload",{"_index":724,"title":{"classes/LoginPayload.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["loginregex",{"_index":301,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["loginregex.test(login",{"_index":305,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["loginstance",{"_index":126,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["loglevel",{"_index":197,"title":{},"body":{"classes/AbstractProcess.html":{},"miscellaneous/enumerations.html":{}}}],["loglevel.debug",{"_index":236,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["loglevel.error",{"_index":224,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["loglevel.log",{"_index":186,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["loglevel.verbose",{"_index":238,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["loglevel.warn",{"_index":234,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["logmodule",{"_index":852,"title":{"modules/LogModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"overview.html":{}}}],["logout",{"_index":717,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/BasicAuthController.html":{}}}],["logout(token",{"_index":727,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["logs",{"_index":2902,"title":{},"body":{"classes/LogService.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["logservice",{"_index":2888,"title":{"classes/LogService.html":{}},"body":{"modules/LogModule.html":{},"classes/LogService.html":{},"miscellaneous/variables.html":{}}}],["longitude",{"_index":425,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["loss",{"_index":4359,"title":{},"body":{"license.html":{}}}],["losses",{"_index":4366,"title":{},"body":{"license.html":{}}}],["ls",{"_index":2822,"title":{},"body":{"injectables/LocaleService.html":{}}}],["ls.code",{"_index":2825,"title":{},"body":{"injectables/LocaleService.html":{}}}],["ls.id",{"_index":2829,"title":{},"body":{"injectables/LocaleService.html":{}}}],["ls.lang",{"_index":2823,"title":{},"body":{"injectables/LocaleService.html":{}}}],["ls.value",{"_index":2824,"title":{},"body":{"injectables/LocaleService.html":{}}}],["m",{"_index":2938,"title":{},"body":{"classes/LogService.html":{}}}],["m.endswith",{"_index":2940,"title":{},"body":{"classes/LogService.html":{}}}],["m.length",{"_index":2942,"title":{},"body":{"classes/LogService.html":{}}}],["m.startswith",{"_index":2939,"title":{},"body":{"classes/LogService.html":{}}}],["m.substring(1",{"_index":2941,"title":{},"body":{"classes/LogService.html":{}}}],["machine",{"_index":4114,"title":{},"body":{"index.html":{}}}],["made",{"_index":3696,"title":{},"body":{"classes/TooManyRequestsMsException.html":{},"license.html":{}}}],["mailing",{"_index":4221,"title":{},"body":{"license.html":{}}}],["main",{"_index":1568,"title":{},"body":{"injectables/ConfigService.html":{},"classes/LogService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["maincontent",{"_index":1570,"title":{},"body":{"injectables/ConfigService.html":{}}}],["maincontent.split(\"\\n",{"_index":1746,"title":{},"body":{"injectables/ConfigService.html":{}}}],["maincontentlines",{"_index":1745,"title":{},"body":{"injectables/ConfigService.html":{}}}],["make",{"_index":523,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"license.html":{}}}],["makeimagefromtext",{"_index":2670,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["makeimagefromtext(text",{"_index":2683,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["making",{"_index":4184,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":4364,"title":{},"body":{"license.html":{}}}],["manage",{"_index":4079,"title":{},"body":{"index.html":{}}}],["managed",{"_index":4223,"title":{},"body":{"license.html":{}}}],["management",{"_index":419,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"license.html":{}}}],["manager",{"_index":311,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/ProcessManagerService.html":{},"classes/Roles.html":{}}}],["manager.findone(this.type",{"_index":320,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["manager.service",{"_index":188,"title":{},"body":{"classes/AbstractProcess.html":{},"controllers/ProcessController.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["manager.service.ts",{"_index":3366,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:111",{"_index":3408,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:130",{"_index":3405,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:141",{"_index":3397,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:151",{"_index":3385,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:164",{"_index":3412,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:174",{"_index":3391,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:184",{"_index":3395,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:197",{"_index":3388,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:208",{"_index":3402,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:42",{"_index":3382,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:57",{"_index":3398,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:83",{"_index":3406,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manager.service.ts:97",{"_index":3407,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["manages",{"_index":2640,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["managing",{"_index":124,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"modules/UserModule.html":{},"index.html":{},"additional-documentation/properties/media.properties.html":{}}}],["manufacturer",{"_index":504,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["manufacturer\"]?.description",{"_index":2369,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["many",{"_index":3694,"title":{},"body":{"classes/TooManyRequestsMsException.html":{}}}],["manytomany",{"_index":1406,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["manytomany(undefined",{"_index":1390,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["manytomany(undefined)@jointable",{"_index":1437,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/UserEntity.html":{}}}],["manytoone",{"_index":1407,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/UserEntity.html":{}}}],["manytoone(undefined",{"_index":1385,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/UserEntity.html":{}}}],["map",{"_index":1861,"title":{},"body":{"injectables/DtoInterceptor.html":{},"injectables/MessagesBrokerService.html":{},"miscellaneous/variables.html":{}}}],["map((part",{"_index":1688,"title":{},"body":{"injectables/ConfigService.html":{}}}],["marked",{"_index":4228,"title":{},"body":{"license.html":{}}}],["marks",{"_index":4325,"title":{},"body":{"license.html":{}}}],["markup",{"_index":4041,"title":{},"body":{"index.html":{}}}],["match",{"_index":3583,"title":{},"body":{"injectables/RedisCacheService.html":{},"index.html":{}}}],["matches",{"_index":2950,"title":{},"body":{"classes/LogService.html":{}}}],["matches.length",{"_index":2952,"title":{},"body":{"classes/LogService.html":{}}}],["matches[1",{"_index":2956,"title":{},"body":{"classes/LogService.html":{}}}],["matches[2].split(\"/\").slice",{"_index":2954,"title":{},"body":{"classes/LogService.html":{}}}],["matches[3",{"_index":2957,"title":{},"body":{"classes/LogService.html":{}}}],["matching",{"_index":116,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["max",{"_index":3282,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["max(1000",{"_index":3285,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["maxaperture",{"_index":575,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["maxdepth",{"_index":1129,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["maximum",{"_index":574,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["md",{"_index":2186,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio",{"_index":2242,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.album",{"_index":2294,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.artist",{"_index":2296,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.bitrate",{"_index":2251,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.codec",{"_index":2245,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.codecprofile",{"_index":2287,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.container",{"_index":2243,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.duration",{"_index":2247,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.genre",{"_index":2300,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.label",{"_index":2302,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.numberofchannels",{"_index":2249,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.samplerate",{"_index":2283,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.title",{"_index":2292,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.tool",{"_index":2289,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.audio.year",{"_index":2298,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif",{"_index":2384,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.aperture",{"_index":2420,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.brightness",{"_index":2422,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.colorspace",{"_index":2438,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.compositeimage",{"_index":2472,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.contrast",{"_index":2460,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.customrendered",{"_index":2450,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.digitalzoomratio",{"_index":2456,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exififdpointer",{"_index":2401,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exifversion",{"_index":2414,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exposurebias",{"_index":2424,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exposuremode",{"_index":2452,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exposureprogram",{"_index":2410,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.exposuretime",{"_index":2406,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.flash",{"_index":2432,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.flashpixversion",{"_index":2436,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.fnumber",{"_index":2408,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.focallength",{"_index":2434,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.gpsinfoifdpointer",{"_index":2404,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.interoperabilityifdpointer",{"_index":2444,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.interoperabilityindex",{"_index":2474,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.interoperabilityversion",{"_index":2476,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.isospeedratings",{"_index":2412,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.lensmake",{"_index":2468,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.lensmodel",{"_index":2470,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.make",{"_index":2385,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.maxaperture",{"_index":2426,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.meteringmode",{"_index":2430,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.model",{"_index":2387,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.offsettime",{"_index":2416,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.orientation",{"_index":2389,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.pixelxdimension",{"_index":2440,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.pixelydimension",{"_index":2442,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.resolutionunit",{"_index":2395,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.resolutionx",{"_index":2391,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.resolutiony",{"_index":2393,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.saturation",{"_index":2462,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.scenecapturetype",{"_index":2458,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.scenetype",{"_index":2448,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.sensingmethod",{"_index":2446,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.sharpness",{"_index":2464,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.shutterspeedvalue",{"_index":2418,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.software",{"_index":2397,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.subjectdistance",{"_index":2428,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.subjectdistancerange",{"_index":2466,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.whitebalance",{"_index":2454,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.exif.ycbcrpositioning",{"_index":2399,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.ext",{"_index":2219,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.gps",{"_index":2337,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.gps.altitude",{"_index":2338,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.gps.latitude",{"_index":2342,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.gps.longitude",{"_index":2340,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.hash",{"_index":2215,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc",{"_index":2345,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.connectionspace",{"_index":2354,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.devicemanufacturer",{"_index":2367,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.devicemodelnumber",{"_index":2370,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.icccopyright",{"_index":2381,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.iccdescription",{"_index":2379,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.iccprofiledate",{"_index":2357,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.iccsignature",{"_index":2362,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.primaryplatform",{"_index":2364,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.profileclassname",{"_index":2349,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.profileclassvalue",{"_index":2352,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.profilecreator",{"_index":2377,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.profileversion",{"_index":2346,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.renderingintentname",{"_index":2372,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.icc.renderingintentvalue",{"_index":2375,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image",{"_index":2308,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.bitdepth",{"_index":2324,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.bps",{"_index":2309,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.colorcomponents",{"_index":2317,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.colortype",{"_index":2327,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.compression",{"_index":2330,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.datetime",{"_index":2361,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.filter",{"_index":2332,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.height",{"_index":2312,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.interlace",{"_index":2334,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.subsampling",{"_index":2320,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.image.width",{"_index":2315,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.mime",{"_index":2217,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.mime.startswith(\"audio",{"_index":2223,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.mime.startswith(\"image",{"_index":2221,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.mime.startswith(\"video",{"_index":2225,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video",{"_index":2254,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.bitrate",{"_index":2263,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.codec",{"_index":2255,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.colorrange",{"_index":2271,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.colorspace",{"_index":2273,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.container",{"_index":2257,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.displayaspectratio",{"_index":2269,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.duration",{"_index":2265,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.framerate",{"_index":2275,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.height",{"_index":2261,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.rotate",{"_index":2277,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.sampleaspectratio",{"_index":2267,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["md.video.width",{"_index":2259,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["mean",{"_index":4154,"title":{},"body":{"license.html":{}}}],["means",{"_index":4167,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":4188,"title":{},"body":{"license.html":{}}}],["mechanism",{"_index":4074,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["mechanisms",{"_index":3791,"title":{},"body":{"modules/WarlockModule.html":{},"miscellaneous/typealiases.html":{}}}],["media",{"_index":383,"title":{"interfaces/Media.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["media.constants",{"_index":2976,"title":{},"body":{"controllers/MediaController.html":{}}}],["media.controller",{"_index":3077,"title":{},"body":{"modules/MediaModule.html":{}}}],["media.entity",{"_index":2806,"title":{},"body":{"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaFileEntity.html":{}}}],["media.entity.ts",{"_index":2871,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.entity.ts:34",{"_index":2874,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.entity.ts:38",{"_index":2873,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.entity.ts:41",{"_index":2875,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.entity.ts:44",{"_index":2876,"title":{},"body":{"entities/LocalizedMediaEntity.html":{}}}],["media.private.dir",{"_index":4625,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["media.properties",{"_index":4620,"title":{"additional-documentation/properties/media.properties.html":{}},"body":{"additional-documentation/properties/media.properties.html":{}}}],["media.public.dir",{"_index":4621,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["media.service",{"_index":3073,"title":{},"body":{"modules/MediaModule.html":{}}}],["media.types",{"_index":2975,"title":{},"body":{"controllers/MediaController.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{}}}],["media/entity/media.entity",{"_index":2067,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/UserEntity.html":{}}}],["media/media.module",{"_index":3977,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["media/media.types",{"_index":384,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicUserController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/TargetData.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["media_relations",{"_index":4448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media_type_relations",{"_index":4449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mediacontroller",{"_index":2965,"title":{"controllers/MediaController.html":{}},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{}}}],["mediadto",{"_index":1197,"title":{"classes/MediaDto.html":{}},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediaentity",{"_index":1384,"title":{"entities/MediaEntity.html":{}},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"modules/MediaModule.html":{},"entities/UserEntity.html":{}}}],["mediaext",{"_index":1186,"title":{"interfaces/MediaExt.html":{}},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediaextentity",{"_index":3019,"title":{"entities/MediaExtEntity.html":{}},"body":{"entities/MediaExtEntity.html":{},"entities/MediaTypeEntity.html":{}}}],["mediafile",{"_index":1178,"title":{"interfaces/MediaFile.html":{}},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediafiledto",{"_index":1198,"title":{"classes/MediaFileDto.html":{}},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediafileentity",{"_index":3004,"title":{"entities/MediaFileEntity.html":{}},"body":{"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"modules/MediaModule.html":{}}}],["mediaformat",{"_index":1189,"title":{"interfaces/MediaFormat.html":{}},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediaformatdto",{"_index":1196,"title":{"classes/MediaFormatDto.html":{}},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediaformatentity",{"_index":3037,"title":{"entities/MediaFormatEntity.html":{}},"body":{"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{}}}],["mediamanager",{"_index":1199,"title":{"classes/MediaManager.html":{}},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediamodule",{"_index":1211,"title":{"modules/MediaModule.html":{}},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["mediamodule.forroot",{"_index":3972,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["mediamoduleoptions",{"_index":1212,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"miscellaneous/typealiases.html":{}}}],["mediapath",{"_index":2985,"title":{},"body":{"controllers/MediaController.html":{}}}],["mediarow",{"_index":3905,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["mediaservice",{"_index":2978,"title":{},"body":{"controllers/MediaController.html":{},"modules/MediaModule.html":{}}}],["mediatype",{"_index":1173,"title":{"interfaces/MediaType.html":{}},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediatypedto",{"_index":1195,"title":{"classes/MediaTypeDto.html":{}},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["mediatypeentity",{"_index":3012,"title":{"entities/MediaTypeEntity.html":{}},"body":{"entities/MediaEntity.html":{},"modules/MediaModule.html":{},"entities/MediaTypeEntity.html":{}}}],["medium",{"_index":4279,"title":{},"body":{"license.html":{}}}],["meet",{"_index":4280,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":4334,"title":{},"body":{"license.html":{}}}],["merely",{"_index":4206,"title":{},"body":{"license.html":{}}}],["merged",{"_index":1571,"title":{},"body":{"injectables/ConfigService.html":{}}}],["mergedcontent",{"_index":1749,"title":{},"body":{"injectables/ConfigService.html":{}}}],["mergepropertiescontent",{"_index":1534,"title":{},"body":{"injectables/ConfigService.html":{}}}],["mergepropertiescontent(maincontent",{"_index":1564,"title":{},"body":{"injectables/ConfigService.html":{}}}],["merges",{"_index":1567,"title":{},"body":{"injectables/ConfigService.html":{}}}],["message",{"_index":181,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"classes/DbExceptionFilter.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/LogService.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"miscellaneous/variables.html":{}}}],["messagebus",{"_index":3097,"title":{"interfaces/MessageBus.html":{}},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["messages",{"_index":2845,"title":{},"body":{"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["messages_broker",{"_index":3141,"title":{},"body":{"modules/MessagesBrokerModule.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"miscellaneous/variables.html":{}}}],["messagesbroker",{"_index":3119,"title":{"interfaces/MessagesBroker.html":{}},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{}}}],["messagesbrokermodule",{"_index":3137,"title":{"modules/MessagesBrokerModule.html":{}},"body":{"modules/MessagesBrokerModule.html":{},"modules/ProcessModule.html":{},"modules.html":{},"overview.html":{}}}],["messagesbrokerservice",{"_index":3144,"title":{"injectables/MessagesBrokerService.html":{}},"body":{"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessRegisterService.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":635,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["metaaudio",{"_index":2597,"title":{},"body":{"injectables/FileService.html":{}}}],["metadata",{"_index":332,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["metadata.entity",{"_index":2135,"title":{},"body":{"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/MediaEntity.html":{}}}],["metadata.entity.ts",{"_index":675,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:10",{"_index":694,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:14",{"_index":686,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:18",{"_index":683,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:19",{"_index":2660,"title":{},"body":{"entities/GpsFileMetadataEntity.html":{}}}],["metadata.entity.ts:22",{"_index":699,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:25",{"_index":2171,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.entity.ts:26",{"_index":697,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:28",{"_index":2164,"title":{},"body":{"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{}}}],["metadata.entity.ts:30",{"_index":682,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:31",{"_index":2167,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.entity.ts:34",{"_index":685,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:37",{"_index":2661,"title":{},"body":{"entities/GpsFileMetadataEntity.html":{}}}],["metadata.entity.ts:38",{"_index":701,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:39",{"_index":3782,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:42",{"_index":2745,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:43",{"_index":3785,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:45",{"_index":2166,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.entity.ts:46",{"_index":2747,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:47",{"_index":691,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:50",{"_index":2763,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:51",{"_index":700,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:52",{"_index":2169,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.entity.ts:54",{"_index":2761,"title":{},"body":{"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{}}}],["metadata.entity.ts:55",{"_index":680,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:58",{"_index":2758,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["metadata.entity.ts:59",{"_index":679,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:62",{"_index":2750,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["metadata.entity.ts:63",{"_index":702,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["metadata.entity.ts:66",{"_index":2162,"title":{},"body":{"entities/FileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{}}}],["metadata.entity.ts:67",{"_index":692,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["metadata.entity.ts:71",{"_index":695,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["metadata.entity.ts:73",{"_index":2173,"title":{},"body":{"entities/FileMetadataEntity.html":{}}}],["metadata.service",{"_index":2481,"title":{},"body":{"modules/FileModule.html":{}}}],["metadata.service.ts",{"_index":2177,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadata.service.ts:101",{"_index":2190,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadata.service.ts:139",{"_index":2185,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadata.service.ts:166",{"_index":2188,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadata.service.ts:72",{"_index":2192,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["metadataservice",{"_index":2497,"title":{},"body":{"injectables/FileService.html":{}}}],["metagps",{"_index":2593,"title":{},"body":{"injectables/FileService.html":{}}}],["metaimage",{"_index":2595,"title":{},"body":{"injectables/FileService.html":{}}}],["metavideo",{"_index":2599,"title":{},"body":{"injectables/FileService.html":{}}}],["meteringmode",{"_index":581,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["method",{"_index":152,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/LogService.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/VideoFileMetadata.html":{}}}],["methodname",{"_index":2909,"title":{},"body":{"classes/LogService.html":{}}}],["methods",{"_index":23,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"controllers/FileController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"controllers/MediaController.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["microservice",{"_index":943,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["microservices",{"_index":3117,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/Roles.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["middle",{"_index":2738,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["middleware",{"_index":3941,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["middlewareconsumer",{"_index":3965,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["millimeters",{"_index":578,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["mime",{"_index":406,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["min",{"_index":3283,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["min(1",{"_index":3284,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["min(1)@max(1000)@type(undefined",{"_index":3294,"title":{},"body":{"classes/PageableParams.html":{}}}],["min(1)@type(undefined",{"_index":3297,"title":{},"body":{"classes/PageableParams.html":{}}}],["minutes",{"_index":4587,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["miscellaneous",{"_index":4009,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":556,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["model",{"_index":466,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["modern",{"_index":4025,"title":{},"body":{"index.html":{},"properties.html":{}}}],["modifications",{"_index":4185,"title":{},"body":{"license.html":{}}}],["modified",{"_index":461,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["modifies",{"_index":3949,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["modify",{"_index":4303,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":4308,"title":{},"body":{"license.html":{}}}],["module",{"_index":832,"title":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"modules/FileModule.html":{},"classes/JwtDto.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"classes/LoginPayload.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"interfaces/TargetData.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module.interface",{"_index":3897,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["modules",{"_index":834,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modules/cache/cache.types",{"_index":82,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["modules/log/log.constants",{"_index":829,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/LiteAuthGuard.html":{}}}],["mono",{"_index":375,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["montserrat",{"_index":4611,"title":{},"body":{"additional-documentation/properties/captcha.properties.html":{}}}],["more",{"_index":4089,"title":{},"body":{"index.html":{},"license.html":{}}}],["mozjpeg",{"_index":4000,"title":{},"body":{"dependencies.html":{}}}],["ms",{"_index":3211,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["ms.exception",{"_index":952,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["ms.exception.ts",{"_index":942,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["ms.exception.ts:23",{"_index":950,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["ms_client",{"_index":3245,"title":{},"body":{"modules/MsClientModule.html":{},"miscellaneous/variables.html":{}}}],["ms_exception_id",{"_index":3213,"title":{},"body":{"classes/MsClient.html":{},"classes/MsException.html":{},"classes/Roles.html":{},"miscellaneous/variables.html":{}}}],["msclient",{"_index":3190,"title":{"classes/MsClient.html":{}},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["msclient(logger",{"_index":3253,"title":{},"body":{"modules/MsClientModule.html":{}}}],["msclientmodule",{"_index":3240,"title":{"modules/MsClientModule.html":{}},"body":{"modules/MsClientModule.html":{},"modules.html":{},"overview.html":{}}}],["msclientoptions",{"_index":3108,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"miscellaneous/typealiases.html":{}}}],["msexception",{"_index":948,"title":{"classes/MsException.html":{}},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"classes/Roles.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":241,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.endswith",{"_index":244,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.length",{"_index":246,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.replace(/\\[/g",{"_index":249,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.replace(/]/g",{"_index":250,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.startswith",{"_index":243,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg.substring(1",{"_index":245,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["msg_bus",{"_index":3246,"title":{},"body":{"modules/MsClientModule.html":{},"miscellaneous/variables.html":{}}}],["multiple",{"_index":626,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{}}}],["music",{"_index":367,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"dependencies.html":{}}}],["musicmd",{"_index":2279,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.album",{"_index":2295,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.artists?.join",{"_index":2297,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.genre?.join",{"_index":2301,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.label?.join",{"_index":2303,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.title",{"_index":2293,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.common.year",{"_index":2299,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.bitrate",{"_index":2286,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.codec",{"_index":2282,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.codecprofile",{"_index":2288,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.container",{"_index":2281,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.duration",{"_index":2291,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.numberofchannels",{"_index":2285,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.samplerate",{"_index":2284,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["musicmd.format.tool",{"_index":2290,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["myentity",{"_index":2838,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["mysql",{"_index":4136,"title":{},"body":{"index.html":{}}}],["n",{"_index":254,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{}}}],["name",{"_index":45,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"classes/LogService.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["name.lang",{"_index":4488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["named",{"_index":1058,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["namedcolumn",{"_index":1078,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["names",{"_index":1776,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"index.html":{},"license.html":{}}}],["namespace",{"_index":1549,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["namespacename",{"_index":1551,"title":{},"body":{"injectables/ConfigService.html":{}}}],["nature",{"_index":407,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["navigate",{"_index":4093,"title":{},"body":{"index.html":{}}}],["necessarily",{"_index":4260,"title":{},"body":{"license.html":{}}}],["necessary",{"_index":4141,"title":{},"body":{"index.html":{}}}],["need",{"_index":1463,"title":{},"body":{"injectables/CategoryService.html":{}}}],["needed",{"_index":157,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["needs",{"_index":258,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["negligence",{"_index":4347,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":4350,"title":{},"body":{"license.html":{}}}],["neighboring",{"_index":4499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nest",{"_index":2893,"title":{},"body":{"classes/LogService.html":{}}}],["nested",{"_index":1119,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["nestfactory.createapplicationcontext(configmodule",{"_index":4538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestinterceptor",{"_index":1860,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["nestjs",{"_index":3467,"title":{},"body":{"modules/ProcessModule.html":{}}}],["nestjs/axios",{"_index":2650,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":76,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"classes/ExchangeTokenPayload.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"controllers/FileController.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces/modules/dynamic",{"_index":3896,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["nestjs/common/interfaces/modules/forward",{"_index":3899,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["nestjs/common/interfaces/type.interface",{"_index":296,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{}}}],["nestjs/core",{"_index":3635,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":846,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":3207,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":848,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2083,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["nestjs/schedule",{"_index":3475,"title":{},"body":{"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":1267,"title":{},"body":{"injectables/BasicUserService.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"modules/MediaModule.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"modules/UserModule.html":{}}}],["nestmiddleware",{"_index":3953,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["nestmodule",{"_index":3973,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["new",{"_index":98,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"classes/ExchangeTokenPayload.html":{},"controllers/ExplorerController.html":{},"controllers/FileController.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"controllers/MediaController.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/NotEmptyPipe.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["newrelativepath",{"_index":1836,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["newuser",{"_index":1275,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["next",{"_index":1857,"title":{},"body":{"injectables/DtoInterceptor.html":{},"classes/MsClient.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"index.html":{}}}],["nextfunction",{"_index":3947,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["node",{"_index":3792,"title":{},"body":{"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":4101,"title":{},"body":{"index.html":{}}}],["node:events",{"_index":1784,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["node:fs",{"_index":1782,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["node_modules",{"_index":1712,"title":{},"body":{"injectables/ConfigService.html":{}}}],["non",{"_index":4240,"title":{},"body":{"license.html":{}}}],["normalized",{"_index":2521,"title":{},"body":{"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{}}}],["normalizes",{"_index":2682,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["normally",{"_index":4300,"title":{},"body":{"license.html":{}}}],["note",{"_index":4143,"title":{},"body":{"index.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["notemptypipe",{"_index":2084,"title":{"injectables/NotEmptyPipe.html":{}},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"injectables/NotEmptyPipe.html":{},"controllers/XmlDataBridgeController.html":{}}}],["notemptypipe(\"file",{"_index":2092,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["notfoundexception",{"_index":1264,"title":{},"body":{"injectables/BasicUserService.html":{},"controllers/ExplorerController.html":{},"injectables/FileService.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{}}}],["notfoundexception(`file",{"_index":2568,"title":{},"body":{"injectables/FileService.html":{}}}],["notfoundexception(`user",{"_index":1278,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["notfoundmsexception",{"_index":3272,"title":{"classes/NotFoundMsException.html":{}},"body":{"classes/NotFoundMsException.html":{}}}],["nothing",{"_index":4316,"title":{},"body":{"license.html":{}}}],["notice",{"_index":4193,"title":{},"body":{"license.html":{}}}],["notices",{"_index":4286,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":4314,"title":{},"body":{"license.html":{}}}],["now",{"_index":205,"title":{},"body":{"classes/AbstractProcess.html":{},"index.html":{}}}],["npm",{"_index":4124,"title":{},"body":{"index.html":{}}}],["null",{"_index":61,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["nullable",{"_index":678,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["number",{"_index":314,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"classes/CacheService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"classes/MsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{}}}],["number\"]?.description",{"_index":2371,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["number_of_channels",{"_index":696,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["numberofchannels",{"_index":342,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["numbers",{"_index":309,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["numberutils",{"_index":2701,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["numberutils.generaterandomint",{"_index":2706,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["numeric",{"_index":1182,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"injectables/RedisCacheService.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["oauth",{"_index":4073,"title":{},"body":{"index.html":{}}}],["obj",{"_index":2196,"title":{},"body":{"injectables/FileMetadataService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["obj.indexof",{"_index":2229,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["obj.map(this.trimproperties",{"_index":2231,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["obj.rows.push(rowobj",{"_index":3857,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["obj.trim",{"_index":2228,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["obj1",{"_index":3875,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["obj2",{"_index":3877,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["obj2[key",{"_index":3887,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["object",{"_index":58,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"dependencies.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":2012,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["object.keys(obj1",{"_index":3880,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["object.keys(obj2",{"_index":3882,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["object.keys(value).length",{"_index":3270,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["object.values(entity).filter((value",{"_index":2856,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["object_enabled",{"_index":1903,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["object_priority",{"_index":1905,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["object_renderer_params",{"_index":1910,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["object_visibility",{"_index":1912,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["objectenabled",{"_index":1064,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["objectliteral",{"_index":1033,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{}}}],["objectpriority",{"_index":1062,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["objectrenderer",{"_index":1069,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["objectrendererparams",{"_index":1894,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["objects",{"_index":1139,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/LocaleService.html":{},"entities/LocalizedMediaEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["objectutils",{"_index":190,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/CategoryService.html":{},"classes/LogService.html":{},"classes/MsClient.html":{}}}],["objectutils.inspect",{"_index":196,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/LogService.html":{},"classes/MsClient.html":{}}}],["objectutils.sort(cat.children",{"_index":1475,"title":{},"body":{"injectables/CategoryService.html":{}}}],["objectvisibility",{"_index":1066,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["obligations",{"_index":4374,"title":{},"body":{"license.html":{}}}],["observable",{"_index":3113,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["obtain",{"_index":741,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["occurs",{"_index":1094,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{}}}],["offer",{"_index":4254,"title":{},"body":{"license.html":{}}}],["offset",{"_index":565,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["offsettime",{"_index":569,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["onapplicationbootstrap",{"_index":3470,"title":{},"body":{"modules/ProcessModule.html":{}}}],["oncrash",{"_index":130,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["oncrash(error",{"_index":148,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["ondelete",{"_index":2117,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["one",{"_index":4103,"title":{},"body":{"index.html":{},"license.html":{}}}],["ones",{"_index":4500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onetomany",{"_index":2066,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{}}}],["onetomany(undefined",{"_index":2048,"title":{},"body":{"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{}}}],["onetoone",{"_index":2133,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["onetoone(undefined",{"_index":2116,"title":{},"body":{"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/MediaEntity.html":{}}}],["onfinish",{"_index":131,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["onmoduleinit",{"_index":2003,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["onstop",{"_index":132,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["openmode",{"_index":1781,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["operating",{"_index":500,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["operation",{"_index":582,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/RedisCacheService.html":{},"interfaces/VideoFileMetadata.html":{}}}],["operations",{"_index":1316,"title":{},"body":{"classes/CacheService.html":{},"injectables/LocaleService.html":{},"index.html":{}}}],["operator",{"_index":3832,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["optimized",{"_index":502,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["optional",{"_index":47,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"controllers/FileController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"controllers/MediaController.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["options",{"_index":667,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"modules/AuthModule.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/ProcessManagerService.html":{},"modules/RedisModule.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["options.controller",{"_index":861,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/UserModule.html":{}}}],["options.exportservice",{"_index":3982,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["options.filemanager",{"_index":2486,"title":{},"body":{"modules/FileModule.html":{}}}],["options.filemd",{"_index":2487,"title":{},"body":{"modules/FileModule.html":{}}}],["options.imports",{"_index":3980,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["options.importservice",{"_index":3981,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["options.service",{"_index":877,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/MediaModule.html":{},"modules/UserModule.html":{}}}],["opts",{"_index":1820,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"modules/ExplorerModule.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["opts).subscribe",{"_index":3219,"title":{},"body":{"classes/MsClient.html":{}}}],["opts.controller",{"_index":2013,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["opts.service",{"_index":2015,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["order",{"_index":1621,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{}}}],["orientation",{"_index":524,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["origin",{"_index":4329,"title":{},"body":{"license.html":{}}}],["original",{"_index":1175,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":60,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"license.html":{}}}],["out",{"_index":1289,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["outputpath",{"_index":2549,"title":{},"body":{"injectables/FileService.html":{}}}],["outputpath}/${filename",{"_index":2560,"title":{},"body":{"injectables/FileService.html":{}}}],["outstanding",{"_index":4176,"title":{},"body":{"license.html":{}}}],["overall",{"_index":1185,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["overridden",{"_index":155,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["override",{"_index":4113,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["overrides",{"_index":4083,"title":{},"body":{"index.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["overview",{"_index":4406,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":4158,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":519,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["p",{"_index":2934,"title":{},"body":{"classes/LogService.html":{}}}],["p@ssw0rd",{"_index":974,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["package",{"_index":3984,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packaged",{"_index":641,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["page",{"_index":1555,"title":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"license.html":{}}}],["pageable",{"_index":1113,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["pageabledata",{"_index":1041,"title":{"classes/PageableData.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/TargetData.html":{}}}],["pageabledata(propertieswithvalues",{"_index":1646,"title":{},"body":{"injectables/ConfigService.html":{}}}],["pageableparams",{"_index":1020,"title":{"classes/PageableParams.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/TargetData.html":{}}}],["pages",{"_index":1877,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{}}}],["pagesize",{"_index":3278,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["paginated",{"_index":1110,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/TargetData.html":{},"index.html":{}}}],["pagination",{"_index":1557,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["pair",{"_index":979,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["panel",{"_index":4028,"title":{},"body":{"index.html":{}}}],["param",{"_index":88,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"controllers/FileController.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"controllers/MediaController.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["param(\"id",{"_index":2099,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/ProfileController.html":{}}}],["param(\"target",{"_index":1983,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["param(\"type",{"_index":2980,"title":{},"body":{"controllers/MediaController.html":{}}}],["parameter",{"_index":636,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["parameters",{"_index":43,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"controllers/FileController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/InvalidTokenMsException.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"controllers/MediaController.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{}}}],["params",{"_index":1019,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"entities/CategoryEntity.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{}}}],["parent",{"_index":1377,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["parse",{"_index":1575,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["parsebuffer",{"_index":2199,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["parsebuffer(buf",{"_index":2280,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["parsed",{"_index":1576,"title":{},"body":{"injectables/ConfigService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["parsefloat(audiomd.duration",{"_index":2248,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["parsefloat(videomd.duration",{"_index":2266,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["parseint(process.env.redis_db",{"_index":1310,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["parseint(process.env.redis_port",{"_index":1308,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["parseint(process.env.transport_port",{"_index":3252,"title":{},"body":{"modules/MsClientModule.html":{}}}],["parseint(process.env.transport_timeout",{"_index":3227,"title":{},"body":{"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["parseint(process.env.transport_type",{"_index":3250,"title":{},"body":{"modules/MsClientModule.html":{}}}],["parser",{"_index":3821,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["parses",{"_index":1574,"title":{},"body":{"injectables/ConfigService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["parsestring",{"_index":3828,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["parsevalue",{"_index":1535,"title":{},"body":{"injectables/ConfigService.html":{}}}],["parsevalue(value",{"_index":1572,"title":{},"body":{"injectables/ConfigService.html":{}}}],["parsexmlbody(body",{"_index":3839,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["parsexmlbody(result",{"_index":3861,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["parsexmlfile(xmldata",{"_index":3859,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["parsexmlfromrequest",{"_index":3943,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["parsexmlfromrequest(req",{"_index":3944,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["parsing",{"_index":3942,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["part",{"_index":4292,"title":{},"body":{"license.html":{}}}],["part.touppercase",{"_index":1689,"title":{},"body":{"injectables/ConfigService.html":{}}}],["partial",{"_index":897,"title":{},"body":{"classes/AuthService.html":{},"modules/ExplorerModule.html":{},"miscellaneous/variables.html":{}}}],["particular",{"_index":4336,"title":{},"body":{"license.html":{}}}],["parts",{"_index":111,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["parts.length",{"_index":113,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["parts[1",{"_index":114,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["party",{"_index":4299,"title":{},"body":{"license.html":{}}}],["passportmodule",{"_index":847,"title":{},"body":{"modules/AuthModule.html":{}}}],["passthrough",{"_index":788,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":276,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicUserController.html":{},"modules/CacheModule.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"modules/WarlockModule.html":{},"index.html":{}}}],["patch",{"_index":2511,"title":{},"body":{"injectables/FileService.html":{},"controllers/ProfileController.html":{}}}],["patch(\"/:id",{"_index":3567,"title":{},"body":{"controllers/ProfileController.html":{}}}],["patches",{"_index":2915,"title":{},"body":{"classes/LogService.html":{}}}],["patchfromctx",{"_index":2896,"title":{},"body":{"classes/LogService.html":{}}}],["patchfromctx(ctx",{"_index":2913,"title":{},"body":{"classes/LogService.html":{}}}],["patent",{"_index":4252,"title":{},"body":{"license.html":{}}}],["path",{"_index":394,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/LogService.html":{},"controllers/MediaController.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{}}}],["path.basename",{"_index":1673,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.basename(filepath",{"_index":1725,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.dirname(filepath",{"_index":1728,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.extname(file.name",{"_index":1670,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.join",{"_index":1662,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{}}}],["path.join(currentpath",{"_index":1833,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["path.join(directory",{"_index":1659,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.join(dirpath",{"_index":1730,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.join(gensrcpath",{"_index":1735,"title":{},"body":{"injectables/ConfigService.html":{}}}],["path.join(relativepath",{"_index":1837,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["path.normalize(dir",{"_index":2628,"title":{},"body":{"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{}}}],["pattern",{"_index":1333,"title":{},"body":{"classes/CacheService.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":722,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"controllers/CaptchaController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload.captchaid",{"_index":793,"title":{},"body":{"controllers/AuthController.html":{}}}],["payload.captchapayload",{"_index":794,"title":{},"body":{"controllers/AuthController.html":{}}}],["payload.id",{"_index":3739,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload.ipaddress",{"_index":798,"title":{},"body":{"controllers/AuthController.html":{}}}],["payload.login",{"_index":3741,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload.password",{"_index":3740,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload.roles",{"_index":3742,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["payload?.token",{"_index":816,"title":{},"body":{"controllers/AuthController.html":{}}}],["peer",{"_index":3985,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":353,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/VideoFileMetadata.html":{}}}],["percent",{"_index":4175,"title":{},"body":{"license.html":{}}}],["perform",{"_index":4249,"title":{},"body":{"license.html":{}}}],["performed",{"_index":350,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["permission",{"_index":4323,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":759,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["perpetual",{"_index":4238,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":4291,"title":{},"body":{"license.html":{}}}],["phone",{"_index":1229,"title":{},"body":{"interfaces/BasicUserController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["photo",{"_index":527,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["pinpoint",{"_index":4042,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":3262,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["pipe(map((data",{"_index":1865,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["pipetransform",{"_index":3269,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["pixel",{"_index":450,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["pixels",{"_index":453,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["pixelxdimension",{"_index":593,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["pixelydimension",{"_index":595,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["placeholder",{"_index":909,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["places",{"_index":4296,"title":{},"body":{"license.html":{}}}],["placing",{"_index":535,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["plain",{"_index":1848,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["plaintoinstance",{"_index":1863,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["plaintoinstance(this.serializer",{"_index":1866,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["platform",{"_index":499,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["platform\"]?.description",{"_index":2366,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["platform's",{"_index":4027,"title":{},"body":{"index.html":{}}}],["platform/client",{"_index":4133,"title":{},"body":{"index.html":{}}}],["platform/core/common/user/user.module",{"_index":2484,"title":{},"body":{"modules/FileModule.html":{}}}],["playback",{"_index":647,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["please",{"_index":3697,"title":{},"body":{"classes/TooManyRequestsMsException.html":{},"index.html":{}}}],["pminitstatus",{"_index":3367,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["pmservice",{"_index":127,"title":{},"body":{"classes/AbstractProcess.html":{},"controllers/ProcessController.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["pngquant",{"_index":4002,"title":{},"body":{"dependencies.html":{}}}],["pointer",{"_index":540,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["pointer\"]?.description",{"_index":2403,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["port",{"_index":1307,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["possibility",{"_index":1179,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"license.html":{}}}],["possible",{"_index":4014,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["post",{"_index":762,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CaptchaController.html":{},"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/ProfileController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["post(\"/entity/:target",{"_index":1991,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["post(\"/exchange",{"_index":815,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"/export",{"_index":3934,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["post(\"/import",{"_index":3929,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["post(\"/login",{"_index":787,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"/logout",{"_index":810,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"/recreate/:id",{"_index":2992,"title":{},"body":{"controllers/MediaController.html":{}}}],["post(\"/target",{"_index":1979,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["post(\"/upload",{"_index":2089,"title":{},"body":{"controllers/FileController.html":{}}}],["post(\"/upload/:type",{"_index":2979,"title":{},"body":{"controllers/MediaController.html":{}}}],["post(\"/validate",{"_index":1348,"title":{},"body":{"controllers/CaptchaController.html":{}}}],["post('/entity/:target",{"_index":1965,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["post('/export')@forroles(roles.admin",{"_index":3919,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["post('/import",{"_index":3925,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["post('/import')@forroles(roles.root",{"_index":3922,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["post('/recreate/:id",{"_index":2972,"title":{},"body":{"controllers/MediaController.html":{}}}],["post('/target')@forroles(roles.admin",{"_index":1967,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["post('/upload')@useinterceptors(undefined",{"_index":2072,"title":{},"body":{"controllers/FileController.html":{}}}],["post('/upload/:type?')@useinterceptors(undefined",{"_index":2967,"title":{},"body":{"controllers/MediaController.html":{}}}],["post('/validate",{"_index":1343,"title":{},"body":{"controllers/CaptchaController.html":{}}}],["postgres",{"_index":4135,"title":{},"body":{"index.html":{}}}],["power",{"_index":4168,"title":{},"body":{"license.html":{}}}],["powerful",{"_index":4060,"title":{},"body":{"index.html":{}}}],["precision",{"_index":688,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["preferred",{"_index":4183,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":714,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicExplorerController.html":{},"controllers/CaptchaController.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"interfaces/TargetData.html":{},"controllers/XmlDataBridgeController.html":{},"miscellaneous/variables.html":{}}}],["preinstallation",{"_index":4119,"title":{},"body":{"index.html":{}}}],["prepare",{"_index":4247,"title":{},"body":{"license.html":{}}}],["prepared",{"_index":2920,"title":{},"body":{"classes/LogService.html":{}}}],["preparemessage",{"_index":2897,"title":{},"body":{"classes/LogService.html":{}}}],["preparemessage(message",{"_index":2917,"title":{},"body":{"classes/LogService.html":{}}}],["prepares",{"_index":2919,"title":{},"body":{"classes/LogService.html":{}}}],["presence",{"_index":39,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["preservechildrenorder",{"_index":3837,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["preview",{"_index":401,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["previewfiles",{"_index":2618,"title":{},"body":{"injectables/FileService.html":{}}}],["previewfilesformat",{"_index":2620,"title":{},"body":{"injectables/FileService.html":{}}}],["previewlang",{"_index":2616,"title":{},"body":{"injectables/FileService.html":{}}}],["previewname",{"_index":2614,"title":{},"body":{"injectables/FileService.html":{}}}],["previewtype",{"_index":2622,"title":{},"body":{"injectables/FileService.html":{}}}],["previewtypeext",{"_index":2624,"title":{},"body":{"injectables/FileService.html":{}}}],["primary",{"_index":484,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{}}}],["primary_platform",{"_index":2754,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["primarycolumn",{"_index":1077,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/LanguageEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserRoleEntity.html":{}}}],["primarycolumn(\"varchar",{"_index":1891,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/LanguageEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["primarycolumn('varchar",{"_index":1878,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/ProcessUnitEntity.html":{}}}],["primarygeneratedcolumn",{"_index":704,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/UserEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["primarygeneratedcolumn({zerofill",{"_index":693,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["primaryplatform",{"_index":503,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["printed",{"_index":4399,"title":{},"body":{"license.html":{}}}],["priority",{"_index":1072,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"entities/CategoryEntity.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["private",{"_index":25,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"controllers/AuthController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"controllers/ExplorerController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"index.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["private_dir",{"_index":2528,"title":{},"body":{"injectables/FileService.html":{}}}],["privatemedia",{"_index":1202,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["proceed",{"_index":37,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"index.html":{}}}],["process",{"_index":122,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"modules/AuthModule.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["process.command",{"_index":3419,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["process.constants",{"_index":187,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["process.controller",{"_index":3479,"title":{},"body":{"modules/ProcessModule.html":{}}}],["process.cwd",{"_index":1655,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["process.cwd()}/${process.env.config_src_dir",{"_index":4542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.redis_host",{"_index":1306,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["process.env.redis_password",{"_index":1313,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["process.env.redis_user",{"_index":1312,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["process.env.transport_host",{"_index":3251,"title":{},"body":{"modules/MsClientModule.html":{}}}],["process.exit(0",{"_index":4545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.getprocessinstance",{"_index":3505,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["process.hasprocessinstance",{"_index":3421,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["process.log.entity",{"_index":3542,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["process.loglevel",{"_index":198,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.pid",{"_index":252,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.registerprocess",{"_index":193,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.status",{"_index":194,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["process.status.crashed",{"_index":3546,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["process.status.execute",{"_index":3545,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["process.status.ready",{"_index":3544,"title":{},"body":{"entities/ProcessUnitEntity.html":{}}}],["process.ts",{"_index":120,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:140",{"_index":160,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:148",{"_index":162,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:157",{"_index":150,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:165",{"_index":145,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:173",{"_index":165,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:31",{"_index":139,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:32",{"_index":143,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:33",{"_index":141,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:35",{"_index":138,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:44",{"_index":168,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:80",{"_index":171,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.ts:94",{"_index":176,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["process.types",{"_index":3363,"title":{},"body":{"entities/ProcessLogEntity.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{}}}],["process.unit.entity",{"_index":3362,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["process:register",{"_index":4016,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["process:start",{"_index":4018,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["process:stop",{"_index":4019,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["process:unregister",{"_index":4017,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["processandvalidatepropertiescontent",{"_index":1536,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processandvalidatepropertiescontent(filepath",{"_index":1577,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processcode",{"_index":3386,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processcontroller",{"_index":3300,"title":{"controllers/ProcessController.html":{}},"body":{"controllers/ProcessController.html":{},"modules/ProcessModule.html":{}}}],["processdata",{"_index":3338,"title":{},"body":{"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["processdata.code",{"_index":3342,"title":{},"body":{"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["processdata.crontab?.length",{"_index":3432,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["processdata.enabled",{"_index":3445,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processdata.logs",{"_index":3340,"title":{},"body":{"controllers/ProcessController.html":{}}}],["processdata.status",{"_index":3448,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processed",{"_index":352,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["processeddata",{"_index":1547,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processeddata[variablename",{"_index":1698,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processedvalue",{"_index":1703,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processedvalue};\\n",{"_index":1709,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processes",{"_index":1580,"title":{},"body":{"injectables/ConfigService.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["processinstance",{"_index":3514,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["processinstance.start",{"_index":3518,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["processinstance.stop",{"_index":3519,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["processlist",{"_index":3430,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processlog",{"_index":3347,"title":{"interfaces/ProcessLog.html":{}},"body":{"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"interfaces/ProcessUnit.html":{}}}],["processlogentity",{"_index":140,"title":{"entities/ProcessLogEntity.html":{}},"body":{"classes/AbstractProcess.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["processlogrep",{"_index":3381,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processmanagerservice",{"_index":142,"title":{"injectables/ProcessManagerService.html":{}},"body":{"classes/AbstractProcess.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{},"overview.html":{}}}],["processmanagerservice.pminitstatus",{"_index":3426,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["processmodule",{"_index":3457,"title":{"modules/ProcessModule.html":{}},"body":{"modules/ProcessModule.html":{},"modules.html":{},"overview.html":{}}}],["processregisterservice",{"_index":3463,"title":{"injectables/ProcessRegisterService.html":{}},"body":{"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"overview.html":{}}}],["processunit",{"_index":3350,"title":{"interfaces/ProcessUnit.html":{}},"body":{"interfaces/ProcessLog.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{}}}],["processunitentity",{"_index":3355,"title":{"entities/ProcessUnitEntity.html":{}},"body":{"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{}}}],["processunitrep",{"_index":3380,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["product",{"_index":4326,"title":{},"body":{"license.html":{}}}],["profile",{"_index":358,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicUserController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"controllers/ProfileController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["profile.controller",{"_index":3746,"title":{},"body":{"modules/UserModule.html":{}}}],["profile_class_name",{"_index":2755,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["profile_class_value",{"_index":2756,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["profile_creator",{"_index":2757,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["profile_version",{"_index":2759,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["profileclassname",{"_index":488,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["profileclassvalue",{"_index":486,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["profilecontroller",{"_index":3547,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/UserModule.html":{}}}],["profilecreator",{"_index":515,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["profileversion",{"_index":483,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["progressive",{"_index":477,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["project",{"_index":1606,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["prominent",{"_index":4285,"title":{},"body":{"license.html":{}}}],["promise",{"_index":144,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"classes/MsClient.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["promise((resolve",{"_index":3215,"title":{},"body":{"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["promise.all",{"_index":1642,"title":{},"body":{"injectables/ConfigService.html":{}}}],["promise.all(filepromises",{"_index":1843,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["properties",{"_index":16,"title":{"properties.html":{},"additional-documentation/properties.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"injectables/BasicUserService.html":{},"classes/CaptchaRequest.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"injectables/MessagesBrokerService.html":{},"classes/PageableParams.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["properties_file_ext_pattern",{"_index":1601,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["properties_file_ext_pattern).slice(1",{"_index":1738,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertiesfiles",{"_index":1527,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertieswithvalues",{"_index":1641,"title":{},"body":{"injectables/ConfigService.html":{}}}],["property",{"_index":986,"title":{},"body":{"interfaces/BasicAuthController.html":{},"interfaces/BasicExplorerController.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["propertykey",{"_index":1696,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertykey.startswith(\"kp",{"_index":1699,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertykey.startswith(\"local",{"_index":1700,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertykeys",{"_index":1622,"title":{},"body":{"injectables/ConfigService.html":{}}}],["propertykeys.sort((a",{"_index":1626,"title":{},"body":{"injectables/ConfigService.html":{}}}],["protected",{"_index":17,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"injectables/FileService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleSubscriber.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{}}}],["protecting",{"_index":4594,"title":{},"body":{"additional-documentation/properties/bruteforce.properties.html":{}}}],["protection",{"_index":921,"title":{},"body":{"classes/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["provide",{"_index":875,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{}}}],["provided",{"_index":889,"title":{},"body":{"classes/AuthService.html":{},"injectables/ConfigService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"license.html":{}}}],["providers",{"_index":874,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules/WarlockModule.html":{},"modules/XmlDataBridgeModule.html":{},"overview.html":{}}}],["provides",{"_index":1247,"title":{},"body":{"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"injectables/ConfigService.html":{},"modules/LocaleModule.html":{},"modules/LogModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"index.html":{},"license.html":{}}}],["providing",{"_index":836,"title":{},"body":{"modules/AuthModule.html":{},"classes/LogService.html":{},"index.html":{}}}],["proxy",{"_index":3194,"title":{},"body":{"classes/MsClient.html":{}}}],["pubclient",{"_index":3152,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["public",{"_index":397,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"interfaces/XdbRequest.html":{},"index.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["public/private",{"_index":2505,"title":{},"body":{"injectables/FileService.html":{}}}],["public_dir",{"_index":2530,"title":{},"body":{"injectables/FileService.html":{}}}],["publicly",{"_index":4248,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":485,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["purposes",{"_index":4166,"title":{},"body":{"license.html":{}}}],["push",{"_index":3904,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["pwd",{"_index":3732,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["qb",{"_index":2564,"title":{},"body":{"injectables/FileService.html":{}}}],["qb.andwhere(`file.public",{"_index":2566,"title":{},"body":{"injectables/FileService.html":{}}}],["qb.getone",{"_index":2567,"title":{},"body":{"injectables/FileService.html":{}}}],["quality",{"_index":1184,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":1490,"title":{},"body":{"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"controllers/MediaController.html":{},"interfaces/XdbRequest.html":{}}}],["query(\"format",{"_index":2982,"title":{},"body":{"controllers/MediaController.html":{}}}],["query(\"id",{"_index":1987,"title":{},"body":{"controllers/ExplorerController.html":{},"controllers/MediaController.html":{}}}],["query(\"public",{"_index":2093,"title":{},"body":{"controllers/FileController.html":{}}}],["query(\"type",{"_index":1984,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["query(\"webp",{"_index":2983,"title":{},"body":{"controllers/MediaController.html":{}}}],["queryfailederror",{"_index":1764,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["r._",{"_index":3856,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["radius",{"_index":4139,"title":{},"body":{"index.html":{}}}],["random",{"_index":2675,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["range",{"_index":620,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["rapid",{"_index":4023,"title":{},"body":{"index.html":{},"properties.html":{}}}],["rate",{"_index":378,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["ratio",{"_index":613,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["read",{"_index":1819,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["read/write",{"_index":1945,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["readable",{"_index":4294,"title":{},"body":{"license.html":{}}}],["readdir",{"_index":1827,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["readdir(dirpath",{"_index":1844,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["readdir(filepath",{"_index":1840,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["readdirectoryrecursively",{"_index":1826,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["readdirectoryrecursively(tmpdir",{"_index":3683,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["readfile",{"_index":1822,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["reading",{"_index":4494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["readonly",{"_index":18,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"controllers/CaptchaController.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"controllers/MediaController.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/UserSubscriber.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["readoperatorre",{"_index":3833,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["readrequest",{"_index":1083,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["reads",{"_index":1522,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{}}}],["ready",{"_index":3403,"title":{},"body":{"injectables/ProcessManagerService.html":{},"miscellaneous/enumerations.html":{}}}],["real",{"_index":4080,"title":{},"body":{"index.html":{}}}],["reason",{"_index":4386,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":4327,"title":{},"body":{"license.html":{}}}],["recaptcha",{"_index":2639,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"index.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["recaptchas",{"_index":2642,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["received",{"_index":4231,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":4283,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":4397,"title":{},"body":{"license.html":{}}}],["recommendation",{"_index":4134,"title":{},"body":{"index.html":{}}}],["recommendations",{"_index":4120,"title":{},"body":{"index.html":{}}}],["record",{"_index":2233,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["recorded",{"_index":440,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["recording",{"_index":445,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{}}}],["records",{"_index":4044,"title":{},"body":{"index.html":{}}}],["recreate",{"_index":3060,"title":{},"body":{"classes/MediaManager.html":{}}}],["recreate(id",{"_index":1206,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["recreatemedia",{"_index":1155,"title":{},"body":{"interfaces/BasicMediaController.html":{},"controllers/MediaController.html":{}}}],["recreatemedia(@param(\"id",{"_index":2993,"title":{},"body":{"controllers/MediaController.html":{}}}],["recreatemedia(id",{"_index":1164,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["recurring",{"_index":4054,"title":{},"body":{"index.html":{}}}],["recursive",{"_index":1742,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["recursively",{"_index":1825,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["redis",{"_index":1293,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["redis(redisoptions",{"_index":3620,"title":{},"body":{"modules/RedisModule.html":{}}}],["redis.module",{"_index":1294,"title":{},"body":{"modules/CacheModule.html":{}}}],["redis_client",{"_index":3171,"title":{},"body":{"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"miscellaneous/variables.html":{}}}],["redis_db",{"_index":4109,"title":{},"body":{"index.html":{}}}],["redis_host",{"_index":4107,"title":{},"body":{"index.html":{}}}],["redis_password",{"_index":4111,"title":{},"body":{"index.html":{}}}],["redis_port",{"_index":4108,"title":{},"body":{"index.html":{}}}],["redis_user",{"_index":4110,"title":{},"body":{"index.html":{}}}],["rediscacheservice",{"_index":1300,"title":{"injectables/RedisCacheService.html":{}},"body":{"modules/CacheModule.html":{},"injectables/RedisCacheService.html":{}}}],["redisinstance",{"_index":3614,"title":{},"body":{"modules/RedisModule.html":{}}}],["redismodule",{"_index":1287,"title":{"modules/RedisModule.html":{}},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{},"modules.html":{},"overview.html":{}}}],["redismodule.forrootasync",{"_index":1302,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/WarlockModule.html":{}}}],["redismodule.redisinstance",{"_index":3615,"title":{},"body":{"modules/RedisModule.html":{}}}],["redisoptions",{"_index":3618,"title":{},"body":{"modules/RedisModule.html":{}}}],["redistributing",{"_index":4340,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":4278,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":469,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["reference",{"_index":402,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/TargetData.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["reference.interface",{"_index":3900,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["referenced_entity_name",{"_index":1916,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["referenced_table_name",{"_index":1918,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["referencedentityname",{"_index":1060,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["referencedtablename",{"_index":1059,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["reflect",{"_index":4003,"title":{},"body":{"dependencies.html":{}}}],["reflecting",{"_index":1183,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["reflector",{"_index":3632,"title":{},"body":{"guards/RolesGuard.html":{}}}],["refresh",{"_index":892,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["refresh_token",{"_index":918,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["refresh_token_error_msg",{"_index":907,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["refreshtoken",{"_index":896,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"miscellaneous/variables.html":{}}}],["regarding",{"_index":4321,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":3393,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["regex",{"_index":3830,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["register",{"_index":3492,"title":{},"body":{"injectables/ProcessRegisterService.html":{},"miscellaneous/enumerations.html":{}}}],["register.service",{"_index":3476,"title":{},"body":{"modules/ProcessModule.html":{}}}],["register.service.ts",{"_index":3483,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:126",{"_index":3498,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:36",{"_index":3489,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:62",{"_index":3494,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:77",{"_index":3496,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["register.service.ts:91",{"_index":3491,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["registercronjob",{"_index":3486,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["registercronjob(processdata",{"_index":3490,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["registered",{"_index":1135,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["registered_processes",{"_index":4455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registerfont",{"_index":2695,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["registerfont(capfontpath",{"_index":2729,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["registering",{"_index":3484,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["registerprocess",{"_index":192,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["registerprocess(this",{"_index":199,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["registers",{"_index":3401,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["registration",{"_index":3437,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["reject",{"_index":3216,"title":{},"body":{"classes/MsClient.html":{},"injectables/RedisCacheService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["reject(err",{"_index":3610,"title":{},"body":{"injectables/RedisCacheService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["reject(error",{"_index":3221,"title":{},"body":{"classes/MsClient.html":{}}}],["related",{"_index":903,"title":{},"body":{"classes/AuthService.html":{},"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{},"miscellaneous/variables.html":{}}}],["relatedentities",{"_index":2864,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["relatedentity",{"_index":2865,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["relatedentity.id",{"_index":2866,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["relations",{"_index":1111,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"injectables/BasicUserService.html":{},"injectables/CategoryService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{},"miscellaneous/variables.html":{}}}],["relationships",{"_index":1104,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/TargetData.html":{},"index.html":{}}}],["relative",{"_index":538,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["relativepath",{"_index":1829,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["release",{"_index":382,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["released",{"_index":369,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["reliable",{"_index":4053,"title":{},"body":{"index.html":{}}}],["remain",{"_index":4204,"title":{},"body":{"license.html":{}}}],["removal",{"_index":2837,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["remove",{"_index":1262,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"classes/FileManager.html":{},"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{},"classes/MediaManager.html":{},"interfaces/XdbRequest.html":{}}}],["remove(id",{"_index":1205,"title":{},"body":{"interfaces/BasicMediaController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["removebyid",{"_index":1252,"title":{},"body":{"injectables/BasicUserService.html":{},"classes/UserService.html":{}}}],["removebyid(id",{"_index":1242,"title":{},"body":{"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["removed",{"_index":1124,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"injectables/BasicUserService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["removeduplicateobjects",{"_index":3864,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["removeentity",{"_index":1012,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["removeentity(target",{"_index":1026,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["removeevent",{"_index":2847,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["removefile",{"_index":1145,"title":{},"body":{"interfaces/BasicFileController.html":{},"controllers/FileController.html":{}}}],["removefile(@param(\"id",{"_index":2107,"title":{},"body":{"controllers/FileController.html":{}}}],["removefile(id",{"_index":666,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["removemedia",{"_index":1156,"title":{},"body":{"interfaces/BasicMediaController.html":{},"controllers/MediaController.html":{}}}],["removemedia(@param(\"id",{"_index":2990,"title":{},"body":{"controllers/MediaController.html":{}}}],["removemedia(id",{"_index":1166,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["removeproperty",{"_index":1478,"title":{},"body":{"controllers/ConfigController.html":{},"injectables/ConfigService.html":{}}}],["removeproperty(@query(\"key",{"_index":1505,"title":{},"body":{"controllers/ConfigController.html":{}}}],["removeproperty(key",{"_index":1483,"title":{},"body":{"controllers/ConfigController.html":{},"injectables/ConfigService.html":{}}}],["removes",{"_index":1123,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["removeuserprofile",{"_index":1217,"title":{},"body":{"interfaces/BasicUserController.html":{},"controllers/ProfileController.html":{}}}],["removeuserprofile(@param(\"id",{"_index":3569,"title":{},"body":{"controllers/ProfileController.html":{}}}],["removeuserprofile(id",{"_index":1223,"title":{},"body":{"interfaces/BasicUserController.html":{},"controllers/ProfileController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["removing",{"_index":2194,"title":{},"body":{"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LocaleSubscriber.html":{}}}],["renderer",{"_index":1073,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["renderer.entity",{"_index":1939,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["renderer.entity.ts",{"_index":1944,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:36",{"_index":1946,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:40",{"_index":1948,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:44",{"_index":1947,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:53",{"_index":1950,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["renderer.entity.ts:60",{"_index":1949,"title":{},"body":{"entities/ExplorerColumnRendererEntity.html":{}}}],["rendering",{"_index":507,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"entities/ExplorerColumnRendererEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["rendering_intent_name",{"_index":2760,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["rendering_intent_value",{"_index":2762,"title":{},"body":{"entities/IccFileMetadataEntity.html":{}}}],["renderingintentname",{"_index":513,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["renderingintentvalue",{"_index":512,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["replace",{"_index":4138,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["replaced",{"_index":4392,"title":{},"body":{"license.html":{}}}],["repository",{"_index":1249,"title":{},"body":{"injectables/BasicUserService.html":{},"injectables/FileService.html":{},"injectables/LocaleService.html":{},"injectables/ProcessManagerService.html":{},"index.html":{}}}],["represent",{"_index":448,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["representation",{"_index":464,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["representatives",{"_index":4220,"title":{},"body":{"license.html":{}}}],["represented",{"_index":650,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["representing",{"_index":121,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/LogService.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["represents",{"_index":1508,"title":{},"body":{"interfaces/ConfigItem.html":{},"interfaces/Language.html":{},"interfaces/LocalizedMedia.html":{},"interfaces/LocalizedString.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"classes/Roles.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["reproduce",{"_index":4246,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":4330,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":4150,"title":{},"body":{"license.html":{}}}],["req",{"_index":57,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"controllers/AuthController.html":{},"guards/RolesGuard.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["req.body",{"_index":3956,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["req.cookies.accesstoken",{"_index":107,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req.cookies?.accesstoken",{"_index":106,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req.headers.authorization",{"_index":110,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req.headers?.authorization",{"_index":108,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req.headers[\"content",{"_index":3954,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["req.on(\"data",{"_index":3959,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["req.on(\"end",{"_index":3960,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["req[request_props.accesstoken",{"_index":95,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req[request_props.currentuser",{"_index":102,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["req[request_props.currentuser]?.roles",{"_index":3642,"title":{},"body":{"guards/RolesGuard.html":{}}}],["request",{"_index":35,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"controllers/AuthController.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/MsClient.html":{},"classes/Roles.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/variables.html":{}}}],["request.cookies?.refreshtoken",{"_index":817,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.data",{"_index":2719,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["request.id",{"_index":2718,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["request.ip",{"_index":797,"title":{},"body":{"controllers/AuthController.html":{}}}],["request[request_props.accesstoken",{"_index":4468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request[request_props.currentuser",{"_index":4502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request_props",{"_index":84,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":946,"title":{},"body":{"classes/BadRequestMsException.html":{},"classes/ForbiddenMsException.html":{},"classes/NotFoundMsException.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["required",{"_index":745,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/BasicAuthController.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"classes/ExchangeTokenPayload.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"classes/JwtDto.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LoginPayload.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["res",{"_index":763,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"injectables/CategoryService.html":{},"controllers/ExplorerController.html":{},"controllers/FileController.html":{},"injectables/LocaleService.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["res.children?.foreach((cat",{"_index":1472,"title":{},"body":{"injectables/CategoryService.html":{}}}],["res.push(ls",{"_index":2832,"title":{},"body":{"injectables/LocaleService.html":{}}}],["res.sendfile(filepath",{"_index":2102,"title":{},"body":{"controllers/FileController.html":{}}}],["res.sendfile(path.join(process.cwd",{"_index":2987,"title":{},"body":{"controllers/MediaController.html":{}}}],["reset",{"_index":1288,"title":{},"body":{"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}],["resetallprocessstatuses",{"_index":3374,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["resets",{"_index":3399,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["resolution",{"_index":433,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["resolutionunit",{"_index":531,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["resolutionx",{"_index":528,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["resolutiony",{"_index":530,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["resolve",{"_index":2018,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["resolve(body",{"_index":3862,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["resolve(keys",{"_index":3607,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["resolve(result",{"_index":3220,"title":{},"body":{"classes/MsClient.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["resolves",{"_index":890,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["resolving",{"_index":2646,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/MsClient.html":{}}}],["response",{"_index":388,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"controllers/AuthController.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/DbExceptionFilter.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"miscellaneous/typealiases.html":{}}}],["response.clearcookie(\"accesstoken",{"_index":813,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.clearcookie(\"refreshtoken",{"_index":814,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.cookie(\"accesstoken",{"_index":800,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.cookie(\"refreshtoken",{"_index":806,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.status(502).json",{"_index":1771,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["response?.data?.success",{"_index":2658,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["responsedto",{"_index":773,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["responsedto(jwtdto",{"_index":786,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsedto(jwtdto)@post('/exchange",{"_index":720,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsedto(jwtdto)@post('/login",{"_index":725,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsedto(userdto",{"_index":3563,"title":{},"body":{"controllers/ProfileController.html":{}}}],["responsedto(userdto)@delete('/:id')@forroles(roles.admin",{"_index":3554,"title":{},"body":{"controllers/ProfileController.html":{}}}],["responsedto(userdto)@get('/:id",{"_index":3552,"title":{},"body":{"controllers/ProfileController.html":{}}}],["responsedto(userdto)@patch('/:id",{"_index":3556,"title":{},"body":{"controllers/ProfileController.html":{}}}],["responsedto(userdto)@post('/')@forroles(roles.admin",{"_index":3549,"title":{},"body":{"controllers/ProfileController.html":{}}}],["responses",{"_index":1759,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["responsibility",{"_index":4379,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":533,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"modules/ProcessModule.html":{},"modules/UserModule.html":{},"interfaces/VideoFileMetadata.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["restricted",{"_index":4627,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["restricting",{"_index":1435,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts",{"_index":1434,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts:35",{"_index":1442,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts:39",{"_index":1441,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts:43",{"_index":1438,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["restriction.entity.ts:46",{"_index":1440,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{}}}],["result",{"_index":811,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/BasicCaptchaController.html":{},"controllers/CaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"classes/MsClient.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"license.html":{}}}],["result.schema.push(obj",{"_index":3858,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["result[key",{"_index":2235,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["result[newrelativepath",{"_index":1839,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["result[relativepath",{"_index":1841,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["resulting",{"_index":4187,"title":{},"body":{"license.html":{}}}],["results",{"_index":115,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["retain",{"_index":4288,"title":{},"body":{"license.html":{}}}],["retrieval",{"_index":1525,"title":{},"body":{"injectables/ConfigService.html":{}}}],["retrieve",{"_index":3389,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{}}}],["retrieves",{"_index":1109,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/LogService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{}}}],["return",{"_index":103,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"controllers/FileController.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"injectables/NotEmptyPipe.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserSubscriber.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":997,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["returns",{"_index":50,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"controllers/FileController.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/LogService.html":{},"controllers/MediaController.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["revisions",{"_index":4200,"title":{},"body":{"license.html":{}}}],["rgb",{"_index":2676,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["rights",{"_index":521,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["risks",{"_index":4342,"title":{},"body":{"license.html":{}}}],["rm(dir",{"_index":2544,"title":{},"body":{"injectables/FileService.html":{}}}],["role",{"_index":1235,"title":{},"body":{"interfaces/BasicUserController.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["role.entity",{"_index":1038,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{}}}],["role.entity.ts",{"_index":3752,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["role.entity.ts:35",{"_index":3753,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["role.entity.ts:39",{"_index":3754,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["role.entity.ts:43",{"_index":3755,"title":{},"body":{"entities/UserRoleEntity.html":{}}}],["roles",{"_index":1233,"title":{"classes/Roles.html":{}},"body":{"interfaces/BasicUserController.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"controllers/XmlDataBridgeController.html":{},"miscellaneous/variables.html":{}}}],["roles.admin",{"_index":3565,"title":{},"body":{"controllers/ProfileController.html":{}}}],["roles.decorator",{"_index":1496,"title":{},"body":{"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"controllers/XmlDataBridgeController.html":{}}}],["roles.decorator.ts",{"_index":4433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles.indexof(role.code",{"_index":3645,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles.manager",{"_index":3550,"title":{},"body":{"controllers/ProfileController.html":{}}}],["roles.name",{"_index":4573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles.name.lang",{"_index":4574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roles.root",{"_index":3644,"title":{},"body":{"guards/RolesGuard.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["roles.save",{"_index":3733,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["rolesguard",{"_index":1969,"title":{"guards/RolesGuard.html":{}},"body":{"controllers/ExplorerController.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{}}}],["root",{"_index":1456,"title":{},"body":{"injectables/CategoryService.html":{},"classes/Roles.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["roottoken",{"_index":3827,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["rotate",{"_index":659,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["rotation",{"_index":656,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["route",{"_index":4476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routes",{"_index":4474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["row",{"_index":1128,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["rowid",{"_index":1125,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["rowobj",{"_index":3848,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["rowobj[itemname",{"_index":3851,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["rowobj[itemname].values",{"_index":3854,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["rows",{"_index":3846,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{}}}],["royalty",{"_index":4243,"title":{},"body":{"license.html":{}}}],["rpcexception",{"_index":3257,"title":{},"body":{"classes/MsException.html":{}}}],["rtexp",{"_index":985,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["run",{"_index":4123,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1862,"title":{},"body":{"injectables/DtoInterceptor.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"dependencies.html":{}}}],["safedeserialize",{"_index":3148,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safedeserialize(data",{"_index":3154,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safely",{"_index":3156,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safeserialize",{"_index":3149,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safeserialize(data",{"_index":3160,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["safety",{"_index":4082,"title":{},"body":{"index.html":{}}}],["same",{"_index":4398,"title":{},"body":{"license.html":{}}}],["samesite",{"_index":802,"title":{},"body":{"controllers/AuthController.html":{}}}],["sample",{"_index":377,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["sample\"]?.value",{"_index":2311,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["sample_aspect_ratio",{"_index":3784,"title":{},"body":{"entities/VideoFileMetadataEntity.html":{}}}],["sample_rate",{"_index":698,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{}}}],["sampleaspectratio",{"_index":646,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["sampled",{"_index":458,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["samplerate",{"_index":343,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["samples",{"_index":379,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["saturation",{"_index":618,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["save",{"_index":4505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["saved",{"_index":1120,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"interfaces/TargetData.html":{}}}],["saveentity",{"_index":1013,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"controllers/ExplorerController.html":{}}}],["saveentity(target",{"_index":1028,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["saveentitydata",{"_index":1122,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["saveentitydata(target",{"_index":2031,"title":{},"body":{"classes/ExplorerService.html":{}}}],["savehandlers",{"_index":1089,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["saves",{"_index":1118,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"interfaces/TargetData.html":{}}}],["savetarget",{"_index":1014,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"controllers/ExplorerController.html":{}}}],["savetarget(@body",{"_index":1980,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["savetarget(target",{"_index":1030,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["saving",{"_index":1091,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["scalable",{"_index":4071,"title":{},"body":{"index.html":{}}}],["scale",{"_index":690,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["scan",{"_index":1544,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scanforpropertiesfiles",{"_index":1537,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scanforpropertiesfiles(directory",{"_index":1584,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scanning",{"_index":1561,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scans",{"_index":1587,"title":{},"body":{"injectables/ConfigService.html":{}}}],["scene",{"_index":600,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["scenecapturetype",{"_index":616,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["scenetype",{"_index":603,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["schedulemodule",{"_index":3474,"title":{},"body":{"modules/ProcessModule.html":{}}}],["schedulemodule.forroot",{"_index":3481,"title":{},"body":{"modules/ProcessModule.html":{}}}],["schedulerregistry",{"_index":3488,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["scheduling",{"_index":4057,"title":{},"body":{"index.html":{}}}],["schema",{"_index":1103,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["schema.ts",{"_index":4435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search",{"_index":1457,"title":{},"body":{"injectables/CategoryService.html":{}}}],["second",{"_index":354,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["seconds",{"_index":363,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/RedisCacheService.html":{},"interfaces/VideoFileMetadata.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["secret",{"_index":868,"title":{},"body":{"modules/AuthModule.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["secretkey",{"_index":2653,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["section",{"_index":1023,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["section_enabled",{"_index":1920,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["section_priority",{"_index":1922,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["section_renderer_params",{"_index":1925,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["section_visibility",{"_index":1927,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["sectionenabled",{"_index":1063,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["sectionpriority",{"_index":1061,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["sectionrenderer",{"_index":1067,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["sectionrendererparams",{"_index":1895,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["sections",{"_index":4155,"title":{},"body":{"license.html":{}}}],["sectionvisibility",{"_index":1065,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["see",{"_index":756,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["selection",{"_index":1086,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["sell",{"_index":4255,"title":{},"body":{"license.html":{}}}],["send",{"_index":3105,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["send(pattern",{"_index":3114,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["sends",{"_index":3206,"title":{},"body":{"classes/MsClient.html":{}}}],["sensing",{"_index":580,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["sensingmethod",{"_index":599,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["sensitivity",{"_index":560,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["sensor",{"_index":561,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["sent",{"_index":4219,"title":{},"body":{"license.html":{}}}],["separable",{"_index":4205,"title":{},"body":{"license.html":{}}}],["separate",{"_index":4319,"title":{},"body":{"license.html":{}}}],["serialize",{"_index":3163,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["serialized",{"_index":3164,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["serializer",{"_index":1855,"title":{},"body":{"injectables/DtoInterceptor.html":{}}}],["serializes",{"_index":3162,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["server",{"_index":395,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["servers",{"_index":4045,"title":{},"body":{"index.html":{}}}],["serves",{"_index":4624,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["service",{"_index":842,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/JwtDto.html":{},"injectables/LocaleService.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["services",{"_index":1424,"title":{},"body":{"modules/CategoryModule.html":{},"modules/LocaleModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["set",{"_index":167,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"classes/CacheService.html":{},"entities/CategoryEntity.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["set(key",{"_index":1338,"title":{},"body":{"classes/CacheService.html":{},"injectables/RedisCacheService.html":{}}}],["setaudiomd",{"_index":2179,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setaudiomd(md",{"_index":2184,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setimagemd",{"_index":2180,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setimagemd(md",{"_index":2187,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setmetadata(allowedformetadatakey",{"_index":4475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setprocessunitstatus",{"_index":3375,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["setprocessunitstatus(code",{"_index":3404,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["setproperty",{"_index":1479,"title":{},"body":{"controllers/ConfigController.html":{},"injectables/ConfigService.html":{}}}],["setproperty(@body",{"_index":1503,"title":{},"body":{"controllers/ConfigController.html":{}}}],["setproperty(body",{"_index":1486,"title":{},"body":{"controllers/ConfigController.html":{}}}],["setproperty(item",{"_index":1590,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sets",{"_index":166,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"injectables/FileMetadataService.html":{},"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["setstatus",{"_index":133,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["setstatus(status",{"_index":164,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["setting",{"_index":610,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/ConfigItem.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/RedisCacheService.html":{},"interfaces/VideoFileMetadata.html":{}}}],["settings",{"_index":359,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["setup",{"_index":3612,"title":{},"body":{"modules/RedisModule.html":{}}}],["setvideomd",{"_index":2181,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["setvideomd(md",{"_index":2189,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["sha",{"_index":1804,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["shall",{"_index":4153,"title":{},"body":{"license.html":{}}}],["shared/constants",{"_index":1497,"title":{},"body":{"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"controllers/XmlDataBridgeController.html":{}}}],["shared/decorators/access",{"_index":780,"title":{},"body":{"controllers/AuthController.html":{}}}],["shared/decorators/current",{"_index":1971,"title":{},"body":{"controllers/ExplorerController.html":{},"controllers/ProfileController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["shared/decorators/for",{"_index":1495,"title":{},"body":{"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["shared/decorators/response",{"_index":774,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["shared/guards/auth.guard",{"_index":1491,"title":{},"body":{"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["shared/guards/lite",{"_index":777,"title":{},"body":{"controllers/AuthController.html":{}}}],["shared/guards/roles.guard",{"_index":1970,"title":{},"body":{"controllers/ExplorerController.html":{},"controllers/ProfileController.html":{}}}],["shared/modules/cache/cache.module",{"_index":851,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/ProcessModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["shared/modules/cache/cache.types",{"_index":770,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["shared/modules/locale/entity/localized",{"_index":1888,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["shared/modules/locale/locale.types",{"_index":1035,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"interfaces/ProcessUnit.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["shared/modules/log/log.constants",{"_index":1603,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["shared/modules/log/log.module",{"_index":853,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/ProcessModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["shared/modules/messages",{"_index":3417,"title":{},"body":{"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{}}}],["shared/modules/pageable/pageable.types",{"_index":1042,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["shared/modules/warlock/warlock.constants",{"_index":3415,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["shared/modules/warlock/warlock.module",{"_index":3478,"title":{},"body":{"modules/ProcessModule.html":{}}}],["shared/modules/warlock/warlock.types",{"_index":3416,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["shared/pipes/not",{"_index":2085,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["shared/transformers/simple",{"_index":1889,"title":{},"body":{"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["shared/utils/common.utils",{"_index":3323,"title":{},"body":{"controllers/ProcessController.html":{}}}],["shared/utils/files.utils",{"_index":2203,"title":{},"body":{"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["shared/utils/number.utils",{"_index":2702,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["shared/utils/object.utils",{"_index":191,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["shared/utils/string.utils",{"_index":2700,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["shared/utils/transform.utils",{"_index":969,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["shared/utils/user.utils",{"_index":3559,"title":{},"body":{"controllers/ProfileController.html":{}}}],["shares",{"_index":4177,"title":{},"body":{"license.html":{}}}],["sharp",{"_index":4005,"title":{},"body":{"dependencies.html":{}}}],["sharpness",{"_index":619,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["shot",{"_index":606,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["shutter",{"_index":550,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["shutterspeedvalue",{"_index":570,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["side",{"_index":526,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicFileController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/typealiases.html":{}}}],["sign",{"_index":4582,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["signature",{"_index":495,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["signature\"]?.description",{"_index":2363,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["signoptions",{"_index":870,"title":{},"body":{"modules/AuthModule.html":{}}}],["simplejsontransformer",{"_index":1396,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"miscellaneous/variables.html":{}}}],["simplifying",{"_index":4037,"title":{},"body":{"index.html":{}}}],["single",{"_index":449,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["size",{"_index":398,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["skip",{"_index":3435,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["sleep",{"_index":3324,"title":{},"body":{"controllers/ProcessController.html":{}}}],["slicing",{"_index":4063,"title":{},"body":{"index.html":{}}}],["software",{"_index":380,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/BasicFileController.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["sole",{"_index":4378,"title":{},"body":{"license.html":{}}}],["solely",{"_index":4337,"title":{},"body":{"license.html":{}}}],["sort",{"_index":1448,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["sort(cat",{"_index":1458,"title":{},"body":{"injectables/CategoryService.html":{}}}],["sorted",{"_index":1464,"title":{},"body":{"injectables/CategoryService.html":{}}}],["sortedkeys",{"_index":1625,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sortedkeys.length",{"_index":1637,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sortedkeys.slice(start",{"_index":1640,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sorting",{"_index":1556,"title":{},"body":{"injectables/ConfigService.html":{}}}],["sortorder",{"_index":3287,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{},"miscellaneous/enumerations.html":{}}}],["sorts",{"_index":1460,"title":{},"body":{"injectables/CategoryService.html":{}}}],["sound",{"_index":372,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"modules/CacheModule.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"interfaces/ConfigItem.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"modules/LogModule.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"modules/ProcessModule.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["source.pipe",{"_index":3225,"title":{},"body":{"classes/MsClient.html":{}}}],["sources",{"_index":4129,"title":{},"body":{"index.html":{}}}],["space",{"_index":490,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["space\"]?.description",{"_index":2356,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["spaces",{"_index":511,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["special",{"_index":4354,"title":{},"body":{"license.html":{}}}],["specialization",{"_index":2637,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["specific",{"_index":267,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/BasicFileController.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"interfaces/MessagesBroker.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{}}}],["specification",{"_index":481,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["specified",{"_index":180,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/AuthService.html":{},"interfaces/BasicExplorerController.html":{},"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["specifies",{"_index":396,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["specifying",{"_index":534,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["speed",{"_index":551,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["split",{"_index":1687,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src",{"_index":4495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/auth.config",{"_index":857,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/captcha.config",{"_index":767,"title":{},"body":{"controllers/AuthController.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["src/file.config",{"_index":2527,"title":{},"body":{"injectables/FileService.html":{}}}],["src/kp.config",{"_index":3677,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["stack",{"_index":2906,"title":{},"body":{"classes/LogService.html":{},"classes/MsException.html":{}}}],["stacktrace",{"_index":2943,"title":{},"body":{"classes/LogService.html":{}}}],["stacktrace.split(\"\\n",{"_index":2945,"title":{},"body":{"classes/LogService.html":{}}}],["standard",{"_index":631,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["start",{"_index":134,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["start:web",{"_index":4130,"title":{},"body":{"index.html":{}}}],["started",{"_index":4021,"title":{"index.html":{},"license.html":{}},"body":{}}],["startprocess",{"_index":3304,"title":{},"body":{"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["startprocess(@param(\"code",{"_index":3328,"title":{},"body":{"controllers/ProcessController.html":{}}}],["startprocess(code",{"_index":3313,"title":{},"body":{"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{}}}],["startprocess(processdata",{"_index":3493,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["starts",{"_index":169,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["startup",{"_index":3472,"title":{},"body":{"modules/ProcessModule.html":{},"index.html":{}}}],["state",{"_index":3532,"title":{},"body":{"entities/ProcessUnitEntity.html":{},"index.html":{},"license.html":{}}}],["stated",{"_index":4253,"title":{},"body":{"license.html":{}}}],["statement",{"_index":4309,"title":{},"body":{"license.html":{}}}],["static",{"_index":837,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"injectables/ProcessManagerService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["static/file",{"_index":4617,"title":{},"body":{"additional-documentation/properties/file.properties.html":{}}}],["static/media",{"_index":4622,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["static/private/file",{"_index":4619,"title":{},"body":{"additional-documentation/properties/file.properties.html":{}}}],["static/private/media",{"_index":4626,"title":{},"body":{"additional-documentation/properties/media.properties.html":{}}}],["static/tmp",{"_index":4578,"title":{},"body":{"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["stating",{"_index":4287,"title":{},"body":{"license.html":{}}}],["statistics",{"_index":3661,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["stats",{"_index":1834,"title":{},"body":{"interfaces/DirectoryStructure.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["stats.filescount",{"_index":3685,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["stats.folderscount",{"_index":3686,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["stats.isdirectory",{"_index":1838,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["status",{"_index":147,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/enumerations.html":{}}}],["status.execute",{"_index":201,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["status.ready",{"_index":3456,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["statuses",{"_index":3400,"title":{},"body":{"injectables/ProcessManagerService.html":{},"miscellaneous/enumerations.html":{}}}],["stereo",{"_index":376,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["stop",{"_index":135,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{},"miscellaneous/enumerations.html":{}}}],["stoppage",{"_index":4361,"title":{},"body":{"license.html":{}}}],["stopped",{"_index":228,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["stopprocess",{"_index":3305,"title":{},"body":{"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["stopprocess(@param(\"code",{"_index":3331,"title":{},"body":{"controllers/ProcessController.html":{}}}],["stopprocess(code",{"_index":3316,"title":{},"body":{"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{}}}],["stopprocess(processdata",{"_index":3495,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["stops",{"_index":163,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["storage",{"_index":1611,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/RedisCacheService.html":{}}}],["store",{"_index":69,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/file.properties.html":{}}}],["stored",{"_index":2520,"title":{},"body":{"injectables/FileService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["stores",{"_index":393,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/ConfigService.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"index.html":{}}}],["storing",{"_index":3628,"title":{},"body":{"classes/Roles.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["stream",{"_index":645,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/RedisCacheService.html":{},"interfaces/VideoFileMetadata.html":{}}}],["stream.on(\"data",{"_index":3603,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["stream.on(\"end",{"_index":3606,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["stream.on(\"error",{"_index":3608,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["streams",{"_index":362,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["string",{"_index":63,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleService.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["string.entity",{"_index":1410,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"modules/LocaleModule.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["string.entity.ts",{"_index":2879,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string.entity.ts:33",{"_index":2883,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string.entity.ts:37",{"_index":2882,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string.entity.ts:40",{"_index":2884,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string.entity.ts:43",{"_index":2885,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["string[]).push(file",{"_index":1842,"title":{},"body":{"interfaces/DirectoryStructure.html":{}}}],["strings",{"_index":1512,"title":{},"body":{"interfaces/ConfigItem.html":{},"injectables/LocaleService.html":{},"miscellaneous/variables.html":{}}}],["stringutils",{"_index":2699,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["stringutils.generaterandomstring",{"_index":2704,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["structure",{"_index":429,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/DirectoryStructure.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/VideoFileMetadata.html":{}}}],["subclasses",{"_index":156,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["subclient",{"_index":3147,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["subject",{"_index":577,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["subjectdistance",{"_index":579,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["subjectdistancerange",{"_index":621,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["sublicense",{"_index":4250,"title":{},"body":{"license.html":{}}}],["submission",{"_index":4311,"title":{},"body":{"license.html":{}}}],["submit",{"_index":4214,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":4212,"title":{},"body":{"license.html":{}}}],["subsampling",{"_index":457,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["subscribe",{"_index":3124,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["subscribe(chanel",{"_index":3131,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["subscriber",{"_index":3764,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["subscriber.ts",{"_index":263,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/LocaleSubscriber.html":{}}}],["subscriber.ts:28",{"_index":272,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["subscriber.ts:35",{"_index":290,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["subscriber.ts:47",{"_index":2843,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["subscriber.ts:48",{"_index":284,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["subscriber.ts:69",{"_index":2848,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["subscriber.ts:76",{"_index":274,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["subscribers",{"_index":265,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/LocaleSubscriber.html":{},"injectables/MessagesBrokerService.html":{}}}],["subscribes",{"_index":3133,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["subsequently",{"_index":4232,"title":{},"body":{"license.html":{}}}],["succeeded",{"_index":3579,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["successful",{"_index":1583,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/RedisCacheService.html":{}}}],["successfully",{"_index":902,"title":{},"body":{"classes/AuthService.html":{}}}],["such",{"_index":432,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/TargetData.html":{},"classes/UserSubscriber.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":831,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/BasicUserService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"injectables/LiteAuthGuard.html":{},"classes/MsException.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{}}}],["super(httpstatus.bad_request",{"_index":953,"title":{},"body":{"classes/BadRequestMsException.html":{}}}],["super(httpstatus.forbidden",{"_index":2633,"title":{},"body":{"classes/ForbiddenMsException.html":{}}}],["super(httpstatus.not_found",{"_index":3274,"title":{},"body":{"classes/NotFoundMsException.html":{}}}],["super(httpstatus.unauthorized",{"_index":2772,"title":{},"body":{"classes/InvalidTokenMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["super.debug(this.preparemessage(message",{"_index":2933,"title":{},"body":{"classes/LogService.html":{}}}],["super.error(this.preparemessage(message",{"_index":2929,"title":{},"body":{"classes/LogService.html":{}}}],["super.log(this.preparemessage(message",{"_index":2927,"title":{},"body":{"classes/LogService.html":{}}}],["super.verbose(this.preparemessage(message",{"_index":2932,"title":{},"body":{"classes/LogService.html":{}}}],["super.warn(this.preparemessage(message",{"_index":2931,"title":{},"body":{"classes/LogService.html":{}}}],["supersede",{"_index":4318,"title":{},"body":{"license.html":{}}}],["support",{"_index":4069,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{}}}],["supported",{"_index":1187,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"index.html":{}}}],["supports",{"_index":4061,"title":{},"body":{"index.html":{}}}],["sure",{"_index":4100,"title":{},"body":{"index.html":{}}}],["svg",{"_index":4405,"title":{},"body":{"modules.html":{},"miscellaneous/variables.html":{}}}],["switch",{"_index":229,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["symbol",{"_index":4551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"entity_save_handler",{"_index":4503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"logger_service",{"_index":4550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"ms_client",{"_index":4553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"msg_broker",{"_index":4552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"msg_bus",{"_index":4554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"redis_client",{"_index":4556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol(\"warlock",{"_index":4576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":1619,"title":{},"body":{"injectables/ConfigService.html":{}}}],["synchronizing",{"_index":1562,"title":{},"body":{"injectables/ConfigService.html":{}}}],["syntax",{"_index":4396,"title":{},"body":{"license.html":{}}}],["system",{"_index":501,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/LanguageEntity.html":{},"modules/MediaModule.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["systems",{"_index":4145,"title":{},"body":{"index.html":{},"license.html":{}}}],["t",{"_index":319,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"entities/MediaEntity.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"entities/ProcessLogEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{}}}],["t.code",{"_index":1386,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/UserEntity.html":{}}}],["t.id",{"_index":1439,"title":{},"body":{"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{}}}],["t.target",{"_index":1932,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["tab",{"_index":1070,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/TargetData.html":{}}}],["tab.entity",{"_index":1940,"title":{},"body":{"entities/ExplorerColumnEntity.html":{}}}],["tab.entity.ts",{"_index":2033,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:38",{"_index":2035,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:42",{"_index":2036,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:46",{"_index":2037,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:53",{"_index":2038,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tab.entity.ts:56",{"_index":2039,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["tabbed",{"_index":2034,"title":{},"body":{"entities/ExplorerTabEntity.html":{}}}],["table",{"_index":1112,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["table_name",{"_index":2063,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["tableinheritance",{"_index":2134,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/UserEntity.html":{}}}],["tablename",{"_index":1046,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["tables",{"_index":1106,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"index.html":{}}}],["tagname",{"_index":3841,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["take",{"_index":3454,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["taken",{"_index":547,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["target",{"_index":1017,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/variables.html":{}}}],["target.entity",{"_index":1938,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{}}}],["target.entity.ts",{"_index":2041,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:103",{"_index":2046,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:107",{"_index":2047,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:41",{"_index":2065,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:45",{"_index":2064,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:49",{"_index":2045,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:53",{"_index":2062,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:57",{"_index":2060,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:60",{"_index":2061,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:63",{"_index":2051,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:67",{"_index":2044,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:75",{"_index":2053,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:83",{"_index":2059,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:91",{"_index":2055,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target.entity.ts:99",{"_index":2057,"title":{},"body":{"entities/ExplorerTargetEntity.html":{}}}],["target_relations_basic",{"_index":4458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target_relations_full",{"_index":4459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target_relations_object",{"_index":4460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target_relations_section",{"_index":4461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["targetdata",{"_index":1076,"title":{"interfaces/TargetData.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["targetparams",{"_index":1114,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["targets",{"_index":1080,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"miscellaneous/typealiases.html":{}}}],["tasks",{"_index":4038,"title":{},"body":{"index.html":{}}}],["template",{"_index":995,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/TargetData.html":{}}}],["templated",{"_index":4479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templates",{"_index":4478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["temporary",{"_index":3650,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{}}}],["terminate",{"_index":4276,"title":{},"body":{"license.html":{}}}],["terms",{"_index":4149,"title":{},"body":{"license.html":{}}}],["tested",{"_index":4144,"title":{},"body":{"index.html":{}}}],["text",{"_index":2685,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"license.html":{}}}],["theory",{"_index":4345,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":4208,"title":{},"body":{"license.html":{}}}],["third",{"_index":4298,"title":{},"body":{"license.html":{}}}],["this.authservice.authenticate(payload",{"_index":799,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.exchangetoken(token",{"_index":818,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.invalidatetoken(token",{"_index":812,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.broker.emit(command.register",{"_index":3438,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.broker.emit(command.start",{"_index":3440,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.broker.emit(command.stop",{"_index":3441,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.broker.emit(command.unregister",{"_index":3447,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.cacheservice.del(config_cache_prefix",{"_index":1612,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cacheservice.del(fullkey",{"_index":1652,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cacheservice.del(key",{"_index":2717,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.get",{"_index":104,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/GoogleCaptchaService.html":{}}}],["this.cacheservice.get(captchaconfig.font_family",{"_index":2740,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.get(captchaconfig.font_path",{"_index":2741,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.get(captchaconfig.google_public_key",{"_index":2652,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["this.cacheservice.get(key",{"_index":1644,"title":{},"body":{"injectables/ConfigService.html":{},"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.get(kpconfig.tmp_dir",{"_index":3680,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["this.cacheservice.get(private_dir",{"_index":2629,"title":{},"body":{"injectables/FileService.html":{}}}],["this.cacheservice.get(public_dir",{"_index":2627,"title":{},"body":{"injectables/FileService.html":{}}}],["this.cacheservice.getboolean",{"_index":790,"title":{},"body":{"controllers/AuthController.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.getfrompattern",{"_index":1623,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cacheservice.getnumber(captchaconfig.expiration",{"_index":2739,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.set(`${captcha_cache_prefix}:${id",{"_index":2713,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.cacheservice.set(`${key",{"_index":1616,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cacheservice.set(fullkey",{"_index":1649,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.captchaservice.generatecaptcha",{"_index":1350,"title":{},"body":{"controllers/CaptchaController.html":{}}}],["this.captchaservice.validatecaptcha",{"_index":792,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.captchaservice.validatecaptcha(payload",{"_index":1349,"title":{},"body":{"controllers/CaptchaController.html":{}}}],["this.catrep.finddescendantstree(cat",{"_index":1471,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.catrep.findone",{"_index":1470,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.client.del(...keys",{"_index":3596,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.expire(key",{"_index":3601,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.get(key",{"_index":3591,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.incr(key",{"_index":3599,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.scanstream",{"_index":3602,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.client.set(key",{"_index":3594,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.configservice.getpropertiespage(params",{"_index":1502,"title":{},"body":{"controllers/ConfigController.html":{}}}],["this.configservice.removeproperty(key",{"_index":1506,"title":{},"body":{"controllers/ConfigController.html":{}}}],["this.configservice.setproperty(body",{"_index":1504,"title":{},"body":{"controllers/ConfigController.html":{}}}],["this.constructor.name",{"_index":204,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.createbasicfindqb",{"_index":2569,"title":{},"body":{"injectables/FileService.html":{}}}],["this.createbasicfindqb().where(\"file.id",{"_index":2565,"title":{},"body":{"injectables/FileService.html":{}}}],["this.createfiledirectory",{"_index":2550,"title":{},"body":{"injectables/FileService.html":{}}}],["this.createfileentity(ispublic",{"_index":2548,"title":{},"body":{"injectables/FileService.html":{}}}],["this.deleteexistingconfigtsfiles(fullpath",{"_index":1723,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.deleteexistingconfigtsfiles(process.cwd",{"_index":1610,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.execute",{"_index":213,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.explorerservice.changetarget(target",{"_index":1981,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["this.explorerservice.getentitydata",{"_index":1988,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["this.explorerservice.getpageableentitydata",{"_index":1990,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["this.explorerservice.gettargetdata(target",{"_index":1985,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["this.explorerservice.gettargetlist",{"_index":1978,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["this.explorerservice.removeentity(target",{"_index":1996,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["this.explorerservice.saveentitydata",{"_index":1994,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["this.fetchuser",{"_index":100,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["this.filerep",{"_index":2588,"title":{},"body":{"injectables/FileService.html":{}}}],["this.filerep.manager.transaction(async",{"_index":2535,"title":{},"body":{"injectables/FileService.html":{}}}],["this.filerep.save(entity",{"_index":2626,"title":{},"body":{"injectables/FileService.html":{}}}],["this.fileservice.createorupdatefile",{"_index":2094,"title":{},"body":{"controllers/FileController.html":{}}}],["this.fileservice.findprivatebyid(id",{"_index":2100,"title":{},"body":{"controllers/FileController.html":{}}}],["this.fileservice.findpublicbyid(id",{"_index":2105,"title":{},"body":{"controllers/FileController.html":{}}}],["this.fileservice.getfilepath(file",{"_index":2101,"title":{},"body":{"controllers/FileController.html":{}}}],["this.fileservice.remove(id",{"_index":2108,"title":{},"body":{"controllers/FileController.html":{}}}],["this.findbyid(id",{"_index":1274,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.findfilebyid(existedentityid",{"_index":2537,"title":{},"body":{"injectables/FileService.html":{}}}],["this.findfilebyid(id",{"_index":2572,"title":{},"body":{"injectables/FileService.html":{}}}],["this.generatecolor",{"_index":2731,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.generateconfigtsfiles",{"_index":1614,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.generatedtsoutput",{"_index":1604,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.generatenamespacewithvariables",{"_index":1740,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.get(key",{"_index":3593,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.getaccesstokenfromrequest(req",{"_index":91,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["this.getcallingcontext",{"_index":2926,"title":{},"body":{"classes/LogService.html":{}}}],["this.getcaptchaexp",{"_index":2712,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.getcaptchafontfamily",{"_index":2726,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.getcaptchafontpath",{"_index":2728,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.getdeletestats(dirstruct",{"_index":3684,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["this.getprivatedir",{"_index":2540,"title":{},"body":{"injectables/FileService.html":{}}}],["this.getprocessdata(code",{"_index":3439,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.getprocessdata(processcode",{"_index":3449,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.getpublicdir",{"_index":2541,"title":{},"body":{"injectables/FileService.html":{}}}],["this.getpublicdir()}/${file.id",{"_index":2574,"title":{},"body":{"injectables/FileService.html":{}}}],["this.getstatus",{"_index":200,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.handlerequest(source",{"_index":3218,"title":{},"body":{"classes/MsClient.html":{}}}],["this.hashpassword(user.password",{"_index":324,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["this.hashpasswordifneeded(event",{"_index":3776,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["this.http.post",{"_index":2655,"title":{},"body":{"classes/GoogleCaptchaService.html":{}}}],["this.languagerep.find",{"_index":2821,"title":{},"body":{"injectables/LocaleService.html":{}}}],["this.localizedstringrep.findone",{"_index":2828,"title":{},"body":{"injectables/LocaleService.html":{}}}],["this.localizedstringrep.save(ls",{"_index":2831,"title":{},"body":{"injectables/LocaleService.html":{}}}],["this.lockexec",{"_index":3524,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.lockexec(`${processdata.code}_start",{"_index":3517,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.logger.debug(`generated",{"_index":2714,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.logger.debug(`sending",{"_index":3223,"title":{},"body":{"classes/MsClient.html":{}}}],["this.logger.debug(message",{"_index":237,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.logger.error",{"_index":3230,"title":{},"body":{"classes/MsClient.html":{},"injectables/RedisCacheService.html":{}}}],["this.logger.error(`error",{"_index":3592,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.logger.error(`invalid",{"_index":1694,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.error(`process",{"_index":3516,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.logger.error(err",{"_index":3609,"title":{},"body":{"injectables/RedisCacheService.html":{}}}],["this.logger.error(message",{"_index":233,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.logger.log",{"_index":2562,"title":{},"body":{"injectables/FileService.html":{}}}],["this.logger.log(\"init",{"_index":3429,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.logger.log(`clean",{"_index":1608,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.log(`config",{"_index":1618,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.log(`file",{"_index":2587,"title":{},"body":{"injectables/FileService.html":{}}}],["this.logger.log(`generate",{"_index":1613,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.log(`scan",{"_index":1605,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.log(message",{"_index":231,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.logger.verbose",{"_index":2861,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["this.logger.verbose(`delete",{"_index":1720,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.verbose(`generated",{"_index":1744,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.verbose(`read",{"_index":1715,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.logger.verbose(message",{"_index":239,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.logger.warn",{"_index":202,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{}}}],["this.logger.warn(\"autostart",{"_index":3427,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.logger.warn(`incorrect",{"_index":2720,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.logger.warn(`invalid",{"_index":96,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/GraphicCaptchaService.html":{}}}],["this.logger.warn(`request",{"_index":3237,"title":{},"body":{"classes/MsClient.html":{}}}],["this.logger.warn(message",{"_index":235,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.loginstance",{"_index":208,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.loginstance.content",{"_index":251,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.makeimagefromtext(val",{"_index":2710,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["this.mediaservice.createorupdatemedia",{"_index":2981,"title":{},"body":{"controllers/MediaController.html":{}}}],["this.mediaservice.findprivatebyid(id",{"_index":2984,"title":{},"body":{"controllers/MediaController.html":{}}}],["this.mediaservice.findpublicbyid(id",{"_index":2989,"title":{},"body":{"controllers/MediaController.html":{}}}],["this.mediaservice.getmediapath(media",{"_index":2986,"title":{},"body":{"controllers/MediaController.html":{}}}],["this.mediaservice.recreate(id",{"_index":2994,"title":{},"body":{"controllers/MediaController.html":{}}}],["this.mediaservice.remove(id",{"_index":2991,"title":{},"body":{"controllers/MediaController.html":{}}}],["this.mergepropertiescontent",{"_index":1666,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.metadataservice.createfilemetadataentity",{"_index":2559,"title":{},"body":{"injectables/FileService.html":{}}}],["this.oncrash(e",{"_index":222,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.onfinish",{"_index":215,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.onstop",{"_index":226,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.parser.parsestring(xmldata",{"_index":3961,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["this.parsevalue(value.trim",{"_index":1702,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.parsexmlfromrequest(req",{"_index":3957,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["this.patchfromctx(ctx",{"_index":2930,"title":{},"body":{"classes/LogService.html":{}}}],["this.pmservice.createloginstance",{"_index":209,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.pmservice.getlastlogsbyprocess",{"_index":3341,"title":{},"body":{"controllers/ProcessController.html":{}}}],["this.pmservice.getprocessdata(code",{"_index":3339,"title":{},"body":{"controllers/ProcessController.html":{}}}],["this.pmservice.getprocesslogbyid(id",{"_index":3346,"title":{},"body":{"controllers/ProcessController.html":{}}}],["this.pmservice.getprocessunitstatus(this.constructor.name",{"_index":259,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.pmservice.init",{"_index":3482,"title":{},"body":{"modules/ProcessModule.html":{}}}],["this.pmservice.setprocessunitstatus(processdata.code",{"_index":3522,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.pmservice.setprocessunitstatus(this.constructor.name",{"_index":260,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.pmservice.startprocess(code",{"_index":3329,"title":{},"body":{"controllers/ProcessController.html":{}}}],["this.pmservice.stopprocess(code",{"_index":3332,"title":{},"body":{"controllers/ProcessController.html":{}}}],["this.pmservice.stopprocess(processdata.code",{"_index":3530,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.pmservice.toggleprocess(code",{"_index":3335,"title":{},"body":{"controllers/ProcessController.html":{}}}],["this.pmservice.updateloginstance(this.loginstance",{"_index":255,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.processandvalidatepropertiescontent",{"_index":1675,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.processlogrep.find",{"_index":3453,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processlogrep.findone",{"_index":3452,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processlogrep.save",{"_index":3450,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processlogrep.save(loginstance",{"_index":3451,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processunitrep.find",{"_index":3431,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processunitrep.findone",{"_index":3444,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.processunitrep.save(processdata",{"_index":3446,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.propertiesfiles",{"_index":1724,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.propertiesfiles[filepath",{"_index":1726,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.propertiesfiles[fullpath",{"_index":1674,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.proxy.emit(pattern",{"_index":3222,"title":{},"body":{"classes/MsClient.html":{}}}],["this.proxy.send(pattern",{"_index":3217,"title":{},"body":{"classes/MsClient.html":{}}}],["this.pubclient.duplicate",{"_index":3175,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.pubclient.publish(chanel",{"_index":3181,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.reflector.get",{"_index":3639,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.registercronjob(data",{"_index":3507,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.resetallprocessstatuses",{"_index":3428,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.safeserialize(data",{"_index":3182,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.savehandlers",{"_index":1992,"title":{},"body":{"controllers/ExplorerController.html":{}}}],["this.scanforpropertiesfiles(fullpath",{"_index":1669,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.scanforpropertiesfiles(process.cwd",{"_index":1607,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.schedulerregistry.addcronjob(processdata.code",{"_index":3526,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.schedulerregistry.deletecronjob(processdata.code",{"_index":3529,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.schedulerregistry.doesexist(\"cron",{"_index":3520,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.schedulerregistry.getcronjob(processdata.code",{"_index":3527,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.service.analyzedatabase",{"_index":2019,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["this.setaudiomd(md",{"_index":2224,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.setimagemd(md",{"_index":2222,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.setprocessunitstatus(processdata.code",{"_index":3455,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["this.setstatus(status.crashed",{"_index":221,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.setstatus(status.execute",{"_index":211,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.setstatus(status.ready",{"_index":214,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.setvideomd(md",{"_index":2226,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.sort(cat",{"_index":1473,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.sort(res",{"_index":1474,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.startprocess(data",{"_index":3511,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.stopprocess(data",{"_index":3513,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.subclient",{"_index":3174,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subclient.on(\"message",{"_index":3176,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subclient.subscribe(chanel",{"_index":3183,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subclient.unsubscribe(chanel",{"_index":3185,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subscribers.delete(chanel",{"_index":3186,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subscribers.get(chanel",{"_index":3179,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subscribers.has(chanel",{"_index":3177,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.subscribers.set(chanel",{"_index":3184,"title":{},"body":{"injectables/MessagesBrokerService.html":{}}}],["this.trimproperties(md",{"_index":2227,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.trimproperties(obj[key",{"_index":2234,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["this.unregistercronjob(data",{"_index":3509,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["this.userrep.create(user",{"_index":1276,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userrep.findone",{"_index":1271,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userrep.remove(user",{"_index":1279,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userrep.save(newuser",{"_index":1277,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userrep.save(user",{"_index":1273,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["this.userservice.create(profile",{"_index":3572,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.userservice.findbyid(id",{"_index":3566,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.userservice.findbylogin(useridentity",{"_index":101,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["this.userservice.removebyid(id",{"_index":3570,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.userservice.updatebyid(id",{"_index":3568,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.validatelogin(event.entity.login",{"_index":3775,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["this.validatetoken(token",{"_index":94,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["this.valuesofproperties",{"_index":1615,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.valuesofproperties[key",{"_index":1617,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.valuesofproperties[processedvalue.substring(1,processedvalue.length",{"_index":1711,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.valuesofproperties[propertykey",{"_index":1701,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.writelog",{"_index":216,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["this.writelog(`nothing",{"_index":3682,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["this.writelog(`process",{"_index":227,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.writelog(`start",{"_index":210,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.writelog(`tmp",{"_index":3688,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["this.writelog(`try",{"_index":225,"title":{},"body":{"classes/AbstractProcess.html":{}}}],["this.xdbexportservice.exportxml(body",{"_index":3938,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["this.xdbimportservice.importfromfile(file.buffer",{"_index":3933,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["this.xdbimportservice.importxml(body",{"_index":3932,"title":{},"body":{"controllers/XmlDataBridgeController.html":{}}}],["those",{"_index":4257,"title":{},"body":{"license.html":{}}}],["through",{"_index":4055,"title":{},"body":{"index.html":{},"license.html":{}}}],["throw",{"_index":97,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractUserSubscriber.html":{},"controllers/AuthController.html":{},"injectables/BasicUserService.html":{},"injectables/ConfigService.html":{},"controllers/ExplorerController.html":{},"injectables/FileService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"controllers/ProfileController.html":{}}}],["throwerror",{"_index":3209,"title":{},"body":{"classes/MsClient.html":{}}}],["throwerror(error",{"_index":3239,"title":{},"body":{"classes/MsClient.html":{}}}],["throws",{"_index":299,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"injectables/BasicUserService.html":{}}}],["thumb",{"_index":4462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thumbnail",{"_index":4062,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["thumbnails",{"_index":1176,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["tiff",{"_index":545,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["time",{"_index":459,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/RedisCacheService.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["timeout",{"_index":3118,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"modules/MsClientModule.html":{}}}],["timeout(opts?.timeout",{"_index":3226,"title":{},"body":{"classes/MsClient.html":{}}}],["timeouterror",{"_index":3236,"title":{},"body":{"classes/MsClient.html":{}}}],["timeouts",{"_index":3204,"title":{},"body":{"classes/MsClient.html":{}}}],["timestamp",{"_index":2129,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["tinput",{"_index":3107,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["title",{"_index":344,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"license.html":{}}}],["tmpdir",{"_index":3679,"title":{},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["tmpdircleanerprocess",{"_index":3646,"title":{"classes/TmpDirCleanerProcess.html":{}},"body":{"classes/TmpDirCleanerProcess.html":{}}}],["to(value",{"_index":4561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todo",{"_index":2017,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["together",{"_index":642,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["toggle",{"_index":3410,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["toggleprocess",{"_index":3306,"title":{},"body":{"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{}}}],["toggleprocess(@param(\"code",{"_index":3334,"title":{},"body":{"controllers/ProcessController.html":{}}}],["toggleprocess(code",{"_index":3319,"title":{},"body":{"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{}}}],["toggles",{"_index":3409,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["token",{"_index":42,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/Roles.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["token.decorator",{"_index":781,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.decorator.ts",{"_index":4431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tokenizing",{"_index":4477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tokens",{"_index":893,"title":{},"body":{"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["tool",{"_index":345,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["toomanyrequestsmsexception",{"_index":3692,"title":{"classes/TooManyRequestsMsException.html":{}},"body":{"classes/TooManyRequestsMsException.html":{}}}],["tort",{"_index":4346,"title":{},"body":{"license.html":{}}}],["total",{"_index":3281,"title":{},"body":{"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["totalcount",{"_index":1636,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{}}}],["touppercase",{"_index":1737,"title":{},"body":{"injectables/ConfigService.html":{}}}],["trac",{"_index":370,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["trace",{"_index":2904,"title":{},"body":{"classes/LogService.html":{}}}],["track",{"_index":347,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["tracking",{"_index":931,"title":{},"body":{"classes/AuthService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["trade",{"_index":4324,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":4289,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":4322,"title":{},"body":{"license.html":{}}}],["transactionmanager",{"_index":2536,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file",{"_index":2586,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file.metadata.audio",{"_index":2583,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file.metadata.gps",{"_index":2581,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file.metadata.image",{"_index":2579,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.remove(file.metadata.video",{"_index":2585,"title":{},"body":{"injectables/FileService.html":{}}}],["transactionmanager.save(entity",{"_index":2561,"title":{},"body":{"injectables/FileService.html":{}}}],["transfer",{"_index":970,"title":{},"body":{"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"index.html":{},"license.html":{}}}],["transform",{"_index":964,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/DbExceptionFilter.html":{},"injectables/DtoInterceptor.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"injectables/NotEmptyPipe.html":{}}}],["transform(transformutils.datetotime",{"_index":983,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["transform(value",{"_index":3267,"title":{},"body":{"injectables/NotEmptyPipe.html":{}}}],["transformation",{"_index":1864,"title":{},"body":{"injectables/DtoInterceptor.html":{},"license.html":{}}}],["transformer",{"_index":965,"title":{},"body":{"interfaces/BasicAuthController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"entities/CategoryEntity.html":{},"injectables/DtoInterceptor.html":{},"classes/ExchangeTokenPayload.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["transformers/simple",{"_index":1411,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["transforming",{"_index":4562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformutils",{"_index":968,"title":{},"body":{"interfaces/BasicAuthController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{}}}],["translation",{"_index":4189,"title":{},"body":{"license.html":{}}}],["translations",{"_index":2880,"title":{},"body":{"entities/LocalizedStringEntity.html":{}}}],["transport",{"_index":3249,"title":{},"body":{"modules/MsClientModule.html":{}}}],["tree",{"_index":1408,"title":{},"body":{"entities/CategoryEntity.html":{},"injectables/CategoryService.html":{}}}],["tree(\"nested",{"_index":1415,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["treechildren",{"_index":1379,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["treeparent",{"_index":1398,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["treerepository",{"_index":1450,"title":{},"body":{"injectables/CategoryService.html":{}}}],["trees",{"_index":1375,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["tresult",{"_index":3110,"title":{},"body":{"interfaces/MessageBus.html":{},"classes/MsClient.html":{}}}],["trigger",{"_index":2840,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["triggered",{"_index":1093,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/TargetData.html":{}}}],["trim",{"_index":2197,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["trimmed",{"_index":2198,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["trimproperties",{"_index":2182,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["trimproperties(obj",{"_index":2191,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["trims",{"_index":2193,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["true",{"_index":87,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"interfaces/BasicCaptchaController.html":{},"injectables/BasicUserService.html":{},"controllers/CaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"entities/ProcessUnitEntity.html":{},"injectables/RedisCacheService.html":{},"guards/RolesGuard.html":{},"classes/TmpDirCleanerProcess.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["true})@column('varchar",{"_index":1382,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/UserEntity.html":{}}}],["true})@jointable",{"_index":1392,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserRoleEntity.html":{}}}],["true})@primarycolumn('varchar",{"_index":1897,"title":{},"body":{"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{},"entities/LanguageEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/UserRoleEntity.html":{}}}],["try",{"_index":212,"title":{},"body":{"classes/AbstractProcess.html":{},"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"injectables/MessagesBrokerService.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"miscellaneous/variables.html":{}}}],["ts_created",{"_index":2128,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/ProcessUnitEntity.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["ts_updated",{"_index":3359,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["tscreated",{"_index":405,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{}}}],["tsupdated",{"_index":3349,"title":{},"body":{"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{}}}],["two",{"_index":3872,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"index.html":{}}}],["type",{"_index":46,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/BadRequestMsException.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"classes/CacheService.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"controllers/ConfigController.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/DirectoryStructure.html":{},"injectables/DtoInterceptor.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"entities/FileEntity.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"entities/IccFileMetadataEntity.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/InvalidTokenMsException.html":{},"classes/JwtDto.html":{},"interfaces/Language.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"classes/LogService.html":{},"classes/LoginPayload.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/MessageBus.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"injectables/NotEmptyPipe.html":{},"classes/NotFoundMsException.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"controllers/ProcessController.html":{},"interfaces/ProcessLog.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"interfaces/ProcessUnit.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"injectables/RedisCacheService.html":{},"modules/RedisModule.html":{},"classes/Roles.html":{},"guards/RolesGuard.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties.html":{},"additional-documentation/properties/kp.properties.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/bruteforce.properties.html":{},"additional-documentation/properties/captcha.properties.html":{},"additional-documentation/properties/file.properties.html":{},"additional-documentation/properties/media.properties.html":{}}}],["type\"]?.description",{"_index":2329,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["type(undefined",{"_index":3292,"title":{},"body":{"classes/PageableParams.html":{}}}],["type.code",{"_index":3013,"title":{},"body":{"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{}}}],["type.entity",{"_index":3015,"title":{},"body":{"entities/MediaEntity.html":{},"modules/MediaModule.html":{}}}],["type.entity.ts",{"_index":3086,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:21",{"_index":3087,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:25",{"_index":3091,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:28",{"_index":3094,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:31",{"_index":3092,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:34",{"_index":3093,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:37",{"_index":3089,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.entity.ts:41",{"_index":3090,"title":{},"body":{"entities/MediaTypeEntity.html":{}}}],["type.ext",{"_index":4535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type.formats",{"_index":4534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typealiases",{"_index":4414,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":312,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"modules/WarlockModule.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":295,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicExplorerController.html":{},"injectables/BasicUserService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"injectables/CategoryService.html":{},"classes/DbExceptionFilter.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"entities/ExplorerActionEntity.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileService.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LanguageEntity.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaExtEntity.html":{},"entities/MediaFileEntity.html":{},"entities/MediaFormatEntity.html":{},"entities/MediaTypeEntity.html":{},"entities/ProcessLogEntity.html":{},"injectables/ProcessManagerService.html":{},"entities/ProcessUnitEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"classes/UserSubscriber.html":{},"entities/VideoFileMetadataEntity.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"dependencies.html":{},"index.html":{}}}],["typeorm/error/typeormerror",{"_index":1768,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["typeorm/subscriber/event/insertevent",{"_index":294,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["typeormerror",{"_index":1767,"title":{},"body":{"classes/DbExceptionFilter.html":{}}}],["typeormmodule",{"_index":1429,"title":{},"body":{"modules/CategoryModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LocaleModule.html":{},"modules/MediaModule.html":{},"modules/ProcessModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature",{"_index":2808,"title":{},"body":{"modules/LocaleModule.html":{},"modules/MediaModule.html":{}}}],["typeormmodule.forfeature([categoryentity",{"_index":1431,"title":{},"body":{"modules/CategoryModule.html":{}}}],["typeormmodule.forfeature([explorertargetentity",{"_index":2014,"title":{},"body":{"modules/ExplorerModule.html":{}}}],["typeormmodule.forfeature([fileentity",{"_index":2485,"title":{},"body":{"modules/FileModule.html":{}}}],["typeormmodule.forfeature([processunitentity",{"_index":3480,"title":{},"body":{"modules/ProcessModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":3747,"title":{},"body":{"modules/UserModule.html":{}}}],["types",{"_index":1044,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/MediaTypeEntity.html":{},"interfaces/TargetData.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["typescript",{"_index":972,"title":{},"body":{"interfaces/BasicAuthController.html":{},"injectables/ConfigService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"index.html":{}}}],["ui",{"_index":4029,"title":{},"body":{"index.html":{}}}],["unauthorized",{"_index":3702,"title":{},"body":{"classes/UnauthorizedMsException.html":{}}}],["unauthorizedmsexception",{"_index":3700,"title":{"classes/UnauthorizedMsException.html":{}},"body":{"classes/UnauthorizedMsException.html":{}}}],["undefined",{"_index":218,"title":{},"body":{"classes/AbstractProcess.html":{},"entities/AudioFileMetadataEntity.html":{},"injectables/BasicUserService.html":{},"entities/CategoryEntity.html":{},"interfaces/DirectoryStructure.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"entities/ExplorerTabEntity.html":{},"controllers/FileController.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GoogleCaptchaService.html":{},"entities/GpsFileMetadataEntity.html":{},"classes/GraphicCaptchaService.html":{},"entities/ImageFileMetadataEntity.html":{},"classes/LogService.html":{},"controllers/MediaController.html":{},"classes/MsException.html":{},"entities/ProcessUnitEntity.html":{},"entities/VideoFileMetadataEntity.html":{},"controllers/XmlDataBridgeController.html":{},"miscellaneous/variables.html":{}}}],["undefined:undefined",{"_index":2937,"title":{},"body":{"classes/LogService.html":{}}}],["under",{"_index":734,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["underscores",{"_index":310,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["union",{"_index":4162,"title":{},"body":{"license.html":{}}}],["unique",{"_index":389,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"entities/ExplorerTabEntity.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"entities/FileEntity.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/LanguageEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"entities/MediaEntity.html":{},"interfaces/MediaExt.html":{},"entities/MediaExtEntity.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/TargetData.html":{},"interfaces/UpsertMediaRequest.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{}}}],["uniqueobjects",{"_index":3865,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["uniqueobjects.push(obj",{"_index":3869,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["uniqueobjects.reverse",{"_index":3870,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["uniqueobjects.some((uniqueobj",{"_index":3867,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["unit",{"_index":123,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/ProcessLog.html":{},"injectables/ProcessManagerService.html":{},"interfaces/ProcessUnit.html":{},"interfaces/VideoFileMetadata.html":{}}}],["universal",{"_index":568,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["unknown",{"_index":51,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractProcess.html":{},"classes/AbstractUserSubscriber.html":{},"classes/AuthService.html":{},"interfaces/BasicExplorerController.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/GraphicCaptchaService.html":{},"classes/LogService.html":{},"classes/MsClient.html":{},"controllers/ProcessController.html":{},"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"injectables/RedisCacheService.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"controllers/XmlDataBridgeController.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["unknown_ip",{"_index":912,"title":{},"body":{"classes/AuthService.html":{},"miscellaneous/variables.html":{}}}],["unless",{"_index":744,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["unlock",{"_index":3804,"title":{},"body":{"modules/WarlockModule.html":{}}}],["unregister",{"_index":3500,"title":{},"body":{"injectables/ProcessRegisterService.html":{},"miscellaneous/enumerations.html":{}}}],["unregistercronjob",{"_index":3487,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["unregistercronjob(processdata",{"_index":3497,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["unregistered",{"_index":3501,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["unregisters",{"_index":3499,"title":{},"body":{"injectables/ProcessRegisterService.html":{}}}],["unsigned",{"_index":1401,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerTabEntity.html":{}}}],["unsubscribe",{"_index":3125,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["unsubscribe(chanel",{"_index":3134,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["unsubscribes",{"_index":3136,"title":{},"body":{"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{}}}],["up",{"_index":1127,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{},"index.html":{}}}],["update",{"_index":288,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"injectables/ProcessManagerService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["updatebyid",{"_index":1253,"title":{},"body":{"injectables/BasicUserService.html":{},"classes/UserService.html":{}}}],["updatebyid(id",{"_index":1240,"title":{},"body":{"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["updated",{"_index":1121,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"injectables/BasicUserService.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/FileService.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{}}}],["updatedatecolumn",{"_index":3361,"title":{},"body":{"entities/ProcessLogEntity.html":{}}}],["updateevent",{"_index":283,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"classes/UserSubscriber.html":{}}}],["updateloginstance",{"_index":3376,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["updateloginstance(loginstance",{"_index":3411,"title":{},"body":{"injectables/ProcessManagerService.html":{}}}],["updates",{"_index":172,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"injectables/ProcessManagerService.html":{},"interfaces/TargetData.html":{},"classes/TmpDirCleanerProcess.html":{},"index.html":{}}}],["updateuserprofile",{"_index":1218,"title":{},"body":{"interfaces/BasicUserController.html":{},"controllers/ProfileController.html":{}}}],["updateuserprofile(id",{"_index":1225,"title":{},"body":{"interfaces/BasicUserController.html":{},"controllers/ProfileController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["upgrade",{"_index":4590,"title":{},"body":{"additional-documentation/properties/auth.properties.html":{}}}],["uploaded",{"_index":2111,"title":{},"body":{"entities/FileEntity.html":{}}}],["uploadedfile",{"_index":2080,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["uploadedfile(\"file",{"_index":2091,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["uploading",{"_index":2489,"title":{},"body":{"injectables/FileService.html":{},"index.html":{}}}],["uploads",{"_index":2509,"title":{},"body":{"injectables/FileService.html":{}}}],["upsert",{"_index":1190,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["upsertmediarequest",{"_index":1191,"title":{"interfaces/UpsertMediaRequest.html":{}},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["uri",{"_index":3903,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["url",{"_index":1378,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["usage",{"_index":520,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["use",{"_index":738,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"injectables/DtoInterceptor.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{}}}],["use(req",{"_index":3946,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["useclass",{"_index":876,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/LogModule.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/UserModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["used",{"_index":355,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"injectables/AuthGuard.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"injectables/LocaleSubscriber.html":{},"classes/Roles.html":{},"interfaces/VideoFileMetadata.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["usefactory",{"_index":866,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/CaptchaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["usefactory(...args).config",{"_index":3619,"title":{},"body":{"modules/RedisModule.html":{}}}],["usefiles",{"_index":3912,"title":{},"body":{"interfaces/XdbRequest.html":{}}}],["useguards",{"_index":764,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["useguards(authguard",{"_index":1500,"title":{},"body":{"controllers/ConfigController.html":{},"controllers/ExplorerController.html":{},"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/ProcessController.html":{},"controllers/ProfileController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["useguards(authguard)@delete('/')@forroles(roles.admin",{"_index":1484,"title":{},"body":{"controllers/ConfigController.html":{}}}],["useguards(authguard)@get('/')@forroles(roles.admin",{"_index":1481,"title":{},"body":{"controllers/ConfigController.html":{}}}],["useguards(authguard)@post('/')@forroles(roles.admin",{"_index":1488,"title":{},"body":{"controllers/ConfigController.html":{}}}],["useguards(liteauthguard",{"_index":809,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(liteauthguard)@post('/logout",{"_index":728,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":2081,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["useinterceptors(fileinterceptor(\"file",{"_index":2090,"title":{},"body":{"controllers/FileController.html":{},"controllers/MediaController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["user",{"_index":71,"title":{"interfaces/User.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractUserSubscriber.html":{},"injectables/AuthGuard.html":{},"classes/AuthService.html":{},"interfaces/BasicAuthController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/JwtDto.html":{},"injectables/LiteAuthGuard.html":{},"classes/LoginPayload.html":{},"controllers/ProfileController.html":{},"classes/Roles.html":{},"interfaces/TargetData.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"classes/UserSubscriber.html":{},"interfaces/UserUpdateRequest.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/properties/bruteforce.properties.html":{}}}],["user's",{"_index":933,"title":{},"body":{"classes/AuthService.html":{},"injectables/BasicUserService.html":{}}}],["user.constants",{"_index":1269,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["user.decorator",{"_index":1972,"title":{},"body":{"controllers/ExplorerController.html":{},"controllers/ProfileController.html":{},"controllers/XmlDataBridgeController.html":{}}}],["user.decorator.ts",{"_index":4440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.entity",{"_index":3774,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["user.id",{"_index":321,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"controllers/ProfileController.html":{}}}],["user.login",{"_index":1272,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["user.password",{"_index":313,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["user.password.tostring",{"_index":315,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["user.password?.length",{"_index":316,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["user.types",{"_index":1265,"title":{},"body":{"injectables/BasicUserService.html":{},"controllers/ProfileController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{}}}],["user/entity/user",{"_index":1037,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{}}}],["user/user.module",{"_index":855,"title":{},"body":{"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/MediaModule.html":{},"modules/ProcessModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["user/user.types",{"_index":967,"title":{},"body":{"interfaces/BasicAuthController.html":{},"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"classes/ExchangeTokenPayload.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"interfaces/TargetData.html":{},"injectables/UserEntityPwdAndRolesSaveHandler.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{}}}],["user_relations",{"_index":1268,"title":{},"body":{"injectables/BasicUserService.html":{},"miscellaneous/variables.html":{}}}],["userdto",{"_index":966,"title":{"classes/UserDto.html":{}},"body":{"interfaces/BasicAuthController.html":{},"interfaces/BasicUserController.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"controllers/ProfileController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userentity",{"_index":297,"title":{"entities/UserEntity.html":{}},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/BasicUserService.html":{},"controllers/ProfileController.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"classes/UserSubscriber.html":{}}}],["userentitypwdandrolessavehandler",{"_index":3730,"title":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["useridentity",{"_index":92,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["usermodule",{"_index":854,"title":{"modules/UserModule.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/BasicUserController.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/ProcessModule.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["usermodule.forroot",{"_index":864,"title":{},"body":{"modules/AuthModule.html":{},"modules/ConfigModule.html":{},"modules/ExplorerModule.html":{},"modules/FileModule.html":{},"modules/MediaModule.html":{},"modules/ProcessModule.html":{},"modules/XmlDataBridgeModule.html":{}}}],["usermoduleoptions",{"_index":1243,"title":{},"body":{"interfaces/BasicUserController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{},"miscellaneous/typealiases.html":{}}}],["username",{"_index":1311,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["userrep",{"_index":1256,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userrole",{"_index":1234,"title":{"interfaces/UserRole.html":{}},"body":{"interfaces/BasicUserController.html":{},"guards/RolesGuard.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"entities/UserRoleEntity.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userroledto",{"_index":1236,"title":{"classes/UserRoleDto.html":{}},"body":{"interfaces/BasicUserController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userroleentity",{"_index":1036,"title":{"entities/UserRoleEntity.html":{}},"body":{"interfaces/BasicExplorerController.html":{},"entities/CategoryRestrictionEntity.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/TargetData.html":{},"entities/UserEntity.html":{},"entities/UserRoleEntity.html":{}}}],["userroles",{"_index":3641,"title":{},"body":{"guards/RolesGuard.html":{}}}],["users",{"_index":3715,"title":{},"body":{"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"index.html":{},"additional-documentation/properties/media.properties.html":{}}}],["userservice",{"_index":22,"title":{"classes/UserService.html":{}},"body":{"guards/AbstractAuthGuard.html":{},"injectables/AuthGuard.html":{},"interfaces/BasicUserController.html":{},"injectables/BasicUserService.html":{},"injectables/LiteAuthGuard.html":{},"controllers/ProfileController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userservice:42",{"_index":1260,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userservice:55",{"_index":1259,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userservice:69",{"_index":1263,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userservice:84",{"_index":1258,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["userservice:96",{"_index":1261,"title":{},"body":{"injectables/BasicUserService.html":{}}}],["usersubscriber",{"_index":3762,"title":{"classes/UserSubscriber.html":{}},"body":{"classes/UserSubscriber.html":{}}}],["userupdaterequest",{"_index":1237,"title":{"interfaces/UserUpdateRequest.html":{}},"body":{"interfaces/BasicUserController.html":{},"interfaces/User.html":{},"classes/UserDto.html":{},"interfaces/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserService.html":{},"interfaces/UserUpdateRequest.html":{}}}],["userutils",{"_index":3558,"title":{},"body":{"controllers/ProfileController.html":{},"guards/RolesGuard.html":{}}}],["userutils.hassomerole",{"_index":3561,"title":{},"body":{"controllers/ProfileController.html":{},"guards/RolesGuard.html":{}}}],["uses",{"_index":3466,"title":{},"body":{"modules/ProcessModule.html":{},"index.html":{}}}],["using",{"_index":277,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"modules/CacheModule.html":{},"modules/LogModule.html":{},"modules/MessagesBrokerModule.html":{},"injectables/MessagesBrokerService.html":{},"modules/WarlockModule.html":{},"index.html":{},"license.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["utc",{"_index":566,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["utf",{"_index":4492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utils/env.loader",{"_index":1298,"title":{},"body":{"modules/CacheModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/RedisModule.html":{},"modules/WarlockModule.html":{}}}],["utils/object.utils",{"_index":1468,"title":{},"body":{"injectables/CategoryService.html":{},"classes/LogService.html":{},"classes/MsClient.html":{}}}],["utils/user.utils",{"_index":3636,"title":{},"body":{"guards/RolesGuard.html":{}}}],["uuid",{"_index":2693,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":2692,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["v.code",{"_index":3738,"title":{},"body":{"injectables/UserEntityPwdAndRolesSaveHandler.html":{}}}],["v.codec_type",{"_index":2241,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["v4",{"_index":2691,"title":{},"body":{"classes/GraphicCaptchaService.html":{}}}],["val",{"_index":2707,"title":{},"body":{"classes/GraphicCaptchaService.html":{},"injectables/RedisCacheService.html":{}}}],["valid",{"_index":73,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/auth.properties.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["validate",{"_index":70,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["validatecaptcha",{"_index":990,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"controllers/CaptchaController.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["validatecaptcha(payload",{"_index":992,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"controllers/CaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{}}}],["validatecaptcha(request",{"_index":1001,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["validated",{"_index":2649,"title":{},"body":{"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{}}}],["validatelogin",{"_index":271,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["validatelogin(login",{"_index":289,"title":{},"body":{"classes/AbstractUserSubscriber.html":{}}}],["validates",{"_index":65,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"classes/AbstractUserSubscriber.html":{},"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"classes/UserSubscriber.html":{}}}],["validatetoken",{"_index":27,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["validatetoken(token",{"_index":62,"title":{},"body":{"guards/AbstractAuthGuard.html":{}}}],["validation",{"_index":1000,"title":{},"body":{"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/GoogleCaptchaService.html":{},"classes/GraphicCaptchaService.html":{},"additional-documentation/properties/captcha.properties.html":{}}}],["validator",{"_index":962,"title":{},"body":{"interfaces/BasicAuthController.html":{},"interfaces/BasicCaptchaController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"classes/ExchangeTokenPayload.html":{},"classes/JwtDto.html":{},"classes/LoginPayload.html":{},"classes/PageableData.html":{},"classes/PageableParams.html":{},"dependencies.html":{}}}],["validity",{"_index":40,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["value",{"_index":183,"title":{},"body":{"classes/AbstractProcess.html":{},"interfaces/AudioFileMetadata.html":{},"modules/AuthModule.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"classes/CacheService.html":{},"modules/CaptchaModule.html":{},"interfaces/ConfigItem.html":{},"injectables/ConfigService.html":{},"modules/ExplorerModule.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"injectables/FileMetadataService.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/Language.html":{},"injectables/LiteAuthGuard.html":{},"injectables/LocaleService.html":{},"interfaces/LocalizedMedia.html":{},"entities/LocalizedMediaEntity.html":{},"interfaces/LocalizedString.html":{},"entities/LocalizedStringEntity.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"modules/MediaModule.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"injectables/MessagesBrokerService.html":{},"classes/MsClient.html":{},"injectables/NotEmptyPipe.html":{},"classes/PageableParams.html":{},"injectables/ProcessManagerService.html":{},"injectables/RedisCacheService.html":{},"classes/Roles.html":{},"classes/TmpDirCleanerProcess.html":{},"interfaces/UpsertMediaRequest.html":{},"modules/UserModule.html":{},"classes/UserSubscriber.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":2858,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["value.trim",{"_index":1704,"title":{},"body":{"injectables/ConfigService.html":{}}}],["value[0",{"_index":2859,"title":{},"body":{"injectables/LocaleSubscriber.html":{}}}],["values",{"_index":1523,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/DirectoryStructure.html":{},"injectables/FileMetadataService.html":{},"interfaces/XdbRequest.html":{}}}],["valuesofproperties",{"_index":1528,"title":{},"body":{"injectables/ConfigService.html":{}}}],["valuetransformer",{"_index":4558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["varchar",{"_index":2137,"title":{},"body":{"entities/FileEntity.html":{},"entities/MediaEntity.html":{},"entities/UserEntity.html":{}}}],["variablename",{"_index":1686,"title":{},"body":{"injectables/ConfigService.html":{}}}],["variables",{"_index":1550,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["variation",{"_index":4424,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["various",{"_index":439,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"index.html":{}}}],["vector",{"_index":4066,"title":{},"body":{"index.html":{}}}],["verbal",{"_index":4217,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":2898,"title":{},"body":{"classes/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["verbose(message",{"_index":2921,"title":{},"body":{"classes/LogService.html":{}}}],["verification",{"_index":413,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["versa",{"_index":4565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":480,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/BasicFileController.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"interfaces/File.html":{},"controllers/FileController.html":{},"interfaces/FileMetadata.html":{},"modules/FileModule.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"interfaces/VideoFileMetadata.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["version\"]?.description",{"_index":2348,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["vertical",{"_index":594,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["vice",{"_index":4564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["video",{"_index":444,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{},"index.html":{}}}],["videofilemetadata",{"_index":446,"title":{"interfaces/VideoFileMetadata.html":{}},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["videofilemetadataentity",{"_index":2172,"title":{"entities/VideoFileMetadataEntity.html":{}},"body":{"entities/FileMetadataEntity.html":{},"injectables/FileMetadataService.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["videomd",{"_index":2253,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.bit_rate",{"_index":2264,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.codec_long_name",{"_index":2258,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.codec_name?.touppercase",{"_index":2256,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.color_range",{"_index":2272,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.color_space",{"_index":2274,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.display_aspect_ratio",{"_index":2270,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.height",{"_index":2262,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.r_frame_rate",{"_index":2276,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.sample_aspect_ratio",{"_index":2268,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.tags?.rotate",{"_index":2278,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["videomd.width",{"_index":2260,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["virtual",{"_index":1057,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"entities/ExplorerColumnEntity.html":{},"interfaces/ExplorerColumnRenderer.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["visit",{"_index":4096,"title":{},"body":{"index.html":{}}}],["void",{"_index":1465,"title":{},"body":{"injectables/CategoryService.html":{},"classes/DbExceptionFilter.html":{},"injectables/FileMetadataService.html":{},"classes/LogService.html":{},"interfaces/MessagesBroker.html":{},"injectables/MessagesBrokerService.html":{},"injectables/ProcessRegisterService.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"modules/XmlDataBridgeModule.html":{}}}],["vp6",{"_index":1181,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"entities/MediaTypeEntity.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["warlock",{"_index":3414,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"modules/WarlockModule.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["warlock(client",{"_index":3799,"title":{},"body":{"modules/WarlockModule.html":{}}}],["warlock.constants",{"_index":3793,"title":{},"body":{"modules/WarlockModule.html":{}}}],["warlock.lock",{"_index":3802,"title":{},"body":{"modules/WarlockModule.html":{}}}],["warlock.types",{"_index":3794,"title":{},"body":{"modules/WarlockModule.html":{}}}],["warlockfn",{"_index":3378,"title":{},"body":{"injectables/ProcessManagerService.html":{},"injectables/ProcessRegisterService.html":{},"modules/WarlockModule.html":{},"miscellaneous/typealiases.html":{}}}],["warlockmodule",{"_index":3462,"title":{"modules/WarlockModule.html":{}},"body":{"modules/ProcessModule.html":{},"modules/WarlockModule.html":{},"modules.html":{},"overview.html":{}}}],["warn",{"_index":2899,"title":{},"body":{"classes/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["warn(message",{"_index":2923,"title":{},"body":{"classes/LogService.html":{}}}],["warning",{"_index":2925,"title":{},"body":{"classes/LogService.html":{}}}],["warranties",{"_index":752,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["warranty",{"_index":4332,"title":{},"body":{"license.html":{}}}],["web",{"_index":4131,"title":{},"body":{"index.html":{},"additional-documentation/properties/auth.properties.html":{}}}],["webp",{"_index":1162,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"controllers/MediaController.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"index.html":{}}}],["webpsupport",{"_index":1210,"title":{},"body":{"interfaces/BasicMediaController.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{}}}],["website",{"_index":4098,"title":{},"body":{"index.html":{}}}],["well",{"_index":4065,"title":{},"body":{"index.html":{}}}],["where(\"file.code",{"_index":2570,"title":{},"body":{"injectables/FileService.html":{}}}],["wherever",{"_index":4297,"title":{},"body":{"license.html":{}}}],["whether",{"_index":33,"title":{},"body":{"guards/AbstractAuthGuard.html":{},"interfaces/AudioFileMetadata.html":{},"interfaces/BasicCaptchaController.html":{},"interfaces/BasicFileController.html":{},"classes/CaptchaRequest.html":{},"classes/CaptchaService.html":{},"injectables/ConfigService.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"classes/GoogleCaptchaService.html":{},"interfaces/GpsFileMetadata.html":{},"classes/GraphicCaptchaService.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"injectables/ProcessManagerService.html":{},"interfaces/VideoFileMetadata.html":{},"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"license.html":{}}}],["white",{"_index":608,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["whitebalance",{"_index":611,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["whole",{"_index":4203,"title":{},"body":{"license.html":{}}}],["whose",{"_index":1462,"title":{},"body":{"injectables/CategoryService.html":{}}}],["width",{"_index":452,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/BasicMediaController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"entities/ImageFileMetadataEntity.html":{},"interfaces/Media.html":{},"classes/MediaDto.html":{},"interfaces/MediaExt.html":{},"interfaces/MediaFile.html":{},"classes/MediaFileDto.html":{},"entities/MediaFileEntity.html":{},"interfaces/MediaFormat.html":{},"classes/MediaFormatDto.html":{},"entities/MediaFormatEntity.html":{},"classes/MediaManager.html":{},"interfaces/MediaType.html":{},"classes/MediaTypeDto.html":{},"interfaces/UpsertMediaRequest.html":{},"interfaces/VideoFileMetadata.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["width\"]?.value",{"_index":2316,"title":{},"body":{"injectables/FileMetadataService.html":{}}}],["withfiletypes",{"_index":1654,"title":{},"body":{"injectables/ConfigService.html":{}}}],["within",{"_index":4234,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":751,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"injectables/LiteAuthGuard.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"license.html":{}}}],["work",{"_index":1356,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/ConfigModule.html":{},"index.html":{},"license.html":{}}}],["working",{"_index":1426,"title":{},"body":{"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"index.html":{}}}],["works",{"_index":4198,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":4239,"title":{},"body":{"license.html":{}}}],["writelog",{"_index":136,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["writelog(message",{"_index":173,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["writerequest",{"_index":1084,"title":{},"body":{"interfaces/BasicExplorerController.html":{},"interfaces/EntitySaveHandler.html":{},"interfaces/ExplorerAction.html":{},"interfaces/ExplorerColumn.html":{},"interfaces/ExplorerColumnRenderer.html":{},"controllers/ExplorerController.html":{},"classes/ExplorerService.html":{},"interfaces/ExplorerTab.html":{},"interfaces/ExplorerTarget.html":{},"interfaces/TargetData.html":{}}}],["writes",{"_index":177,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/TmpDirCleanerProcess.html":{}}}],["writing",{"_index":749,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"controllers/CaptchaController.html":{},"modules/CaptchaModule.html":{},"entities/CategoryEntity.html":{},"modules/CategoryModule.html":{},"entities/CategoryRestrictionEntity.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"entities/ExplorerActionEntity.html":{},"entities/ExplorerColumnEntity.html":{},"entities/ExplorerColumnRendererEntity.html":{},"controllers/ExplorerController.html":{},"modules/ExplorerModule.html":{},"entities/ExplorerTabEntity.html":{},"entities/ExplorerTargetEntity.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"entities/LanguageEntity.html":{},"modules/LocaleModule.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"controllers/MediaController.html":{},"modules/MediaModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"controllers/ProcessController.html":{},"entities/ProcessLogEntity.html":{},"modules/ProcessModule.html":{},"entities/ProcessUnitEntity.html":{},"controllers/ProfileController.html":{},"modules/RedisModule.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"entities/UserRoleEntity.html":{},"modules/WarlockModule.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["written",{"_index":4218,"title":{},"body":{"license.html":{}}}],["x",{"_index":525,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["xdb",{"_index":3826,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["xdb.getxmlparser",{"_index":3951,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["xdb.parsexmlbody(req.body",{"_index":3958,"title":{},"body":{"injectables/XmlDataBridgeMiddleware.html":{}}}],["xdbaction",{"_index":3814,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbdecomposedentity",{"_index":3815,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbexportdto",{"_index":3816,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbexportparams",{"_index":3812,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"miscellaneous/typealiases.html":{}}}],["xdbexportservice",{"_index":3805,"title":{"classes/XdbExportService.html":{}},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{}}}],["xdbimportservice",{"_index":3823,"title":{"classes/XdbImportService.html":{}},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{}}}],["xdbmoduleoptions",{"_index":3909,"title":{},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{},"miscellaneous/typealiases.html":{}}}],["xdbobject",{"_index":3817,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"miscellaneous/typealiases.html":{}}}],["xdbrequest",{"_index":3893,"title":{"interfaces/XdbRequest.html":{}},"body":{"interfaces/XdbRequest.html":{}}}],["xdbrowdata",{"_index":3818,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xdbrowdatavalue",{"_index":3902,"title":{},"body":{"interfaces/XdbRequest.html":{},"miscellaneous/typealiases.html":{}}}],["xml",{"_index":3809,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"interfaces/XdbRequest.html":{},"controllers/XmlDataBridgeController.html":{},"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["xml2js",{"_index":3820,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"dependencies.html":{}}}],["xml2js.parser",{"_index":3835,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["xmldata",{"_index":3829,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{},"injectables/XmlDataBridgeMiddleware.html":{}}}],["xmldatabridgecontroller",{"_index":3915,"title":{"controllers/XmlDataBridgeController.html":{}},"body":{"controllers/XmlDataBridgeController.html":{},"modules/XmlDataBridgeModule.html":{}}}],["xmldatabridgeexportservice",{"_index":3970,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["xmldatabridgeimportservice",{"_index":3969,"title":{},"body":{"modules/XmlDataBridgeModule.html":{}}}],["xmldatabridgemiddleware",{"_index":3939,"title":{"injectables/XmlDataBridgeMiddleware.html":{}},"body":{"injectables/XmlDataBridgeMiddleware.html":{},"modules/XmlDataBridgeModule.html":{}}}],["xmldatabridgemodule",{"_index":3908,"title":{"modules/XmlDataBridgeModule.html":{}},"body":{"interfaces/XdbRequest.html":{},"modules/XmlDataBridgeModule.html":{},"modules.html":{},"miscellaneous/typealiases.html":{}}}],["y",{"_index":529,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["yargs",{"_index":3822,"title":{},"body":{"classes/XdbExportService.html":{},"classes/XdbImportService.html":{}}}],["ycbcrpositioning",{"_index":539,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["year",{"_index":346,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"entities/AudioFileMetadataEntity.html":{},"interfaces/BasicFileController.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"interfaces/VideoFileMetadata.html":{}}}],["yes",{"_index":184,"title":{},"body":{"classes/AbstractProcess.html":{},"classes/BadRequestMsException.html":{},"classes/CacheService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"classes/ExplorerService.html":{},"classes/FileManager.html":{},"classes/FileMd.html":{},"injectables/FileMetadataService.html":{},"injectables/FileService.html":{},"classes/ForbiddenMsException.html":{},"classes/InvalidTokenMsException.html":{},"injectables/LocaleService.html":{},"classes/LogService.html":{},"classes/MediaManager.html":{},"interfaces/MessageBus.html":{},"classes/MsClient.html":{},"classes/MsException.html":{},"classes/NotFoundMsException.html":{},"injectables/RedisCacheService.html":{},"classes/TmpDirCleanerProcess.html":{},"classes/TooManyRequestsMsException.html":{},"classes/UnauthorizedMsException.html":{}}}],["z0",{"_index":303,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/ConfigService.html":{}}}],["z][_a",{"_index":1692,"title":{},"body":{"injectables/ConfigService.html":{}}}],["za",{"_index":302,"title":{},"body":{"classes/AbstractUserSubscriber.html":{},"injectables/ConfigService.html":{}}}],["zerofill",{"_index":707,"title":{},"body":{"entities/AudioFileMetadataEntity.html":{},"entities/CategoryEntity.html":{},"entities/CategoryRestrictionEntity.html":{},"entities/FileEntity.html":{},"entities/FileMetadataEntity.html":{},"entities/GpsFileMetadataEntity.html":{},"entities/IccFileMetadataEntity.html":{},"entities/ImageFileMetadataEntity.html":{},"entities/LocalizedMediaEntity.html":{},"entities/LocalizedStringEntity.html":{},"entities/MediaEntity.html":{},"entities/MediaFileEntity.html":{},"entities/ProcessLogEntity.html":{},"entities/VideoFileMetadataEntity.html":{}}}],["zip",{"_index":3987,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":612,"title":{},"body":{"interfaces/AudioFileMetadata.html":{},"interfaces/BasicFileController.html":{},"modules/CacheModule.html":{},"modules/CategoryModule.html":{},"modules/ConfigModule.html":{},"interfaces/File.html":{},"interfaces/FileMetadata.html":{},"interfaces/GpsFileMetadata.html":{},"interfaces/IccFileMetadata.html":{},"interfaces/ImageFileMetadata.html":{},"modules/LocaleModule.html":{},"modules/MessagesBrokerModule.html":{},"modules/MsClientModule.html":{},"modules/ProcessModule.html":{},"interfaces/VideoFileMetadata.html":{},"modules/WarlockModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AbstractAuthGuard.html":{"url":"guards/AbstractAuthGuard.html","title":"guard - AbstractAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AbstractAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                lib/shared/guards/abstract-auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    An abstract class for creating authentication guards.\n\n                \n\n\n                \n                Implements\n                \n                \n                            CanActivate\n                \n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                cacheService\n                            \n                            \n                                    Protected\n                                fetchUser\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                logger\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                getAccessTokenFromRequest\n                            \n                            \n                                    Private\n                                    Async\n                                validateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/guards/abstract-auth.guard.ts:47\n                        \n                    \n\n\n            \n                \n                        Determines whether the current request is allowed to proceed based on the presence and validity of an access token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe execution context of the request.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A boolean indicating whether the request is allowed to proceed.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAccessTokenFromRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAccessTokenFromRequest(req: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/guards/abstract-auth.guard.ts:83\n                        \n                    \n\n\n            \n                \n                        Extracts the access token from the request.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe request object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The access token if found, otherwise null.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/guards/abstract-auth.guard.ts:72\n                        \n                    \n\n\n            \n                \n                        Validates the given access token by checking it against the store.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe access token to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The user identity if the token is valid, otherwise null.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  ForbiddenException,\n  Logger,\n} from \"@nestjs/common\";\nimport {\n  ACCESS_TOKEN_ERROR_MSG,\n  AUTH_ACCESS_TOKEN_PREFIX,\n  AUTH_JWT_CACHE_PREFIX,\n} from \"../../common/auth/auth.constants\";\nimport { Request } from \"express\";\nimport { CacheService } from \"../modules/cache/cache.types\";\nimport { UserService } from \"../../common/user/user.types\";\nimport { REQUEST_PROPS } from \"../constants\";\n\n/**\n * An abstract class for creating authentication guards.\n */\nexport abstract class AbstractAuthGuard implements CanActivate {\n  protected abstract readonly logger: Logger;\n  protected abstract readonly cacheService: CacheService;\n  protected abstract readonly userService: UserService;\n  protected fetchUser = true;\n\n  /**\n   * Determines whether the current request is allowed to proceed based on the presence and validity of an access token.\n   * @param context - The execution context of the request.\n   * @returns A boolean indicating whether the request is allowed to proceed.\n   */\n  async canActivate(context: ExecutionContext) {\n    const req = context.switchToHttp().getRequest();\n    const token = this.getAccessTokenFromRequest(req);\n    const userIdentity = await this.validateToken(token);\n    if (userIdentity) {\n      req[REQUEST_PROPS.accessToken] = token;\n    } else {\n      this.logger.warn(`Invalid token: ${token}`);\n      throw new ForbiddenException(ACCESS_TOKEN_ERROR_MSG);\n    }\n    if (this.fetchUser) {\n      const user = await this.userService.findByLogin(userIdentity);\n      if (!user) {\n        throw new ForbiddenException(ACCESS_TOKEN_ERROR_MSG);\n      }\n      req[REQUEST_PROPS.currentUser] = user;\n    }\n    return true;\n  }\n\n  /**\n   * Validates the given access token by checking it against the store.\n   * @param token - The access token to validate.\n   * @returns The user identity if the token is valid, otherwise null.\n   */\n  private async validateToken(token: string) {\n    return this.cacheService.get(\n      `${AUTH_JWT_CACHE_PREFIX}:${AUTH_ACCESS_TOKEN_PREFIX}:${token}`,\n    );\n  }\n\n  /**\n   * Extracts the access token from the request.\n   * @param req - The request object.\n   * @returns The access token if found, otherwise null.\n   */\n  private getAccessTokenFromRequest(req: Request) {\n    if (req.cookies?.accessToken) {\n      return req.cookies.accessToken;\n    }\n    if (req.headers?.authorization) {\n      const authorizationHeader = req.headers.authorization;\n      const parts = authorizationHeader.match(/Bearer\\s+(\\S+)\\s*(.+)?/);\n      if (!parts.length) {\n        return null;\n      }\n      return parts[1];\n    }\n    return null;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractProcess.html":{"url":"classes/AbstractProcess.html","title":"class - AbstractProcess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractProcess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/abstract-process.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing a process unit managing instance.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                logInstance\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                pmService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                execute\n                            \n                            \n                                    Private\n                                    Async\n                                getStatus\n                            \n                            \n                                    Protected\n                                    Async\n                                onCrash\n                            \n                            \n                                    Protected\n                                    Async\n                                onFinish\n                            \n                            \n                                    Protected\n                                    Async\n                                onStop\n                            \n                            \n                                    Private\n                                    Async\n                                setStatus\n                            \n                            \n                                    Async\n                                start\n                            \n                            \n                                    Async\n                                stop\n                            \n                            \n                                    Protected\n                                    Async\n                                writeLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in lib/common/process/abstract-process.ts:35\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/abstract-process.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessLogEntity\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/abstract-process.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        pmService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessManagerService\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/abstract-process.ts:32\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise<>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:165\n                        \n                    \n\n\n            \n                \n                        Gets the current status of the process.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The current process status.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onCrash\n                        \n                    \n                \n            \n            \n                \n                        \n                    onCrash(error: Error)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:157\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process crashes.\nCan be overridden by subclasses if needed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error that caused the crash.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onFinish\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFinish()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:140\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process finishes.\nCan be overridden by subclasses if needed.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onStop\n                        \n                    \n                \n            \n            \n                \n                        \n                    onStop()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:148\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process stops.\nCan be overridden by subclasses if needed.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    setStatus(status: Status)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:173\n                        \n                    \n\n\n            \n                \n                        Sets the status of the process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            Status\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new status to set.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:44\n                        \n                    \n\n\n            \n                \n                        Starts the process and handles its execution.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:80\n                        \n                    \n\n\n            \n                \n                        Stops the process and updates its status.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        writeLog\n                        \n                    \n                \n            \n            \n                \n                        \n                    writeLog(message: string, data?, level)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/abstract-process.ts:94\n                        \n                    \n\n\n            \n                \n                        Writes a log entry with the specified message, data, and log level.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe log message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nOptional additional data.\n\n\n                                            \n                                        \n                                        \n                                                level\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    LogLevel.Log\n                                            \n\n                                            \n                                                    \nThe log level (default: LogLevel.Log).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Process } from \"./process.constants\";\nimport { Logger } from \"@nestjs/common\";\nimport { ProcessManagerService } from \"./process-manager.service\";\nimport { ProcessLogEntity } from \"./entity/process.log.entity\";\nimport { ObjectUtils } from \"../../shared/utils/object.utils\";\nimport registerProcess = Process.registerProcess;\nimport Status = Process.Status;\nimport inspect = ObjectUtils.inspect;\nimport LogLevel = Process.LogLevel;\n\n/**\n * Abstract class representing a process unit managing instance.\n */\nexport abstract class AbstractProcess {\n  protected abstract readonly logger: Logger;\n  protected abstract readonly pmService: ProcessManagerService;\n  private logInstance: ProcessLogEntity;\n\n  protected abstract execute(): Promise;\n\n  protected constructor() {\n    registerProcess(this);\n  }\n\n  /**\n   * Starts the process and handles its execution.\n   */\n  async start() {\n    const status = await this.getStatus();\n    if (status === Status.Execute) {\n      this.logger.warn(\n        `Process with id ${this.constructor.name} now executed, can't start that`,\n      );\n      return;\n    }\n    this.logInstance = await this.pmService.createLogInstance(\n      this.constructor.name,\n    );\n    await this.writeLog(`Start process with id ${this.constructor.name}`);\n    await this.setStatus(Status.Execute);\n    try {\n      await this.execute();\n      await this.setStatus(Status.Ready);\n      await this.onFinish();\n      await this.writeLog(\n        `Process with id ${this.constructor.name} was finished`,\n      );\n      this.logInstance = undefined;\n    } catch (e) {\n      await this.setStatus(Status.Crashed);\n      await this.onCrash(e);\n      await this.writeLog(\n        `Process with id ${this.constructor.name} was crashed`,\n        e,\n        LogLevel.Error,\n      );\n      this.logInstance = undefined;\n    }\n  }\n\n  /**\n   * Stops the process and updates its status.\n   */\n  async stop() {\n    await this.writeLog(`Try to stop process with id ${this.constructor.name}`);\n    await this.setStatus(Status.Ready);\n    await this.onStop();\n    await this.writeLog(`Process with id ${this.constructor.name} was stopped`);\n    this.logInstance = undefined;\n  }\n\n  /**\n   * Writes a log entry with the specified message, data, and log level.\n   * @param message - The log message.\n   * @param data - Optional additional data.\n   * @param level - The log level (default: LogLevel.Log).\n   */\n  protected async writeLog(\n    message: string,\n    data?: unknown,\n    level = LogLevel.Log,\n  ) {\n    switch (level) {\n      case LogLevel.Log:\n        this.logger.log(message, data);\n        break;\n      case LogLevel.Error:\n        this.logger.error(message, data);\n        break;\n      case LogLevel.Warn:\n        this.logger.warn(message, data);\n        break;\n      case LogLevel.Debug:\n        this.logger.debug(message, data);\n        break;\n      case LogLevel.Verbose:\n        this.logger.verbose(message, data);\n        break;\n    }\n    if (!this.logInstance) {\n      return;\n    }\n    const date = new Date();\n    let msg = inspect(message);\n    if (\n      (msg.startsWith(`'`) && msg.endsWith(`'`)) ||\n      (msg.startsWith(`\"`) && msg.endsWith(`\"`))\n    ) {\n      msg = msg.substring(1, msg.length - 1);\n    }\n    if (data) {\n      msg += inspect(data);\n    }\n    msg = msg.replace(/\\[/g, \"{\");\n    msg = msg.replace(/]/g, \"}\");\n    this.logInstance.content += `[${process.pid} | ${date.toLocaleString()} | ${level}] ${msg} >>>\\n`;\n    await this.pmService.updateLogInstance(this.logInstance);\n  }\n\n  /**\n   * Callback method that is called when the process finishes.\n   * Can be overridden by subclasses if needed.\n   */\n  protected async onFinish() {\n    // implement callback in child class if it needs\n  }\n\n  /**\n   * Callback method that is called when the process stops.\n   * Can be overridden by subclasses if needed.\n   */\n  protected async onStop() {\n    // implement callback in child class if it needs\n  }\n\n  /**\n   * Callback method that is called when the process crashes.\n   * Can be overridden by subclasses if needed.\n   * @param error - The error that caused the crash.\n   */\n  protected async onCrash(error: Error) {\n    // implement callback in child class if it needs\n  }\n\n  /**\n   * Gets the current status of the process.\n   * @returns The current process status.\n   */\n  private async getStatus() {\n    return await this.pmService.getProcessUnitStatus(this.constructor.name);\n  }\n\n  /**\n   * Sets the status of the process.\n   * @param status - The new status to set.\n   */\n  private async setStatus(status: Status) {\n    await this.pmService.setProcessUnitStatus(this.constructor.name, status);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractUserSubscriber.html":{"url":"classes/AbstractUserSubscriber.html","title":"class - AbstractUserSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractUserSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/abstract-user-subscriber.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class for user entity subscribers to handle specific events.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                hashPassword\n                            \n                            \n                                    Protected\n                                    Async\n                                hashPasswordIfNeeded\n                            \n                            \n                                    Protected\n                                    Async\n                                validateLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Type\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/user/abstract-user-subscriber.ts:28\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/abstract-user-subscriber.ts:76\n                        \n                    \n\n\n            \n                \n                        Hashes a password using bcrypt.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe password to hash.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The hashed password.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        hashPasswordIfNeeded\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashPasswordIfNeeded(event: InsertEvent | UpdateEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/abstract-user-subscriber.ts:48\n                        \n                    \n\n\n            \n                \n                        Hashes the user password if it has changed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        InsertEvent | UpdateEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe insert or update event.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        validateLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateLogin(login: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/abstract-user-subscriber.ts:35\n                        \n                    \n\n\n            \n                \n                        Validates the login format.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                login\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe login string to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException } from \"@nestjs/common\";\nimport { InsertEvent } from \"typeorm/subscriber/event/InsertEvent\";\nimport { UpdateEvent } from \"typeorm\";\nimport * as bcrypt from \"bcrypt\";\nimport { Type } from \"@nestjs/common/interfaces/type.interface\";\nimport { UserEntity } from \"./entity/user.entity\";\n\n/**\n * Abstract class for user entity subscribers to handle specific events.\n */\nexport abstract class AbstractUserSubscriber {\n  protected abstract readonly type: Type;\n\n  /**\n   * Validates the login format.\n   * @param login - The login string to validate.\n   * @throws BadRequestException if the login format is invalid.\n   */\n  protected async validateLogin(login: string) {\n    const loginRegex = /^[A-Za-z0-9_]+$/;\n    if (!loginRegex.test(login)) {\n      throw new BadRequestException(\n        \"Login must contain only Latin letters, numbers, and underscores.\",\n      );\n    }\n  }\n\n  /**\n   * Hashes the user password if it has changed.\n   * @param event - The insert or update event.\n   */\n  protected async hashPasswordIfNeeded(event: InsertEvent | UpdateEvent) {\n    const { entity: user, manager } = event;\n    if (typeof user.password === \"number\") {\n      user.password = user.password.toString();\n    }\n    if (!user.password?.length) {\n      delete user.password;\n      return;\n    }\n    const foundUser: T = await manager.findOne(this.type, {\n      where: { id: user.id },\n    });\n    if (foundUser) {\n      if (await bcrypt.compare(user.password, foundUser.password)) {\n        user.password = foundUser.password;\n      } else {\n        user.password = await this.hashPassword(user.password);\n      }\n    } else {\n      user.password = await this.hashPassword(user.password);\n    }\n  }\n\n  /**\n   * Hashes a password using bcrypt.\n   * @param password - The password to hash.\n   * @returns The hashed password.\n   */\n  protected async hashPassword(password: string) {\n    return await bcrypt.hash(password, 10);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AudioFileMetadata.html":{"url":"interfaces/AudioFileMetadata.html","title":"interface - AudioFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AudioFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing audio file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            album\n                                        \n                                \n                                \n                                        \n                                            artist\n                                        \n                                \n                                \n                                        \n                                            bitrate\n                                        \n                                \n                                \n                                        \n                                            codec\n                                        \n                                \n                                \n                                        \n                                            codecProfile\n                                        \n                                \n                                \n                                        \n                                            container\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            genre\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            numberOfChannels\n                                        \n                                \n                                \n                                        \n                                            sampleRate\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            tool\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the album that the audio track belongs to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artist:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the artist or band who performed the audio track.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bitrate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bitrate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The bitrate of the audio file, indicating the amount of data processed per second.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        codec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codec:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The audio codec used for encoding or decoding the audio data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        codecProfile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codecProfile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The codec profile used for encoding the audio data, indicating specific settings and capabilities\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        container\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        container:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The format of the audio file container, which encapsulates audio streams and metadata\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The duration of the audio file in seconds\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The genre of the audio track\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the identification number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The music label or company that released the audio trac\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfChannels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfChannels:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of audio channels in the file, indicating the sound configuration (e.g., mono, stereo)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleRate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleRate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The sample rate of the audio file, indicating the number of samples per second\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the audio file or track\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tool\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tool:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The tool or software used to encode or process the audio file\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The year the audio track was release\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  /** This field contains the identification number */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file */\n  name: string;\n  /** This field stores the path to the file on the server */\n  path: string;\n  /** This field specifies the type of access to the file, public or private */\n  public: boolean;\n  /** This field stores the size of the file in bytes */\n  size: number;\n  /** This field stores the icon of the file */\n  icon: Media;\n  /** This field stores the media preview of the file  */\n  preview: Media;\n  /** This field contains a reference to the FileMetadata container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The MIME type of the file, indicating the nature and format of the file content */\n  mime: string;\n  /** The file extension, indicating the file format */\n  ext: string;\n  /** The cryptographic hash of the file content, used for integrity verification and identification */\n  hash: string;\n  /** The ICC (International Color Consortium) profile data associated with the file, used for color management */\n  icc: IccFileMetadata;\n  /** GPS data associated with the location where the file was created, including latitude, longitude and elevation */\n  gps: GpsFileMetadata;\n  /** This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics */\n  image: ImageFileMetadata;\n  /** This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created */\n  exif: ExifFileMetadata;\n  /** This field is used to store information about the structure and properties of the audio file */\n  audio: AudioFileMetadata;\n  /** This field is used to store information about the structure and properties of the video recording*/\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The number of bits used to represent the color of a single pixel in the image */\n  bps: number;\n  /** The width of the image in pixels */\n  width: number;\n  /** The height of the image in pixels */\n  height: number;\n  /** The number of color components used to represent the color of the image */\n  colorComponents: number;\n  /** The subsampling method used for the image, indicating how color information is sampled */\n  subsampling: string;\n  /** The date and time when the image was created or last modified */\n  dateTime: Date;\n  /** The bit depth of the image, indicating the number of bits used for color representation */\n  bitDepth: number;\n  /** The color type of the image, indicating the color model used */\n  colorType: string;\n  /** Contains the compression method used to reduce the size of the image */\n  compression: string;\n  /** Specifies the filtering method used to process the image data before compressing it */\n  filter: string;\n  /**  Indicates whether interlacing is used in the image, allowing for progressive display */\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The version of the ICC profile, indicating the specification version used to create the color profile. */\n  profileVersion: string;\n  /** The class of the ICC profile, indicating its primary purpose and type */\n  profileClassValue: string;\n  /** The name of the ICC profile class, describing its primary purpose */\n  profileClassName: string;\n  /** The connection space of the ICC profile, representing the intermediate color space used for color conversions. */\n  connectionSpace: string;\n  /** The date and time when the ICC profile was created or last modified */\n  iccProfileDate: Date;\n  /** A unique signature of the ICC profile used to confirm its authenticity and validity */\n  iccSignature: string;\n  /** The primary platform or operating system for which the ICC profile was created or optimized */\n  primaryPlatform: string;\n  /** The manufacturer of the device for which the ICC profile was created */\n  deviceManufacturer: string;\n  /** The model number of the device for which the ICC profile was created */\n  deviceModelNumber: string;\n  /**  Indicates the type of rendering to be used when converting colors between color spaces */\n  renderingIntentValue: string;\n  /** Specifies the name of the rendering type that is used when converting colors between color spaces */\n  renderingIntentName: string;\n  /** The name or identifier of the creator of the ICC profile */\n  profileCreator: string;\n  /** A description of the ICC profile, explaining its purpose and characteristics */\n  iccDescription: string;\n  /** The copyright information for the ICC profile, indicating ownership and usage rights */\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** This field specifies the manufacturer of the camera */\n  make: string;\n  /** This field specifies the model of the camera  */\n  model: string;\n  /** Indicates image display orientation based on EXIF metadata */\n  orientation: string;\n  /** X-side resolution of the photo*/\n  resolutionX: string;\n  /** Y-side resolution of the photo*/\n  resolutionY: string;\n  /** Unit of image resolution */\n  resolutionUnit: string;\n  /** The field contains information about the software that was used to create or edit the image */\n  software: string;\n  /** This field is responsible for specifying the method of placing these color components Y, Cb and Cr relative to the image pixels */\n  ycbCrPositioning: string;\n  /** Pointer to the beginning of an EXIF IFD block in a file inside a TIFF file */\n  exifIfdPointer: string;\n  /** Contains information about the location where the image was taken */\n  gpsInfoIfdPointer: string;\n  /** Exposure time (shutter speed) when capturing an image */\n  exposureTime: string;\n  /** Contains data on the aperture number (aperture) when capturing an image */\n  fNumber: string;\n  /** Contains data on the exposure mode (shutter speed and aperture) used to capture the image */\n  exposureProgram: string;\n  /** Contains data on the ISO value (the sensitivity of the camera sensor to light) */\n  isoSpeedRatings: string;\n  /** Contains EXIF specification version data */\n  exifVersion: string;\n  /** Contains time offset data relative to UTC (Coordinated Universal Time) for the date and time when the image was taken */\n  offsetTime: string;\n  /** Contains data on the shutter speed of the camera */\n  shutterSpeedValue: string;\n  /** Contains data on the aperture (aperture) value used to capture the image */\n  aperture: string;\n  /** Contains data on the brightness level of the image */\n  brightness: string;\n  /** Contains exposure compensation data  */\n  exposureBias: string;\n  /** Contains data on the maximum aperture (aperture) value  */\n  maxAperture: string;\n  /** Contains data on the distance to the subject in millimeters */\n  subjectDistance: string;\n  /** Contains data on the light sensing mode used by the camera when capturing an image */\n  meteringMode: string;\n  /** Contains data on the status and operation of the flash during image capture */\n  flash: string;\n  /** Contains data about the focal length of the camera lens */\n  focalLength: string;\n  /** The Flashpix format version used for the image */\n  flashpixVersion: string;\n  /** The color space of the image data */\n  colorSpace: string;\n  /** Width (horizontal resolution) of the image in pixels */\n  pixelXDimension: string;\n  /** Contains data about the vertical resolution (height) of the image in pixels */\n  pixelYDimension: string;\n  /** Pointer to the start of the Interoperability IFD block for compatibility metadata */\n  interoperabilityIfdPointer: string;\n  /** Indicates the method used by the camera sensor to capture the image */\n  sensingMethod: string;\n  /** The type of scene captured in the image, indicating if it was taken with a digital camera */\n  sceneType: string;\n  /** Indicates whether the image was processed with custom rendering */\n  customRendered: string;\n  /** The exposure mode used by the camera during the shot */\n  exposureMode: string;\n  /** The white balance setting used during the shot */\n  whiteBalance: string;\n  /** The digital zoom ratio applied during the shot */\n  digitalZoomRatio: string;\n  /** The type of scene capture mode used during the shot */\n  sceneCaptureType: string;\n  /** The level of contrast applied to the image */\n  contrast: string;\n  /** The level of color saturation applied to the image */\n  saturation: string;\n  /** The level of sharpness applied to the image */\n  sharpness: string;\n  /** The distance range to the subject during the shot */\n  subjectDistanceRange: string;\n  /** The manufacturer of the lens used to capture the image */\n  lensMake: string;\n  /** The model of the lens used to capture the image */\n  lensModel: string;\n  /** Indicates whether the image is a composite, created by combining multiple images or applying effects */\n  compositeImage: string;\n  /** The interoperability index indicating the standard used for ensuring image compatibility */\n  interoperabilityIndex: string;\n  /** The version of the interoperability standard used for the image */\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  /** Representing identifier of meta-data object */\n  id: number;\n  /** Representing gps-latitude parameter */\n  latitude: number;\n  /** Representing gps-longitude parameter */\n  longitude: number;\n  /** Representing gps-altitude parameter */\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** A codec ( algorithm or method ) used to compress and decompress a video file */\n  codec: string;\n  /** The container format of the video file, indicating how video, audio, and other data streams are packaged together */\n  container: string;\n  /** The width of the video in pixels */\n  width: number;\n  /** The height of the video in pixels */\n  height: number;\n  /**  The bitrate of the video file, indicating the amount of data processed per second */\n  bitrate: number;\n  /** The duration of the video file in seconds */\n  duration: number;\n  /** A sample video aspect ratio indicating how pixels are distributed in a video stream */\n  sampleAspectRatio: string;\n  /** The display aspect ratio of the video, indicating the ratio of width to height for playback.*/\n  displayAspectRatio: string;\n  /** Video color range, indicating the set of colors used in the video file */\n  colorRange: string;\n  /** The color space of the video, indicating how colors are represented and interpreted */\n  colorSpace: string;\n  /** The frame rate of the video, indicating the number of frames displayed per second */\n  frameRate: string;\n  /** The rotation angle of the video in degrees, indicating its orientation */\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The format of the audio file container, which encapsulates audio streams and metadata */\n  container: string;\n  /** The audio codec used for encoding or decoding the audio data */\n  codec: string;\n  /** The sample rate of the audio file, indicating the number of samples per second */\n  sampleRate: number;\n  /**  The number of audio channels in the file, indicating the sound configuration (e.g., mono, stereo) */\n  numberOfChannels: number;\n  /**  The bitrate of the audio file, indicating the amount of data processed per second. */\n  bitrate: number;\n  /** The codec profile used for encoding the audio data, indicating specific settings and capabilities */\n  codecProfile: string;\n  /** The tool or software used to encode or process the audio file */\n  tool: string;\n  /** The duration of the audio file in seconds */\n  duration: number;\n  /** The title of the audio file or track */\n  title: string;\n  /** The name of the artist or band who performed the audio track. */\n  artist: string;\n  /** The name of the album that the audio track belongs to */\n  album: string;\n  /** The year the audio track was release */\n  year: number;\n  /** The genre of the audio track */\n  genre: string;\n  /** The music label or company that released the audio trac */\n  label: string;\n}\n\nexport interface BasicFileController {\n  createFile(file: Express.Multer.File, isPublic: string): Promise;\n\n  getPrivateFile(res: Response, id: number): Promise;\n\n  getFile(id: number): Promise;\n\n  removeFile(id: number): Promise;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AudioFileMetadataEntity.html":{"url":"entities/AudioFileMetadataEntity.html","title":"entity - AudioFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AudioFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/audio-file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the audio metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                album\n                            \n                            \n                                    \n                                    \n                                artist\n                            \n                            \n                                    \n                                    \n                                bitrate\n                            \n                            \n                                    \n                                    \n                                codec\n                            \n                            \n                                    \n                                    \n                                codecProfile\n                            \n                            \n                                    \n                                    \n                                container\n                            \n                            \n                                    \n                                    \n                                duration\n                            \n                            \n                                    \n                                    \n                                genre\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                label\n                            \n                            \n                                    \n                                    \n                                numberOfChannels\n                            \n                            \n                                    \n                                    \n                                sampleRate\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                tool\n                            \n                            \n                                    \n                                    \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        album\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        artist\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bitrate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        codec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        codecProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'codec_profile', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        genre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        numberOfChannels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'number_of_channels', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sampleRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'sample_rate', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/audio-file-metadata.entity.ts:63\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { AudioFileMetadata } from \"../file.types\";\n\n/**\n * The entity stores the audio metadata of the file\n */\n@Entity(\"file_metadata_audio\")\nexport class AudioFileMetadataEntity implements AudioFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  container: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  codec: string;\n\n  @Index()\n  @Column(\"int\", { name: \"sample_rate\", nullable: true })\n  sampleRate: number;\n\n  @Index()\n  @Column(\"int\", { name: \"number_of_channels\", nullable: true })\n  numberOfChannels: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true })\n  bitrate: number;\n\n  @Index()\n  @Column(\"varchar\", { name: \"codec_profile\", nullable: true })\n  codecProfile: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  tool: string;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  duration: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  title: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  artist: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  album: string;\n\n  @Index()\n  @Column(\"int\", { nullable: true })\n  year: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  genre: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  label: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                exchange\n                            \n                            \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        exchange\n                        \n                    \n                \n            \n            \n                \n                        \n                    exchange(payload: ExchangeTokenPayload, request: Request, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseDto(JwtDto)@Post('/exchange-token')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/auth/auth.controller.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ExchangeTokenPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(payload: LoginPayload, request: Request, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseDto(JwtDto)@Post('/login')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/auth/auth.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            LoginPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(token: string, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LiteAuthGuard)@Post('/logout')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/auth/auth.controller.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Body,\n  Controller,\n  ForbiddenException,\n  Post,\n  Req,\n  Res,\n  UseGuards,\n} from \"@nestjs/common\";\nimport { Request, Response } from \"express\";\nimport { CaptchaConfig } from \"@gen-src/captcha.config\";\nimport { AuthService } from \"./auth.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport { CaptchaService } from \"../captcha/captcha.types\";\nimport { ResponseDto } from \"../../shared/decorators/response-dto.decorator\";\nimport { LiteAuthGuard } from \"../../shared/guards/lite-auth.guard\";\nimport { AccessToken } from \"../../shared/decorators/access-token.decorator\";\nimport {\n  BasicAuthController,\n  ExchangeTokenPayload,\n  JwtDto,\n  LoginPayload,\n} from \"./auth.types\";\n\n@Controller(\"/auth\")\nexport class AuthController implements BasicAuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly cacheService: CacheService,\n    private readonly captchaService: CaptchaService,\n  ) {}\n\n  @ResponseDto(JwtDto)\n  @Post(\"/login\")\n  async login(\n    @Body() payload: LoginPayload,\n    @Req() request: Request,\n    @Res({ passthrough: true }) response: Response,\n  ): Promise {\n    const captchaEnabled = await this.cacheService.getBoolean(\n      CaptchaConfig.ENABLED,\n    );\n    if (captchaEnabled) {\n      const res = await this.captchaService.validateCaptcha({\n        id: payload.captchaId,\n        data: payload.captchaPayload,\n      });\n      if (!res) {\n        throw new ForbiddenException(\"Invalid captcha\");\n      }\n    }\n    if (request.ip) {\n      payload.ipAddress = request.ip;\n    }\n    const data = await this.authService.authenticate(payload);\n    response.cookie(\"accessToken\", data.accessToken, {\n      sameSite: true,\n      httpOnly: true,\n      expires: data.atExp,\n    });\n    response.cookie(\"refreshToken\", data.refreshToken, {\n      sameSite: true,\n      httpOnly: true,\n      expires: data.rtExp,\n    });\n    return data;\n  }\n\n  @UseGuards(LiteAuthGuard)\n  @Post(\"/logout\")\n  async logout(\n    @AccessToken() token: string,\n    @Res({ passthrough: true }) response: Response,\n  ): Promise {\n    const result = await this.authService.invalidateToken(token);\n    response.clearCookie(\"accessToken\");\n    response.clearCookie(\"refreshToken\");\n    return { result };\n  }\n\n  @ResponseDto(JwtDto)\n  @Post(\"/exchange-token\")\n  async exchange(\n    @Body() payload: ExchangeTokenPayload,\n    @Req() request: Request,\n    @Res({ passthrough: true }) response: Response,\n  ): Promise> {\n    const token = payload?.token ?? request.cookies?.refreshToken;\n    const data = await this.authService.exchangeToken(token);\n    response.cookie(\"accessToken\", data.accessToken, {\n      sameSite: true,\n      httpOnly: true,\n      expires: data.atExp,\n    });\n    response.cookie(\"refreshToken\", data.refreshToken, {\n      sameSite: true,\n      httpOnly: true,\n      expires: data.rtExp,\n    });\n    return data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/guards/auth.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                An authentication guard that extends AbstractAuthGuard, used for full authentication including user fetching.\n\n            \n\n            \n                Extends\n            \n            \n                            AbstractAuthGuard\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, userService: UserService, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/guards/auth.guard.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { AbstractAuthGuard } from \"./abstract-auth.guard\";\nimport { LOGGER } from \"../modules/log/log.constants\";\nimport { UserService } from \"../../common/user/user.types\";\nimport { CacheService } from \"../modules/cache/cache.types\";\n\n/**\n * An authentication guard that extends AbstractAuthGuard, used for full authentication including user fetching.\n */\n@Injectable()\nexport class AuthGuard extends AbstractAuthGuard {\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    protected readonly userService: UserService,\n    protected readonly cacheService: CacheService,\n  ) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/auth/auth.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module providing auth process.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: AuthModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.module.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            AuthModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      service: AuthorizationService,\n      controller: AuthController,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { JwtModule } from \"@nestjs/jwt\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { AuthorizationService } from \"./authorization.service\";\nimport { AuthModuleOptions } from \"./auth.types\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { UserModule } from \"../user/user.module\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport { AuthConfig } from \"../../../gen-src/auth.config\";\nimport { AuthService } from \"./auth.constants\";\nimport { AuthController } from \"./auth.controller\";\nimport { CaptchaModule } from \"../captcha/captcha.module\";\n\n/**\n * Module providing auth process.\n */\n@Module({})\nexport class AuthModule {\n  static forRoot(\n    options: AuthModuleOptions = {\n      service: AuthorizationService,\n      controller: AuthController,\n    },\n  ): DynamicModule {\n    return {\n      module: AuthModule,\n      controllers: [options.controller],\n      imports: [\n        PassportModule,\n        CacheModule,\n        LogModule,\n        CaptchaModule.forRoot(),\n        UserModule.forRoot(),\n        JwtModule.registerAsync({\n          imports: [CacheModule],\n          inject: [CacheService],\n          useFactory: async (cs: CacheService) => {\n            return {\n              secret: await cs.get(AuthConfig.JWT_SECRET),\n              signOptions: {\n                expiresIn: await cs.getNumber(\n                  AuthConfig.ACCESS_TOKEN_EXPIRATION,\n                ),\n              },\n            };\n          },\n        }),\n      ],\n      providers: [\n        {\n          provide: AuthService,\n          useClass: options.service,\n        },\n      ],\n      exports: [AuthService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthService.html":{"url":"classes/AuthService.html","title":"class - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract service class for authentication and authorization.\nDefines the methods that must be implemented by any derived service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                authenticate\n                            \n                            \n                                    Abstract\n                                exchangeToken\n                            \n                            \n                                    Abstract\n                                invalidateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        authenticate\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticate(data: LoginPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.constants.ts:109\n                        \n                    \n\n\n            \n                \n                        Authenticate the user with the provided login payload.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nLoginPayload object with user login information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A Promise that resolves to a JwtDto containing access and refresh tokens.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        exchangeToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    exchangeToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.constants.ts:123\n                        \n                    \n\n\n            \n                \n                        Exchange the provided refresh token for a new access token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe refresh token to exchange.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                A Promise that resolves to a Partial containing new access and refresh tokens.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        invalidateToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    invalidateToken(accessToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.constants.ts:116\n                        \n                    \n\n\n            \n                \n                        Invalidate the specified access token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe access token to invalidate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                A Promise that resolves to true if the token was invalidated successfully, or throws an error.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { JwtDto, LoginPayload } from \"./auth.types\";\n\n/**\n * Error message for access token related errors.\n * @constant\n */\nexport const ACCESS_TOKEN_ERROR_MSG = \"ERR_TOKEN_A\";\n\n/**\n * Error message for refresh token related errors.\n * @constant\n */\nexport const REFRESH_TOKEN_ERROR_MSG = \"ERR_TOKEN_R\";\n\n/**\n * Placeholder for unknown IP addresses.\n * @constant\n */\nexport const UNKNOWN_IP = \"unknown\";\n\n/**\n * Prefix for JWT cache keys.\n * @constant\n */\nexport const AUTH_JWT_CACHE_PREFIX = \"jwt\";\n\n/**\n * Prefix for access token cache keys.\n * @constant\n */\nexport const AUTH_ACCESS_TOKEN_PREFIX = \"access_token\";\n\n/**\n * Prefix for refresh token cache keys.\n * @constant\n */\nexport const AUTH_REFRESH_TOKEN_PREFIX = \"refresh_token\";\n\n/**\n * Prefix for brute force protection cache keys.\n * @constant\n */\nexport const BRUTEFORCE_JWT_CACHE_PREFIX = \"bruteforce\";\n\n/**\n * Generates a cache key for an access token.\n * @param accessToken - The access token.\n * @returns The generated cache key.\n */\nexport const jwtAccessTokenKey = (accessToken: string) => {\n  return `${AUTH_JWT_CACHE_PREFIX}:${AUTH_ACCESS_TOKEN_PREFIX}:${accessToken}`;\n};\n\n/**\n * Generates a cache key for a refresh token.\n * @param accessToken - The access token.\n * @param refreshToken - The refresh token.\n * @returns The generated cache key.\n */\nexport const jwtRefreshTokenKey = (\n  accessToken: string,\n  refreshToken: string,\n) => {\n  return `${AUTH_JWT_CACHE_PREFIX}:${AUTH_REFRESH_TOKEN_PREFIX}:${accessToken}:${refreshToken}`;\n};\n\n/**\n * Generates a cache key for tracking brute force login attempts by login.\n * @param login - The user's login.\n * @returns The generated cache key.\n */\nexport const bruteForceLoginKey = (login: string) =>\n  `${BRUTEFORCE_JWT_CACHE_PREFIX}:login:${login}`;\n\n/**\n * Generates a cache key for tracking brute force login attempts by IP address.\n * @param ipAddress - The IP address of the user.\n * @returns The generated cache key.\n */\nexport const bruteForceIPKey = (ipAddress: string) =>\n  `${BRUTEFORCE_JWT_CACHE_PREFIX}:ip:${ipAddress}`;\n\n/**\n * Abstract service class for authentication and authorization.\n * Defines the methods that must be implemented by any derived service.\n */\nexport abstract class AuthService {\n  /**\n   * Authenticate the user with the provided login payload.\n   * @param data - LoginPayload object with user login information.\n   * @returns A Promise that resolves to a JwtDto containing access and refresh tokens.\n   */\n  abstract authenticate(data: LoginPayload): Promise;\n\n  /**\n   * Invalidate the specified access token.\n   * @param accessToken - The access token to invalidate.\n   * @returns A Promise that resolves to true if the token was invalidated successfully, or throws an error.\n   */\n  abstract invalidateToken(accessToken: string);\n\n  /**\n   * Exchange the provided refresh token for a new access token.\n   * @param refreshToken - The refresh token to exchange.\n   * @returns A Promise that resolves to a Partial containing new access and refresh tokens.\n   */\n  abstract exchangeToken(refreshToken: string): Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BadRequestMsException.html":{"url":"classes/BadRequestMsException.html","title":"class - BadRequestMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BadRequestMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/bad-request-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for bad requests, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/bad-request-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for bad requests, extending MsException.\n */\nexport class BadRequestMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.BAD_REQUEST, message || \"Bad request\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasicAuthController.html":{"url":"interfaces/BasicAuthController.html","title":"interface - BasicAuthController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BasicAuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        exchange\n                                    \n                                \n                                \n                                    \n                                        login\n                                    \n                                \n                                \n                                    \n                                        logout\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        exchange\n                        \n                    \n                \n            \n            \n                \nexchange(payload: ExchangeTokenPayload, request: Request, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.types.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            ExchangeTokenPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(payload: LoginPayload, request: Request, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.types.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            LoginPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout(token: string, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/auth/auth.types.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IsIP, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\nimport { Expose, Transform, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common\";\nimport { UserDto } from \"../user/user.types\";\nimport { TransformUtils } from \"../../shared/utils/transform.utils\";\nimport { AuthService } from \"./auth.constants\";\nimport { Request, Response } from \"express\";\n\n/**\n * Data transfer object for login payload.\n * Contains user login information required for authentication.\n */\nexport class LoginPayload {\n  /**\n   * The login of the user.\n   * @example ```typescript\n   * \"admin\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  login: string;\n\n  /**\n   * The password of the user.\n   * @example ```typescript\n   * \"P@ssw0rd!\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  /**\n   * The IP address of the user.\n   * Optional.\n   * @example ```typescript\n   * \"192.168.0.1\"\n   */\n  @IsIP()\n  @IsOptional()\n  ipAddress: string;\n\n  /**\n   * The ID of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaId?: string;\n\n  /**\n   * The payload of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaPayload?: string;\n}\n\n/**\n * Data transfer object for token exchange payload.\n * Contains the token to be exchanged for a new token pair JwtDto.\n */\nexport class ExchangeTokenPayload {\n  /**\n   * The refresh token to be exchanged.\n   */\n  @IsString()\n  @IsOptional()\n  token: string;\n}\n\n/**\n * Data transfer object for JWT tokens.\n * Contains access and refresh tokens along with their expiration dates and user information.\n */\nexport class JwtDto {\n  /**\n   * The user-data object.\n   */\n  @Expose()\n  @Type(() => UserDto)\n  user: UserDto;\n\n  /**\n   * The access token.\n   */\n  @Expose()\n  accessToken: string;\n\n  /**\n   * The refresh token.\n   */\n  @Expose()\n  refreshToken: string;\n\n  /**\n   * The expiration date of the access token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  atExp: Date;\n\n  /**\n   * The expiration date of the refresh token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  rtExp: Date;\n}\n\nexport interface BasicAuthController {\n  login(\n    payload: LoginPayload,\n    request: Request,\n    response: Response,\n  ): Promise;\n\n  logout(token: string, response: Response): Promise;\n\n  exchange(\n    payload: ExchangeTokenPayload,\n    request: Request,\n    response: Response,\n  ): Promise>;\n}\n\n/**\n * Options for configuring the authentication module.\n * @property service - The authentication service class.\n */\nexport type AuthModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasicCaptchaController.html":{"url":"interfaces/BasicCaptchaController.html","title":"interface - BasicCaptchaController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BasicCaptchaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/captcha.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getCaptcha\n                                    \n                                \n                                \n                                    \n                                        validateCaptcha\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCaptcha\n                        \n                    \n                \n            \n            \n                \ngetCaptcha()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.types.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateCaptcha\n                        \n                    \n                \n            \n            \n                \nvalidateCaptcha(payload: CaptchaRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.types.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            CaptchaRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\n\n/**\n * Abstract class representing a CAPTCHA service.\n * @template CaptchaBody Type of data returned when generating CAPTCHA.\n */\nexport abstract class CaptchaService {\n  /**\n   * Generates a CAPTCHA.\n   * @returns {Promise} A promise that resolves with the CAPTCHA data.\n   */\n  abstract generateCaptcha(): Promise;\n\n  /**\n   * Validates a CAPTCHA.\n   * @param {CaptchaRequest} request The data for validate the CAPTCHA.\n   * @returns {Promise} A promise that resolves with the validation result (true if the CAPTCHA is valid).\n   */\n  abstract validateCaptcha(request: CaptchaRequest): Promise;\n}\n\n/**\n * Data transfer object for validate the CAPTCHA.\n * @template T Type of the CAPTCHA data.\n */\nexport class CaptchaRequest {\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  /**\n   * The data associated with the CAPTCHA request.\n   */\n  @IsNotEmpty()\n  data: T;\n}\n\n/**\n * Type representing a CAPTCHA response for client side.\n */\nexport type CaptchaResponse = {\n  /**\n   * The type of the CAPTCHA.\n   */\n  type?: string;\n\n  /**\n   * The image data for the CAPTCHA.\n   */\n  image?: string;\n\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  id?: string;\n\n  /**\n   * Whether the CAPTCHA is enabled in configuration.\n   */\n  enabled?: boolean;\n};\n\nexport interface BasicCaptchaController {\n  validateCaptcha(payload: CaptchaRequest): Promise;\n\n  getCaptcha(): Promise;\n}\n\n/**\n * Options for configuring the CAPTCHA module.\n */\nexport type CaptchaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasicExplorerController.html":{"url":"interfaces/BasicExplorerController.html","title":"interface - BasicExplorerController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BasicExplorerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getEntity\n                                    \n                                \n                                \n                                    \n                                        getEntityList\n                                    \n                                \n                                \n                                    \n                                        getTarget\n                                    \n                                \n                                \n                                    \n                                        getTargetList\n                                    \n                                \n                                \n                                    \n                                        removeEntity\n                                    \n                                \n                                \n                                    \n                                        saveEntity\n                                    \n                                \n                                \n                                    \n                                        saveTarget\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getEntity\n                        \n                    \n                \n            \n            \n                \ngetEntity(target: string, id: string, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEntityList\n                        \n                    \n                \n            \n            \n                \ngetEntityList(target: string, params: PageableParams, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                            PageableParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTarget\n                        \n                    \n                \n            \n            \n                \ngetTarget(target: string, type: \"section\" | \"object\", user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                        \"section\" | \"object\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTargetList\n                        \n                    \n                \n            \n            \n                \ngetTargetList()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeEntity\n                        \n                    \n                \n            \n            \n                \nremoveEntity(target: string, id: string, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveEntity\n                        \n                    \n                \n            \n            \n                \nsaveEntity(target: string, body: T, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:59\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveTarget\n                        \n                    \n                \n            \n            \n                \nsaveTarget(target: ExplorerTarget)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            ExplorerTarget\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface BasicExplorerController {\n  getTargetList(): Promise;\n\n  saveTarget(target: ExplorerTarget): Promise;\n\n  getTarget(\n    target: string,\n    type: \"section\" | \"object\",\n    user: User,\n  ): Promise;\n\n  getEntity(target: string, id: string, user: User): Promise;\n\n  getEntityList(\n    target: string,\n    params: PageableParams,\n    user: User,\n  ): Promise>;\n\n  saveEntity(target: string, body: T, user: User): Promise;\n\n  removeEntity(target: string, id: string, user: User): Promise;\n}\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n  controller?: Class;\n  saveHandlers?: Class[];\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasicFileController.html":{"url":"interfaces/BasicFileController.html","title":"interface - BasicFileController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BasicFileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createFile\n                                    \n                                \n                                \n                                    \n                                        getFile\n                                    \n                                \n                                \n                                    \n                                        getPrivateFile\n                                    \n                                \n                                \n                                    \n                                        removeFile\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createFile\n                        \n                    \n                \n            \n            \n                \ncreateFile(file: Express.Multer.File, isPublic: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.types.ts:323\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isPublic\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFile\n                        \n                    \n                \n            \n            \n                \ngetFile(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.types.ts:327\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPrivateFile\n                        \n                    \n                \n            \n            \n                \ngetPrivateFile(res: Response, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.types.ts:325\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFile\n                        \n                    \n                \n            \n            \n                \nremoveFile(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.types.ts:329\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  /** This field contains the identification number */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file */\n  name: string;\n  /** This field stores the path to the file on the server */\n  path: string;\n  /** This field specifies the type of access to the file, public or private */\n  public: boolean;\n  /** This field stores the size of the file in bytes */\n  size: number;\n  /** This field stores the icon of the file */\n  icon: Media;\n  /** This field stores the media preview of the file  */\n  preview: Media;\n  /** This field contains a reference to the FileMetadata container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The MIME type of the file, indicating the nature and format of the file content */\n  mime: string;\n  /** The file extension, indicating the file format */\n  ext: string;\n  /** The cryptographic hash of the file content, used for integrity verification and identification */\n  hash: string;\n  /** The ICC (International Color Consortium) profile data associated with the file, used for color management */\n  icc: IccFileMetadata;\n  /** GPS data associated with the location where the file was created, including latitude, longitude and elevation */\n  gps: GpsFileMetadata;\n  /** This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics */\n  image: ImageFileMetadata;\n  /** This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created */\n  exif: ExifFileMetadata;\n  /** This field is used to store information about the structure and properties of the audio file */\n  audio: AudioFileMetadata;\n  /** This field is used to store information about the structure and properties of the video recording*/\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The number of bits used to represent the color of a single pixel in the image */\n  bps: number;\n  /** The width of the image in pixels */\n  width: number;\n  /** The height of the image in pixels */\n  height: number;\n  /** The number of color components used to represent the color of the image */\n  colorComponents: number;\n  /** The subsampling method used for the image, indicating how color information is sampled */\n  subsampling: string;\n  /** The date and time when the image was created or last modified */\n  dateTime: Date;\n  /** The bit depth of the image, indicating the number of bits used for color representation */\n  bitDepth: number;\n  /** The color type of the image, indicating the color model used */\n  colorType: string;\n  /** Contains the compression method used to reduce the size of the image */\n  compression: string;\n  /** Specifies the filtering method used to process the image data before compressing it */\n  filter: string;\n  /**  Indicates whether interlacing is used in the image, allowing for progressive display */\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The version of the ICC profile, indicating the specification version used to create the color profile. */\n  profileVersion: string;\n  /** The class of the ICC profile, indicating its primary purpose and type */\n  profileClassValue: string;\n  /** The name of the ICC profile class, describing its primary purpose */\n  profileClassName: string;\n  /** The connection space of the ICC profile, representing the intermediate color space used for color conversions. */\n  connectionSpace: string;\n  /** The date and time when the ICC profile was created or last modified */\n  iccProfileDate: Date;\n  /** A unique signature of the ICC profile used to confirm its authenticity and validity */\n  iccSignature: string;\n  /** The primary platform or operating system for which the ICC profile was created or optimized */\n  primaryPlatform: string;\n  /** The manufacturer of the device for which the ICC profile was created */\n  deviceManufacturer: string;\n  /** The model number of the device for which the ICC profile was created */\n  deviceModelNumber: string;\n  /**  Indicates the type of rendering to be used when converting colors between color spaces */\n  renderingIntentValue: string;\n  /** Specifies the name of the rendering type that is used when converting colors between color spaces */\n  renderingIntentName: string;\n  /** The name or identifier of the creator of the ICC profile */\n  profileCreator: string;\n  /** A description of the ICC profile, explaining its purpose and characteristics */\n  iccDescription: string;\n  /** The copyright information for the ICC profile, indicating ownership and usage rights */\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** This field specifies the manufacturer of the camera */\n  make: string;\n  /** This field specifies the model of the camera  */\n  model: string;\n  /** Indicates image display orientation based on EXIF metadata */\n  orientation: string;\n  /** X-side resolution of the photo*/\n  resolutionX: string;\n  /** Y-side resolution of the photo*/\n  resolutionY: string;\n  /** Unit of image resolution */\n  resolutionUnit: string;\n  /** The field contains information about the software that was used to create or edit the image */\n  software: string;\n  /** This field is responsible for specifying the method of placing these color components Y, Cb and Cr relative to the image pixels */\n  ycbCrPositioning: string;\n  /** Pointer to the beginning of an EXIF IFD block in a file inside a TIFF file */\n  exifIfdPointer: string;\n  /** Contains information about the location where the image was taken */\n  gpsInfoIfdPointer: string;\n  /** Exposure time (shutter speed) when capturing an image */\n  exposureTime: string;\n  /** Contains data on the aperture number (aperture) when capturing an image */\n  fNumber: string;\n  /** Contains data on the exposure mode (shutter speed and aperture) used to capture the image */\n  exposureProgram: string;\n  /** Contains data on the ISO value (the sensitivity of the camera sensor to light) */\n  isoSpeedRatings: string;\n  /** Contains EXIF specification version data */\n  exifVersion: string;\n  /** Contains time offset data relative to UTC (Coordinated Universal Time) for the date and time when the image was taken */\n  offsetTime: string;\n  /** Contains data on the shutter speed of the camera */\n  shutterSpeedValue: string;\n  /** Contains data on the aperture (aperture) value used to capture the image */\n  aperture: string;\n  /** Contains data on the brightness level of the image */\n  brightness: string;\n  /** Contains exposure compensation data  */\n  exposureBias: string;\n  /** Contains data on the maximum aperture (aperture) value  */\n  maxAperture: string;\n  /** Contains data on the distance to the subject in millimeters */\n  subjectDistance: string;\n  /** Contains data on the light sensing mode used by the camera when capturing an image */\n  meteringMode: string;\n  /** Contains data on the status and operation of the flash during image capture */\n  flash: string;\n  /** Contains data about the focal length of the camera lens */\n  focalLength: string;\n  /** The Flashpix format version used for the image */\n  flashpixVersion: string;\n  /** The color space of the image data */\n  colorSpace: string;\n  /** Width (horizontal resolution) of the image in pixels */\n  pixelXDimension: string;\n  /** Contains data about the vertical resolution (height) of the image in pixels */\n  pixelYDimension: string;\n  /** Pointer to the start of the Interoperability IFD block for compatibility metadata */\n  interoperabilityIfdPointer: string;\n  /** Indicates the method used by the camera sensor to capture the image */\n  sensingMethod: string;\n  /** The type of scene captured in the image, indicating if it was taken with a digital camera */\n  sceneType: string;\n  /** Indicates whether the image was processed with custom rendering */\n  customRendered: string;\n  /** The exposure mode used by the camera during the shot */\n  exposureMode: string;\n  /** The white balance setting used during the shot */\n  whiteBalance: string;\n  /** The digital zoom ratio applied during the shot */\n  digitalZoomRatio: string;\n  /** The type of scene capture mode used during the shot */\n  sceneCaptureType: string;\n  /** The level of contrast applied to the image */\n  contrast: string;\n  /** The level of color saturation applied to the image */\n  saturation: string;\n  /** The level of sharpness applied to the image */\n  sharpness: string;\n  /** The distance range to the subject during the shot */\n  subjectDistanceRange: string;\n  /** The manufacturer of the lens used to capture the image */\n  lensMake: string;\n  /** The model of the lens used to capture the image */\n  lensModel: string;\n  /** Indicates whether the image is a composite, created by combining multiple images or applying effects */\n  compositeImage: string;\n  /** The interoperability index indicating the standard used for ensuring image compatibility */\n  interoperabilityIndex: string;\n  /** The version of the interoperability standard used for the image */\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  /** Representing identifier of meta-data object */\n  id: number;\n  /** Representing gps-latitude parameter */\n  latitude: number;\n  /** Representing gps-longitude parameter */\n  longitude: number;\n  /** Representing gps-altitude parameter */\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** A codec ( algorithm or method ) used to compress and decompress a video file */\n  codec: string;\n  /** The container format of the video file, indicating how video, audio, and other data streams are packaged together */\n  container: string;\n  /** The width of the video in pixels */\n  width: number;\n  /** The height of the video in pixels */\n  height: number;\n  /**  The bitrate of the video file, indicating the amount of data processed per second */\n  bitrate: number;\n  /** The duration of the video file in seconds */\n  duration: number;\n  /** A sample video aspect ratio indicating how pixels are distributed in a video stream */\n  sampleAspectRatio: string;\n  /** The display aspect ratio of the video, indicating the ratio of width to height for playback.*/\n  displayAspectRatio: string;\n  /** Video color range, indicating the set of colors used in the video file */\n  colorRange: string;\n  /** The color space of the video, indicating how colors are represented and interpreted */\n  colorSpace: string;\n  /** The frame rate of the video, indicating the number of frames displayed per second */\n  frameRate: string;\n  /** The rotation angle of the video in degrees, indicating its orientation */\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The format of the audio file container, which encapsulates audio streams and metadata */\n  container: string;\n  /** The audio codec used for encoding or decoding the audio data */\n  codec: string;\n  /** The sample rate of the audio file, indicating the number of samples per second */\n  sampleRate: number;\n  /**  The number of audio channels in the file, indicating the sound configuration (e.g., mono, stereo) */\n  numberOfChannels: number;\n  /**  The bitrate of the audio file, indicating the amount of data processed per second. */\n  bitrate: number;\n  /** The codec profile used for encoding the audio data, indicating specific settings and capabilities */\n  codecProfile: string;\n  /** The tool or software used to encode or process the audio file */\n  tool: string;\n  /** The duration of the audio file in seconds */\n  duration: number;\n  /** The title of the audio file or track */\n  title: string;\n  /** The name of the artist or band who performed the audio track. */\n  artist: string;\n  /** The name of the album that the audio track belongs to */\n  album: string;\n  /** The year the audio track was release */\n  year: number;\n  /** The genre of the audio track */\n  genre: string;\n  /** The music label or company that released the audio trac */\n  label: string;\n}\n\nexport interface BasicFileController {\n  createFile(file: Express.Multer.File, isPublic: string): Promise;\n\n  getPrivateFile(res: Response, id: number): Promise;\n\n  getFile(id: number): Promise;\n\n  removeFile(id: number): Promise;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasicMediaController.html":{"url":"interfaces/BasicMediaController.html","title":"interface - BasicMediaController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BasicMediaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createMedia\n                                    \n                                \n                                \n                                    \n                                        getMedia\n                                    \n                                \n                                \n                                    \n                                        getPrivateMedia\n                                    \n                                \n                                \n                                    \n                                        recreateMedia\n                                    \n                                \n                                \n                                    \n                                        removeMedia\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMedia\n                        \n                    \n                \n            \n            \n                \ncreateMedia(file: Express.Multer.File, type: string, id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:253\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMedia\n                        \n                    \n                \n            \n            \n                \ngetMedia(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:266\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPrivateMedia\n                        \n                    \n                \n            \n            \n                \ngetPrivateMedia(res: Response, id: number, format: string, webp: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:259\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                format\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                webp\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recreateMedia\n                        \n                    \n                \n            \n            \n                \nrecreateMedia(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:270\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMedia\n                        \n                    \n                \n            \n            \n                \nremoveMedia(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:268\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  /** This field contains the identification number of the file  */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file in all languages involved */\n  name: LocalizedString[];\n  /** This field contains a list of unique settings and functions that the file contains */\n  type: MediaType;\n  /** This field contains a link to the original file and all its thumbnails */\n  files: MediaFile[];\n  /** This field contains a link to the meta data container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  /** A unique code representing the media file type */\n  code: string;\n  /** This field contains a unique character identifier */\n  name: string;\n  /** This field defines the possibility to create a duplicate file in WEBP format */\n  vp6: boolean;\n  /** This field indicates the type of access to the file, public or private */\n  private: boolean;\n  /** A numeric value reflecting the quality level of the media (defines the compression rate or overall quality) */\n  quality: number;\n  /** A file extension associated with the media type and which defines the file format  */\n  ext: MediaExt;\n  /** An array of supported media formats for this media type */\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media format */\n  name: string;\n  /** The width of the media file in pixels, represented as a string  */\n  width: string;\n  /** The height of the media file in pixels, represented as a string  */\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  /** A unique code or identifier for the media file*/\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media file */\n  name: string;\n  /** The width of the media file in pixels */\n  width: number;\n  /** The height of the media file in pixels */\n  height: number;\n  /** The size of the media file in bytes */\n  size: number;\n  /** The format of the media file, represented by the MediaFormat type */\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** A unique code or identifier for the media file*/\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(id: number, privateMedia?: boolean): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\nexport interface BasicMediaController {\n  createMedia(\n    file: Express.Multer.File,\n    type: string,\n    id: number,\n  ): Promise;\n\n  getPrivateMedia(\n    res: Response,\n    id: number,\n    format: string,\n    webp: boolean,\n  ): Promise;\n\n  getMedia(id: number): Promise;\n\n  removeMedia(id: number): Promise;\n\n  recreateMedia(id: number): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasicUserController.html":{"url":"interfaces/BasicUserController.html","title":"interface - BasicUserController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BasicUserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createUserProfile\n                                    \n                                \n                                \n                                    \n                                        getUserProfile\n                                    \n                                \n                                \n                                    \n                                        removeUserProfile\n                                    \n                                \n                                \n                                    \n                                        updateUserProfile\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUserProfile\n                        \n                    \n                \n            \n            \n                \ncreateUserProfile(profile: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                profile\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserProfile\n                        \n                    \n                \n            \n            \n                \ngetUserProfile(id: string, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeUserProfile\n                        \n                    \n                \n            \n            \n                \nremoveUserProfile(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserProfile\n                        \n                    \n                \n            \n            \n                \nupdateUserProfile(id: string, profile: User, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                profile\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\nexport interface BasicUserController {\n  getUserProfile(id: string, user: User): Promise;\n\n  updateUserProfile(id: string, profile: User, user: User): Promise;\n\n  removeUserProfile(id: string): Promise;\n\n  createUserProfile(profile: User): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BasicUserService.html":{"url":"injectables/BasicUserService.html","title":"injectable - BasicUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BasicUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user-service-basic.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Provides methods to interact with the UserEntity repository.\n\n            \n\n            \n                Extends\n            \n            \n                            UserService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByLogin\n                            \n                            \n                                    Async\n                                removeById\n                            \n                            \n                                    Async\n                                updateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRep: Repository)\n                    \n                \n                        \n                            \n                                Defined in lib/common/user/user-service-basic.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: User)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:84\n\n                        \n                    \n\n\n            \n                \n                        Create a new user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user object to create.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The created user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:55\n\n                        \n                    \n\n\n            \n                \n                        Find a user by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The user found or undefined if not found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByLogin(login: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:42\n\n                        \n                    \n\n\n            \n                \n                        Find a user by their login.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                login\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's login.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The user found or undefined if not found.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeById\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:96\n\n                        \n                    \n\n\n            \n                \n                        Remove a user by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The removed user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateById(id: string, user: User)\n                \n            \n\n\n                    \n                        \n                            Inherited from         UserService\n\n                        \n                    \n                    \n                        \n                                Defined in         UserService:69\n\n                        \n                    \n\n\n            \n                \n                        Update a user by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user's ID.\n\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user object with updated properties.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The updated user.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { User, UserService } from \"./user.types\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { UserEntity } from \"./entity/user.entity\";\nimport { USER_RELATIONS } from \"./user.constants\";\n\n/**\n * Provides methods to interact with the UserEntity repository.\n */\n@Injectable()\nexport class BasicUserService extends UserService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRep: Repository,\n  ) {\n    super();\n  }\n\n  /**\n   * Find a user by their login.\n   * @async\n   * @param {string} login - The user's login.\n   * @returns {Promise} The user found or undefined if not found.\n   */\n  async findByLogin(login: string): Promise {\n    return await this.userRep.findOne({\n      where: { login, active: true },\n      relations: USER_RELATIONS,\n    });\n  }\n\n  /**\n   * Find a user by their ID.\n   * @async\n   * @param {string} id - The user's ID.\n   * @returns {Promise} The user found or undefined if not found.\n   */\n  async findById(id: string): Promise {\n    return await this.userRep.findOne({\n      where: { id },\n      relations: USER_RELATIONS,\n    });\n  }\n\n  /**\n   * Update a user by their ID.\n   * @async\n   * @param {string} id - The user's ID.\n   * @param {User} user - The user object with updated properties.\n   * @returns {Promise} The updated user.\n   */\n  async updateById(id: string, user: User): Promise {\n    user.id = id;\n    if (user.login) {\n      delete user.login;\n    }\n    await this.userRep.save(user);\n    return await this.findById(id);\n  }\n\n  /**\n   * Create a new user.\n   * @async\n   * @param {User} user - The user object to create.\n   * @returns {Promise} The created user.\n   */\n  async create(user: User): Promise {\n    const newUser = this.userRep.create(user);\n    return await this.userRep.save(newUser);\n  }\n\n  /**\n   * Remove a user by their ID.\n   * @async\n   * @param {string} id - The user's ID.\n   * @returns {Promise} The removed user.\n   * @throws {NotFoundException} If the user with the specified ID is not found.\n   */\n  async removeById(id: string): Promise {\n    const user = await this.findById(id);\n    if (!user) {\n      throw new NotFoundException(`User with ID ${id} not found`);\n    }\n    await this.userRep.remove(user);\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CacheModule.html":{"url":"modules/CacheModule.html","title":"module - CacheModule","body":"\n                   \n\n\n\n\n    Modules\n    CacheModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CacheModule\n\n\n\ncluster_CacheModule_imports\n\n\n\ncluster_CacheModule_exports\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nCacheModule\n\nCacheModule\n\nCacheModule -->\n\nLogModule->CacheModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nCacheModule -->\n\nRedisModule->CacheModule\n\n\n\n\n\nCacheService \n\nCacheService \n\nCacheService  -->\n\nCacheModule->CacheService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/cache/cache.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides caching functionality using Redis.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            LogModule\n                        \n                        \n                            RedisModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CacheService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Logger, Module } from \"@nestjs/common\";\nimport { RedisModule } from \"./redis.module\";\nimport { LogModule } from \"../log/log.module\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\nimport { CacheService } from \"./cache.types\";\nimport { RedisCacheService } from \"./redis-cache.service\";\n\n/**\n * A module that provides caching functionality using Redis.\n */\n@Module({\n  imports: [\n    RedisModule.forRootAsync({\n      imports: [LogModule],\n      inject: [LOGGER],\n      useFactory: (logger: Logger) => {\n        EnvLoader.loadEnvironment(logger);\n        return {\n          config: {\n            host: process.env.REDIS_HOST,\n            port: parseInt(process.env.REDIS_PORT),\n            db: parseInt(process.env.REDIS_DB),\n            username: process.env.REDIS_USER,\n            password: process.env.REDIS_PASSWORD,\n          },\n        };\n      },\n    }),\n    LogModule,\n  ],\n  providers: [\n    {\n      provide: CacheService,\n      useClass: RedisCacheService,\n    },\n  ],\n  exports: [CacheService],\n})\nexport class CacheModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CacheService.html":{"url":"classes/CacheService.html","title":"class - CacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/cache/cache.types.ts\n        \n\n\n            \n                Description\n            \n            \n                An abstract class defining methods for cache operations.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                del\n                            \n                            \n                                    Abstract\n                                expire\n                            \n                            \n                                    Abstract\n                                get\n                            \n                            \n                                    Abstract\n                                getBoolean\n                            \n                            \n                                    Abstract\n                                getFromPattern\n                            \n                            \n                                    Abstract\n                                getNumber\n                            \n                            \n                                    Abstract\n                                incr\n                            \n                            \n                                    Abstract\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        del\n                        \n                    \n                \n            \n            \n                \n                        \n                    del(...keys: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        expire\n                        \n                    \n                \n            \n            \n                \n                        \n                    expire(key: string, expiresIn: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getBoolean\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBoolean(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getFromPattern\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFromPattern(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNumber(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        incr\n                        \n                    \n                \n            \n            \n                \n                        \n                    incr(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: string | number, expiration?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/cache.types.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expiration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CacheService {\n  abstract get(key: string): Promise;\n\n  abstract getNumber(key: string): Promise;\n\n  abstract getBoolean(key: string): Promise;\n\n  abstract set(\n    key: string,\n    value: string | number,\n    expiration?: number,\n  ): Promise;\n\n  abstract del(...keys: string[]): Promise;\n\n  abstract incr(key: string): Promise;\n\n  abstract expire(key: string, expiresIn: number): Promise;\n\n  abstract getFromPattern(pattern: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CaptchaController.html":{"url":"controllers/CaptchaController.html","title":"controller - CaptchaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CaptchaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/captcha.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /captcha\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getCaptcha\n                            \n                            \n                                    \n                                    Async\n                                validateCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCaptcha()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        validateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateCaptcha(payload: CaptchaRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/validate')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            CaptchaRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Body, Controller, Get, Post } from \"@nestjs/common\";\nimport {\n  BasicCaptchaController,\n  CaptchaRequest,\n  CaptchaResponse,\n  CaptchaService,\n} from \"./captcha.types\";\n\n@Controller(\"/captcha\")\nexport class CaptchaController implements BasicCaptchaController {\n  constructor(private readonly captchaService: CaptchaService) {}\n\n  @Post(\"/validate\")\n  async validateCaptcha(\n    @Body() payload: CaptchaRequest,\n  ): Promise {\n    const result = await this.captchaService.validateCaptcha(payload);\n    return { result };\n  }\n\n  @Get(\"/\")\n  async getCaptcha(): Promise {\n    const captcha: CaptchaResponse =\n      await this.captchaService.generateCaptcha();\n    if (!captcha) {\n      return { enabled: false };\n    }\n    return {\n      enabled: true,\n      id: captcha.id,\n      image: captcha.image,\n      type: captcha.type,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CaptchaModule.html":{"url":"modules/CaptchaModule.html","title":"module - CaptchaModule","body":"\n                   \n\n\n\n\n    Modules\n    CaptchaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/captcha/captcha.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for work with captcha.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: CaptchaModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.module.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CaptchaModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      service: GraphicCaptchaService,\n      controller: CaptchaController,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRootAsync\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRootAsync(options: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.module.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { GraphicCaptchaService } from \"./graphic-captcha.service\";\nimport {\n  BasicCaptchaController,\n  CaptchaModuleOptions,\n  CaptchaService,\n} from \"./captcha.types\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CaptchaController } from \"./captcha.controller\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\n\n/**\n * Module for work with captcha.\n */\n@Module({})\nexport class CaptchaModule {\n  static forRoot(\n    options: CaptchaModuleOptions = {\n      service: GraphicCaptchaService,\n      controller: CaptchaController,\n    },\n  ): DynamicModule {\n    return {\n      module: CaptchaModule,\n      controllers: [options.controller],\n      imports: [CacheModule, LogModule],\n      providers: [\n        {\n          provide: CaptchaService,\n          useClass: options.service,\n        },\n      ],\n      exports: [CaptchaService],\n    };\n  }\n\n  static forRootAsync(options: {\n    inject?: any[];\n    imports?: any[];\n    controller?: Class;\n    useFactory: (...args) => Promise | CaptchaService;\n  }): DynamicModule {\n    const { inject, imports, controller, useFactory } = options;\n    return {\n      module: CaptchaModule,\n      imports: [...(imports || [])],\n      controllers: [controller || CaptchaController],\n      providers: [\n        {\n          provide: CaptchaService,\n          useFactory,\n          inject,\n        },\n      ],\n      exports: [CaptchaService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CaptchaRequest.html":{"url":"classes/CaptchaRequest.html","title":"class - CaptchaRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CaptchaRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/captcha.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for validate the CAPTCHA.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                data\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/captcha/captcha.types.ts:55\n                        \n                    \n\n            \n                \n                    The data associated with the CAPTCHA request.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/captcha/captcha.types.ts:49\n                        \n                    \n\n            \n                \n                    The unique identifier for the CAPTCHA.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\n\n/**\n * Abstract class representing a CAPTCHA service.\n * @template CaptchaBody Type of data returned when generating CAPTCHA.\n */\nexport abstract class CaptchaService {\n  /**\n   * Generates a CAPTCHA.\n   * @returns {Promise} A promise that resolves with the CAPTCHA data.\n   */\n  abstract generateCaptcha(): Promise;\n\n  /**\n   * Validates a CAPTCHA.\n   * @param {CaptchaRequest} request The data for validate the CAPTCHA.\n   * @returns {Promise} A promise that resolves with the validation result (true if the CAPTCHA is valid).\n   */\n  abstract validateCaptcha(request: CaptchaRequest): Promise;\n}\n\n/**\n * Data transfer object for validate the CAPTCHA.\n * @template T Type of the CAPTCHA data.\n */\nexport class CaptchaRequest {\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  /**\n   * The data associated with the CAPTCHA request.\n   */\n  @IsNotEmpty()\n  data: T;\n}\n\n/**\n * Type representing a CAPTCHA response for client side.\n */\nexport type CaptchaResponse = {\n  /**\n   * The type of the CAPTCHA.\n   */\n  type?: string;\n\n  /**\n   * The image data for the CAPTCHA.\n   */\n  image?: string;\n\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  id?: string;\n\n  /**\n   * Whether the CAPTCHA is enabled in configuration.\n   */\n  enabled?: boolean;\n};\n\nexport interface BasicCaptchaController {\n  validateCaptcha(payload: CaptchaRequest): Promise;\n\n  getCaptcha(): Promise;\n}\n\n/**\n * Options for configuring the CAPTCHA module.\n */\nexport type CaptchaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CaptchaService.html":{"url":"classes/CaptchaService.html","title":"class - CaptchaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CaptchaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/captcha.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing a CAPTCHA service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                generateCaptcha\n                            \n                            \n                                    Abstract\n                                validateCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        generateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateCaptcha()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.types.ts:29\n                        \n                    \n\n\n            \n                \n                        Generates a CAPTCHA.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves with the CAPTCHA data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        validateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateCaptcha(request: CaptchaRequest)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/captcha.types.ts:36\n                        \n                    \n\n\n            \n                \n                        Validates a CAPTCHA.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            CaptchaRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data for validate the CAPTCHA.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves with the validation result (true if the CAPTCHA is valid).\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\n\n/**\n * Abstract class representing a CAPTCHA service.\n * @template CaptchaBody Type of data returned when generating CAPTCHA.\n */\nexport abstract class CaptchaService {\n  /**\n   * Generates a CAPTCHA.\n   * @returns {Promise} A promise that resolves with the CAPTCHA data.\n   */\n  abstract generateCaptcha(): Promise;\n\n  /**\n   * Validates a CAPTCHA.\n   * @param {CaptchaRequest} request The data for validate the CAPTCHA.\n   * @returns {Promise} A promise that resolves with the validation result (true if the CAPTCHA is valid).\n   */\n  abstract validateCaptcha(request: CaptchaRequest): Promise;\n}\n\n/**\n * Data transfer object for validate the CAPTCHA.\n * @template T Type of the CAPTCHA data.\n */\nexport class CaptchaRequest {\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  @IsString()\n  @IsNotEmpty()\n  id: string;\n\n  /**\n   * The data associated with the CAPTCHA request.\n   */\n  @IsNotEmpty()\n  data: T;\n}\n\n/**\n * Type representing a CAPTCHA response for client side.\n */\nexport type CaptchaResponse = {\n  /**\n   * The type of the CAPTCHA.\n   */\n  type?: string;\n\n  /**\n   * The image data for the CAPTCHA.\n   */\n  image?: string;\n\n  /**\n   * The unique identifier for the CAPTCHA.\n   */\n  id?: string;\n\n  /**\n   * Whether the CAPTCHA is enabled in configuration.\n   */\n  enabled?: boolean;\n};\n\nexport interface BasicCaptchaController {\n  validateCaptcha(payload: CaptchaRequest): Promise;\n\n  getCaptcha(): Promise;\n}\n\n/**\n * Options for configuring the CAPTCHA module.\n */\nexport type CaptchaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CategoryEntity.html":{"url":"entities/CategoryEntity.html","title":"entity - CategoryEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CategoryEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/category/entity/category.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores category trees\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                children\n                            \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                params\n                            \n                            \n                                    \n                                parent\n                            \n                            \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @TreeChildren()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @TreeParent()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  Tree,\n  TreeChildren,\n  TreeParent,\n} from \"typeorm\";\nimport { LocalizedStringEntity } from \"../../locale/entity/localized-string.entity\";\nimport { SimpleJsonTransformer } from \"../../../transformers/simple-json.transformer\";\nimport { MediaEntity } from \"../../../../common/media/entity/media.entity\";\n\n/**\n * The entity stores category trees\n */\n@Entity(\"categories\")\n@Tree(\"nested-set\")\nexport class CategoryEntity {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @Column(\"varchar\", { nullable: true })\n  url: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    nullable: true,\n    default: null,\n  })\n  params: object;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  icon: MediaEntity;\n\n  @Index()\n  @Column(\"int\", { default: 0, unsigned: true })\n  priority: number;\n\n  @TreeParent()\n  parent: CategoryEntity;\n\n  @TreeChildren()\n  children: CategoryEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoryModule.html":{"url":"modules/CategoryModule.html","title":"module - CategoryModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_imports\n\n\n\ncluster_CategoryModule_exports\n\n\n\ncluster_CategoryModule_providers\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nCategoryModule\n\nCategoryModule\n\nCategoryModule -->\n\nLogModule->CategoryModule\n\n\n\n\n\nCategoryService \n\nCategoryService \n\nCategoryService  -->\n\nCategoryModule->CategoryService \n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/category/category.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides services and configurations for working with categories.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoryService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CategoryService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Module } from \"@nestjs/common\";\nimport { CategoryService } from \"./category.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { CategoryEntity } from \"./entity/category.entity\";\nimport { LogModule } from \"../log/log.module\";\n\n/**\n * A module that provides services and configurations for working with categories.\n */\n@Module({\n  imports: [LogModule, TypeOrmModule.forFeature([CategoryEntity])],\n  providers: [CategoryService],\n  exports: [CategoryService],\n})\nexport class CategoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CategoryRestrictionEntity.html":{"url":"entities/CategoryRestrictionEntity.html","title":"entity - CategoryRestrictionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CategoryRestrictionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/category/entity/category-restriction.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the settings for restricting access by user roles for categories\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                allowFor\n                            \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        allowFor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category-restriction.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category-restriction.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category-restriction.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/category/entity/category-restriction.entity.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { CategoryEntity } from \"./category.entity\";\nimport { UserRoleEntity } from \"../../../../common/user/entity/user-role.entity\";\n\n/**\n * The entity stores the settings for restricting access by user roles for categories\n */\n@Entity(\"category_restriction\")\nexport class CategoryRestrictionEntity {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @ManyToMany(() => UserRoleEntity)\n  @JoinTable()\n  allowFor: UserRoleEntity[];\n\n  @ManyToOne(() => CategoryEntity, (t) => t.id)\n  category: CategoryEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/category/category.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for working with tree-categories.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getDescendantsByCodeOfRoot\n                            \n                            \n                                    Private\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(catRep: TreeRepository, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/category/category.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        catRep\n                                                  \n                                                        \n                                                                        TreeRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDescendantsByCodeOfRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDescendantsByCodeOfRoot(code: string, depth?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/category/category.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Get descendants of a category by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The code of the root category.\n\n                                            \n                                        \n                                        \n                                                depth\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    The maximum depth for the search (optional).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the tree of descendants of the category.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sort\n                        \n                    \n                \n            \n            \n                \n                        \n                    sort(cat: CategoryEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/category/category.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Sorts the children of a category by priority.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cat\n                                            \n                                                            CategoryEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe category entity whose children need to be sorted.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { TreeRepository } from \"typeorm\";\nimport { CategoryEntity } from \"./entity/category.entity\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { CATEGORY_RELATIONS } from \"./category.constants\";\nimport { ObjectUtils } from \"../../utils/object.utils\";\n\n/**\n * Service for working with tree-categories.\n */\n@Injectable()\nexport class CategoryService {\n  constructor(\n    @InjectRepository(CategoryEntity)\n    private readonly catRep: TreeRepository,\n    @Inject(LOGGER) private readonly logger: Logger,\n  ) {}\n\n  /**\n   * Get descendants of a category by its code.\n   * @param code The code of the root category.\n   * @param depth The maximum depth for the search (optional).\n   * @returns A promise that resolves to the tree of descendants of the category.\n   */\n  async getDescendantsByCodeOfRoot(code: string, depth?: number) {\n    const cat = await this.catRep.findOne({\n      where: { code },\n      relations: CATEGORY_RELATIONS,\n    });\n    const res = await this.catRep.findDescendantsTree(cat, {\n      depth,\n      relations: CATEGORY_RELATIONS,\n    });\n    res.children?.forEach((cat) => this.sort(cat));\n    this.sort(res);\n    return res;\n  }\n\n  /**\n   * Sorts the children of a category by priority.\n   * @param cat - The category entity whose children need to be sorted.\n   */\n  private sort(cat: CategoryEntity) {\n    ObjectUtils.sort(cat.children, \"priority\", false);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ConfigController.html":{"url":"controllers/ConfigController.html","title":"controller - ConfigController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ConfigController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/config/config.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                config\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                list\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                removeProperty\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                setProperty\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        list\n                        \n                    \n                \n            \n            \n                \n                        \n                    list(params: PageableParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('/')@ForRoles(Roles.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/config/config.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            PageableParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        removeProperty\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeProperty(key: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Delete('/')@ForRoles(Roles.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/config/config.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        setProperty\n                        \n                    \n                \n            \n            \n                \n                        \n                    setProperty(body: ConfigItem)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Post('/')@ForRoles(Roles.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/config/config.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            ConfigItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Post,\n  Query,\n  UseGuards,\n} from \"@nestjs/common\";\nimport { AuthGuard } from \"../../shared/guards/auth.guard\";\nimport { ConfigService } from \"./config.service\";\nimport { ForRoles } from \"../../shared/decorators/for-roles.decorator\";\nimport { Roles } from \"../../shared/constants\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\nimport { ConfigItem } from \"./config.types\";\n\n@Controller(\"config\")\n@UseGuards(AuthGuard)\nexport class ConfigController {\n  constructor(private readonly configService: ConfigService) {}\n\n  @UseGuards(AuthGuard)\n  @Get(\"/\")\n  @ForRoles(Roles.ADMIN)\n  async list(\n    @Query() params: PageableParams,\n  ): Promise> {\n    return await this.configService.getPropertiesPage(params);\n  }\n\n  @UseGuards(AuthGuard)\n  @Post(\"/\")\n  @ForRoles(Roles.ADMIN)\n  async setProperty(@Body() body: ConfigItem): Promise {\n    return await this.configService.setProperty(body);\n  }\n\n  @UseGuards(AuthGuard)\n  @Delete(\"/\")\n  @ForRoles(Roles.ADMIN)\n  async removeProperty(@Query(\"key\") key: string): Promise {\n    return await this.configService.removeProperty(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigItem.html":{"url":"interfaces/ConfigItem.html","title":"interface - ConfigItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/config/config.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a configuration item.\nEach configuration item consists of a key and a value, both of which are strings.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key of the configuration item.\nThis is the identifier for the configuration setting.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The value of the configuration item.\nThis is the value associated with the configuration key.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ConfigItem {\n  /**\n   * The key of the configuration item.\n   * This is the identifier for the configuration setting.\n   */\n  key: string;\n\n  /**\n   * The value of the configuration item.\n   * This is the value associated with the configuration key.\n   */\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_ConfigModule_imports\n\n\n\ncluster_ConfigModule_providers\n\n\n\n\nCacheModule\n\nCacheModule\n\n\n\nConfigModule\n\nConfigModule\n\nConfigModule -->\n\nCacheModule->ConfigModule\n\n\n\n\n\nLogModule\n\nLogModule\n\nConfigModule -->\n\nLogModule->ConfigModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nConfigModule -->\n\nUserModule->ConfigModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nConfigService\n\nConfigService\n\nConfigModule -->\n\nConfigService->ConfigModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/config/config.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for work with system configuration.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ConfigController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CacheModule\n                        \n                        \n                            LogModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Module } from \"@nestjs/common\";\nimport { ConfigService } from \"./config.service\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { UserModule } from \"../user/user.module\";\nimport { ConfigController } from \"./config.controller\";\n\n/**\n * Module for work with system configuration.\n */\n@Module({\n  imports: [LogModule, CacheModule, UserModule.forRoot()],\n  controllers: [ConfigController],\n  providers: [ConfigService],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/config/config.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ConfigService is a service responsible for managing configurations in application.\nIt reads configuration properties from .properties files and stores the values in a store for fast retrieval.\nThe service provides methods to get, set, and remove configuration properties.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generatedTsOutput\n                            \n                            \n                                    Private\n                                    Readonly\n                                propertiesFiles\n                            \n                            \n                                    Private\n                                    Readonly\n                                valuesOfProperties\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                deleteExistingConfigTsFiles\n                            \n                            \n                                    Private\n                                    Async\n                                generateConfigTsFiles\n                            \n                            \n                                    Private\n                                generateNamespaceWithVariables\n                            \n                            \n                                    Async\n                                getPropertiesPage\n                            \n                            \n                                    Async\n                                initWithPropertiesFiles\n                            \n                            \n                                    Private\n                                mergePropertiesContent\n                            \n                            \n                                    Private\n                                parseValue\n                            \n                            \n                                    Private\n                                    Async\n                                processAndValidatePropertiesContent\n                            \n                            \n                                    Async\n                                removeProperty\n                            \n                            \n                                    Private\n                                    Async\n                                scanForPropertiesFiles\n                            \n                            \n                                    Async\n                                setProperty\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/common/config/config.service.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        deleteExistingConfigTsFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteExistingConfigTsFiles(directory: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:290\n                        \n                    \n\n\n            \n                \n                        Deletes existing configuration TypeScript files in the specified directory.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                directory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe directory to scan for generated configuration files.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        generateConfigTsFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateConfigTsFiles()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:322\n                        \n                    \n\n\n            \n                \n                        Generates TypeScript configuration files based on the processed properties files.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateNamespaceWithVariables\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateNamespaceWithVariables(namespaceName: string, processedData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:273\n                        \n                    \n\n\n            \n                \n                        Generates a namespace with variables based on the processed data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                namespaceName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the namespace.\n\n\n                                            \n                                        \n                                        \n                                                processedData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe processed data to include in the namespace.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The generated namespace content as a string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPropertiesPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPropertiesPage(params: PageableParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Retrieves a page of configuration properties based on the provided pageable parameters.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            PageableParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nPageable parameters for sorting, filtering, and pagination.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                A promise that resolves to an object containing the pageable data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initWithPropertiesFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    initWithPropertiesFiles(genCnfDir?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Initializes the service by scanning for properties files, generating config files, and synchronizing the cache.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                genCnfDir\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mergePropertiesContent\n                        \n                    \n                \n            \n            \n                \n                        \n                    mergePropertiesContent(mainContent: string, localContent: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:357\n                        \n                    \n\n\n            \n                \n                        Merges the content of the main properties file with the content of the local properties file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mainContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe content of the main properties file.\n\n\n                                            \n                                        \n                                        \n                                                localContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe content of the local properties file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The merged content.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parseValue\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:251\n                        \n                    \n\n\n            \n                \n                        Parses the value of a configuration property.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to parse.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The parsed value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        processAndValidatePropertiesContent\n                        \n                    \n                \n            \n            \n                \n                        \n                    processAndValidatePropertiesContent(filePath: string, content: string, fileNamePrefix: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:211\n                        \n                    \n\n\n            \n                \n                        Processes and validates the content of a properties file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path to the properties file.\n\n\n                                            \n                                        \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe content of the properties file.\n\n\n                                            \n                                        \n                                        \n                                                fileNamePrefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe prefix to use for the properties in the file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                An object containing the processed data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeProperty\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeProperty(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:123\n                        \n                    \n\n\n            \n                \n                        Removes a configuration property.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key of the configuration property to remove.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to a boolean indicating whether the operation was successful.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        scanForPropertiesFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    scanForPropertiesFiles(directory: string, globalKpContent: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:133\n                        \n                    \n\n\n            \n                \n                        Scans the specified directory for properties files and processes them.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                directory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe directory to scan for properties files.\n\n\n                                            \n                                        \n                                        \n                                                globalKpContent\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    \nThe content of the global KP properties file, if any.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setProperty\n                        \n                    \n                \n            \n            \n                \n                        \n                    setProperty(item: ConfigItem)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/config/config.service.ts:113\n                        \n                    \n\n\n            \n                \n                        Sets a configuration property.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            ConfigItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAn object containing the key and value of the configuration property.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to a boolean indicating whether the operation was successful.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generatedTsOutput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/config/config.service.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        propertiesFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in lib/common/config/config.service.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        valuesOfProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in lib/common/config/config.service.ts:46\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport * as fs from \"fs\";\nimport * as path from \"path\";\nimport {\n  CONFIG_CACHE_PREFIX,\n  CONFIG_FILE_EXT_PATTERN,\n  FILES_ENCODING,\n  GEN_SRC_DIR,\n  KP_PROPERTIES_FILE_NAME,\n  LOCAL_PROPERTIES_FILE_NAME,\n  PROPERTIES_FILE_EXT_PATTERN,\n} from \"./config.constants\";\nimport { ConfigItem } from \"./config.types\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * ConfigService is a service responsible for managing configurations in application.\n * It reads configuration properties from .properties files and stores the values in a store for fast retrieval.\n * The service provides methods to get, set, and remove configuration properties.\n */\n@Injectable()\nexport class ConfigService {\n  private readonly propertiesFiles: { [path: string]: { [key: string]: any } } =\n    {};\n  private readonly valuesOfProperties: { [key: string]: any } = {};\n  private generatedTsOutput: string;\n\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    private readonly cacheService: CacheService,\n  ) {}\n\n  /**\n   * Initializes the service by scanning for properties files, generating config files, and synchronizing the cache.\n   */\n  async initWithPropertiesFiles(genCnfDir?: string) {\n    this.generatedTsOutput = genCnfDir;\n    this.logger.log(`Scan project`);\n    await this.scanForPropertiesFiles(process.cwd());\n    this.logger.log(`Clean generated source dirs`);\n    await this.deleteExistingConfigTsFiles(process.cwd());\n    this.logger.log(`Clean config storage`);\n    await this.cacheService.del(CONFIG_CACHE_PREFIX + \":*\");\n    this.logger.log(`Generate config files`);\n    await this.generateConfigTsFiles();\n    for (const key in this.valuesOfProperties) {\n      await this.cacheService.set(`${key}`, this.valuesOfProperties[key]);\n    }\n    this.logger.log(`Config files was synchronize`);\n  }\n\n  /**\n   * Retrieves a page of configuration properties based on the provided pageable parameters.\n   * @param params - Pageable parameters for sorting, filtering, and pagination.\n   * @returns A promise that resolves to an object containing the pageable data.\n   */\n  async getPropertiesPage(\n    params: PageableParams,\n  ): Promise> {\n    const { limit, page, sort, order, filter } = params;\n    const propertyKeys = await this.cacheService.getFromPattern(\n      `${CONFIG_CACHE_PREFIX}:${!filter ? \"*\" : filter}`,\n    );\n    const sortedKeys = propertyKeys.sort((a, b) => {\n      if (sort && order) {\n        const aValue = a[sort] || \"\";\n        const bValue = b[sort] || \"\";\n        return order === \"ASC\"\n          ? aValue.localeCompare(bValue)\n          : bValue.localeCompare(aValue);\n      }\n      return a.localeCompare(b);\n    });\n    const totalCount = sortedKeys.length;\n    const start = (page - 1) * limit;\n    const end = start + limit;\n    const keysToRetrieve = sortedKeys.slice(start, end);\n    const propertiesWithValues: ConfigItem[] = await Promise.all(\n      keysToRetrieve.map(async (key) => {\n        const value = await this.cacheService.get(key);\n        return { key: key.replace(`${CONFIG_CACHE_PREFIX}:`, ``), value };\n      }),\n    );\n    return new PageableData(propertiesWithValues, totalCount, page, limit);\n  }\n\n  /**\n   * Sets a configuration property.\n   * @param item - An object containing the key and value of the configuration property.\n   * @returns A promise that resolves to a boolean indicating whether the operation was successful.\n   */\n  async setProperty(item: ConfigItem): Promise {\n    const fullKey = `${CONFIG_CACHE_PREFIX}:${item.key}`;\n    return await this.cacheService.set(fullKey, item.value);\n  }\n\n  /**\n   * Removes a configuration property.\n   * @param key - The key of the configuration property to remove.\n   * @returns A promise that resolves to a boolean indicating whether the operation was successful.\n   */\n  async removeProperty(key: string): Promise {\n    const fullKey = `${CONFIG_CACHE_PREFIX}:${key}`;\n    return await this.cacheService.del(fullKey);\n  }\n\n  /**\n   * Scans the specified directory for properties files and processes them.\n   * @param directory - The directory to scan for properties files.\n   * @param globalKpContent - The content of the global KP properties file, if any.\n   */\n  private async scanForPropertiesFiles(\n    directory: string,\n    globalKpContent: string | null = null,\n  ) {\n    const files = await fs.promises.readdir(directory, { withFileTypes: true });\n    if (directory === process.cwd()) {\n      for (const file of files) {\n        if (file.isFile() && file.name === KP_PROPERTIES_FILE_NAME) {\n          const kpPath = path.join(directory, file.name);\n          globalKpContent = await fs.promises.readFile(kpPath, FILES_ENCODING);\n          const localPropertiesPath = path.join(\n            directory,\n            LOCAL_PROPERTIES_FILE_NAME,\n          );\n          if (fs.existsSync(localPropertiesPath)) {\n            const localPropertiesContent = await fs.promises.readFile(\n              localPropertiesPath,\n              FILES_ENCODING,\n            );\n            globalKpContent = this.mergePropertiesContent(\n              globalKpContent,\n              localPropertiesContent,\n            );\n          }\n          break;\n        }\n      }\n    }\n    for (const file of files) {\n      const fullPath = path.join(directory, file.name);\n      if (file.isDirectory()) {\n        await this.scanForPropertiesFiles(fullPath, globalKpContent);\n      } else if (\n        file.isFile() &&\n        path.extname(file.name) === PROPERTIES_FILE_EXT_PATTERN\n      ) {\n        let fileContent = await fs.promises.readFile(fullPath, FILES_ENCODING);\n        const localPropertiesPath = path.join(\n          directory,\n          LOCAL_PROPERTIES_FILE_NAME,\n        );\n        if (fs.existsSync(localPropertiesPath)) {\n          const localPropertiesContent = await fs.promises.readFile(\n            localPropertiesPath,\n            FILES_ENCODING,\n          );\n          fileContent = this.mergePropertiesContent(\n            fileContent,\n            localPropertiesContent,\n          );\n        }\n        if (globalKpContent) {\n          fileContent = this.mergePropertiesContent(\n            fileContent,\n            globalKpContent,\n          );\n        }\n        const fileNamePrefix = path.basename(\n          fullPath,\n          PROPERTIES_FILE_EXT_PATTERN,\n        );\n        this.propertiesFiles[fullPath] =\n          await this.processAndValidatePropertiesContent(\n            fullPath,\n            fileContent,\n            fileNamePrefix,\n          );\n      }\n    }\n  }\n\n  /**\n   * Processes and validates the content of a properties file.\n   * @param filePath - The path to the properties file.\n   * @param content - The content of the properties file.\n   * @param fileNamePrefix - The prefix to use for the properties in the file.\n   * @returns An object containing the processed data.\n   */\n  private async processAndValidatePropertiesContent(\n    filePath: string,\n    content: string,\n    fileNamePrefix: string,\n  ) {\n    const lines = content.split(\"\\n\");\n    const processedData: { [key: string]: any } = {};\n    for (const line of lines) {\n      if (line.trim().startsWith(\"#\") || line.trim().length === 0) {\n        continue;\n      }\n      const [key, value] = line.split(\"=\");\n      let keyWithoutPrefix = key;\n      if (key.startsWith(fileNamePrefix + \".\")) {\n        keyWithoutPrefix = key.slice(fileNamePrefix.length + 1);\n      } else {\n        continue;\n      }\n      const variableName = keyWithoutPrefix\n        .split(\".\")\n        .map((part) => part.toUpperCase())\n        .join(\"_\");\n      if (!/^[_a-zA-Z][_a-zA-Z0-9]*$/.test(variableName)) {\n        this.logger.error(`Invalid line found: \"${line}\" in file ${filePath}`);\n        throw new Error(`Invalid content in file: \"${filePath}\"`);\n      }\n      const propertyKey = `${CONFIG_CACHE_PREFIX}:${fileNamePrefix}.${keyWithoutPrefix}`;\n      processedData[variableName] = `\"${propertyKey}\"`;\n      if (!propertyKey.startsWith(\"kp.\") && !propertyKey.startsWith(\"local.\")) {\n        this.valuesOfProperties[propertyKey] = this.parseValue(value.trim());\n      }\n    }\n    return processedData;\n  }\n\n  /**\n   * Parses the value of a configuration property.\n   * @param value - The value to parse.\n   * @returns The parsed value.\n   */\n  private parseValue(value: string) {\n    let processedValue = value.trim();\n    if (processedValue === \"true\" || processedValue === \"false\") {\n      processedValue = JSON.parse(processedValue);\n    } else if (processedValue === \"null\") {\n      processedValue = null;\n    } else if (/^[-+*/\\d\\s()]*$/.test(processedValue)) {\n      try {\n        processedValue = eval(processedValue);\n      } catch (e) {\n        return processedValue;\n      }\n    }\n    return processedValue;\n  }\n\n  /**\n   * Generates a namespace with variables based on the processed data.\n   * @param namespaceName - The name of the namespace.\n   * @param processedData - The processed data to include in the namespace.\n   * @returns The generated namespace content as a string.\n   */\n  private generateNamespaceWithVariables(\n    namespaceName: string,\n    processedData: { [key: string]: string },\n  ) {\n    let generatedContent = `export namespace ${namespaceName} {\\n`;\n    for (const variableName in processedData) {\n      const processedValue = processedData[variableName];\n      generatedContent += `  export const ${variableName} = ${processedValue};\\n`; // initial value: ${this.valuesOfProperties[processedValue.substring(1,processedValue.length-1)]}\n    }\n    generatedContent += \"}\\n\";\n    return generatedContent;\n  }\n\n  /**\n   * Deletes existing configuration TypeScript files in the specified directory.\n   * @param directory - The directory to scan for generated configuration files.\n   */\n  private async deleteExistingConfigTsFiles(directory: string) {\n    if (directory === process.cwd() + \"/node_modules\") {\n      return;\n    }\n    const files = await fs.promises.readdir(directory, { withFileTypes: true });\n    for (const file of files) {\n      const fullPath = path.join(directory, file.name);\n      if (file.isDirectory()) {\n        if (file.name === GEN_SRC_DIR) {\n          const genSrcFiles = await fs.promises.readdir(fullPath, {\n            withFileTypes: true,\n          });\n          this.logger.verbose(`Read dir: ${fullPath}`);\n          for (const genSrcFile of genSrcFiles) {\n            if (\n              genSrcFile.isFile() &&\n              genSrcFile.name.endsWith(CONFIG_FILE_EXT_PATTERN)\n            ) {\n              this.logger.verbose(`Delete file: ${genSrcFile.name}`);\n              await fs.promises.unlink(path.join(fullPath, genSrcFile.name));\n            }\n          }\n        } else {\n          await this.deleteExistingConfigTsFiles(fullPath);\n        }\n      }\n    }\n  }\n\n  /**\n   * Generates TypeScript configuration files based on the processed properties files.\n   */\n  private async generateConfigTsFiles() {\n    for (const filePath in this.propertiesFiles) {\n      if (path.basename(filePath) === LOCAL_PROPERTIES_FILE_NAME) {\n        continue;\n      }\n      const fileContent = this.propertiesFiles[filePath];\n      const dirPath = this.generatedTsOutput ?? path.dirname(filePath);\n      const genSrcPath = path.join(dirPath, GEN_SRC_DIR);\n      const configFileName = path\n        .basename(filePath, PROPERTIES_FILE_EXT_PATTERN)\n        .concat(CONFIG_FILE_EXT_PATTERN);\n      const configFilePath = path.join(genSrcPath, configFileName);\n      const namespaceName =\n        path\n          .basename(filePath, PROPERTIES_FILE_EXT_PATTERN)\n          .charAt(0)\n          .toUpperCase() +\n        path.basename(filePath, PROPERTIES_FILE_EXT_PATTERN).slice(1) +\n        \"Config\";\n      const generatedFileContent = this.generateNamespaceWithVariables(\n        namespaceName,\n        fileContent,\n      );\n      await fs.promises.mkdir(genSrcPath, { recursive: true });\n      await fs.promises.writeFile(configFilePath, generatedFileContent);\n      this.logger.verbose(`Generated ${configFilePath}`);\n    }\n  }\n\n  /**\n   * Merges the content of the main properties file with the content of the local properties file.\n   * @param mainContent - The content of the main properties file.\n   * @param localContent - The content of the local properties file.\n   * @returns The merged content.\n   */\n  private mergePropertiesContent(\n    mainContent: string,\n    localContent: string,\n  ): string {\n    const mainContentLines = mainContent.split(\"\\n\");\n    const localContentLines = localContent.split(\"\\n\");\n    const mergedContent = [...mainContentLines];\n    for (const localLine of localContentLines) {\n      if (localLine.trim().startsWith(\"#\") || localLine.trim().length === 0) {\n        continue;\n      }\n      const [localKey] = localLine.split(\"=\");\n      for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DbExceptionFilter.html":{"url":"classes/DbExceptionFilter.html","title":"class - DbExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DbExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/filters/db-exception-filter.ts\n        \n\n\n            \n                Description\n            \n            \n                Exception filter to handle database errors and transform them into HTTP responses.\nThis filter catches TypeORM errors and returns a 502 Bad Gateway response with the error message.\n\n            \n\n\n            \n                Implements\n            \n            \n                            DbExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: QueryFailedError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/filters/db-exception-filter.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        QueryFailedError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch } from \"@nestjs/common\";\nimport { QueryFailedError } from \"typeorm\";\nimport { TypeORMError } from \"typeorm/error/TypeORMError\";\n\n/**\n * Exception filter to handle database errors and transform them into HTTP responses.\n * This filter catches TypeORM errors and returns a 502 Bad Gateway response with the error message.\n */\n@Catch(TypeORMError)\nexport class DbExceptionFilter implements DbExceptionFilter {\n  catch(exception: QueryFailedError, host: ArgumentsHost) {\n    const response = host.switchToHttp().getResponse();\n    response.status(502).json({ message: exception.message });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DirectoryStructure.html":{"url":"interfaces/DirectoryStructure.html","title":"interface - DirectoryStructure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DirectoryStructure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/utils/files.utils.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a structure of directories and files.\nThe keys are directory names, and the values are either arrays of file names or nested DirectoryStructure objects.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        [] | DirectoryStructure\n\n                    \n                \n                        \n                            \n                                Defined in lib/shared/utils/files.utils.ts:43\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import * as fs from \"fs\";\nimport * as crypto from \"crypto\";\nimport { OpenMode } from \"node:fs\";\nimport { Abortable } from \"node:events\";\nimport * as path from \"path\";\n\n/**\n * Object to hold the dynamically imported file-type module.\n */\nconst fileTypeModule = {} as { lib: typeof import(\"file-type\") };\n\n/**\n * Immediately Invoked Function Expression (IIFE) to dynamically import the ES module 'file-type'.\n * @param {object} ft - The fileTypeModule object.\n */\n(async (ft) => {\n  // crutch for import ES module\n  ft.lib = await (eval('import(\"file-type\")') as Promise);\n})(fileTypeModule);\n\n/**\n * An interface representing a structure of directories and files.\n * The keys are directory names, and the values are either arrays of file names or nested DirectoryStructure objects.\n */\ninterface DirectoryStructure {\n  [key: string]: string[] | DirectoryStructure;\n}\n\nexport namespace FilesUtils {\n  /**\n   * Gets the file type module.\n   * @returns The file type module.\n   */\n  export function fileType() {\n    return fileTypeModule.lib;\n  }\n\n  /**\n   * Generates an SHA-256 hash from a buffer.\n   * @param fileBuffer - The buffer to hash.\n   * @returns The SHA-256 hash as a hex string.\n   */\n  export function getHashFromBuffer(fileBuffer: Buffer) {\n    const hashSum = crypto.createHash(\"sha256\");\n    hashSum.update(fileBuffer);\n    return hashSum.digest(\"hex\");\n  }\n\n  /**\n   * Creates directories if they do not exist.\n   * @param directoryPath - The path of the directory to create.\n   */\n  export async function createDirectoriesIfNotExist(directoryPath: string) {\n    try {\n      await fs.promises.access(directoryPath);\n    } catch (error) {\n      await fs.promises.mkdir(directoryPath, { recursive: true });\n    }\n  }\n\n  /**\n   * Reads a file.\n   * @param path - The path of the file to read.\n   * @param opts - Optional read options.\n   * @returns The file contents as a buffer.\n   */\n  export async function readFile(\n    path: string,\n    opts?:\n      | ({\n          encoding?: null | undefined;\n          flag?: OpenMode | undefined;\n        } & Abortable)\n      | null,\n  ) {\n    return await fs.promises.readFile(path);\n  }\n\n  /**\n   * Recursively reads a directory and returns its structure.\n   * @param dirPath - The path of the directory to read.\n   * @returns A promise that resolves to the directory structure.\n   */\n  export async function readDirectoryRecursively(\n    dirPath: string,\n  ): Promise {\n    const result: DirectoryStructure = {};\n\n    async function readDir(\n      currentPath: string,\n      relativePath: string,\n    ): Promise {\n      const files = await fs.promises.readdir(currentPath);\n      const filePromises = files.map(async (file) => {\n        const filePath = path.join(currentPath, file);\n        const stats = await fs.promises.stat(filePath);\n        const newRelativePath = path.join(relativePath, file);\n        if (stats.isDirectory()) {\n          result[newRelativePath] = await readDir(filePath, newRelativePath);\n        } else {\n          if (!result[relativePath]) {\n            result[relativePath] = [];\n          }\n          (result[relativePath] as string[]).push(file);\n        }\n      });\n      await Promise.all(filePromises);\n      return result[relativePath] || [];\n    }\n\n    await readDir(dirPath, \"\");\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DtoInterceptor.html":{"url":"injectables/DtoInterceptor.html","title":"injectable - DtoInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DtoInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/interceptors/dto.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                An interceptor to transform plain JavaScript objects into instances of a specified DTO class.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(serializer)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/interceptors/dto.interceptor.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serializer\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/interceptors/dto.interceptor.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from \"@nestjs/common\";\nimport { map } from \"rxjs\";\nimport { plainToInstance } from \"class-transformer\";\n\n/**\n * An interceptor to transform plain JavaScript objects into instances of a specified DTO class.\n * @template T - The DTO class to use for transformation.\n */\n@Injectable()\nexport class DtoInterceptor implements NestInterceptor {\n  constructor(private readonly serializer: new () => T) {}\n\n  intercept(context: ExecutionContext, next: CallHandler) {\n    return next\n      .handle()\n      .pipe(map((data) => plainToInstance(this.serializer, data)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntitySaveHandler.html":{"url":"interfaces/EntitySaveHandler.html","title":"interface - EntitySaveHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EntitySaveHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a handler for saving an entity.\nSuch handlers are triggered when entity recording occurs.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        handle\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(target: string, data: T, currentUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:191\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface BasicExplorerController {\n  getTargetList(): Promise;\n\n  saveTarget(target: ExplorerTarget): Promise;\n\n  getTarget(\n    target: string,\n    type: \"section\" | \"object\",\n    user: User,\n  ): Promise;\n\n  getEntity(target: string, id: string, user: User): Promise;\n\n  getEntityList(\n    target: string,\n    params: PageableParams,\n    user: User,\n  ): Promise>;\n\n  saveEntity(target: string, body: T, user: User): Promise;\n\n  removeEntity(target: string, id: string, user: User): Promise;\n}\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n  controller?: Class;\n  saveHandlers?: Class[];\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExchangeTokenPayload.html":{"url":"classes/ExchangeTokenPayload.html","title":"class - ExchangeTokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExchangeTokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for token exchange payload.\nContains the token to be exchanged for a new token pair JwtDto.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:85\n                        \n                    \n\n            \n                \n                    The refresh token to be exchanged.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIP, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\nimport { Expose, Transform, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common\";\nimport { UserDto } from \"../user/user.types\";\nimport { TransformUtils } from \"../../shared/utils/transform.utils\";\nimport { AuthService } from \"./auth.constants\";\nimport { Request, Response } from \"express\";\n\n/**\n * Data transfer object for login payload.\n * Contains user login information required for authentication.\n */\nexport class LoginPayload {\n  /**\n   * The login of the user.\n   * @example ```typescript\n   * \"admin\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  login: string;\n\n  /**\n   * The password of the user.\n   * @example ```typescript\n   * \"P@ssw0rd!\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  /**\n   * The IP address of the user.\n   * Optional.\n   * @example ```typescript\n   * \"192.168.0.1\"\n   */\n  @IsIP()\n  @IsOptional()\n  ipAddress: string;\n\n  /**\n   * The ID of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaId?: string;\n\n  /**\n   * The payload of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaPayload?: string;\n}\n\n/**\n * Data transfer object for token exchange payload.\n * Contains the token to be exchanged for a new token pair JwtDto.\n */\nexport class ExchangeTokenPayload {\n  /**\n   * The refresh token to be exchanged.\n   */\n  @IsString()\n  @IsOptional()\n  token: string;\n}\n\n/**\n * Data transfer object for JWT tokens.\n * Contains access and refresh tokens along with their expiration dates and user information.\n */\nexport class JwtDto {\n  /**\n   * The user-data object.\n   */\n  @Expose()\n  @Type(() => UserDto)\n  user: UserDto;\n\n  /**\n   * The access token.\n   */\n  @Expose()\n  accessToken: string;\n\n  /**\n   * The refresh token.\n   */\n  @Expose()\n  refreshToken: string;\n\n  /**\n   * The expiration date of the access token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  atExp: Date;\n\n  /**\n   * The expiration date of the refresh token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  rtExp: Date;\n}\n\nexport interface BasicAuthController {\n  login(\n    payload: LoginPayload,\n    request: Request,\n    response: Response,\n  ): Promise;\n\n  logout(token: string, response: Response): Promise;\n\n  exchange(\n    payload: ExchangeTokenPayload,\n    request: Request,\n    response: Response,\n  ): Promise>;\n}\n\n/**\n * Options for configuring the authentication module.\n * @property service - The authentication service class.\n */\nexport type AuthModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerAction.html":{"url":"interfaces/ExplorerAction.html","title":"interface - ExplorerAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an action in an explorer target entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            params\n                                        \n                                \n                                \n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         Explorer.Variation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Explorer.Variation\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface BasicExplorerController {\n  getTargetList(): Promise;\n\n  saveTarget(target: ExplorerTarget): Promise;\n\n  getTarget(\n    target: string,\n    type: \"section\" | \"object\",\n    user: User,\n  ): Promise;\n\n  getEntity(target: string, id: string, user: User): Promise;\n\n  getEntityList(\n    target: string,\n    params: PageableParams,\n    user: User,\n  ): Promise>;\n\n  saveEntity(target: string, body: T, user: User): Promise;\n\n  removeEntity(target: string, id: string, user: User): Promise;\n}\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n  controller?: Class;\n  saveHandlers?: Class[];\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerActionEntity.html":{"url":"entities/ExplorerActionEntity.html","title":"entity - ExplorerActionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerActionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-action.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the available actions on the entities of the system, both in the lists and in the detailed editing pages\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                params\n                            \n                            \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Explorer.Variation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({type: 'enum', enum: undefined, default: undefined, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-action.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerAction } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { Explorer } from \"../explorer.constants\";\nimport { SimpleJsonTransformer } from \"../../../shared/transformers/simple-json.transformer\";\n\n/**\n * The entity stores the available actions on the entities of the system, both in the lists and in the detailed editing pages\n */\n@Entity(\"explorer_actions\")\nexport class ExplorerActionEntity implements ExplorerAction {\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @Index()\n  @Column({\n    type: \"enum\",\n    enum: [\"section\", \"object\"],\n    default: null,\n    nullable: true,\n  })\n  type: Explorer.Variation;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    nullable: true,\n    default: null,\n  })\n  params: object;\n  @Index()\n  @Column(\"int\", { default: 0, unsigned: true })\n  priority: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerColumn.html":{"url":"interfaces/ExplorerColumn.html","title":"interface - ExplorerColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a column in an explorer target entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            multiple\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            named\n                                        \n                                \n                                \n                                        \n                                            objectEnabled\n                                        \n                                \n                                \n                                        \n                                            objectPriority\n                                        \n                                \n                                \n                                        \n                                            objectRenderer\n                                        \n                                \n                                \n                                        \n                                            objectVisibility\n                                        \n                                \n                                \n                                        \n                                            primary\n                                        \n                                \n                                \n                                        \n                                            property\n                                        \n                                \n                                \n                                        \n                                            referencedEntityName\n                                        \n                                \n                                \n                                        \n                                            referencedTableName\n                                        \n                                \n                                \n                                        \n                                            sectionEnabled\n                                        \n                                \n                                \n                                        \n                                            sectionPriority\n                                        \n                                \n                                \n                                        \n                                            sectionRenderer\n                                        \n                                \n                                \n                                        \n                                            sectionVisibility\n                                        \n                                \n                                \n                                        \n                                            tab\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            unique\n                                        \n                                \n                                \n                                        \n                                            virtual\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multiple\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multiple:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        named\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        named:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectEnabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectPriority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectPriority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectRenderer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectRenderer:         ExplorerColumnRenderer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumnRenderer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objectVisibility\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objectVisibility:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primary:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        referencedEntityName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        referencedEntityName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        referencedTableName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        referencedTableName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionEnabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionPriority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionPriority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionRenderer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionRenderer:         ExplorerColumnRenderer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumnRenderer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sectionVisibility\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sectionVisibility:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tab:         ExplorerTab\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerTab\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         ExplorerTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ColumnDataType | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ColumnDataType | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unique\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unique:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        virtual\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        virtual:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface BasicExplorerController {\n  getTargetList(): Promise;\n\n  saveTarget(target: ExplorerTarget): Promise;\n\n  getTarget(\n    target: string,\n    type: \"section\" | \"object\",\n    user: User,\n  ): Promise;\n\n  getEntity(target: string, id: string, user: User): Promise;\n\n  getEntityList(\n    target: string,\n    params: PageableParams,\n    user: User,\n  ): Promise>;\n\n  saveEntity(target: string, body: T, user: User): Promise;\n\n  removeEntity(target: string, id: string, user: User): Promise;\n}\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n  controller?: Class;\n  saveHandlers?: Class[];\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerColumnEntity.html":{"url":"entities/ExplorerColumnEntity.html","title":"entity - ExplorerColumnEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerColumnEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-column.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the metadata of the field (columns in the database table)\nand stores the display configuration in lists and detailed pages\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                multiple\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                named\n                            \n                            \n                                    \n                                    \n                                objectEnabled\n                            \n                            \n                                    \n                                    \n                                objectPriority\n                            \n                            \n                                    \n                                    \n                                objectRenderer\n                            \n                            \n                                    \n                                objectRendererParams\n                            \n                            \n                                    \n                                    \n                                objectVisibility\n                            \n                            \n                                    \n                                    \n                                primary\n                            \n                            \n                                    \n                                    \n                                property\n                            \n                            \n                                    \n                                    \n                                referencedEntityName\n                            \n                            \n                                    \n                                    \n                                referencedTableName\n                            \n                            \n                                    \n                                    \n                                sectionEnabled\n                            \n                            \n                                    \n                                    \n                                sectionPriority\n                            \n                            \n                                    \n                                    \n                                sectionRenderer\n                            \n                            \n                                    \n                                sectionRendererParams\n                            \n                            \n                                    \n                                    \n                                sectionVisibility\n                            \n                            \n                                    \n                                tab\n                            \n                            \n                                    \n                                target\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                unique\n                            \n                            \n                                    \n                                    \n                                virtual\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        multiple\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        named\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'object_enabled', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectPriority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'object_priority', default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectRenderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerColumnRendererEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectRendererParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, name: 'object_renderer_params', nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectVisibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'object_visibility', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        primary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        property\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        referencedEntityName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'referenced_entity_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        referencedTableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'referenced_table_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sectionEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'section_enabled', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sectionPriority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'section_priority', default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sectionRenderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerColumnRendererEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sectionRendererParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, name: 'section_renderer_params', nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sectionVisibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'section_visibility', default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerTabEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerTargetEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.target)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        unique\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        virtual\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column.entity.ts:63\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerTargetEntity } from \"./explorer-target.entity\";\nimport { ExplorerColumn } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { ExplorerColumnRendererEntity } from \"./explorer-column-renderer.entity\";\nimport { SimpleJsonTransformer } from \"../../../shared/transformers/simple-json.transformer\";\nimport { ExplorerTabEntity } from \"./explorer-tab.entity\";\n\n/**\n * The entity stores the metadata of the field (columns in the database table)\n * and stores the display configuration in lists and detailed pages\n */\n@Entity(\"explorer_columns\")\nexport class ExplorerColumnEntity implements ExplorerColumn {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  id: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  property: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @ManyToOne(() => ExplorerTargetEntity, (t) => t.target)\n  target: ExplorerTargetEntity;\n\n  @Column(\"text\", { nullable: false })\n  type: string;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  virtual: boolean;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  primary: boolean;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  unique: boolean;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  multiple: boolean;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  named: boolean;\n\n  @Index()\n  @Column(\"varchar\", { name: \"referenced_entity_name\", nullable: true })\n  referencedEntityName: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"referenced_table_name\", nullable: true })\n  referencedTableName: string;\n\n  @Index()\n  @Column(\"int\", { name: \"section_priority\", default: 0, unsigned: true })\n  sectionPriority: number;\n\n  @Index()\n  @Column(\"int\", { name: \"object_priority\", default: 0, unsigned: true })\n  objectPriority: number;\n\n  @Index()\n  @Column(\"boolean\", { name: \"section_enabled\", default: true })\n  sectionEnabled: boolean;\n\n  @Index()\n  @Column(\"boolean\", { name: \"object_enabled\", default: true })\n  objectEnabled: boolean;\n\n  @Index()\n  @Column(\"boolean\", { name: \"section_visibility\", default: true })\n  sectionVisibility: boolean;\n\n  @Index()\n  @Column(\"boolean\", { name: \"object_visibility\", default: true })\n  objectVisibility: boolean;\n\n  @Index()\n  @ManyToOne(() => ExplorerColumnRendererEntity, (t) => t.code)\n  sectionRenderer: ExplorerColumnRendererEntity;\n\n  @Index()\n  @ManyToOne(() => ExplorerColumnRendererEntity, (t) => t.code)\n  objectRenderer: ExplorerColumnRendererEntity;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    name: \"section_renderer_params\",\n    nullable: true,\n    default: null,\n  })\n  sectionRendererParams: object;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    name: \"object_renderer_params\",\n    nullable: true,\n    default: null,\n  })\n  objectRendererParams: object;\n\n  @ManyToOne(() => ExplorerTabEntity, (t) => t.id)\n  tab: ExplorerTabEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerColumnRenderer.html":{"url":"interfaces/ExplorerColumnRenderer.html","title":"interface - ExplorerColumnRenderer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerColumnRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a renderer for an explorer column.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            params\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         Explorer.Variation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Explorer.Variation\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface BasicExplorerController {\n  getTargetList(): Promise;\n\n  saveTarget(target: ExplorerTarget): Promise;\n\n  getTarget(\n    target: string,\n    type: \"section\" | \"object\",\n    user: User,\n  ): Promise;\n\n  getEntity(target: string, id: string, user: User): Promise;\n\n  getEntityList(\n    target: string,\n    params: PageableParams,\n    user: User,\n  ): Promise>;\n\n  saveEntity(target: string, body: T, user: User): Promise;\n\n  removeEntity(target: string, id: string, user: User): Promise;\n}\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n  controller?: Class;\n  saveHandlers?: Class[];\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerColumnRendererEntity.html":{"url":"entities/ExplorerColumnRendererEntity.html","title":"entity - ExplorerColumnRendererEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerColumnRendererEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-column-renderer.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                An entity stores parameters for rendering the read/write interface of a specific column of a specific entity\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                params\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Explorer.Variation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({type: 'enum', enum: undefined, default: undefined, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-column-renderer.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerColumnRenderer } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { SimpleJsonTransformer } from \"../../../shared/transformers/simple-json.transformer\";\nimport { Explorer } from \"../explorer.constants\";\n\n/**\n * An entity stores parameters for rendering the read/write interface of a specific column of a specific entity\n */\n@Entity(\"explorer_column_renderers\")\nexport class ExplorerColumnRendererEntity implements ExplorerColumnRenderer {\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @Index()\n  @Column({\n    type: \"enum\",\n    enum: [\"section\", \"object\"],\n    default: null,\n    nullable: true,\n  })\n  type: Explorer.Variation;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    nullable: true,\n    default: null,\n  })\n  params: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ExplorerController.html":{"url":"controllers/ExplorerController.html","title":"controller - ExplorerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ExplorerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /explorer\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getEntity\n                            \n                            \n                                    \n                                    Async\n                                getEntityList\n                            \n                            \n                                    \n                                    Async\n                                getTarget\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getTargetList\n                            \n                            \n                                    \n                                    Async\n                                removeEntity\n                            \n                            \n                                    \n                                    Async\n                                saveEntity\n                            \n                            \n                                    \n                                    \n                                    Async\n                                saveTarget\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntity(target: string, id: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/entity/:target')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.controller.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getEntityList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntityList(target: string, params: PageableParams, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/pageable/:target')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.controller.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n                                            \n                                                            PageableParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getTarget\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTarget(target: string, type: \"section\" | \"object\", user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/target/:target')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.controller.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                        \"section\" | \"object\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getTargetList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTargetList()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/target-list')@ForRoles(Roles.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        removeEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeEntity(target: string, id: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/entity/:target')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.controller.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        saveEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveEntity(target: string, body: T, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/entity/:target')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.controller.ts:134\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        saveTarget\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveTarget(target: ExplorerTarget)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/target')@ForRoles(Roles.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            ExplorerTarget\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Inject,\n  NotFoundException,\n  Optional,\n  Param,\n  Post,\n  Query,\n  UseGuards,\n} from \"@nestjs/common\";\nimport { AuthGuard } from \"../../shared/guards/auth.guard\";\nimport { RolesGuard } from \"../../shared/guards/roles.guard\";\nimport {\n  BasicExplorerController,\n  EntitySaveHandler,\n  ExplorerService,\n  ExplorerTarget,\n  ExplorerTargetParams,\n  TargetData,\n} from \"./explorer.types\";\nimport { ForRoles } from \"../../shared/decorators/for-roles.decorator\";\nimport { Roles } from \"../../shared/constants\";\nimport { ObjectLiteral } from \"typeorm\";\nimport { CurrentUser } from \"../../shared/decorators/current-user.decorator\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\nimport ENTITY_SAVE_HANDLER = Explorer.ENTITY_SAVE_HANDLER;\nimport { Explorer } from \"./explorer.constants\";\n\n@Controller(\"/explorer\")\n@UseGuards(AuthGuard, RolesGuard)\nexport class ExplorerController implements BasicExplorerController {\n  constructor(\n    @Optional()\n    @Inject(ENTITY_SAVE_HANDLER)\n    private readonly saveHandlers: EntitySaveHandler[] = [],\n    private readonly explorerService: ExplorerService,\n  ) {}\n\n  @Get(\"/target-list\")\n  @ForRoles(Roles.ADMIN)\n  async getTargetList(): Promise {\n    return await this.explorerService.getTargetList();\n  }\n\n  @Post(\"/target\")\n  @ForRoles(Roles.ADMIN)\n  async saveTarget(@Body() target: ExplorerTarget): Promise {\n    return await this.explorerService.changeTarget(target);\n  }\n\n  @Get(\"/target/:target\")\n  async getTarget(\n    @Param(\"target\") target: string,\n    @Query(\"type\") type: \"section\" | \"object\",\n    @CurrentUser() user: User,\n  ): Promise {\n    const targetParams: ExplorerTargetParams = {\n      section: type === \"section\",\n      object: type === \"object\",\n      fullRelations: true,\n      readRequest: true,\n      checkUserAccess: user,\n    };\n    const res = await this.explorerService.getTargetData(target, targetParams);\n    if (!res) {\n      throw new NotFoundException();\n    }\n    return res;\n  }\n\n  @Get(\"/entity/:target\")\n  async getEntity(\n    @Param(\"target\") target: string,\n    @Query(\"id\") id: string,\n    @CurrentUser() user: User,\n  ): Promise {\n    const targetParams: ExplorerTargetParams = {\n      readRequest: true,\n      checkUserAccess: user,\n    };\n    const res = await this.explorerService.getEntityData(\n      target,\n      id,\n      undefined,\n      targetParams,\n    );\n    if (!res) {\n      throw new NotFoundException();\n    }\n    return res;\n  }\n\n  @Get(\"/pageable/:target\")\n  async getEntityList(\n    @Param(\"target\") target: string,\n    @Query() params: PageableParams,\n    @CurrentUser() user: User,\n  ): Promise> {\n    const targetParams: ExplorerTargetParams = {\n      readRequest: true,\n      checkUserAccess: user,\n    };\n    return await this.explorerService.getPageableEntityData(\n      target,\n      params,\n      targetParams,\n    );\n  }\n\n  @Post(\"/entity/:target\")\n  async saveEntity(\n    @Param(\"target\") target: string,\n    @Body() body: T,\n    @CurrentUser() user: User,\n  ): Promise {\n    let data = body;\n    for (const handler of this.saveHandlers) {\n      data = handler.handle(target, data, user);\n    }\n    const targetParams: ExplorerTargetParams = {\n      writeRequest: true,\n      checkUserAccess: user,\n    };\n    return await this.explorerService.saveEntityData(\n      target,\n      data,\n      targetParams,\n    );\n  }\n\n  @Delete(\"/entity/:target\")\n  async removeEntity(\n    @Param(\"target\") target: string,\n    @Query(\"id\") id: string,\n    @CurrentUser() user: User,\n  ): Promise {\n    const targetParams: ExplorerTargetParams = {\n      writeRequest: true,\n      checkUserAccess: user,\n    };\n    return await this.explorerService.removeEntity(target, id, targetParams);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExplorerModule.html":{"url":"modules/ExplorerModule.html","title":"module - ExplorerModule","body":"\n                   \n\n\n\n\n    Modules\n    ExplorerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/explorer/explorer.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for exploring and analyzing the database schema and relationships.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.module.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      service: BasicExplorerService,\n      controller: ExplorerController,\n      saveHandlers: [],\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.module.ts:68\n                        \n                    \n\n\n            \n                \n                        Initializes the module and analyzes the database.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module, OnModuleInit } from \"@nestjs/common\";\nimport { BasicExplorerService } from \"./basic-explorer.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { ExplorerTargetEntity } from \"./entity/explorer-target.entity\";\nimport { ExplorerColumnEntity } from \"./entity/explorer-column.entity\";\nimport { ExplorerModuleOptions, ExplorerService } from \"./explorer.types\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { ExplorerController } from \"./explorer.controller\";\nimport { UserModule } from \"../user/user.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { Explorer } from \"./explorer.constants\";\nimport DEFAULT_EXPLORER_MODULE_DEPS = Explorer.DEFAULT_EXPLORER_MODULE_DEPS;\n\n/**\n * Module for exploring and analyzing the database schema and relationships.\n */\n@Module({})\nexport class ExplorerModule implements OnModuleInit {\n  static forRoot(\n    options: Partial = {\n      service: BasicExplorerService,\n      controller: ExplorerController,\n      saveHandlers: [],\n    },\n  ): DynamicModule {\n    const opts = Object.assign({}, DEFAULT_EXPLORER_MODULE_DEPS, options);\n    return {\n      module: ExplorerModule,\n      controllers: [opts.controller],\n      imports: [\n        TypeOrmModule.forFeature([ExplorerTargetEntity, ExplorerColumnEntity]),\n        LogModule,\n        UserModule.forRoot(),\n        CacheModule,\n      ],\n      providers: [\n        {\n          provide: ExplorerService,\n          useClass: opts.service,\n        },\n        Explorer.provideSaveHandlers(...opts.saveHandlers), // TODO resolve ERROR\n      ],\n      exports: [ExplorerService],\n    };\n  }\n\n  constructor(private readonly service: ExplorerService) {}\n\n  /**\n   * Initializes the module and analyzes the database.\n   */\n  async onModuleInit() {\n    await this.service.analyzeDatabase();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExplorerService.html":{"url":"classes/ExplorerService.html","title":"class - ExplorerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExplorerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing an explorer service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                analyzeDatabase\n                            \n                            \n                                    Abstract\n                                changeTarget\n                            \n                            \n                                    Abstract\n                                getEntityData\n                            \n                            \n                                    Abstract\n                                getPageableEntityData\n                            \n                            \n                                    Abstract\n                                getTargetData\n                            \n                            \n                                    Abstract\n                                getTargetList\n                            \n                            \n                                    Abstract\n                                removeEntity\n                            \n                            \n                                    Abstract\n                                saveEntityData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        analyzeDatabase\n                        \n                    \n                \n            \n            \n                \n                        \n                    analyzeDatabase()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:202\n                        \n                    \n\n\n            \n                \n                        Analyzes the database schema and relationships.\nFill data for explorer tables based on that analysis.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        changeTarget\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeTarget(target: ExplorerTarget)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:280\n                        \n                    \n\n\n            \n                \n                        Changes the target data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            ExplorerTarget\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the target entity.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the changed target entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getEntityData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getEntityData(target: string, rowId: string | number, maxDepth?: number, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:251\n                        \n                    \n\n\n            \n                \n                        Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe target entity name.\n\n\n                                            \n                                        \n                                        \n                                                rowId\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the row to fetch.\n\n\n                                            \n                                        \n                                        \n                                                maxDepth\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nThe maximum depth of relations to fetch. Defaults to Infinity.\n\n\n                                            \n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nParameters to fetch and check entity access.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the entity object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getPageableEntityData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPageableEntityData(target: string, params?: PageableParams, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:211\n                        \n                    \n\n\n            \n                \n                        Retrieves paginated entity data with relations.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the target entity or table.\n\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            PageableParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nAn optional object containing pageable parameters.\n\n\n                                            \n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nParameters to fetch and check entity access.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to a PageableData object containing the paginated results.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getTargetData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTargetData(target: string, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:264\n                        \n                    \n\n\n            \n                \n                        Retrieves target data for the specified target entity name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe target entity name.\n\n\n                                            \n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nParameters to fetch and check entity access.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the TargetData object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getTargetList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTargetList()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:273\n                        \n                    \n\n\n            \n                \n                        Retrieves a list of all registered targets with their item counts.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to an array of ExplorerTarget objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        removeEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeEntity(target: string, id: string | number, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:237\n                        \n                    \n\n\n            \n                \n                        Removes an entity by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the entity-target.\n\n\n                                            \n                                        \n                                        \n                                                id\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the entity to be removed.\n\n\n                                            \n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nParameters to fetch and check entity access.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the removed entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        saveEntityData\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveEntityData(target: string, entity: T, targetParams?: ExplorerTargetParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/explorer.types.ts:224\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Saves or updates an entity, including its nested entities.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the target entity.\n\n\n                                            \n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe entity object to be saved or updated.\n\n\n                                            \n                                        \n                                        \n                                                targetParams\n                                            \n                                                            ExplorerTargetParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nParameters to fetch and check entity access.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the saved or updated entity.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface BasicExplorerController {\n  getTargetList(): Promise;\n\n  saveTarget(target: ExplorerTarget): Promise;\n\n  getTarget(\n    target: string,\n    type: \"section\" | \"object\",\n    user: User,\n  ): Promise;\n\n  getEntity(target: string, id: string, user: User): Promise;\n\n  getEntityList(\n    target: string,\n    params: PageableParams,\n    user: User,\n  ): Promise>;\n\n  saveEntity(target: string, body: T, user: User): Promise;\n\n  removeEntity(target: string, id: string, user: User): Promise;\n}\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n  controller?: Class;\n  saveHandlers?: Class[];\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerTab.html":{"url":"interfaces/ExplorerTab.html","title":"interface - ExplorerTab","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerTab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a tab in an explorer target entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         ExplorerTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface BasicExplorerController {\n  getTargetList(): Promise;\n\n  saveTarget(target: ExplorerTarget): Promise;\n\n  getTarget(\n    target: string,\n    type: \"section\" | \"object\",\n    user: User,\n  ): Promise;\n\n  getEntity(target: string, id: string, user: User): Promise;\n\n  getEntityList(\n    target: string,\n    params: PageableParams,\n    user: User,\n  ): Promise>;\n\n  saveEntity(target: string, body: T, user: User): Promise;\n\n  removeEntity(target: string, id: string, user: User): Promise;\n}\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n  controller?: Class;\n  saveHandlers?: Class[];\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerTabEntity.html":{"url":"entities/ExplorerTabEntity.html","title":"entity - ExplorerTabEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerTabEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-tab.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the tabbed display parameters in the entity editing interface.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                priority\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {default: 0, unsigned: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('simple-json', {transformer: SimpleJsonTransformer, nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerTargetEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.target)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-tab.entity.ts:56\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerTab } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { SimpleJsonTransformer } from \"../../../shared/transformers/simple-json.transformer\";\nimport { ExplorerTargetEntity } from \"./explorer-target.entity\";\n\n/**\n * The entity stores the tabbed display parameters in the entity editing interface.\n */\n@Entity(\"explorer_tabs\")\nexport class ExplorerTabEntity implements ExplorerTab {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  id: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @Index()\n  @Column(\"int\", { default: 0, unsigned: true })\n  priority: number;\n\n  @Column(\"simple-json\", {\n    transformer: SimpleJsonTransformer,\n    nullable: true,\n    default: null,\n  })\n  size: object;\n\n  @ManyToOne(() => ExplorerTargetEntity, (t) => t.target)\n  target: ExplorerTargetEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExplorerTarget.html":{"url":"interfaces/ExplorerTarget.html","title":"interface - ExplorerTarget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExplorerTarget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an explorer target entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actions\n                                        \n                                \n                                \n                                        \n                                            canRead\n                                        \n                                \n                                \n                                        \n                                            canWrite\n                                        \n                                \n                                \n                                        \n                                            columns\n                                        \n                                \n                                \n                                        \n                                            defaultActionCreate\n                                        \n                                \n                                \n                                        \n                                            defaultActionDelete\n                                        \n                                \n                                \n                                        \n                                            defaultActionDuplicate\n                                        \n                                \n                                \n                                        \n                                            defaultActionSave\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            tableName\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actions:         ExplorerAction[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerAction[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canRead\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canRead:         UserRoleEntity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRoleEntity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canWrite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        canWrite:         UserRoleEntity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRoleEntity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        columns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columns:         ExplorerColumn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumn[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultActionCreate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultActionCreate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultActionDelete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultActionDelete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultActionDuplicate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultActionDuplicate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultActionSave\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultActionSave:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tableName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tableName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface BasicExplorerController {\n  getTargetList(): Promise;\n\n  saveTarget(target: ExplorerTarget): Promise;\n\n  getTarget(\n    target: string,\n    type: \"section\" | \"object\",\n    user: User,\n  ): Promise;\n\n  getEntity(target: string, id: string, user: User): Promise;\n\n  getEntityList(\n    target: string,\n    params: PageableParams,\n    user: User,\n  ): Promise>;\n\n  saveEntity(target: string, body: T, user: User): Promise;\n\n  removeEntity(target: string, id: string, user: User): Promise;\n}\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n  controller?: Class;\n  saveHandlers?: Class[];\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ExplorerTargetEntity.html":{"url":"entities/ExplorerTargetEntity.html","title":"entity - ExplorerTargetEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ExplorerTargetEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/entity/explorer-target.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores a detailed description of the entity (tables in the database) in the form of an object\nwith metadata and stores the display configuration in lists and detailed pages\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                actions\n                            \n                            \n                                    \n                                    \n                                alias\n                            \n                            \n                                    \n                                    \n                                canRead\n                            \n                            \n                                    \n                                    \n                                canWrite\n                            \n                            \n                                    \n                                columns\n                            \n                            \n                                    \n                                    \n                                defaultActionCreate\n                            \n                            \n                                    \n                                    \n                                defaultActionDelete\n                            \n                            \n                                    \n                                    \n                                defaultActionDuplicate\n                            \n                            \n                                    \n                                    \n                                defaultActionSave\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                tableName\n                            \n                            \n                                    \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerAction[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        alias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        canRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        canWrite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExplorerColumnEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, c => c.target, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defaultActionCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'default_action_create', default: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defaultActionDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'default_action_delete', default: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defaultActionDuplicate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'default_action_duplicate', default: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        defaultActionSave\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {name: 'default_action_save', default: true, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tableName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {name: 'table_name', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/explorer/entity/explorer-target.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { ExplorerColumnEntity } from \"./explorer-column.entity\";\nimport { ExplorerAction, ExplorerTarget } from \"../explorer.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { MediaEntity } from \"../../media/entity/media.entity\";\nimport { ExplorerActionEntity } from \"./explorer-action.entity\";\nimport { UserRoleEntity } from \"../../user/entity/user-role.entity\";\n\n/**\n * The entity stores a detailed description of the entity (tables in the database) in the form of an object\n * with metadata and stores the display configuration in lists and detailed pages\n */\n@Entity(\"explorer_targets\")\nexport class ExplorerTargetEntity implements ExplorerTarget {\n  @PrimaryColumn(\"varchar\")\n  target: string;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { name: \"table_name\", nullable: false })\n  tableName: string;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  alias: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  icon: MediaEntity;\n\n  @OneToMany(() => ExplorerColumnEntity, (c) => c.target, { cascade: true })\n  columns: ExplorerColumnEntity[];\n\n  @ManyToMany(() => ExplorerActionEntity)\n  @JoinTable()\n  actions: ExplorerAction[];\n\n  @Index()\n  @Column(\"boolean\", {\n    name: \"default_action_create\",\n    default: true,\n    nullable: true,\n  })\n  defaultActionCreate: boolean;\n\n  @Index()\n  @Column(\"boolean\", {\n    name: \"default_action_save\",\n    default: true,\n    nullable: true,\n  })\n  defaultActionSave: boolean;\n\n  @Index()\n  @Column(\"boolean\", {\n    name: \"default_action_delete\",\n    default: true,\n    nullable: true,\n  })\n  defaultActionDelete: boolean;\n\n  @Index()\n  @Column(\"boolean\", {\n    name: \"default_action_duplicate\",\n    default: true,\n    nullable: true,\n  })\n  defaultActionDuplicate: boolean;\n\n  @ManyToMany(() => UserRoleEntity)\n  @JoinTable()\n  canRead: UserRoleEntity[];\n\n  @ManyToMany(() => UserRoleEntity)\n  @JoinTable()\n  canWrite: UserRoleEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/File.html":{"url":"interfaces/File.html","title":"interface - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a file.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            preview\n                                        \n                                \n                                \n                                        \n                                            public\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains a unique character identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field stores the icon of the file\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the identification number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         FileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains a reference to the FileMetadata container\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the name of the file\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field stores the path to the file on the server\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preview\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preview:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field stores the media preview of the file\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        public\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        public:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field specifies the type of access to the file, public or private\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field stores the size of the file in bytes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the date the file was created\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  /** This field contains the identification number */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file */\n  name: string;\n  /** This field stores the path to the file on the server */\n  path: string;\n  /** This field specifies the type of access to the file, public or private */\n  public: boolean;\n  /** This field stores the size of the file in bytes */\n  size: number;\n  /** This field stores the icon of the file */\n  icon: Media;\n  /** This field stores the media preview of the file  */\n  preview: Media;\n  /** This field contains a reference to the FileMetadata container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The MIME type of the file, indicating the nature and format of the file content */\n  mime: string;\n  /** The file extension, indicating the file format */\n  ext: string;\n  /** The cryptographic hash of the file content, used for integrity verification and identification */\n  hash: string;\n  /** The ICC (International Color Consortium) profile data associated with the file, used for color management */\n  icc: IccFileMetadata;\n  /** GPS data associated with the location where the file was created, including latitude, longitude and elevation */\n  gps: GpsFileMetadata;\n  /** This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics */\n  image: ImageFileMetadata;\n  /** This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created */\n  exif: ExifFileMetadata;\n  /** This field is used to store information about the structure and properties of the audio file */\n  audio: AudioFileMetadata;\n  /** This field is used to store information about the structure and properties of the video recording*/\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The number of bits used to represent the color of a single pixel in the image */\n  bps: number;\n  /** The width of the image in pixels */\n  width: number;\n  /** The height of the image in pixels */\n  height: number;\n  /** The number of color components used to represent the color of the image */\n  colorComponents: number;\n  /** The subsampling method used for the image, indicating how color information is sampled */\n  subsampling: string;\n  /** The date and time when the image was created or last modified */\n  dateTime: Date;\n  /** The bit depth of the image, indicating the number of bits used for color representation */\n  bitDepth: number;\n  /** The color type of the image, indicating the color model used */\n  colorType: string;\n  /** Contains the compression method used to reduce the size of the image */\n  compression: string;\n  /** Specifies the filtering method used to process the image data before compressing it */\n  filter: string;\n  /**  Indicates whether interlacing is used in the image, allowing for progressive display */\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The version of the ICC profile, indicating the specification version used to create the color profile. */\n  profileVersion: string;\n  /** The class of the ICC profile, indicating its primary purpose and type */\n  profileClassValue: string;\n  /** The name of the ICC profile class, describing its primary purpose */\n  profileClassName: string;\n  /** The connection space of the ICC profile, representing the intermediate color space used for color conversions. */\n  connectionSpace: string;\n  /** The date and time when the ICC profile was created or last modified */\n  iccProfileDate: Date;\n  /** A unique signature of the ICC profile used to confirm its authenticity and validity */\n  iccSignature: string;\n  /** The primary platform or operating system for which the ICC profile was created or optimized */\n  primaryPlatform: string;\n  /** The manufacturer of the device for which the ICC profile was created */\n  deviceManufacturer: string;\n  /** The model number of the device for which the ICC profile was created */\n  deviceModelNumber: string;\n  /**  Indicates the type of rendering to be used when converting colors between color spaces */\n  renderingIntentValue: string;\n  /** Specifies the name of the rendering type that is used when converting colors between color spaces */\n  renderingIntentName: string;\n  /** The name or identifier of the creator of the ICC profile */\n  profileCreator: string;\n  /** A description of the ICC profile, explaining its purpose and characteristics */\n  iccDescription: string;\n  /** The copyright information for the ICC profile, indicating ownership and usage rights */\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** This field specifies the manufacturer of the camera */\n  make: string;\n  /** This field specifies the model of the camera  */\n  model: string;\n  /** Indicates image display orientation based on EXIF metadata */\n  orientation: string;\n  /** X-side resolution of the photo*/\n  resolutionX: string;\n  /** Y-side resolution of the photo*/\n  resolutionY: string;\n  /** Unit of image resolution */\n  resolutionUnit: string;\n  /** The field contains information about the software that was used to create or edit the image */\n  software: string;\n  /** This field is responsible for specifying the method of placing these color components Y, Cb and Cr relative to the image pixels */\n  ycbCrPositioning: string;\n  /** Pointer to the beginning of an EXIF IFD block in a file inside a TIFF file */\n  exifIfdPointer: string;\n  /** Contains information about the location where the image was taken */\n  gpsInfoIfdPointer: string;\n  /** Exposure time (shutter speed) when capturing an image */\n  exposureTime: string;\n  /** Contains data on the aperture number (aperture) when capturing an image */\n  fNumber: string;\n  /** Contains data on the exposure mode (shutter speed and aperture) used to capture the image */\n  exposureProgram: string;\n  /** Contains data on the ISO value (the sensitivity of the camera sensor to light) */\n  isoSpeedRatings: string;\n  /** Contains EXIF specification version data */\n  exifVersion: string;\n  /** Contains time offset data relative to UTC (Coordinated Universal Time) for the date and time when the image was taken */\n  offsetTime: string;\n  /** Contains data on the shutter speed of the camera */\n  shutterSpeedValue: string;\n  /** Contains data on the aperture (aperture) value used to capture the image */\n  aperture: string;\n  /** Contains data on the brightness level of the image */\n  brightness: string;\n  /** Contains exposure compensation data  */\n  exposureBias: string;\n  /** Contains data on the maximum aperture (aperture) value  */\n  maxAperture: string;\n  /** Contains data on the distance to the subject in millimeters */\n  subjectDistance: string;\n  /** Contains data on the light sensing mode used by the camera when capturing an image */\n  meteringMode: string;\n  /** Contains data on the status and operation of the flash during image capture */\n  flash: string;\n  /** Contains data about the focal length of the camera lens */\n  focalLength: string;\n  /** The Flashpix format version used for the image */\n  flashpixVersion: string;\n  /** The color space of the image data */\n  colorSpace: string;\n  /** Width (horizontal resolution) of the image in pixels */\n  pixelXDimension: string;\n  /** Contains data about the vertical resolution (height) of the image in pixels */\n  pixelYDimension: string;\n  /** Pointer to the start of the Interoperability IFD block for compatibility metadata */\n  interoperabilityIfdPointer: string;\n  /** Indicates the method used by the camera sensor to capture the image */\n  sensingMethod: string;\n  /** The type of scene captured in the image, indicating if it was taken with a digital camera */\n  sceneType: string;\n  /** Indicates whether the image was processed with custom rendering */\n  customRendered: string;\n  /** The exposure mode used by the camera during the shot */\n  exposureMode: string;\n  /** The white balance setting used during the shot */\n  whiteBalance: string;\n  /** The digital zoom ratio applied during the shot */\n  digitalZoomRatio: string;\n  /** The type of scene capture mode used during the shot */\n  sceneCaptureType: string;\n  /** The level of contrast applied to the image */\n  contrast: string;\n  /** The level of color saturation applied to the image */\n  saturation: string;\n  /** The level of sharpness applied to the image */\n  sharpness: string;\n  /** The distance range to the subject during the shot */\n  subjectDistanceRange: string;\n  /** The manufacturer of the lens used to capture the image */\n  lensMake: string;\n  /** The model of the lens used to capture the image */\n  lensModel: string;\n  /** Indicates whether the image is a composite, created by combining multiple images or applying effects */\n  compositeImage: string;\n  /** The interoperability index indicating the standard used for ensuring image compatibility */\n  interoperabilityIndex: string;\n  /** The version of the interoperability standard used for the image */\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  /** Representing identifier of meta-data object */\n  id: number;\n  /** Representing gps-latitude parameter */\n  latitude: number;\n  /** Representing gps-longitude parameter */\n  longitude: number;\n  /** Representing gps-altitude parameter */\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** A codec ( algorithm or method ) used to compress and decompress a video file */\n  codec: string;\n  /** The container format of the video file, indicating how video, audio, and other data streams are packaged together */\n  container: string;\n  /** The width of the video in pixels */\n  width: number;\n  /** The height of the video in pixels */\n  height: number;\n  /**  The bitrate of the video file, indicating the amount of data processed per second */\n  bitrate: number;\n  /** The duration of the video file in seconds */\n  duration: number;\n  /** A sample video aspect ratio indicating how pixels are distributed in a video stream */\n  sampleAspectRatio: string;\n  /** The display aspect ratio of the video, indicating the ratio of width to height for playback.*/\n  displayAspectRatio: string;\n  /** Video color range, indicating the set of colors used in the video file */\n  colorRange: string;\n  /** The color space of the video, indicating how colors are represented and interpreted */\n  colorSpace: string;\n  /** The frame rate of the video, indicating the number of frames displayed per second */\n  frameRate: string;\n  /** The rotation angle of the video in degrees, indicating its orientation */\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The format of the audio file container, which encapsulates audio streams and metadata */\n  container: string;\n  /** The audio codec used for encoding or decoding the audio data */\n  codec: string;\n  /** The sample rate of the audio file, indicating the number of samples per second */\n  sampleRate: number;\n  /**  The number of audio channels in the file, indicating the sound configuration (e.g., mono, stereo) */\n  numberOfChannels: number;\n  /**  The bitrate of the audio file, indicating the amount of data processed per second. */\n  bitrate: number;\n  /** The codec profile used for encoding the audio data, indicating specific settings and capabilities */\n  codecProfile: string;\n  /** The tool or software used to encode or process the audio file */\n  tool: string;\n  /** The duration of the audio file in seconds */\n  duration: number;\n  /** The title of the audio file or track */\n  title: string;\n  /** The name of the artist or band who performed the audio track. */\n  artist: string;\n  /** The name of the album that the audio track belongs to */\n  album: string;\n  /** The year the audio track was release */\n  year: number;\n  /** The genre of the audio track */\n  genre: string;\n  /** The music label or company that released the audio trac */\n  label: string;\n}\n\nexport interface BasicFileController {\n  createFile(file: Express.Multer.File, isPublic: string): Promise;\n\n  getPrivateFile(res: Response, id: number): Promise;\n\n  getFile(id: number): Promise;\n\n  removeFile(id: number): Promise;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FileController.html":{"url":"controllers/FileController.html","title":"controller - FileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /file\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createFile\n                            \n                            \n                                    \n                                    Async\n                                getFile\n                            \n                            \n                                    \n                                    Async\n                                getPrivateFile\n                            \n                            \n                                    \n                                    Async\n                                removeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFile(file: Express.Multer.File, isPublic: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/upload')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/file/file.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                isPublic\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"true\"\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFile(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/file/file.controller.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getPrivateFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPrivateFile(res: Response, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/private/:id')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/file/file.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        removeFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeFile(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/file/file.controller.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Query,\n  Res,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from \"@nestjs/common\";\nimport { FileInterceptor } from \"@nestjs/platform-express\";\nimport { Response } from \"express\";\nimport { AuthGuard } from \"../../shared/guards/auth.guard\";\nimport { FileManager } from \"./file.constants\";\nimport { NotEmptyPipe } from \"../../shared/pipes/not-empty.pipe\";\nimport { BasicFileController, File } from \"./file.types\";\n\n@Controller(\"/file\")\n@UseGuards(AuthGuard)\nexport class FileController implements BasicFileController {\n  constructor(private readonly fileService: FileManager) {}\n\n  @Post(\"/upload\")\n  @UseInterceptors(FileInterceptor(\"file\"))\n  async createFile(\n    @UploadedFile(\"file\", new NotEmptyPipe(\"file\")) file: Express.Multer.File,\n    @Query(\"public\") isPublic = \"true\",\n  ): Promise {\n    return this.fileService.createOrUpdateFile(\n      file.buffer,\n      file.originalname.split(\".\").pop(),\n      isPublic === \"true\",\n      undefined,\n      undefined,\n      file.originalname,\n    );\n  }\n\n  @Get(\"/private/:id\")\n  async getPrivateFile(\n    @Res() res: Response,\n    @Param(\"id\") id: number,\n  ): Promise {\n    const file = await this.fileService.findPrivateById(id);\n    const filePath = await this.fileService.getFilePath(file);\n    res.sendFile(filePath);\n  }\n\n  @Get(\"/:id\")\n  async getFile(@Param(\"id\") id: number): Promise {\n    return await this.fileService.findPublicById(id);\n  }\n\n  @Delete(\"/:id\")\n  async removeFile(@Param(\"id\") id: number): Promise {\n    return await this.fileService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/FileEntity.html":{"url":"entities/FileEntity.html","title":"entity - FileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  FileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/file.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores data about uploaded files\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                path\n                            \n                            \n                                    \n                                preview\n                            \n                            \n                                    \n                                public\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        preview\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        public\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file.entity.ts:58\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinColumn,\n  ManyToOne,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  TableInheritance,\n} from \"typeorm\";\nimport { File } from \"../file.types\";\nimport { MediaEntity } from \"../../media/entity/media.entity\";\nimport { FileMetadataEntity } from \"./file-metadata.entity\";\n\n/**\n * The entity stores data about uploaded files\n */\n@Entity(\"files\")\n@TableInheritance({\n  column: { type: \"varchar\", name: \"class\", nullable: true },\n})\nexport class FileEntity implements File {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @Column(\"varchar\", { nullable: true })\n  name: string;\n\n  @Column(\"varchar\", { nullable: true })\n  path: string;\n\n  @Column(\"boolean\", { default: false })\n  public: boolean;\n\n  @Column(\"int\", { nullable: true })\n  size: number;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  icon: MediaEntity;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  preview: MediaEntity;\n\n  @OneToOne(() => FileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  metadata: FileMetadataEntity;\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileManager.html":{"url":"classes/FileManager.html","title":"class - FileManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing the file management service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createOrUpdateFile\n                            \n                            \n                                    Abstract\n                                findByCode\n                            \n                            \n                                    Abstract\n                                findFileById\n                            \n                            \n                                    Abstract\n                                findPrivateById\n                            \n                            \n                                    Abstract\n                                findPublicById\n                            \n                            \n                                    Abstract\n                                getFilePath\n                            \n                            \n                                    Abstract\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createOrUpdateFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrUpdateFile(file: Buffer, extension: string, isPublic: boolean, code?: string, existedEntityId?: number, name?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                extension\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                isPublic\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                existedEntityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findFileById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findFileById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findPrivateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPrivateById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findPublicById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPublicById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getFilePath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFilePath(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileEntity } from \"./entity/file.entity\";\nimport { FileMetadataEntity } from \"./entity/file-metadata.entity\";\nimport { File } from \"./file.types\";\n\n/**\n * Abstract class representing the file management service.\n */\nexport abstract class FileManager {\n  abstract createOrUpdateFile(\n    file: Buffer,\n    extension: string,\n    isPublic: boolean,\n    code?: string,\n    existedEntityId?: number,\n    name?: string,\n  ): Promise;\n\n  abstract findByCode(code: string): Promise;\n\n  abstract findFileById(id: number): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract getFilePath(file: File): Promise;\n\n  abstract remove(id: number): Promise;\n}\n\n/**\n * Abstract class representing the file metadata service.\n */\nexport abstract class FileMd {\n  abstract createFileMetadataEntity(\n    buf: Buffer,\n    filePath?: string,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileMd.html":{"url":"classes/FileMd.html","title":"class - FileMd","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileMd\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing the file metadata service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createFileMetadataEntity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createFileMetadataEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFileMetadataEntity(buf: Buffer, filePath?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.constants.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buf\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FileEntity } from \"./entity/file.entity\";\nimport { FileMetadataEntity } from \"./entity/file-metadata.entity\";\nimport { File } from \"./file.types\";\n\n/**\n * Abstract class representing the file management service.\n */\nexport abstract class FileManager {\n  abstract createOrUpdateFile(\n    file: Buffer,\n    extension: string,\n    isPublic: boolean,\n    code?: string,\n    existedEntityId?: number,\n    name?: string,\n  ): Promise;\n\n  abstract findByCode(code: string): Promise;\n\n  abstract findFileById(id: number): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract getFilePath(file: File): Promise;\n\n  abstract remove(id: number): Promise;\n}\n\n/**\n * Abstract class representing the file metadata service.\n */\nexport abstract class FileMd {\n  abstract createFileMetadataEntity(\n    buf: Buffer,\n    filePath?: string,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileMetadata.html":{"url":"interfaces/FileMetadata.html","title":"interface - FileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            audio\n                                        \n                                \n                                \n                                        \n                                            exif\n                                        \n                                \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            gps\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            icc\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            video\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        audio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        audio:         AudioFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AudioFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field is used to store information about the structure and properties of the audio file\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exif\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exif:         ExifFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExifFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The file extension, indicating the file format\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gps:         GpsFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GpsFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    GPS data associated with the location where the file was created, including latitude, longitude and elevation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The cryptographic hash of the file content, used for integrity verification and identification\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icc:         IccFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IccFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ICC (International Color Consortium) profile data associated with the file, used for color management\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the identification number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         ImageFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ImageFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The MIME type of the file, indicating the nature and format of the file content\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        video\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        video:         VideoFileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         VideoFileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field is used to store information about the structure and properties of the video recording\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  /** This field contains the identification number */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file */\n  name: string;\n  /** This field stores the path to the file on the server */\n  path: string;\n  /** This field specifies the type of access to the file, public or private */\n  public: boolean;\n  /** This field stores the size of the file in bytes */\n  size: number;\n  /** This field stores the icon of the file */\n  icon: Media;\n  /** This field stores the media preview of the file  */\n  preview: Media;\n  /** This field contains a reference to the FileMetadata container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The MIME type of the file, indicating the nature and format of the file content */\n  mime: string;\n  /** The file extension, indicating the file format */\n  ext: string;\n  /** The cryptographic hash of the file content, used for integrity verification and identification */\n  hash: string;\n  /** The ICC (International Color Consortium) profile data associated with the file, used for color management */\n  icc: IccFileMetadata;\n  /** GPS data associated with the location where the file was created, including latitude, longitude and elevation */\n  gps: GpsFileMetadata;\n  /** This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics */\n  image: ImageFileMetadata;\n  /** This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created */\n  exif: ExifFileMetadata;\n  /** This field is used to store information about the structure and properties of the audio file */\n  audio: AudioFileMetadata;\n  /** This field is used to store information about the structure and properties of the video recording*/\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The number of bits used to represent the color of a single pixel in the image */\n  bps: number;\n  /** The width of the image in pixels */\n  width: number;\n  /** The height of the image in pixels */\n  height: number;\n  /** The number of color components used to represent the color of the image */\n  colorComponents: number;\n  /** The subsampling method used for the image, indicating how color information is sampled */\n  subsampling: string;\n  /** The date and time when the image was created or last modified */\n  dateTime: Date;\n  /** The bit depth of the image, indicating the number of bits used for color representation */\n  bitDepth: number;\n  /** The color type of the image, indicating the color model used */\n  colorType: string;\n  /** Contains the compression method used to reduce the size of the image */\n  compression: string;\n  /** Specifies the filtering method used to process the image data before compressing it */\n  filter: string;\n  /**  Indicates whether interlacing is used in the image, allowing for progressive display */\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The version of the ICC profile, indicating the specification version used to create the color profile. */\n  profileVersion: string;\n  /** The class of the ICC profile, indicating its primary purpose and type */\n  profileClassValue: string;\n  /** The name of the ICC profile class, describing its primary purpose */\n  profileClassName: string;\n  /** The connection space of the ICC profile, representing the intermediate color space used for color conversions. */\n  connectionSpace: string;\n  /** The date and time when the ICC profile was created or last modified */\n  iccProfileDate: Date;\n  /** A unique signature of the ICC profile used to confirm its authenticity and validity */\n  iccSignature: string;\n  /** The primary platform or operating system for which the ICC profile was created or optimized */\n  primaryPlatform: string;\n  /** The manufacturer of the device for which the ICC profile was created */\n  deviceManufacturer: string;\n  /** The model number of the device for which the ICC profile was created */\n  deviceModelNumber: string;\n  /**  Indicates the type of rendering to be used when converting colors between color spaces */\n  renderingIntentValue: string;\n  /** Specifies the name of the rendering type that is used when converting colors between color spaces */\n  renderingIntentName: string;\n  /** The name or identifier of the creator of the ICC profile */\n  profileCreator: string;\n  /** A description of the ICC profile, explaining its purpose and characteristics */\n  iccDescription: string;\n  /** The copyright information for the ICC profile, indicating ownership and usage rights */\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** This field specifies the manufacturer of the camera */\n  make: string;\n  /** This field specifies the model of the camera  */\n  model: string;\n  /** Indicates image display orientation based on EXIF metadata */\n  orientation: string;\n  /** X-side resolution of the photo*/\n  resolutionX: string;\n  /** Y-side resolution of the photo*/\n  resolutionY: string;\n  /** Unit of image resolution */\n  resolutionUnit: string;\n  /** The field contains information about the software that was used to create or edit the image */\n  software: string;\n  /** This field is responsible for specifying the method of placing these color components Y, Cb and Cr relative to the image pixels */\n  ycbCrPositioning: string;\n  /** Pointer to the beginning of an EXIF IFD block in a file inside a TIFF file */\n  exifIfdPointer: string;\n  /** Contains information about the location where the image was taken */\n  gpsInfoIfdPointer: string;\n  /** Exposure time (shutter speed) when capturing an image */\n  exposureTime: string;\n  /** Contains data on the aperture number (aperture) when capturing an image */\n  fNumber: string;\n  /** Contains data on the exposure mode (shutter speed and aperture) used to capture the image */\n  exposureProgram: string;\n  /** Contains data on the ISO value (the sensitivity of the camera sensor to light) */\n  isoSpeedRatings: string;\n  /** Contains EXIF specification version data */\n  exifVersion: string;\n  /** Contains time offset data relative to UTC (Coordinated Universal Time) for the date and time when the image was taken */\n  offsetTime: string;\n  /** Contains data on the shutter speed of the camera */\n  shutterSpeedValue: string;\n  /** Contains data on the aperture (aperture) value used to capture the image */\n  aperture: string;\n  /** Contains data on the brightness level of the image */\n  brightness: string;\n  /** Contains exposure compensation data  */\n  exposureBias: string;\n  /** Contains data on the maximum aperture (aperture) value  */\n  maxAperture: string;\n  /** Contains data on the distance to the subject in millimeters */\n  subjectDistance: string;\n  /** Contains data on the light sensing mode used by the camera when capturing an image */\n  meteringMode: string;\n  /** Contains data on the status and operation of the flash during image capture */\n  flash: string;\n  /** Contains data about the focal length of the camera lens */\n  focalLength: string;\n  /** The Flashpix format version used for the image */\n  flashpixVersion: string;\n  /** The color space of the image data */\n  colorSpace: string;\n  /** Width (horizontal resolution) of the image in pixels */\n  pixelXDimension: string;\n  /** Contains data about the vertical resolution (height) of the image in pixels */\n  pixelYDimension: string;\n  /** Pointer to the start of the Interoperability IFD block for compatibility metadata */\n  interoperabilityIfdPointer: string;\n  /** Indicates the method used by the camera sensor to capture the image */\n  sensingMethod: string;\n  /** The type of scene captured in the image, indicating if it was taken with a digital camera */\n  sceneType: string;\n  /** Indicates whether the image was processed with custom rendering */\n  customRendered: string;\n  /** The exposure mode used by the camera during the shot */\n  exposureMode: string;\n  /** The white balance setting used during the shot */\n  whiteBalance: string;\n  /** The digital zoom ratio applied during the shot */\n  digitalZoomRatio: string;\n  /** The type of scene capture mode used during the shot */\n  sceneCaptureType: string;\n  /** The level of contrast applied to the image */\n  contrast: string;\n  /** The level of color saturation applied to the image */\n  saturation: string;\n  /** The level of sharpness applied to the image */\n  sharpness: string;\n  /** The distance range to the subject during the shot */\n  subjectDistanceRange: string;\n  /** The manufacturer of the lens used to capture the image */\n  lensMake: string;\n  /** The model of the lens used to capture the image */\n  lensModel: string;\n  /** Indicates whether the image is a composite, created by combining multiple images or applying effects */\n  compositeImage: string;\n  /** The interoperability index indicating the standard used for ensuring image compatibility */\n  interoperabilityIndex: string;\n  /** The version of the interoperability standard used for the image */\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  /** Representing identifier of meta-data object */\n  id: number;\n  /** Representing gps-latitude parameter */\n  latitude: number;\n  /** Representing gps-longitude parameter */\n  longitude: number;\n  /** Representing gps-altitude parameter */\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** A codec ( algorithm or method ) used to compress and decompress a video file */\n  codec: string;\n  /** The container format of the video file, indicating how video, audio, and other data streams are packaged together */\n  container: string;\n  /** The width of the video in pixels */\n  width: number;\n  /** The height of the video in pixels */\n  height: number;\n  /**  The bitrate of the video file, indicating the amount of data processed per second */\n  bitrate: number;\n  /** The duration of the video file in seconds */\n  duration: number;\n  /** A sample video aspect ratio indicating how pixels are distributed in a video stream */\n  sampleAspectRatio: string;\n  /** The display aspect ratio of the video, indicating the ratio of width to height for playback.*/\n  displayAspectRatio: string;\n  /** Video color range, indicating the set of colors used in the video file */\n  colorRange: string;\n  /** The color space of the video, indicating how colors are represented and interpreted */\n  colorSpace: string;\n  /** The frame rate of the video, indicating the number of frames displayed per second */\n  frameRate: string;\n  /** The rotation angle of the video in degrees, indicating its orientation */\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The format of the audio file container, which encapsulates audio streams and metadata */\n  container: string;\n  /** The audio codec used for encoding or decoding the audio data */\n  codec: string;\n  /** The sample rate of the audio file, indicating the number of samples per second */\n  sampleRate: number;\n  /**  The number of audio channels in the file, indicating the sound configuration (e.g., mono, stereo) */\n  numberOfChannels: number;\n  /**  The bitrate of the audio file, indicating the amount of data processed per second. */\n  bitrate: number;\n  /** The codec profile used for encoding the audio data, indicating specific settings and capabilities */\n  codecProfile: string;\n  /** The tool or software used to encode or process the audio file */\n  tool: string;\n  /** The duration of the audio file in seconds */\n  duration: number;\n  /** The title of the audio file or track */\n  title: string;\n  /** The name of the artist or band who performed the audio track. */\n  artist: string;\n  /** The name of the album that the audio track belongs to */\n  album: string;\n  /** The year the audio track was release */\n  year: number;\n  /** The genre of the audio track */\n  genre: string;\n  /** The music label or company that released the audio trac */\n  label: string;\n}\n\nexport interface BasicFileController {\n  createFile(file: Express.Multer.File, isPublic: string): Promise;\n\n  getPrivateFile(res: Response, id: number): Promise;\n\n  getFile(id: number): Promise;\n\n  removeFile(id: number): Promise;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/FileMetadataEntity.html":{"url":"entities/FileMetadataEntity.html","title":"entity - FileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  FileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the basic metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                audio\n                            \n                            \n                                    \n                                    \n                                exif\n                            \n                            \n                                    \n                                ext\n                            \n                            \n                                    \n                                    \n                                gps\n                            \n                            \n                                    \n                                hash\n                            \n                            \n                                    \n                                    \n                                icc\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                image\n                            \n                            \n                                    \n                                mime\n                            \n                            \n                                    \n                                    \n                                video\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        audio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AudioFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        exif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExifFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gps\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GpsFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        icc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IccFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ImageFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        mime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        video\n                        \n                    \n                \n            \n                \n                    \n                        Type :         VideoFileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/file-metadata.entity.ts:73\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  JoinColumn,\n  OneToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { FileMetadata } from \"../file.types\";\nimport { ImageFileMetadataEntity } from \"./image-file-metadata.entity\";\nimport { GpsFileMetadataEntity } from \"./gps-file-metadata.entity\";\nimport { IccFileMetadataEntity } from \"./icc-file-metadata.entity\";\nimport { ExifFileMetadataEntity } from \"./exif-file-metadata.entity\";\nimport { VideoFileMetadataEntity } from \"./video-file-metadata.entity\";\nimport { AudioFileMetadataEntity } from \"./audio-file-metadata.entity\";\n\n/**\n * The entity stores the basic metadata of the file\n */\n@Entity(\"file_metadata\")\nexport class FileMetadataEntity implements FileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Column(\"varchar\", { nullable: true })\n  mime: string;\n\n  @Column(\"varchar\", { nullable: true })\n  ext: string;\n\n  @Column(\"varchar\", { nullable: true })\n  hash: string;\n\n  @OneToOne(() => ImageFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  image: ImageFileMetadataEntity;\n\n  @OneToOne(() => GpsFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  gps: GpsFileMetadataEntity;\n\n  @OneToOne(() => IccFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  icc: IccFileMetadataEntity;\n\n  @OneToOne(() => ExifFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  exif: ExifFileMetadataEntity;\n\n  @OneToOne(() => AudioFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  audio: AudioFileMetadataEntity;\n\n  @OneToOne(() => VideoFileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  video: VideoFileMetadataEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileMetadataService.html":{"url":"injectables/FileMetadataService.html","title":"injectable - FileMetadataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileMetadataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file-metadata.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing file metadata, including creation and setting metadata properties.\n\n            \n\n            \n                Extends\n            \n            \n                            FileMd\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createFileMetadataEntity\n                            \n                            \n                                    Private\n                                    Async\n                                setAudioMd\n                            \n                            \n                                    Private\n                                setImageMd\n                            \n                            \n                                    Private\n                                    Async\n                                setVideoMd\n                            \n                            \n                                    Private\n                                trimProperties\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createFileMetadataEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFileMetadataEntity(buf: Buffer, filePath?: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileMd\n\n                        \n                    \n                    \n                        \n                                Defined in         FileMd:45\n\n                        \n                    \n\n\n            \n                \n                        Creates a FileMetadataEntity for the given buffer and file path.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                buf\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBuffer containing the file data.\n\n\n                                            \n                                        \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional file path for the file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the created FileMetadataEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setAudioMd\n                        \n                    \n                \n            \n            \n                \n                        \n                    setAudioMd(md: FileMetadataEntity, buf: Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file-metadata.service.ts:139\n                        \n                    \n\n\n            \n                \n                        Sets audio metadata for the given FileMetadataEntity and buffer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                md\n                                            \n                                                            FileMetadataEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe FileMetadataEntity to set the metadata for.\n\n\n                                            \n                                        \n                                        \n                                                buf\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe buffer containing the audio data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setImageMd\n                        \n                    \n                \n            \n            \n                \n                        \n                    setImageMd(md: FileMetadataEntity, buf: Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file-metadata.service.ts:166\n                        \n                    \n\n\n            \n                \n                        Sets image metadata for the given FileMetadataEntity and buffer.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                md\n                                            \n                                                            FileMetadataEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe FileMetadataEntity to set the metadata for.\n\n\n                                            \n                                        \n                                        \n                                                buf\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe buffer containing the image data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setVideoMd\n                        \n                    \n                \n            \n            \n                \n                        \n                    setVideoMd(md: FileMetadataEntity, filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file-metadata.service.ts:101\n                        \n                    \n\n\n            \n                \n                        Sets video metadata for the given FileMetadataEntity and file path.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                md\n                                            \n                                                            FileMetadataEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe FileMetadataEntity to set the metadata for.\n\n\n                                            \n                                        \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe file path for the video file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        trimProperties\n                        \n                    \n                \n            \n            \n                \n                        \n                    trimProperties(obj: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file-metadata.service.ts:72\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Trims properties of an object, removing empty or invalid values.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe object to trim.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                The trimmed object.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { parseBuffer } from \"music-metadata\";\nimport * as ExifReader from \"exifreader\";\nimport * as ffprobe from \"ffprobe\";\nimport * as ffprobeStatic from \"ffprobe-static\";\nimport { FilesUtils } from \"../../shared/utils/files.utils\";\nimport { FileMd } from \"./file.constants\";\nimport { FileMetadataEntity } from \"./entity/file-metadata.entity\";\nimport { AudioFileMetadataEntity } from \"./entity/audio-file-metadata.entity\";\nimport { VideoFileMetadataEntity } from \"./entity/video-file-metadata.entity\";\nimport { ImageFileMetadataEntity } from \"./entity/image-file-metadata.entity\";\nimport { GpsFileMetadataEntity } from \"./entity/gps-file-metadata.entity\";\nimport { ExifFileMetadataEntity } from \"./entity/exif-file-metadata.entity\";\nimport { IccFileMetadataEntity } from \"./entity/icc-file-metadata.entity\";\nimport getHashFromBuffer = FilesUtils.getHashFromBuffer;\nimport fileType = FilesUtils.fileType;\n\n/**\n * Service for managing file metadata, including creation and setting metadata properties.\n */\n@Injectable()\nexport class FileMetadataService extends FileMd {\n  /**\n   * Creates a FileMetadataEntity for the given buffer and file path.\n   * @param buf - Buffer containing the file data.\n   * @param filePath - Optional file path for the file.\n   * @returns A promise that resolves to the created FileMetadataEntity.\n   */\n  async createFileMetadataEntity(buf: Buffer, filePath?: string) {\n    const fileTypeData = await fileType().fileTypeFromBuffer(buf);\n    const md = new FileMetadataEntity();\n    md.hash = getHashFromBuffer(buf);\n    if (fileTypeData) {\n      md.mime = fileTypeData.mime;\n      md.ext = fileTypeData.ext;\n    } else {\n      return md;\n    }\n    try {\n      if (md.mime.startsWith(\"image\")) {\n        this.setImageMd(md, buf);\n      } else if (md.mime.startsWith(\"audio\")) {\n        await this.setAudioMd(md, buf);\n      } else if (md.mime.startsWith(\"video\")) {\n        await this.setVideoMd(md, filePath);\n      }\n    } catch (e) {}\n    return this.trimProperties(md);\n  }\n\n  /**\n   * Trims properties of an object, removing empty or invalid values.\n   * @param obj - The object to trim.\n   * @returns The trimmed object.\n   */\n  private trimProperties(obj: T): T {\n    if (typeof obj === \"string\") {\n      return obj.trim() === \"\" || obj.indexOf(\"\") !== -1\n        ? undefined\n        : (obj.trim() as T);\n    } else if (Array.isArray(obj)) {\n      return obj.map(this.trimProperties) as T;\n    } else if (typeof obj === \"object\") {\n      if (obj instanceof Date) {\n        return obj as T;\n      }\n      const result: Record = {};\n      for (const key in obj) {\n        const value = this.trimProperties(obj[key]);\n        if (value !== undefined) {\n          result[key] = value;\n        }\n      }\n      return result as T;\n    } else {\n      return obj;\n    }\n  }\n\n  /**\n   * Sets video metadata for the given FileMetadataEntity and file path.\n   * @param md - The FileMetadataEntity to set the metadata for.\n   * @param filePath - The file path for the video file.\n   */\n  private async setVideoMd(md: FileMetadataEntity, filePath: string) {\n    if (filePath) {\n      const ffProbeMd = await ffprobe(filePath, { path: ffprobeStatic.path });\n      if (ffProbeMd) {\n        const audioMd = ffProbeMd.streams.find((v) => v.codec_type === \"audio\");\n        if (audioMd) {\n          md.audio = new AudioFileMetadataEntity();\n          md.audio.container = audioMd.codec_name?.toUpperCase();\n          md.audio.codec = audioMd.codec_long_name;\n          md.audio.duration = parseFloat(audioMd.duration || 0);\n          md.audio.numberOfChannels = audioMd.channels;\n          md.audio.bitrate = audioMd.bit_rate;\n        }\n        const videoMd = ffProbeMd.streams.find((v) => v.codec_type === \"video\");\n        if (videoMd) {\n          md.video = new VideoFileMetadataEntity();\n          md.video.codec = videoMd.codec_name?.toUpperCase();\n          md.video.container = videoMd.codec_long_name;\n          md.video.width = videoMd.width;\n          md.video.height = videoMd.height;\n          md.video.bitrate = videoMd.bit_rate;\n          md.video.duration = parseFloat(videoMd.duration || 0);\n          md.video.sampleAspectRatio = videoMd.sample_aspect_ratio;\n          md.video.displayAspectRatio = videoMd.display_aspect_ratio;\n          md.video.colorRange = videoMd.color_range;\n          md.video.colorSpace = videoMd.color_space;\n          md.video.frameRate = videoMd.r_frame_rate;\n          md.video.rotate = videoMd.tags?.rotate;\n        }\n      }\n    }\n  }\n\n  /**\n   * Sets audio metadata for the given FileMetadataEntity and buffer.\n   * @param md - The FileMetadataEntity to set the metadata for.\n   * @param buf - The buffer containing the audio data.\n   */\n  private async setAudioMd(md: FileMetadataEntity, buf: Buffer) {\n    const musicMd = await parseBuffer(buf);\n    if (!musicMd) {\n      return;\n    }\n    md.audio = new AudioFileMetadataEntity();\n    md.audio.container = musicMd.format.container;\n    md.audio.codec = musicMd.format.codec;\n    md.audio.sampleRate = musicMd.format.sampleRate;\n    md.audio.numberOfChannels = musicMd.format.numberOfChannels;\n    md.audio.bitrate = musicMd.format.bitrate;\n    md.audio.codecProfile = musicMd.format.codecProfile;\n    md.audio.tool = musicMd.format.tool;\n    md.audio.duration = musicMd.format.duration;\n    md.audio.title = musicMd.common.title;\n    md.audio.album = musicMd.common.album;\n    md.audio.artist = musicMd.common.artists?.join(\", \");\n    md.audio.year = musicMd.common.year;\n    md.audio.genre = musicMd.common.genre?.join(\", \");\n    md.audio.label = musicMd.common.label?.join(\", \");\n  }\n\n  /**\n   * Sets image metadata for the given FileMetadataEntity and buffer.\n   * @param md - The FileMetadataEntity to set the metadata for.\n   * @param buf - The buffer containing the image data.\n   */\n  private setImageMd(md: FileMetadataEntity, buf: Buffer) {\n    const exifData = ExifReader.load(buf, {\n      expanded: true,\n      includeUnknown: true,\n    });\n    if (!exifData) {\n      return;\n    }\n    md.image = new ImageFileMetadataEntity();\n    md.image.bps = exifData.file[\"Bits Per Sample\"]?.value;\n    md.image.height = exifData.file[\"Image Height\"]?.value;\n    md.image.width = exifData.file[\"Image Width\"]?.value;\n    md.image.colorComponents = exifData.file[\"Color Components\"]?.value;\n    md.image.subsampling = exifData.file[\"Subsampling\"]?.description;\n    if (exifData.png) {\n      md.image.height = exifData.png[\"Image Height\"]?.value;\n      md.image.width = exifData.png[\"Image Width\"]?.value;\n      md.image.bitDepth = exifData.png[\"Bit Depth\"]?.value;\n      md.image.colorType = exifData.png[\"Color Type\"]?.description;\n      md.image.compression = exifData.png[\"Compression\"]?.description;\n      md.image.filter = exifData.png[\"Filter\"]?.description;\n      md.image.interlace = exifData.png[\"Interlace\"]?.description;\n    }\n    if (exifData.gps) {\n      md.gps = new GpsFileMetadataEntity();\n      md.gps.altitude = exifData.gps?.Altitude;\n      md.gps.longitude = exifData.gps?.Longitude;\n      md.gps.latitude = exifData.gps?.Latitude;\n    }\n    if (exifData.icc) {\n      md.icc = new IccFileMetadataEntity();\n      md.icc.profileVersion = exifData.icc[\"Profile Version\"]?.description;\n      md.icc.profileClassName =\n        exifData.icc[\"Profile/Device class\"]?.description;\n      md.icc.profileClassValue = exifData.icc[\"Profile/Device class\"]?.value;\n      md.icc.connectionSpace = exifData.icc[\"Connection Space\"]?.description;\n      md.icc.iccProfileDate = new Date(exifData.icc[\"ICC Profile Date\"]?.value);\n      if (exifData.icc[\"ICC Profile Date\"]?.value) {\n        md.image.dateTime = md.icc.iccProfileDate;\n      }\n      md.icc.iccSignature = exifData.icc[\"ICC Signature\"]?.description;\n      md.icc.primaryPlatform = exifData.icc[\"Primary Platform\"]?.description;\n      md.icc.deviceManufacturer =\n        exifData.icc[\"Device Manufacturer\"]?.description;\n      md.icc.deviceModelNumber =\n        exifData.icc[\"Device Model Number\"]?.description;\n      md.icc.renderingIntentName =\n        exifData.icc[\"Rendering Intent\"]?.description;\n      md.icc.renderingIntentValue = exifData.icc[\"Rendering Intent\"]?.value;\n      md.icc.profileCreator = exifData.icc[\"Profile Creator\"]?.description;\n      md.icc.iccDescription = exifData.icc[\"ICC Description\"]?.description;\n      md.icc.iccCopyright = exifData.icc[\"ICC Copyright\"]?.description;\n    }\n    if (exifData.exif) {\n      md.exif = new ExifFileMetadataEntity();\n      md.exif.make = exifData.exif.Make?.description;\n      md.exif.model = exifData.exif.Model?.description;\n      md.exif.orientation = exifData.exif.Orientation?.description;\n      md.exif.resolutionX = exifData.exif.XResolution?.description;\n      md.exif.resolutionY = exifData.exif.YResolution?.description;\n      md.exif.resolutionUnit = exifData.exif.ResolutionUnit?.description;\n      md.exif.software = exifData.exif.Software?.description;\n      md.exif.ycbCrPositioning = exifData.exif.YCbCrPositioning?.description;\n      md.exif.exifIfdPointer = exifData.exif[\"Exif IFD Pointer\"]?.description;\n      md.exif.gpsInfoIfdPointer =\n        exifData.exif[\"GPS Info IFD Pointer\"]?.description;\n      md.exif.exposureTime = exifData.exif.ExposureTime?.description;\n      md.exif.fNumber = exifData.exif.FNumber?.description;\n      md.exif.exposureProgram = exifData.exif.ExposureProgram?.description;\n      md.exif.isoSpeedRatings = exifData.exif.ISOSpeedRatings?.description;\n      md.exif.exifVersion = exifData.exif.ExifVersion?.description;\n      md.exif.offsetTime = exifData.exif.OffsetTime?.description;\n      md.exif.shutterSpeedValue = exifData.exif.ShutterSpeedValue?.description;\n      md.exif.aperture = exifData.exif.ApertureValue?.description;\n      md.exif.brightness = exifData.exif.BrightnessValue?.description;\n      md.exif.exposureBias = exifData.exif.ExposureBiasValue?.description;\n      md.exif.maxAperture = exifData.exif.MaxApertureValue?.description;\n      md.exif.subjectDistance = exifData.exif.SubjectDistance?.description;\n      md.exif.meteringMode = exifData.exif.MeteringMode?.description;\n      md.exif.flash = exifData.exif.Flash?.description;\n      md.exif.focalLength = exifData.exif.FocalLength?.description;\n      md.exif.flashpixVersion = exifData.exif.FlashpixVersion?.description;\n      md.exif.colorSpace = exifData.exif.ColorSpace?.description;\n      md.exif.pixelXDimension = exifData.exif.PixelXDimension?.description;\n      md.exif.pixelYDimension = exifData.exif.PixelYDimension?.description;\n      md.exif.interoperabilityIfdPointer =\n        exifData.exif[\"Interoperability IFD Pointer\"]?.description;\n      md.exif.sensingMethod = exifData.exif.SensingMethod?.description;\n      md.exif.sceneType = exifData.exif.SceneType?.description;\n      md.exif.customRendered = exifData.exif.CustomRendered?.description;\n      md.exif.exposureMode = exifData.exif.ExposureMode?.description;\n      md.exif.whiteBalance = exifData.exif.WhiteBalance?.description;\n      md.exif.digitalZoomRatio = exifData.exif.DigitalZoomRatio?.description;\n      md.exif.sceneCaptureType = exifData.exif.SceneCaptureType?.description;\n      md.exif.contrast = exifData.exif.Contrast?.description;\n      md.exif.saturation = exifData.exif.Saturation?.description;\n      md.exif.sharpness = exifData.exif.Sharpness?.description;\n      md.exif.subjectDistanceRange =\n        exifData.exif.SubjectDistanceRange?.description;\n      md.exif.lensMake = exifData.exif.LensMake?.description;\n      md.exif.lensModel = exifData.exif.LensModel?.description;\n      md.exif.compositeImage = exifData.exif[\"CompositeImage\"]?.description;\n      md.exif.interoperabilityIndex =\n        exifData.exif.InteroperabilityIndex?.description;\n      md.exif.interoperabilityVersion =\n        exifData.exif[\"InteroperabilityVersion\"]?.description;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileModule.html":{"url":"modules/FileModule.html","title":"module - FileModule","body":"\n                   \n\n\n\n\n    Modules\n    FileModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/file/file.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for managing files.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: FileModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.module.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            FileModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      fileManager: FileService,\n      fileMd: FileMetadataService,\n      controller: FileController,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { FileService } from \"./file.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { FileEntity } from \"./entity/file.entity\";\nimport { FileModuleOptions } from \"./file.types\";\nimport { FileMetadataService } from \"./file-metadata.service\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { FileManager, FileMd } from \"./file.constants\";\nimport { FileController } from \"./file.controller\";\nimport { UserModule } from \"@k-platform/core/common/user/user.module\";\n\n/**\n * Module for managing files.\n */\n@Module({})\nexport class FileModule {\n  static forRoot(\n    options: FileModuleOptions = {\n      fileManager: FileService,\n      fileMd: FileMetadataService,\n      controller: FileController,\n    },\n  ): DynamicModule {\n    return {\n      module: FileModule,\n      imports: [\n        TypeOrmModule.forFeature([FileEntity]),\n        LogModule,\n        CacheModule,\n        UserModule.forRoot(),\n      ],\n      controllers: [options.controller],\n      providers: [\n        {\n          provide: FileManager,\n          useClass: options.fileManager,\n        },\n        {\n          provide: FileMd,\n          useClass: options.fileMd,\n        },\n      ],\n      exports: [FileManager, FileMd],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing files, including uploading, finding, and removing files.\n\n            \n\n            \n                Extends\n            \n            \n                            FileManager\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createBasicFindQb\n                            \n                            \n                                    Private\n                                    Async\n                                createFileDirectory\n                            \n                            \n                                    Private\n                                    Async\n                                createFileEntity\n                            \n                            \n                                    Async\n                                createOrUpdateFile\n                            \n                            \n                                    Async\n                                findByCode\n                            \n                            \n                                    Async\n                                findFileById\n                            \n                            \n                                    Async\n                                findPrivateById\n                            \n                            \n                                    Async\n                                findPublicById\n                            \n                            \n                                    Async\n                                getFilePath\n                            \n                            \n                                    Private\n                                    Async\n                                getPrivateDir\n                            \n                            \n                                    Private\n                                    Async\n                                getPublicDir\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, fileRep: Repository, cacheService: CacheService, metadataService: FileMd)\n                    \n                \n                        \n                            \n                                Defined in lib/common/file/file.service.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        metadataService\n                                                  \n                                                        \n                                                                        FileMd\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createBasicFindQb\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBasicFindQb()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:226\n                        \n                    \n\n\n            \n                \n                        Private helper method to create a query builder for finding files with their related entities.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                A query builder instance for finding files.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        createFileDirectory\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFileDirectory(isPublic: boolean, entityId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:256\n                        \n                    \n\n\n            \n                \n                        Private helper method to create a file directory for the specified public/private status and entity ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isPublic\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA boolean flag indicating if the directory is for public files (true) or private files (false).\n\n\n                                            \n                                        \n                                        \n                                                entityId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe entity ID to use as the directory name.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the created directory path as a string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        createFileEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    createFileEntity(isPublic: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:273\n                        \n                    \n\n\n            \n                \n                        Private helper method to create a new FileEntity with the specified public/private status.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isPublic\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA boolean flag indicating if the FileEntity is for a public file (true) or private file (false).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the created FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOrUpdateFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrUpdateFile(file: Buffer, extension: string, isPublic, code?: string, existedEntityId?: number, name?: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:66\n\n                        \n                    \n\n\n            \n                \n                        Uploads a file and saves it to the specified directory (public or private).\nAlso creates a FileEntity and saves the file's metadata in the database.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nBuffer of file.\n\n\n                                            \n                                        \n                                        \n                                                extension\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"\"\n                                            \n\n                                            \n                                                    \nfile extension (based of file name).\n\n\n                                            \n                                        \n                                        \n                                                isPublic\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                            \n                                                    \nA boolean flag indicating if the file should be saved to the public directory (true) or private directory (false).\n\n\n                                            \n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nSpecific identification code for file entity.\n\n\n                                            \n                                        \n                                        \n                                                existedEntityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nID of file entity for patch.\n\n\n                                            \n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nname for file entity.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the created FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:148\n\n                        \n                    \n\n\n            \n                \n                        Finds a file entity by code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the file entity.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The found file entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findFileById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findFileById(id: number, isPublic: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:131\n\n                        \n                    \n\n\n            \n                \n                        Private helper method to find a file by its ID and public/private status.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe ID of the file to find.\n\n\n                                            \n                                        \n                                        \n                                                isPublic\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    undefined\n                                            \n\n                                            \n                                                    \nA boolean flag indicating if the file is public (true) or private (false).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the found FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPrivateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPrivateById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:168\n\n                        \n                    \n\n\n            \n                \n                        Finds a private file by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the file to find.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the found FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPublicById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPublicById(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:159\n\n                        \n                    \n\n\n            \n                \n                        Finds a public file by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the file to find.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the found FileEntity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFilePath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFilePath(file: File)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:177\n\n                        \n                    \n\n\n            \n                \n                        Constructs the full file path for the given File object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA File object containing the file's metadata.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The full file path as a string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getPrivateDir\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPrivateDir()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:292\n                        \n                    \n\n\n            \n                \n                        Retrieves the private directory path stored in configuration.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the normalized private directory path.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getPublicDir\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPublicDir()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/file/file.service.ts:283\n                        \n                    \n\n\n            \n                \n                        Retrieves the public directory path stored in configuration.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A promise that resolves to the normalized public directory path.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         FileManager\n\n                        \n                    \n                    \n                        \n                                Defined in         FileManager:187\n\n                        \n                    \n\n\n            \n                \n                        Removes a file by its ID and deletes its corresponding directory.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the file to remove.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the removed FileEntity.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n  Logger,\n  NotFoundException,\n} from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { FileEntity } from \"./entity/file.entity\";\nimport * as path from \"path\";\nimport * as fs from \"fs\";\nimport { File } from \"./file.types\";\nimport { FilesUtils } from \"../../shared/utils/files.utils\";\nimport { FileConfig } from \"../../../gen-src/file.config\";\nimport { FileManager, FileMd } from \"./file.constants\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport PRIVATE_DIR = FileConfig.PRIVATE_DIR;\nimport PUBLIC_DIR = FileConfig.PUBLIC_DIR;\nimport createDirectoriesIfNotExist = FilesUtils.createDirectoriesIfNotExist;\n\n/**\n * Service for managing files, including uploading, finding, and removing files.\n */\n@Injectable()\nexport class FileService extends FileManager {\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    @InjectRepository(FileEntity)\n    private readonly fileRep: Repository,\n    private readonly cacheService: CacheService,\n    private readonly metadataService: FileMd,\n  ) {\n    super();\n  }\n\n  /**\n   * Uploads a file and saves it to the specified directory (public or private).\n   * Also creates a FileEntity and saves the file's metadata in the database.\n   * @param file - Buffer of file.\n   * @param extension - file extension (based of file name).\n   * @param isPublic - A boolean flag indicating if the file should be saved to the public directory (true) or private directory (false).\n   * @param code - Specific identification code for file entity.\n   * @param existedEntityId - ID of file entity for patch.\n   * @param name - name for file entity.\n   * @returns A promise that resolves to the created FileEntity.\n   */\n  async createOrUpdateFile(\n    file: Buffer,\n    extension = \"\",\n    isPublic = true,\n    code?: string,\n    existedEntityId?: number,\n    name?: string,\n  ): Promise {\n    let entity: FileEntity = undefined;\n    await this.fileRep.manager.transaction(async (transactionManager) => {\n      if (existedEntityId) {\n        entity = await this.findFileById(existedEntityId, isPublic);\n        if (!entity) {\n          throw new BadRequestException(\n            `Cannot patch file with ID ${existedEntityId}, because than not exists`,\n          );\n        }\n        const dir = path.join(\n          !entity.public\n            ? await this.getPrivateDir()\n            : await this.getPublicDir(),\n          entity.id.toString(),\n        );\n        await fs.promises\n          .rm(dir, { recursive: true, force: true })\n          .catch((err) => {\n            throw new InternalServerErrorException(\n              `Failed to delete directory: ${dir}`,\n              err,\n            );\n          });\n      } else {\n        entity = await this.createFileEntity(isPublic);\n      }\n      const outputPath = await this.createFileDirectory(\n        entity.public,\n        entity.id.toString(),\n      );\n      const fileName =\n        entity.id.toString() + (extension ? `.${extension}` : extension);\n      entity.size = file.length;\n      entity.path = fileName;\n      entity.name = name;\n      entity.code = code;\n      await fs.promises.writeFile(`${outputPath}/${fileName}`, file);\n      if (!existedEntityId) {\n        entity.metadata = await this.metadataService.createFileMetadataEntity(\n          file,\n          `${outputPath}/${fileName}`,\n        );\n      }\n      await transactionManager.save(entity);\n    });\n    this.logger.log(\n      `${!existedEntityId ? `Created` : `Updated`} file with ID ${entity.id}`,\n    );\n    return entity;\n  }\n\n  /**\n   * Private helper method to find a file by its ID and public/private status.\n   * @param id - The ID of the file to find.\n   * @param isPublic - A boolean flag indicating if the file is public (true) or private (false).\n   * @returns A promise that resolves to the found FileEntity.\n   */\n  async findFileById(id: number, isPublic: boolean = undefined) {\n    const qb = this.createBasicFindQb().where(\"file.id = :id\", { id });\n    if (isPublic !== undefined) {\n      qb.andWhere(`file.public = :isPublic`, { isPublic });\n    }\n    const entity = await qb.getOne();\n    if (!entity) {\n      throw new NotFoundException(`File with ID ${id} not found`);\n    }\n    return entity;\n  }\n\n  /**\n   * Finds a file entity by code.\n   * @param code - The code of the file entity.\n   * @returns The found file entity.\n   */\n  async findByCode(code: string): Promise {\n    return await this.createBasicFindQb()\n      .where(\"file.code = :code\", { code })\n      .getOne();\n  }\n\n  /**\n   * Finds a public file by its ID.\n   * @param id - The ID of the file to find.\n   * @returns A promise that resolves to the found FileEntity.\n   */\n  async findPublicById(id: number): Promise {\n    return this.findFileById(id, true);\n  }\n\n  /**\n   * Finds a private file by its ID.\n   * @param id - The ID of the file to find.\n   * @returns A promise that resolves to the found FileEntity.\n   */\n  async findPrivateById(id: number): Promise {\n    return this.findFileById(id);\n  }\n\n  /**\n   * Constructs the full file path for the given File object.\n   * @param file - A File object containing the file's metadata.\n   * @returns The full file path as a string.\n   */\n  async getFilePath(file: File): Promise {\n    const filePath = `${!file.public ? await this.getPrivateDir() : await this.getPublicDir()}/${file.id}/`;\n    return filePath + file.path;\n  }\n\n  /**\n   * Removes a file by its ID and deletes its corresponding directory.\n   * @param id - The ID of the file to remove.\n   * @returns A promise that resolves to the removed FileEntity.\n   */\n  async remove(id: number): Promise {\n    const file = await this.findFileById(id);\n    const dir = path.join(\n      !file.public ? await this.getPrivateDir() : await this.getPublicDir(),\n      file.id.toString(),\n    );\n    await this.fileRep.manager.transaction(async (transactionManager) => {\n      if (file.metadata) {\n        if (file.metadata.image) {\n          await transactionManager.remove(file.metadata.image);\n        }\n        if (file.metadata.gps) {\n          await transactionManager.remove(file.metadata.gps);\n        }\n        if (file.metadata.audio) {\n          await transactionManager.remove(file.metadata.audio);\n        }\n        if (file.metadata.video) {\n          await transactionManager.remove(file.metadata.video);\n        }\n      }\n      await transactionManager.remove(file);\n      await fs.promises\n        .rm(dir, { recursive: true, force: true })\n        .catch((err) => {\n          throw new InternalServerErrorException(\n            `Failed to delete directory: ${dir}`,\n            err,\n          );\n        });\n    });\n    this.logger.log(`File with ID ${id} removed`);\n    return file;\n  }\n\n  /**\n   * Private helper method to create a query builder for finding files with their related entities.\n   * @returns A query builder instance for finding files.\n   */\n  private createBasicFindQb() {\n    return this.fileRep\n      .createQueryBuilder(\"file\")\n      .leftJoinAndSelect(\"file.icon\", \"icon\")\n      .leftJoinAndSelect(\"file.metadata\", \"metadata\")\n      .leftJoinAndSelect(\"metadata.gps\", \"metaGps\")\n      .leftJoinAndSelect(\"metadata.image\", \"metaImage\")\n      .leftJoinAndSelect(\"metadata.audio\", \"metaAudio\")\n      .leftJoinAndSelect(\"metadata.video\", \"metaVideo\")\n      .leftJoinAndSelect(\"icon.name\", \"iconName\")\n      .leftJoinAndSelect(\"iconName.lang\", \"iconLang\")\n      .leftJoinAndSelect(\"icon.files\", \"iconFiles\")\n      .leftJoinAndSelect(\"iconFiles.format\", \"iconFilesFormat\")\n      .leftJoinAndSelect(\"icon.type\", \"iconType\")\n      .leftJoinAndSelect(\"iconType.ext\", \"iconTypeExt\")\n      .leftJoinAndSelect(\"file.preview\", \"preview\")\n      .leftJoinAndSelect(\"preview.name\", \"previewName\")\n      .leftJoinAndSelect(\"previewName.lang\", \"previewLang\")\n      .leftJoinAndSelect(\"preview.files\", \"previewFiles\")\n      .leftJoinAndSelect(\"previewFiles.format\", \"previewFilesFormat\")\n      .leftJoinAndSelect(\"preview.type\", \"previewType\")\n      .leftJoinAndSelect(\"previewType.ext\", \"previewTypeExt\");\n  }\n\n  /**\n   * Private helper method to create a file directory for the specified public/private status and entity ID.\n   * @param isPublic - A boolean flag indicating if the directory is for public files (true) or private files (false).\n   * @param entityId - The entity ID to use as the directory name.\n   * @returns A promise that resolves to the created directory path as a string.\n   */\n  private async createFileDirectory(\n    isPublic: boolean,\n    entityId: string,\n  ): Promise {\n    const dir = path.join(\n      !isPublic ? await this.getPrivateDir() : await this.getPublicDir(),\n      entityId,\n    );\n    await createDirectoriesIfNotExist(dir);\n    return dir;\n  }\n\n  /**\n   * Private helper method to create a new FileEntity with the specified public/private status.\n   * @param isPublic - A boolean flag indicating if the FileEntity is for a public file (true) or private file (false).\n   * @returns A promise that resolves to the created FileEntity.\n   */\n  private async createFileEntity(isPublic: boolean) {\n    const entity = new FileEntity();\n    entity.public = isPublic;\n    return this.fileRep.save(entity);\n  }\n\n  /**\n   * Retrieves the public directory path stored in configuration.\n   * @returns A promise that resolves to the normalized public directory path.\n   */\n  private async getPublicDir() {\n    const dir = process.cwd() + (await this.cacheService.get(PUBLIC_DIR));\n    return path.normalize(dir);\n  }\n\n  /**\n   * Retrieves the private directory path stored in configuration.\n   * @returns A promise that resolves to the normalized private directory path.\n   */\n  private async getPrivateDir() {\n    const dir = process.cwd() + (await this.cacheService.get(PRIVATE_DIR));\n    return path.normalize(dir);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForbiddenMsException.html":{"url":"classes/ForbiddenMsException.html","title":"class - ForbiddenMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForbiddenMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/forbidden-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for forbidden requests, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/forbidden-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for forbidden requests, extending MsException.\n */\nexport class ForbiddenMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.FORBIDDEN, message || \"Forbidden\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleCaptchaService.html":{"url":"classes/GoogleCaptchaService.html","title":"class - GoogleCaptchaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleCaptchaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/google-captcha.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The GoogleCaptchaService class extends the CaptchaService class with a specialization for Google reCAPTCHA.\nIt manages the generation and validation of Google reCAPTCHAs.\n\n            \n\n            \n                Extends\n            \n            \n                            CaptchaService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateCaptcha\n                            \n                            \n                                    Async\n                                validateCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, cacheService: CacheService, http: HttpService)\n                    \n                \n                        \n                            \n                                Defined in lib/common/captcha/google-captcha.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateCaptcha()\n                \n            \n\n\n                    \n                        \n                            Inherited from         CaptchaService\n\n                        \n                    \n                    \n                        \n                                Defined in         CaptchaService:46\n\n                        \n                    \n\n\n            \n                \n                        Generates a new Google reCAPTCHA and retrieves the public key defined in configuration.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nA promise resolving to a CaptchaResponse object containing the captcha id and type.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateCaptcha(request: CaptchaRequest)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CaptchaService\n\n                        \n                    \n                    \n                        \n                                Defined in         CaptchaService:62\n\n                        \n                    \n\n\n            \n                \n                        Validates the provided captcha request against Google's reCAPTCHA verification service.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            CaptchaRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe captcha request to be validated.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA promise resolving to a boolean indicating whether the captcha is valid or not.\n\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CaptchaRequest,\n  CaptchaResponse,\n  CaptchaService,\n} from \"./captcha.types\";\nimport { Inject, Logger } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { lastValueFrom } from \"rxjs\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport { CaptchaConfig } from \"../../../gen-src/captcha.config\";\n\n/**\n * The GoogleCaptchaService class extends the CaptchaService class with a specialization for Google reCAPTCHA.\n * It manages the generation and validation of Google reCAPTCHAs.\n */\nexport class GoogleCaptchaService extends CaptchaService {\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    private readonly cacheService: CacheService,\n    private readonly http: HttpService,\n  ) {\n    super();\n  }\n\n  /**\n   * Generates a new Google reCAPTCHA and retrieves the public key defined in configuration.\n   * @returns {Promise} - A promise resolving to a CaptchaResponse object containing the captcha id and type.\n   */\n  async generateCaptcha(): Promise {\n    const captchaEnabled = await this.cacheService.getBoolean(\n      CaptchaConfig.ENABLED,\n    );\n    if (!captchaEnabled) {\n      return undefined;\n    }\n    const id = await this.cacheService.get(CaptchaConfig.GOOGLE_PUBLIC_KEY);\n    return { id, type: \"google\" };\n  }\n\n  /**\n   * Validates the provided captcha request against Google's reCAPTCHA verification service.\n   * @param {CaptchaRequest} request - The captcha request to be validated.\n   * @returns {Promise} - A promise resolving to a boolean indicating whether the captcha is valid or not.\n   */\n  async validateCaptcha(request: CaptchaRequest): Promise {\n    const secretKey = await this.cacheService.get(\n      CaptchaConfig.GOOGLE_SECRET_KEY,\n    );\n    const response$ = await this.http.post(\n      `https://www.google.com/recaptcha/api/siteverify?secret=${secretKey}&response=${request.data}`,\n    );\n    const response = await lastValueFrom(response$);\n    return response?.data?.success;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GpsFileMetadata.html":{"url":"interfaces/GpsFileMetadata.html","title":"interface - GpsFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GpsFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing GPS file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            altitude\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            latitude\n                                        \n                                \n                                \n                                        \n                                            longitude\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        altitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        altitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Representing gps-altitude parameter\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Representing identifier of meta-data object\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Representing gps-latitude parameter\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        longitude:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Representing gps-longitude parameter\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  /** This field contains the identification number */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file */\n  name: string;\n  /** This field stores the path to the file on the server */\n  path: string;\n  /** This field specifies the type of access to the file, public or private */\n  public: boolean;\n  /** This field stores the size of the file in bytes */\n  size: number;\n  /** This field stores the icon of the file */\n  icon: Media;\n  /** This field stores the media preview of the file  */\n  preview: Media;\n  /** This field contains a reference to the FileMetadata container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The MIME type of the file, indicating the nature and format of the file content */\n  mime: string;\n  /** The file extension, indicating the file format */\n  ext: string;\n  /** The cryptographic hash of the file content, used for integrity verification and identification */\n  hash: string;\n  /** The ICC (International Color Consortium) profile data associated with the file, used for color management */\n  icc: IccFileMetadata;\n  /** GPS data associated with the location where the file was created, including latitude, longitude and elevation */\n  gps: GpsFileMetadata;\n  /** This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics */\n  image: ImageFileMetadata;\n  /** This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created */\n  exif: ExifFileMetadata;\n  /** This field is used to store information about the structure and properties of the audio file */\n  audio: AudioFileMetadata;\n  /** This field is used to store information about the structure and properties of the video recording*/\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The number of bits used to represent the color of a single pixel in the image */\n  bps: number;\n  /** The width of the image in pixels */\n  width: number;\n  /** The height of the image in pixels */\n  height: number;\n  /** The number of color components used to represent the color of the image */\n  colorComponents: number;\n  /** The subsampling method used for the image, indicating how color information is sampled */\n  subsampling: string;\n  /** The date and time when the image was created or last modified */\n  dateTime: Date;\n  /** The bit depth of the image, indicating the number of bits used for color representation */\n  bitDepth: number;\n  /** The color type of the image, indicating the color model used */\n  colorType: string;\n  /** Contains the compression method used to reduce the size of the image */\n  compression: string;\n  /** Specifies the filtering method used to process the image data before compressing it */\n  filter: string;\n  /**  Indicates whether interlacing is used in the image, allowing for progressive display */\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The version of the ICC profile, indicating the specification version used to create the color profile. */\n  profileVersion: string;\n  /** The class of the ICC profile, indicating its primary purpose and type */\n  profileClassValue: string;\n  /** The name of the ICC profile class, describing its primary purpose */\n  profileClassName: string;\n  /** The connection space of the ICC profile, representing the intermediate color space used for color conversions. */\n  connectionSpace: string;\n  /** The date and time when the ICC profile was created or last modified */\n  iccProfileDate: Date;\n  /** A unique signature of the ICC profile used to confirm its authenticity and validity */\n  iccSignature: string;\n  /** The primary platform or operating system for which the ICC profile was created or optimized */\n  primaryPlatform: string;\n  /** The manufacturer of the device for which the ICC profile was created */\n  deviceManufacturer: string;\n  /** The model number of the device for which the ICC profile was created */\n  deviceModelNumber: string;\n  /**  Indicates the type of rendering to be used when converting colors between color spaces */\n  renderingIntentValue: string;\n  /** Specifies the name of the rendering type that is used when converting colors between color spaces */\n  renderingIntentName: string;\n  /** The name or identifier of the creator of the ICC profile */\n  profileCreator: string;\n  /** A description of the ICC profile, explaining its purpose and characteristics */\n  iccDescription: string;\n  /** The copyright information for the ICC profile, indicating ownership and usage rights */\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** This field specifies the manufacturer of the camera */\n  make: string;\n  /** This field specifies the model of the camera  */\n  model: string;\n  /** Indicates image display orientation based on EXIF metadata */\n  orientation: string;\n  /** X-side resolution of the photo*/\n  resolutionX: string;\n  /** Y-side resolution of the photo*/\n  resolutionY: string;\n  /** Unit of image resolution */\n  resolutionUnit: string;\n  /** The field contains information about the software that was used to create or edit the image */\n  software: string;\n  /** This field is responsible for specifying the method of placing these color components Y, Cb and Cr relative to the image pixels */\n  ycbCrPositioning: string;\n  /** Pointer to the beginning of an EXIF IFD block in a file inside a TIFF file */\n  exifIfdPointer: string;\n  /** Contains information about the location where the image was taken */\n  gpsInfoIfdPointer: string;\n  /** Exposure time (shutter speed) when capturing an image */\n  exposureTime: string;\n  /** Contains data on the aperture number (aperture) when capturing an image */\n  fNumber: string;\n  /** Contains data on the exposure mode (shutter speed and aperture) used to capture the image */\n  exposureProgram: string;\n  /** Contains data on the ISO value (the sensitivity of the camera sensor to light) */\n  isoSpeedRatings: string;\n  /** Contains EXIF specification version data */\n  exifVersion: string;\n  /** Contains time offset data relative to UTC (Coordinated Universal Time) for the date and time when the image was taken */\n  offsetTime: string;\n  /** Contains data on the shutter speed of the camera */\n  shutterSpeedValue: string;\n  /** Contains data on the aperture (aperture) value used to capture the image */\n  aperture: string;\n  /** Contains data on the brightness level of the image */\n  brightness: string;\n  /** Contains exposure compensation data  */\n  exposureBias: string;\n  /** Contains data on the maximum aperture (aperture) value  */\n  maxAperture: string;\n  /** Contains data on the distance to the subject in millimeters */\n  subjectDistance: string;\n  /** Contains data on the light sensing mode used by the camera when capturing an image */\n  meteringMode: string;\n  /** Contains data on the status and operation of the flash during image capture */\n  flash: string;\n  /** Contains data about the focal length of the camera lens */\n  focalLength: string;\n  /** The Flashpix format version used for the image */\n  flashpixVersion: string;\n  /** The color space of the image data */\n  colorSpace: string;\n  /** Width (horizontal resolution) of the image in pixels */\n  pixelXDimension: string;\n  /** Contains data about the vertical resolution (height) of the image in pixels */\n  pixelYDimension: string;\n  /** Pointer to the start of the Interoperability IFD block for compatibility metadata */\n  interoperabilityIfdPointer: string;\n  /** Indicates the method used by the camera sensor to capture the image */\n  sensingMethod: string;\n  /** The type of scene captured in the image, indicating if it was taken with a digital camera */\n  sceneType: string;\n  /** Indicates whether the image was processed with custom rendering */\n  customRendered: string;\n  /** The exposure mode used by the camera during the shot */\n  exposureMode: string;\n  /** The white balance setting used during the shot */\n  whiteBalance: string;\n  /** The digital zoom ratio applied during the shot */\n  digitalZoomRatio: string;\n  /** The type of scene capture mode used during the shot */\n  sceneCaptureType: string;\n  /** The level of contrast applied to the image */\n  contrast: string;\n  /** The level of color saturation applied to the image */\n  saturation: string;\n  /** The level of sharpness applied to the image */\n  sharpness: string;\n  /** The distance range to the subject during the shot */\n  subjectDistanceRange: string;\n  /** The manufacturer of the lens used to capture the image */\n  lensMake: string;\n  /** The model of the lens used to capture the image */\n  lensModel: string;\n  /** Indicates whether the image is a composite, created by combining multiple images or applying effects */\n  compositeImage: string;\n  /** The interoperability index indicating the standard used for ensuring image compatibility */\n  interoperabilityIndex: string;\n  /** The version of the interoperability standard used for the image */\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  /** Representing identifier of meta-data object */\n  id: number;\n  /** Representing gps-latitude parameter */\n  latitude: number;\n  /** Representing gps-longitude parameter */\n  longitude: number;\n  /** Representing gps-altitude parameter */\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** A codec ( algorithm or method ) used to compress and decompress a video file */\n  codec: string;\n  /** The container format of the video file, indicating how video, audio, and other data streams are packaged together */\n  container: string;\n  /** The width of the video in pixels */\n  width: number;\n  /** The height of the video in pixels */\n  height: number;\n  /**  The bitrate of the video file, indicating the amount of data processed per second */\n  bitrate: number;\n  /** The duration of the video file in seconds */\n  duration: number;\n  /** A sample video aspect ratio indicating how pixels are distributed in a video stream */\n  sampleAspectRatio: string;\n  /** The display aspect ratio of the video, indicating the ratio of width to height for playback.*/\n  displayAspectRatio: string;\n  /** Video color range, indicating the set of colors used in the video file */\n  colorRange: string;\n  /** The color space of the video, indicating how colors are represented and interpreted */\n  colorSpace: string;\n  /** The frame rate of the video, indicating the number of frames displayed per second */\n  frameRate: string;\n  /** The rotation angle of the video in degrees, indicating its orientation */\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The format of the audio file container, which encapsulates audio streams and metadata */\n  container: string;\n  /** The audio codec used for encoding or decoding the audio data */\n  codec: string;\n  /** The sample rate of the audio file, indicating the number of samples per second */\n  sampleRate: number;\n  /**  The number of audio channels in the file, indicating the sound configuration (e.g., mono, stereo) */\n  numberOfChannels: number;\n  /**  The bitrate of the audio file, indicating the amount of data processed per second. */\n  bitrate: number;\n  /** The codec profile used for encoding the audio data, indicating specific settings and capabilities */\n  codecProfile: string;\n  /** The tool or software used to encode or process the audio file */\n  tool: string;\n  /** The duration of the audio file in seconds */\n  duration: number;\n  /** The title of the audio file or track */\n  title: string;\n  /** The name of the artist or band who performed the audio track. */\n  artist: string;\n  /** The name of the album that the audio track belongs to */\n  album: string;\n  /** The year the audio track was release */\n  year: number;\n  /** The genre of the audio track */\n  genre: string;\n  /** The music label or company that released the audio trac */\n  label: string;\n}\n\nexport interface BasicFileController {\n  createFile(file: Express.Multer.File, isPublic: string): Promise;\n\n  getPrivateFile(res: Response, id: number): Promise;\n\n  getFile(id: number): Promise;\n\n  removeFile(id: number): Promise;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/GpsFileMetadataEntity.html":{"url":"entities/GpsFileMetadataEntity.html","title":"entity - GpsFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  GpsFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/gps-file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the GPS metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                altitude\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                latitude\n                            \n                            \n                                    \n                                    \n                                longitude\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        altitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/gps-file-metadata.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/gps-file-metadata.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        latitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/gps-file-metadata.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        longitude\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/gps-file-metadata.entity.ts:37\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { GpsFileMetadata } from \"../file.types\";\n\n/**\n * The entity stores the GPS metadata of the file\n */\n@Entity(\"file_metadata_gps\")\nexport class GpsFileMetadataEntity implements GpsFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  altitude: number;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  latitude: number;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  longitude: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphicCaptchaService.html":{"url":"classes/GraphicCaptchaService.html","title":"class - GraphicCaptchaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphicCaptchaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/captcha/graphic-captcha.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The GraphicCaptchaService class extends the CaptchaService class with a specialization for graphical captchas.\nIt manages the generation and validation of graphic captchas.\n\n            \n\n            \n                Extends\n            \n            \n                            CaptchaService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateCaptcha\n                            \n                            \n                                    Private\n                                generateColor\n                            \n                            \n                                    Private\n                                    Async\n                                getCaptchaExp\n                            \n                            \n                                    Private\n                                    Async\n                                getCaptchaFontFamily\n                            \n                            \n                                    Private\n                                    Async\n                                getCaptchaFontPath\n                            \n                            \n                                    Private\n                                    Async\n                                makeImageFromText\n                            \n                            \n                                    Async\n                                validateCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/common/captcha/graphic-captcha.service.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAn instance of Logger.\n\n\n                                                        \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAn instance of CacheService.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateCaptcha()\n                \n            \n\n\n                    \n                        \n                            Inherited from         CaptchaService\n\n                        \n                    \n                    \n                        \n                                Defined in         CaptchaService:55\n\n                        \n                    \n\n\n            \n                \n                        Generates a new graphical captcha and stores it in the cache.\n\n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nA promise resolving to a GraphicCaptchaResponse object containing the captcha id and image.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateColor\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateColor()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:129\n                        \n                    \n\n\n            \n                \n                        Generates a random RGB color.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                \nAn RGB color string.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getCaptchaExp\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCaptchaExp()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:137\n                        \n                    \n\n\n            \n                \n                        Retrieves the captcha expiration time defined in configuration.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nA promise resolving to the captcha expiration time.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getCaptchaFontFamily\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCaptchaFontFamily()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:145\n                        \n                    \n\n\n            \n                \n                        Retrieves the captcha font family defined in configuration.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nA promise resolving to the captcha font family.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getCaptchaFontPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCaptchaFontPath()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:153\n                        \n                    \n\n\n            \n                \n                        Retrieves the captcha font path defined in configuration and normalizes it.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nA promise resolving to the normalized captcha font path.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        makeImageFromText\n                        \n                    \n                \n            \n            \n                \n                        \n                    makeImageFromText(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/captcha/graphic-captcha.service.ts:96\n                        \n                    \n\n\n            \n                \n                        Generates an image from the provided text.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe text to be drawn on the image.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nA promise resolving to a base64 encoded image.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateCaptcha(request: CaptchaRequest)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CaptchaService\n\n                        \n                    \n                    \n                        \n                                Defined in         CaptchaService:76\n\n                        \n                    \n\n\n            \n                \n                        Validates the provided captcha request against the cached value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            CaptchaRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe captcha request to be validated.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA promise resolving to a boolean indicating whether the captcha is valid or not.\n\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CaptchaRequest,\n  CaptchaResponse,\n  CaptchaService,\n} from \"./captcha.types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Inject, Logger } from \"@nestjs/common\";\nimport { createCanvas, registerFont } from \"canvas\";\nimport { CAPTCHA_CACHE_PREFIX } from \"./captcha.constants\";\nimport * as path from \"path\";\nimport { StringUtils } from \"../../shared/utils/string.utils\";\nimport { NumberUtils } from \"../../shared/utils/number.utils\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../shared/modules/cache/cache.types\";\nimport { CaptchaConfig } from \"../../../gen-src/captcha.config\";\nimport generateRandomString = StringUtils.generateRandomString;\nimport generateRandomInt = NumberUtils.generateRandomInt;\n\n/**\n * The GraphicCaptchaService class extends the CaptchaService class with a specialization for graphical captchas.\n * It manages the generation and validation of graphic captchas.\n */\nexport class GraphicCaptchaService extends CaptchaService {\n  /**\n   * @param {Logger} logger - An instance of Logger.\n   * @param {CacheService} cacheService - An instance of CacheService.\n   */\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    private readonly cacheService: CacheService,\n  ) {\n    super();\n  }\n\n  /**\n   * Generates a new graphical captcha and stores it in the cache.\n   * @returns {Promise} - A promise resolving to a GraphicCaptchaResponse object containing the captcha id and image.\n   */\n  async generateCaptcha(): Promise {\n    const captchaEnabled = await this.cacheService.getBoolean(\n      CaptchaConfig.ENABLED,\n    );\n    if (!captchaEnabled) {\n      return undefined;\n    }\n    const id = uuidv4();\n    const val = generateRandomString(5, 7);\n    const image = await this.makeImageFromText(val);\n    const capEx = await this.getCaptchaExp();\n    await this.cacheService.set(`${CAPTCHA_CACHE_PREFIX}:${id}`, val, capEx);\n    this.logger.debug(`Generated captcha with id: ${id} and value: ${val}`);\n    return { id, image: `data:image/png;base64,${image}`, type: \"default\" };\n  }\n\n  /**\n   * Validates the provided captcha request against the cached value.\n   * @param {CaptchaRequest} request - The captcha request to be validated.\n   * @returns {Promise} - A promise resolving to a boolean indicating whether the captcha is valid or not.\n   */\n  async validateCaptcha(request: CaptchaRequest): Promise {\n    const key = `${CAPTCHA_CACHE_PREFIX}:${request.id}`;\n    const val = await this.cacheService.get(key);\n    this.cacheService.del(key);\n    if (!val) {\n      this.logger.warn(`Invalid captcha id: ${request.id}`);\n      return false;\n    }\n    if (val !== request.data) {\n      this.logger.warn(`Incorrect captcha value for id: ${request.id}`);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Generates an image from the provided text.\n   * @param {string} text - The text to be drawn on the image.\n   * @returns {Promise} - A promise resolving to a base64 encoded image.\n   */\n  private async makeImageFromText(text: string) {\n    const canvas = createCanvas(200, 50);\n    const ctx = canvas.getContext(\"2d\");\n    const capFontFamily = await this.getCaptchaFontFamily();\n    const capFontPath = await this.getCaptchaFontPath();\n    registerFont(capFontPath, { family: capFontFamily });\n    ctx.fillStyle = this.generateColor();\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.font = `30px ${capFontFamily}`;\n    ctx.textBaseline = \"middle\";\n    for (let i = 0; i } - A promise resolving to the captcha expiration time.\n   */\n  private async getCaptchaExp() {\n    return await this.cacheService.getNumber(CaptchaConfig.EXPIRATION);\n  }\n\n  /**\n   * Retrieves the captcha font family defined in configuration.\n   * @returns {Promise} - A promise resolving to the captcha font family.\n   */\n  private async getCaptchaFontFamily() {\n    return await this.cacheService.get(CaptchaConfig.FONT_FAMILY);\n  }\n\n  /**\n   * Retrieves the captcha font path defined in configuration and normalizes it.\n   * @returns {Promise} - A promise resolving to the normalized captcha font path.\n   */\n  private async getCaptchaFontPath() {\n    const dir =\n      process.cwd() + (await this.cacheService.get(CaptchaConfig.FONT_PATH));\n    return path.normalize(dir);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IccFileMetadata.html":{"url":"interfaces/IccFileMetadata.html","title":"interface - IccFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IccFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing ICC file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            connectionSpace\n                                        \n                                \n                                \n                                        \n                                            deviceManufacturer\n                                        \n                                \n                                \n                                        \n                                            deviceModelNumber\n                                        \n                                \n                                \n                                        \n                                            iccCopyright\n                                        \n                                \n                                \n                                        \n                                            iccDescription\n                                        \n                                \n                                \n                                        \n                                            iccProfileDate\n                                        \n                                \n                                \n                                        \n                                            iccSignature\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            primaryPlatform\n                                        \n                                \n                                \n                                        \n                                            profileClassName\n                                        \n                                \n                                \n                                        \n                                            profileClassValue\n                                        \n                                \n                                \n                                        \n                                            profileCreator\n                                        \n                                \n                                \n                                        \n                                            profileVersion\n                                        \n                                \n                                \n                                        \n                                            renderingIntentName\n                                        \n                                \n                                \n                                        \n                                            renderingIntentValue\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connectionSpace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        connectionSpace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The connection space of the ICC profile, representing the intermediate color space used for color conversions.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deviceManufacturer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deviceManufacturer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The manufacturer of the device for which the ICC profile was created\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deviceModelNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deviceModelNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The model number of the device for which the ICC profile was created\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iccCopyright\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccCopyright:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The copyright information for the ICC profile, indicating ownership and usage rights\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iccDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A description of the ICC profile, explaining its purpose and characteristics\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iccProfileDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccProfileDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The date and time when the ICC profile was created or last modified\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iccSignature\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iccSignature:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A unique signature of the ICC profile used to confirm its authenticity and validity\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the identification number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryPlatform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primaryPlatform:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The primary platform or operating system for which the ICC profile was created or optimized\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileClassName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileClassName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the ICC profile class, describing its primary purpose\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileClassValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileClassValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The class of the ICC profile, indicating its primary purpose and type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileCreator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileCreator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name or identifier of the creator of the ICC profile\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The version of the ICC profile, indicating the specification version used to create the color profile.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        renderingIntentName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        renderingIntentName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Specifies the name of the rendering type that is used when converting colors between color spaces\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        renderingIntentValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        renderingIntentValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates the type of rendering to be used when converting colors between color spaces\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  /** This field contains the identification number */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file */\n  name: string;\n  /** This field stores the path to the file on the server */\n  path: string;\n  /** This field specifies the type of access to the file, public or private */\n  public: boolean;\n  /** This field stores the size of the file in bytes */\n  size: number;\n  /** This field stores the icon of the file */\n  icon: Media;\n  /** This field stores the media preview of the file  */\n  preview: Media;\n  /** This field contains a reference to the FileMetadata container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The MIME type of the file, indicating the nature and format of the file content */\n  mime: string;\n  /** The file extension, indicating the file format */\n  ext: string;\n  /** The cryptographic hash of the file content, used for integrity verification and identification */\n  hash: string;\n  /** The ICC (International Color Consortium) profile data associated with the file, used for color management */\n  icc: IccFileMetadata;\n  /** GPS data associated with the location where the file was created, including latitude, longitude and elevation */\n  gps: GpsFileMetadata;\n  /** This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics */\n  image: ImageFileMetadata;\n  /** This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created */\n  exif: ExifFileMetadata;\n  /** This field is used to store information about the structure and properties of the audio file */\n  audio: AudioFileMetadata;\n  /** This field is used to store information about the structure and properties of the video recording*/\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The number of bits used to represent the color of a single pixel in the image */\n  bps: number;\n  /** The width of the image in pixels */\n  width: number;\n  /** The height of the image in pixels */\n  height: number;\n  /** The number of color components used to represent the color of the image */\n  colorComponents: number;\n  /** The subsampling method used for the image, indicating how color information is sampled */\n  subsampling: string;\n  /** The date and time when the image was created or last modified */\n  dateTime: Date;\n  /** The bit depth of the image, indicating the number of bits used for color representation */\n  bitDepth: number;\n  /** The color type of the image, indicating the color model used */\n  colorType: string;\n  /** Contains the compression method used to reduce the size of the image */\n  compression: string;\n  /** Specifies the filtering method used to process the image data before compressing it */\n  filter: string;\n  /**  Indicates whether interlacing is used in the image, allowing for progressive display */\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The version of the ICC profile, indicating the specification version used to create the color profile. */\n  profileVersion: string;\n  /** The class of the ICC profile, indicating its primary purpose and type */\n  profileClassValue: string;\n  /** The name of the ICC profile class, describing its primary purpose */\n  profileClassName: string;\n  /** The connection space of the ICC profile, representing the intermediate color space used for color conversions. */\n  connectionSpace: string;\n  /** The date and time when the ICC profile was created or last modified */\n  iccProfileDate: Date;\n  /** A unique signature of the ICC profile used to confirm its authenticity and validity */\n  iccSignature: string;\n  /** The primary platform or operating system for which the ICC profile was created or optimized */\n  primaryPlatform: string;\n  /** The manufacturer of the device for which the ICC profile was created */\n  deviceManufacturer: string;\n  /** The model number of the device for which the ICC profile was created */\n  deviceModelNumber: string;\n  /**  Indicates the type of rendering to be used when converting colors between color spaces */\n  renderingIntentValue: string;\n  /** Specifies the name of the rendering type that is used when converting colors between color spaces */\n  renderingIntentName: string;\n  /** The name or identifier of the creator of the ICC profile */\n  profileCreator: string;\n  /** A description of the ICC profile, explaining its purpose and characteristics */\n  iccDescription: string;\n  /** The copyright information for the ICC profile, indicating ownership and usage rights */\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** This field specifies the manufacturer of the camera */\n  make: string;\n  /** This field specifies the model of the camera  */\n  model: string;\n  /** Indicates image display orientation based on EXIF metadata */\n  orientation: string;\n  /** X-side resolution of the photo*/\n  resolutionX: string;\n  /** Y-side resolution of the photo*/\n  resolutionY: string;\n  /** Unit of image resolution */\n  resolutionUnit: string;\n  /** The field contains information about the software that was used to create or edit the image */\n  software: string;\n  /** This field is responsible for specifying the method of placing these color components Y, Cb and Cr relative to the image pixels */\n  ycbCrPositioning: string;\n  /** Pointer to the beginning of an EXIF IFD block in a file inside a TIFF file */\n  exifIfdPointer: string;\n  /** Contains information about the location where the image was taken */\n  gpsInfoIfdPointer: string;\n  /** Exposure time (shutter speed) when capturing an image */\n  exposureTime: string;\n  /** Contains data on the aperture number (aperture) when capturing an image */\n  fNumber: string;\n  /** Contains data on the exposure mode (shutter speed and aperture) used to capture the image */\n  exposureProgram: string;\n  /** Contains data on the ISO value (the sensitivity of the camera sensor to light) */\n  isoSpeedRatings: string;\n  /** Contains EXIF specification version data */\n  exifVersion: string;\n  /** Contains time offset data relative to UTC (Coordinated Universal Time) for the date and time when the image was taken */\n  offsetTime: string;\n  /** Contains data on the shutter speed of the camera */\n  shutterSpeedValue: string;\n  /** Contains data on the aperture (aperture) value used to capture the image */\n  aperture: string;\n  /** Contains data on the brightness level of the image */\n  brightness: string;\n  /** Contains exposure compensation data  */\n  exposureBias: string;\n  /** Contains data on the maximum aperture (aperture) value  */\n  maxAperture: string;\n  /** Contains data on the distance to the subject in millimeters */\n  subjectDistance: string;\n  /** Contains data on the light sensing mode used by the camera when capturing an image */\n  meteringMode: string;\n  /** Contains data on the status and operation of the flash during image capture */\n  flash: string;\n  /** Contains data about the focal length of the camera lens */\n  focalLength: string;\n  /** The Flashpix format version used for the image */\n  flashpixVersion: string;\n  /** The color space of the image data */\n  colorSpace: string;\n  /** Width (horizontal resolution) of the image in pixels */\n  pixelXDimension: string;\n  /** Contains data about the vertical resolution (height) of the image in pixels */\n  pixelYDimension: string;\n  /** Pointer to the start of the Interoperability IFD block for compatibility metadata */\n  interoperabilityIfdPointer: string;\n  /** Indicates the method used by the camera sensor to capture the image */\n  sensingMethod: string;\n  /** The type of scene captured in the image, indicating if it was taken with a digital camera */\n  sceneType: string;\n  /** Indicates whether the image was processed with custom rendering */\n  customRendered: string;\n  /** The exposure mode used by the camera during the shot */\n  exposureMode: string;\n  /** The white balance setting used during the shot */\n  whiteBalance: string;\n  /** The digital zoom ratio applied during the shot */\n  digitalZoomRatio: string;\n  /** The type of scene capture mode used during the shot */\n  sceneCaptureType: string;\n  /** The level of contrast applied to the image */\n  contrast: string;\n  /** The level of color saturation applied to the image */\n  saturation: string;\n  /** The level of sharpness applied to the image */\n  sharpness: string;\n  /** The distance range to the subject during the shot */\n  subjectDistanceRange: string;\n  /** The manufacturer of the lens used to capture the image */\n  lensMake: string;\n  /** The model of the lens used to capture the image */\n  lensModel: string;\n  /** Indicates whether the image is a composite, created by combining multiple images or applying effects */\n  compositeImage: string;\n  /** The interoperability index indicating the standard used for ensuring image compatibility */\n  interoperabilityIndex: string;\n  /** The version of the interoperability standard used for the image */\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  /** Representing identifier of meta-data object */\n  id: number;\n  /** Representing gps-latitude parameter */\n  latitude: number;\n  /** Representing gps-longitude parameter */\n  longitude: number;\n  /** Representing gps-altitude parameter */\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** A codec ( algorithm or method ) used to compress and decompress a video file */\n  codec: string;\n  /** The container format of the video file, indicating how video, audio, and other data streams are packaged together */\n  container: string;\n  /** The width of the video in pixels */\n  width: number;\n  /** The height of the video in pixels */\n  height: number;\n  /**  The bitrate of the video file, indicating the amount of data processed per second */\n  bitrate: number;\n  /** The duration of the video file in seconds */\n  duration: number;\n  /** A sample video aspect ratio indicating how pixels are distributed in a video stream */\n  sampleAspectRatio: string;\n  /** The display aspect ratio of the video, indicating the ratio of width to height for playback.*/\n  displayAspectRatio: string;\n  /** Video color range, indicating the set of colors used in the video file */\n  colorRange: string;\n  /** The color space of the video, indicating how colors are represented and interpreted */\n  colorSpace: string;\n  /** The frame rate of the video, indicating the number of frames displayed per second */\n  frameRate: string;\n  /** The rotation angle of the video in degrees, indicating its orientation */\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The format of the audio file container, which encapsulates audio streams and metadata */\n  container: string;\n  /** The audio codec used for encoding or decoding the audio data */\n  codec: string;\n  /** The sample rate of the audio file, indicating the number of samples per second */\n  sampleRate: number;\n  /**  The number of audio channels in the file, indicating the sound configuration (e.g., mono, stereo) */\n  numberOfChannels: number;\n  /**  The bitrate of the audio file, indicating the amount of data processed per second. */\n  bitrate: number;\n  /** The codec profile used for encoding the audio data, indicating specific settings and capabilities */\n  codecProfile: string;\n  /** The tool or software used to encode or process the audio file */\n  tool: string;\n  /** The duration of the audio file in seconds */\n  duration: number;\n  /** The title of the audio file or track */\n  title: string;\n  /** The name of the artist or band who performed the audio track. */\n  artist: string;\n  /** The name of the album that the audio track belongs to */\n  album: string;\n  /** The year the audio track was release */\n  year: number;\n  /** The genre of the audio track */\n  genre: string;\n  /** The music label or company that released the audio trac */\n  label: string;\n}\n\nexport interface BasicFileController {\n  createFile(file: Express.Multer.File, isPublic: string): Promise;\n\n  getPrivateFile(res: Response, id: number): Promise;\n\n  getFile(id: number): Promise;\n\n  removeFile(id: number): Promise;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/IccFileMetadataEntity.html":{"url":"entities/IccFileMetadataEntity.html","title":"entity - IccFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  IccFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/icc-file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the ICC metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                connectionSpace\n                            \n                            \n                                    \n                                    \n                                deviceManufacturer\n                            \n                            \n                                    \n                                    \n                                deviceModelNumber\n                            \n                            \n                                    \n                                    \n                                iccCopyright\n                            \n                            \n                                    \n                                    \n                                iccDescription\n                            \n                            \n                                    \n                                    \n                                iccProfileDate\n                            \n                            \n                                    \n                                    \n                                iccSignature\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                primaryPlatform\n                            \n                            \n                                    \n                                    \n                                profileClassName\n                            \n                            \n                                    \n                                    \n                                profileClassValue\n                            \n                            \n                                    \n                                    \n                                profileCreator\n                            \n                            \n                                    \n                                    \n                                profileVersion\n                            \n                            \n                                    \n                                    \n                                renderingIntentName\n                            \n                            \n                                    \n                                    \n                                renderingIntentValue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        connectionSpace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'connection_space', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deviceManufacturer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'device_manufacturer', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deviceModelNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'device_model_number', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        iccCopyright\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'icc_copyright', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        iccDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'icc_description', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        iccProfileDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('date', {name: 'icc_profile_date', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        iccSignature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'icc_signature', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        primaryPlatform\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'primary_platform', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profileClassName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'profile_class_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profileClassValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'profile_class_value', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profileCreator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'profile_creator', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profileVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'profile_version', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        renderingIntentName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'rendering_intent_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        renderingIntentValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'rendering_intent_value', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/icc-file-metadata.entity.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { IccFileMetadata } from \"../file.types\";\n\n/**\n * The entity stores the ICC metadata of the file\n */\n@Entity(\"file_metadata_icc\")\nexport class IccFileMetadataEntity implements IccFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"varchar\", { name: \"profile_version\", nullable: true })\n  profileVersion: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"profile_class_value\", nullable: true })\n  profileClassValue: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"profile_class_name\", nullable: true })\n  profileClassName: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"connection_space\", nullable: true })\n  connectionSpace: string;\n\n  @Index()\n  @Column(\"date\", { name: \"icc_profile_date\", nullable: true })\n  iccProfileDate: Date;\n\n  @Index()\n  @Column(\"varchar\", { name: \"icc_signature\", nullable: true })\n  iccSignature: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"primary_platform\", nullable: true })\n  primaryPlatform: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"device_manufacturer\", nullable: true })\n  deviceManufacturer: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"device_model_number\", nullable: true })\n  deviceModelNumber: string;\n\n  @Index()\n  @Column(\"int\", { name: \"rendering_intent_value\", nullable: true })\n  renderingIntentValue: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"rendering_intent_name\", nullable: true })\n  renderingIntentName: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"profile_creator\", nullable: true })\n  profileCreator: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"icc_description\", nullable: true })\n  iccDescription: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"icc_copyright\", nullable: true })\n  iccCopyright: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageFileMetadata.html":{"url":"interfaces/ImageFileMetadata.html","title":"interface - ImageFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ImageFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing image file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bitDepth\n                                        \n                                \n                                \n                                        \n                                            bps\n                                        \n                                \n                                \n                                        \n                                            colorComponents\n                                        \n                                \n                                \n                                        \n                                            colorType\n                                        \n                                \n                                \n                                        \n                                            compression\n                                        \n                                \n                                \n                                        \n                                            dateTime\n                                        \n                                \n                                \n                                        \n                                            filter\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            interlace\n                                        \n                                \n                                \n                                        \n                                            subsampling\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bitDepth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bitDepth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The bit depth of the image, indicating the number of bits used for color representation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bps:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of bits used to represent the color of a single pixel in the image\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorComponents\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorComponents:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The number of color components used to represent the color of the image\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The color type of the image, indicating the color model used\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        compression\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        compression:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Contains the compression method used to reduce the size of the image\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The date and time when the image was created or last modified\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Specifies the filtering method used to process the image data before compressing it\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The height of the image in pixels\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the identification number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interlace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interlace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates whether interlacing is used in the image, allowing for progressive display\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subsampling\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subsampling:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The subsampling method used for the image, indicating how color information is sampled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The width of the image in pixels\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  /** This field contains the identification number */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file */\n  name: string;\n  /** This field stores the path to the file on the server */\n  path: string;\n  /** This field specifies the type of access to the file, public or private */\n  public: boolean;\n  /** This field stores the size of the file in bytes */\n  size: number;\n  /** This field stores the icon of the file */\n  icon: Media;\n  /** This field stores the media preview of the file  */\n  preview: Media;\n  /** This field contains a reference to the FileMetadata container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The MIME type of the file, indicating the nature and format of the file content */\n  mime: string;\n  /** The file extension, indicating the file format */\n  ext: string;\n  /** The cryptographic hash of the file content, used for integrity verification and identification */\n  hash: string;\n  /** The ICC (International Color Consortium) profile data associated with the file, used for color management */\n  icc: IccFileMetadata;\n  /** GPS data associated with the location where the file was created, including latitude, longitude and elevation */\n  gps: GpsFileMetadata;\n  /** This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics */\n  image: ImageFileMetadata;\n  /** This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created */\n  exif: ExifFileMetadata;\n  /** This field is used to store information about the structure and properties of the audio file */\n  audio: AudioFileMetadata;\n  /** This field is used to store information about the structure and properties of the video recording*/\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The number of bits used to represent the color of a single pixel in the image */\n  bps: number;\n  /** The width of the image in pixels */\n  width: number;\n  /** The height of the image in pixels */\n  height: number;\n  /** The number of color components used to represent the color of the image */\n  colorComponents: number;\n  /** The subsampling method used for the image, indicating how color information is sampled */\n  subsampling: string;\n  /** The date and time when the image was created or last modified */\n  dateTime: Date;\n  /** The bit depth of the image, indicating the number of bits used for color representation */\n  bitDepth: number;\n  /** The color type of the image, indicating the color model used */\n  colorType: string;\n  /** Contains the compression method used to reduce the size of the image */\n  compression: string;\n  /** Specifies the filtering method used to process the image data before compressing it */\n  filter: string;\n  /**  Indicates whether interlacing is used in the image, allowing for progressive display */\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The version of the ICC profile, indicating the specification version used to create the color profile. */\n  profileVersion: string;\n  /** The class of the ICC profile, indicating its primary purpose and type */\n  profileClassValue: string;\n  /** The name of the ICC profile class, describing its primary purpose */\n  profileClassName: string;\n  /** The connection space of the ICC profile, representing the intermediate color space used for color conversions. */\n  connectionSpace: string;\n  /** The date and time when the ICC profile was created or last modified */\n  iccProfileDate: Date;\n  /** A unique signature of the ICC profile used to confirm its authenticity and validity */\n  iccSignature: string;\n  /** The primary platform or operating system for which the ICC profile was created or optimized */\n  primaryPlatform: string;\n  /** The manufacturer of the device for which the ICC profile was created */\n  deviceManufacturer: string;\n  /** The model number of the device for which the ICC profile was created */\n  deviceModelNumber: string;\n  /**  Indicates the type of rendering to be used when converting colors between color spaces */\n  renderingIntentValue: string;\n  /** Specifies the name of the rendering type that is used when converting colors between color spaces */\n  renderingIntentName: string;\n  /** The name or identifier of the creator of the ICC profile */\n  profileCreator: string;\n  /** A description of the ICC profile, explaining its purpose and characteristics */\n  iccDescription: string;\n  /** The copyright information for the ICC profile, indicating ownership and usage rights */\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** This field specifies the manufacturer of the camera */\n  make: string;\n  /** This field specifies the model of the camera  */\n  model: string;\n  /** Indicates image display orientation based on EXIF metadata */\n  orientation: string;\n  /** X-side resolution of the photo*/\n  resolutionX: string;\n  /** Y-side resolution of the photo*/\n  resolutionY: string;\n  /** Unit of image resolution */\n  resolutionUnit: string;\n  /** The field contains information about the software that was used to create or edit the image */\n  software: string;\n  /** This field is responsible for specifying the method of placing these color components Y, Cb and Cr relative to the image pixels */\n  ycbCrPositioning: string;\n  /** Pointer to the beginning of an EXIF IFD block in a file inside a TIFF file */\n  exifIfdPointer: string;\n  /** Contains information about the location where the image was taken */\n  gpsInfoIfdPointer: string;\n  /** Exposure time (shutter speed) when capturing an image */\n  exposureTime: string;\n  /** Contains data on the aperture number (aperture) when capturing an image */\n  fNumber: string;\n  /** Contains data on the exposure mode (shutter speed and aperture) used to capture the image */\n  exposureProgram: string;\n  /** Contains data on the ISO value (the sensitivity of the camera sensor to light) */\n  isoSpeedRatings: string;\n  /** Contains EXIF specification version data */\n  exifVersion: string;\n  /** Contains time offset data relative to UTC (Coordinated Universal Time) for the date and time when the image was taken */\n  offsetTime: string;\n  /** Contains data on the shutter speed of the camera */\n  shutterSpeedValue: string;\n  /** Contains data on the aperture (aperture) value used to capture the image */\n  aperture: string;\n  /** Contains data on the brightness level of the image */\n  brightness: string;\n  /** Contains exposure compensation data  */\n  exposureBias: string;\n  /** Contains data on the maximum aperture (aperture) value  */\n  maxAperture: string;\n  /** Contains data on the distance to the subject in millimeters */\n  subjectDistance: string;\n  /** Contains data on the light sensing mode used by the camera when capturing an image */\n  meteringMode: string;\n  /** Contains data on the status and operation of the flash during image capture */\n  flash: string;\n  /** Contains data about the focal length of the camera lens */\n  focalLength: string;\n  /** The Flashpix format version used for the image */\n  flashpixVersion: string;\n  /** The color space of the image data */\n  colorSpace: string;\n  /** Width (horizontal resolution) of the image in pixels */\n  pixelXDimension: string;\n  /** Contains data about the vertical resolution (height) of the image in pixels */\n  pixelYDimension: string;\n  /** Pointer to the start of the Interoperability IFD block for compatibility metadata */\n  interoperabilityIfdPointer: string;\n  /** Indicates the method used by the camera sensor to capture the image */\n  sensingMethod: string;\n  /** The type of scene captured in the image, indicating if it was taken with a digital camera */\n  sceneType: string;\n  /** Indicates whether the image was processed with custom rendering */\n  customRendered: string;\n  /** The exposure mode used by the camera during the shot */\n  exposureMode: string;\n  /** The white balance setting used during the shot */\n  whiteBalance: string;\n  /** The digital zoom ratio applied during the shot */\n  digitalZoomRatio: string;\n  /** The type of scene capture mode used during the shot */\n  sceneCaptureType: string;\n  /** The level of contrast applied to the image */\n  contrast: string;\n  /** The level of color saturation applied to the image */\n  saturation: string;\n  /** The level of sharpness applied to the image */\n  sharpness: string;\n  /** The distance range to the subject during the shot */\n  subjectDistanceRange: string;\n  /** The manufacturer of the lens used to capture the image */\n  lensMake: string;\n  /** The model of the lens used to capture the image */\n  lensModel: string;\n  /** Indicates whether the image is a composite, created by combining multiple images or applying effects */\n  compositeImage: string;\n  /** The interoperability index indicating the standard used for ensuring image compatibility */\n  interoperabilityIndex: string;\n  /** The version of the interoperability standard used for the image */\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  /** Representing identifier of meta-data object */\n  id: number;\n  /** Representing gps-latitude parameter */\n  latitude: number;\n  /** Representing gps-longitude parameter */\n  longitude: number;\n  /** Representing gps-altitude parameter */\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** A codec ( algorithm or method ) used to compress and decompress a video file */\n  codec: string;\n  /** The container format of the video file, indicating how video, audio, and other data streams are packaged together */\n  container: string;\n  /** The width of the video in pixels */\n  width: number;\n  /** The height of the video in pixels */\n  height: number;\n  /**  The bitrate of the video file, indicating the amount of data processed per second */\n  bitrate: number;\n  /** The duration of the video file in seconds */\n  duration: number;\n  /** A sample video aspect ratio indicating how pixels are distributed in a video stream */\n  sampleAspectRatio: string;\n  /** The display aspect ratio of the video, indicating the ratio of width to height for playback.*/\n  displayAspectRatio: string;\n  /** Video color range, indicating the set of colors used in the video file */\n  colorRange: string;\n  /** The color space of the video, indicating how colors are represented and interpreted */\n  colorSpace: string;\n  /** The frame rate of the video, indicating the number of frames displayed per second */\n  frameRate: string;\n  /** The rotation angle of the video in degrees, indicating its orientation */\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The format of the audio file container, which encapsulates audio streams and metadata */\n  container: string;\n  /** The audio codec used for encoding or decoding the audio data */\n  codec: string;\n  /** The sample rate of the audio file, indicating the number of samples per second */\n  sampleRate: number;\n  /**  The number of audio channels in the file, indicating the sound configuration (e.g., mono, stereo) */\n  numberOfChannels: number;\n  /**  The bitrate of the audio file, indicating the amount of data processed per second. */\n  bitrate: number;\n  /** The codec profile used for encoding the audio data, indicating specific settings and capabilities */\n  codecProfile: string;\n  /** The tool or software used to encode or process the audio file */\n  tool: string;\n  /** The duration of the audio file in seconds */\n  duration: number;\n  /** The title of the audio file or track */\n  title: string;\n  /** The name of the artist or band who performed the audio track. */\n  artist: string;\n  /** The name of the album that the audio track belongs to */\n  album: string;\n  /** The year the audio track was release */\n  year: number;\n  /** The genre of the audio track */\n  genre: string;\n  /** The music label or company that released the audio trac */\n  label: string;\n}\n\nexport interface BasicFileController {\n  createFile(file: Express.Multer.File, isPublic: string): Promise;\n\n  getPrivateFile(res: Response, id: number): Promise;\n\n  getFile(id: number): Promise;\n\n  removeFile(id: number): Promise;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ImageFileMetadataEntity.html":{"url":"entities/ImageFileMetadataEntity.html","title":"entity - ImageFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ImageFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/image-file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the image metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                bitDepth\n                            \n                            \n                                    \n                                    \n                                bps\n                            \n                            \n                                    \n                                    \n                                colorComponents\n                            \n                            \n                                    \n                                    \n                                colorType\n                            \n                            \n                                    \n                                    \n                                compression\n                            \n                            \n                                    \n                                    \n                                dateTime\n                            \n                            \n                                    \n                                    \n                                filter\n                            \n                            \n                                    \n                                    \n                                height\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                interlace\n                            \n                            \n                                    \n                                    \n                                subsampling\n                            \n                            \n                                    \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bitDepth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bps\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        colorComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {name: 'color_components', nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        colorType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        compression\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('date', {name: 'date_time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        interlace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        subsampling\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/image-file-metadata.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { ImageFileMetadata } from \"../file.types\";\n\n/**\n * The entity stores the image metadata of the file\n */\n@Entity(\"file_metadata_image\")\nexport class ImageFileMetadataEntity implements ImageFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  bps: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  width: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  height: number;\n\n  @Index()\n  @Column(\"int\", { name: \"color_components\", nullable: true, default: null })\n  colorComponents: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  subsampling: string;\n\n  @Index()\n  @Column(\"date\", { name: \"date_time\", nullable: true })\n  dateTime: Date;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  bitDepth: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  colorType: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  compression: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  filter: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  interlace: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidTokenMsException.html":{"url":"classes/InvalidTokenMsException.html","title":"class - InvalidTokenMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidTokenMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/invalid-token-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for invalid token, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/invalid-token-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for invalid token, extending MsException.\n */\nexport class InvalidTokenMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.UNAUTHORIZED, message || \"Invalid token\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtDto.html":{"url":"classes/JwtDto.html","title":"class - JwtDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for JWT tokens.\nContains access and refresh tokens along with their expiration dates and user information.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessToken\n                            \n                            \n                                    \n                                atExp\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                rtExp\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:104\n                        \n                    \n\n            \n                \n                    The access token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        atExp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform(TransformUtils.dateToTime)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:116\n                        \n                    \n\n            \n                \n                    The expiration date of the access token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:110\n                        \n                    \n\n            \n                \n                    The refresh token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rtExp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform(TransformUtils.dateToTime)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:122\n                        \n                    \n\n            \n                \n                    The expiration date of the refresh token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:98\n                        \n                    \n\n            \n                \n                    The user-data object.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIP, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\nimport { Expose, Transform, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common\";\nimport { UserDto } from \"../user/user.types\";\nimport { TransformUtils } from \"../../shared/utils/transform.utils\";\nimport { AuthService } from \"./auth.constants\";\nimport { Request, Response } from \"express\";\n\n/**\n * Data transfer object for login payload.\n * Contains user login information required for authentication.\n */\nexport class LoginPayload {\n  /**\n   * The login of the user.\n   * @example ```typescript\n   * \"admin\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  login: string;\n\n  /**\n   * The password of the user.\n   * @example ```typescript\n   * \"P@ssw0rd!\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  /**\n   * The IP address of the user.\n   * Optional.\n   * @example ```typescript\n   * \"192.168.0.1\"\n   */\n  @IsIP()\n  @IsOptional()\n  ipAddress: string;\n\n  /**\n   * The ID of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaId?: string;\n\n  /**\n   * The payload of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaPayload?: string;\n}\n\n/**\n * Data transfer object for token exchange payload.\n * Contains the token to be exchanged for a new token pair JwtDto.\n */\nexport class ExchangeTokenPayload {\n  /**\n   * The refresh token to be exchanged.\n   */\n  @IsString()\n  @IsOptional()\n  token: string;\n}\n\n/**\n * Data transfer object for JWT tokens.\n * Contains access and refresh tokens along with their expiration dates and user information.\n */\nexport class JwtDto {\n  /**\n   * The user-data object.\n   */\n  @Expose()\n  @Type(() => UserDto)\n  user: UserDto;\n\n  /**\n   * The access token.\n   */\n  @Expose()\n  accessToken: string;\n\n  /**\n   * The refresh token.\n   */\n  @Expose()\n  refreshToken: string;\n\n  /**\n   * The expiration date of the access token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  atExp: Date;\n\n  /**\n   * The expiration date of the refresh token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  rtExp: Date;\n}\n\nexport interface BasicAuthController {\n  login(\n    payload: LoginPayload,\n    request: Request,\n    response: Response,\n  ): Promise;\n\n  logout(token: string, response: Response): Promise;\n\n  exchange(\n    payload: ExchangeTokenPayload,\n    request: Request,\n    response: Response,\n  ): Promise>;\n}\n\n/**\n * Options for configuring the authentication module.\n * @property service - The authentication service class.\n */\nexport type AuthModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Language.html":{"url":"interfaces/Language.html","title":"interface - Language","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Language\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface represents a language entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Media } from \"../../../common/media/media.types\";\n\n/**\n * Interface represents a language entity.\n */\nexport interface Language {\n  id: string;\n  name: string;\n  icon: Media;\n}\n/**\n * Interface represents a localized string entity.\n */\nexport interface LocalizedString {\n  id: number;\n  code: string;\n  lang: Language;\n  value: string;\n}\n\n/**\n * Interface represents a localized media entity.\n */\nexport interface LocalizedMedia {\n  id: number;\n  code: string;\n  lang: Language;\n  value: Media;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/LanguageEntity.html":{"url":"entities/LanguageEntity.html","title":"entity - LanguageEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  LanguageEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/entity/language.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the system languages\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/language.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/language.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/language.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/language.entity.ts:36\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Column, Entity, Index, ManyToOne, PrimaryColumn } from \"typeorm\";\nimport { MediaEntity } from \"../../../../common/media/entity/media.entity\";\nimport { Language } from \"../locale.types\";\n\n/**\n * The entity stores the system languages\n */\n@Entity(\"languages\")\nexport class LanguageEntity implements Language {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  id: string;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  name: string;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  icon: MediaEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LiteAuthGuard.html":{"url":"injectables/LiteAuthGuard.html","title":"injectable - LiteAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LiteAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/guards/lite-auth.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                An authentication guard that extends AbstractAuthGuard, used for lightweight authentication without user fetching.\n\n            \n\n            \n                Extends\n            \n            \n                            AbstractAuthGuard\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                fetchUser\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, userService: UserService, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/guards/lite-auth.guard.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        fetchUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in lib/shared/guards/lite-auth.guard.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { AbstractAuthGuard } from \"./abstract-auth.guard\";\nimport { LOGGER } from \"../modules/log/log.constants\";\nimport { UserService } from \"../../common/user/user.types\";\nimport { CacheService } from \"../modules/cache/cache.types\";\n\n/**\n * An authentication guard that extends AbstractAuthGuard, used for lightweight authentication without user fetching.\n */\n@Injectable()\nexport class LiteAuthGuard extends AbstractAuthGuard {\n  protected fetchUser = false;\n\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    protected readonly userService: UserService,\n    protected readonly cacheService: CacheService,\n  ) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocaleModule.html":{"url":"modules/LocaleModule.html","title":"module - LocaleModule","body":"\n                   \n\n\n\n\n    Modules\n    LocaleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocaleModule\n\n\n\ncluster_LocaleModule_exports\n\n\n\ncluster_LocaleModule_providers\n\n\n\n\nLocaleService \n\nLocaleService \n\n\n\nLocaleModule\n\nLocaleModule\n\nLocaleService  -->\n\nLocaleModule->LocaleService \n\n\n\n\n\nLocaleService\n\nLocaleService\n\nLocaleModule -->\n\nLocaleService->LocaleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides services and configurations for handling localization.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LocaleService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LocaleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { LanguageEntity } from \"./entity/language.entity\";\nimport { LocalizedStringEntity } from \"./entity/localized-string.entity\";\nimport { LocalizedMediaEntity } from \"./entity/localized-media.entity\";\nimport { LocaleService } from \"./locale.service\";\n\n/**\n * A module that provides services and configurations for handling localization.\n */\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      LanguageEntity,\n      LocalizedStringEntity,\n      LocalizedMediaEntity,\n    ]),\n  ],\n  providers: [LocaleService],\n  exports: [LocaleService],\n})\nexport class LocaleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocaleService.html":{"url":"injectables/LocaleService.html","title":"injectable - LocaleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocaleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for handling localization operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLocalizedStrings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(languageRep: Repository, localizedStringRep: Repository, localizedMediaRep: Repository)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/locale/locale.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        languageRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localizedStringRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localizedMediaRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createLocalizedStrings\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLocalizedStrings(value: string, code?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/locale/locale.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Creates localized strings for all available languages.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to be localized.\n\n\n                                            \n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nAn optional code to be used for the localized strings.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to an array of LocalizedStringEntity objects.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { LanguageEntity } from \"./entity/language.entity\";\nimport { LocalizedStringEntity } from \"./entity/localized-string.entity\";\nimport { LocalizedMediaEntity } from \"./entity/localized-media.entity\";\n\n/**\n * Service for handling localization operations.\n */\n@Injectable()\nexport class LocaleService {\n  constructor(\n    @InjectRepository(LanguageEntity)\n    private readonly languageRep: Repository,\n    @InjectRepository(LocalizedStringEntity)\n    private readonly localizedStringRep: Repository,\n    @InjectRepository(LocalizedMediaEntity)\n    private readonly localizedMediaRep: Repository,\n  ) {}\n\n  /**\n   * Creates localized strings for all available languages.\n   * @param value - The value to be localized.\n   * @param code - An optional code to be used for the localized strings.\n   * @returns A promise that resolves to an array of LocalizedStringEntity objects.\n   */\n  async createLocalizedStrings(\n    value: string,\n    code?: string,\n  ): Promise {\n    const languages = await this.languageRep.find();\n    const res: LocalizedStringEntity[] = [];\n    for (const language of languages) {\n      const ls = new LocalizedStringEntity();\n      ls.lang = language;\n      ls.value = value;\n      if (code) {\n        ls.code = `${code}_${language.id}`;\n        const existed = await this.localizedStringRep.findOne({\n          where: { code: ls.code },\n        });\n        ls.id = existed?.id;\n      }\n      await this.localizedStringRep.save(ls);\n      res.push(ls);\n    }\n    return res;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocaleSubscriber.html":{"url":"injectables/LocaleSubscriber.html","title":"injectable - LocaleSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocaleSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/entity/locale-subscriber.ts\n        \n\n\n            \n                Description\n            \n            \n                LocaleSubscriber is an EntitySubscriber that listens to removal events\nfor entities that have relationships with LocalizedStringEntity or LocalizedMediaEntity.\nWhen such an entity is removed, LocaleSubscriber will also remove\nthe associated LocalizedStringEntity or LocalizedMediaEntity instances.\nExample :class MyEntity {\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  firstName: LocalizedStringEntity[];\n}const myEntity = new MyEntity();\nentityManager.remove(myEntity); // will trigger LocaleSubscriber to remove related LocalizedStringEntity instances\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                afterRemove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/locale/entity/locale-subscriber.ts:47\n                            \n                        \n\n                \n                    \n                            Constructs a new LocaleSubscriber instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Logger instance used for logging messages.\n\n\n                                                        \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe DataSource instance used to access the connection and its subscribers.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        afterRemove\n                        \n                    \n                \n            \n            \n                \n                        \n                    afterRemove(event: RemoveEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/locale/entity/locale-subscriber.ts:69\n                        \n                    \n\n\n            \n                \n                        The afterRemove event is triggered when an entity is removed.\nIf the removed entity has relationships with LocalizedStringEntity instances,\nthe related LocalizedStringEntity instances will also be removed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        RemoveEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe RemoveEvent instance containing information about the removed entity.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves when the removal of related LocalizedStringEntity instances is complete.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  DataSource,\n  EntitySubscriberInterface,\n  EventSubscriber,\n  RemoveEvent,\n} from \"typeorm\";\nimport { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { InjectDataSource } from \"@nestjs/typeorm\";\nimport { LOGGER } from \"../../log/log.constants\";\nimport { LocalizedStringEntity } from \"./localized-string.entity\";\nimport { LocalizedMediaEntity } from \"./localized-media.entity\";\n\n/**\n * LocaleSubscriber is an EntitySubscriber that listens to removal events\n * for entities that have relationships with LocalizedStringEntity or LocalizedMediaEntity.\n * When such an entity is removed, LocaleSubscriber will also remove\n * the associated LocalizedStringEntity or LocalizedMediaEntity instances.\n *\n * @example\n * class MyEntity {\n *   @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n *   @JoinTable()\n *   firstName: LocalizedStringEntity[];\n * }\n *\n * const myEntity = new MyEntity();\n * entityManager.remove(myEntity); // will trigger LocaleSubscriber to remove related LocalizedStringEntity instances\n */\n@Injectable()\n@EventSubscriber()\nexport class LocaleSubscriber implements EntitySubscriberInterface {\n  /**\n   * Constructs a new LocaleSubscriber instance.\n   *\n   * @param logger - The Logger instance used for logging messages.\n   * @param dataSource - The DataSource instance used to access the connection and its subscribers.\n   */\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    @InjectDataSource() private readonly dataSource: DataSource,\n  ) {\n    dataSource.manager.connection.subscribers.push(this);\n  }\n\n  /**\n   * The afterRemove event is triggered when an entity is removed.\n   * If the removed entity has relationships with LocalizedStringEntity instances,\n   * the related LocalizedStringEntity instances will also be removed.\n   *\n   * @param event - The RemoveEvent instance containing information about the removed entity.\n   * @returns A Promise that resolves when the removal of related LocalizedStringEntity instances is complete.\n   */\n  async afterRemove(event: RemoveEvent): Promise {\n    const entity = event.entity;\n    if (!entity) {\n      return;\n    }\n    const localizedStringProperties = Object.values(entity).filter((value) => {\n      return (\n        Array.isArray(value) &&\n        value.length > 0 &&\n        value[0] instanceof LocalizedStringEntity\n      );\n    });\n    if (localizedStringProperties.length > 0) {\n      this.logger.verbose(\n        `Removing related LocalizedStringEntity entities for ${entity.constructor.name} with ID ${event.entityId}`,\n      );\n      for (const relatedEntities of localizedStringProperties as LocalizedStringEntity[][]) {\n        for (const relatedEntity of relatedEntities) {\n          this.logger.verbose(\n            `Removing LocalizedStringEntity with ID ${relatedEntity.id}`,\n          );\n          await event.manager.remove(relatedEntity);\n          this.logger.verbose(\n            `LocalizedStringEntity with ID ${relatedEntity.id} removed`,\n          );\n        }\n      }\n    }\n\n    const localizedMediaProperties = Object.values(entity).filter((value) => {\n      return (\n        Array.isArray(value) &&\n        value.length > 0 &&\n        value[0] instanceof LocalizedMediaEntity\n      );\n    });\n    if (localizedMediaProperties.length > 0) {\n      this.logger.verbose(\n        `Removing related LocalizedMediaEntity entities for ${entity.constructor.name} with ID ${event.entityId}`,\n      );\n      for (const relatedEntities of localizedMediaProperties as LocalizedMediaEntity[][]) {\n        for (const relatedEntity of relatedEntities) {\n          this.logger.verbose(\n            `Removing LocalizedMediaEntity with ID ${relatedEntity.id}`,\n          );\n          await event.manager.remove(relatedEntity);\n          this.logger.verbose(\n            `LocalizedMediaEntity with ID ${relatedEntity.id} removed`,\n          );\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalizedMedia.html":{"url":"interfaces/LocalizedMedia.html","title":"interface - LocalizedMedia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LocalizedMedia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface represents a localized media entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lang\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lang:         Language\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Language\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Media } from \"../../../common/media/media.types\";\n\n/**\n * Interface represents a language entity.\n */\nexport interface Language {\n  id: string;\n  name: string;\n  icon: Media;\n}\n/**\n * Interface represents a localized string entity.\n */\nexport interface LocalizedString {\n  id: number;\n  code: string;\n  lang: Language;\n  value: string;\n}\n\n/**\n * Interface represents a localized media entity.\n */\nexport interface LocalizedMedia {\n  id: number;\n  code: string;\n  lang: Language;\n  value: Media;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/LocalizedMediaEntity.html":{"url":"entities/LocalizedMediaEntity.html","title":"entity - LocalizedMediaEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  LocalizedMediaEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/entity/localized-media.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores internationalized media objects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lang\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-media.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-media.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LanguageEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-media.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-media.entity.ts:44\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { LocalizedMedia } from \"../locale.types\";\nimport { LanguageEntity } from \"./language.entity\";\nimport { MediaEntity } from \"../../../../common/media/entity/media.entity\";\n\n/**\n * The entity stores internationalized media objects\n */\n@Entity(\"localized_medias\")\nexport class LocalizedMediaEntity implements LocalizedMedia {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: false })\n  code: string;\n\n  @ManyToOne(() => LanguageEntity, (t) => t.id)\n  lang: LanguageEntity;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  value: MediaEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalizedString.html":{"url":"interfaces/LocalizedString.html","title":"interface - LocalizedString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LocalizedString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/locale.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface represents a localized string entity.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lang\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lang:         Language\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Language\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Media } from \"../../../common/media/media.types\";\n\n/**\n * Interface represents a language entity.\n */\nexport interface Language {\n  id: string;\n  name: string;\n  icon: Media;\n}\n/**\n * Interface represents a localized string entity.\n */\nexport interface LocalizedString {\n  id: number;\n  code: string;\n  lang: Language;\n  value: string;\n}\n\n/**\n * Interface represents a localized media entity.\n */\nexport interface LocalizedMedia {\n  id: number;\n  code: string;\n  lang: Language;\n  value: Media;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/LocalizedStringEntity.html":{"url":"entities/LocalizedStringEntity.html","title":"entity - LocalizedStringEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  LocalizedStringEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/locale/entity/localized-string.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the translations in itself\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lang\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-string.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-string.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LanguageEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-string.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/locale/entity/localized-string.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { LocalizedString } from \"../locale.types\";\nimport { LanguageEntity } from \"./language.entity\";\n\n/**\n * The entity stores the translations in itself\n */\n@Entity(\"localized_strings\")\nexport class LocalizedStringEntity implements LocalizedString {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @ManyToOne(() => LanguageEntity, (t) => t.id)\n  lang: LanguageEntity;\n\n  @Column(\"text\", { nullable: false })\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LogModule.html":{"url":"modules/LogModule.html","title":"module - LogModule","body":"\n                   \n\n\n\n\n    Modules\n    LogModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/log/log.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides logging functionality using the LogService.\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { LogService } from \"./log.service\";\nimport { LOGGER } from \"./log.constants\";\n\n/**\n * A module that provides logging functionality using the LogService.\n */\n@Module({\n  providers: [\n    {\n      provide: LOGGER,\n      useClass: LogService,\n    },\n  ],\n  exports: [LOGGER],\n})\nexport class LogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogService.html":{"url":"classes/LogService.html","title":"class - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/log/log.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Log service that extends the built-in Nest Logger, providing additional functionality and context.\n\n            \n\n            \n                Extends\n            \n            \n                        Logger\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                    Private\n                                getCallingContext\n                            \n                            \n                                log\n                            \n                            \n                                    Private\n                                patchFromCtx\n                            \n                            \n                                    Private\n                                prepareMessage\n                            \n                            \n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:54\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Logs a debug message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe debug message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAdditional data to log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string, trace?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Logs an error message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error message.\n\n\n                                            \n                                        \n                                        \n                                                trace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional stack trace.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getCallingContext\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCallingContext()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:100\n                        \n                    \n\n\n            \n                \n                        Retrieves the calling context (file path, method name, line number) from the stack trace.\n\n\n                        \n                            Returns :     { filePath: any; methodName: any; lineNumber: any; }\n\n                        \n                            \n                                An object containing the file path, method name, and line number.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:14\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Logs a message at the log level.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message to log.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAdditional data to log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        patchFromCtx\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchFromCtx(ctx: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Patches the calling context for display in log messages.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ctx\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe calling context object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A formatted string representing the calling context.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        prepareMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    prepareMessage(message: string, data?: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:82\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Prepares the log message by combining the main message with additional data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe main log message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nAdditional data to log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The prepared log message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:44\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Logs a verbose message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe verbose message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAdditional data to log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/log/log.service.ts:34\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Logs a warning message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe warning message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAdditional data to log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from \"@nestjs/common\";\nimport { ObjectUtils } from \"../../utils/object.utils\";\nimport inspect = ObjectUtils.inspect;\n\n/**\n * Log service that extends the built-in Nest Logger, providing additional functionality and context.\n */\nexport class LogService extends Logger {\n  /**\n   * Logs a message at the log level.\n   * @param message - The message to log.\n   * @param data - Additional data to log.\n   */\n  log(message: string, data: T) {\n    const ctx = this.getCallingContext();\n    super.log(this.prepareMessage(message, data), ctx.methodName);\n  }\n\n  /**\n   * Logs an error message.\n   * @param message - The error message.\n   * @param trace - Optional stack trace.\n   */\n  error(message: string, trace?: string) {\n    const ctx = this.getCallingContext();\n    super.error(this.prepareMessage(message), trace, this.patchFromCtx(ctx));\n  }\n\n  /**\n   * Logs a warning message.\n   * @param message - The warning message.\n   * @param data - Additional data to log.\n   */\n  warn(message: string, data: T) {\n    const ctx = this.getCallingContext();\n    super.warn(this.prepareMessage(message, data), this.patchFromCtx(ctx));\n  }\n\n  /**\n   * Logs a verbose message.\n   * @param message - The verbose message.\n   * @param data - Additional data to log.\n   */\n  verbose(message: string, data: T) {\n    const ctx = this.getCallingContext();\n    super.verbose(this.prepareMessage(message, data), this.patchFromCtx(ctx));\n  }\n\n  /**\n   * Logs a debug message.\n   * @param message - The debug message.\n   * @param data - Additional data to log.\n   */\n  debug(message: string, data: T) {\n    const ctx = this.getCallingContext();\n    super.debug(this.prepareMessage(message, data), this.patchFromCtx(ctx));\n  }\n\n  /**\n   * Patches the calling context for display in log messages.\n   * @param ctx - The calling context object.\n   * @returns A formatted string representing the calling context.\n   */\n  private patchFromCtx(ctx: {\n    filePath: string;\n    methodName: string;\n    lineNumber: string;\n  }) {\n    let p = `${ctx?.filePath}:${ctx?.lineNumber} > ${ctx?.methodName}`;\n    if (p === \"undefined:undefined > undefined\") {\n      p = \"unknown\";\n    }\n    return p;\n  }\n\n  /**\n   * Prepares the log message by combining the main message with additional data.\n   * @param message - The main log message.\n   * @param data - Additional data to log.\n   * @returns The prepared log message.\n   */\n  private prepareMessage(message: string, data?: T) {\n    let m = inspect(message);\n    if (\n      (m.startsWith(`'`) && m.endsWith(`'`)) ||\n      (m.startsWith(`\"`) && m.endsWith(`\"`))\n    ) {\n      m = m.substring(1, m.length - 1);\n    }\n    if (data) {\n      m += inspect(data);\n    }\n    return m;\n  }\n\n  /**\n   * Retrieves the calling context (file path, method name, line number) from the stack trace.\n   * @returns An object containing the file path, method name, and line number.\n   */\n  private getCallingContext() {\n    const stackTrace = new Error().stack;\n    if (stackTrace) {\n      const lines = stackTrace.split(\"\\n\");\n      // The calling context is located in the fourth line of the stack trace\n      if (lines.length >= 4) {\n        const matches = lines[3].match(/at\\s+(.+?)\\s+\\((.+):(\\d+):\\d+\\)/);\n        if (matches && matches.length > 3) {\n          const filePath = matches[2].split(\"/\").slice(-2).join(\"/\");\n          const methodName = matches[1];\n          const lineNumber = matches[3];\n          return { filePath, methodName, lineNumber };\n        }\n      }\n    }\n    return {\n      filePath: \"Unknown path\",\n      methodName: \"Anonymous context\",\n      lineNumber: \"Unknown line\",\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginPayload.html":{"url":"classes/LoginPayload.html","title":"class - LoginPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/auth/auth.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for login payload.\nContains user login information required for authentication.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                captchaId\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                captchaPayload\n                            \n                            \n                                    \n                                    \n                                ipAddress\n                            \n                            \n                                    \n                                    \n                                login\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        captchaId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:64\n                        \n                    \n\n            \n                \n                    The ID of the captcha.\nOptional.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        captchaPayload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:72\n                        \n                    \n\n            \n                \n                    The payload of the captcha.\nOptional.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ipAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsIP()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:56\n                        \n                    \n\n            \n                \n                    The IP address of the user.\nOptional.\nExample :\"192.168.0.1\"\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:37\n                        \n                    \n\n            \n                \n                    The login of the user.\nExample :\"admin\"\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/auth/auth.types.ts:46\n                        \n                    \n\n            \n                \n                    The password of the user.\nExample :\"P@ssw0rd!\"\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIP, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\nimport { Expose, Transform, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common\";\nimport { UserDto } from \"../user/user.types\";\nimport { TransformUtils } from \"../../shared/utils/transform.utils\";\nimport { AuthService } from \"./auth.constants\";\nimport { Request, Response } from \"express\";\n\n/**\n * Data transfer object for login payload.\n * Contains user login information required for authentication.\n */\nexport class LoginPayload {\n  /**\n   * The login of the user.\n   * @example ```typescript\n   * \"admin\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  login: string;\n\n  /**\n   * The password of the user.\n   * @example ```typescript\n   * \"P@ssw0rd!\"\n   */\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  /**\n   * The IP address of the user.\n   * Optional.\n   * @example ```typescript\n   * \"192.168.0.1\"\n   */\n  @IsIP()\n  @IsOptional()\n  ipAddress: string;\n\n  /**\n   * The ID of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaId?: string;\n\n  /**\n   * The payload of the captcha.\n   * Optional.\n   */\n  @IsString()\n  @IsOptional()\n  captchaPayload?: string;\n}\n\n/**\n * Data transfer object for token exchange payload.\n * Contains the token to be exchanged for a new token pair JwtDto.\n */\nexport class ExchangeTokenPayload {\n  /**\n   * The refresh token to be exchanged.\n   */\n  @IsString()\n  @IsOptional()\n  token: string;\n}\n\n/**\n * Data transfer object for JWT tokens.\n * Contains access and refresh tokens along with their expiration dates and user information.\n */\nexport class JwtDto {\n  /**\n   * The user-data object.\n   */\n  @Expose()\n  @Type(() => UserDto)\n  user: UserDto;\n\n  /**\n   * The access token.\n   */\n  @Expose()\n  accessToken: string;\n\n  /**\n   * The refresh token.\n   */\n  @Expose()\n  refreshToken: string;\n\n  /**\n   * The expiration date of the access token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  atExp: Date;\n\n  /**\n   * The expiration date of the refresh token.\n   */\n  @Transform(TransformUtils.dateToTime)\n  rtExp: Date;\n}\n\nexport interface BasicAuthController {\n  login(\n    payload: LoginPayload,\n    request: Request,\n    response: Response,\n  ): Promise;\n\n  logout(token: string, response: Response): Promise;\n\n  exchange(\n    payload: ExchangeTokenPayload,\n    request: Request,\n    response: Response,\n  ): Promise>;\n}\n\n/**\n * Options for configuring the authentication module.\n * @property service - The authentication service class.\n */\nexport type AuthModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Media.html":{"url":"interfaces/Media.html","title":"interface - Media","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Media\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a media object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            files\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            metadata\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains a unique character identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        files\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        files:     MediaFile[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MediaFile[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains a link to the original file and all its thumbnails\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the identification number of the file\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadata:         FileMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FileMetadata\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains a link to the meta data container\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the name of the file in all languages involved\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the date the file was created\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         MediaType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MediaType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains a list of unique settings and functions that the file contains\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  /** This field contains the identification number of the file  */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file in all languages involved */\n  name: LocalizedString[];\n  /** This field contains a list of unique settings and functions that the file contains */\n  type: MediaType;\n  /** This field contains a link to the original file and all its thumbnails */\n  files: MediaFile[];\n  /** This field contains a link to the meta data container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  /** A unique code representing the media file type */\n  code: string;\n  /** This field contains a unique character identifier */\n  name: string;\n  /** This field defines the possibility to create a duplicate file in WEBP format */\n  vp6: boolean;\n  /** This field indicates the type of access to the file, public or private */\n  private: boolean;\n  /** A numeric value reflecting the quality level of the media (defines the compression rate or overall quality) */\n  quality: number;\n  /** A file extension associated with the media type and which defines the file format  */\n  ext: MediaExt;\n  /** An array of supported media formats for this media type */\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media format */\n  name: string;\n  /** The width of the media file in pixels, represented as a string  */\n  width: string;\n  /** The height of the media file in pixels, represented as a string  */\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  /** A unique code or identifier for the media file*/\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media file */\n  name: string;\n  /** The width of the media file in pixels */\n  width: number;\n  /** The height of the media file in pixels */\n  height: number;\n  /** The size of the media file in bytes */\n  size: number;\n  /** The format of the media file, represented by the MediaFormat type */\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** A unique code or identifier for the media file*/\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(id: number, privateMedia?: boolean): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\nexport interface BasicMediaController {\n  createMedia(\n    file: Express.Multer.File,\n    type: string,\n    id: number,\n  ): Promise;\n\n  getPrivateMedia(\n    res: Response,\n    id: number,\n    format: string,\n    webp: boolean,\n  ): Promise;\n\n  getMedia(id: number): Promise;\n\n  removeMedia(id: number): Promise;\n\n  recreateMedia(id: number): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MediaController.html":{"url":"controllers/MediaController.html","title":"controller - MediaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MediaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /media\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createMedia\n                            \n                            \n                                    \n                                    Async\n                                getMedia\n                            \n                            \n                                    \n                                    Async\n                                getPrivateMedia\n                            \n                            \n                                    \n                                    Async\n                                recreateMedia\n                            \n                            \n                                    \n                                    Async\n                                removeMedia\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createMedia\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMedia(file: Express.Multer.File, type, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/upload/:type?')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/media/media.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                type\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    DEFAULT_MEDIA_TYPE\n                                            \n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getMedia\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMedia(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/media/media.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getPrivateMedia\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPrivateMedia(res: Response, id: number, format: string, webp: boolean)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/private/:id')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/media/media.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                format\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                webp\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        recreateMedia\n                        \n                    \n                \n            \n            \n                \n                        \n                    recreateMedia(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/recreate/:id')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/media/media.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        removeMedia\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeMedia(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/media/media.controller.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Query,\n  Res,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from \"@nestjs/common\";\nimport { FileInterceptor } from \"@nestjs/platform-express\";\nimport { Response } from \"express\";\nimport * as path from \"path\";\nimport { AuthGuard } from \"../../shared/guards/auth.guard\";\nimport { BasicMediaController, Media, MediaManager } from \"./media.types\";\nimport { NotEmptyPipe } from \"../../shared/pipes/not-empty.pipe\";\nimport { DEFAULT_MEDIA_TYPE } from \"./media.constants\";\n\n@Controller(\"/media\")\n@UseGuards(AuthGuard)\nexport class MediaController implements BasicMediaController {\n  constructor(private readonly mediaService: MediaManager) {}\n\n  @Post(\"/upload/:type?\")\n  @UseInterceptors(FileInterceptor(\"file\"))\n  async createMedia(\n    @UploadedFile(\"file\", new NotEmptyPipe(\"file\")) file: Express.Multer.File,\n    @Param(\"type\") type = DEFAULT_MEDIA_TYPE,\n    @Query(\"id\") id: number,\n  ): Promise {\n    return await this.mediaService.createOrUpdateMedia(\n      file.buffer,\n      type,\n      undefined,\n      id,\n    );\n  }\n\n  @Get(\"/private/:id\")\n  async getPrivateMedia(\n    @Res() res: Response,\n    @Param(\"id\") id: number,\n    @Query(\"format\") format: string,\n    @Query(\"webp\") webp: boolean,\n  ): Promise {\n    const media = await this.mediaService.findPrivateById(id);\n    const mediaPath = await this.mediaService.getMediaPath(media, format, webp);\n    res.sendFile(path.join(process.cwd(), mediaPath));\n  }\n\n  @Get(\"/:id\")\n  async getMedia(@Param(\"id\") id: number): Promise {\n    return await this.mediaService.findPublicById(id);\n  }\n\n  @Delete(\"/:id\")\n  async removeMedia(@Param(\"id\") id: number): Promise {\n    return await this.mediaService.remove(id);\n  }\n\n  @Post(\"/recreate/:id\")\n  async recreateMedia(@Param(\"id\") id: number): Promise {\n    return await this.mediaService.recreate(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaDto.html":{"url":"classes/MediaDto.html","title":"class - MediaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for media.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Media\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                files\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                metadata\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                tsCreated\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:171\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MediaFile[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:182\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:168\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileMetadata\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:185\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedString[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:174\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:188\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:178\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  /** This field contains the identification number of the file  */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file in all languages involved */\n  name: LocalizedString[];\n  /** This field contains a list of unique settings and functions that the file contains */\n  type: MediaType;\n  /** This field contains a link to the original file and all its thumbnails */\n  files: MediaFile[];\n  /** This field contains a link to the meta data container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  /** A unique code representing the media file type */\n  code: string;\n  /** This field contains a unique character identifier */\n  name: string;\n  /** This field defines the possibility to create a duplicate file in WEBP format */\n  vp6: boolean;\n  /** This field indicates the type of access to the file, public or private */\n  private: boolean;\n  /** A numeric value reflecting the quality level of the media (defines the compression rate or overall quality) */\n  quality: number;\n  /** A file extension associated with the media type and which defines the file format  */\n  ext: MediaExt;\n  /** An array of supported media formats for this media type */\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media format */\n  name: string;\n  /** The width of the media file in pixels, represented as a string  */\n  width: string;\n  /** The height of the media file in pixels, represented as a string  */\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  /** A unique code or identifier for the media file*/\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media file */\n  name: string;\n  /** The width of the media file in pixels */\n  width: number;\n  /** The height of the media file in pixels */\n  height: number;\n  /** The size of the media file in bytes */\n  size: number;\n  /** The format of the media file, represented by the MediaFormat type */\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** A unique code or identifier for the media file*/\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(id: number, privateMedia?: boolean): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\nexport interface BasicMediaController {\n  createMedia(\n    file: Express.Multer.File,\n    type: string,\n    id: number,\n  ): Promise;\n\n  getPrivateMedia(\n    res: Response,\n    id: number,\n    format: string,\n    webp: boolean,\n  ): Promise;\n\n  getMedia(id: number): Promise;\n\n  removeMedia(id: number): Promise;\n\n  recreateMedia(id: number): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaEntity.html":{"url":"entities/MediaEntity.html","title":"entity - MediaEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores media objects in itself\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                files\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                metadata\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFileEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, f => f.media, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FileMetadataEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, t => t.id, {cascade: true, onDelete: 'CASCADE'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaTypeEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, type => type.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinColumn,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  TableInheritance,\n} from \"typeorm\";\nimport { MediaTypeEntity } from \"./media-type.entity\";\nimport { MediaFileEntity } from \"./media-file.entity\";\nimport { Media } from \"../media.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\nimport { FileMetadataEntity } from \"../../file/entity/file-metadata.entity\";\n\n/**\n * The entity stores media objects in itself\n */\n@Entity(\"medias\")\n@TableInheritance({\n  column: { type: \"varchar\", name: \"class\", nullable: true },\n})\nexport class MediaEntity implements Media {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @ManyToOne(() => MediaTypeEntity, (type) => type.code)\n  type: MediaTypeEntity;\n\n  @OneToMany(() => MediaFileEntity, (f) => f.media, { cascade: true })\n  files: MediaFileEntity[];\n\n  @OneToOne(() => FileMetadataEntity, (t) => t.id, {\n    cascade: true,\n    onDelete: \"CASCADE\",\n  })\n  @JoinColumn()\n  metadata: FileMetadataEntity;\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaExt.html":{"url":"interfaces/MediaExt.html","title":"interface - MediaExt","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaExt\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a media extension.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains a unique character identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A unique code or identifier for the media file\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  /** This field contains the identification number of the file  */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file in all languages involved */\n  name: LocalizedString[];\n  /** This field contains a list of unique settings and functions that the file contains */\n  type: MediaType;\n  /** This field contains a link to the original file and all its thumbnails */\n  files: MediaFile[];\n  /** This field contains a link to the meta data container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  /** A unique code representing the media file type */\n  code: string;\n  /** This field contains a unique character identifier */\n  name: string;\n  /** This field defines the possibility to create a duplicate file in WEBP format */\n  vp6: boolean;\n  /** This field indicates the type of access to the file, public or private */\n  private: boolean;\n  /** A numeric value reflecting the quality level of the media (defines the compression rate or overall quality) */\n  quality: number;\n  /** A file extension associated with the media type and which defines the file format  */\n  ext: MediaExt;\n  /** An array of supported media formats for this media type */\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media format */\n  name: string;\n  /** The width of the media file in pixels, represented as a string  */\n  width: string;\n  /** The height of the media file in pixels, represented as a string  */\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  /** A unique code or identifier for the media file*/\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media file */\n  name: string;\n  /** The width of the media file in pixels */\n  width: number;\n  /** The height of the media file in pixels */\n  height: number;\n  /** The size of the media file in bytes */\n  size: number;\n  /** The format of the media file, represented by the MediaFormat type */\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** A unique code or identifier for the media file*/\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(id: number, privateMedia?: boolean): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\nexport interface BasicMediaController {\n  createMedia(\n    file: Express.Multer.File,\n    type: string,\n    id: number,\n  ): Promise;\n\n  getPrivateMedia(\n    res: Response,\n    id: number,\n    format: string,\n    webp: boolean,\n  ): Promise;\n\n  getMedia(id: number): Promise;\n\n  removeMedia(id: number): Promise;\n\n  recreateMedia(id: number): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaExtEntity.html":{"url":"entities/MediaExtEntity.html","title":"entity - MediaExtEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaExtEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media-ext.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores extensions of media objects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-ext.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-ext.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryColumn } from \"typeorm\";\nimport { MediaExt } from \"../media.types\";\n\n/**\n * The entity stores extensions of media objects\n */\n@Entity(\"medias_ext\")\nexport class MediaExtEntity implements MediaExt {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaFile.html":{"url":"interfaces/MediaFile.html","title":"interface - MediaFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a media file.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            media\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains a unique character identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         MediaFormat\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MediaFormat\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The format of the media file, represented by the MediaFormat type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The height of the media file in pixels\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A unique code or identifier for the media file\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        media\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        media:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the name of the media file\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The size of the media file in bytes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The width of the media file in pixels\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  /** This field contains the identification number of the file  */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file in all languages involved */\n  name: LocalizedString[];\n  /** This field contains a list of unique settings and functions that the file contains */\n  type: MediaType;\n  /** This field contains a link to the original file and all its thumbnails */\n  files: MediaFile[];\n  /** This field contains a link to the meta data container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  /** A unique code representing the media file type */\n  code: string;\n  /** This field contains a unique character identifier */\n  name: string;\n  /** This field defines the possibility to create a duplicate file in WEBP format */\n  vp6: boolean;\n  /** This field indicates the type of access to the file, public or private */\n  private: boolean;\n  /** A numeric value reflecting the quality level of the media (defines the compression rate or overall quality) */\n  quality: number;\n  /** A file extension associated with the media type and which defines the file format  */\n  ext: MediaExt;\n  /** An array of supported media formats for this media type */\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media format */\n  name: string;\n  /** The width of the media file in pixels, represented as a string  */\n  width: string;\n  /** The height of the media file in pixels, represented as a string  */\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  /** A unique code or identifier for the media file*/\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media file */\n  name: string;\n  /** The width of the media file in pixels */\n  width: number;\n  /** The height of the media file in pixels */\n  height: number;\n  /** The size of the media file in bytes */\n  size: number;\n  /** The format of the media file, represented by the MediaFormat type */\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** A unique code or identifier for the media file*/\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(id: number, privateMedia?: boolean): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\nexport interface BasicMediaController {\n  createMedia(\n    file: Express.Multer.File,\n    type: string,\n    id: number,\n  ): Promise;\n\n  getPrivateMedia(\n    res: Response,\n    id: number,\n    format: string,\n    webp: boolean,\n  ): Promise;\n\n  getMedia(id: number): Promise;\n\n  removeMedia(id: number): Promise;\n\n  recreateMedia(id: number): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaFileDto.html":{"url":"classes/MediaFileDto.html","title":"class - MediaFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for media file.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MediaFile\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                format\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                media\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:199\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFormatDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:203\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:206\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:196\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        media\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Media\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:209\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:212\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:215\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:218\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  /** This field contains the identification number of the file  */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file in all languages involved */\n  name: LocalizedString[];\n  /** This field contains a list of unique settings and functions that the file contains */\n  type: MediaType;\n  /** This field contains a link to the original file and all its thumbnails */\n  files: MediaFile[];\n  /** This field contains a link to the meta data container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  /** A unique code representing the media file type */\n  code: string;\n  /** This field contains a unique character identifier */\n  name: string;\n  /** This field defines the possibility to create a duplicate file in WEBP format */\n  vp6: boolean;\n  /** This field indicates the type of access to the file, public or private */\n  private: boolean;\n  /** A numeric value reflecting the quality level of the media (defines the compression rate or overall quality) */\n  quality: number;\n  /** A file extension associated with the media type and which defines the file format  */\n  ext: MediaExt;\n  /** An array of supported media formats for this media type */\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media format */\n  name: string;\n  /** The width of the media file in pixels, represented as a string  */\n  width: string;\n  /** The height of the media file in pixels, represented as a string  */\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  /** A unique code or identifier for the media file*/\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media file */\n  name: string;\n  /** The width of the media file in pixels */\n  width: number;\n  /** The height of the media file in pixels */\n  height: number;\n  /** The size of the media file in bytes */\n  size: number;\n  /** The format of the media file, represented by the MediaFormat type */\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** A unique code or identifier for the media file*/\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(id: number, privateMedia?: boolean): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\nexport interface BasicMediaController {\n  createMedia(\n    file: Express.Multer.File,\n    type: string,\n    id: number,\n  ): Promise;\n\n  getPrivateMedia(\n    res: Response,\n    id: number,\n    format: string,\n    webp: boolean,\n  ): Promise;\n\n  getMedia(id: number): Promise;\n\n  removeMedia(id: number): Promise;\n\n  recreateMedia(id: number): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaFileEntity.html":{"url":"entities/MediaFileEntity.html","title":"entity - MediaFileEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaFileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media-file.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores media object files (links)\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                format\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                media\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFormatEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, type => type.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('smallint', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        media\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('smallint', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-file.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from \"typeorm\";\nimport { MediaEntity } from \"./media.entity\";\nimport { MediaFile } from \"../media.types\";\nimport { MediaFormatEntity } from \"./media-format.entity\";\n\n/**\n * The entity stores media object files (links)\n */\n@Entity(\"medias_files\")\nexport class MediaFileEntity implements MediaFile {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  name: string;\n\n  @Column(\"smallint\", { nullable: true })\n  width: number;\n\n  @Column(\"smallint\", { nullable: true })\n  height: number;\n\n  @Column(\"int\", { nullable: true })\n  size: number;\n\n  @ManyToOne(() => MediaFormatEntity, (type) => type.code)\n  format: MediaFormatEntity;\n\n  @ManyToOne(() => MediaEntity)\n  media: MediaEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaFormat.html":{"url":"interfaces/MediaFormat.html","title":"interface - MediaFormat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaFormat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a media format.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains a unique character identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The height of the media file in pixels, represented as a string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the name of the media format\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The width of the media file in pixels, represented as a string\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  /** This field contains the identification number of the file  */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file in all languages involved */\n  name: LocalizedString[];\n  /** This field contains a list of unique settings and functions that the file contains */\n  type: MediaType;\n  /** This field contains a link to the original file and all its thumbnails */\n  files: MediaFile[];\n  /** This field contains a link to the meta data container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  /** A unique code representing the media file type */\n  code: string;\n  /** This field contains a unique character identifier */\n  name: string;\n  /** This field defines the possibility to create a duplicate file in WEBP format */\n  vp6: boolean;\n  /** This field indicates the type of access to the file, public or private */\n  private: boolean;\n  /** A numeric value reflecting the quality level of the media (defines the compression rate or overall quality) */\n  quality: number;\n  /** A file extension associated with the media type and which defines the file format  */\n  ext: MediaExt;\n  /** An array of supported media formats for this media type */\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media format */\n  name: string;\n  /** The width of the media file in pixels, represented as a string  */\n  width: string;\n  /** The height of the media file in pixels, represented as a string  */\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  /** A unique code or identifier for the media file*/\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media file */\n  name: string;\n  /** The width of the media file in pixels */\n  width: number;\n  /** The height of the media file in pixels */\n  height: number;\n  /** The size of the media file in bytes */\n  size: number;\n  /** The format of the media file, represented by the MediaFormat type */\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** A unique code or identifier for the media file*/\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(id: number, privateMedia?: boolean): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\nexport interface BasicMediaController {\n  createMedia(\n    file: Express.Multer.File,\n    type: string,\n    id: number,\n  ): Promise;\n\n  getPrivateMedia(\n    res: Response,\n    id: number,\n    format: string,\n    webp: boolean,\n  ): Promise;\n\n  getMedia(id: number): Promise;\n\n  removeMedia(id: number): Promise;\n\n  recreateMedia(id: number): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaFormatDto.html":{"url":"classes/MediaFormatDto.html","title":"class - MediaFormatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaFormatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for media format.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MediaFormat\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:151\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:154\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:157\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:160\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  /** This field contains the identification number of the file  */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file in all languages involved */\n  name: LocalizedString[];\n  /** This field contains a list of unique settings and functions that the file contains */\n  type: MediaType;\n  /** This field contains a link to the original file and all its thumbnails */\n  files: MediaFile[];\n  /** This field contains a link to the meta data container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  /** A unique code representing the media file type */\n  code: string;\n  /** This field contains a unique character identifier */\n  name: string;\n  /** This field defines the possibility to create a duplicate file in WEBP format */\n  vp6: boolean;\n  /** This field indicates the type of access to the file, public or private */\n  private: boolean;\n  /** A numeric value reflecting the quality level of the media (defines the compression rate or overall quality) */\n  quality: number;\n  /** A file extension associated with the media type and which defines the file format  */\n  ext: MediaExt;\n  /** An array of supported media formats for this media type */\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media format */\n  name: string;\n  /** The width of the media file in pixels, represented as a string  */\n  width: string;\n  /** The height of the media file in pixels, represented as a string  */\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  /** A unique code or identifier for the media file*/\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media file */\n  name: string;\n  /** The width of the media file in pixels */\n  width: number;\n  /** The height of the media file in pixels */\n  height: number;\n  /** The size of the media file in bytes */\n  size: number;\n  /** The format of the media file, represented by the MediaFormat type */\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** A unique code or identifier for the media file*/\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(id: number, privateMedia?: boolean): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\nexport interface BasicMediaController {\n  createMedia(\n    file: Express.Multer.File,\n    type: string,\n    id: number,\n  ): Promise;\n\n  getPrivateMedia(\n    res: Response,\n    id: number,\n    format: string,\n    webp: boolean,\n  ): Promise;\n\n  getMedia(id: number): Promise;\n\n  removeMedia(id: number): Promise;\n\n  recreateMedia(id: number): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaFormatEntity.html":{"url":"entities/MediaFormatEntity.html","title":"entity - MediaFormatEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaFormatEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media-format.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the formats of media objects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                height\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-format.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('smallint', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-format.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-format.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('smallint', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-format.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryColumn } from \"typeorm\";\nimport { MediaFormat } from \"../media.types\";\n\n/**\n * The entity stores the formats of media objects\n */\n@Entity(\"medias_format\")\nexport class MediaFormatEntity implements MediaFormat {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  name: string;\n\n  @Column(\"smallint\", { nullable: true })\n  width: string;\n\n  @Column(\"smallint\", { nullable: true })\n  height: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaManager.html":{"url":"classes/MediaManager.html","title":"class - MediaManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing the media management service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                createOrUpdateMedia\n                            \n                            \n                                    Abstract\n                                findByCode\n                            \n                            \n                                    Abstract\n                                findMediaById\n                            \n                            \n                                    Abstract\n                                findPrivateById\n                            \n                            \n                                    Abstract\n                                findPublicById\n                            \n                            \n                                    Abstract\n                                getMediaPath\n                            \n                            \n                                    Abstract\n                                recreate\n                            \n                            \n                                    Abstract\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        createOrUpdateMedia\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrUpdateMedia(file: Buffer, type: string, code?: string, existedEntityId?: number, name?: LocalizedString[])\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:237\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                existedEntityId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            LocalizedString[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:225\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findMediaById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findMediaById(id: number, privateMedia?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:227\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                privateMedia\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findPrivateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPrivateById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:231\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findPublicById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPublicById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:229\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getMediaPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMediaPath(media: Media, format?: string, webpSupport?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:245\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                media\n                                            \n                                                            Media\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                format\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                webpSupport\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        recreate\n                        \n                    \n                \n            \n            \n                \n                        \n                    recreate(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:235\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.types.ts:233\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  /** This field contains the identification number of the file  */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file in all languages involved */\n  name: LocalizedString[];\n  /** This field contains a list of unique settings and functions that the file contains */\n  type: MediaType;\n  /** This field contains a link to the original file and all its thumbnails */\n  files: MediaFile[];\n  /** This field contains a link to the meta data container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  /** A unique code representing the media file type */\n  code: string;\n  /** This field contains a unique character identifier */\n  name: string;\n  /** This field defines the possibility to create a duplicate file in WEBP format */\n  vp6: boolean;\n  /** This field indicates the type of access to the file, public or private */\n  private: boolean;\n  /** A numeric value reflecting the quality level of the media (defines the compression rate or overall quality) */\n  quality: number;\n  /** A file extension associated with the media type and which defines the file format  */\n  ext: MediaExt;\n  /** An array of supported media formats for this media type */\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media format */\n  name: string;\n  /** The width of the media file in pixels, represented as a string  */\n  width: string;\n  /** The height of the media file in pixels, represented as a string  */\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  /** A unique code or identifier for the media file*/\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media file */\n  name: string;\n  /** The width of the media file in pixels */\n  width: number;\n  /** The height of the media file in pixels */\n  height: number;\n  /** The size of the media file in bytes */\n  size: number;\n  /** The format of the media file, represented by the MediaFormat type */\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** A unique code or identifier for the media file*/\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(id: number, privateMedia?: boolean): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\nexport interface BasicMediaController {\n  createMedia(\n    file: Express.Multer.File,\n    type: string,\n    id: number,\n  ): Promise;\n\n  getPrivateMedia(\n    res: Response,\n    id: number,\n    format: string,\n    webp: boolean,\n  ): Promise;\n\n  getMedia(id: number): Promise;\n\n  removeMedia(id: number): Promise;\n\n  recreateMedia(id: number): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MediaModule.html":{"url":"modules/MediaModule.html","title":"module - MediaModule","body":"\n                   \n\n\n\n\n    Modules\n    MediaModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/media/media.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for management media system.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: MediaModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/media/media.module.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            MediaModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      service: MediaService,\n      controller: MediaController,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { MediaService } from \"./media.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { MediaEntity } from \"./entity/media.entity\";\nimport { MediaTypeEntity } from \"./entity/media-type.entity\";\nimport { MediaFileEntity } from \"./entity/media-file.entity\";\nimport { MediaFormatEntity } from \"./entity/media-format.entity\";\nimport { MediaManager, MediaModuleOptions } from \"./media.types\";\nimport { FileModule } from \"../file/file.module\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { MediaController } from \"./media.controller\";\nimport { UserModule } from \"../user/user.module\";\n\n/**\n * Module for management media system.\n */\n@Module({})\nexport class MediaModule {\n  static forRoot(\n    options: MediaModuleOptions = {\n      service: MediaService,\n      controller: MediaController,\n    },\n  ): DynamicModule {\n    return {\n      module: MediaModule,\n      controllers: [options.controller],\n      imports: [\n        TypeOrmModule.forFeature([\n          MediaEntity,\n          MediaTypeEntity,\n          MediaFileEntity,\n          MediaFormatEntity,\n        ]),\n        UserModule.forRoot(),\n        FileModule.forRoot(),\n        LogModule,\n        CacheModule,\n      ],\n      providers: [\n        {\n          provide: MediaManager,\n          useClass: options.service,\n        },\n      ],\n      exports: [MediaManager],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MediaType.html":{"url":"interfaces/MediaType.html","title":"interface - MediaType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MediaType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a media type.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            formats\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            private\n                                        \n                                \n                                \n                                        \n                                            quality\n                                        \n                                \n                                \n                                        \n                                            vp6\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A unique code representing the media file type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         MediaExt\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MediaExt\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A file extension associated with the media type and which defines the file format\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formats\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formats:     MediaFormat[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MediaFormat[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    An array of supported media formats for this media type\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains a unique character identifier\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field indicates the type of access to the file, public or private\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quality\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quality:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A numeric value reflecting the quality level of the media (defines the compression rate or overall quality)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vp6\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vp6:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field defines the possibility to create a duplicate file in WEBP format\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  /** This field contains the identification number of the file  */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file in all languages involved */\n  name: LocalizedString[];\n  /** This field contains a list of unique settings and functions that the file contains */\n  type: MediaType;\n  /** This field contains a link to the original file and all its thumbnails */\n  files: MediaFile[];\n  /** This field contains a link to the meta data container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  /** A unique code representing the media file type */\n  code: string;\n  /** This field contains a unique character identifier */\n  name: string;\n  /** This field defines the possibility to create a duplicate file in WEBP format */\n  vp6: boolean;\n  /** This field indicates the type of access to the file, public or private */\n  private: boolean;\n  /** A numeric value reflecting the quality level of the media (defines the compression rate or overall quality) */\n  quality: number;\n  /** A file extension associated with the media type and which defines the file format  */\n  ext: MediaExt;\n  /** An array of supported media formats for this media type */\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media format */\n  name: string;\n  /** The width of the media file in pixels, represented as a string  */\n  width: string;\n  /** The height of the media file in pixels, represented as a string  */\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  /** A unique code or identifier for the media file*/\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media file */\n  name: string;\n  /** The width of the media file in pixels */\n  width: number;\n  /** The height of the media file in pixels */\n  height: number;\n  /** The size of the media file in bytes */\n  size: number;\n  /** The format of the media file, represented by the MediaFormat type */\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** A unique code or identifier for the media file*/\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(id: number, privateMedia?: boolean): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\nexport interface BasicMediaController {\n  createMedia(\n    file: Express.Multer.File,\n    type: string,\n    id: number,\n  ): Promise;\n\n  getPrivateMedia(\n    res: Response,\n    id: number,\n    format: string,\n    webp: boolean,\n  ): Promise;\n\n  getMedia(id: number): Promise;\n\n  removeMedia(id: number): Promise;\n\n  recreateMedia(id: number): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MediaTypeDto.html":{"url":"classes/MediaTypeDto.html","title":"class - MediaTypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MediaTypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for media type.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MediaType\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                ext\n                            \n                            \n                                    \n                                    \n                                formats\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                private\n                            \n                            \n                                    \n                                quality\n                            \n                            \n                                    \n                                vp6\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaExt\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        formats\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFormatDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:137\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:143\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        vp6\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/media.types.ts:140\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  /** This field contains the identification number of the file  */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file in all languages involved */\n  name: LocalizedString[];\n  /** This field contains a list of unique settings and functions that the file contains */\n  type: MediaType;\n  /** This field contains a link to the original file and all its thumbnails */\n  files: MediaFile[];\n  /** This field contains a link to the meta data container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  /** A unique code representing the media file type */\n  code: string;\n  /** This field contains a unique character identifier */\n  name: string;\n  /** This field defines the possibility to create a duplicate file in WEBP format */\n  vp6: boolean;\n  /** This field indicates the type of access to the file, public or private */\n  private: boolean;\n  /** A numeric value reflecting the quality level of the media (defines the compression rate or overall quality) */\n  quality: number;\n  /** A file extension associated with the media type and which defines the file format  */\n  ext: MediaExt;\n  /** An array of supported media formats for this media type */\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media format */\n  name: string;\n  /** The width of the media file in pixels, represented as a string  */\n  width: string;\n  /** The height of the media file in pixels, represented as a string  */\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  /** A unique code or identifier for the media file*/\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media file */\n  name: string;\n  /** The width of the media file in pixels */\n  width: number;\n  /** The height of the media file in pixels */\n  height: number;\n  /** The size of the media file in bytes */\n  size: number;\n  /** The format of the media file, represented by the MediaFormat type */\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** A unique code or identifier for the media file*/\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(id: number, privateMedia?: boolean): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\nexport interface BasicMediaController {\n  createMedia(\n    file: Express.Multer.File,\n    type: string,\n    id: number,\n  ): Promise;\n\n  getPrivateMedia(\n    res: Response,\n    id: number,\n    format: string,\n    webp: boolean,\n  ): Promise;\n\n  getMedia(id: number): Promise;\n\n  removeMedia(id: number): Promise;\n\n  recreateMedia(id: number): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/MediaTypeEntity.html":{"url":"entities/MediaTypeEntity.html","title":"entity - MediaTypeEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  MediaTypeEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/entity/media-type.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the types of media objects\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                ext\n                            \n                            \n                                    \n                                    \n                                formats\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                private\n                            \n                            \n                                    \n                                quality\n                            \n                            \n                                    \n                                vp6\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaExtEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, e => e.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        formats\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaFormatEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quality\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        vp6\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/media/entity/media-type.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { MediaFormatEntity } from \"./media-format.entity\";\nimport { MediaType } from \"../media.types\";\nimport { MediaExtEntity } from \"./media-ext.entity\";\n\n/**\n * The entity stores the types of media objects\n */\n@Entity(\"medias_types\")\nexport class MediaTypeEntity implements MediaType {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: false })\n  name: string;\n\n  @Column(\"boolean\", { default: false })\n  vp6: boolean;\n\n  @Column(\"boolean\", { default: false })\n  private: boolean;\n\n  @Column(\"int\", { nullable: true })\n  quality: number;\n\n  @ManyToOne(() => MediaExtEntity, (e) => e.code)\n  ext: MediaExtEntity;\n\n  @ManyToMany(() => MediaFormatEntity)\n  @JoinTable()\n  formats: MediaFormatEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageBus.html":{"url":"interfaces/MessageBus.html","title":"interface - MessageBus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageBus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/ms-client/ms-client.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface defining the contract for the message bus.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        dispatch\n                                    \n                                \n                                \n                                    \n                                        emit\n                                    \n                                \n                                \n                                    \n                                        send\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dispatch\n                        \n                    \n                \n            \n            \n                \ndispatch(pattern: any, data?: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.types.ts:30\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emit\n                        \n                    \n                \n            \n            \n                \nemit(pattern: any, data?: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.types.ts:42\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        send\n                        \n                    \n                \n            \n            \n                \nsend(pattern: any, data?: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.types.ts:36\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\n\n/**\n * Type definition for microservices client options.\n */\nexport type MsClientOptions = {\n  timeout: number;\n};\n\n/**\n * Interface defining the contract for the message bus.\n */\nexport interface MessageBus {\n  dispatch(\n    pattern: any,\n    data?: TInput,\n    opts?: MsClientOptions,\n  ): Promise;\n\n  send(\n    pattern: any,\n    data?: TInput,\n    opts?: MsClientOptions,\n  ): Observable;\n\n  emit(\n    pattern: any,\n    data?: TInput,\n    opts?: MsClientOptions,\n  ): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessagesBroker.html":{"url":"interfaces/MessagesBroker.html","title":"interface - MessagesBroker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessagesBroker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/messages-broker/messages-broker.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface defining the contract for message brokering.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        emit\n                                    \n                                \n                                \n                                    \n                                        subscribe\n                                    \n                                \n                                \n                                    \n                                        unsubscribe\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        emit\n                        \n                    \n                \n            \n            \n                \nemit(chanel: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.types.ts:26\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Emits a message to a specific channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to emit the message to.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to emit.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(chanel: string, handler: (data: T) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.types.ts:33\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Subscribes to a specific channel with a handler function.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to subscribe to.\n\n\n                                            \n                                        \n                                        \n                                                handler\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe handler function to handle the data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe(chanel: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.types.ts:39\n                        \n                    \n\n\n            \n                \n                        Unsubscribes from a specific channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to unsubscribe from.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface MessagesBroker {\n  /**\n   * Emits a message to a specific channel.\n   * @param chanel - The channel to emit the message to.\n   * @param data - The data to emit.\n   */\n  emit(chanel: string, data: T): Promise;\n\n  /**\n   * Subscribes to a specific channel with a handler function.\n   * @param chanel - The channel to subscribe to.\n   * @param handler - The handler function to handle the data.\n   */\n  subscribe(chanel: string, handler: (data: T) => void);\n\n  /**\n   * Unsubscribes from a specific channel.\n   * @param chanel - The channel to unsubscribe from.\n   */\n  unsubscribe(chanel: string);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessagesBrokerModule.html":{"url":"modules/MessagesBrokerModule.html","title":"module - MessagesBrokerModule","body":"\n                   \n\n\n\n\n    Modules\n    MessagesBrokerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MessagesBrokerModule\n\n\n\ncluster_MessagesBrokerModule_imports\n\n\n\n\nRedisModule\n\nRedisModule\n\n\n\nMessagesBrokerModule\n\nMessagesBrokerModule\n\nMessagesBrokerModule -->\n\nRedisModule->MessagesBrokerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/messages-broker/messages-broker.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides message brokering functionality using Redis.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            RedisModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Logger, Module } from \"@nestjs/common\";\nimport { MESSAGES_BROKER } from \"./messages-broker.constants\";\nimport { RedisModule } from \"../cache/redis.module\";\nimport { LogModule } from \"../log/log.module\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\nimport { MessagesBrokerService } from \"./messages-broker.service\";\n\n/**\n * A module that provides message brokering functionality using Redis.\n */\n@Module({\n  imports: [\n    RedisModule.forRootAsync({\n      imports: [LogModule],\n      inject: [LOGGER],\n      useFactory: (logger: Logger) => {\n        EnvLoader.loadEnvironment(logger);\n        return {\n          config: {\n            host: process.env.REDIS_HOST,\n            port: parseInt(process.env.REDIS_PORT),\n            db: parseInt(process.env.REDIS_DB),\n            username: process.env.REDIS_USER,\n            password: process.env.REDIS_PASSWORD,\n          },\n        };\n      },\n    }),\n  ],\n  providers: [\n    {\n      provide: MESSAGES_BROKER,\n      useClass: MessagesBrokerService,\n    },\n  ],\n  exports: [MESSAGES_BROKER],\n})\nexport class MessagesBrokerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessagesBrokerService.html":{"url":"injectables/MessagesBrokerService.html","title":"injectable - MessagesBrokerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessagesBrokerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/messages-broker/messages-broker.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A service that implements the MessagesBroker interface for message brokering using Redis.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                subClient\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscribers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                emit\n                            \n                            \n                                    Private\n                                safeDeSerialize\n                            \n                            \n                                    Private\n                                safeSerialize\n                            \n                            \n                                subscribe\n                            \n                            \n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pubClient: Redis)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pubClient\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        emit\n                        \n                    \n                \n            \n            \n                \n                        \n                    emit(chanel: string, data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:47\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Emits a message to a specific channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to emit the message to.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to emit.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        safeDeSerialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    safeDeSerialize(data: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Safely deserializes a JSON string to an object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe JSON string to deserialize.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The deserialized object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        safeSerialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    safeSerialize(data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:75\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Safely serializes data to a JSON string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to serialize.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The serialized JSON string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(chanel: string, handler: (data: T) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:56\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Subscribes to a specific channel with a handler function.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to subscribe to.\n\n\n                                            \n                                        \n                                        \n                                                handler\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe handler function to handle the data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe(chanel: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Unsubscribes from a specific channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                chanel\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to unsubscribe from.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Redis\n\n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscribers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/messages-broker/messages-broker.service.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@nestjs/common\";\nimport Redis from \"ioredis\";\nimport { MessagesBroker } from \"./messages-broker.types\";\nimport { REDIS_CLIENT } from \"../cache/cache.constants\";\n\n/**\n * A service that implements the MessagesBroker interface for message brokering using Redis.\n */\n@Injectable()\nexport class MessagesBrokerService implements MessagesBroker {\n  private readonly subClient: Redis;\n  private readonly subscribers: Map void> =\n    new Map();\n\n  constructor(@Inject(REDIS_CLIENT) private readonly pubClient: Redis) {\n    this.subClient = this.pubClient.duplicate();\n    this.subClient.on(\"message\", (chanel, data) => {\n      if (!this.subscribers.has(chanel)) {\n        return;\n      }\n      const fun = this.subscribers.get(chanel);\n      fun(this.safeDeSerialize(data));\n    });\n  }\n\n  /**\n   * Emits a message to a specific channel.\n   * @param chanel - The channel to emit the message to.\n   * @param data - The data to emit.\n   */\n  async emit(chanel: string, data: T) {\n    await this.pubClient.publish(chanel, this.safeSerialize(data));\n  }\n\n  /**\n   * Subscribes to a specific channel with a handler function.\n   * @param chanel - The channel to subscribe to.\n   * @param handler - The handler function to handle the data.\n   */\n  subscribe(chanel: string, handler: (data: T) => void) {\n    this.subClient.subscribe(chanel);\n    this.subscribers.set(chanel, handler);\n  }\n\n  /**\n   * Unsubscribes from a specific channel.\n   * @param chanel - The channel to unsubscribe from.\n   */\n  unsubscribe(chanel: string) {\n    this.subClient.unsubscribe(chanel);\n    this.subscribers.delete(chanel);\n  }\n\n  /**\n   * Safely serializes data to a JSON string.\n   * @param data - The data to serialize.\n   * @returns The serialized JSON string.\n   */\n  private safeSerialize(data: T) {\n    try {\n      return JSON.stringify(data);\n    } catch (error) {\n      return data.toString();\n    }\n  }\n\n  /**\n   * Safely deserializes a JSON string to an object.\n   * @param data - The JSON string to deserialize.\n   * @returns The deserialized object.\n   */\n  private safeDeSerialize(data: string) {\n    try {\n      return JSON.parse(data);\n    } catch (error) {\n      return data;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MsClient.html":{"url":"classes/MsClient.html","title":"class - MsClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MsClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/ms-client/ms-client.ts\n        \n\n\n            \n                Description\n            \n            \n                Microservices client for dispatching messages between microservices.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MessageBus\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dispatch\n                            \n                            \n                                emit\n                            \n                            \n                                    Private\n                                handleRequest\n                            \n                            \n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, proxy: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/ms-client/ms-client.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        proxy\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dispatch\n                        \n                    \n                \n            \n            \n                \ndispatch(pattern: any, data: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.ts:43\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n                        Dispatches a message with the given pattern and data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    Object()\n                                            \n\n                                            \n                                                    \nThe message data.\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nOptional configuration options for the client.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise resolving to the result of the dispatched message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emit\n                        \n                    \n                \n            \n            \n                \nemit(pattern: any, data: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.ts:80\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n                        Emits a message with the given pattern and data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message data.\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional configuration options for the client.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the result of the emitted message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRequest(source: Observable, pattern: any, data: any, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.ts:97\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Handles the request by logging and managing errors and timeouts.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                source\n                                            \n                                                        Observable\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe observable source.\n\n\n                                            \n                                        \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message data.\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional configuration options for the client.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the result.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        send\n                        \n                    \n                \n            \n            \n                \nsend(pattern: any, data: TInput, opts?: MsClientOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/ms-client/ms-client.ts:64\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TResult\n                                    TInput\n                            \n                        \n                    \n\n            \n                \n                        Sends a message with the given pattern and data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message pattern.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        TInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message data.\n\n\n                                            \n                                        \n                                        \n                                                opts\n                                            \n                                                            MsClientOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional configuration options for the client.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the result of the send message.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ClientProxy } from \"@nestjs/microservices\";\nimport { catchError, Observable, throwError, timeout } from \"rxjs\";\nimport { HttpException, HttpStatus, Inject, Logger } from \"@nestjs/common\";\nimport { ObjectUtils } from \"../../utils/object.utils\";\nimport { MessageBus, MsClientOptions } from \"./ms-client.types\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { MS_EXCEPTION_ID } from \"../../constants\";\nimport { MsException } from \"../../exceptions/ms.exception\";\nimport inspect = ObjectUtils.inspect;\n\n/**\n * Microservices client for dispatching messages between microservices.\n */\nexport class MsClient implements MessageBus {\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    private readonly proxy: ClientProxy,\n  ) {}\n\n  /**\n   * Dispatches a message with the given pattern and data.\n   * @param pattern - The message pattern.\n   * @param data - The message data.\n   * @param opts - Optional configuration options for the client.\n   * @returns A promise resolving to the result of the dispatched message.\n   */\n  dispatch(\n    pattern: any,\n    data: TInput = Object(),\n    opts?: MsClientOptions,\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      const source = this.proxy.send(pattern, data);\n      this.handleRequest(source, pattern, data, opts).subscribe({\n        next: (result) => resolve(result),\n        error: (error) => reject(error),\n      });\n    });\n  }\n\n  /**\n   * Sends a message with the given pattern and data.\n   * @param pattern - The message pattern.\n   * @param data - The message data.\n   * @param opts - Optional configuration options for the client.\n   * @returns An observable of the result of the send message.\n   */\n  send(\n    pattern: any,\n    data: TInput,\n    opts?: MsClientOptions,\n  ) {\n    const source = this.proxy.send(pattern, data);\n    return this.handleRequest(source, pattern, data, opts);\n  }\n\n  /**\n   * Emits a message with the given pattern and data.\n   * @param pattern - The message pattern.\n   * @param data - The message data.\n   * @param opts - Optional configuration options for the client.\n   * @returns An observable of the result of the emitted message.\n   */\n  emit(\n    pattern: any,\n    data: TInput,\n    opts?: MsClientOptions,\n  ) {\n    const source = this.proxy.emit(pattern, data);\n    return this.handleRequest(source, pattern, data, opts);\n  }\n\n  /**\n   * Handles the request by logging and managing errors and timeouts.\n   * @param source - The observable source.\n   * @param pattern - The message pattern.\n   * @param data - The message data.\n   * @param opts - Optional configuration options for the client.\n   * @returns An observable of the result.\n   */\n  private handleRequest(\n    source: Observable,\n    pattern: any,\n    data: any,\n    opts?: MsClientOptions,\n  ): Observable {\n    this.logger.debug(`Sending request with pattern: ${inspect(pattern)}`);\n    return source.pipe(\n      timeout(opts?.timeout || parseInt(process.env.TRANSPORT_TIMEOUT)),\n      catchError((error) => {\n        if (error?.type === MS_EXCEPTION_ID) {\n          const err = error as MsException;\n          this.logger.error(\n            `Microservice exception: ${err.message}`,\n            err.stack,\n          );\n          throw new HttpException(err.message, err.code);\n        }\n        if (error.name === \"TimeoutError\") {\n          this.logger.warn(`Request timeout for pattern: ${inspect(pattern)}`);\n          throw new HttpException(\n            \"Request Timeout\",\n            HttpStatus.REQUEST_TIMEOUT,\n          );\n        }\n        this.logger.error(\n          `Unknown error for pattern: ${inspect(pattern)}`,\n          error,\n        );\n        return throwError(error);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MsClientModule.html":{"url":"modules/MsClientModule.html","title":"module - MsClientModule","body":"\n                   \n\n\n\n\n    Modules\n    MsClientModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MsClientModule\n\n\n\ncluster_MsClientModule_imports\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nMsClientModule\n\nMsClientModule\n\nMsClientModule -->\n\nLogModule->MsClientModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/ms-client/ms-client.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides microservices client functionality for dispatching messages between microservices.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            LogModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Logger, Module } from \"@nestjs/common\";\nimport { ClientProxy, ClientsModule } from \"@nestjs/microservices\";\nimport { LogModule } from \"../log/log.module\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { MS_CLIENT, MSG_BUS } from \"./ms-client.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\nimport { MsClient } from \"./ms-client\";\n\n/**\n * A module that provides microservices client functionality for dispatching messages between microservices.\n */\n@Module({\n  imports: [\n    LogModule,\n    ClientsModule.registerAsync([\n      {\n        imports: [LogModule],\n        inject: [LOGGER],\n        name: MS_CLIENT,\n        useFactory: (logger: Logger) => {\n          EnvLoader.loadEnvironment(logger);\n          return {\n            transport: parseInt(process.env.TRANSPORT_TYPE),\n            options: {\n              host: process.env.TRANSPORT_HOST,\n              port: parseInt(process.env.TRANSPORT_PORT),\n              timeout: parseInt(process.env.TRANSPORT_TIMEOUT),\n            },\n          };\n        },\n      },\n    ]),\n  ],\n  providers: [\n    {\n      provide: MSG_BUS,\n      useFactory: (logger: Logger, client: ClientProxy) =>\n        new MsClient(logger, client),\n      inject: [LOGGER, MS_CLIENT],\n    },\n  ],\n  exports: [MSG_BUS],\n})\nexport class MsClientModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MsException.html":{"url":"classes/MsException.html","title":"class - MsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Base class for custom microservice exceptions, extending RpcException.\n\n            \n\n            \n                Extends\n            \n            \n                        RpcException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(code: number, message: string, stack?: any)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stack\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RpcException } from \"@nestjs/microservices\";\nimport { MS_EXCEPTION_ID } from \"../constants\";\n\n/**\n * Base class for custom microservice exceptions, extending RpcException.\n */\nexport class MsException extends RpcException {\n  constructor(\n    readonly code: number,\n    readonly message: string = undefined,\n    readonly stack?: any,\n  ) {\n    super({ type: MS_EXCEPTION_ID, message, code, stack });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotEmptyPipe.html":{"url":"injectables/NotEmptyPipe.html","title":"injectable - NotEmptyPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotEmptyPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/pipes/not-empty.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Pipe to ensure a value is not empty.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fieldName: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/pipes/not-empty.pipe.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fieldName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/pipes/not-empty.pipe.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, PipeTransform } from \"@nestjs/common\";\n\n/**\n * Pipe to ensure a value is not empty.\n */\n@Injectable()\nexport class NotEmptyPipe implements PipeTransform {\n  constructor(private readonly fieldName: string) {}\n\n  transform(value: any) {\n    if (!value || Object.keys(value).length === 0) {\n      throw new BadRequestException(`${this.fieldName} cannot be empty`);\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundMsException.html":{"url":"classes/NotFoundMsException.html","title":"class - NotFoundMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/not-found-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for not found requests, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/not-found-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for not found requests, extending MsException.\n */\nexport class NotFoundMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.NOT_FOUND, message || \"Not found\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageableData.html":{"url":"classes/PageableData.html","title":"class - PageableData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageableData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/pageable/pageable.types.ts\n        \n\n\n            \n                Description\n            \n            \n                A class that represents paginated data.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: T[], totalCount: number, currentPage: number, pageSize: number)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:56\n                            \n                        \n\n                \n                    \n                            Creates an instance of PageableData.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe items for the current page.\n\n\n                                                        \n                                                \n                                                \n                                                        totalCount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe total number of items available.\n\n\n                                                        \n                                                \n                                                \n                                                        currentPage\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe current page number.\n\n\n                                                        \n                                                \n                                                \n                                                        pageSize\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe number of items per page.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { Max, Min } from \"class-validator\";\n\n/**\n * A class that defines the parameters for pagination.\n */\nexport class PageableParams {\n  @Min(1)\n  @Max(1000)\n  @Type(() => Number)\n  /**\n   * The maximum number of items to return per page.\n   * @type {number}\n   * @default 20\n   */\n  limit = 20;\n\n  @Min(1)\n  @Type(() => Number)\n  /**\n   * The page number to return.\n   * @type {number}\n   * @default 1\n   */\n  page = 1;\n\n  @Type(() => String)\n  /**\n   * The field by which to sort the items.\n   * @type {string}\n   * @optional\n   */\n  sort?: string;\n\n  @Type(() => String)\n  /**\n   * The order in which to sort the items.\n   * @type {SortOrder}\n   * @optional\n   */\n  order?: SortOrder;\n\n  @Type(() => String)\n  /**\n   * The filter criteria to apply to the items.\n   * @type {string}\n   * @optional\n   */\n  filter?: string;\n}\n\n/**\n * A class that represents paginated data.\n * @template T - The type of items in the paginated data.\n */\nexport class PageableData {\n  /**\n   * Creates an instance of PageableData.\n   * @param {T[]} items - The items for the current page.\n   * @param {number} totalCount - The total number of items available.\n   * @param {number} currentPage - The current page number.\n   * @param {number} pageSize - The number of items per page.\n   */\n  constructor(\n    readonly items: T[],\n    readonly totalCount: number,\n    readonly currentPage: number,\n    readonly pageSize: number,\n  ) {}\n}\n\n/**\n * @enum SortOrder\n * Enumeration for the sort order.\n */\nexport enum SortOrder {\n  ASC = \"ASC\",\n  DESC = \"DESC\",\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageableParams.html":{"url":"classes/PageableParams.html","title":"class - PageableParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageableParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/pageable/pageable.types.ts\n        \n\n\n            \n                Description\n            \n            \n                A class that defines the parameters for pagination.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                filter\n                            \n                            \n                                    \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    Optional\n                                order\n                            \n                            \n                                    \n                                    \n                                page\n                            \n                            \n                                    \n                                    Optional\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(1)@Max(1000)@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SortOrder\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(1)@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/shared/modules/pageable/pageable.types.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { Max, Min } from \"class-validator\";\n\n/**\n * A class that defines the parameters for pagination.\n */\nexport class PageableParams {\n  @Min(1)\n  @Max(1000)\n  @Type(() => Number)\n  /**\n   * The maximum number of items to return per page.\n   * @type {number}\n   * @default 20\n   */\n  limit = 20;\n\n  @Min(1)\n  @Type(() => Number)\n  /**\n   * The page number to return.\n   * @type {number}\n   * @default 1\n   */\n  page = 1;\n\n  @Type(() => String)\n  /**\n   * The field by which to sort the items.\n   * @type {string}\n   * @optional\n   */\n  sort?: string;\n\n  @Type(() => String)\n  /**\n   * The order in which to sort the items.\n   * @type {SortOrder}\n   * @optional\n   */\n  order?: SortOrder;\n\n  @Type(() => String)\n  /**\n   * The filter criteria to apply to the items.\n   * @type {string}\n   * @optional\n   */\n  filter?: string;\n}\n\n/**\n * A class that represents paginated data.\n * @template T - The type of items in the paginated data.\n */\nexport class PageableData {\n  /**\n   * Creates an instance of PageableData.\n   * @param {T[]} items - The items for the current page.\n   * @param {number} totalCount - The total number of items available.\n   * @param {number} currentPage - The current page number.\n   * @param {number} pageSize - The number of items per page.\n   */\n  constructor(\n    readonly items: T[],\n    readonly totalCount: number,\n    readonly currentPage: number,\n    readonly pageSize: number,\n  ) {}\n}\n\n/**\n * @enum SortOrder\n * Enumeration for the sort order.\n */\nexport enum SortOrder {\n  ASC = \"ASC\",\n  DESC = \"DESC\",\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProcessController.html":{"url":"controllers/ProcessController.html","title":"controller - ProcessController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProcessController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                process\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                getLogs\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getStats\n                            \n                            \n                                    \n                                    \n                                    Async\n                                startProcess\n                            \n                            \n                                    \n                                    \n                                    Async\n                                stopProcess\n                            \n                            \n                                    \n                                    \n                                    Async\n                                toggleProcess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getLogs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLogs(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/log/:id')@ForRoles(Roles.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/process/process.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getStats\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStats(code: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/stats/:code')@ForRoles(Roles.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/process/process.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        startProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    startProcess(code: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/start/:code')@ForRoles(Roles.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/process/process.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        stopProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    stopProcess(code: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/stop/:code')@ForRoles(Roles.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/process/process.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        toggleProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleProcess(code: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/toggle/:code')@ForRoles(Roles.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/process/process.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Controller,\n  Get,\n  NotFoundException,\n  Param,\n  UseGuards,\n} from \"@nestjs/common\";\nimport { CommonUtils } from \"../../shared/utils/common.utils\";\nimport { AuthGuard } from \"../../shared/guards/auth.guard\";\nimport { ProcessManagerService } from \"./process-manager.service\";\nimport { ForRoles } from \"../../shared/decorators/for-roles.decorator\";\nimport { Roles } from \"../../shared/constants\";\nimport sleep = CommonUtils.sleep;\n\n@Controller(\"process\")\n@UseGuards(AuthGuard)\nexport class ProcessController {\n  constructor(private readonly pmService: ProcessManagerService) {}\n\n  @Get(\"/start/:code\")\n  @ForRoles(Roles.ADMIN)\n  async startProcess(@Param(\"code\") code: string) {\n    await this.pmService.startProcess(code);\n  }\n\n  @Get(\"/stop/:code\")\n  @ForRoles(Roles.ADMIN)\n  async stopProcess(@Param(\"code\") code: string) {\n    await this.pmService.stopProcess(code);\n  }\n\n  @Get(\"/toggle/:code\")\n  @ForRoles(Roles.ADMIN)\n  async toggleProcess(@Param(\"code\") code: string) {\n    await this.pmService.toggleProcess(code);\n  }\n\n  @Get(\"/stats/:code\")\n  @ForRoles(Roles.ADMIN)\n  async getStats(@Param(\"code\") code: string) {\n    const processData = await this.pmService.getProcessData(code, true);\n    if (!processData) {\n      throw new NotFoundException();\n    }\n    processData.logs = await this.pmService.getLastLogsByProcess(\n      processData.code,\n    );\n    return processData;\n  }\n\n  @Get(\"/log/:id\")\n  @ForRoles(Roles.ADMIN)\n  async getLogs(@Param(\"id\") id: number) {\n    const logData = await this.pmService.getProcessLogById(id);\n    if (!logData) {\n      throw new NotFoundException();\n    }\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessLog.html":{"url":"interfaces/ProcessLog.html","title":"interface - ProcessLog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a process log entry.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            process\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                                \n                                        \n                                            tsUpdated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        process\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        process:         ProcessUnit\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProcessUnit\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsUpdated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsUpdated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Process } from \"./process.constants\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\n/**\n * Interface representing a process log entry.\n */\nexport interface ProcessLog {\n  id: number;\n  content: string;\n  tsCreated: Date;\n  tsUpdated: Date;\n  process: ProcessUnit;\n}\n\n/**\n * Interface representing a process unit.\n */\nexport interface ProcessUnit {\n  code: string;\n  status: Process.Status;\n  enabled: boolean;\n  description: LocalizedString[];\n  cronTab: string;\n  logs: ProcessLog[];\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProcessLogEntity.html":{"url":"entities/ProcessLogEntity.html","title":"entity - ProcessLogEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProcessLogEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/entity/process.log.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores logs of system processes\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                process\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                            \n                                    \n                                    \n                                tsUpdated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        process\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessUnitEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@UpdateDateColumn({name: 'ts_updated', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.log.entity.ts:46\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from \"typeorm\";\nimport { ProcessUnitEntity } from \"./process.unit.entity\";\nimport { ProcessLog } from \"../process.types\";\n\n/**\n * The entity stores logs of system processes\n */\n@Entity(\"process_logs\")\nexport class ProcessLogEntity implements ProcessLog {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Column(\"text\", { nullable: true })\n  content: string;\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n\n  @Index()\n  @UpdateDateColumn({ name: \"ts_updated\", type: \"timestamp\" })\n  tsUpdated: Date;\n\n  @ManyToOne(() => ProcessUnitEntity, (t) => t.code)\n  process: ProcessUnitEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessManagerService.html":{"url":"injectables/ProcessManagerService.html","title":"injectable - ProcessManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProcessManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process-manager.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for managing processes.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                pmInitStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLogInstance\n                            \n                            \n                                getLastLogsByProcess\n                            \n                            \n                                getProcessData\n                            \n                            \n                                getProcessLogById\n                            \n                            \n                                    Async\n                                getProcessUnitStatus\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Private\n                                    Async\n                                resetAllProcessStatuses\n                            \n                            \n                                    Async\n                                setProcessUnitStatus\n                            \n                            \n                                    Async\n                                startProcess\n                            \n                            \n                                    Async\n                                stopProcess\n                            \n                            \n                                    Async\n                                toggleProcess\n                            \n                            \n                                updateLogInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lockExec: WarlockFn, logger: Logger, broker: MessagesBroker, processUnitRep: Repository, processLogRep: Repository)\n                    \n                \n                        \n                            \n                                Defined in lib/common/process/process-manager.service.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lockExec\n                                                  \n                                                        \n                                                                        WarlockFn\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        broker\n                                                  \n                                                        \n                                                                        MessagesBroker\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processUnitRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        processLogRep\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createLogInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLogInstance(processCode: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:151\n                        \n                    \n\n\n            \n                \n                        Creates a log instance for a process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The created ProcessLogEntity instance.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLastLogsByProcess\n                        \n                    \n                \n            \n            \n                \ngetLastLogsByProcess(processCode: string, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:197\n                        \n                    \n\n\n            \n                \n                        Gets the last logs of a process by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe code of the process.\n\n\n                                            \n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3\n                                            \n\n                                            \n                                                    \nThe maximum number of logs to retrieve (default is 3).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An array of ProcessLogEntity instances.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProcessData\n                        \n                    \n                \n            \n            \n                \ngetProcessData(code: string, force)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:174\n                        \n                    \n\n\n            \n                \n                        Gets process data by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe code of the process.\n\n\n                                            \n                                        \n                                        \n                                                force\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    \nWhether to force getting the process data regardless of its enabled status.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The ProcessUnitEntity instance.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProcessLogById\n                        \n                    \n                \n            \n            \n                \ngetProcessLogById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:184\n                        \n                    \n\n\n            \n                \n                        Gets a process log by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the process log.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The ProcessLogEntity instance.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProcessUnitStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProcessUnitStatus(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:141\n                        \n                    \n\n\n            \n                \n                        Gets the status of a process unit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process unit.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The current status of the process unit.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Initializes the process manager service, resets process statuses, and registers processes.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        resetAllProcessStatuses\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetAllProcessStatuses()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:208\n                        \n                    \n\n\n            \n                \n                        Resets the statuses of all enabled processes to \"Ready\".\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setProcessUnitStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    setProcessUnitStatus(code: string, status: Process.Status)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:130\n                        \n                    \n\n\n            \n                \n                        Sets the status of a process unit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process unit.\n\n\n                                            \n                                        \n                                        \n                                                status\n                                            \n                                                            Process.Status\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new status to set.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        startProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    startProcess(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:83\n                        \n                    \n\n\n            \n                \n                        Starts a process by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process to start.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stopProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    stopProcess(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:97\n                        \n                    \n\n\n            \n                \n                        Stops a process by its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process to stop.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        toggleProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleProcess(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:111\n                        \n                    \n\n\n            \n                \n                        Toggles the enabled status of a process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the process to toggle.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateLogInstance\n                        \n                    \n                \n            \n            \n                \nupdateLogInstance(logInstance: ProcessLogEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-manager.service.ts:164\n                        \n                    \n\n\n            \n                \n                        Updates a log instance.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                logInstance\n                                            \n                                                            ProcessLogEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ProcessLogEntity instance to update.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The updated ProcessLogEntity instance.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        pmInitStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in lib/common/process/process-manager.service.ts:42\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n  Logger,\n} from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { ProcessUnitEntity } from \"./entity/process.unit.entity\";\nimport { Process } from \"./process.constants\";\nimport { ProcessLogEntity } from \"./entity/process.log.entity\";\nimport { WARLOCK } from \"../../shared/modules/warlock/warlock.constants\";\nimport { WarlockFn } from \"../../shared/modules/warlock/warlock.types\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { MESSAGES_BROKER } from \"../../shared/modules/messages-broker/messages-broker.constants\";\nimport { MessagesBroker } from \"../../shared/modules/messages-broker/messages-broker.types\";\nimport Status = Process.Status;\nimport Command = Process.Command;\nimport hasProcessInstance = Process.hasProcessInstance;\n\n/**\n * Service for managing processes.\n */\n@Injectable()\nexport class ProcessManagerService {\n  private static pmInitStatus: boolean;\n\n  constructor(\n    @Inject(WARLOCK) private readonly lockExec: WarlockFn,\n    @Inject(LOGGER) private readonly logger: Logger,\n    @Inject(MESSAGES_BROKER) private readonly broker: MessagesBroker,\n    @InjectRepository(ProcessUnitEntity)\n    private readonly processUnitRep: Repository,\n    @InjectRepository(ProcessLogEntity)\n    private readonly processLogRep: Repository,\n  ) {}\n\n  /**\n   * Initializes the process manager service, resets process statuses, and registers processes.\n   */\n  async init() {\n    if (ProcessManagerService.pmInitStatus) {\n      this.logger.warn(\"Autostart processes has been executed\");\n      return;\n    }\n    await this.resetAllProcessStatuses();\n    this.logger.log(\"Init process manager\");\n    ProcessManagerService.pmInitStatus = true;\n    const processList = await this.processUnitRep.find({\n      where: { enabled: true },\n    });\n    for (const processData of processList) {\n      if (!processData.cronTab?.length) {\n        this.logger.warn(\n          `Process ${processData.code} hasn't cron-tab, skip job registration`,\n        );\n        continue;\n      }\n      this.broker.emit(Command.Register, processData);\n    }\n  }\n\n  /**\n   * Starts a process by its code.\n   * @param code - The code of the process to start.\n   */\n  async startProcess(code: string) {\n    const processData = await this.getProcessData(code, true);\n    if (!processData) {\n      throw new InternalServerErrorException(\n        `Process ${code} hasn't options-data`,\n      );\n    }\n    this.broker.emit(Command.Start, processData);\n  }\n\n  /**\n   * Stops a process by its code.\n   * @param code - The code of the process to stop.\n   */\n  async stopProcess(code: string) {\n    const processData = await this.getProcessData(code, true);\n    if (!processData) {\n      throw new InternalServerErrorException(\n        `Process ${code} hasn't options-data`,\n      );\n    }\n    this.broker.emit(Command.Stop, processData);\n  }\n\n  /**\n   * Toggles the enabled status of a process.\n   * @param code - The code of the process to toggle.\n   */\n  async toggleProcess(code: string) {\n    if (!hasProcessInstance(code)) {\n      throw new InternalServerErrorException(`Process ${code} not exists`);\n    }\n    const processData = await this.processUnitRep.findOne({ where: { code } });\n    processData.enabled = !processData.enabled;\n    await this.processUnitRep.save(processData);\n    if (processData.enabled) {\n      this.broker.emit(Command.Register, processData);\n    } else {\n      this.broker.emit(Command.Unregister, processData);\n    }\n  }\n\n  /**\n   * Sets the status of a process unit.\n   * @param code - The code of the process unit.\n   * @param status - The new status to set.\n   */\n  async setProcessUnitStatus(code: string, status: Process.Status) {\n    const processData = await this.getProcessData(code, true);\n    processData.status = status;\n    return this.processUnitRep.save(processData);\n  }\n\n  /**\n   * Gets the status of a process unit.\n   * @param code - The code of the process unit.\n   * @returns The current status of the process unit.\n   */\n  async getProcessUnitStatus(code: string) {\n    const processData = await this.getProcessData(code, true);\n    return processData.status;\n  }\n\n  /**\n   * Creates a log instance for a process.\n   * @param processCode - The code of the process.\n   * @returns The created ProcessLogEntity instance.\n   */\n  async createLogInstance(processCode: string) {\n    const process = await this.getProcessData(processCode);\n    return this.processLogRep.save({\n      process,\n      content: \"\",\n    } as ProcessLogEntity);\n  }\n\n  /**\n   * Updates a log instance.\n   * @param logInstance - The ProcessLogEntity instance to update.\n   * @returns The updated ProcessLogEntity instance.\n   */\n  updateLogInstance(logInstance: ProcessLogEntity) {\n    return this.processLogRep.save(logInstance);\n  }\n\n  /**\n   * Gets process data by its code.\n   * @param code - The code of the process.\n   * @param force - Whether to force getting the process data regardless of its enabled status.\n   * @returns The ProcessUnitEntity instance.\n   */\n  getProcessData(code: string, force = false) {\n    const params = { code, enabled: true };\n    return this.processUnitRep.findOne({ where: force ? { code } : params });\n  }\n\n  /**\n   * Gets a process log by its ID.\n   * @param id - The ID of the process log.\n   * @returns The ProcessLogEntity instance.\n   */\n  getProcessLogById(id: number) {\n    return this.processLogRep.findOne({\n      where: { id },\n      relations: [\"process\"],\n    });\n  }\n\n  /**\n   * Gets the last logs of a process by its code.\n   * @param processCode - The code of the process.\n   * @param limit - The maximum number of logs to retrieve (default is 3).\n   * @returns An array of ProcessLogEntity instances.\n   */\n  getLastLogsByProcess(processCode: string, limit = 3) {\n    return this.processLogRep.find({\n      where: { process: { code: processCode } },\n      take: limit,\n      order: { tsUpdated: \"DESC\" },\n    });\n  }\n\n  /**\n   * Resets the statuses of all enabled processes to \"Ready\".\n   */\n  private async resetAllProcessStatuses() {\n    const entities = await this.processUnitRep.find({\n      where: { enabled: true },\n    });\n    for (const processData of entities) {\n      await this.setProcessUnitStatus(processData.code, Status.Ready);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProcessModule.html":{"url":"modules/ProcessModule.html","title":"module - ProcessModule","body":"\n                   \n\n\n\n\n    Modules\n    ProcessModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProcessModule\n\n\n\ncluster_ProcessModule_exports\n\n\n\ncluster_ProcessModule_providers\n\n\n\ncluster_ProcessModule_imports\n\n\n\n\nCacheModule\n\nCacheModule\n\n\n\nProcessModule\n\nProcessModule\n\nProcessModule -->\n\nCacheModule->ProcessModule\n\n\n\n\n\nLogModule\n\nLogModule\n\nProcessModule -->\n\nLogModule->ProcessModule\n\n\n\n\n\nMessagesBrokerModule\n\nMessagesBrokerModule\n\nProcessModule -->\n\nMessagesBrokerModule->ProcessModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nProcessModule -->\n\nUserModule->ProcessModule\n\n\n\n\n\nWarlockModule\n\nWarlockModule\n\nProcessModule -->\n\nWarlockModule->ProcessModule\n\n\n\n\n\nProcessManagerService \n\nProcessManagerService \n\nProcessManagerService  -->\n\nProcessModule->ProcessManagerService \n\n\n\n\n\nProcessManagerService\n\nProcessManagerService\n\nProcessModule -->\n\nProcessManagerService->ProcessModule\n\n\n\n\n\nProcessRegisterService\n\nProcessRegisterService\n\nProcessModule -->\n\nProcessRegisterService->ProcessModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/process/process.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module is responsible for initializing and managing processes in the application.\nIt uses the NestJS lifecycle hook onApplicationBootstrap to initialize processes on startup.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProcessManagerService\n                        \n                        \n                            ProcessRegisterService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProcessController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CacheModule\n                        \n                        \n                            LogModule\n                        \n                        \n                            MessagesBrokerModule\n                        \n                        \n                            UserModule\n                        \n                        \n                            WarlockModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProcessManagerService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onApplicationBootstrap\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationBootstrap()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process.module.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Global, Module, OnApplicationBootstrap } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { ProcessUnitEntity } from \"./entity/process.unit.entity\";\nimport { ProcessManagerService } from \"./process-manager.service\";\nimport { ScheduleModule } from \"@nestjs/schedule\";\nimport { ProcessRegisterService } from \"./process-register.service\";\nimport { ProcessLogEntity } from \"./entity/process.log.entity\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { MessagesBrokerModule } from \"../../shared/modules/messages-broker/messages-broker.module\";\nimport { WarlockModule } from \"../../shared/modules/warlock/warlock.module\";\nimport { ProcessController } from \"./process.controller\";\nimport { UserModule } from \"../user/user.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\n\n/**\n * Module is responsible for initializing and managing processes in the application.\n * It uses the NestJS lifecycle hook `onApplicationBootstrap` to initialize processes on startup.\n */\n@Global()\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([ProcessUnitEntity, ProcessLogEntity]),\n    ScheduleModule.forRoot(),\n    LogModule,\n    MessagesBrokerModule,\n    WarlockModule,\n    UserModule.forRoot(),\n    CacheModule,\n  ],\n  controllers: [ProcessController],\n  providers: [ProcessManagerService, ProcessRegisterService],\n  exports: [ProcessManagerService],\n})\nexport class ProcessModule implements OnApplicationBootstrap {\n  constructor(private readonly pmService: ProcessManagerService) {}\n\n  async onApplicationBootstrap() {\n    await this.pmService.init();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProcessRegisterService.html":{"url":"injectables/ProcessRegisterService.html","title":"injectable - ProcessRegisterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProcessRegisterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process-register.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for registering and managing cron jobs for processes.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                registerCronJob\n                            \n                            \n                                    Private\n                                startProcess\n                            \n                            \n                                    Private\n                                stopProcess\n                            \n                            \n                                    Private\n                                    Async\n                                unregisterCronJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, lockExec: WarlockFn, broker: MessagesBrokerService, pmService: ProcessManagerService, schedulerRegistry: SchedulerRegistry)\n                    \n                \n                        \n                            \n                                Defined in lib/common/process/process-register.service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockExec\n                                                  \n                                                        \n                                                                        WarlockFn\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        broker\n                                                  \n                                                        \n                                                                        MessagesBrokerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pmService\n                                                  \n                                                        \n                                                                        ProcessManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schedulerRegistry\n                                                  \n                                                        \n                                                                    SchedulerRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        registerCronJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerCronJob(processData: ProcessUnit)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-register.service.ts:91\n                        \n                    \n\n\n            \n                \n                        Registers a cron job for a process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processData\n                                            \n                                                            ProcessUnit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the process to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                True if the cron job was registered, otherwise false.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        startProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    startProcess(processData: ProcessUnit)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-register.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Starts a registered process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processData\n                                            \n                                                            ProcessUnit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the process to start.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stopProcess\n                        \n                    \n                \n            \n            \n                \n                        \n                    stopProcess(processData: ProcessUnit)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-register.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Stops a registered process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processData\n                                            \n                                                            ProcessUnit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the process to stop.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        unregisterCronJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    unregisterCronJob(processData: ProcessUnit)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/process-register.service.ts:126\n                        \n                    \n\n\n            \n                \n                        Unregisters a cron job for a process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                processData\n                                            \n                                                            ProcessUnit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data of the process to unregister.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                True if the cron job was unregistered, otherwise false.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { SchedulerRegistry } from \"@nestjs/schedule\";\nimport { CronJob } from \"cron/dist/job\";\nimport { ProcessManagerService } from \"./process-manager.service\";\nimport { Process } from \"./process.constants\";\nimport { ProcessUnit } from \"./process.types\";\nimport { LOGGER } from \"../../shared/modules/log/log.constants\";\nimport { WARLOCK } from \"../../shared/modules/warlock/warlock.constants\";\nimport { WarlockFn } from \"../../shared/modules/warlock/warlock.types\";\nimport { MESSAGES_BROKER } from \"../../shared/modules/messages-broker/messages-broker.constants\";\nimport { MessagesBrokerService } from \"../../shared/modules/messages-broker/messages-broker.service\";\nimport getProcessInstance = Process.getProcessInstance;\nimport Command = Process.Command;\nimport Status = Process.Status;\n\n/**\n * Service for registering and managing cron jobs for processes.\n */\n@Injectable()\nexport class ProcessRegisterService {\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    @Inject(WARLOCK) private readonly lockExec: WarlockFn,\n    @Inject(MESSAGES_BROKER) private readonly broker: MessagesBrokerService,\n    private readonly pmService: ProcessManagerService,\n    private readonly schedulerRegistry: SchedulerRegistry,\n  ) {\n    broker.subscribe(Command.Register, (data) =>\n      this.registerCronJob(data),\n    );\n    broker.subscribe(Command.Unregister, (data) =>\n      this.unregisterCronJob(data),\n    );\n    broker.subscribe(Command.Start, (data) =>\n      this.startProcess(data),\n    );\n    broker.subscribe(Command.Stop, (data) =>\n      this.stopProcess(data),\n    );\n  }\n\n  /**\n   * Starts a registered process.\n   * @param processData - The data of the process to start.\n   */\n  private startProcess(processData: ProcessUnit) {\n    const processInstance = getProcessInstance(processData.code);\n    if (!processInstance) {\n      this.logger.error(`Process ${processData.code} not registered`);\n      return;\n    }\n    this.lockExec(`${processData.code}_start`, async () =>\n      processInstance.start(),\n    );\n  }\n\n  /**\n   * Stops a registered process.\n   * @param processData - The data of the process to stop.\n   */\n  private stopProcess(processData: ProcessUnit) {\n    const processInstance = getProcessInstance(processData.code);\n    if (!processInstance) {\n      this.logger.error(`Process ${processData.code} not registered`);\n      return;\n    }\n    processInstance.stop();\n  }\n\n  /**\n   * Registers a cron job for a process.\n   * @param processData - The data of the process to register.\n   * @returns True if the cron job was registered, otherwise false.\n   */\n  private async registerCronJob(processData: ProcessUnit) {\n    if (this.schedulerRegistry.doesExist(\"cron\", processData.code)) {\n      this.logger.warn(\n        `Can't register cron job with code ${processData.code}, that already exists`,\n      );\n      return false;\n    }\n    await this.pmService.setProcessUnitStatus(processData.code, Status.Ready);\n    const processInstance = getProcessInstance(processData.code);\n    if (!processInstance) {\n      this.logger.error(`Process ${processData.code} not registered`);\n      return;\n    }\n    if (!processData.cronTab?.length) {\n      this.logger.warn(\n        `Process ${processData.code} hasn't cron-tab, skip job registration`,\n      );\n      return false;\n    }\n    const job = new CronJob(processData.cronTab, () => {\n      this.lockExec(\n        processData.code,\n        async () => await processInstance.start(),\n      );\n    });\n    job.start();\n    this.schedulerRegistry.addCronJob(processData.code, job);\n    return true;\n  }\n\n  /**\n   * Unregisters a cron job for a process.\n   * @param processData - The data of the process to unregister.\n   * @returns True if the cron job was unregistered, otherwise false.\n   */\n  private async unregisterCronJob(processData: ProcessUnit) {\n    if (!this.schedulerRegistry.doesExist(\"cron\", processData.code)) {\n      this.logger.warn(\n        `Can't unregister cron job with code ${processData.code}`,\n      );\n      return false;\n    }\n    const job = this.schedulerRegistry.getCronJob(processData.code);\n    job.stop();\n    this.schedulerRegistry.deleteCronJob(processData.code);\n    this.pmService.stopProcess(processData.code);\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessUnit.html":{"url":"interfaces/ProcessUnit.html","title":"interface - ProcessUnit","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessUnit\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/process.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a process unit.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            cronTab\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            enabled\n                                        \n                                \n                                \n                                        \n                                            logs\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cronTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cronTab:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logs:         ProcessLog[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProcessLog[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         Process.Status\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Process.Status\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Process } from \"./process.constants\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\n/**\n * Interface representing a process log entry.\n */\nexport interface ProcessLog {\n  id: number;\n  content: string;\n  tsCreated: Date;\n  tsUpdated: Date;\n  process: ProcessUnit;\n}\n\n/**\n * Interface representing a process unit.\n */\nexport interface ProcessUnit {\n  code: string;\n  status: Process.Status;\n  enabled: boolean;\n  description: LocalizedString[];\n  cronTab: string;\n  logs: ProcessLog[];\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProcessUnitEntity.html":{"url":"entities/ProcessUnitEntity.html","title":"entity - ProcessUnitEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProcessUnitEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/entity/process.unit.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores system processes, their configuration and state\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                cronTab\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                enabled\n                            \n                            \n                                    \n                                logs\n                            \n                            \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        cronTab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'cron_tab', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        enabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessLogEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, c => c.process, {cascade: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Process.Status\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({type: 'enum', enum: undefined, default: undefined, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/process/entity/process.unit.entity.ts:70\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  OneToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { Process } from \"../process.constants\";\nimport { ProcessUnit } from \"../process.types\";\nimport { ProcessLogEntity } from \"./process.log.entity\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\n\n/**\n * The entity stores system processes, their configuration and state\n */\n@Entity(\"process_units\")\nexport class ProcessUnitEntity implements ProcessUnit {\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @Index()\n  @Column({\n    type: \"enum\",\n    enum: [\n      Process.Status.Ready,\n      Process.Status.Execute,\n      Process.Status.Crashed,\n    ],\n    default: null,\n    nullable: true,\n  })\n  status: Process.Status;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  enabled: boolean;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  description: LocalizedStringEntity[];\n\n  @Index()\n  @Column(\"varchar\", { name: \"cron_tab\", nullable: true })\n  cronTab: string;\n\n  @OneToMany(() => ProcessLogEntity, (c) => c.process, { cascade: true })\n  logs: ProcessLogEntity[];\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /profile\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createUserProfile\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getUserProfile\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                removeUserProfile\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateUserProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        createUserProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUserProfile(profile: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseDto(UserDto)@Post('/')@ForRoles(Roles.ADMIN, Roles.MANAGER)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/user/profile.controller.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                profile\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getUserProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserProfile(id: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseDto(UserDto)@Get('/:id?')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/user/profile.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        removeUserProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeUserProfile(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseDto(UserDto)@Delete('/:id')@ForRoles(Roles.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/user/profile.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updateUserProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserProfile(id: string, profile: User, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseDto(UserDto)@Patch('/:id?')\n                \n            \n\n                    \n                        \n                            Defined in lib/common/user/profile.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                profile\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Body,\n  Controller,\n  Delete,\n  ForbiddenException,\n  Get,\n  NotFoundException,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from \"@nestjs/common\";\nimport { UserUtils } from \"../../shared/utils/user.utils\";\nimport { AuthGuard } from \"../../shared/guards/auth.guard\";\nimport { RolesGuard } from \"../../shared/guards/roles.guard\";\nimport { BasicUserController, User, UserDto, UserService } from \"./user.types\";\nimport { ResponseDto } from \"../../shared/decorators/response-dto.decorator\";\nimport { CurrentUser } from \"../../shared/decorators/current-user.decorator\";\nimport { UserEntity } from \"./entity/user.entity\";\nimport { Roles } from \"../../shared/constants\";\nimport { ForRoles } from \"../../shared/decorators/for-roles.decorator\";\nimport hasSomeRole = UserUtils.hasSomeRole;\n\n@Controller(\"/profile\")\n@UseGuards(AuthGuard, RolesGuard)\nexport class ProfileController implements BasicUserController {\n  constructor(private readonly userService: UserService) {}\n\n  @ResponseDto(UserDto)\n  @Get(\"/:id?\")\n  async getUserProfile(\n    @Param(\"id\") id: string,\n    @CurrentUser() user: User,\n  ): Promise {\n    if (!id) {\n      return user;\n    }\n    if (!hasSomeRole(user.roles, Roles.ADMIN, Roles.MANAGER)) {\n      throw new ForbiddenException();\n    }\n    const data = await this.userService.findById(id);\n    if (!data) {\n      throw new NotFoundException();\n    }\n    return data;\n  }\n\n  @ResponseDto(UserDto)\n  @Patch(\"/:id?\")\n  async updateUserProfile(\n    @Param(\"id\") id: string,\n    @Body() profile: User,\n    @CurrentUser() user: User,\n  ): Promise {\n    if (id && !hasSomeRole(user.roles, Roles.ADMIN)) {\n      throw new ForbiddenException();\n    }\n    return await this.userService.updateById(id ?? user.id, profile);\n  }\n\n  @ResponseDto(UserDto)\n  @Delete(\"/:id\")\n  @ForRoles(Roles.ADMIN)\n  async removeUserProfile(@Param(\"id\") id: string): Promise {\n    return await this.userService.removeById(id);\n  }\n\n  @ResponseDto(UserDto)\n  @Post(\"/\")\n  @ForRoles(Roles.ADMIN, Roles.MANAGER)\n  async createUserProfile(@Body() profile: User): Promise {\n    return await this.userService.create(profile);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RedisCacheService.html":{"url":"injectables/RedisCacheService.html","title":"injectable - RedisCacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RedisCacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/modules/cache/redis-cache.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A service class that provides cache storage functionality implementing the CacheService interface.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                del\n                            \n                            \n                                    Async\n                                expire\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getBoolean\n                            \n                            \n                                getFromPattern\n                            \n                            \n                                    Async\n                                getNumber\n                            \n                            \n                                    Async\n                                incr\n                            \n                            \n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, client: Redis)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/modules/cache/redis-cache.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        del\n                        \n                    \n                \n            \n            \n                \n                        \n                    del(...keys: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:102\n                        \n                    \n\n\n            \n                \n                        Deletes the specified keys from the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe keys to delete from the cache.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to true if the operation is successful, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        expire\n                        \n                    \n                \n            \n            \n                \n                        \n                    expire(key: string, expiresIn: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:139\n                        \n                    \n\n\n            \n                \n                        Sets the expiration time for the given key in the Redis cache.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to set the expiration time for.\n\n\n                                            \n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe expiration time in seconds.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                True if the operation succeeded, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Retrieves the value of the specified key from the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to retrieve from the cache.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to the value of the key or null if an error occurs.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getBoolean\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBoolean(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:54\n                        \n                    \n\n\n            \n                \n                        Retrieves the boolean value of the specified key from the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to retrieve from the cache.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A Promise that resolves to the boolean value of the key.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFromPattern\n                        \n                    \n                \n            \n            \n                \ngetFromPattern(pattern: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:157\n                        \n                    \n\n\n            \n                \n                        Retrieves keys that match a given pattern from the Redis cache.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                pattern\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe pattern to match keys against.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                An array of matching keys.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNumber(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Retrieves the numeric value of the specified key from the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to retrieve from the cache.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A Promise that resolves to the numeric value of the key.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        incr\n                        \n                    \n                \n            \n            \n                \n                        \n                    incr(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:121\n                        \n                    \n\n\n            \n                \n                        Increments the value of the specified key in the cache storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to increment.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to the new value of the key or null if an error occurs.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: string | number, expiresIn?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis-cache.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Sets the value of the specified key in the cache storage with an optional expiration time.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to set in the cache.\n\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe value to set for the key.\n\n\n                                            \n                                        \n                                        \n                                                expiresIn\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional expiration time in seconds.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves to true if the operation is successful, false otherwise.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport Redis from \"ioredis\";\nimport { CacheService } from \"./cache.types\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { REDIS_CLIENT } from \"./cache.constants\";\n\n/**\n * A service class that provides cache storage functionality implementing the CacheService interface.\n */\n@Injectable()\nexport class RedisCacheService implements CacheService {\n  constructor(\n    @Inject(LOGGER) private readonly logger: Logger,\n    @Inject(REDIS_CLIENT) private readonly client: Redis,\n  ) {}\n\n  /**\n   * Retrieves the value of the specified key from the cache storage.\n   *\n   * @param key - The key to retrieve from the cache.\n   * @returns A Promise that resolves to the value of the key or null if an error occurs.\n   */\n  async get(key: string): Promise {\n    try {\n      return await this.client.get(key);\n    } catch (error) {\n      this.logger.error(`Error while getting key \"${key}\" from Redis:`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Retrieves the boolean value of the specified key from the cache storage.\n   *\n   * @param key - The key to retrieve from the cache.\n   * @returns A Promise that resolves to the boolean value of the key.\n   */\n  async getBoolean(key: string) {\n    const val = await this.get(key);\n    return val === \"true\";\n  }\n\n  /**\n   * Retrieves the numeric value of the specified key from the cache storage.\n   *\n   * @param key - The key to retrieve from the cache.\n   * @returns A Promise that resolves to the numeric value of the key.\n   */\n  async getNumber(key: string) {\n    const val = await this.get(key);\n    return +val;\n  }\n\n  /**\n   * Sets the value of the specified key in the cache storage with an optional expiration time.\n   *\n   * @param key - The key to set in the cache.\n   * @param value - The value to set for the key.\n   * @param expiresIn - Optional expiration time in seconds.\n   * @returns A Promise that resolves to true if the operation is successful, false otherwise.\n   */\n  async set(\n    key: string,\n    value: string | number,\n    expiresIn?: number,\n  ): Promise {\n    try {\n      if (expiresIn) {\n        await this.client.set(key, value, \"EX\", expiresIn);\n      } else {\n        await this.client.set(key, value);\n      }\n      return true;\n    } catch (error) {\n      this.logger.error(`Error while setting key \"${key}\" in Redis:`, error);\n      return false;\n    }\n  }\n\n  /**\n   * Deletes the specified keys from the cache storage.\n   *\n   * @param keys - The keys to delete from the cache.\n   * @returns A Promise that resolves to true if the operation is successful, false otherwise.\n   */\n  async del(...keys: string[]): Promise {\n    try {\n      await this.client.del(...keys);\n      return true;\n    } catch (error) {\n      this.logger.error(\n        `Error while deleting keys \"${keys.join(\", \")}\" from Redis:`,\n        error,\n      );\n      return false;\n    }\n  }\n\n  /**\n   * Increments the value of the specified key in the cache storage.\n   *\n   * @param key - The key to increment.\n   * @returns A Promise that resolves to the new value of the key or null if an error occurs.\n   */\n  async incr(key: string): Promise {\n    try {\n      return await this.client.incr(key);\n    } catch (error) {\n      this.logger.error(\n        `Error while incrementing key \"${key}\" in Redis:`,\n        error,\n      );\n      return null;\n    }\n  }\n\n  /**\n   * Sets the expiration time for the given key in the Redis cache.\n   * @param key - The key to set the expiration time for.\n   * @param expiresIn - The expiration time in seconds.\n   * @returns True if the operation succeeded, false otherwise.\n   */\n  async expire(key: string, expiresIn: number): Promise {\n    try {\n      await this.client.expire(key, expiresIn);\n      return true;\n    } catch (error) {\n      this.logger.error(\n        `Error while setting expiration for key \"${key}\" in Redis:`,\n        error,\n      );\n      return false;\n    }\n  }\n\n  /**\n   * Retrieves keys that match a given pattern from the Redis cache.\n   * @param pattern - The pattern to match keys against.\n   * @returns An array of matching keys.\n   */\n  getFromPattern(pattern: string): Promise {\n    return new Promise((resolve, reject) => {\n      const keys: string[] = [];\n      const stream = this.client.scanStream({ match: pattern });\n      stream.on(\"data\", (chunk: string[]) => {\n        keys.push(...chunk);\n      });\n      stream.on(\"end\", () => {\n        resolve(keys);\n      });\n      stream.on(\"error\", (err: Error) => {\n        this.logger.error(err);\n        reject(err);\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RedisModule.html":{"url":"modules/RedisModule.html","title":"module - RedisModule","body":"\n                   \n\n\n\n\n    Modules\n    RedisModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/cache/redis.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides Redis client configuration and setup.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRootAsync\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRootAsync(options: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/modules/cache/redis.module.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Logger, Module } from \"@nestjs/common\";\nimport { Redis } from \"ioredis\";\nimport { REDIS_CLIENT } from \"./cache.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\n\n/**\n * A module that provides Redis client configuration and setup.\n */\n@Module({})\nexport class RedisModule {\n  private static redisInstance: Redis | null = null;\n\n  static forRootAsync(options: {\n    inject?: any[];\n    imports?: any[];\n    useFactory: (...args) => {\n      config: {\n        host: string;\n        port: number;\n        db: number;\n        username: string;\n        password: string;\n      };\n    };\n  }): DynamicModule {\n    const { inject, imports, useFactory } = options;\n    return {\n      module: RedisModule,\n      imports: [...(imports || [])],\n      providers: [\n        {\n          provide: REDIS_CLIENT,\n          useFactory: async (...args: any[]) => {\n            if (!RedisModule.redisInstance) {\n              const logger = args.find((arg) => arg instanceof Logger);\n              EnvLoader.loadEnvironment(logger);\n              const redisOptions = useFactory(...args).config;\n              RedisModule.redisInstance = new Redis(redisOptions);\n            }\n            return RedisModule.redisInstance;\n          },\n          inject,\n        },\n      ],\n      exports: [REDIS_CLIENT],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Roles.html":{"url":"classes/Roles.html","title":"class - Roles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Roles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/constants.ts\n        \n\n\n            \n                Description\n            \n            \n                A class containing static constants representing different user roles.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                ADMIN\n                            \n                            \n                                    Static\n                                    Readonly\n                                MANAGER\n                            \n                            \n                                    Static\n                                    Readonly\n                                ROOT\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ADMIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"admin\"\n                    \n                \n                    \n                        \n                                Defined in lib/shared/constants.ts:30\n                        \n                    \n\n            \n                \n                    Represents the admin role with administrative access.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MANAGER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"manager\"\n                    \n                \n                    \n                        \n                                Defined in lib/shared/constants.ts:35\n                        \n                    \n\n            \n                \n                    Represents the manager role.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        ROOT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"root\"\n                    \n                \n                    \n                        \n                                Defined in lib/shared/constants.ts:25\n                        \n                    \n\n            \n                \n                    Represents the root role with the highest level of access.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Roles {\n  /**\n   * @constant ROOT\n   * Represents the root role with the highest level of access.\n   */\n  static readonly ROOT = \"root\";\n  /**\n   * @constant ADMIN\n   * Represents the admin role with administrative access.\n   */\n  static readonly ADMIN = \"admin\";\n  /**\n   * @constant MANAGER\n   * Represents the manager role.\n   */\n  static readonly MANAGER = \"manager\";\n}\n\n/**\n * An object containing properties used for request handling.\n */\nexport const REQUEST_PROPS = {\n  /**\n   * @property accessToken\n   * The property name for storing the access token in the request.\n   */\n  accessToken: \"accessToken\",\n\n  /**\n   * @property currentUser\n   * The property name for storing the current user in the request.\n   */\n  currentUser: \"currentUser\",\n};\n\n/**\n * A constant representing the exception identifier for microservices.\n */\nexport const MS_EXCEPTION_ID = \"MsException\";\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                lib/shared/guards/roles.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    A guard for role-based access control.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/guards/roles.guard.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/shared/guards/roles.guard.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\nimport { UserUtils } from \"../utils/user.utils\";\nimport { AllowedForMetadataKey } from \"../decorators/for-roles.decorator\";\nimport { UserRole } from \"../../common/user/user.types\";\nimport { REQUEST_PROPS, Roles } from \"../constants\";\nimport hasSomeRole = UserUtils.hasSomeRole;\n\n/**\n * A guard for role-based access control.\n */\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private readonly reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const roles = this.reflector.get(\n      AllowedForMetadataKey,\n      context.getHandler(),\n    );\n    if (!roles) {\n      return true;\n    }\n    const req = context.switchToHttp().getRequest();\n    const userRoles: UserRole[] = req[REQUEST_PROPS.currentUser]?.roles || [];\n    if (hasSomeRole(userRoles, Roles.ROOT)) {\n      return true;\n    }\n    for (const role of userRoles) {\n      if (roles.indexOf(role.code) !== -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TargetData.html":{"url":"interfaces/TargetData.html","title":"interface - TargetData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TargetData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/explorer.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the data of an explorer target.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entity\n                                        \n                                \n                                \n                                        \n                                            namedColumn\n                                        \n                                \n                                \n                                        \n                                            primaryColumn\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entity:         ExplorerTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namedColumn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namedColumn:         ExplorerColumn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumn\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryColumn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        primaryColumn:         ExplorerColumn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExplorerColumn\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ObjectLiteral } from \"typeorm\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { Media } from \"../media/media.types\";\nimport { UserRoleEntity } from \"../user/entity/user-role.entity\";\nimport { Explorer } from \"./explorer.constants\";\nimport { User } from \"../user/user.types\";\nimport {\n  PageableData,\n  PageableParams,\n} from \"../../shared/modules/pageable/pageable.types\";\n\n/**\n * Type representing embedded data types for a column.\n */\nexport type ColumnDataType =\n  | \"string\"\n  | \"number\"\n  | \"boolean\"\n  | \"date\"\n  | \"reference\"\n  | \"unknown\";\n\nexport interface BasicExplorerController {\n  getTargetList(): Promise;\n\n  saveTarget(target: ExplorerTarget): Promise;\n\n  getTarget(\n    target: string,\n    type: \"section\" | \"object\",\n    user: User,\n  ): Promise;\n\n  getEntity(target: string, id: string, user: User): Promise;\n\n  getEntityList(\n    target: string,\n    params: PageableParams,\n    user: User,\n  ): Promise>;\n\n  saveEntity(target: string, body: T, user: User): Promise;\n\n  removeEntity(target: string, id: string, user: User): Promise;\n}\n\n/**\n * Interface representing an explorer target entity.\n */\nexport interface ExplorerTarget {\n  target: string;\n  tableName: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  icon: Media;\n  columns: ExplorerColumn[];\n  actions: ExplorerAction[];\n  defaultActionCreate: boolean;\n  defaultActionSave: boolean;\n  defaultActionDelete: boolean;\n  defaultActionDuplicate: boolean;\n  canRead: UserRoleEntity[];\n  canWrite: UserRoleEntity[];\n  size?: number;\n}\n\n/**\n * Interface representing a column in an explorer target entity.\n */\nexport interface ExplorerColumn {\n  id: string;\n  property: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  target: ExplorerTarget;\n  primary: boolean;\n  unique: boolean;\n  type: ColumnDataType | string;\n  virtual: boolean;\n  multiple: boolean;\n  named: boolean;\n  referencedTableName: string;\n  referencedEntityName: string;\n  sectionPriority: number;\n  objectPriority: number;\n  sectionEnabled: boolean;\n  objectEnabled: boolean;\n  sectionVisibility: boolean;\n  objectVisibility: boolean;\n  sectionRenderer: ExplorerColumnRenderer;\n  objectRenderer: ExplorerColumnRenderer;\n  tab: ExplorerTab;\n}\n\n/**\n * Interface representing a tab in an explorer target entity.\n */\nexport interface ExplorerTab {\n  id: string;\n  name: LocalizedString[];\n  priority: number;\n  size: object;\n  target: ExplorerTarget;\n}\n\n/**\n * Interface representing a renderer for an explorer column.\n */\nexport interface ExplorerColumnRenderer {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  params: object;\n}\n\n/**\n * Interface representing an action in an explorer target entity.\n */\nexport interface ExplorerAction {\n  code: string;\n  name: LocalizedString[];\n  description: LocalizedString[];\n  type: Explorer.Variation;\n  priority: number;\n  params: object;\n}\n\n/**\n * Interface representing the data of an explorer target.\n */\nexport interface TargetData {\n  primaryColumn: ExplorerColumn;\n  namedColumn: ExplorerColumn;\n  entity: ExplorerTarget;\n}\n\n/**\n * Type representing parameters for find explorer targets\n */\nexport type ExplorerTargetParams = {\n  section?: boolean;\n  object?: boolean;\n  fullRelations?: boolean;\n  readRequest?: boolean;\n  writeRequest?: boolean;\n  checkUserAccess?: User;\n};\n\n/**\n * Type representing selection parameters for an explorer entity.\n */\nexport type ExplorerSelectParams = {\n  section?: boolean;\n  object?: boolean;\n  prefix?: string;\n};\n\n/**\n * Options for configuring the Explorer module.\n */\nexport type ExplorerModuleOptions = {\n  service: Class;\n  controller?: Class;\n  saveHandlers?: Class[];\n};\n\n/**\n * Interface representing a handler for saving an entity.\n * Such handlers are triggered when entity recording occurs.\n * @template T The type of the entity being handled.\n */\nexport interface EntitySaveHandler {\n  handle(target: string, data: T, currentUser: User): T;\n}\n\n/**\n * Abstract class representing an explorer service.\n */\nexport abstract class ExplorerService {\n  /**\n   * Analyzes the database schema and relationships.\n   * Fill data for explorer tables based on that analysis.\n   */\n  abstract analyzeDatabase(): Promise;\n\n  /**\n   * Retrieves paginated entity data with relations.\n   * @param {string} target - The name of the target entity or table.\n   * @param {PageableParams} [params] - An optional object containing pageable parameters.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to a PageableData object containing the paginated results.\n   */\n  abstract getPageableEntityData(\n    target: string,\n    params?: PageableParams,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Saves or updates an entity, including its nested entities.\n   * @param {string} target - The name of the target entity.\n   * @param entity - The entity object to be saved or updated.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the saved or updated entity.\n   */\n  abstract saveEntityData(\n    target: string,\n    entity: T,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Removes an entity by its ID.\n   * @param {string} target - The name of the entity-target.\n   * @param {string | number} id - The ID of the entity to be removed.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the removed entity.\n   */\n  abstract removeEntity(\n    target: string,\n    id: string | number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves entity data for the given target and rowId, with relations attached up to the specified depth.\n   * @param {string} target - The target entity name.\n   * @param {string | number} rowId - The ID of the row to fetch.\n   * @param {number} [maxDepth] - The maximum depth of relations to fetch. Defaults to Infinity.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the entity object.\n   */\n  abstract getEntityData(\n    target: string,\n    rowId: string | number,\n    maxDepth?: number,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves target data for the specified target entity name.\n   * @param {string} target - The target entity name.\n   * @param {ExplorerTargetParams} [targetParams] - Parameters to fetch and check entity access.\n   * @returns {Promise} A promise that resolves to the TargetData object.\n   */\n  abstract getTargetData(\n    target: string,\n    targetParams?: ExplorerTargetParams,\n  ): Promise;\n\n  /**\n   * Retrieves a list of all registered targets with their item counts.\n   * @returns {Promise} A promise that resolves to an array of ExplorerTarget objects.\n   */\n  abstract getTargetList(): Promise;\n\n  /**\n   * Changes the target data.\n   * @param {ExplorerTarget} target - The data of the target entity.\n   * @returns {Promise} A promise that resolves to the changed target entity.\n   */\n  abstract changeTarget(target: ExplorerTarget): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TmpDirCleanerProcess.html":{"url":"classes/TmpDirCleanerProcess.html","title":"class - TmpDirCleanerProcess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TmpDirCleanerProcess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/process/default/tmp-dir-cleaner.process.ts\n        \n\n\n            \n                Description\n            \n            \n                Process class for cleaning the temporary directory.\n\n            \n\n            \n                Extends\n            \n            \n                            AbstractProcess\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                logInstance\n                            \n                            \n                                    Protected\n                                    Abstract\n                                    Readonly\n                                pmService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                getDeleteStats\n                            \n                            \n                                    Private\n                                    Async\n                                getStatus\n                            \n                            \n                                    Protected\n                                    Async\n                                onCrash\n                            \n                            \n                                    Protected\n                                    Async\n                                onFinish\n                            \n                            \n                                    Protected\n                                    Async\n                                onStop\n                            \n                            \n                                    Private\n                                    Async\n                                setStatus\n                            \n                            \n                                    Async\n                                start\n                            \n                            \n                                    Async\n                                stop\n                            \n                            \n                                    Protected\n                                    Async\n                                writeLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger, pmService: ProcessManagerService, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in lib/common/process/default/tmp-dir-cleaner.process.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pmService\n                                                  \n                                                        \n                                                                        ProcessManagerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractProcess\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractProcess:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessLogEntity\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractProcess\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractProcess:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                            Readonly\n                        pmService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProcessManagerService\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractProcess\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractProcess:32\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:42\n\n                        \n                    \n\n\n            \n                \n                        Executes the process to clean the temporary directory.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getDeleteStats\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDeleteStats(dirStruct: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/process/default/tmp-dir-cleaner.process.ts:63\n                        \n                    \n\n\n            \n                \n                        Gets statistics on the number of files and folders to be deleted.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dirStruct\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe structure of the directory.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { filesCount: number; foldersCount: number; }\n\n                        \n                            \n                                An object containing the file and folder counts.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStatus()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:165\n\n                        \n                    \n\n\n            \n                \n                        Gets the current status of the process.\n\n\n                        \n                            Returns :     unknown\n\n                        \n                            \n                                The current process status.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onCrash\n                        \n                    \n                \n            \n            \n                \n                        \n                    onCrash(error: Error)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:157\n\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process crashes.\nCan be overridden by subclasses if needed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error that caused the crash.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onFinish\n                        \n                    \n                \n            \n            \n                \n                        \n                    onFinish()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:140\n\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process finishes.\nCan be overridden by subclasses if needed.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        onStop\n                        \n                    \n                \n            \n            \n                \n                        \n                    onStop()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:148\n\n                        \n                    \n\n\n            \n                \n                        Callback method that is called when the process stops.\nCan be overridden by subclasses if needed.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    setStatus(status: Status)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:173\n\n                        \n                    \n\n\n            \n                \n                        Sets the status of the process.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            Status\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new status to set.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:44\n\n                        \n                    \n\n\n            \n                \n                        Starts the process and handles its execution.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:80\n\n                        \n                    \n\n\n            \n                \n                        Stops the process and updates its status.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        writeLog\n                        \n                    \n                \n            \n            \n                \n                        \n                    writeLog(message: string, data?, level)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractProcess\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractProcess:94\n\n                        \n                    \n\n\n            \n                \n                        Writes a log entry with the specified message, data, and log level.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe log message.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nOptional additional data.\n\n\n                                            \n                                        \n                                        \n                                                level\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    LogLevel.Log\n                                            \n\n                                            \n                                                    \nThe log level (default: LogLevel.Log).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractProcess } from \"../abstract-process\";\nimport { Inject, Logger } from \"@nestjs/common\";\nimport { ProcessManagerService } from \"../process-manager.service\";\nimport * as fs from \"fs\";\nimport { KpConfig } from \"../../../../gen-src/kp.config\";\nimport { FilesUtils } from \"../../../shared/utils/files.utils\";\nimport { LOGGER } from \"../../../shared/modules/log/log.constants\";\nimport { CacheService } from \"../../../shared/modules/cache/cache.types\";\nimport readDirectoryRecursively = FilesUtils.readDirectoryRecursively;\n\n/**\n * Process class for cleaning the temporary directory.\n */\nexport class TmpDirCleanerProcess extends AbstractProcess {\n  constructor(\n    @Inject(LOGGER) protected readonly logger: Logger,\n    protected readonly pmService: ProcessManagerService,\n    private readonly cacheService: CacheService,\n  ) {\n    super();\n  }\n\n  /**\n   * Executes the process to clean the temporary directory.\n   */\n  protected async execute() {\n    const tmpDir =\n      process.cwd() + (await this.cacheService.get(KpConfig.TMP_DIR));\n    if (!fs.existsSync(tmpDir)) {\n      await this.writeLog(`Nothing to delete`);\n      return;\n    }\n    const dirStruct = await readDirectoryRecursively(tmpDir);\n    const stats = this.getDeleteStats(dirStruct as { [k: string]: string[] });\n    await this.writeLog(\n      `Try to delete ${stats.filesCount} files and ${stats.foldersCount} folders...`,\n    );\n    await fs.promises.rm(tmpDir, { recursive: true, force: true });\n    await this.writeLog(`Tmp dir was cleaned`);\n  }\n\n  /**\n   * Gets statistics on the number of files and folders to be deleted.\n   * @param dirStruct - The structure of the directory.\n   * @returns An object containing the file and folder counts.\n   */\n  private getDeleteStats(dirStruct: { [k: string]: string[] }) {\n    let filesCount = 0;\n    let foldersCount = 0;\n    for (const key in dirStruct) {\n      filesCount += dirStruct[key].length;\n      if (!key.length) {\n        continue;\n      }\n      foldersCount++;\n    }\n    return { filesCount, foldersCount };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TooManyRequestsMsException.html":{"url":"classes/TooManyRequestsMsException.html","title":"class - TooManyRequestsMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TooManyRequestsMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/too-many-requests-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for too many requests, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/too-many-requests-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for too many requests, extending MsException.\n */\nexport class TooManyRequestsMsException extends MsException {\n  constructor(message?: string) {\n    super(\n      HttpStatus.TOO_MANY_REQUESTS,\n      message || \"You have made too many requests. Please try again later.\",\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedMsException.html":{"url":"classes/UnauthorizedMsException.html","title":"class - UnauthorizedMsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedMsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/shared/exceptions/unauthorized-ms.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom microservice exception for unauthorized requests, extending MsException.\n\n            \n\n            \n                Extends\n            \n            \n                            MsException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in lib/shared/exceptions/unauthorized-ms.exception.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from \"@nestjs/common\";\nimport { MsException } from \"./ms.exception\";\n\n/**\n * Custom microservice exception for unauthorized requests, extending MsException.\n */\nexport class UnauthorizedMsException extends MsException {\n  constructor(message?: string) {\n    super(HttpStatus.UNAUTHORIZED, message || \"Unauthorized request\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpsertMediaRequest.html":{"url":"interfaces/UpsertMediaRequest.html","title":"interface - UpsertMediaRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpsertMediaRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/media/media.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the request to upsert a media object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entityIdForPatch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            entityName\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityIdForPatch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entityIdForPatch:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entityName:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     Buffer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Buffer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\nimport { FileMetadata } from \"../file/file.types\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a media object.\n */\nexport interface Media {\n  /** This field contains the identification number of the file  */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file in all languages involved */\n  name: LocalizedString[];\n  /** This field contains a list of unique settings and functions that the file contains */\n  type: MediaType;\n  /** This field contains a link to the original file and all its thumbnails */\n  files: MediaFile[];\n  /** This field contains a link to the meta data container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a media type.\n */\nexport interface MediaType {\n  /** A unique code representing the media file type */\n  code: string;\n  /** This field contains a unique character identifier */\n  name: string;\n  /** This field defines the possibility to create a duplicate file in WEBP format */\n  vp6: boolean;\n  /** This field indicates the type of access to the file, public or private */\n  private: boolean;\n  /** A numeric value reflecting the quality level of the media (defines the compression rate or overall quality) */\n  quality: number;\n  /** A file extension associated with the media type and which defines the file format  */\n  ext: MediaExt;\n  /** An array of supported media formats for this media type */\n  formats: MediaFormat[];\n}\n\n/**\n * Interface representing a media format.\n */\nexport interface MediaFormat {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media format */\n  name: string;\n  /** The width of the media file in pixels, represented as a string  */\n  width: string;\n  /** The height of the media file in pixels, represented as a string  */\n  height: string;\n}\n\n/**\n * Interface representing a media file.\n */\nexport interface MediaFile {\n  /** A unique code or identifier for the media file*/\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the media file */\n  name: string;\n  /** The width of the media file in pixels */\n  width: number;\n  /** The height of the media file in pixels */\n  height: number;\n  /** The size of the media file in bytes */\n  size: number;\n  /** The format of the media file, represented by the MediaFormat type */\n  format: MediaFormat;\n  media: Media;\n}\n\n/**\n * Interface representing a media extension.\n */\nexport interface MediaExt {\n  /** This field contains a unique character identifier */\n  code: string;\n  /** A unique code or identifier for the media file*/\n  name: string;\n}\n\n/**\n * Interface representing the request to upsert a media object.\n */\nexport interface UpsertMediaRequest {\n  file: Buffer;\n  type: string;\n  code?: string;\n  entityIdForPatch?: number;\n  entityName?: LocalizedString[];\n}\n\n/**\n * Data transfer object for media type.\n */\nexport class MediaTypeDto implements MediaType {\n  @Expose()\n  code: string;\n\n  @Expose()\n  ext: MediaExt;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  formats: MediaFormatDto[];\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  private: boolean;\n\n  @Expose()\n  vp6: boolean;\n\n  @Expose()\n  quality: number;\n}\n\n/**\n * Data transfer object for media format.\n */\nexport class MediaFormatDto implements MediaFormat {\n  @Expose()\n  code: string;\n\n  @Expose()\n  height: string;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  width: string;\n}\n\n/**\n * Data transfer object for media.\n */\nexport class MediaDto implements Media {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Expose()\n  @Type(() => MediaTypeDto)\n  type: MediaType;\n\n  @Expose()\n  @Type(() => MediaFileDto)\n  files: MediaFile[];\n\n  @Expose()\n  metadata: FileMetadata;\n\n  @Expose()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for media file.\n */\nexport class MediaFileDto implements MediaFile {\n  @Expose()\n  id: number;\n\n  @Expose()\n  code: string;\n\n  @Expose()\n  @Type(() => MediaFormatDto)\n  format: MediaFormatDto;\n\n  @Expose()\n  height: number;\n\n  @Exclude()\n  media: Media;\n\n  @Expose()\n  name: string;\n\n  @Expose()\n  size: number;\n\n  @Expose()\n  width: number;\n}\n\n/**\n * Abstract class representing the media management service.\n */\nexport abstract class MediaManager {\n  abstract findByCode(code: string): Promise;\n\n  abstract findMediaById(id: number, privateMedia?: boolean): Promise;\n\n  abstract findPublicById(id: number): Promise;\n\n  abstract findPrivateById(id: number): Promise;\n\n  abstract remove(id: number): Promise;\n\n  abstract recreate(id: number): Promise;\n\n  abstract createOrUpdateMedia(\n    file: Buffer,\n    type: string,\n    code?: string,\n    existedEntityId?: number,\n    name?: LocalizedString[],\n  ): Promise;\n\n  abstract getMediaPath(\n    media: Media,\n    format?: string,\n    webpSupport?: boolean,\n  ): Promise;\n}\n\nexport interface BasicMediaController {\n  createMedia(\n    file: Express.Multer.File,\n    type: string,\n    id: number,\n  ): Promise;\n\n  getPrivateMedia(\n    res: Response,\n    id: number,\n    format: string,\n    webp: boolean,\n  ): Promise;\n\n  getMedia(id: number): Promise;\n\n  removeMedia(id: number): Promise;\n\n  recreateMedia(id: number): Promise;\n}\n\n/**\n * Options for configuring the MediaModule.\n */\nexport type MediaModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a user object.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            login\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         Media\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Media\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\nexport interface BasicUserController {\n  getUserProfile(id: string, user: User): Promise;\n\n  updateUserProfile(id: string, profile: User, user: User): Promise;\n\n  removeUserProfile(id: string): Promise;\n\n  createUserProfile(profile: User): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for user.\n\n            \n\n\n            \n                Implements\n            \n            \n                            User\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                active\n                            \n                            \n                                    \n                                avatar\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Media\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:98\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\nexport interface BasicUserController {\n  getUserProfile(id: string, user: User): Promise;\n\n  updateUserProfile(id: string, profile: User, user: User): Promise;\n\n  removeUserProfile(id: string): Promise;\n\n  createUserProfile(profile: User): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/entity/user.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the users of the system\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                active\n                            \n                            \n                                    \n                                avatar\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('boolean', {default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MediaEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, t => t.code)\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'first_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'last_name', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: false, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.entity.ts:78\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  TableInheritance,\n} from \"typeorm\";\nimport { UserRoleEntity } from \"./user-role.entity\";\nimport { User } from \"../user.types\";\nimport { MediaEntity } from \"../../media/entity/media.entity\";\n\n/**\n * The entity stores the users of the system\n */\n@Entity(\"users\")\n@TableInheritance({\n  column: { type: \"varchar\", name: \"class\", nullable: true },\n})\nexport class UserEntity implements User {\n  @PrimaryGeneratedColumn()\n  id: string;\n\n  @ManyToOne(() => MediaEntity, (t) => t.code)\n  avatar: MediaEntity;\n\n  @Column(\"varchar\", { nullable: false })\n  password: string;\n\n  @Column(\"varchar\", { nullable: false, unique: true })\n  login: string;\n\n  @Index({ unique: true })\n  @Column(\"varchar\", { nullable: true })\n  email: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  phone: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"first_name\", nullable: true })\n  firstName: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"last_name\", nullable: true })\n  lastName: string;\n\n  @Index()\n  @Column(\"boolean\", { default: false })\n  active: boolean;\n\n  @ManyToMany(() => UserRoleEntity)\n  @JoinTable()\n  roles: UserRoleEntity[];\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserEntityPwdAndRolesSaveHandler.html":{"url":"injectables/UserEntityPwdAndRolesSaveHandler.html","title":"injectable - UserEntityPwdAndRolesSaveHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserEntityPwdAndRolesSaveHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/explorer/handlers/user-entity-pwd-and-roles.save-handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Handler for saving user entities, ensuring appropriate permissions and roles are applied.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(target: string, payload: User, currentUser: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/explorer/handlers/user-entity-pwd-and-roles.save-handler.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                target\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { EntitySaveHandler } from \"../explorer.types\";\nimport { User } from \"../../user/user.types\";\nimport { Roles } from \"../../../shared/constants\";\n\n/**\n * Handler for saving user entities, ensuring appropriate permissions and roles are applied.\n */\n@Injectable()\nexport class UserEntityPwdAndRolesSaveHandler\n  implements EntitySaveHandler\n{\n  handle(target: string, payload: User, currentUser: User) {\n    if (!currentUser.roles.find((v) => v.code === Roles.ROOT)) {\n      if (payload.id) {\n        delete payload.password;\n        delete payload.login;\n      }\n      delete payload.roles;\n    }\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/user/user.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module is responsible for managing system users\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: UserModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.module.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            UserModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      service: BasicUserService,\n      controller: ProfileController,\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { DynamicModule, Module } from \"@nestjs/common\";\nimport { BasicUserService } from \"./user-service-basic.service\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\nimport { UserEntity } from \"./entity/user.entity\";\nimport { UserModuleOptions, UserService } from \"./user.types\";\nimport { ProfileController } from \"./profile.controller\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\n\n/**\n * Module is responsible for managing system users\n */\n@Module({})\nexport class UserModule {\n  static forRoot(\n    options: UserModuleOptions = {\n      service: BasicUserService,\n      controller: ProfileController,\n    },\n  ): DynamicModule {\n    return {\n      module: UserModule,\n      imports: [LogModule, CacheModule, TypeOrmModule.forFeature([UserEntity])],\n      controllers: [options.controller],\n      providers: [\n        {\n          provide: UserService,\n          useClass: options.service,\n        },\n      ],\n      exports: [UserService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRole.html":{"url":"interfaces/UserRole.html","title":"interface - UserRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a user role.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            tsCreated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         LocalizedString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocalizedString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tsCreated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tsCreated:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\nexport interface BasicUserController {\n  getUserProfile(id: string, user: User): Promise;\n\n  updateUserProfile(id: string, profile: User, user: User): Promise;\n\n  removeUserProfile(id: string): Promise;\n\n  createUserProfile(profile: User): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRoleDto.html":{"url":"classes/UserRoleDto.html","title":"class - UserRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Data transfer object for user role.\n\n            \n\n\n            \n                Implements\n            \n            \n                            UserRole\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedString[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/user.types.ts:59\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\nexport interface BasicUserController {\n  getUserProfile(id: string, user: User): Promise;\n\n  updateUserProfile(id: string, profile: User, user: User): Promise;\n\n  removeUserProfile(id: string): Promise;\n\n  createUserProfile(profile: User): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserRoleEntity.html":{"url":"entities/UserRoleEntity.html","title":"entity - UserRoleEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserRoleEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/entity/user-role.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the roles of the system users\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                tsCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({unique: true})@PrimaryColumn('varchar')\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user-role.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalizedStringEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user-role.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tsCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@CreateDateColumn({name: 'ts_created', type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user-role.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  PrimaryColumn,\n} from \"typeorm\";\nimport { UserRole } from \"../user.types\";\nimport { LocalizedStringEntity } from \"../../../shared/modules/locale/entity/localized-string.entity\";\n\n/**\n * The entity stores the roles of the system users\n */\n@Entity(\"users_roles\")\nexport class UserRoleEntity implements UserRole {\n  @Index({ unique: true })\n  @PrimaryColumn(\"varchar\")\n  code: string;\n\n  @ManyToMany(() => LocalizedStringEntity, { cascade: true })\n  @JoinTable()\n  name: LocalizedStringEntity[];\n\n  @Index()\n  @CreateDateColumn({ name: \"ts_created\", type: \"timestamp\" })\n  tsCreated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserService.html":{"url":"classes/UserService.html","title":"class - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class representing the user service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                create\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                findByLogin\n                            \n                            \n                                    Abstract\n                                removeById\n                            \n                            \n                                    Abstract\n                                updateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        findByLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByLogin(login: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                login\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        removeById\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        updateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateById(id: string, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/user.types.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\nexport interface BasicUserController {\n  getUserProfile(id: string, user: User): Promise;\n\n  updateUserProfile(id: string, profile: User, user: User): Promise;\n\n  removeUserProfile(id: string): Promise;\n\n  createUserProfile(profile: User): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserSubscriber.html":{"url":"classes/UserSubscriber.html","title":"class - UserSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/entity/user.subscriber.ts\n        \n\n\n            \n                Description\n            \n            \n                A subscriber for UserEntity that handles entity events such as insert and update.\nIt validates the login and hashes the password before these events.\n\n            \n\n\n            \n                Implements\n            \n            \n                        EntitySubscriberInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                beforeInsert\n                            \n                            \n                                    Async\n                                beforeUpdate\n                            \n                            \n                                listenTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Default value : UserEntity\n                    \n                \n                    \n                        \n                                Defined in lib/common/user/entity/user.subscriber.ts:35\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        beforeInsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    beforeInsert(event: InsertEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/entity/user.subscriber.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            InsertEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        beforeUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    beforeUpdate(event: UpdateEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/entity/user.subscriber.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            UpdateEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listenTo\n                        \n                    \n                \n            \n            \n                \nlistenTo()\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/user/entity/user.subscriber.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  EntitySubscriberInterface,\n  EventSubscriber,\n  UpdateEvent,\n} from \"typeorm\";\nimport { UserEntity } from \"./user.entity\";\nimport { InsertEvent } from \"typeorm/subscriber/event/InsertEvent\";\nimport { AbstractUserSubscriber } from \"../abstract-user-subscriber\";\n\n/**\n * A subscriber for UserEntity that handles entity events such as insert and update.\n * It validates the login and hashes the password before these events.\n */\n@EventSubscriber()\nexport class UserSubscriber\n  extends AbstractUserSubscriber\n  implements EntitySubscriberInterface\n{\n  protected readonly type = UserEntity;\n\n  listenTo() {\n    return UserEntity;\n  }\n\n  async beforeInsert(event: InsertEvent) {\n    await this.validateLogin(event.entity.login);\n    await this.hashPasswordIfNeeded(event);\n  }\n\n  async beforeUpdate(event: UpdateEvent) {\n    if (event.entity.login) {\n      await this.validateLogin(event.entity.login);\n    }\n    await this.hashPasswordIfNeeded(event);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserUpdateRequest.html":{"url":"interfaces/UserUpdateRequest.html","title":"interface - UserUpdateRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserUpdateRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/user/user.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a request to update a user.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Exclude, Expose, Type } from \"class-transformer\";\nimport { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { LocalizedString } from \"../../shared/modules/locale/locale.types\";\n\n/**\n * Interface representing a user object.\n */\nexport interface User {\n  id: string;\n  avatar: Media;\n  password: string;\n  login: string;\n  email: string;\n  phone: string;\n  firstName: string;\n  lastName: string;\n  active: boolean;\n  roles: UserRole[];\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a user role.\n */\nexport interface UserRole {\n  code: string;\n  name: LocalizedString[];\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user role.\n */\nexport class UserRoleDto implements UserRole {\n  @Expose()\n  code: string;\n\n  @Expose()\n  name: LocalizedString[];\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Data transfer object for user.\n */\nexport class UserDto implements User {\n  @Expose()\n  id: string;\n\n  @Expose()\n  login: string;\n\n  @Expose()\n  email: string;\n\n  @Expose()\n  firstName: string;\n\n  @Expose()\n  lastName: string;\n\n  @Exclude()\n  password: string;\n\n  @Expose()\n  @Type(() => UserRoleDto)\n  roles: UserRoleDto[];\n\n  @Expose()\n  active: boolean;\n\n  @Expose()\n  avatar: Media;\n\n  @Expose()\n  phone: string;\n\n  @Exclude()\n  tsCreated: Date;\n}\n\n/**\n * Interface representing a request to update a user.\n */\nexport interface UserUpdateRequest {\n  id: string;\n  user: User;\n}\n\n/**\n * Abstract class representing the user service.\n */\nexport abstract class UserService {\n  abstract findByLogin(login: string): Promise;\n\n  abstract findById(id: string): Promise;\n\n  abstract updateById(id: string, user: User): Promise;\n\n  abstract create(user: User): Promise;\n\n  abstract removeById(id: string): Promise;\n}\n\nexport interface BasicUserController {\n  getUserProfile(id: string, user: User): Promise;\n\n  updateUserProfile(id: string, profile: User, user: User): Promise;\n\n  removeUserProfile(id: string): Promise;\n\n  createUserProfile(profile: User): Promise;\n}\n\n/**\n * Options for configuring the UserModule.\n */\nexport type UserModuleOptions = {\n  service: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VideoFileMetadata.html":{"url":"interfaces/VideoFileMetadata.html","title":"interface - VideoFileMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VideoFileMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/file.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing video file metadata.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bitrate\n                                        \n                                \n                                \n                                        \n                                            codec\n                                        \n                                \n                                \n                                        \n                                            colorRange\n                                        \n                                \n                                \n                                        \n                                            colorSpace\n                                        \n                                \n                                \n                                        \n                                            container\n                                        \n                                \n                                \n                                        \n                                            displayAspectRatio\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            frameRate\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            rotate\n                                        \n                                \n                                \n                                        \n                                            sampleAspectRatio\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bitrate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bitrate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The bitrate of the video file, indicating the amount of data processed per second\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        codec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        codec:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A codec ( algorithm or method ) used to compress and decompress a video file\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorRange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Video color range, indicating the set of colors used in the video file\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorSpace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorSpace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The color space of the video, indicating how colors are represented and interpreted\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        container\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        container:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The container format of the video file, indicating how video, audio, and other data streams are packaged together\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAspectRatio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAspectRatio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The display aspect ratio of the video, indicating the ratio of width to height for playback.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The duration of the video file in seconds\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        frameRate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        frameRate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The frame rate of the video, indicating the number of frames displayed per second\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The height of the video in pixels\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    This field contains the identification number\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rotate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rotate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The rotation angle of the video in degrees, indicating its orientation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sampleAspectRatio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sampleAspectRatio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A sample video aspect ratio indicating how pixels are distributed in a video stream\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The width of the video in pixels\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { Media } from \"../media/media.types\";\nimport { FileManager, FileMd } from \"./file.constants\";\nimport { Response } from \"express\";\n\n/**\n * Interface representing a file.\n */\nexport interface File {\n  /** This field contains the identification number */\n  id: number;\n  /** This field contains a unique character identifier */\n  code: string;\n  /** This field contains the name of the file */\n  name: string;\n  /** This field stores the path to the file on the server */\n  path: string;\n  /** This field specifies the type of access to the file, public or private */\n  public: boolean;\n  /** This field stores the size of the file in bytes */\n  size: number;\n  /** This field stores the icon of the file */\n  icon: Media;\n  /** This field stores the media preview of the file  */\n  preview: Media;\n  /** This field contains a reference to the FileMetadata container */\n  metadata: FileMetadata;\n  /** This field contains the date the file was created */\n  tsCreated: Date;\n}\n\n/**\n * Interface representing file metadata.\n */\nexport interface FileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The MIME type of the file, indicating the nature and format of the file content */\n  mime: string;\n  /** The file extension, indicating the file format */\n  ext: string;\n  /** The cryptographic hash of the file content, used for integrity verification and identification */\n  hash: string;\n  /** The ICC (International Color Consortium) profile data associated with the file, used for color management */\n  icc: IccFileMetadata;\n  /** GPS data associated with the location where the file was created, including latitude, longitude and elevation */\n  gps: GpsFileMetadata;\n  /** This field is used to store information about the structure and characteristics of the image, such as size, resolution, color depth, and other image characteristics */\n  image: ImageFileMetadata;\n  /** This is EXIF (Exchangeable Image File Format) data, which includes various metadata that was recorded by the camera or device when the image was created */\n  exif: ExifFileMetadata;\n  /** This field is used to store information about the structure and properties of the audio file */\n  audio: AudioFileMetadata;\n  /** This field is used to store information about the structure and properties of the video recording*/\n  video: VideoFileMetadata;\n}\n\n/**\n * Interface representing image file metadata.\n */\nexport interface ImageFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The number of bits used to represent the color of a single pixel in the image */\n  bps: number;\n  /** The width of the image in pixels */\n  width: number;\n  /** The height of the image in pixels */\n  height: number;\n  /** The number of color components used to represent the color of the image */\n  colorComponents: number;\n  /** The subsampling method used for the image, indicating how color information is sampled */\n  subsampling: string;\n  /** The date and time when the image was created or last modified */\n  dateTime: Date;\n  /** The bit depth of the image, indicating the number of bits used for color representation */\n  bitDepth: number;\n  /** The color type of the image, indicating the color model used */\n  colorType: string;\n  /** Contains the compression method used to reduce the size of the image */\n  compression: string;\n  /** Specifies the filtering method used to process the image data before compressing it */\n  filter: string;\n  /**  Indicates whether interlacing is used in the image, allowing for progressive display */\n  interlace: string;\n}\n\n/**\n * Interface representing ICC file metadata.\n */\nexport interface IccFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The version of the ICC profile, indicating the specification version used to create the color profile. */\n  profileVersion: string;\n  /** The class of the ICC profile, indicating its primary purpose and type */\n  profileClassValue: string;\n  /** The name of the ICC profile class, describing its primary purpose */\n  profileClassName: string;\n  /** The connection space of the ICC profile, representing the intermediate color space used for color conversions. */\n  connectionSpace: string;\n  /** The date and time when the ICC profile was created or last modified */\n  iccProfileDate: Date;\n  /** A unique signature of the ICC profile used to confirm its authenticity and validity */\n  iccSignature: string;\n  /** The primary platform or operating system for which the ICC profile was created or optimized */\n  primaryPlatform: string;\n  /** The manufacturer of the device for which the ICC profile was created */\n  deviceManufacturer: string;\n  /** The model number of the device for which the ICC profile was created */\n  deviceModelNumber: string;\n  /**  Indicates the type of rendering to be used when converting colors between color spaces */\n  renderingIntentValue: string;\n  /** Specifies the name of the rendering type that is used when converting colors between color spaces */\n  renderingIntentName: string;\n  /** The name or identifier of the creator of the ICC profile */\n  profileCreator: string;\n  /** A description of the ICC profile, explaining its purpose and characteristics */\n  iccDescription: string;\n  /** The copyright information for the ICC profile, indicating ownership and usage rights */\n  iccCopyright: string;\n}\n\n/**\n * Interface representing EXIF file metadata.\n */\nexport interface ExifFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** This field specifies the manufacturer of the camera */\n  make: string;\n  /** This field specifies the model of the camera  */\n  model: string;\n  /** Indicates image display orientation based on EXIF metadata */\n  orientation: string;\n  /** X-side resolution of the photo*/\n  resolutionX: string;\n  /** Y-side resolution of the photo*/\n  resolutionY: string;\n  /** Unit of image resolution */\n  resolutionUnit: string;\n  /** The field contains information about the software that was used to create or edit the image */\n  software: string;\n  /** This field is responsible for specifying the method of placing these color components Y, Cb and Cr relative to the image pixels */\n  ycbCrPositioning: string;\n  /** Pointer to the beginning of an EXIF IFD block in a file inside a TIFF file */\n  exifIfdPointer: string;\n  /** Contains information about the location where the image was taken */\n  gpsInfoIfdPointer: string;\n  /** Exposure time (shutter speed) when capturing an image */\n  exposureTime: string;\n  /** Contains data on the aperture number (aperture) when capturing an image */\n  fNumber: string;\n  /** Contains data on the exposure mode (shutter speed and aperture) used to capture the image */\n  exposureProgram: string;\n  /** Contains data on the ISO value (the sensitivity of the camera sensor to light) */\n  isoSpeedRatings: string;\n  /** Contains EXIF specification version data */\n  exifVersion: string;\n  /** Contains time offset data relative to UTC (Coordinated Universal Time) for the date and time when the image was taken */\n  offsetTime: string;\n  /** Contains data on the shutter speed of the camera */\n  shutterSpeedValue: string;\n  /** Contains data on the aperture (aperture) value used to capture the image */\n  aperture: string;\n  /** Contains data on the brightness level of the image */\n  brightness: string;\n  /** Contains exposure compensation data  */\n  exposureBias: string;\n  /** Contains data on the maximum aperture (aperture) value  */\n  maxAperture: string;\n  /** Contains data on the distance to the subject in millimeters */\n  subjectDistance: string;\n  /** Contains data on the light sensing mode used by the camera when capturing an image */\n  meteringMode: string;\n  /** Contains data on the status and operation of the flash during image capture */\n  flash: string;\n  /** Contains data about the focal length of the camera lens */\n  focalLength: string;\n  /** The Flashpix format version used for the image */\n  flashpixVersion: string;\n  /** The color space of the image data */\n  colorSpace: string;\n  /** Width (horizontal resolution) of the image in pixels */\n  pixelXDimension: string;\n  /** Contains data about the vertical resolution (height) of the image in pixels */\n  pixelYDimension: string;\n  /** Pointer to the start of the Interoperability IFD block for compatibility metadata */\n  interoperabilityIfdPointer: string;\n  /** Indicates the method used by the camera sensor to capture the image */\n  sensingMethod: string;\n  /** The type of scene captured in the image, indicating if it was taken with a digital camera */\n  sceneType: string;\n  /** Indicates whether the image was processed with custom rendering */\n  customRendered: string;\n  /** The exposure mode used by the camera during the shot */\n  exposureMode: string;\n  /** The white balance setting used during the shot */\n  whiteBalance: string;\n  /** The digital zoom ratio applied during the shot */\n  digitalZoomRatio: string;\n  /** The type of scene capture mode used during the shot */\n  sceneCaptureType: string;\n  /** The level of contrast applied to the image */\n  contrast: string;\n  /** The level of color saturation applied to the image */\n  saturation: string;\n  /** The level of sharpness applied to the image */\n  sharpness: string;\n  /** The distance range to the subject during the shot */\n  subjectDistanceRange: string;\n  /** The manufacturer of the lens used to capture the image */\n  lensMake: string;\n  /** The model of the lens used to capture the image */\n  lensModel: string;\n  /** Indicates whether the image is a composite, created by combining multiple images or applying effects */\n  compositeImage: string;\n  /** The interoperability index indicating the standard used for ensuring image compatibility */\n  interoperabilityIndex: string;\n  /** The version of the interoperability standard used for the image */\n  interoperabilityVersion: string;\n}\n\n/**\n * Interface representing GPS file metadata.\n */\nexport interface GpsFileMetadata {\n  /** Representing identifier of meta-data object */\n  id: number;\n  /** Representing gps-latitude parameter */\n  latitude: number;\n  /** Representing gps-longitude parameter */\n  longitude: number;\n  /** Representing gps-altitude parameter */\n  altitude: number;\n}\n\n/**\n * Interface representing video file metadata.\n */\nexport interface VideoFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** A codec ( algorithm or method ) used to compress and decompress a video file */\n  codec: string;\n  /** The container format of the video file, indicating how video, audio, and other data streams are packaged together */\n  container: string;\n  /** The width of the video in pixels */\n  width: number;\n  /** The height of the video in pixels */\n  height: number;\n  /**  The bitrate of the video file, indicating the amount of data processed per second */\n  bitrate: number;\n  /** The duration of the video file in seconds */\n  duration: number;\n  /** A sample video aspect ratio indicating how pixels are distributed in a video stream */\n  sampleAspectRatio: string;\n  /** The display aspect ratio of the video, indicating the ratio of width to height for playback.*/\n  displayAspectRatio: string;\n  /** Video color range, indicating the set of colors used in the video file */\n  colorRange: string;\n  /** The color space of the video, indicating how colors are represented and interpreted */\n  colorSpace: string;\n  /** The frame rate of the video, indicating the number of frames displayed per second */\n  frameRate: string;\n  /** The rotation angle of the video in degrees, indicating its orientation */\n  rotate: string;\n}\n\n/**\n * Interface representing audio file metadata.\n */\nexport interface AudioFileMetadata {\n  /** This field contains the identification number */\n  id: number;\n  /** The format of the audio file container, which encapsulates audio streams and metadata */\n  container: string;\n  /** The audio codec used for encoding or decoding the audio data */\n  codec: string;\n  /** The sample rate of the audio file, indicating the number of samples per second */\n  sampleRate: number;\n  /**  The number of audio channels in the file, indicating the sound configuration (e.g., mono, stereo) */\n  numberOfChannels: number;\n  /**  The bitrate of the audio file, indicating the amount of data processed per second. */\n  bitrate: number;\n  /** The codec profile used for encoding the audio data, indicating specific settings and capabilities */\n  codecProfile: string;\n  /** The tool or software used to encode or process the audio file */\n  tool: string;\n  /** The duration of the audio file in seconds */\n  duration: number;\n  /** The title of the audio file or track */\n  title: string;\n  /** The name of the artist or band who performed the audio track. */\n  artist: string;\n  /** The name of the album that the audio track belongs to */\n  album: string;\n  /** The year the audio track was release */\n  year: number;\n  /** The genre of the audio track */\n  genre: string;\n  /** The music label or company that released the audio trac */\n  label: string;\n}\n\nexport interface BasicFileController {\n  createFile(file: Express.Multer.File, isPublic: string): Promise;\n\n  getPrivateFile(res: Response, id: number): Promise;\n\n  getFile(id: number): Promise;\n\n  removeFile(id: number): Promise;\n}\n\n/**\n * Options for configuring the FileModule.\n */\nexport type FileModuleOptions = {\n  fileManager: Class;\n  fileMd: Class;\n  controller: Class;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/VideoFileMetadataEntity.html":{"url":"entities/VideoFileMetadataEntity.html","title":"entity - VideoFileMetadataEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  VideoFileMetadataEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/file/entity/video-file-metadata.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                The entity stores the video metadata of the file\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                bitrate\n                            \n                            \n                                    \n                                    \n                                codec\n                            \n                            \n                                    \n                                    \n                                colorRange\n                            \n                            \n                                    \n                                    \n                                colorSpace\n                            \n                            \n                                    \n                                    \n                                container\n                            \n                            \n                                    \n                                    \n                                displayAspectRatio\n                            \n                            \n                                    \n                                    \n                                duration\n                            \n                            \n                                    \n                                    \n                                frameRate\n                            \n                            \n                                    \n                                    \n                                height\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                rotate\n                            \n                            \n                                    \n                                    \n                                sampleAspectRatio\n                            \n                            \n                                    \n                                    \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bitrate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        codec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        colorRange\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'color_range', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        colorSpace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'color_space', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        displayAspectRatio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'display_aspect_ratio', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('decimal', {nullable: true, default: undefined, precision: 15, scale: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        frameRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'frame_rate', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({zerofill: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        rotate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sampleAspectRatio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('varchar', {name: 'sample_aspect_ratio', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column('int', {nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in lib/common/file/entity/video-file-metadata.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, Index, PrimaryGeneratedColumn } from \"typeorm\";\nimport { VideoFileMetadata } from \"../file.types\";\n\n/**\n * The entity stores the video metadata of the file\n */\n@Entity(\"file_metadata_video\")\nexport class VideoFileMetadataEntity implements VideoFileMetadata {\n  @PrimaryGeneratedColumn({ zerofill: true })\n  id: number;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  codec: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  container: string;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  width: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true, default: null })\n  height: number;\n\n  @Index()\n  @Column(\"int\", { nullable: true })\n  bitrate: number;\n\n  @Index()\n  @Column(\"decimal\", {\n    nullable: true,\n    default: null,\n    precision: 15,\n    scale: 10,\n  })\n  duration: number;\n\n  @Index()\n  @Column(\"varchar\", { name: \"sample_aspect_ratio\", nullable: true })\n  sampleAspectRatio: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"display_aspect_ratio\", nullable: true })\n  displayAspectRatio: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"color_range\", nullable: true })\n  colorRange: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"color_space\", nullable: true })\n  colorSpace: string;\n\n  @Index()\n  @Column(\"varchar\", { name: \"frame_rate\", nullable: true })\n  frameRate: string;\n\n  @Index()\n  @Column(\"varchar\", { nullable: true })\n  rotate: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WarlockModule.html":{"url":"modules/WarlockModule.html","title":"module - WarlockModule","body":"\n                   \n\n\n\n\n    Modules\n    WarlockModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WarlockModule\n\n\n\ncluster_WarlockModule_imports\n\n\n\n\nRedisModule\n\nRedisModule\n\n\n\nWarlockModule\n\nWarlockModule\n\nWarlockModule -->\n\nRedisModule->WarlockModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/shared/modules/warlock/warlock.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            A module that provides functionality for locking mechanisms using Redis.\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            RedisModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport { Logger, Module } from \"@nestjs/common\";\nimport Redis from \"ioredis\";\nimport * as Warlock from \"node-redis-warlock\";\nimport { RedisModule } from \"../cache/redis.module\";\nimport { LogModule } from \"../log/log.module\";\nimport { LOGGER } from \"../log/log.constants\";\nimport { EnvLoader } from \"../../utils/env.loader\";\nimport { WARLOCK } from \"./warlock.constants\";\nimport { REDIS_CLIENT } from \"../cache/cache.constants\";\nimport { WarlockFn } from \"./warlock.types\";\n\n/**\n * A module that provides functionality for locking mechanisms using Redis.\n */\n@Module({\n  imports: [\n    RedisModule.forRootAsync({\n      imports: [LogModule],\n      inject: [LOGGER],\n      useFactory: (logger: Logger) => {\n        EnvLoader.loadEnvironment(logger);\n        return {\n          config: {\n            host: process.env.REDIS_HOST,\n            port: parseInt(process.env.REDIS_PORT),\n            db: parseInt(process.env.REDIS_DB),\n            username: process.env.REDIS_USER,\n            password: process.env.REDIS_PASSWORD,\n          },\n        };\n      },\n    }),\n  ],\n  providers: [\n    {\n      provide: WARLOCK,\n      inject: [REDIS_CLIENT],\n      useFactory: (\n        client: Redis,\n        lockLifeTime = 10000,\n        lockKey = \"lock\",\n      ): WarlockFn => {\n        const warlock = Warlock(client);\n        return function (lockCode: string, caller: () => Promise) {\n          warlock.lock(\n            `${lockKey}:${lockCode}`,\n            lockLifeTime,\n            async (err, unlock) => {\n              if (err) {\n                return;\n              }\n              if (typeof unlock === \"function\") {\n                await caller();\n                unlock();\n              }\n            },\n          );\n        };\n      },\n    },\n  ],\n  exports: [WARLOCK],\n})\nexport class WarlockModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/XdbExportService.html":{"url":"classes/XdbExportService.html","title":"class - XdbExportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  XdbExportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class for XML data export services.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                exportXml\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        exportXml\n                        \n                    \n                \n            \n            \n                \n                        \n                    exportXml(params: XdbExportParams)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.constants.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            XdbExportParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  XdbAction,\n  XdbDecomposedEntity,\n  XdbExportDto,\n  XdbExportParams,\n  XdbObject,\n  XdbRowData,\n} from \"./xml-data-bridge.types\";\nimport * as xml2js from \"xml2js\";\nimport { Parser } from \"yargs-parser\";\nimport { ObjectLiteral } from \"typeorm\";\n\n/**\n * Abstract class for XML data import services.\n */\nexport abstract class XdbImportService {\n  abstract importXml(xml: XdbObject): Promise;\n\n  abstract importFromFile(fileData: Buffer): Promise;\n}\n/**\n * Abstract class for XML data export services.\n */\nexport abstract class XdbExportService {\n  abstract exportXml(params: XdbExportParams): Promise;\n}\n\nexport namespace Xdb {\n  /**\n   * Representing root-node identifier\n   */\n  export const rootToken = \"@root\";\n\n  /**\n   * Stored xml-parser instance\n   */\n  let parser: Parser & {\n    parseString: (\n      xmlData: string | Buffer,\n      callback: (err: Error | null, result: unknown) => void,\n    ) => void;\n  };\n\n  /**\n   * Regex for detect read-operator in xml-schema\n   */\n  export const ReadOperatorRe = /\\$\\{@read:([^}]*)}/;\n\n  /**\n   * Returns the XML parser instance.\n   * @returns The XML parser instance.\n   */\n  export function getXmlParser() {\n    if (parser) {\n      return parser;\n    }\n    parser = new xml2js.Parser({\n      explicitArray: false,\n      preserveChildrenOrder: true,\n      explicitChildren: true,\n    });\n    return parser;\n  }\n\n  /**\n   * Parses the XML body into an XdbObject.\n   * @param body - The body containing the XML schema.\n   * @returns The parsed XdbObject.\n   */\n  export function parseXmlBody(body: { schema }) {\n    const schema = body.schema;\n    const actions = schema.$$;\n    const result: XdbObject = {\n      schema: [],\n    };\n    for (const action of actions) {\n      const tagName = action[\"#name\"];\n      const target = action?.$?.target;\n      const read = action?.$?.read;\n      const content = action?.$?.content;\n      const rows = action.$$ ?? [];\n      const obj: XdbAction = {\n        action: tagName,\n        attrs: { target, read, content },\n        rows: [],\n      };\n      for (const row of rows) {\n        const rowObj: XdbRowData = {};\n        for (const item of row.$$) {\n          const itemName = item[\"#name\"];\n          if (item.$) {\n            rowObj[itemName] = {\n              attrs: item.$,\n              value: item._,\n            };\n            if (item.$.key && item.$$) {\n              rowObj[itemName].values = item.$$.map((r) => r._);\n            }\n          } else {\n            rowObj[itemName] = item._;\n          }\n        }\n        obj.rows.push(rowObj);\n      }\n      result.schema.push(obj);\n    }\n    return result;\n  }\n\n  /**\n   * Parses an XML file into an XdbObject.\n   * @param xmlData - The XML data buffer.\n   * @returns A promise that resolves to the parsed XdbObject.\n   */\n  export async function parseXmlFile(xmlData: Buffer): Promise {\n    return new Promise((resolve, reject) => {\n      getXmlParser().parseString(xmlData, async (err, result) => {\n        if (err) {\n          reject(err);\n        } else {\n          const body = parseXmlBody(result as { schema });\n          resolve(body);\n        }\n      });\n    });\n  }\n\n  /**\n   * Removes duplicate objects from an array of XdbDecomposedEntity.\n   * @param array - The array of XdbDecomposedEntity.\n   * @returns The array with duplicates removed.\n   */\n  export function removeDuplicateObjects(\n    array: XdbDecomposedEntity[],\n  ): XdbDecomposedEntity[] {\n    const uniqueObjects: XdbDecomposedEntity[] = [];\n    array.reverse().forEach((obj) => {\n      if (!uniqueObjects.some((uniqueObj) => deepEqual(uniqueObj, obj))) {\n        uniqueObjects.push(obj);\n      }\n    });\n    return uniqueObjects.reverse();\n  }\n\n  /**\n   * Checks if two objects are deeply equal.\n   * @param obj1 - The first object.\n   * @param obj2 - The second object.\n   * @returns A boolean indicating whether the objects are deeply equal.\n   */\n  function deepEqual(obj1: ObjectLiteral, obj2: ObjectLiteral): boolean {\n    if (obj1 === obj2) {\n      return true;\n    }\n    if (\n      typeof obj1 !== \"object\" ||\n      typeof obj2 !== \"object\" ||\n      obj1 === null ||\n      obj2 === null\n    ) {\n      return false;\n    }\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (const key of keys1) {\n      if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/XdbImportService.html":{"url":"classes/XdbImportService.html","title":"class - XdbImportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  XdbImportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.constants.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract class for XML data import services.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                importFromFile\n                            \n                            \n                                    Abstract\n                                importXml\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        importFromFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    importFromFile(fileData: Buffer)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.constants.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileData\n                                            \n                                                        Buffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        importXml\n                        \n                    \n                \n            \n            \n                \n                        \n                    importXml(xml: XdbObject)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.constants.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                xml\n                                            \n                                                            XdbObject\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  XdbAction,\n  XdbDecomposedEntity,\n  XdbExportDto,\n  XdbExportParams,\n  XdbObject,\n  XdbRowData,\n} from \"./xml-data-bridge.types\";\nimport * as xml2js from \"xml2js\";\nimport { Parser } from \"yargs-parser\";\nimport { ObjectLiteral } from \"typeorm\";\n\n/**\n * Abstract class for XML data import services.\n */\nexport abstract class XdbImportService {\n  abstract importXml(xml: XdbObject): Promise;\n\n  abstract importFromFile(fileData: Buffer): Promise;\n}\n/**\n * Abstract class for XML data export services.\n */\nexport abstract class XdbExportService {\n  abstract exportXml(params: XdbExportParams): Promise;\n}\n\nexport namespace Xdb {\n  /**\n   * Representing root-node identifier\n   */\n  export const rootToken = \"@root\";\n\n  /**\n   * Stored xml-parser instance\n   */\n  let parser: Parser & {\n    parseString: (\n      xmlData: string | Buffer,\n      callback: (err: Error | null, result: unknown) => void,\n    ) => void;\n  };\n\n  /**\n   * Regex for detect read-operator in xml-schema\n   */\n  export const ReadOperatorRe = /\\$\\{@read:([^}]*)}/;\n\n  /**\n   * Returns the XML parser instance.\n   * @returns The XML parser instance.\n   */\n  export function getXmlParser() {\n    if (parser) {\n      return parser;\n    }\n    parser = new xml2js.Parser({\n      explicitArray: false,\n      preserveChildrenOrder: true,\n      explicitChildren: true,\n    });\n    return parser;\n  }\n\n  /**\n   * Parses the XML body into an XdbObject.\n   * @param body - The body containing the XML schema.\n   * @returns The parsed XdbObject.\n   */\n  export function parseXmlBody(body: { schema }) {\n    const schema = body.schema;\n    const actions = schema.$$;\n    const result: XdbObject = {\n      schema: [],\n    };\n    for (const action of actions) {\n      const tagName = action[\"#name\"];\n      const target = action?.$?.target;\n      const read = action?.$?.read;\n      const content = action?.$?.content;\n      const rows = action.$$ ?? [];\n      const obj: XdbAction = {\n        action: tagName,\n        attrs: { target, read, content },\n        rows: [],\n      };\n      for (const row of rows) {\n        const rowObj: XdbRowData = {};\n        for (const item of row.$$) {\n          const itemName = item[\"#name\"];\n          if (item.$) {\n            rowObj[itemName] = {\n              attrs: item.$,\n              value: item._,\n            };\n            if (item.$.key && item.$$) {\n              rowObj[itemName].values = item.$$.map((r) => r._);\n            }\n          } else {\n            rowObj[itemName] = item._;\n          }\n        }\n        obj.rows.push(rowObj);\n      }\n      result.schema.push(obj);\n    }\n    return result;\n  }\n\n  /**\n   * Parses an XML file into an XdbObject.\n   * @param xmlData - The XML data buffer.\n   * @returns A promise that resolves to the parsed XdbObject.\n   */\n  export async function parseXmlFile(xmlData: Buffer): Promise {\n    return new Promise((resolve, reject) => {\n      getXmlParser().parseString(xmlData, async (err, result) => {\n        if (err) {\n          reject(err);\n        } else {\n          const body = parseXmlBody(result as { schema });\n          resolve(body);\n        }\n      });\n    });\n  }\n\n  /**\n   * Removes duplicate objects from an array of XdbDecomposedEntity.\n   * @param array - The array of XdbDecomposedEntity.\n   * @returns The array with duplicates removed.\n   */\n  export function removeDuplicateObjects(\n    array: XdbDecomposedEntity[],\n  ): XdbDecomposedEntity[] {\n    const uniqueObjects: XdbDecomposedEntity[] = [];\n    array.reverse().forEach((obj) => {\n      if (!uniqueObjects.some((uniqueObj) => deepEqual(uniqueObj, obj))) {\n        uniqueObjects.push(obj);\n      }\n    });\n    return uniqueObjects.reverse();\n  }\n\n  /**\n   * Checks if two objects are deeply equal.\n   * @param obj1 - The first object.\n   * @param obj2 - The second object.\n   * @returns A boolean indicating whether the objects are deeply equal.\n   */\n  function deepEqual(obj1: ObjectLiteral, obj2: ObjectLiteral): boolean {\n    if (obj1 === obj2) {\n      return true;\n    }\n    if (\n      typeof obj1 !== \"object\" ||\n      typeof obj2 !== \"object\" ||\n      obj1 === null ||\n      obj2 === null\n    ) {\n      return false;\n    }\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (const key of keys1) {\n      if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/XdbRequest.html":{"url":"interfaces/XdbRequest.html","title":"interface - XdbRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  XdbRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.types.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an XML data bridge request.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type, Type as Class } from \"@nestjs/common/interfaces/type.interface\";\nimport { DynamicModule } from \"@nestjs/common/interfaces/modules/dynamic-module.interface\";\nimport { ForwardReference } from \"@nestjs/common/interfaces/modules/forward-reference.interface\";\nimport { ObjectLiteral } from \"typeorm\";\nimport {\n  XdbExportService,\n  XdbImportService,\n} from \"./xml-data-bridge.constants\";\nimport { User } from \"../user/user.types\";\n\n/**\n * Interface representing an XML data bridge request.\n */\nexport interface XdbRequest {\n  target: string;\n  id: string;\n}\n\n/**\n * Type representing a row data value in the XML data bridge.\n */\nexport type XdbRowDataValue = {\n  attrs?: {\n    key?: string;\n    uri?: string;\n    mode?: \"push\";\n  };\n  value?: string;\n  values?: string[];\n};\n\n/**\n * Type representing a row of data in the XML data bridge.\n */\nexport type XdbRowData = {\n  [key: string]: XdbRowDataValue;\n};\n\n/**\n * Type representing a media row in the XML data bridge.\n */\nexport type MediaRow = {\n  name: XdbRowDataValue;\n  code: string;\n  type: string;\n  file: string;\n};\n\n/**\n * Type representing a file row in the XML data bridge.\n */\nexport type FileRow = {\n  name: string;\n  code: string;\n  public: boolean;\n  file: string;\n};\n\n/**\n * Type representing an action in the XML data bridge.\n */\nexport type XdbAction = {\n  action: \"InsertUpdate\" | \"Media\" | \"File\" | \"Remove\" | \"Include\" | \"Query\";\n  attrs: {\n    target?: string;\n    read?: string;\n    content?: string;\n  };\n  rows: Array;\n};\n\n/**\n * Type representing an XML data bridge object.\n */\nexport type XdbObject = {\n  schema: XdbAction[];\n};\n\n/**\n * Options for configuring the XmlDataBridgeModule.\n */\nexport type XdbModuleOptions = {\n  importService: Class;\n  exportService: Class;\n  imports: Array | DynamicModule | Promise | ForwardReference\n  >;\n};\n\n/**\n * Type representing export parameters for the XML data bridge.\n */\nexport type XdbExportParams = {\n  target: string;\n  id: string;\n  depth: number;\n  useFiles: boolean;\n  excludeProperties: string[];\n  user: User;\n};\n\n/**\n * Type representing the export DTO for the XML data bridge.\n */\nexport type XdbExportDto = {\n  file: string;\n};\n\n/**\n * Type representing a decomposed entity in the XML data bridge.\n */\nexport type XdbDecomposedEntity = {\n  metadata: { type: string; fieldName: string; path: string };\n  data: ObjectLiteral | Array;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/XmlDataBridgeController.html":{"url":"controllers/XmlDataBridgeController.html","title":"controller - XmlDataBridgeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  XmlDataBridgeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                xdb\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                export\n                            \n                            \n                                    \n                                    \n                                    Async\n                                import\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                importFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        export\n                        \n                    \n                \n            \n            \n                \n                        \n                    export(body: XdbExportParams, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/export')@ForRoles(Roles.ADMIN)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            XdbExportParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        import\n                        \n                    \n                \n            \n            \n                \n                        \n                    import(body: XdbObject)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/import')@ForRoles(Roles.ROOT)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            XdbObject\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        importFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    importFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/import-file')@UseInterceptors(undefined)@ForRoles(Roles.ROOT)\n                \n            \n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  Body,\n  Controller,\n  Post,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from \"@nestjs/common\";\nimport { FileInterceptor } from \"@nestjs/platform-express\";\nimport { AuthGuard } from \"../../shared/guards/auth.guard\";\nimport {\n  XdbExportService,\n  XdbImportService,\n} from \"./xml-data-bridge.constants\";\nimport { Roles } from \"../../shared/constants\";\nimport { ForRoles } from \"../../shared/decorators/for-roles.decorator\";\nimport { XdbExportParams, XdbObject } from \"./xml-data-bridge.types\";\nimport { NotEmptyPipe } from \"../../shared/pipes/not-empty.pipe\";\nimport { CurrentUser } from \"../../shared/decorators/current-user.decorator\";\nimport { User } from \"../user/user.types\";\n\n@Controller(\"xdb\")\n@UseGuards(AuthGuard)\nexport class XmlDataBridgeController {\n  constructor(\n    private readonly xdbImportService: XdbImportService,\n    private readonly xdbExportService: XdbExportService,\n  ) {}\n\n  @Post(\"/import\")\n  @ForRoles(Roles.ROOT)\n  async import(@Body() body: XdbObject) {\n    return await this.xdbImportService.importXml(body);\n  }\n\n  @Post(\"/import-file\")\n  @UseInterceptors(FileInterceptor(\"file\"))\n  @ForRoles(Roles.ROOT)\n  async importFile(\n    @UploadedFile(\"file\", new NotEmptyPipe(\"file\")) file: Express.Multer.File,\n  ) {\n    return await this.xdbImportService.importFromFile(file.buffer);\n  }\n\n  @Post(\"/export\")\n  @ForRoles(Roles.ADMIN)\n  async export(@Body() body: XdbExportParams, @CurrentUser() user: User) {\n    body.user = user;\n    if (!body.depth) {\n      body.depth = undefined;\n    }\n    return await this.xdbExportService.exportXml(body);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/XmlDataBridgeMiddleware.html":{"url":"injectables/XmlDataBridgeMiddleware.html","title":"injectable - XmlDataBridgeMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  XmlDataBridgeMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.middleware.ts\n        \n\n\n            \n                Description\n            \n            \n                Middleware for parsing XML data from requests.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                parser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                parseXMLFromRequest\n                            \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parseXMLFromRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseXMLFromRequest(req: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.middleware.ts:47\n                        \n                    \n\n\n            \n                \n                        Parses XML data from the request.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe request object.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the parsed XML data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                        \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.middleware.ts:34\n                        \n                    \n\n\n            \n                \n                        Parses XML data from the request and modifies the request body.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe request object.\n\n\n                                            \n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe response object.\n\n\n                                            \n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe next function to call.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        parser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Xdb.getXmlParser()\n                    \n                \n                    \n                        \n                                Defined in lib/common/xml-data-bridge/xml-data-bridge.middleware.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from \"@nestjs/common\";\nimport { NextFunction, Request, Response } from \"express\";\nimport { Xdb } from \"./xml-data-bridge.constants\";\n\n/**\n * Middleware for parsing XML data from requests.\n */\n@Injectable()\nexport class XmlDataBridgeMiddleware implements NestMiddleware {\n  private readonly parser = Xdb.getXmlParser();\n\n  /**\n   * Parses XML data from the request and modifies the request body.\n   * @param req - The request object.\n   * @param res - The response object.\n   * @param next - The next function to call.\n   */\n  async use(req: Request, res: Response, next: NextFunction) {\n    if (req.headers[\"content-type\"] === \"application/xml\") {\n      req.body = await this.parseXMLFromRequest(req);\n      req.body = Xdb.parseXmlBody(req.body);\n    }\n    next();\n  }\n\n  /**\n   * Parses XML data from the request.\n   * @param req - The request object.\n   * @returns A promise that resolves to the parsed XML data.\n   */\n  private parseXMLFromRequest(req: Request): Promise {\n    return new Promise((resolve, reject) => {\n      let xmlData = \"\";\n      req.on(\"data\", (chunk) => {\n        xmlData += chunk;\n      });\n      req.on(\"end\", () => {\n        this.parser.parseString(xmlData, (err, result) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(result as object);\n          }\n        });\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/XmlDataBridgeModule.html":{"url":"modules/XmlDataBridgeModule.html","title":"module - XmlDataBridgeModule","body":"\n                   \n\n\n\n\n    Modules\n    XmlDataBridgeModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/common/xml-data-bridge/xml-data-bridge.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module responsible for import and export XML-configuration.\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.module.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: XdbModuleOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in lib/common/xml-data-bridge/xml-data-bridge.module.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            XdbModuleOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {\n      importService: XmlDataBridgeImportService,\n      exportService: XmlDataBridgeExportService,\n      imports: [\n        LogModule,\n        CacheModule,\n        ExplorerModule.forRoot(),\n        FileModule.forRoot(),\n        MediaModule.forRoot(),\n        UserModule.forRoot(),\n      ],\n    }\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * Copyright 2023 Alexander Kiriliuk\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n */\n\nimport {\n  DynamicModule,\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n} from \"@nestjs/common\";\nimport { XdbModuleOptions } from \"./xml-data-bridge.types\";\nimport { XmlDataBridgeImportService } from \"./xml-data-bridge-import.service\";\nimport { XmlDataBridgeExportService } from \"./xml-data-bridge-export.service\";\nimport { LogModule } from \"../../shared/modules/log/log.module\";\nimport { CacheModule } from \"../../shared/modules/cache/cache.module\";\nimport { ExplorerModule } from \"../explorer/explorer.module\";\nimport { FileModule } from \"../file/file.module\";\nimport { MediaModule } from \"../media/media.module\";\nimport {\n  XdbExportService,\n  XdbImportService,\n} from \"./xml-data-bridge.constants\";\nimport { XmlDataBridgeController } from \"./xml-data-bridge.controller\";\nimport { XmlDataBridgeMiddleware } from \"./xml-data-bridge.middleware\";\nimport { UserModule } from \"../user/user.module\";\n\n/**\n * Module responsible for import and export XML-configuration.\n */\n@Module({})\nexport class XmlDataBridgeModule implements NestModule {\n  static forRoot(\n    options: XdbModuleOptions = {\n      importService: XmlDataBridgeImportService,\n      exportService: XmlDataBridgeExportService,\n      imports: [\n        LogModule,\n        CacheModule,\n        ExplorerModule.forRoot(),\n        FileModule.forRoot(),\n        MediaModule.forRoot(),\n        UserModule.forRoot(),\n      ],\n    },\n  ): DynamicModule {\n    return {\n      module: XmlDataBridgeModule,\n      imports: options.imports,\n      controllers: [XmlDataBridgeController],\n      providers: [\n        {\n          provide: XdbImportService,\n          useClass: options.importService,\n        },\n        {\n          provide: XdbExportService,\n          useClass: options.exportService,\n        },\n      ],\n      exports: [XdbImportService, XdbExportService],\n    };\n  }\n\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(XmlDataBridgeMiddleware).forRoutes(XmlDataBridgeController);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @nestjs/axios : 3.*\n        \n            @nestjs/common : 10.*\n        \n            @nestjs/core : 10.*\n        \n            @nestjs/jwt : 10.*\n        \n            @nestjs/microservices : 10.*\n        \n            @nestjs/passport : 10.*\n        \n            @nestjs/schedule : 4.*\n        \n            adm-zip : 0.5.*\n        \n            axios : 1.*\n        \n            bcrypt : 5.*\n        \n            canvas : 2.11.*\n        \n            class-transformer : 0.5.*\n        \n            class-validator : 0.14.*\n        \n            dotenv : 16.*\n        \n            exifreader : 4.*\n        \n            ffprobe : 1.*\n        \n            ffprobe-static : 3.*\n        \n            file-type : 19.*\n        \n            heic-convert : 2.*\n        \n            imagemin : 7.*\n        \n            imagemin-mozjpeg : 9.*\n        \n            imagemin-pngquant : 9.*\n        \n            ioredis : 5.*\n        \n            music-metadata : 7.*\n        \n            node-redis-warlock : 1.*\n        \n            object-hash : 3.*\n        \n            reflect-metadata : 0.2.*\n        \n            rxjs : 7.*\n        \n            sharp : 0.33.*\n        \n            typeorm : 0.3.*\n        \n            uuid : 9.*\n        \n            xml2js : 0.6.*\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Command   (lib/.../process.constants.ts)\n                        \n                        \n                            LogLevel   (lib/.../process.constants.ts)\n                        \n                        \n                            SortOrder   (lib/.../pageable.types.ts)\n                        \n                        \n                            Status   (lib/.../process.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/common/process/process.constants.ts\n    \n        \n            \n                \n                    \n                        \n                        Command\n                    \n                \n                    \n                        \n                            Enum of possible process commands.\n\n                        \n                    \n                        \n                            \n                                 Register\n                            \n                        \n                        \n                            \n                                Value : process:register\n                            \n                        \n                        \n                            \n                                 Unregister\n                            \n                        \n                        \n                            \n                                Value : process:unregister\n                            \n                        \n                        \n                            \n                                 Start\n                            \n                        \n                        \n                            \n                                Value : process:start\n                            \n                        \n                        \n                            \n                                 Stop\n                            \n                        \n                        \n                            \n                                Value : process:stop\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                    \n                        \n                            Enum of process log levels.\n\n                        \n                    \n                        \n                            \n                                 Log\n                            \n                        \n                        \n                            \n                                Value : LOG\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value : ERROR\n                            \n                        \n                        \n                            \n                                 Warn\n                            \n                        \n                        \n                            \n                                Value : WARN\n                            \n                        \n                        \n                            \n                                 Verbose\n                            \n                        \n                        \n                            \n                                Value : VERBOSE\n                            \n                        \n                        \n                            \n                                 Debug\n                            \n                        \n                        \n                            \n                                Value : DEBUG\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Status\n                    \n                \n                    \n                        \n                            Enum of possible process statuses.\n\n                        \n                    \n                        \n                            \n                                 Execute\n                            \n                        \n                        \n                            \n                                Value : execute\n                            \n                        \n                        \n                            \n                                 Ready\n                            \n                        \n                        \n                            \n                                Value : ready\n                            \n                        \n                        \n                            \n                                 Crashed\n                            \n                        \n                        \n                            \n                                Value : crashed\n                            \n                        \n            \n        \n\n    lib/shared/modules/pageable/pageable.types.ts\n    \n        \n            \n                \n                    \n                        \n                        SortOrder\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n     K-Platform is a framework for the rapid development of modern applications\n\n\nEmbedded platform's modules\n\nExplorer: analyzes the database schema and dynamically updates the admin-panel UI for CRUD operations, paginated displaying of entity data with their relationships etc., providing flexibility and extensibility with TypeORM integration.\nXML data-bridge: automates the data management process, simplifying the tasks of importing and exporting data. Uses specific XML-markup to transfer the state of the database or pinpoint transfer of certain records in tables between different servers.\nBackground processes: module for management of background tasks, providing features like automatic startup, dynamic control, and comprehensive logging. Enabling efficient and reliable handling of recurring tasks through advanced cron-job scheduling and inter-module communication.\nMedia: provides powerful capabilities for working with various types of media files. It supports uploading, thumbnail slicing, automatic creation of optimized copies, as well as storing copies in modern formats such as WEBP. It is able to work with vector images. Stores metadata of files, including extend metadata such as GPS, ICC, EXIF etc.\nFiles: provides easy integration and powerful file management, including uploading, storing in public and private directories. Support storing extended metadata for images, audio and video files.\nUsers: provide scalable functionality for managing system users. Supports password encrypting, user profile management with role-based access control.\nAuthorization: provides a OAuth 2.0 mechanism for authentication and authorization of users in the system, as well as protection against brute-force attacks.\nCAPTCHA: represents two built-in CAPTCHA-types: Google reCAPTCHA and standard graphical CAPTCHA. You can also extend the module with your own CAPTCHA implementation.\nConfiguration: allows you to effectively manage the application settings using .properties files, supports real-time dynamic configuration change and type safety through automatic generation of TypeScript files. Also supports local and global overrides, which allow you to flexibly adapt the configuration for different environments.\n\n\nAdmin-panel of application is based on Angular,\nplease read more details about here.\n\nDocumentation\nPlease navigate to guides folder for read detailed documentations of application and also visit codebase documentations website\nFast start\nBefore installing the platform, make sure that you have Node.js, Redis installed and one of the supported DBMS.\nNow let's set up the configuration.\nThe connection settings to Redis are stored in the default.env, that file located in the root directory, use the properties REDIS_HOST, REDIS_PORT, REDIS_DB, REDIS_USER, REDIS_PASSWORD. You can change it or create a local.env file to override some properties on your local machine.\nNext, go to the ./examples/web-server directory, here you will find the db.properties file. Inside that, you will find the DBMS connection settings, you can change it or create a local.properties file to override some properties on your local machine (the names of all properties in the file match the TypeORM data source options).\nNow that all the preinstallation recommendations are done, you can install the platform.\n\nRun npm i command for install all dependencies\nRun npm run init:web-app for generate configuration files, build sources and fill cache DB, and import default state of DB from default XML-configuration\nRun  npm run start:web-app for start example web-application server\n\nNow you can proceed to the installation of the client application, which is an admin panel for system management. To do this, visit the repository @k-platform/client.\n\nRecommendation: use Postgres or MySQL as a DBMS, and in the future you can replace Radius with the desired to if necessary by writing your own custom interaction service.\n\n\nNote: all modules has been tested only with Postgres and MySQL database systems.\n\nBased on\n\n    \n\n       \n\n    \n\n       \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\nExample :  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.   Copyright 2023 Alexander Kiriliuk\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\nExample :   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CacheModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CaptchaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExplorerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocaleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LogModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediaModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessagesBrokerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MsClientModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProcessModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RedisModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WarlockModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        XmlDataBridgeModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CacheModule\n\n\n\ncluster_CacheModule_imports\n\n\n\ncluster_CacheModule_exports\n\n\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_exports\n\n\n\ncluster_CategoryModule_providers\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_imports\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_ConfigModule_providers\n\n\n\ncluster_LocaleModule\n\n\n\ncluster_LocaleModule_exports\n\n\n\ncluster_LocaleModule_providers\n\n\n\ncluster_MessagesBrokerModule\n\n\n\ncluster_MsClientModule\n\n\n\ncluster_ProcessModule\n\n\n\ncluster_ProcessModule_imports\n\n\n\ncluster_ProcessModule_exports\n\n\n\ncluster_ProcessModule_providers\n\n\n\n\nLogModule\n\nLogModule\n\n\n\nCacheModule\n\nCacheModule\n\nCacheModule -->\n\nLogModule->CacheModule\n\n\n\n\n\nCategoryModule\n\nCategoryModule\n\nCategoryModule -->\n\nLogModule->CategoryModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nConfigModule -->\n\nLogModule->ConfigModule\n\n\n\n\n\nMsClientModule\n\nMsClientModule\n\nMsClientModule -->\n\nLogModule->MsClientModule\n\n\n\n\n\nProcessModule\n\nProcessModule\n\nProcessModule -->\n\nLogModule->ProcessModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nCacheModule -->\n\nRedisModule->CacheModule\n\n\n\n\n\nMessagesBrokerModule\n\nMessagesBrokerModule\n\nMessagesBrokerModule -->\n\nRedisModule->MessagesBrokerModule\n\n\n\n\n\nWarlockModule\n\nWarlockModule\n\nWarlockModule -->\n\nRedisModule->WarlockModule\n\n\n\n\n\nCacheService \n\nCacheService \n\nCacheService  -->\n\nCacheModule->CacheService \n\n\n\nConfigModule -->\n\nCacheModule->ConfigModule\n\n\n\nProcessModule -->\n\nCacheModule->ProcessModule\n\n\n\n\n\nCategoryService \n\nCategoryService \n\nCategoryService  -->\n\nCategoryModule->CategoryService \n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nConfigModule -->\n\nUserModule->ConfigModule\n\n\n\nProcessModule -->\n\nUserModule->ProcessModule\n\n\n\n\n\nConfigService \n\nConfigService \n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nConfigService\n\nConfigService\n\nConfigModule -->\n\nConfigService->ConfigModule\n\n\n\n\n\nLocaleService \n\nLocaleService \n\n\n\nLocaleModule\n\nLocaleModule\n\nLocaleService  -->\n\nLocaleModule->LocaleService \n\n\n\n\n\nLocaleService\n\nLocaleService\n\nLocaleModule -->\n\nLocaleService->LocaleModule\n\n\n\nProcessModule -->\n\nMessagesBrokerModule->ProcessModule\n\n\n\nProcessModule -->\n\nWarlockModule->ProcessModule\n\n\n\n\n\nProcessManagerService \n\nProcessManagerService \n\nProcessManagerService  -->\n\nProcessModule->ProcessManagerService \n\n\n\n\n\nProcessManagerService\n\nProcessManagerService\n\nProcessModule -->\n\nProcessManagerService->ProcessModule\n\n\n\n\n\nProcessRegisterService\n\nProcessRegisterService\n\nProcessModule -->\n\nProcessRegisterService->ProcessModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    27 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    22 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    43 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    40 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : Framework for the rapid development of modern applications\n        \n            License : Apache-2.0\n        \n            Author : Alexander Kiriliuk\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthModuleOptions   (lib/.../auth.types.ts)\n                        \n                        \n                            CaptchaModuleOptions   (lib/.../captcha.types.ts)\n                        \n                        \n                            CaptchaResponse   (lib/.../captcha.types.ts)\n                        \n                        \n                            ColumnDataType   (lib/.../explorer.types.ts)\n                        \n                        \n                            ExplorerModuleOptions   (lib/.../explorer.types.ts)\n                        \n                        \n                            ExplorerSelectParams   (lib/.../explorer.types.ts)\n                        \n                        \n                            ExplorerTargetParams   (lib/.../explorer.types.ts)\n                        \n                        \n                            FileModuleOptions   (lib/.../file.types.ts)\n                        \n                        \n                            FileRow   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            MediaModuleOptions   (lib/.../media.types.ts)\n                        \n                        \n                            MediaRow   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            MsClientOptions   (lib/.../ms-client.types.ts)\n                        \n                        \n                            UserModuleOptions   (lib/.../user.types.ts)\n                        \n                        \n                            Variation   (lib/.../explorer.constants.ts)\n                        \n                        \n                            WarlockFn   (lib/.../warlock.types.ts)\n                        \n                        \n                            XdbAction   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbDecomposedEntity   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbExportDto   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbExportParams   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbModuleOptions   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbObject   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbRowData   (lib/.../xml-data-bridge.types.ts)\n                        \n                        \n                            XdbRowDataValue   (lib/.../xml-data-bridge.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/common/auth/auth.types.ts\n    \n    \n        \n            \n                \n                    \n                    AuthModuleOptions\n                \n            \n            \n                \n                    Options for configuring the authentication module.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/captcha/captcha.types.ts\n    \n    \n        \n            \n                \n                    \n                    CaptchaModuleOptions\n                \n            \n            \n                \n                    Options for configuring the CAPTCHA module.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CaptchaResponse\n                \n            \n            \n                \n                    Type representing a CAPTCHA response for client side.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/explorer/explorer.types.ts\n    \n    \n        \n            \n                \n                    \n                    ColumnDataType\n                \n            \n            \n                \n                    Type representing embedded data types for a column.\n\n                \n            \n            \n                \n                        \"string\" | \"number\" | \"boolean\" | \"date\" | \"reference\" | \"unknown\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExplorerModuleOptions\n                \n            \n            \n                \n                    Options for configuring the Explorer module.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExplorerSelectParams\n                \n            \n            \n                \n                    Type representing selection parameters for an explorer entity.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExplorerTargetParams\n                \n            \n            \n                \n                    Type representing parameters for find explorer targets\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/file/file.types.ts\n    \n    \n        \n            \n                \n                    \n                    FileModuleOptions\n                \n            \n            \n                \n                    Options for configuring the FileModule.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/xml-data-bridge/xml-data-bridge.types.ts\n    \n    \n        \n            \n                \n                    \n                    FileRow\n                \n            \n            \n                \n                    Type representing a file row in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MediaRow\n                \n            \n            \n                \n                    Type representing a media row in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbAction\n                \n            \n            \n                \n                    Type representing an action in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbDecomposedEntity\n                \n            \n            \n                \n                    Type representing a decomposed entity in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbExportDto\n                \n            \n            \n                \n                    Type representing the export DTO for the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbExportParams\n                \n            \n            \n                \n                    Type representing export parameters for the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbModuleOptions\n                \n            \n            \n                \n                    Options for configuring the XmlDataBridgeModule.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbObject\n                \n            \n            \n                \n                    Type representing an XML data bridge object.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbRowData\n                \n            \n            \n                \n                    Type representing a row of data in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    XdbRowDataValue\n                \n            \n            \n                \n                    Type representing a row data value in the XML data bridge.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/media/media.types.ts\n    \n    \n        \n            \n                \n                    \n                    MediaModuleOptions\n                \n            \n            \n                \n                    Options for configuring the MediaModule.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/shared/modules/ms-client/ms-client.types.ts\n    \n    \n        \n            \n                \n                    \n                    MsClientOptions\n                \n            \n            \n                \n                    Type definition for microservices client options.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/user/user.types.ts\n    \n    \n        \n            \n                \n                    \n                    UserModuleOptions\n                \n            \n            \n                \n                    Options for configuring the UserModule.\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    lib/common/explorer/explorer.constants.ts\n    \n    \n        \n            \n                \n                    \n                    Variation\n                \n            \n            \n                \n                    Type representing a fetch-mode for explorer entity.\n\n                \n            \n            \n                \n                        \"section\" | \"object\"\n\n                \n            \n        \n    \n    lib/shared/modules/warlock/warlock.types.ts\n    \n    \n        \n            \n                \n                    \n                    WarlockFn\n                \n            \n            \n                \n                    Type definition for the warlock function used for locking mechanisms.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCESS_TOKEN_ERROR_MSG   (lib/.../auth.constants.ts)\n                        \n                        \n                            AccessToken   (lib/.../access-token.decorator.ts)\n                        \n                        \n                            AllowedForMetadataKey   (lib/.../for-roles.decorator.ts)\n                        \n                        \n                            AUTH_ACCESS_TOKEN_PREFIX   (lib/.../auth.constants.ts)\n                        \n                        \n                            AUTH_JWT_CACHE_PREFIX   (lib/.../auth.constants.ts)\n                        \n                        \n                            AUTH_REFRESH_TOKEN_PREFIX   (lib/.../auth.constants.ts)\n                        \n                        \n                            BODY_TOKEN   (lib/.../xml-data-bridge-file-schema.ts)\n                        \n                        \n                            BRUTEFORCE_JWT_CACHE_PREFIX   (lib/.../auth.constants.ts)\n                        \n                        \n                            bruteForceIPKey   (lib/.../auth.constants.ts)\n                        \n                        \n                            bruteForceLoginKey   (lib/.../auth.constants.ts)\n                        \n                        \n                            CAPTCHA_CACHE_PREFIX   (lib/.../captcha.constants.ts)\n                        \n                        \n                            CATEGORY_RELATIONS   (lib/.../category.constants.ts)\n                        \n                        \n                            CONFIG_CACHE_PREFIX   (lib/.../config.constants.ts)\n                        \n                        \n                            CONFIG_FILE_EXT_PATTERN   (lib/.../config.constants.ts)\n                        \n                        \n                            CurrentUser   (lib/.../current-user.decorator.ts)\n                        \n                        \n                            DEFAULT_EXPLORER_MODULE_DEPS   (lib/.../explorer.constants.ts)\n                        \n                        \n                            DEFAULT_MEDIA_QUALITY   (lib/.../media.constants.ts)\n                        \n                        \n                            DEFAULT_MEDIA_TYPE   (lib/.../media.constants.ts)\n                        \n                        \n                            ENTITY_SAVE_HANDLER   (lib/.../explorer.constants.ts)\n                        \n                        \n                            FILES_ENCODING   (lib/.../config.constants.ts)\n                        \n                        \n                            fileTypeModule   (lib/.../files.utils.ts)\n                        \n                        \n                            ForRoles   (lib/.../for-roles.decorator.ts)\n                        \n                        \n                            GEN_SRC_DIR   (lib/.../config.constants.ts)\n                        \n                        \n                            InitConfig   (lib/.../config.init-fn.ts)\n                        \n                        \n                            jwtAccessTokenKey   (lib/.../auth.constants.ts)\n                        \n                        \n                            jwtRefreshTokenKey   (lib/.../auth.constants.ts)\n                        \n                        \n                            KP_PROPERTIES_FILE_NAME   (lib/.../config.constants.ts)\n                        \n                        \n                            LOCAL_PROPERTIES_FILE_NAME   (lib/.../config.constants.ts)\n                        \n                        \n                            LOGGER   (lib/.../log.constants.ts)\n                        \n                        \n                            MEDIA_RELATIONS   (lib/.../media.constants.ts)\n                        \n                        \n                            MEDIA_TYPE_RELATIONS   (lib/.../media.constants.ts)\n                        \n                        \n                            MESSAGES_BROKER   (lib/.../messages-broker.constants.ts)\n                        \n                        \n                            MS_CLIENT   (lib/.../ms-client.constants.ts)\n                        \n                        \n                            MS_EXCEPTION_ID   (lib/.../constants.ts)\n                        \n                        \n                            MSG_BUS   (lib/.../ms-client.constants.ts)\n                        \n                        \n                            ORIGINAL   (lib/.../media.constants.ts)\n                        \n                        \n                            parser   (lib/.../xml-data-bridge.constants.ts)\n                        \n                        \n                            PROPERTIES_FILE_EXT_PATTERN   (lib/.../config.constants.ts)\n                        \n                        \n                            ReadOperatorRe   (lib/.../xml-data-bridge.constants.ts)\n                        \n                        \n                            REDIS_CLIENT   (lib/.../cache.constants.ts)\n                        \n                        \n                            REFRESH_TOKEN_ERROR_MSG   (lib/.../auth.constants.ts)\n                        \n                        \n                            REGISTERED_PROCESSES   (lib/.../process.constants.ts)\n                        \n                        \n                            REQUEST_PROPS   (lib/.../constants.ts)\n                        \n                        \n                            rootToken   (lib/.../xml-data-bridge.constants.ts)\n                        \n                        \n                            SimpleJsonTransformer   (lib/.../simple-json.transformer.ts)\n                        \n                        \n                            SVG   (lib/.../media.constants.ts)\n                        \n                        \n                            TARGET_RELATIONS_BASIC   (lib/.../explorer.constants.ts)\n                        \n                        \n                            TARGET_RELATIONS_FULL   (lib/.../explorer.constants.ts)\n                        \n                        \n                            TARGET_RELATIONS_OBJECT   (lib/.../explorer.constants.ts)\n                        \n                        \n                            TARGET_RELATIONS_SECTION   (lib/.../explorer.constants.ts)\n                        \n                        \n                            THUMB   (lib/.../media.constants.ts)\n                        \n                        \n                            UNKNOWN_IP   (lib/.../auth.constants.ts)\n                        \n                        \n                            USER_RELATIONS   (lib/.../user.constants.ts)\n                        \n                        \n                            WARLOCK   (lib/.../warlock.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/common/auth/auth.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ACCESS_TOKEN_ERROR_MSG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"ERR_TOKEN_A\"\n                    \n                \n\n            \n                \n                    Error message for access token related errors.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_ACCESS_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"access_token\"\n                    \n                \n\n            \n                \n                    Prefix for access token cache keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_JWT_CACHE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"jwt\"\n                    \n                \n\n            \n                \n                    Prefix for JWT cache keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_REFRESH_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"refresh_token\"\n                    \n                \n\n            \n                \n                    Prefix for refresh token cache keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BRUTEFORCE_JWT_CACHE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"bruteforce\"\n                    \n                \n\n            \n                \n                    Prefix for brute force protection cache keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bruteForceIPKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (ipAddress: string) =>\n  `${BRUTEFORCE_JWT_CACHE_PREFIX}:ip:${ipAddress}`\n                    \n                \n\n            \n                \n                    Generates a cache key for tracking brute force login attempts by IP address.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bruteForceLoginKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (login: string) =>\n  `${BRUTEFORCE_JWT_CACHE_PREFIX}:login:${login}`\n                    \n                \n\n            \n                \n                    Generates a cache key for tracking brute force login attempts by login.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtAccessTokenKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (accessToken: string) => {\n  return `${AUTH_JWT_CACHE_PREFIX}:${AUTH_ACCESS_TOKEN_PREFIX}:${accessToken}`;\n}\n                    \n                \n\n            \n                \n                    Generates a cache key for an access token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jwtRefreshTokenKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  accessToken: string,\n  refreshToken: string,\n) => {\n  return `${AUTH_JWT_CACHE_PREFIX}:${AUTH_REFRESH_TOKEN_PREFIX}:${accessToken}:${refreshToken}`;\n}\n                    \n                \n\n            \n                \n                    Generates a cache key for a refresh token.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REFRESH_TOKEN_ERROR_MSG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"ERR_TOKEN_R\"\n                    \n                \n\n            \n                \n                    Error message for refresh token related errors.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UNKNOWN_IP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"unknown\"\n                    \n                \n\n            \n                \n                    Placeholder for unknown IP addresses.\n\n                \n            \n\n        \n    \n\n    lib/shared/decorators/access-token.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AccessToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request[REQUEST_PROPS.accessToken];\n  },\n)\n                    \n                \n\n            \n                \n                    A custom decorator for extracting access token from a request.\n\n                \n            \n\n        \n    \n\n    lib/shared/decorators/for-roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AllowedForMetadataKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"for_roles\"\n                    \n                \n\n            \n                \n                    A constant string key used for role-based access control metadata.\nThis key is used to annotate routes or controllers with the roles allowed to access them.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ForRoles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: string[]) =>\n  SetMetadata(AllowedForMetadataKey, roles)\n                    \n                \n\n            \n                \n                    ForRoles custom decorator for defining roles allowed to access a route.\n\n                \n            \n\n        \n    \n\n    lib/common/xml-data-bridge/xml-data-bridge-file-schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BODY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `%%%body%%%`\n                    \n                \n\n            \n                \n                    A placeholder string used for tokenizing the body content within templates.\nThis token is used to dynamically replace or insert content in XML or other templated strings.\n\n                \n            \n\n        \n    \n\n    lib/common/captcha/captcha.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CAPTCHA_CACHE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"captcha\"\n                    \n                \n\n            \n                \n                    The prefix used for storing CAPTCHA data.\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/category/category.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CATEGORY_RELATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  \"icon\",\n  \"icon.name\",\n  \"icon.name.lang\",\n  \"icon.files\",\n  \"icon.files.format\",\n  \"icon.type\",\n  \"icon.type.ext\",\n  \"name\",\n  \"name.lang\",\n]\n                    \n                \n\n            \n                \n                    An array defining the relations to be loaded with the Category entity.\n\n                \n            \n\n        \n    \n\n    lib/common/config/config.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CONFIG_CACHE_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"config\"\n                    \n                \n\n            \n                \n                    The prefix used for storing configuration items.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CONFIG_FILE_EXT_PATTERN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \".config.ts\"\n                    \n                \n\n            \n                \n                    The pattern for configuration file extensions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FILES_ENCODING\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"utf-8\"\n                    \n                \n\n            \n                \n                    The encoding used for reading and writing configuration files.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GEN_SRC_DIR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"gen-src\"\n                    \n                \n\n            \n                \n                    The directory where generated source files are stored.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        KP_PROPERTIES_FILE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"kp.properties\"\n                    \n                \n\n            \n                \n                    The name of the kp properties file.\nIt is assumed that this is the main configuration file, located in the root of the project\nand can override the properties of any .properties in the entire project\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LOCAL_PROPERTIES_FILE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"local.properties\"\n                    \n                \n\n            \n                \n                    The name of the local properties file\nIt is assumed that such files override neighboring ones .properties files and are out of version control.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PROPERTIES_FILE_EXT_PATTERN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \".properties\"\n                    \n                \n\n            \n                \n                    The pattern for properties file extensions.\n\n                \n            \n\n        \n    \n\n    lib/shared/decorators/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request[REQUEST_PROPS.currentUser];\n  },\n)\n                    \n                \n\n            \n                \n                    A custom decorator for extracting the current user from a request.\n\n                \n            \n\n        \n    \n\n    lib/common/explorer/explorer.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_EXPLORER_MODULE_DEPS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial\n\n                    \n                \n                \n                    \n                        Default value : {\n    service: BasicExplorerService,\n    controller: ExplorerController,\n  }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ENTITY_SAVE_HANDLER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"ENTITY_SAVE_HANDLER\")\n                    \n                \n\n            \n                \n                    Token for injecting entity save handler.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_RELATIONS_BASIC\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"name\",\n    \"name.lang\",\n    \"description\",\n    \"description.lang\",\n    \"icon\",\n    \"icon.name\",\n    \"icon.name.lang\",\n    \"icon.files\",\n    \"icon.files.format\",\n    \"icon.type\",\n    \"icon.type.ext\",\n  ]\n                    \n                \n\n            \n                \n                    Basic target relations for entities.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_RELATIONS_FULL\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"name\",\n    \"name.lang\",\n    \"description\",\n    \"description.lang\",\n    \"icon\",\n    \"icon.name\",\n    \"icon.name.lang\",\n    \"icon.files\",\n    \"icon.files.format\",\n    \"icon.type\",\n    \"icon.type.ext\",\n    \"columns\",\n    \"columns.name\",\n    \"columns.name.lang\",\n    \"columns.description\",\n    \"columns.description.lang\",\n    \"columns.objectRenderer\",\n    \"columns.objectRenderer.name\",\n    \"columns.objectRenderer.name.lang\",\n    \"columns.objectRenderer.description\",\n    \"columns.objectRenderer.description.lang\",\n    \"columns.sectionRenderer\",\n    \"columns.sectionRenderer.name\",\n    \"columns.sectionRenderer.name.lang\",\n    \"columns.sectionRenderer.description\",\n    \"columns.sectionRenderer.description.lang\",\n    \"columns.tab\",\n    \"columns.tab.name\",\n    \"columns.tab.name.lang\",\n    \"actions\",\n    \"actions.name\",\n    \"actions.name.lang\",\n    \"actions.description\",\n    \"actions.description.lang\",\n    \"canRead\",\n    \"canRead.name\",\n    \"canRead.name.lang\",\n    \"canWrite\",\n    \"canWrite.name\",\n    \"canWrite.name.lang\",\n  ]\n                    \n                \n\n            \n                \n                    Full target relations for entities.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_RELATIONS_OBJECT\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"name\",\n    \"name.lang\",\n    \"icon\",\n    \"icon.name\",\n    \"icon.name.lang\",\n    \"icon.files\",\n    \"icon.files.format\",\n    \"icon.type\",\n    \"icon.type.ext\",\n    \"columns\",\n    \"columns.name\",\n    \"columns.name.lang\",\n    \"columns.objectRenderer\",\n    \"columns.objectRenderer.name\",\n    \"columns.objectRenderer.name.lang\",\n    \"columns.objectRenderer.description\",\n    \"columns.objectRenderer.description.lang\",\n    \"columns.tab\",\n    \"columns.tab.name\",\n    \"columns.tab.name.lang\",\n    \"actions\",\n    \"actions.name\",\n    \"actions.name.lang\",\n    \"actions.description\",\n    \"actions.description.lang\",\n  ]\n                    \n                \n\n            \n                \n                    Target relations for object-entities.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_RELATIONS_SECTION\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"name\",\n    \"name.lang\",\n    \"icon\",\n    \"icon.name\",\n    \"icon.name.lang\",\n    \"icon.files\",\n    \"icon.files.format\",\n    \"icon.type\",\n    \"icon.type.ext\",\n    \"columns\",\n    \"columns.name\",\n    \"columns.name.lang\",\n    \"columns.sectionRenderer\",\n    \"columns.sectionRenderer.name\",\n    \"columns.sectionRenderer.name.lang\",\n    \"columns.sectionRenderer.description\",\n    \"columns.sectionRenderer.description.lang\",\n    \"actions\",\n    \"actions.name\",\n    \"actions.name.lang\",\n    \"actions.description\",\n    \"actions.description.lang\",\n  ]\n                    \n                \n\n            \n                \n                    Target relations for section-entities.\n\n                \n            \n\n        \n    \n\n    lib/common/media/media.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_MEDIA_QUALITY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 78\n                    \n                \n\n            \n                \n                    Default media quality value.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_MEDIA_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"default\"\n                    \n                \n\n            \n                \n                    Default media type code.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MEDIA_RELATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  \"name\",\n  \"name.lang\",\n  \"type\",\n  \"type.formats\",\n  \"type.ext\",\n  \"files\",\n  \"files.format\",\n]\n                    \n                \n\n            \n                \n                    Array containing relations for media.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MEDIA_TYPE_RELATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"ext\", \"formats\"]\n                    \n                \n\n            \n                \n                    Array containing relations for media type.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ORIGINAL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"original\"\n                    \n                \n\n            \n                \n                    Represents the original media format.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SVG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"svg\"\n                    \n                \n\n            \n                \n                    Represents the SVG media extension.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        THUMB\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"thumb\"\n                    \n                \n\n            \n                \n                    Represents the thumbnail media format.\n\n                \n            \n\n        \n    \n\n    lib/shared/utils/files.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fileTypeModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {} as { lib: typeof import(\"file-type\") }\n                    \n                \n\n            \n                \n                    Object to hold the dynamically imported file-type module.\n\n                \n            \n\n        \n    \n\n    lib/common/config/config.init-fn.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        InitConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const app = await NestFactory.createApplicationContext(ConfigModule);\n  await app.init();\n  const logger: Logger = app.select(LogModule).get(LOGGER);\n  EnvLoader.loadEnvironment(logger);\n  const configService = app.select(ConfigModule).get(ConfigService);\n  const genCnfDir = `${process.cwd()}/${process.env.CONFIG_SRC_DIR}`;\n  await configService.initWithPropertiesFiles(genCnfDir);\n  await app.close();\n  process.exit(0);\n}\n                    \n                \n\n            \n                \n                    Asynchronously initializes the application context with the ConfigModule,\nloads environment variables, and initializes the configuration service with .properties files.\nThis function used for initialize config store\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/log/log.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOGGER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"LOGGER_SERVICE\")\n                    \n                \n\n            \n                \n                    Symbol used as a token for the LogService.\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/messages-broker/messages-broker.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MESSAGES_BROKER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"MSG_BROKER\")\n                    \n                \n\n            \n                \n                    Symbol used as a token for injecting the MessagesBrokerService.\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/ms-client/ms-client.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MS_CLIENT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"MS_CLIENT\")\n                    \n                \n\n            \n                \n                    Symbol used as a token for injecting the microservices' client.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MSG_BUS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"MSG_BUS\")\n                    \n                \n\n            \n                \n                    Symbol used as a token for injecting the message bus.\n\n                \n            \n\n        \n    \n\n    lib/shared/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MS_EXCEPTION_ID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"MsException\"\n                    \n                \n\n            \n                \n                    A constant representing the exception identifier for microservices.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REQUEST_PROPS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * @property accessToken\n   * The property name for storing the access token in the request.\n   */\n  accessToken: \"accessToken\",\n\n  /**\n   * @property currentUser\n   * The property name for storing the current user in the request.\n   */\n  currentUser: \"currentUser\",\n}\n                    \n                \n\n            \n                \n                    An object containing properties used for request handling.\n\n                \n            \n\n        \n    \n\n    lib/common/xml-data-bridge/xml-data-bridge.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parser\n                        \n                    \n                \n            \n\n            \n                \n                    Stored xml-parser instance\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReadOperatorRe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : /\\$\\{@read:([^}]*)}/\n                    \n                \n\n            \n                \n                    Regex for detect read-operator in xml-schema\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rootToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"@root\"\n                    \n                \n\n            \n                \n                    Representing root-node identifier\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/cache/cache.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REDIS_CLIENT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"REDIS_CLIENT\")\n                    \n                \n\n            \n                \n                    A symbol used for injecting the Redis client.\n\n                \n            \n\n        \n    \n\n    lib/common/process/process.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REGISTERED_PROCESSES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n\n            \n                \n                    Store for registered processes\n\n                \n            \n\n        \n    \n\n    lib/shared/transformers/simple-json.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SimpleJsonTransformer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValueTransformer\n\n                    \n                \n                \n                    \n                        Default value : {\n  from(value: string | object) {\n    if (typeof value === \"string\") {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return undefined;\n      }\n    }\n    return value;\n  },\n  to(value: object) {\n    return value;\n  },\n}\n                    \n                \n\n            \n                \n                    A ValueTransformer for transforming JSON data in a database column.\nThis transformer is used to automatically parse JSON strings from the database into JavaScript objects and vice versa.\n\n                \n            \n\n        \n    \n\n    lib/common/user/user.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USER_RELATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  \"avatar\",\n  \"avatar.name\",\n  \"avatar.name.lang\",\n  \"avatar.files\",\n  \"avatar.files.format\",\n  \"avatar.type\",\n  \"avatar.type.ext\",\n  \"roles\",\n  \"roles.name\",\n  \"roles.name.lang\",\n]\n                    \n                \n\n            \n                \n                    Array of user entity relations.\n\n                \n            \n\n        \n    \n\n    lib/shared/modules/warlock/warlock.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        WARLOCK\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol(\"WARLOCK\")\n                    \n                \n\n            \n                \n                    Symbol used as a token for injecting the warlock mechanism.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties.html":{"url":"additional-documentation/properties.html","title":"additional-page - Properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCommon configuration file\nThe kp.properties configuration file is the main configuration file that overrides any configuration properties in the project. No .config.ts file will be generated for this file.\nProperties\n\nkp.tmp.dir\n\nDescription: Path to the app temporary folder.\nType: string\nExample: /static/tmp\n\n\nkp.static.files\n\nDescription: Path to store static files (like media, files, etc.).\nType: string\nExample: /static\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/kp.properties.html":{"url":"additional-documentation/properties/kp.properties.html","title":"additional-page - kp.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCommon configuration file\nThe kp.properties configuration file is the main configuration file that overrides any configuration properties in the project. No .config.ts file will be generated for this file.\nProperties\n\nkp.tmp.dir\n\nDescription: Path to the app temporary folder.\nType: string\nExample: /static/tmp\n\n\nkp.static.files\n\nDescription: Path to store static files (like media, files, etc.).\nType: string\nExample: /static\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/auth.properties.html":{"url":"additional-documentation/properties/auth.properties.html","title":"additional-page - auth.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization configuration\nThe auth.properties configuration file contains settings for authentication and authorization using JSON Web Tokens (JWT).\n\nauth.jwt.secret\n\nDescription: The secret key used to sign the JWT.\nType: string\nExample: jwt_secret_key\n\n\nauth.access.token.expiration\n\nDescription: The lifetime of the access token.\nType: number\nExample: 600\n\n\nNote: The access token will be valid for 10 minutes (600 seconds).\n\nauth.refresh.token.expiration\n\nDescription: The lifetime of the update token.\nType: number\nExample: 3600\n\n\nNote: The upgrade token will be valid for 1 hour (600 seconds * 6).\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/bruteforce.properties.html":{"url":"additional-documentation/properties/bruteforce.properties.html","title":"additional-page - bruteforce.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBrute force protection configuration\nThe bruteforce.properties configuration file contains settings for protecting against brute force attacks.\n\nbruteforce.enabled\n\nDescription: Enables or disables brute force protection.\nType: boolean\nExample: true\n\n\nbruteforce.max.attempts\n\nDescription: Maximum number of login attempts before blocking.\nType: number\nExample: 3\n\n\nbruteforce.block.duration\n\nDescription: Duration for which a user is blocked after exceeding the maximum number of attempts.\nType: number\nExample: 300\nNote: The user will be blocked for 5 minutes (300 seconds).\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/captcha.properties.html":{"url":"additional-documentation/properties/captcha.properties.html","title":"additional-page - captcha.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCAPTCHA Configuration\nThe captcha.properties configuration file contains settings for CAPTCHA generation and validation.\n\ncaptcha.enabled\n\nDescription: Boolean flag indicating if CAPTCHA is enabled.\nType: boolean\nExample: true\n\n\ncaptcha.expiration\n\nDescription: Expiration time for CAPTCHA entries.\nType: number\nExample: 300\nNote: The CAPTCHA will be valid for 5 minutes (300 seconds).\n\n\ncaptcha.font.path\n\nDescription: Path to the font file used for graphical CAPTCHA.\nType: string\nExample: /lib/common/captcha/montserrat.ttf\n\n\ncaptcha.font.family\n\nDescription: Font family used for graphical CAPTCHA.\nType: string\nExample: Montserrat\n\n\ncaptcha.type\n\nDescription: Type of CAPTCHA to be used.\nType: string\nExample: default\n\n\ncaptcha.google.public.key\n\nDescription: Public key for Google reCAPTCHA.\nType: string\nExample: abc123456\n\n\ncaptcha.google.secret.key\n\nDescription: Secret key for Google reCAPTCHA.\nType: string\nExample: abc123456\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/file.properties.html":{"url":"additional-documentation/properties/file.properties.html","title":"additional-page - file.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFiles configuration\nThe file.properties configuration file contains settings for files store\n\nfile.public.dir\n\nDescription: Path stored public files\nType: string\nExample: /static/file\n\n\nfile.private.dir\n\nDescription: Path stored private files\nType: number\nExample: /static/private/file\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/properties/media.properties.html":{"url":"additional-documentation/properties/media.properties.html","title":"additional-page - media.properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMedia Configuration\nThe media.properties configuration file contains settings for managing the directories where public and private media files are stored.\n\nmedia.public.dir\n\nDescription: The directory where public media files are stored.\nType: string\nExample: /static/media\nNote: This directory is accessible to all users and serves public media content.\n\n\nmedia.private.dir\n\nDescription: The directory where private media files are stored.\nType: string\nExample: /static/private/media\nNote: This directory is restricted and serves private media content only accessible to authorized users.\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
